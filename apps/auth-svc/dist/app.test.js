'use strict';
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __esm = (fn, res) =>
  function __init() {
    return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])((fn = 0))), res;
  };
var __commonJS = (cb, mod) =>
  function __require() {
    return (
      mod ||
        (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod),
      mod.exports
    );
  };
var __export = (target, all2) => {
  for (var name in all2)
    __defProp(target, name, { get: all2[name], enumerable: true });
};
var __copyProps = (to2, from, except, desc) => {
  if ((from && typeof from === 'object') || typeof from === 'function') {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to2, key) && key !== except)
        __defProp(to2, key, {
          get: () => from[key],
          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable,
        });
  }
  return to2;
};
var __toESM = (mod, isNodeMode, target) => (
  (target = mod != null ? __create(__getProtoOf(mod)) : {}),
  __copyProps(
    // If the importer is in node compatibility mode or this is not an ESM
    // file that has been converted to a CommonJS file using a Babel-
    // compatible transform (i.e. "__esModule" has not been set), then set
    // "default" to the CommonJS "module.exports" for node compatibility.
    isNodeMode || !mod || !mod.__esModule
      ? __defProp(target, 'default', { value: mod, enumerable: true })
      : target,
    mod
  )
);
var __toCommonJS = (mod) =>
  __copyProps(__defProp({}, '__esModule', { value: true }), mod);

// ../../node_modules/depd/index.js
var require_depd = __commonJS({
  '../../node_modules/depd/index.js'(exports2, module2) {
    'use strict';
    var relative = require('path').relative;
    module2.exports = depd;
    var basePath = process.cwd();
    function containsNamespace(str, namespace) {
      var vals = str.split(/[ ,]+/);
      var ns2 = String(namespace).toLowerCase();
      for (var i = 0; i < vals.length; i++) {
        var val = vals[i];
        if (val && (val === '*' || val.toLowerCase() === ns2)) {
          return true;
        }
      }
      return false;
    }
    function convertDataDescriptorToAccessor(obj, prop, message) {
      var descriptor = Object.getOwnPropertyDescriptor(obj, prop);
      var value = descriptor.value;
      descriptor.get = function getter() {
        return value;
      };
      if (descriptor.writable) {
        descriptor.set = function setter(val) {
          return (value = val);
        };
      }
      delete descriptor.value;
      delete descriptor.writable;
      Object.defineProperty(obj, prop, descriptor);
      return descriptor;
    }
    function createArgumentsString(arity) {
      var str = '';
      for (var i = 0; i < arity; i++) {
        str += ', arg' + i;
      }
      return str.substr(2);
    }
    function createStackString(stack) {
      var str = this.name + ': ' + this.namespace;
      if (this.message) {
        str += ' deprecated ' + this.message;
      }
      for (var i = 0; i < stack.length; i++) {
        str += '\n    at ' + stack[i].toString();
      }
      return str;
    }
    function depd(namespace) {
      if (!namespace) {
        throw new TypeError('argument namespace is required');
      }
      var stack = getStack();
      var site = callSiteLocation(stack[1]);
      var file = site[0];
      function deprecate(message) {
        log2.call(deprecate, message);
      }
      deprecate._file = file;
      deprecate._ignored = isignored(namespace);
      deprecate._namespace = namespace;
      deprecate._traced = istraced(namespace);
      deprecate._warned = /* @__PURE__ */ Object.create(null);
      deprecate.function = wrapfunction;
      deprecate.property = wrapproperty;
      return deprecate;
    }
    function eehaslisteners(emitter, type) {
      var count =
        typeof emitter.listenerCount !== 'function'
          ? emitter.listeners(type).length
          : emitter.listenerCount(type);
      return count > 0;
    }
    function isignored(namespace) {
      if (process.noDeprecation) {
        return true;
      }
      var str = process.env.NO_DEPRECATION || '';
      return containsNamespace(str, namespace);
    }
    function istraced(namespace) {
      if (process.traceDeprecation) {
        return true;
      }
      var str = process.env.TRACE_DEPRECATION || '';
      return containsNamespace(str, namespace);
    }
    function log2(message, site) {
      var haslisteners = eehaslisteners(process, 'deprecation');
      if (!haslisteners && this._ignored) {
        return;
      }
      var caller;
      var callFile;
      var callSite;
      var depSite;
      var i = 0;
      var seen = false;
      var stack = getStack();
      var file = this._file;
      if (site) {
        depSite = site;
        callSite = callSiteLocation(stack[1]);
        callSite.name = depSite.name;
        file = callSite[0];
      } else {
        i = 2;
        depSite = callSiteLocation(stack[i]);
        callSite = depSite;
      }
      for (; i < stack.length; i++) {
        caller = callSiteLocation(stack[i]);
        callFile = caller[0];
        if (callFile === file) {
          seen = true;
        } else if (callFile === this._file) {
          file = this._file;
        } else if (seen) {
          break;
        }
      }
      var key = caller ? depSite.join(':') + '__' + caller.join(':') : void 0;
      if (key !== void 0 && key in this._warned) {
        return;
      }
      this._warned[key] = true;
      var msg = message;
      if (!msg) {
        msg =
          callSite === depSite || !callSite.name
            ? defaultMessage(depSite)
            : defaultMessage(callSite);
      }
      if (haslisteners) {
        var err = DeprecationError(this._namespace, msg, stack.slice(i));
        process.emit('deprecation', err);
        return;
      }
      var format2 = process.stderr.isTTY ? formatColor : formatPlain;
      var output = format2.call(this, msg, caller, stack.slice(i));
      process.stderr.write(output + '\n', 'utf8');
    }
    function callSiteLocation(callSite) {
      var file = callSite.getFileName() || '<anonymous>';
      var line = callSite.getLineNumber();
      var colm = callSite.getColumnNumber();
      if (callSite.isEval()) {
        file = callSite.getEvalOrigin() + ', ' + file;
      }
      var site = [file, line, colm];
      site.callSite = callSite;
      site.name = callSite.getFunctionName();
      return site;
    }
    function defaultMessage(site) {
      var callSite = site.callSite;
      var funcName = site.name;
      if (!funcName) {
        funcName = '<anonymous@' + formatLocation(site) + '>';
      }
      var context = callSite.getThis();
      var typeName = context && callSite.getTypeName();
      if (typeName === 'Object') {
        typeName = void 0;
      }
      if (typeName === 'Function') {
        typeName = context.name || typeName;
      }
      return typeName && callSite.getMethodName()
        ? typeName + '.' + funcName
        : funcName;
    }
    function formatPlain(msg, caller, stack) {
      var timestamp = /* @__PURE__ */ new Date().toUTCString();
      var formatted = timestamp + ' ' + this._namespace + ' deprecated ' + msg;
      if (this._traced) {
        for (var i = 0; i < stack.length; i++) {
          formatted += '\n    at ' + stack[i].toString();
        }
        return formatted;
      }
      if (caller) {
        formatted += ' at ' + formatLocation(caller);
      }
      return formatted;
    }
    function formatColor(msg, caller, stack) {
      var formatted =
        '\x1B[36;1m' +
        this._namespace +
        '\x1B[22;39m \x1B[33;1mdeprecated\x1B[22;39m \x1B[0m' +
        msg +
        '\x1B[39m';
      if (this._traced) {
        for (var i = 0; i < stack.length; i++) {
          formatted += '\n    \x1B[36mat ' + stack[i].toString() + '\x1B[39m';
        }
        return formatted;
      }
      if (caller) {
        formatted += ' \x1B[36m' + formatLocation(caller) + '\x1B[39m';
      }
      return formatted;
    }
    function formatLocation(callSite) {
      return (
        relative(basePath, callSite[0]) + ':' + callSite[1] + ':' + callSite[2]
      );
    }
    function getStack() {
      var limit = Error.stackTraceLimit;
      var obj = {};
      var prep = Error.prepareStackTrace;
      Error.prepareStackTrace = prepareObjectStackTrace;
      Error.stackTraceLimit = Math.max(10, limit);
      Error.captureStackTrace(obj);
      var stack = obj.stack.slice(1);
      Error.prepareStackTrace = prep;
      Error.stackTraceLimit = limit;
      return stack;
    }
    function prepareObjectStackTrace(obj, stack) {
      return stack;
    }
    function wrapfunction(fn, message) {
      if (typeof fn !== 'function') {
        throw new TypeError('argument fn must be a function');
      }
      var args = createArgumentsString(fn.length);
      var stack = getStack();
      var site = callSiteLocation(stack[1]);
      site.name = fn.name;
      var deprecatedfn = new Function(
        'fn',
        'log',
        'deprecate',
        'message',
        'site',
        '"use strict"\nreturn function (' +
          args +
          ') {log.call(deprecate, message, site)\nreturn fn.apply(this, arguments)\n}'
      )(fn, log2, this, message, site);
      return deprecatedfn;
    }
    function wrapproperty(obj, prop, message) {
      if (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {
        throw new TypeError('argument obj must be object');
      }
      var descriptor = Object.getOwnPropertyDescriptor(obj, prop);
      if (!descriptor) {
        throw new TypeError('must call property on owner object');
      }
      if (!descriptor.configurable) {
        throw new TypeError('property must be configurable');
      }
      var deprecate = this;
      var stack = getStack();
      var site = callSiteLocation(stack[1]);
      site.name = prop;
      if ('value' in descriptor) {
        descriptor = convertDataDescriptorToAccessor(obj, prop, message);
      }
      var get2 = descriptor.get;
      var set = descriptor.set;
      if (typeof get2 === 'function') {
        descriptor.get = function getter() {
          log2.call(deprecate, message, site);
          return get2.apply(this, arguments);
        };
      }
      if (typeof set === 'function') {
        descriptor.set = function setter() {
          log2.call(deprecate, message, site);
          return set.apply(this, arguments);
        };
      }
      Object.defineProperty(obj, prop, descriptor);
    }
    function DeprecationError(namespace, message, stack) {
      var error = new Error();
      var stackString;
      Object.defineProperty(error, 'constructor', {
        value: DeprecationError,
      });
      Object.defineProperty(error, 'message', {
        configurable: true,
        enumerable: false,
        value: message,
        writable: true,
      });
      Object.defineProperty(error, 'name', {
        enumerable: false,
        configurable: true,
        value: 'DeprecationError',
        writable: true,
      });
      Object.defineProperty(error, 'namespace', {
        configurable: true,
        enumerable: false,
        value: namespace,
        writable: true,
      });
      Object.defineProperty(error, 'stack', {
        configurable: true,
        enumerable: false,
        get: function () {
          if (stackString !== void 0) {
            return stackString;
          }
          return (stackString = createStackString.call(this, stack));
        },
        set: function setter(val) {
          stackString = val;
        },
      });
      return error;
    }
  },
});

// ../../node_modules/bytes/index.js
var require_bytes = __commonJS({
  '../../node_modules/bytes/index.js'(exports2, module2) {
    'use strict';
    module2.exports = bytes;
    module2.exports.format = format2;
    module2.exports.parse = parse;
    var formatThousandsRegExp = /\B(?=(\d{3})+(?!\d))/g;
    var formatDecimalsRegExp = /(?:\.0*|(\.[^0]+)0+)$/;
    var map2 = {
      b: 1,
      kb: 1 << 10,
      mb: 1 << 20,
      gb: 1 << 30,
      tb: Math.pow(1024, 4),
      pb: Math.pow(1024, 5),
    };
    var parseRegExp = /^((-|\+)?(\d+(?:\.\d+)?)) *(kb|mb|gb|tb|pb)$/i;
    function bytes(value, options) {
      if (typeof value === 'string') {
        return parse(value);
      }
      if (typeof value === 'number') {
        return format2(value, options);
      }
      return null;
    }
    function format2(value, options) {
      if (!Number.isFinite(value)) {
        return null;
      }
      var mag = Math.abs(value);
      var thousandsSeparator = (options && options.thousandsSeparator) || '';
      var unitSeparator = (options && options.unitSeparator) || '';
      var decimalPlaces =
        options && options.decimalPlaces !== void 0 ? options.decimalPlaces : 2;
      var fixedDecimals = Boolean(options && options.fixedDecimals);
      var unit = (options && options.unit) || '';
      if (!unit || !map2[unit.toLowerCase()]) {
        if (mag >= map2.pb) {
          unit = 'PB';
        } else if (mag >= map2.tb) {
          unit = 'TB';
        } else if (mag >= map2.gb) {
          unit = 'GB';
        } else if (mag >= map2.mb) {
          unit = 'MB';
        } else if (mag >= map2.kb) {
          unit = 'KB';
        } else {
          unit = 'B';
        }
      }
      var val = value / map2[unit.toLowerCase()];
      var str = val.toFixed(decimalPlaces);
      if (!fixedDecimals) {
        str = str.replace(formatDecimalsRegExp, '$1');
      }
      if (thousandsSeparator) {
        str = str
          .split('.')
          .map(function (s2, i) {
            return i === 0
              ? s2.replace(formatThousandsRegExp, thousandsSeparator)
              : s2;
          })
          .join('.');
      }
      return str + unitSeparator + unit;
    }
    function parse(val) {
      if (typeof val === 'number' && !isNaN(val)) {
        return val;
      }
      if (typeof val !== 'string') {
        return null;
      }
      var results = parseRegExp.exec(val);
      var floatValue;
      var unit = 'b';
      if (!results) {
        floatValue = parseInt(val, 10);
        unit = 'b';
      } else {
        floatValue = parseFloat(results[1]);
        unit = results[4].toLowerCase();
      }
      if (isNaN(floatValue)) {
        return null;
      }
      return Math.floor(map2[unit] * floatValue);
    }
  },
});

// ../../node_modules/content-type/index.js
var require_content_type = __commonJS({
  '../../node_modules/content-type/index.js'(exports2) {
    'use strict';
    var PARAM_REGEXP =
      /; *([!#$%&'*+.^_`|~0-9A-Za-z-]+) *= *("(?:[\u000b\u0020\u0021\u0023-\u005b\u005d-\u007e\u0080-\u00ff]|\\[\u000b\u0020-\u00ff])*"|[!#$%&'*+.^_`|~0-9A-Za-z-]+) */g;
    var TEXT_REGEXP = /^[\u000b\u0020-\u007e\u0080-\u00ff]+$/;
    var TOKEN_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+$/;
    var QESC_REGEXP = /\\([\u000b\u0020-\u00ff])/g;
    var QUOTE_REGEXP = /([\\"])/g;
    var TYPE_REGEXP =
      /^[!#$%&'*+.^_`|~0-9A-Za-z-]+\/[!#$%&'*+.^_`|~0-9A-Za-z-]+$/;
    exports2.format = format2;
    exports2.parse = parse;
    function format2(obj) {
      if (!obj || typeof obj !== 'object') {
        throw new TypeError('argument obj is required');
      }
      var parameters = obj.parameters;
      var type = obj.type;
      if (!type || !TYPE_REGEXP.test(type)) {
        throw new TypeError('invalid type');
      }
      var string = type;
      if (parameters && typeof parameters === 'object') {
        var param;
        var params = Object.keys(parameters).sort();
        for (var i = 0; i < params.length; i++) {
          param = params[i];
          if (!TOKEN_REGEXP.test(param)) {
            throw new TypeError('invalid parameter name');
          }
          string += '; ' + param + '=' + qstring(parameters[param]);
        }
      }
      return string;
    }
    function parse(string) {
      if (!string) {
        throw new TypeError('argument string is required');
      }
      var header = typeof string === 'object' ? getcontenttype(string) : string;
      if (typeof header !== 'string') {
        throw new TypeError('argument string is required to be a string');
      }
      var index = header.indexOf(';');
      var type = index !== -1 ? header.slice(0, index).trim() : header.trim();
      if (!TYPE_REGEXP.test(type)) {
        throw new TypeError('invalid media type');
      }
      var obj = new ContentType(type.toLowerCase());
      if (index !== -1) {
        var key;
        var match;
        var value;
        PARAM_REGEXP.lastIndex = index;
        while ((match = PARAM_REGEXP.exec(header))) {
          if (match.index !== index) {
            throw new TypeError('invalid parameter format');
          }
          index += match[0].length;
          key = match[1].toLowerCase();
          value = match[2];
          if (value.charCodeAt(0) === 34) {
            value = value.slice(1, -1);
            if (value.indexOf('\\') !== -1) {
              value = value.replace(QESC_REGEXP, '$1');
            }
          }
          obj.parameters[key] = value;
        }
        if (index !== header.length) {
          throw new TypeError('invalid parameter format');
        }
      }
      return obj;
    }
    function getcontenttype(obj) {
      var header;
      if (typeof obj.getHeader === 'function') {
        header = obj.getHeader('content-type');
      } else if (typeof obj.headers === 'object') {
        header = obj.headers && obj.headers['content-type'];
      }
      if (typeof header !== 'string') {
        throw new TypeError('content-type header is missing from object');
      }
      return header;
    }
    function qstring(val) {
      var str = String(val);
      if (TOKEN_REGEXP.test(str)) {
        return str;
      }
      if (str.length > 0 && !TEXT_REGEXP.test(str)) {
        throw new TypeError('invalid parameter value');
      }
      return '"' + str.replace(QUOTE_REGEXP, '\\$1') + '"';
    }
    function ContentType(type) {
      this.parameters = /* @__PURE__ */ Object.create(null);
      this.type = type;
    }
  },
});

// ../../node_modules/setprototypeof/index.js
var require_setprototypeof = __commonJS({
  '../../node_modules/setprototypeof/index.js'(exports2, module2) {
    'use strict';
    module2.exports =
      Object.setPrototypeOf ||
      ({ __proto__: [] } instanceof Array ? setProtoOf : mixinProperties);
    function setProtoOf(obj, proto) {
      obj.__proto__ = proto;
      return obj;
    }
    function mixinProperties(obj, proto) {
      for (var prop in proto) {
        if (!Object.prototype.hasOwnProperty.call(obj, prop)) {
          obj[prop] = proto[prop];
        }
      }
      return obj;
    }
  },
});

// ../../node_modules/statuses/codes.json
var require_codes = __commonJS({
  '../../node_modules/statuses/codes.json'(exports2, module2) {
    module2.exports = {
      100: 'Continue',
      101: 'Switching Protocols',
      102: 'Processing',
      103: 'Early Hints',
      200: 'OK',
      201: 'Created',
      202: 'Accepted',
      203: 'Non-Authoritative Information',
      204: 'No Content',
      205: 'Reset Content',
      206: 'Partial Content',
      207: 'Multi-Status',
      208: 'Already Reported',
      226: 'IM Used',
      300: 'Multiple Choices',
      301: 'Moved Permanently',
      302: 'Found',
      303: 'See Other',
      304: 'Not Modified',
      305: 'Use Proxy',
      307: 'Temporary Redirect',
      308: 'Permanent Redirect',
      400: 'Bad Request',
      401: 'Unauthorized',
      402: 'Payment Required',
      403: 'Forbidden',
      404: 'Not Found',
      405: 'Method Not Allowed',
      406: 'Not Acceptable',
      407: 'Proxy Authentication Required',
      408: 'Request Timeout',
      409: 'Conflict',
      410: 'Gone',
      411: 'Length Required',
      412: 'Precondition Failed',
      413: 'Payload Too Large',
      414: 'URI Too Long',
      415: 'Unsupported Media Type',
      416: 'Range Not Satisfiable',
      417: 'Expectation Failed',
      418: "I'm a Teapot",
      421: 'Misdirected Request',
      422: 'Unprocessable Entity',
      423: 'Locked',
      424: 'Failed Dependency',
      425: 'Too Early',
      426: 'Upgrade Required',
      428: 'Precondition Required',
      429: 'Too Many Requests',
      431: 'Request Header Fields Too Large',
      451: 'Unavailable For Legal Reasons',
      500: 'Internal Server Error',
      501: 'Not Implemented',
      502: 'Bad Gateway',
      503: 'Service Unavailable',
      504: 'Gateway Timeout',
      505: 'HTTP Version Not Supported',
      506: 'Variant Also Negotiates',
      507: 'Insufficient Storage',
      508: 'Loop Detected',
      509: 'Bandwidth Limit Exceeded',
      510: 'Not Extended',
      511: 'Network Authentication Required',
    };
  },
});

// ../../node_modules/statuses/index.js
var require_statuses = __commonJS({
  '../../node_modules/statuses/index.js'(exports2, module2) {
    'use strict';
    var codes = require_codes();
    module2.exports = status;
    status.message = codes;
    status.code = createMessageToStatusCodeMap(codes);
    status.codes = createStatusCodeList(codes);
    status.redirect = {
      300: true,
      301: true,
      302: true,
      303: true,
      305: true,
      307: true,
      308: true,
    };
    status.empty = {
      204: true,
      205: true,
      304: true,
    };
    status.retry = {
      502: true,
      503: true,
      504: true,
    };
    function createMessageToStatusCodeMap(codes2) {
      var map2 = {};
      Object.keys(codes2).forEach(function forEachCode(code) {
        var message = codes2[code];
        var status2 = Number(code);
        map2[message.toLowerCase()] = status2;
      });
      return map2;
    }
    function createStatusCodeList(codes2) {
      return Object.keys(codes2).map(function mapCode(code) {
        return Number(code);
      });
    }
    function getStatusCode(message) {
      var msg = message.toLowerCase();
      if (!Object.prototype.hasOwnProperty.call(status.code, msg)) {
        throw new Error('invalid status message: "' + message + '"');
      }
      return status.code[msg];
    }
    function getStatusMessage(code) {
      if (!Object.prototype.hasOwnProperty.call(status.message, code)) {
        throw new Error('invalid status code: ' + code);
      }
      return status.message[code];
    }
    function status(code) {
      if (typeof code === 'number') {
        return getStatusMessage(code);
      }
      if (typeof code !== 'string') {
        throw new TypeError('code must be a number or string');
      }
      var n2 = parseInt(code, 10);
      if (!isNaN(n2)) {
        return getStatusMessage(n2);
      }
      return getStatusCode(code);
    }
  },
});

// ../../node_modules/inherits/inherits_browser.js
var require_inherits_browser = __commonJS({
  '../../node_modules/inherits/inherits_browser.js'(exports2, module2) {
    'use strict';
    if (typeof Object.create === 'function') {
      module2.exports = function inherits(ctor, superCtor) {
        if (superCtor) {
          ctor.super_ = superCtor;
          ctor.prototype = Object.create(superCtor.prototype, {
            constructor: {
              value: ctor,
              enumerable: false,
              writable: true,
              configurable: true,
            },
          });
        }
      };
    } else {
      module2.exports = function inherits(ctor, superCtor) {
        if (superCtor) {
          ctor.super_ = superCtor;
          var TempCtor = function () {};
          TempCtor.prototype = superCtor.prototype;
          ctor.prototype = new TempCtor();
          ctor.prototype.constructor = ctor;
        }
      };
    }
  },
});

// ../../node_modules/inherits/inherits.js
var require_inherits = __commonJS({
  '../../node_modules/inherits/inherits.js'(exports2, module2) {
    'use strict';
    try {
      util = require('util');
      if (typeof util.inherits !== 'function') throw '';
      module2.exports = util.inherits;
    } catch (e2) {
      module2.exports = require_inherits_browser();
    }
    var util;
  },
});

// ../../node_modules/toidentifier/index.js
var require_toidentifier = __commonJS({
  '../../node_modules/toidentifier/index.js'(exports2, module2) {
    'use strict';
    module2.exports = toIdentifier;
    function toIdentifier(str) {
      return str
        .split(' ')
        .map(function (token2) {
          return token2.slice(0, 1).toUpperCase() + token2.slice(1);
        })
        .join('')
        .replace(/[^ _0-9a-z]/gi, '');
    }
  },
});

// ../../node_modules/http-errors/index.js
var require_http_errors = __commonJS({
  '../../node_modules/http-errors/index.js'(exports2, module2) {
    'use strict';
    var deprecate = require_depd()('http-errors');
    var setPrototypeOf = require_setprototypeof();
    var statuses = require_statuses();
    var inherits = require_inherits();
    var toIdentifier = require_toidentifier();
    module2.exports = createError;
    module2.exports.HttpError = createHttpErrorConstructor();
    module2.exports.isHttpError = createIsHttpErrorFunction(
      module2.exports.HttpError
    );
    populateConstructorExports(
      module2.exports,
      statuses.codes,
      module2.exports.HttpError
    );
    function codeClass(status) {
      return Number(String(status).charAt(0) + '00');
    }
    function createError() {
      var err;
      var msg;
      var status = 500;
      var props = {};
      for (var i = 0; i < arguments.length; i++) {
        var arg = arguments[i];
        var type = typeof arg;
        if (type === 'object' && arg instanceof Error) {
          err = arg;
          status = err.status || err.statusCode || status;
        } else if (type === 'number' && i === 0) {
          status = arg;
        } else if (type === 'string') {
          msg = arg;
        } else if (type === 'object') {
          props = arg;
        } else {
          throw new TypeError(
            'argument #' + (i + 1) + ' unsupported type ' + type
          );
        }
      }
      if (typeof status === 'number' && (status < 400 || status >= 600)) {
        deprecate('non-error status code; use only 4xx or 5xx status codes');
      }
      if (
        typeof status !== 'number' ||
        (!statuses.message[status] && (status < 400 || status >= 600))
      ) {
        status = 500;
      }
      var HttpError = createError[status] || createError[codeClass(status)];
      if (!err) {
        err = HttpError
          ? new HttpError(msg)
          : new Error(msg || statuses.message[status]);
        Error.captureStackTrace(err, createError);
      }
      if (!HttpError || !(err instanceof HttpError) || err.status !== status) {
        err.expose = status < 500;
        err.status = err.statusCode = status;
      }
      for (var key in props) {
        if (key !== 'status' && key !== 'statusCode') {
          err[key] = props[key];
        }
      }
      return err;
    }
    function createHttpErrorConstructor() {
      function HttpError() {
        throw new TypeError('cannot construct abstract class');
      }
      inherits(HttpError, Error);
      return HttpError;
    }
    function createClientErrorConstructor(HttpError, name, code) {
      var className = toClassName(name);
      function ClientError(message) {
        var msg = message != null ? message : statuses.message[code];
        var err = new Error(msg);
        Error.captureStackTrace(err, ClientError);
        setPrototypeOf(err, ClientError.prototype);
        Object.defineProperty(err, 'message', {
          enumerable: true,
          configurable: true,
          value: msg,
          writable: true,
        });
        Object.defineProperty(err, 'name', {
          enumerable: false,
          configurable: true,
          value: className,
          writable: true,
        });
        return err;
      }
      inherits(ClientError, HttpError);
      nameFunc(ClientError, className);
      ClientError.prototype.status = code;
      ClientError.prototype.statusCode = code;
      ClientError.prototype.expose = true;
      return ClientError;
    }
    function createIsHttpErrorFunction(HttpError) {
      return function isHttpError(val) {
        if (!val || typeof val !== 'object') {
          return false;
        }
        if (val instanceof HttpError) {
          return true;
        }
        return (
          val instanceof Error &&
          typeof val.expose === 'boolean' &&
          typeof val.statusCode === 'number' &&
          val.status === val.statusCode
        );
      };
    }
    function createServerErrorConstructor(HttpError, name, code) {
      var className = toClassName(name);
      function ServerError(message) {
        var msg = message != null ? message : statuses.message[code];
        var err = new Error(msg);
        Error.captureStackTrace(err, ServerError);
        setPrototypeOf(err, ServerError.prototype);
        Object.defineProperty(err, 'message', {
          enumerable: true,
          configurable: true,
          value: msg,
          writable: true,
        });
        Object.defineProperty(err, 'name', {
          enumerable: false,
          configurable: true,
          value: className,
          writable: true,
        });
        return err;
      }
      inherits(ServerError, HttpError);
      nameFunc(ServerError, className);
      ServerError.prototype.status = code;
      ServerError.prototype.statusCode = code;
      ServerError.prototype.expose = false;
      return ServerError;
    }
    function nameFunc(func, name) {
      var desc = Object.getOwnPropertyDescriptor(func, 'name');
      if (desc && desc.configurable) {
        desc.value = name;
        Object.defineProperty(func, 'name', desc);
      }
    }
    function populateConstructorExports(exports3, codes, HttpError) {
      codes.forEach(function forEachCode(code) {
        var CodeError;
        var name = toIdentifier(statuses.message[code]);
        switch (codeClass(code)) {
          case 400:
            CodeError = createClientErrorConstructor(HttpError, name, code);
            break;
          case 500:
            CodeError = createServerErrorConstructor(HttpError, name, code);
            break;
        }
        if (CodeError) {
          exports3[code] = CodeError;
          exports3[name] = CodeError;
        }
      });
    }
    function toClassName(name) {
      return name.substr(-5) !== 'Error' ? name + 'Error' : name;
    }
  },
});

// ../../node_modules/body-parser/node_modules/ms/index.js
var require_ms = __commonJS({
  '../../node_modules/body-parser/node_modules/ms/index.js'(exports2, module2) {
    'use strict';
    var s2 = 1e3;
    var m2 = s2 * 60;
    var h2 = m2 * 60;
    var d = h2 * 24;
    var y = d * 365.25;
    module2.exports = function (val, options) {
      options = options || {};
      var type = typeof val;
      if (type === 'string' && val.length > 0) {
        return parse(val);
      } else if (type === 'number' && isNaN(val) === false) {
        return options.long ? fmtLong(val) : fmtShort(val);
      }
      throw new Error(
        'val is not a non-empty string or a valid number. val=' +
          JSON.stringify(val)
      );
    };
    function parse(str) {
      str = String(str);
      if (str.length > 100) {
        return;
      }
      var match =
        /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(
          str
        );
      if (!match) {
        return;
      }
      var n2 = parseFloat(match[1]);
      var type = (match[2] || 'ms').toLowerCase();
      switch (type) {
        case 'years':
        case 'year':
        case 'yrs':
        case 'yr':
        case 'y':
          return n2 * y;
        case 'days':
        case 'day':
        case 'd':
          return n2 * d;
        case 'hours':
        case 'hour':
        case 'hrs':
        case 'hr':
        case 'h':
          return n2 * h2;
        case 'minutes':
        case 'minute':
        case 'mins':
        case 'min':
        case 'm':
          return n2 * m2;
        case 'seconds':
        case 'second':
        case 'secs':
        case 'sec':
        case 's':
          return n2 * s2;
        case 'milliseconds':
        case 'millisecond':
        case 'msecs':
        case 'msec':
        case 'ms':
          return n2;
        default:
          return void 0;
      }
    }
    function fmtShort(ms2) {
      if (ms2 >= d) {
        return Math.round(ms2 / d) + 'd';
      }
      if (ms2 >= h2) {
        return Math.round(ms2 / h2) + 'h';
      }
      if (ms2 >= m2) {
        return Math.round(ms2 / m2) + 'm';
      }
      if (ms2 >= s2) {
        return Math.round(ms2 / s2) + 's';
      }
      return ms2 + 'ms';
    }
    function fmtLong(ms2) {
      return (
        plural(ms2, d, 'day') ||
        plural(ms2, h2, 'hour') ||
        plural(ms2, m2, 'minute') ||
        plural(ms2, s2, 'second') ||
        ms2 + ' ms'
      );
    }
    function plural(ms2, n2, name) {
      if (ms2 < n2) {
        return;
      }
      if (ms2 < n2 * 1.5) {
        return Math.floor(ms2 / n2) + ' ' + name;
      }
      return Math.ceil(ms2 / n2) + ' ' + name + 's';
    }
  },
});

// ../../node_modules/body-parser/node_modules/debug/src/debug.js
var require_debug = __commonJS({
  '../../node_modules/body-parser/node_modules/debug/src/debug.js'(
    exports2,
    module2
  ) {
    'use strict';
    exports2 =
      module2.exports =
      createDebug.debug =
      createDebug['default'] =
        createDebug;
    exports2.coerce = coerce;
    exports2.disable = disable;
    exports2.enable = enable;
    exports2.enabled = enabled;
    exports2.humanize = require_ms();
    exports2.names = [];
    exports2.skips = [];
    exports2.formatters = {};
    var prevTime;
    function selectColor(namespace) {
      var hash = 0,
        i;
      for (i in namespace) {
        hash = (hash << 5) - hash + namespace.charCodeAt(i);
        hash |= 0;
      }
      return exports2.colors[Math.abs(hash) % exports2.colors.length];
    }
    function createDebug(namespace) {
      function debug2() {
        if (!debug2.enabled) return;
        var self2 = debug2;
        var curr = +(/* @__PURE__ */ new Date());
        var ms2 = curr - (prevTime || curr);
        self2.diff = ms2;
        self2.prev = prevTime;
        self2.curr = curr;
        prevTime = curr;
        var args = new Array(arguments.length);
        for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i];
        }
        args[0] = exports2.coerce(args[0]);
        if ('string' !== typeof args[0]) {
          args.unshift('%O');
        }
        var index = 0;
        args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format2) {
          if (match === '%%') return match;
          index++;
          var formatter = exports2.formatters[format2];
          if ('function' === typeof formatter) {
            var val = args[index];
            match = formatter.call(self2, val);
            args.splice(index, 1);
            index--;
          }
          return match;
        });
        exports2.formatArgs.call(self2, args);
        var logFn = debug2.log || exports2.log || console.log.bind(console);
        logFn.apply(self2, args);
      }
      debug2.namespace = namespace;
      debug2.enabled = exports2.enabled(namespace);
      debug2.useColors = exports2.useColors();
      debug2.color = selectColor(namespace);
      if ('function' === typeof exports2.init) {
        exports2.init(debug2);
      }
      return debug2;
    }
    function enable(namespaces) {
      exports2.save(namespaces);
      exports2.names = [];
      exports2.skips = [];
      var split = (typeof namespaces === 'string' ? namespaces : '').split(
        /[\s,]+/
      );
      var len = split.length;
      for (var i = 0; i < len; i++) {
        if (!split[i]) continue;
        namespaces = split[i].replace(/\*/g, '.*?');
        if (namespaces[0] === '-') {
          exports2.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
        } else {
          exports2.names.push(new RegExp('^' + namespaces + '$'));
        }
      }
    }
    function disable() {
      exports2.enable('');
    }
    function enabled(name) {
      var i, len;
      for (i = 0, len = exports2.skips.length; i < len; i++) {
        if (exports2.skips[i].test(name)) {
          return false;
        }
      }
      for (i = 0, len = exports2.names.length; i < len; i++) {
        if (exports2.names[i].test(name)) {
          return true;
        }
      }
      return false;
    }
    function coerce(val) {
      if (val instanceof Error) return val.stack || val.message;
      return val;
    }
  },
});

// ../../node_modules/body-parser/node_modules/debug/src/browser.js
var require_browser = __commonJS({
  '../../node_modules/body-parser/node_modules/debug/src/browser.js'(
    exports2,
    module2
  ) {
    'use strict';
    exports2 = module2.exports = require_debug();
    exports2.log = log2;
    exports2.formatArgs = formatArgs;
    exports2.save = save;
    exports2.load = load;
    exports2.useColors = useColors;
    exports2.storage =
      'undefined' != typeof chrome && 'undefined' != typeof chrome.storage
        ? chrome.storage.local
        : localstorage();
    exports2.colors = [
      'lightseagreen',
      'forestgreen',
      'goldenrod',
      'dodgerblue',
      'darkorchid',
      'crimson',
    ];
    function useColors() {
      if (
        typeof window !== 'undefined' &&
        window.process &&
        window.process.type === 'renderer'
      ) {
        return true;
      }
      return (
        (typeof document !== 'undefined' &&
          document.documentElement &&
          document.documentElement.style &&
          document.documentElement.style.WebkitAppearance) || // is firebug? http://stackoverflow.com/a/398120/376773
        (typeof window !== 'undefined' &&
          window.console &&
          (window.console.firebug ||
            (window.console.exception && window.console.table))) || // is firefox >= v31?
        // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
        (typeof navigator !== 'undefined' &&
          navigator.userAgent &&
          navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) &&
          parseInt(RegExp.$1, 10) >= 31) || // double check webkit in userAgent just in case we are in a worker
        (typeof navigator !== 'undefined' &&
          navigator.userAgent &&
          navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/))
      );
    }
    exports2.formatters.j = function (v) {
      try {
        return JSON.stringify(v);
      } catch (err) {
        return '[UnexpectedJSONParseError]: ' + err.message;
      }
    };
    function formatArgs(args) {
      var useColors2 = this.useColors;
      args[0] =
        (useColors2 ? '%c' : '') +
        this.namespace +
        (useColors2 ? ' %c' : ' ') +
        args[0] +
        (useColors2 ? '%c ' : ' ') +
        '+' +
        exports2.humanize(this.diff);
      if (!useColors2) return;
      var c2 = 'color: ' + this.color;
      args.splice(1, 0, c2, 'color: inherit');
      var index = 0;
      var lastC = 0;
      args[0].replace(/%[a-zA-Z%]/g, function (match) {
        if ('%%' === match) return;
        index++;
        if ('%c' === match) {
          lastC = index;
        }
      });
      args.splice(lastC, 0, c2);
    }
    function log2() {
      return (
        'object' === typeof console &&
        console.log &&
        Function.prototype.apply.call(console.log, console, arguments)
      );
    }
    function save(namespaces) {
      try {
        if (null == namespaces) {
          exports2.storage.removeItem('debug');
        } else {
          exports2.storage.debug = namespaces;
        }
      } catch (e2) {}
    }
    function load() {
      var r2;
      try {
        r2 = exports2.storage.debug;
      } catch (e2) {}
      if (!r2 && typeof process !== 'undefined' && 'env' in process) {
        r2 = process.env.DEBUG;
      }
      return r2;
    }
    exports2.enable(load());
    function localstorage() {
      try {
        return window.localStorage;
      } catch (e2) {}
    }
  },
});

// ../../node_modules/body-parser/node_modules/debug/src/node.js
var require_node = __commonJS({
  '../../node_modules/body-parser/node_modules/debug/src/node.js'(
    exports2,
    module2
  ) {
    'use strict';
    var tty = require('tty');
    var util = require('util');
    exports2 = module2.exports = require_debug();
    exports2.init = init;
    exports2.log = log2;
    exports2.formatArgs = formatArgs;
    exports2.save = save;
    exports2.load = load;
    exports2.useColors = useColors;
    exports2.colors = [6, 2, 3, 4, 5, 1];
    exports2.inspectOpts = Object.keys(process.env)
      .filter(function (key) {
        return /^debug_/i.test(key);
      })
      .reduce(function (obj, key) {
        var prop = key
          .substring(6)
          .toLowerCase()
          .replace(/_([a-z])/g, function (_2, k2) {
            return k2.toUpperCase();
          });
        var val = process.env[key];
        if (/^(yes|on|true|enabled)$/i.test(val)) val = true;
        else if (/^(no|off|false|disabled)$/i.test(val)) val = false;
        else if (val === 'null') val = null;
        else val = Number(val);
        obj[prop] = val;
        return obj;
      }, {});
    var fd = parseInt(process.env.DEBUG_FD, 10) || 2;
    if (1 !== fd && 2 !== fd) {
      util.deprecate(function () {},
      'except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)')();
    }
    var stream =
      1 === fd
        ? process.stdout
        : 2 === fd
        ? process.stderr
        : createWritableStdioStream(fd);
    function useColors() {
      return 'colors' in exports2.inspectOpts
        ? Boolean(exports2.inspectOpts.colors)
        : tty.isatty(fd);
    }
    exports2.formatters.o = function (v) {
      this.inspectOpts.colors = this.useColors;
      return util
        .inspect(v, this.inspectOpts)
        .split('\n')
        .map(function (str) {
          return str.trim();
        })
        .join(' ');
    };
    exports2.formatters.O = function (v) {
      this.inspectOpts.colors = this.useColors;
      return util.inspect(v, this.inspectOpts);
    };
    function formatArgs(args) {
      var name = this.namespace;
      var useColors2 = this.useColors;
      if (useColors2) {
        var c2 = this.color;
        var prefix = '  \x1B[3' + c2 + ';1m' + name + ' \x1B[0m';
        args[0] = prefix + args[0].split('\n').join('\n' + prefix);
        args.push(
          '\x1B[3' + c2 + 'm+' + exports2.humanize(this.diff) + '\x1B[0m'
        );
      } else {
        args[0] =
          /* @__PURE__ */ new Date().toUTCString() + ' ' + name + ' ' + args[0];
      }
    }
    function log2() {
      return stream.write(util.format.apply(util, arguments) + '\n');
    }
    function save(namespaces) {
      if (null == namespaces) {
        delete process.env.DEBUG;
      } else {
        process.env.DEBUG = namespaces;
      }
    }
    function load() {
      return process.env.DEBUG;
    }
    function createWritableStdioStream(fd2) {
      var stream2;
      var tty_wrap = process.binding('tty_wrap');
      switch (tty_wrap.guessHandleType(fd2)) {
        case 'TTY':
          stream2 = new tty.WriteStream(fd2);
          stream2._type = 'tty';
          if (stream2._handle && stream2._handle.unref) {
            stream2._handle.unref();
          }
          break;
        case 'FILE':
          var fs2 = require('fs');
          stream2 = new fs2.SyncWriteStream(fd2, { autoClose: false });
          stream2._type = 'fs';
          break;
        case 'PIPE':
        case 'TCP':
          var net = require('net');
          stream2 = new net.Socket({
            fd: fd2,
            readable: false,
            writable: true,
          });
          stream2.readable = false;
          stream2.read = null;
          stream2._type = 'pipe';
          if (stream2._handle && stream2._handle.unref) {
            stream2._handle.unref();
          }
          break;
        default:
          throw new Error('Implement me. Unknown stream file type!');
      }
      stream2.fd = fd2;
      stream2._isStdio = true;
      return stream2;
    }
    function init(debug2) {
      debug2.inspectOpts = {};
      var keys = Object.keys(exports2.inspectOpts);
      for (var i = 0; i < keys.length; i++) {
        debug2.inspectOpts[keys[i]] = exports2.inspectOpts[keys[i]];
      }
    }
    exports2.enable(load());
  },
});

// ../../node_modules/body-parser/node_modules/debug/src/index.js
var require_src = __commonJS({
  '../../node_modules/body-parser/node_modules/debug/src/index.js'(
    exports2,
    module2
  ) {
    'use strict';
    if (typeof process !== 'undefined' && process.type === 'renderer') {
      module2.exports = require_browser();
    } else {
      module2.exports = require_node();
    }
  },
});

// ../../node_modules/destroy/index.js
var require_destroy = __commonJS({
  '../../node_modules/destroy/index.js'(exports2, module2) {
    'use strict';
    var EventEmitter = require('events').EventEmitter;
    var ReadStream = require('fs').ReadStream;
    var Stream = require('stream');
    var Zlib = require('zlib');
    module2.exports = destroy;
    function destroy(stream, suppress) {
      if (isFsReadStream(stream)) {
        destroyReadStream(stream);
      } else if (isZlibStream(stream)) {
        destroyZlibStream(stream);
      } else if (hasDestroy(stream)) {
        stream.destroy();
      }
      if (isEventEmitter(stream) && suppress) {
        stream.removeAllListeners('error');
        stream.addListener('error', noop);
      }
      return stream;
    }
    function destroyReadStream(stream) {
      stream.destroy();
      if (typeof stream.close === 'function') {
        stream.on('open', onOpenClose);
      }
    }
    function closeZlibStream(stream) {
      if (stream._hadError === true) {
        var prop = stream._binding === null ? '_binding' : '_handle';
        stream[prop] = {
          close: function () {
            this[prop] = null;
          },
        };
      }
      stream.close();
    }
    function destroyZlibStream(stream) {
      if (typeof stream.destroy === 'function') {
        if (stream._binding) {
          stream.destroy();
          if (stream._processing) {
            stream._needDrain = true;
            stream.once('drain', onDrainClearBinding);
          } else {
            stream._binding.clear();
          }
        } else if (
          stream._destroy &&
          stream._destroy !== Stream.Transform.prototype._destroy
        ) {
          stream.destroy();
        } else if (stream._destroy && typeof stream.close === 'function') {
          stream.destroyed = true;
          stream.close();
        } else {
          stream.destroy();
        }
      } else if (typeof stream.close === 'function') {
        closeZlibStream(stream);
      }
    }
    function hasDestroy(stream) {
      return stream instanceof Stream && typeof stream.destroy === 'function';
    }
    function isEventEmitter(val) {
      return val instanceof EventEmitter;
    }
    function isFsReadStream(stream) {
      return stream instanceof ReadStream;
    }
    function isZlibStream(stream) {
      return (
        stream instanceof Zlib.Gzip ||
        stream instanceof Zlib.Gunzip ||
        stream instanceof Zlib.Deflate ||
        stream instanceof Zlib.DeflateRaw ||
        stream instanceof Zlib.Inflate ||
        stream instanceof Zlib.InflateRaw ||
        stream instanceof Zlib.Unzip
      );
    }
    function noop() {}
    function onDrainClearBinding() {
      this._binding.clear();
    }
    function onOpenClose() {
      if (typeof this.fd === 'number') {
        this.close();
      }
    }
  },
});

// ../../node_modules/safer-buffer/safer.js
var require_safer = __commonJS({
  '../../node_modules/safer-buffer/safer.js'(exports2, module2) {
    'use strict';
    var buffer = require('buffer');
    var Buffer2 = buffer.Buffer;
    var safer = {};
    var key;
    for (key in buffer) {
      if (!buffer.hasOwnProperty(key)) continue;
      if (key === 'SlowBuffer' || key === 'Buffer') continue;
      safer[key] = buffer[key];
    }
    var Safer = (safer.Buffer = {});
    for (key in Buffer2) {
      if (!Buffer2.hasOwnProperty(key)) continue;
      if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue;
      Safer[key] = Buffer2[key];
    }
    safer.Buffer.prototype = Buffer2.prototype;
    if (!Safer.from || Safer.from === Uint8Array.from) {
      Safer.from = function (value, encodingOrOffset, length) {
        if (typeof value === 'number') {
          throw new TypeError(
            'The "value" argument must not be of type number. Received type ' +
              typeof value
          );
        }
        if (value && typeof value.length === 'undefined') {
          throw new TypeError(
            'The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' +
              typeof value
          );
        }
        return Buffer2(value, encodingOrOffset, length);
      };
    }
    if (!Safer.alloc) {
      Safer.alloc = function (size, fill, encoding) {
        if (typeof size !== 'number') {
          throw new TypeError(
            'The "size" argument must be of type number. Received type ' +
              typeof size
          );
        }
        if (size < 0 || size >= 2 * (1 << 30)) {
          throw new RangeError(
            'The value "' + size + '" is invalid for option "size"'
          );
        }
        var buf = Buffer2(size);
        if (!fill || fill.length === 0) {
          buf.fill(0);
        } else if (typeof encoding === 'string') {
          buf.fill(fill, encoding);
        } else {
          buf.fill(fill);
        }
        return buf;
      };
    }
    if (!safer.kStringMaxLength) {
      try {
        safer.kStringMaxLength = process.binding('buffer').kStringMaxLength;
      } catch (e2) {}
    }
    if (!safer.constants) {
      safer.constants = {
        MAX_LENGTH: safer.kMaxLength,
      };
      if (safer.kStringMaxLength) {
        safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength;
      }
    }
    module2.exports = safer;
  },
});

// ../../node_modules/iconv-lite/lib/bom-handling.js
var require_bom_handling = __commonJS({
  '../../node_modules/iconv-lite/lib/bom-handling.js'(exports2) {
    'use strict';
    var BOMChar = '\uFEFF';
    exports2.PrependBOM = PrependBOMWrapper;
    function PrependBOMWrapper(encoder, options) {
      this.encoder = encoder;
      this.addBOM = true;
    }
    PrependBOMWrapper.prototype.write = function (str) {
      if (this.addBOM) {
        str = BOMChar + str;
        this.addBOM = false;
      }
      return this.encoder.write(str);
    };
    PrependBOMWrapper.prototype.end = function () {
      return this.encoder.end();
    };
    exports2.StripBOM = StripBOMWrapper;
    function StripBOMWrapper(decoder, options) {
      this.decoder = decoder;
      this.pass = false;
      this.options = options || {};
    }
    StripBOMWrapper.prototype.write = function (buf) {
      var res = this.decoder.write(buf);
      if (this.pass || !res) return res;
      if (res[0] === BOMChar) {
        res = res.slice(1);
        if (typeof this.options.stripBOM === 'function')
          this.options.stripBOM();
      }
      this.pass = true;
      return res;
    };
    StripBOMWrapper.prototype.end = function () {
      return this.decoder.end();
    };
  },
});

// ../../node_modules/iconv-lite/encodings/internal.js
var require_internal = __commonJS({
  '../../node_modules/iconv-lite/encodings/internal.js'(exports2, module2) {
    'use strict';
    var Buffer2 = require_safer().Buffer;
    module2.exports = {
      // Encodings
      utf8: { type: '_internal', bomAware: true },
      cesu8: { type: '_internal', bomAware: true },
      unicode11utf8: 'utf8',
      ucs2: { type: '_internal', bomAware: true },
      utf16le: 'ucs2',
      binary: { type: '_internal' },
      base64: { type: '_internal' },
      hex: { type: '_internal' },
      // Codec.
      _internal: InternalCodec,
    };
    function InternalCodec(codecOptions, iconv) {
      this.enc = codecOptions.encodingName;
      this.bomAware = codecOptions.bomAware;
      if (this.enc === 'base64') this.encoder = InternalEncoderBase64;
      else if (this.enc === 'cesu8') {
        this.enc = 'utf8';
        this.encoder = InternalEncoderCesu8;
        if (Buffer2.from('eda0bdedb2a9', 'hex').toString() !== '\u{1F4A9}') {
          this.decoder = InternalDecoderCesu8;
          this.defaultCharUnicode = iconv.defaultCharUnicode;
        }
      }
    }
    InternalCodec.prototype.encoder = InternalEncoder;
    InternalCodec.prototype.decoder = InternalDecoder;
    var StringDecoder = require('string_decoder').StringDecoder;
    if (!StringDecoder.prototype.end)
      StringDecoder.prototype.end = function () {};
    function InternalDecoder(options, codec) {
      StringDecoder.call(this, codec.enc);
    }
    InternalDecoder.prototype = StringDecoder.prototype;
    function InternalEncoder(options, codec) {
      this.enc = codec.enc;
    }
    InternalEncoder.prototype.write = function (str) {
      return Buffer2.from(str, this.enc);
    };
    InternalEncoder.prototype.end = function () {};
    function InternalEncoderBase64(options, codec) {
      this.prevStr = '';
    }
    InternalEncoderBase64.prototype.write = function (str) {
      str = this.prevStr + str;
      var completeQuads = str.length - (str.length % 4);
      this.prevStr = str.slice(completeQuads);
      str = str.slice(0, completeQuads);
      return Buffer2.from(str, 'base64');
    };
    InternalEncoderBase64.prototype.end = function () {
      return Buffer2.from(this.prevStr, 'base64');
    };
    function InternalEncoderCesu8(options, codec) {}
    InternalEncoderCesu8.prototype.write = function (str) {
      var buf = Buffer2.alloc(str.length * 3),
        bufIdx = 0;
      for (var i = 0; i < str.length; i++) {
        var charCode = str.charCodeAt(i);
        if (charCode < 128) buf[bufIdx++] = charCode;
        else if (charCode < 2048) {
          buf[bufIdx++] = 192 + (charCode >>> 6);
          buf[bufIdx++] = 128 + (charCode & 63);
        } else {
          buf[bufIdx++] = 224 + (charCode >>> 12);
          buf[bufIdx++] = 128 + ((charCode >>> 6) & 63);
          buf[bufIdx++] = 128 + (charCode & 63);
        }
      }
      return buf.slice(0, bufIdx);
    };
    InternalEncoderCesu8.prototype.end = function () {};
    function InternalDecoderCesu8(options, codec) {
      this.acc = 0;
      this.contBytes = 0;
      this.accBytes = 0;
      this.defaultCharUnicode = codec.defaultCharUnicode;
    }
    InternalDecoderCesu8.prototype.write = function (buf) {
      var acc = this.acc,
        contBytes = this.contBytes,
        accBytes = this.accBytes,
        res = '';
      for (var i = 0; i < buf.length; i++) {
        var curByte = buf[i];
        if ((curByte & 192) !== 128) {
          if (contBytes > 0) {
            res += this.defaultCharUnicode;
            contBytes = 0;
          }
          if (curByte < 128) {
            res += String.fromCharCode(curByte);
          } else if (curByte < 224) {
            acc = curByte & 31;
            contBytes = 1;
            accBytes = 1;
          } else if (curByte < 240) {
            acc = curByte & 15;
            contBytes = 2;
            accBytes = 1;
          } else {
            res += this.defaultCharUnicode;
          }
        } else {
          if (contBytes > 0) {
            acc = (acc << 6) | (curByte & 63);
            contBytes--;
            accBytes++;
            if (contBytes === 0) {
              if (accBytes === 2 && acc < 128 && acc > 0)
                res += this.defaultCharUnicode;
              else if (accBytes === 3 && acc < 2048)
                res += this.defaultCharUnicode;
              else res += String.fromCharCode(acc);
            }
          } else {
            res += this.defaultCharUnicode;
          }
        }
      }
      this.acc = acc;
      this.contBytes = contBytes;
      this.accBytes = accBytes;
      return res;
    };
    InternalDecoderCesu8.prototype.end = function () {
      var res = 0;
      if (this.contBytes > 0) res += this.defaultCharUnicode;
      return res;
    };
  },
});

// ../../node_modules/iconv-lite/encodings/utf16.js
var require_utf16 = __commonJS({
  '../../node_modules/iconv-lite/encodings/utf16.js'(exports2) {
    'use strict';
    var Buffer2 = require_safer().Buffer;
    exports2.utf16be = Utf16BECodec;
    function Utf16BECodec() {}
    Utf16BECodec.prototype.encoder = Utf16BEEncoder;
    Utf16BECodec.prototype.decoder = Utf16BEDecoder;
    Utf16BECodec.prototype.bomAware = true;
    function Utf16BEEncoder() {}
    Utf16BEEncoder.prototype.write = function (str) {
      var buf = Buffer2.from(str, 'ucs2');
      for (var i = 0; i < buf.length; i += 2) {
        var tmp = buf[i];
        buf[i] = buf[i + 1];
        buf[i + 1] = tmp;
      }
      return buf;
    };
    Utf16BEEncoder.prototype.end = function () {};
    function Utf16BEDecoder() {
      this.overflowByte = -1;
    }
    Utf16BEDecoder.prototype.write = function (buf) {
      if (buf.length == 0) return '';
      var buf2 = Buffer2.alloc(buf.length + 1),
        i = 0,
        j2 = 0;
      if (this.overflowByte !== -1) {
        buf2[0] = buf[0];
        buf2[1] = this.overflowByte;
        i = 1;
        j2 = 2;
      }
      for (; i < buf.length - 1; i += 2, j2 += 2) {
        buf2[j2] = buf[i + 1];
        buf2[j2 + 1] = buf[i];
      }
      this.overflowByte = i == buf.length - 1 ? buf[buf.length - 1] : -1;
      return buf2.slice(0, j2).toString('ucs2');
    };
    Utf16BEDecoder.prototype.end = function () {};
    exports2.utf16 = Utf16Codec;
    function Utf16Codec(codecOptions, iconv) {
      this.iconv = iconv;
    }
    Utf16Codec.prototype.encoder = Utf16Encoder;
    Utf16Codec.prototype.decoder = Utf16Decoder;
    function Utf16Encoder(options, codec) {
      options = options || {};
      if (options.addBOM === void 0) options.addBOM = true;
      this.encoder = codec.iconv.getEncoder('utf-16le', options);
    }
    Utf16Encoder.prototype.write = function (str) {
      return this.encoder.write(str);
    };
    Utf16Encoder.prototype.end = function () {
      return this.encoder.end();
    };
    function Utf16Decoder(options, codec) {
      this.decoder = null;
      this.initialBytes = [];
      this.initialBytesLen = 0;
      this.options = options || {};
      this.iconv = codec.iconv;
    }
    Utf16Decoder.prototype.write = function (buf) {
      if (!this.decoder) {
        this.initialBytes.push(buf);
        this.initialBytesLen += buf.length;
        if (this.initialBytesLen < 16) return '';
        var buf = Buffer2.concat(this.initialBytes),
          encoding = detectEncoding(buf, this.options.defaultEncoding);
        this.decoder = this.iconv.getDecoder(encoding, this.options);
        this.initialBytes.length = this.initialBytesLen = 0;
      }
      return this.decoder.write(buf);
    };
    Utf16Decoder.prototype.end = function () {
      if (!this.decoder) {
        var buf = Buffer2.concat(this.initialBytes),
          encoding = detectEncoding(buf, this.options.defaultEncoding);
        this.decoder = this.iconv.getDecoder(encoding, this.options);
        var res = this.decoder.write(buf),
          trail = this.decoder.end();
        return trail ? res + trail : res;
      }
      return this.decoder.end();
    };
    function detectEncoding(buf, defaultEncoding) {
      var enc = defaultEncoding || 'utf-16le';
      if (buf.length >= 2) {
        if (buf[0] == 254 && buf[1] == 255) enc = 'utf-16be';
        else if (buf[0] == 255 && buf[1] == 254) enc = 'utf-16le';
        else {
          var asciiCharsLE = 0,
            asciiCharsBE = 0,
            _len = Math.min(buf.length - (buf.length % 2), 64);
          for (var i = 0; i < _len; i += 2) {
            if (buf[i] === 0 && buf[i + 1] !== 0) asciiCharsBE++;
            if (buf[i] !== 0 && buf[i + 1] === 0) asciiCharsLE++;
          }
          if (asciiCharsBE > asciiCharsLE) enc = 'utf-16be';
          else if (asciiCharsBE < asciiCharsLE) enc = 'utf-16le';
        }
      }
      return enc;
    }
  },
});

// ../../node_modules/iconv-lite/encodings/utf7.js
var require_utf7 = __commonJS({
  '../../node_modules/iconv-lite/encodings/utf7.js'(exports2) {
    'use strict';
    var Buffer2 = require_safer().Buffer;
    exports2.utf7 = Utf7Codec;
    exports2.unicode11utf7 = 'utf7';
    function Utf7Codec(codecOptions, iconv) {
      this.iconv = iconv;
    }
    Utf7Codec.prototype.encoder = Utf7Encoder;
    Utf7Codec.prototype.decoder = Utf7Decoder;
    Utf7Codec.prototype.bomAware = true;
    var nonDirectChars = /[^A-Za-z0-9'\(\),-\.\/:\? \n\r\t]+/g;
    function Utf7Encoder(options, codec) {
      this.iconv = codec.iconv;
    }
    Utf7Encoder.prototype.write = function (str) {
      return Buffer2.from(
        str.replace(
          nonDirectChars,
          function (chunk) {
            return (
              '+' +
              (chunk === '+'
                ? ''
                : this.iconv
                    .encode(chunk, 'utf16-be')
                    .toString('base64')
                    .replace(/=+$/, '')) +
              '-'
            );
          }.bind(this)
        )
      );
    };
    Utf7Encoder.prototype.end = function () {};
    function Utf7Decoder(options, codec) {
      this.iconv = codec.iconv;
      this.inBase64 = false;
      this.base64Accum = '';
    }
    var base64Regex = /[A-Za-z0-9\/+]/;
    var base64Chars = [];
    for (i = 0; i < 256; i++)
      base64Chars[i] = base64Regex.test(String.fromCharCode(i));
    var i;
    var plusChar = '+'.charCodeAt(0);
    var minusChar = '-'.charCodeAt(0);
    var andChar = '&'.charCodeAt(0);
    Utf7Decoder.prototype.write = function (buf) {
      var res = '',
        lastI = 0,
        inBase64 = this.inBase64,
        base64Accum = this.base64Accum;
      for (var i2 = 0; i2 < buf.length; i2++) {
        if (!inBase64) {
          if (buf[i2] == plusChar) {
            res += this.iconv.decode(buf.slice(lastI, i2), 'ascii');
            lastI = i2 + 1;
            inBase64 = true;
          }
        } else {
          if (!base64Chars[buf[i2]]) {
            if (i2 == lastI && buf[i2] == minusChar) {
              res += '+';
            } else {
              var b64str = base64Accum + buf.slice(lastI, i2).toString();
              res += this.iconv.decode(
                Buffer2.from(b64str, 'base64'),
                'utf16-be'
              );
            }
            if (buf[i2] != minusChar) i2--;
            lastI = i2 + 1;
            inBase64 = false;
            base64Accum = '';
          }
        }
      }
      if (!inBase64) {
        res += this.iconv.decode(buf.slice(lastI), 'ascii');
      } else {
        var b64str = base64Accum + buf.slice(lastI).toString();
        var canBeDecoded = b64str.length - (b64str.length % 8);
        base64Accum = b64str.slice(canBeDecoded);
        b64str = b64str.slice(0, canBeDecoded);
        res += this.iconv.decode(Buffer2.from(b64str, 'base64'), 'utf16-be');
      }
      this.inBase64 = inBase64;
      this.base64Accum = base64Accum;
      return res;
    };
    Utf7Decoder.prototype.end = function () {
      var res = '';
      if (this.inBase64 && this.base64Accum.length > 0)
        res = this.iconv.decode(
          Buffer2.from(this.base64Accum, 'base64'),
          'utf16-be'
        );
      this.inBase64 = false;
      this.base64Accum = '';
      return res;
    };
    exports2.utf7imap = Utf7IMAPCodec;
    function Utf7IMAPCodec(codecOptions, iconv) {
      this.iconv = iconv;
    }
    Utf7IMAPCodec.prototype.encoder = Utf7IMAPEncoder;
    Utf7IMAPCodec.prototype.decoder = Utf7IMAPDecoder;
    Utf7IMAPCodec.prototype.bomAware = true;
    function Utf7IMAPEncoder(options, codec) {
      this.iconv = codec.iconv;
      this.inBase64 = false;
      this.base64Accum = Buffer2.alloc(6);
      this.base64AccumIdx = 0;
    }
    Utf7IMAPEncoder.prototype.write = function (str) {
      var inBase64 = this.inBase64,
        base64Accum = this.base64Accum,
        base64AccumIdx = this.base64AccumIdx,
        buf = Buffer2.alloc(str.length * 5 + 10),
        bufIdx = 0;
      for (var i2 = 0; i2 < str.length; i2++) {
        var uChar = str.charCodeAt(i2);
        if (32 <= uChar && uChar <= 126) {
          if (inBase64) {
            if (base64AccumIdx > 0) {
              bufIdx += buf.write(
                base64Accum
                  .slice(0, base64AccumIdx)
                  .toString('base64')
                  .replace(/\//g, ',')
                  .replace(/=+$/, ''),
                bufIdx
              );
              base64AccumIdx = 0;
            }
            buf[bufIdx++] = minusChar;
            inBase64 = false;
          }
          if (!inBase64) {
            buf[bufIdx++] = uChar;
            if (uChar === andChar) buf[bufIdx++] = minusChar;
          }
        } else {
          if (!inBase64) {
            buf[bufIdx++] = andChar;
            inBase64 = true;
          }
          if (inBase64) {
            base64Accum[base64AccumIdx++] = uChar >> 8;
            base64Accum[base64AccumIdx++] = uChar & 255;
            if (base64AccumIdx == base64Accum.length) {
              bufIdx += buf.write(
                base64Accum.toString('base64').replace(/\//g, ','),
                bufIdx
              );
              base64AccumIdx = 0;
            }
          }
        }
      }
      this.inBase64 = inBase64;
      this.base64AccumIdx = base64AccumIdx;
      return buf.slice(0, bufIdx);
    };
    Utf7IMAPEncoder.prototype.end = function () {
      var buf = Buffer2.alloc(10),
        bufIdx = 0;
      if (this.inBase64) {
        if (this.base64AccumIdx > 0) {
          bufIdx += buf.write(
            this.base64Accum
              .slice(0, this.base64AccumIdx)
              .toString('base64')
              .replace(/\//g, ',')
              .replace(/=+$/, ''),
            bufIdx
          );
          this.base64AccumIdx = 0;
        }
        buf[bufIdx++] = minusChar;
        this.inBase64 = false;
      }
      return buf.slice(0, bufIdx);
    };
    function Utf7IMAPDecoder(options, codec) {
      this.iconv = codec.iconv;
      this.inBase64 = false;
      this.base64Accum = '';
    }
    var base64IMAPChars = base64Chars.slice();
    base64IMAPChars[','.charCodeAt(0)] = true;
    Utf7IMAPDecoder.prototype.write = function (buf) {
      var res = '',
        lastI = 0,
        inBase64 = this.inBase64,
        base64Accum = this.base64Accum;
      for (var i2 = 0; i2 < buf.length; i2++) {
        if (!inBase64) {
          if (buf[i2] == andChar) {
            res += this.iconv.decode(buf.slice(lastI, i2), 'ascii');
            lastI = i2 + 1;
            inBase64 = true;
          }
        } else {
          if (!base64IMAPChars[buf[i2]]) {
            if (i2 == lastI && buf[i2] == minusChar) {
              res += '&';
            } else {
              var b64str =
                base64Accum +
                buf.slice(lastI, i2).toString().replace(/,/g, '/');
              res += this.iconv.decode(
                Buffer2.from(b64str, 'base64'),
                'utf16-be'
              );
            }
            if (buf[i2] != minusChar) i2--;
            lastI = i2 + 1;
            inBase64 = false;
            base64Accum = '';
          }
        }
      }
      if (!inBase64) {
        res += this.iconv.decode(buf.slice(lastI), 'ascii');
      } else {
        var b64str =
          base64Accum + buf.slice(lastI).toString().replace(/,/g, '/');
        var canBeDecoded = b64str.length - (b64str.length % 8);
        base64Accum = b64str.slice(canBeDecoded);
        b64str = b64str.slice(0, canBeDecoded);
        res += this.iconv.decode(Buffer2.from(b64str, 'base64'), 'utf16-be');
      }
      this.inBase64 = inBase64;
      this.base64Accum = base64Accum;
      return res;
    };
    Utf7IMAPDecoder.prototype.end = function () {
      var res = '';
      if (this.inBase64 && this.base64Accum.length > 0)
        res = this.iconv.decode(
          Buffer2.from(this.base64Accum, 'base64'),
          'utf16-be'
        );
      this.inBase64 = false;
      this.base64Accum = '';
      return res;
    };
  },
});

// ../../node_modules/iconv-lite/encodings/sbcs-codec.js
var require_sbcs_codec = __commonJS({
  '../../node_modules/iconv-lite/encodings/sbcs-codec.js'(exports2) {
    'use strict';
    var Buffer2 = require_safer().Buffer;
    exports2._sbcs = SBCSCodec;
    function SBCSCodec(codecOptions, iconv) {
      if (!codecOptions)
        throw new Error('SBCS codec is called without the data.');
      if (
        !codecOptions.chars ||
        (codecOptions.chars.length !== 128 && codecOptions.chars.length !== 256)
      )
        throw new Error(
          "Encoding '" +
            codecOptions.type +
            "' has incorrect 'chars' (must be of len 128 or 256)"
        );
      if (codecOptions.chars.length === 128) {
        var asciiString = '';
        for (var i = 0; i < 128; i++) asciiString += String.fromCharCode(i);
        codecOptions.chars = asciiString + codecOptions.chars;
      }
      this.decodeBuf = Buffer2.from(codecOptions.chars, 'ucs2');
      var encodeBuf = Buffer2.alloc(
        65536,
        iconv.defaultCharSingleByte.charCodeAt(0)
      );
      for (var i = 0; i < codecOptions.chars.length; i++)
        encodeBuf[codecOptions.chars.charCodeAt(i)] = i;
      this.encodeBuf = encodeBuf;
    }
    SBCSCodec.prototype.encoder = SBCSEncoder;
    SBCSCodec.prototype.decoder = SBCSDecoder;
    function SBCSEncoder(options, codec) {
      this.encodeBuf = codec.encodeBuf;
    }
    SBCSEncoder.prototype.write = function (str) {
      var buf = Buffer2.alloc(str.length);
      for (var i = 0; i < str.length; i++)
        buf[i] = this.encodeBuf[str.charCodeAt(i)];
      return buf;
    };
    SBCSEncoder.prototype.end = function () {};
    function SBCSDecoder(options, codec) {
      this.decodeBuf = codec.decodeBuf;
    }
    SBCSDecoder.prototype.write = function (buf) {
      var decodeBuf = this.decodeBuf;
      var newBuf = Buffer2.alloc(buf.length * 2);
      var idx1 = 0,
        idx2 = 0;
      for (var i = 0; i < buf.length; i++) {
        idx1 = buf[i] * 2;
        idx2 = i * 2;
        newBuf[idx2] = decodeBuf[idx1];
        newBuf[idx2 + 1] = decodeBuf[idx1 + 1];
      }
      return newBuf.toString('ucs2');
    };
    SBCSDecoder.prototype.end = function () {};
  },
});

// ../../node_modules/iconv-lite/encodings/sbcs-data.js
var require_sbcs_data = __commonJS({
  '../../node_modules/iconv-lite/encodings/sbcs-data.js'(exports2, module2) {
    'use strict';
    module2.exports = {
      // Not supported by iconv, not sure why.
      10029: 'maccenteuro',
      maccenteuro: {
        type: '_sbcs',
        chars:
          '\xC4\u0100\u0101\xC9\u0104\xD6\xDC\xE1\u0105\u010C\xE4\u010D\u0106\u0107\xE9\u0179\u017A\u010E\xED\u010F\u0112\u0113\u0116\xF3\u0117\xF4\xF6\xF5\xFA\u011A\u011B\xFC\u2020\xB0\u0118\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\u0119\xA8\u2260\u0123\u012E\u012F\u012A\u2264\u2265\u012B\u0136\u2202\u2211\u0142\u013B\u013C\u013D\u013E\u0139\u013A\u0145\u0146\u0143\xAC\u221A\u0144\u0147\u2206\xAB\xBB\u2026\xA0\u0148\u0150\xD5\u0151\u014C\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\u014D\u0154\u0155\u0158\u2039\u203A\u0159\u0156\u0157\u0160\u201A\u201E\u0161\u015A\u015B\xC1\u0164\u0165\xCD\u017D\u017E\u016A\xD3\xD4\u016B\u016E\xDA\u016F\u0170\u0171\u0172\u0173\xDD\xFD\u0137\u017B\u0141\u017C\u0122\u02C7',
      },
      808: 'cp808',
      ibm808: 'cp808',
      cp808: {
        type: '_sbcs',
        chars:
          '\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\u0401\u0451\u0404\u0454\u0407\u0457\u040E\u045E\xB0\u2219\xB7\u221A\u2116\u20AC\u25A0\xA0',
      },
      mik: {
        type: '_sbcs',
        chars:
          '\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\u2514\u2534\u252C\u251C\u2500\u253C\u2563\u2551\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2510\u2591\u2592\u2593\u2502\u2524\u2116\xA7\u2557\u255D\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\xDF\u0393\u03C0\u03A3\u03C3\xB5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\xB1\u2265\u2264\u2320\u2321\xF7\u2248\xB0\u2219\xB7\u221A\u207F\xB2\u25A0\xA0',
      },
      // Aliases of generated encodings.
      ascii8bit: 'ascii',
      usascii: 'ascii',
      ansix34: 'ascii',
      ansix341968: 'ascii',
      ansix341986: 'ascii',
      csascii: 'ascii',
      cp367: 'ascii',
      ibm367: 'ascii',
      isoir6: 'ascii',
      iso646us: 'ascii',
      iso646irv: 'ascii',
      us: 'ascii',
      latin1: 'iso88591',
      latin2: 'iso88592',
      latin3: 'iso88593',
      latin4: 'iso88594',
      latin5: 'iso88599',
      latin6: 'iso885910',
      latin7: 'iso885913',
      latin8: 'iso885914',
      latin9: 'iso885915',
      latin10: 'iso885916',
      csisolatin1: 'iso88591',
      csisolatin2: 'iso88592',
      csisolatin3: 'iso88593',
      csisolatin4: 'iso88594',
      csisolatincyrillic: 'iso88595',
      csisolatinarabic: 'iso88596',
      csisolatingreek: 'iso88597',
      csisolatinhebrew: 'iso88598',
      csisolatin5: 'iso88599',
      csisolatin6: 'iso885910',
      l1: 'iso88591',
      l2: 'iso88592',
      l3: 'iso88593',
      l4: 'iso88594',
      l5: 'iso88599',
      l6: 'iso885910',
      l7: 'iso885913',
      l8: 'iso885914',
      l9: 'iso885915',
      l10: 'iso885916',
      isoir14: 'iso646jp',
      isoir57: 'iso646cn',
      isoir100: 'iso88591',
      isoir101: 'iso88592',
      isoir109: 'iso88593',
      isoir110: 'iso88594',
      isoir144: 'iso88595',
      isoir127: 'iso88596',
      isoir126: 'iso88597',
      isoir138: 'iso88598',
      isoir148: 'iso88599',
      isoir157: 'iso885910',
      isoir166: 'tis620',
      isoir179: 'iso885913',
      isoir199: 'iso885914',
      isoir203: 'iso885915',
      isoir226: 'iso885916',
      cp819: 'iso88591',
      ibm819: 'iso88591',
      cyrillic: 'iso88595',
      arabic: 'iso88596',
      arabic8: 'iso88596',
      ecma114: 'iso88596',
      asmo708: 'iso88596',
      greek: 'iso88597',
      greek8: 'iso88597',
      ecma118: 'iso88597',
      elot928: 'iso88597',
      hebrew: 'iso88598',
      hebrew8: 'iso88598',
      turkish: 'iso88599',
      turkish8: 'iso88599',
      thai: 'iso885911',
      thai8: 'iso885911',
      celtic: 'iso885914',
      celtic8: 'iso885914',
      isoceltic: 'iso885914',
      tis6200: 'tis620',
      tis62025291: 'tis620',
      tis62025330: 'tis620',
      10000: 'macroman',
      10006: 'macgreek',
      10007: 'maccyrillic',
      10079: 'maciceland',
      10081: 'macturkish',
      cspc8codepage437: 'cp437',
      cspc775baltic: 'cp775',
      cspc850multilingual: 'cp850',
      cspcp852: 'cp852',
      cspc862latinhebrew: 'cp862',
      cpgr: 'cp869',
      msee: 'cp1250',
      mscyrl: 'cp1251',
      msansi: 'cp1252',
      msgreek: 'cp1253',
      msturk: 'cp1254',
      mshebr: 'cp1255',
      msarab: 'cp1256',
      winbaltrim: 'cp1257',
      cp20866: 'koi8r',
      20866: 'koi8r',
      ibm878: 'koi8r',
      cskoi8r: 'koi8r',
      cp21866: 'koi8u',
      21866: 'koi8u',
      ibm1168: 'koi8u',
      strk10482002: 'rk1048',
      tcvn5712: 'tcvn',
      tcvn57121: 'tcvn',
      gb198880: 'iso646cn',
      cn: 'iso646cn',
      csiso14jisc6220ro: 'iso646jp',
      jisc62201969ro: 'iso646jp',
      jp: 'iso646jp',
      cshproman8: 'hproman8',
      r8: 'hproman8',
      roman8: 'hproman8',
      xroman8: 'hproman8',
      ibm1051: 'hproman8',
      mac: 'macintosh',
      csmacintosh: 'macintosh',
    };
  },
});

// ../../node_modules/iconv-lite/encodings/sbcs-data-generated.js
var require_sbcs_data_generated = __commonJS({
  '../../node_modules/iconv-lite/encodings/sbcs-data-generated.js'(
    exports2,
    module2
  ) {
    'use strict';
    module2.exports = {
      437: 'cp437',
      737: 'cp737',
      775: 'cp775',
      850: 'cp850',
      852: 'cp852',
      855: 'cp855',
      856: 'cp856',
      857: 'cp857',
      858: 'cp858',
      860: 'cp860',
      861: 'cp861',
      862: 'cp862',
      863: 'cp863',
      864: 'cp864',
      865: 'cp865',
      866: 'cp866',
      869: 'cp869',
      874: 'windows874',
      922: 'cp922',
      1046: 'cp1046',
      1124: 'cp1124',
      1125: 'cp1125',
      1129: 'cp1129',
      1133: 'cp1133',
      1161: 'cp1161',
      1162: 'cp1162',
      1163: 'cp1163',
      1250: 'windows1250',
      1251: 'windows1251',
      1252: 'windows1252',
      1253: 'windows1253',
      1254: 'windows1254',
      1255: 'windows1255',
      1256: 'windows1256',
      1257: 'windows1257',
      1258: 'windows1258',
      28591: 'iso88591',
      28592: 'iso88592',
      28593: 'iso88593',
      28594: 'iso88594',
      28595: 'iso88595',
      28596: 'iso88596',
      28597: 'iso88597',
      28598: 'iso88598',
      28599: 'iso88599',
      28600: 'iso885910',
      28601: 'iso885911',
      28603: 'iso885913',
      28604: 'iso885914',
      28605: 'iso885915',
      28606: 'iso885916',
      windows874: {
        type: '_sbcs',
        chars:
          '\u20AC\uFFFD\uFFFD\uFFFD\uFFFD\u2026\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\xA0\u0E01\u0E02\u0E03\u0E04\u0E05\u0E06\u0E07\u0E08\u0E09\u0E0A\u0E0B\u0E0C\u0E0D\u0E0E\u0E0F\u0E10\u0E11\u0E12\u0E13\u0E14\u0E15\u0E16\u0E17\u0E18\u0E19\u0E1A\u0E1B\u0E1C\u0E1D\u0E1E\u0E1F\u0E20\u0E21\u0E22\u0E23\u0E24\u0E25\u0E26\u0E27\u0E28\u0E29\u0E2A\u0E2B\u0E2C\u0E2D\u0E2E\u0E2F\u0E30\u0E31\u0E32\u0E33\u0E34\u0E35\u0E36\u0E37\u0E38\u0E39\u0E3A\uFFFD\uFFFD\uFFFD\uFFFD\u0E3F\u0E40\u0E41\u0E42\u0E43\u0E44\u0E45\u0E46\u0E47\u0E48\u0E49\u0E4A\u0E4B\u0E4C\u0E4D\u0E4E\u0E4F\u0E50\u0E51\u0E52\u0E53\u0E54\u0E55\u0E56\u0E57\u0E58\u0E59\u0E5A\u0E5B\uFFFD\uFFFD\uFFFD\uFFFD',
      },
      win874: 'windows874',
      cp874: 'windows874',
      windows1250: {
        type: '_sbcs',
        chars:
          '\u20AC\uFFFD\u201A\uFFFD\u201E\u2026\u2020\u2021\uFFFD\u2030\u0160\u2039\u015A\u0164\u017D\u0179\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\u2122\u0161\u203A\u015B\u0165\u017E\u017A\xA0\u02C7\u02D8\u0141\xA4\u0104\xA6\xA7\xA8\xA9\u015E\xAB\xAC\xAD\xAE\u017B\xB0\xB1\u02DB\u0142\xB4\xB5\xB6\xB7\xB8\u0105\u015F\xBB\u013D\u02DD\u013E\u017C\u0154\xC1\xC2\u0102\xC4\u0139\u0106\xC7\u010C\xC9\u0118\xCB\u011A\xCD\xCE\u010E\u0110\u0143\u0147\xD3\xD4\u0150\xD6\xD7\u0158\u016E\xDA\u0170\xDC\xDD\u0162\xDF\u0155\xE1\xE2\u0103\xE4\u013A\u0107\xE7\u010D\xE9\u0119\xEB\u011B\xED\xEE\u010F\u0111\u0144\u0148\xF3\xF4\u0151\xF6\xF7\u0159\u016F\xFA\u0171\xFC\xFD\u0163\u02D9',
      },
      win1250: 'windows1250',
      cp1250: 'windows1250',
      windows1251: {
        type: '_sbcs',
        chars:
          '\u0402\u0403\u201A\u0453\u201E\u2026\u2020\u2021\u20AC\u2030\u0409\u2039\u040A\u040C\u040B\u040F\u0452\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\u2122\u0459\u203A\u045A\u045C\u045B\u045F\xA0\u040E\u045E\u0408\xA4\u0490\xA6\xA7\u0401\xA9\u0404\xAB\xAC\xAD\xAE\u0407\xB0\xB1\u0406\u0456\u0491\xB5\xB6\xB7\u0451\u2116\u0454\xBB\u0458\u0405\u0455\u0457\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F',
      },
      win1251: 'windows1251',
      cp1251: 'windows1251',
      windows1252: {
        type: '_sbcs',
        chars:
          '\u20AC\uFFFD\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\u0160\u2039\u0152\uFFFD\u017D\uFFFD\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u02DC\u2122\u0161\u203A\u0153\uFFFD\u017E\u0178\xA0\xA1\xA2\xA3\xA4\xA5\xA6\xA7\xA8\xA9\xAA\xAB\xAC\xAD\xAE\xAF\xB0\xB1\xB2\xB3\xB4\xB5\xB6\xB7\xB8\xB9\xBA\xBB\xBC\xBD\xBE\xBF\xC0\xC1\xC2\xC3\xC4\xC5\xC6\xC7\xC8\xC9\xCA\xCB\xCC\xCD\xCE\xCF\xD0\xD1\xD2\xD3\xD4\xD5\xD6\xD7\xD8\xD9\xDA\xDB\xDC\xDD\xDE\xDF\xE0\xE1\xE2\xE3\xE4\xE5\xE6\xE7\xE8\xE9\xEA\xEB\xEC\xED\xEE\xEF\xF0\xF1\xF2\xF3\xF4\xF5\xF6\xF7\xF8\xF9\xFA\xFB\xFC\xFD\xFE\xFF',
      },
      win1252: 'windows1252',
      cp1252: 'windows1252',
      windows1253: {
        type: '_sbcs',
        chars:
          '\u20AC\uFFFD\u201A\u0192\u201E\u2026\u2020\u2021\uFFFD\u2030\uFFFD\u2039\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\u2122\uFFFD\u203A\uFFFD\uFFFD\uFFFD\uFFFD\xA0\u0385\u0386\xA3\xA4\xA5\xA6\xA7\xA8\xA9\uFFFD\xAB\xAC\xAD\xAE\u2015\xB0\xB1\xB2\xB3\u0384\xB5\xB6\xB7\u0388\u0389\u038A\xBB\u038C\xBD\u038E\u038F\u0390\u0391\u0392\u0393\u0394\u0395\u0396\u0397\u0398\u0399\u039A\u039B\u039C\u039D\u039E\u039F\u03A0\u03A1\uFFFD\u03A3\u03A4\u03A5\u03A6\u03A7\u03A8\u03A9\u03AA\u03AB\u03AC\u03AD\u03AE\u03AF\u03B0\u03B1\u03B2\u03B3\u03B4\u03B5\u03B6\u03B7\u03B8\u03B9\u03BA\u03BB\u03BC\u03BD\u03BE\u03BF\u03C0\u03C1\u03C2\u03C3\u03C4\u03C5\u03C6\u03C7\u03C8\u03C9\u03CA\u03CB\u03CC\u03CD\u03CE\uFFFD',
      },
      win1253: 'windows1253',
      cp1253: 'windows1253',
      windows1254: {
        type: '_sbcs',
        chars:
          '\u20AC\uFFFD\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\u0160\u2039\u0152\uFFFD\uFFFD\uFFFD\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u02DC\u2122\u0161\u203A\u0153\uFFFD\uFFFD\u0178\xA0\xA1\xA2\xA3\xA4\xA5\xA6\xA7\xA8\xA9\xAA\xAB\xAC\xAD\xAE\xAF\xB0\xB1\xB2\xB3\xB4\xB5\xB6\xB7\xB8\xB9\xBA\xBB\xBC\xBD\xBE\xBF\xC0\xC1\xC2\xC3\xC4\xC5\xC6\xC7\xC8\xC9\xCA\xCB\xCC\xCD\xCE\xCF\u011E\xD1\xD2\xD3\xD4\xD5\xD6\xD7\xD8\xD9\xDA\xDB\xDC\u0130\u015E\xDF\xE0\xE1\xE2\xE3\xE4\xE5\xE6\xE7\xE8\xE9\xEA\xEB\xEC\xED\xEE\xEF\u011F\xF1\xF2\xF3\xF4\xF5\xF6\xF7\xF8\xF9\xFA\xFB\xFC\u0131\u015F\xFF',
      },
      win1254: 'windows1254',
      cp1254: 'windows1254',
      windows1255: {
        type: '_sbcs',
        chars:
          '\u20AC\uFFFD\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\uFFFD\u2039\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u02DC\u2122\uFFFD\u203A\uFFFD\uFFFD\uFFFD\uFFFD\xA0\xA1\xA2\xA3\u20AA\xA5\xA6\xA7\xA8\xA9\xD7\xAB\xAC\xAD\xAE\xAF\xB0\xB1\xB2\xB3\xB4\xB5\xB6\xB7\xB8\xB9\xF7\xBB\xBC\xBD\xBE\xBF\u05B0\u05B1\u05B2\u05B3\u05B4\u05B5\u05B6\u05B7\u05B8\u05B9\u05BA\u05BB\u05BC\u05BD\u05BE\u05BF\u05C0\u05C1\u05C2\u05C3\u05F0\u05F1\u05F2\u05F3\u05F4\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u05D0\u05D1\u05D2\u05D3\u05D4\u05D5\u05D6\u05D7\u05D8\u05D9\u05DA\u05DB\u05DC\u05DD\u05DE\u05DF\u05E0\u05E1\u05E2\u05E3\u05E4\u05E5\u05E6\u05E7\u05E8\u05E9\u05EA\uFFFD\uFFFD\u200E\u200F\uFFFD',
      },
      win1255: 'windows1255',
      cp1255: 'windows1255',
      windows1256: {
        type: '_sbcs',
        chars:
          '\u20AC\u067E\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\u0679\u2039\u0152\u0686\u0698\u0688\u06AF\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u06A9\u2122\u0691\u203A\u0153\u200C\u200D\u06BA\xA0\u060C\xA2\xA3\xA4\xA5\xA6\xA7\xA8\xA9\u06BE\xAB\xAC\xAD\xAE\xAF\xB0\xB1\xB2\xB3\xB4\xB5\xB6\xB7\xB8\xB9\u061B\xBB\xBC\xBD\xBE\u061F\u06C1\u0621\u0622\u0623\u0624\u0625\u0626\u0627\u0628\u0629\u062A\u062B\u062C\u062D\u062E\u062F\u0630\u0631\u0632\u0633\u0634\u0635\u0636\xD7\u0637\u0638\u0639\u063A\u0640\u0641\u0642\u0643\xE0\u0644\xE2\u0645\u0646\u0647\u0648\xE7\xE8\xE9\xEA\xEB\u0649\u064A\xEE\xEF\u064B\u064C\u064D\u064E\xF4\u064F\u0650\xF7\u0651\xF9\u0652\xFB\xFC\u200E\u200F\u06D2',
      },
      win1256: 'windows1256',
      cp1256: 'windows1256',
      windows1257: {
        type: '_sbcs',
        chars:
          '\u20AC\uFFFD\u201A\uFFFD\u201E\u2026\u2020\u2021\uFFFD\u2030\uFFFD\u2039\uFFFD\xA8\u02C7\xB8\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\u2122\uFFFD\u203A\uFFFD\xAF\u02DB\uFFFD\xA0\uFFFD\xA2\xA3\xA4\uFFFD\xA6\xA7\xD8\xA9\u0156\xAB\xAC\xAD\xAE\xC6\xB0\xB1\xB2\xB3\xB4\xB5\xB6\xB7\xF8\xB9\u0157\xBB\xBC\xBD\xBE\xE6\u0104\u012E\u0100\u0106\xC4\xC5\u0118\u0112\u010C\xC9\u0179\u0116\u0122\u0136\u012A\u013B\u0160\u0143\u0145\xD3\u014C\xD5\xD6\xD7\u0172\u0141\u015A\u016A\xDC\u017B\u017D\xDF\u0105\u012F\u0101\u0107\xE4\xE5\u0119\u0113\u010D\xE9\u017A\u0117\u0123\u0137\u012B\u013C\u0161\u0144\u0146\xF3\u014D\xF5\xF6\xF7\u0173\u0142\u015B\u016B\xFC\u017C\u017E\u02D9',
      },
      win1257: 'windows1257',
      cp1257: 'windows1257',
      windows1258: {
        type: '_sbcs',
        chars:
          '\u20AC\uFFFD\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\uFFFD\u2039\u0152\uFFFD\uFFFD\uFFFD\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u02DC\u2122\uFFFD\u203A\u0153\uFFFD\uFFFD\u0178\xA0\xA1\xA2\xA3\xA4\xA5\xA6\xA7\xA8\xA9\xAA\xAB\xAC\xAD\xAE\xAF\xB0\xB1\xB2\xB3\xB4\xB5\xB6\xB7\xB8\xB9\xBA\xBB\xBC\xBD\xBE\xBF\xC0\xC1\xC2\u0102\xC4\xC5\xC6\xC7\xC8\xC9\xCA\xCB\u0300\xCD\xCE\xCF\u0110\xD1\u0309\xD3\xD4\u01A0\xD6\xD7\xD8\xD9\xDA\xDB\xDC\u01AF\u0303\xDF\xE0\xE1\xE2\u0103\xE4\xE5\xE6\xE7\xE8\xE9\xEA\xEB\u0301\xED\xEE\xEF\u0111\xF1\u0323\xF3\xF4\u01A1\xF6\xF7\xF8\xF9\xFA\xFB\xFC\u01B0\u20AB\xFF',
      },
      win1258: 'windows1258',
      cp1258: 'windows1258',
      iso88591: {
        type: '_sbcs',
        chars:
          '\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8A\x8B\x8C\x8D\x8E\x8F\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9A\x9B\x9C\x9D\x9E\x9F\xA0\xA1\xA2\xA3\xA4\xA5\xA6\xA7\xA8\xA9\xAA\xAB\xAC\xAD\xAE\xAF\xB0\xB1\xB2\xB3\xB4\xB5\xB6\xB7\xB8\xB9\xBA\xBB\xBC\xBD\xBE\xBF\xC0\xC1\xC2\xC3\xC4\xC5\xC6\xC7\xC8\xC9\xCA\xCB\xCC\xCD\xCE\xCF\xD0\xD1\xD2\xD3\xD4\xD5\xD6\xD7\xD8\xD9\xDA\xDB\xDC\xDD\xDE\xDF\xE0\xE1\xE2\xE3\xE4\xE5\xE6\xE7\xE8\xE9\xEA\xEB\xEC\xED\xEE\xEF\xF0\xF1\xF2\xF3\xF4\xF5\xF6\xF7\xF8\xF9\xFA\xFB\xFC\xFD\xFE\xFF',
      },
      cp28591: 'iso88591',
      iso88592: {
        type: '_sbcs',
        chars:
          '\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8A\x8B\x8C\x8D\x8E\x8F\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9A\x9B\x9C\x9D\x9E\x9F\xA0\u0104\u02D8\u0141\xA4\u013D\u015A\xA7\xA8\u0160\u015E\u0164\u0179\xAD\u017D\u017B\xB0\u0105\u02DB\u0142\xB4\u013E\u015B\u02C7\xB8\u0161\u015F\u0165\u017A\u02DD\u017E\u017C\u0154\xC1\xC2\u0102\xC4\u0139\u0106\xC7\u010C\xC9\u0118\xCB\u011A\xCD\xCE\u010E\u0110\u0143\u0147\xD3\xD4\u0150\xD6\xD7\u0158\u016E\xDA\u0170\xDC\xDD\u0162\xDF\u0155\xE1\xE2\u0103\xE4\u013A\u0107\xE7\u010D\xE9\u0119\xEB\u011B\xED\xEE\u010F\u0111\u0144\u0148\xF3\xF4\u0151\xF6\xF7\u0159\u016F\xFA\u0171\xFC\xFD\u0163\u02D9',
      },
      cp28592: 'iso88592',
      iso88593: {
        type: '_sbcs',
        chars:
          '\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8A\x8B\x8C\x8D\x8E\x8F\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9A\x9B\x9C\x9D\x9E\x9F\xA0\u0126\u02D8\xA3\xA4\uFFFD\u0124\xA7\xA8\u0130\u015E\u011E\u0134\xAD\uFFFD\u017B\xB0\u0127\xB2\xB3\xB4\xB5\u0125\xB7\xB8\u0131\u015F\u011F\u0135\xBD\uFFFD\u017C\xC0\xC1\xC2\uFFFD\xC4\u010A\u0108\xC7\xC8\xC9\xCA\xCB\xCC\xCD\xCE\xCF\uFFFD\xD1\xD2\xD3\xD4\u0120\xD6\xD7\u011C\xD9\xDA\xDB\xDC\u016C\u015C\xDF\xE0\xE1\xE2\uFFFD\xE4\u010B\u0109\xE7\xE8\xE9\xEA\xEB\xEC\xED\xEE\xEF\uFFFD\xF1\xF2\xF3\xF4\u0121\xF6\xF7\u011D\xF9\xFA\xFB\xFC\u016D\u015D\u02D9',
      },
      cp28593: 'iso88593',
      iso88594: {
        type: '_sbcs',
        chars:
          '\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8A\x8B\x8C\x8D\x8E\x8F\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9A\x9B\x9C\x9D\x9E\x9F\xA0\u0104\u0138\u0156\xA4\u0128\u013B\xA7\xA8\u0160\u0112\u0122\u0166\xAD\u017D\xAF\xB0\u0105\u02DB\u0157\xB4\u0129\u013C\u02C7\xB8\u0161\u0113\u0123\u0167\u014A\u017E\u014B\u0100\xC1\xC2\xC3\xC4\xC5\xC6\u012E\u010C\xC9\u0118\xCB\u0116\xCD\xCE\u012A\u0110\u0145\u014C\u0136\xD4\xD5\xD6\xD7\xD8\u0172\xDA\xDB\xDC\u0168\u016A\xDF\u0101\xE1\xE2\xE3\xE4\xE5\xE6\u012F\u010D\xE9\u0119\xEB\u0117\xED\xEE\u012B\u0111\u0146\u014D\u0137\xF4\xF5\xF6\xF7\xF8\u0173\xFA\xFB\xFC\u0169\u016B\u02D9',
      },
      cp28594: 'iso88594',
      iso88595: {
        type: '_sbcs',
        chars:
          '\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8A\x8B\x8C\x8D\x8E\x8F\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9A\x9B\x9C\x9D\x9E\x9F\xA0\u0401\u0402\u0403\u0404\u0405\u0406\u0407\u0408\u0409\u040A\u040B\u040C\xAD\u040E\u040F\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\u2116\u0451\u0452\u0453\u0454\u0455\u0456\u0457\u0458\u0459\u045A\u045B\u045C\xA7\u045E\u045F',
      },
      cp28595: 'iso88595',
      iso88596: {
        type: '_sbcs',
        chars:
          '\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8A\x8B\x8C\x8D\x8E\x8F\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9A\x9B\x9C\x9D\x9E\x9F\xA0\uFFFD\uFFFD\uFFFD\xA4\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u060C\xAD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u061B\uFFFD\uFFFD\uFFFD\u061F\uFFFD\u0621\u0622\u0623\u0624\u0625\u0626\u0627\u0628\u0629\u062A\u062B\u062C\u062D\u062E\u062F\u0630\u0631\u0632\u0633\u0634\u0635\u0636\u0637\u0638\u0639\u063A\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u0640\u0641\u0642\u0643\u0644\u0645\u0646\u0647\u0648\u0649\u064A\u064B\u064C\u064D\u064E\u064F\u0650\u0651\u0652\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD',
      },
      cp28596: 'iso88596',
      iso88597: {
        type: '_sbcs',
        chars:
          '\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8A\x8B\x8C\x8D\x8E\x8F\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9A\x9B\x9C\x9D\x9E\x9F\xA0\u2018\u2019\xA3\u20AC\u20AF\xA6\xA7\xA8\xA9\u037A\xAB\xAC\xAD\uFFFD\u2015\xB0\xB1\xB2\xB3\u0384\u0385\u0386\xB7\u0388\u0389\u038A\xBB\u038C\xBD\u038E\u038F\u0390\u0391\u0392\u0393\u0394\u0395\u0396\u0397\u0398\u0399\u039A\u039B\u039C\u039D\u039E\u039F\u03A0\u03A1\uFFFD\u03A3\u03A4\u03A5\u03A6\u03A7\u03A8\u03A9\u03AA\u03AB\u03AC\u03AD\u03AE\u03AF\u03B0\u03B1\u03B2\u03B3\u03B4\u03B5\u03B6\u03B7\u03B8\u03B9\u03BA\u03BB\u03BC\u03BD\u03BE\u03BF\u03C0\u03C1\u03C2\u03C3\u03C4\u03C5\u03C6\u03C7\u03C8\u03C9\u03CA\u03CB\u03CC\u03CD\u03CE\uFFFD',
      },
      cp28597: 'iso88597',
      iso88598: {
        type: '_sbcs',
        chars:
          '\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8A\x8B\x8C\x8D\x8E\x8F\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9A\x9B\x9C\x9D\x9E\x9F\xA0\uFFFD\xA2\xA3\xA4\xA5\xA6\xA7\xA8\xA9\xD7\xAB\xAC\xAD\xAE\xAF\xB0\xB1\xB2\xB3\xB4\xB5\xB6\xB7\xB8\xB9\xF7\xBB\xBC\xBD\xBE\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u2017\u05D0\u05D1\u05D2\u05D3\u05D4\u05D5\u05D6\u05D7\u05D8\u05D9\u05DA\u05DB\u05DC\u05DD\u05DE\u05DF\u05E0\u05E1\u05E2\u05E3\u05E4\u05E5\u05E6\u05E7\u05E8\u05E9\u05EA\uFFFD\uFFFD\u200E\u200F\uFFFD',
      },
      cp28598: 'iso88598',
      iso88599: {
        type: '_sbcs',
        chars:
          '\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8A\x8B\x8C\x8D\x8E\x8F\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9A\x9B\x9C\x9D\x9E\x9F\xA0\xA1\xA2\xA3\xA4\xA5\xA6\xA7\xA8\xA9\xAA\xAB\xAC\xAD\xAE\xAF\xB0\xB1\xB2\xB3\xB4\xB5\xB6\xB7\xB8\xB9\xBA\xBB\xBC\xBD\xBE\xBF\xC0\xC1\xC2\xC3\xC4\xC5\xC6\xC7\xC8\xC9\xCA\xCB\xCC\xCD\xCE\xCF\u011E\xD1\xD2\xD3\xD4\xD5\xD6\xD7\xD8\xD9\xDA\xDB\xDC\u0130\u015E\xDF\xE0\xE1\xE2\xE3\xE4\xE5\xE6\xE7\xE8\xE9\xEA\xEB\xEC\xED\xEE\xEF\u011F\xF1\xF2\xF3\xF4\xF5\xF6\xF7\xF8\xF9\xFA\xFB\xFC\u0131\u015F\xFF',
      },
      cp28599: 'iso88599',
      iso885910: {
        type: '_sbcs',
        chars:
          '\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8A\x8B\x8C\x8D\x8E\x8F\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9A\x9B\x9C\x9D\x9E\x9F\xA0\u0104\u0112\u0122\u012A\u0128\u0136\xA7\u013B\u0110\u0160\u0166\u017D\xAD\u016A\u014A\xB0\u0105\u0113\u0123\u012B\u0129\u0137\xB7\u013C\u0111\u0161\u0167\u017E\u2015\u016B\u014B\u0100\xC1\xC2\xC3\xC4\xC5\xC6\u012E\u010C\xC9\u0118\xCB\u0116\xCD\xCE\xCF\xD0\u0145\u014C\xD3\xD4\xD5\xD6\u0168\xD8\u0172\xDA\xDB\xDC\xDD\xDE\xDF\u0101\xE1\xE2\xE3\xE4\xE5\xE6\u012F\u010D\xE9\u0119\xEB\u0117\xED\xEE\xEF\xF0\u0146\u014D\xF3\xF4\xF5\xF6\u0169\xF8\u0173\xFA\xFB\xFC\xFD\xFE\u0138',
      },
      cp28600: 'iso885910',
      iso885911: {
        type: '_sbcs',
        chars:
          '\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8A\x8B\x8C\x8D\x8E\x8F\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9A\x9B\x9C\x9D\x9E\x9F\xA0\u0E01\u0E02\u0E03\u0E04\u0E05\u0E06\u0E07\u0E08\u0E09\u0E0A\u0E0B\u0E0C\u0E0D\u0E0E\u0E0F\u0E10\u0E11\u0E12\u0E13\u0E14\u0E15\u0E16\u0E17\u0E18\u0E19\u0E1A\u0E1B\u0E1C\u0E1D\u0E1E\u0E1F\u0E20\u0E21\u0E22\u0E23\u0E24\u0E25\u0E26\u0E27\u0E28\u0E29\u0E2A\u0E2B\u0E2C\u0E2D\u0E2E\u0E2F\u0E30\u0E31\u0E32\u0E33\u0E34\u0E35\u0E36\u0E37\u0E38\u0E39\u0E3A\uFFFD\uFFFD\uFFFD\uFFFD\u0E3F\u0E40\u0E41\u0E42\u0E43\u0E44\u0E45\u0E46\u0E47\u0E48\u0E49\u0E4A\u0E4B\u0E4C\u0E4D\u0E4E\u0E4F\u0E50\u0E51\u0E52\u0E53\u0E54\u0E55\u0E56\u0E57\u0E58\u0E59\u0E5A\u0E5B\uFFFD\uFFFD\uFFFD\uFFFD',
      },
      cp28601: 'iso885911',
      iso885913: {
        type: '_sbcs',
        chars:
          '\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8A\x8B\x8C\x8D\x8E\x8F\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9A\x9B\x9C\x9D\x9E\x9F\xA0\u201D\xA2\xA3\xA4\u201E\xA6\xA7\xD8\xA9\u0156\xAB\xAC\xAD\xAE\xC6\xB0\xB1\xB2\xB3\u201C\xB5\xB6\xB7\xF8\xB9\u0157\xBB\xBC\xBD\xBE\xE6\u0104\u012E\u0100\u0106\xC4\xC5\u0118\u0112\u010C\xC9\u0179\u0116\u0122\u0136\u012A\u013B\u0160\u0143\u0145\xD3\u014C\xD5\xD6\xD7\u0172\u0141\u015A\u016A\xDC\u017B\u017D\xDF\u0105\u012F\u0101\u0107\xE4\xE5\u0119\u0113\u010D\xE9\u017A\u0117\u0123\u0137\u012B\u013C\u0161\u0144\u0146\xF3\u014D\xF5\xF6\xF7\u0173\u0142\u015B\u016B\xFC\u017C\u017E\u2019',
      },
      cp28603: 'iso885913',
      iso885914: {
        type: '_sbcs',
        chars:
          '\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8A\x8B\x8C\x8D\x8E\x8F\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9A\x9B\x9C\x9D\x9E\x9F\xA0\u1E02\u1E03\xA3\u010A\u010B\u1E0A\xA7\u1E80\xA9\u1E82\u1E0B\u1EF2\xAD\xAE\u0178\u1E1E\u1E1F\u0120\u0121\u1E40\u1E41\xB6\u1E56\u1E81\u1E57\u1E83\u1E60\u1EF3\u1E84\u1E85\u1E61\xC0\xC1\xC2\xC3\xC4\xC5\xC6\xC7\xC8\xC9\xCA\xCB\xCC\xCD\xCE\xCF\u0174\xD1\xD2\xD3\xD4\xD5\xD6\u1E6A\xD8\xD9\xDA\xDB\xDC\xDD\u0176\xDF\xE0\xE1\xE2\xE3\xE4\xE5\xE6\xE7\xE8\xE9\xEA\xEB\xEC\xED\xEE\xEF\u0175\xF1\xF2\xF3\xF4\xF5\xF6\u1E6B\xF8\xF9\xFA\xFB\xFC\xFD\u0177\xFF',
      },
      cp28604: 'iso885914',
      iso885915: {
        type: '_sbcs',
        chars:
          '\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8A\x8B\x8C\x8D\x8E\x8F\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9A\x9B\x9C\x9D\x9E\x9F\xA0\xA1\xA2\xA3\u20AC\xA5\u0160\xA7\u0161\xA9\xAA\xAB\xAC\xAD\xAE\xAF\xB0\xB1\xB2\xB3\u017D\xB5\xB6\xB7\u017E\xB9\xBA\xBB\u0152\u0153\u0178\xBF\xC0\xC1\xC2\xC3\xC4\xC5\xC6\xC7\xC8\xC9\xCA\xCB\xCC\xCD\xCE\xCF\xD0\xD1\xD2\xD3\xD4\xD5\xD6\xD7\xD8\xD9\xDA\xDB\xDC\xDD\xDE\xDF\xE0\xE1\xE2\xE3\xE4\xE5\xE6\xE7\xE8\xE9\xEA\xEB\xEC\xED\xEE\xEF\xF0\xF1\xF2\xF3\xF4\xF5\xF6\xF7\xF8\xF9\xFA\xFB\xFC\xFD\xFE\xFF',
      },
      cp28605: 'iso885915',
      iso885916: {
        type: '_sbcs',
        chars:
          '\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8A\x8B\x8C\x8D\x8E\x8F\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9A\x9B\x9C\x9D\x9E\x9F\xA0\u0104\u0105\u0141\u20AC\u201E\u0160\xA7\u0161\xA9\u0218\xAB\u0179\xAD\u017A\u017B\xB0\xB1\u010C\u0142\u017D\u201D\xB6\xB7\u017E\u010D\u0219\xBB\u0152\u0153\u0178\u017C\xC0\xC1\xC2\u0102\xC4\u0106\xC6\xC7\xC8\xC9\xCA\xCB\xCC\xCD\xCE\xCF\u0110\u0143\xD2\xD3\xD4\u0150\xD6\u015A\u0170\xD9\xDA\xDB\xDC\u0118\u021A\xDF\xE0\xE1\xE2\u0103\xE4\u0107\xE6\xE7\xE8\xE9\xEA\xEB\xEC\xED\xEE\xEF\u0111\u0144\xF2\xF3\xF4\u0151\xF6\u015B\u0171\xF9\xFA\xFB\xFC\u0119\u021B\xFF',
      },
      cp28606: 'iso885916',
      cp437: {
        type: '_sbcs',
        chars:
          '\xC7\xFC\xE9\xE2\xE4\xE0\xE5\xE7\xEA\xEB\xE8\xEF\xEE\xEC\xC4\xC5\xC9\xE6\xC6\xF4\xF6\xF2\xFB\xF9\xFF\xD6\xDC\xA2\xA3\xA5\u20A7\u0192\xE1\xED\xF3\xFA\xF1\xD1\xAA\xBA\xBF\u2310\xAC\xBD\xBC\xA1\xAB\xBB\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\xDF\u0393\u03C0\u03A3\u03C3\xB5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\xB1\u2265\u2264\u2320\u2321\xF7\u2248\xB0\u2219\xB7\u221A\u207F\xB2\u25A0\xA0',
      },
      ibm437: 'cp437',
      csibm437: 'cp437',
      cp737: {
        type: '_sbcs',
        chars:
          '\u0391\u0392\u0393\u0394\u0395\u0396\u0397\u0398\u0399\u039A\u039B\u039C\u039D\u039E\u039F\u03A0\u03A1\u03A3\u03A4\u03A5\u03A6\u03A7\u03A8\u03A9\u03B1\u03B2\u03B3\u03B4\u03B5\u03B6\u03B7\u03B8\u03B9\u03BA\u03BB\u03BC\u03BD\u03BE\u03BF\u03C0\u03C1\u03C3\u03C2\u03C4\u03C5\u03C6\u03C7\u03C8\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03C9\u03AC\u03AD\u03AE\u03CA\u03AF\u03CC\u03CD\u03CB\u03CE\u0386\u0388\u0389\u038A\u038C\u038E\u038F\xB1\u2265\u2264\u03AA\u03AB\xF7\u2248\xB0\u2219\xB7\u221A\u207F\xB2\u25A0\xA0',
      },
      ibm737: 'cp737',
      csibm737: 'cp737',
      cp775: {
        type: '_sbcs',
        chars:
          '\u0106\xFC\xE9\u0101\xE4\u0123\xE5\u0107\u0142\u0113\u0156\u0157\u012B\u0179\xC4\xC5\xC9\xE6\xC6\u014D\xF6\u0122\xA2\u015A\u015B\xD6\xDC\xF8\xA3\xD8\xD7\xA4\u0100\u012A\xF3\u017B\u017C\u017A\u201D\xA6\xA9\xAE\xAC\xBD\xBC\u0141\xAB\xBB\u2591\u2592\u2593\u2502\u2524\u0104\u010C\u0118\u0116\u2563\u2551\u2557\u255D\u012E\u0160\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u0172\u016A\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u017D\u0105\u010D\u0119\u0117\u012F\u0161\u0173\u016B\u017E\u2518\u250C\u2588\u2584\u258C\u2590\u2580\xD3\xDF\u014C\u0143\xF5\xD5\xB5\u0144\u0136\u0137\u013B\u013C\u0146\u0112\u0145\u2019\xAD\xB1\u201C\xBE\xB6\xA7\xF7\u201E\xB0\u2219\xB7\xB9\xB3\xB2\u25A0\xA0',
      },
      ibm775: 'cp775',
      csibm775: 'cp775',
      cp850: {
        type: '_sbcs',
        chars:
          '\xC7\xFC\xE9\xE2\xE4\xE0\xE5\xE7\xEA\xEB\xE8\xEF\xEE\xEC\xC4\xC5\xC9\xE6\xC6\xF4\xF6\xF2\xFB\xF9\xFF\xD6\xDC\xF8\xA3\xD8\xD7\u0192\xE1\xED\xF3\xFA\xF1\xD1\xAA\xBA\xBF\xAE\xAC\xBD\xBC\xA1\xAB\xBB\u2591\u2592\u2593\u2502\u2524\xC1\xC2\xC0\xA9\u2563\u2551\u2557\u255D\xA2\xA5\u2510\u2514\u2534\u252C\u251C\u2500\u253C\xE3\xC3\u255A\u2554\u2569\u2566\u2560\u2550\u256C\xA4\xF0\xD0\xCA\xCB\xC8\u0131\xCD\xCE\xCF\u2518\u250C\u2588\u2584\xA6\xCC\u2580\xD3\xDF\xD4\xD2\xF5\xD5\xB5\xFE\xDE\xDA\xDB\xD9\xFD\xDD\xAF\xB4\xAD\xB1\u2017\xBE\xB6\xA7\xF7\xB8\xB0\xA8\xB7\xB9\xB3\xB2\u25A0\xA0',
      },
      ibm850: 'cp850',
      csibm850: 'cp850',
      cp852: {
        type: '_sbcs',
        chars:
          '\xC7\xFC\xE9\xE2\xE4\u016F\u0107\xE7\u0142\xEB\u0150\u0151\xEE\u0179\xC4\u0106\xC9\u0139\u013A\xF4\xF6\u013D\u013E\u015A\u015B\xD6\xDC\u0164\u0165\u0141\xD7\u010D\xE1\xED\xF3\xFA\u0104\u0105\u017D\u017E\u0118\u0119\xAC\u017A\u010C\u015F\xAB\xBB\u2591\u2592\u2593\u2502\u2524\xC1\xC2\u011A\u015E\u2563\u2551\u2557\u255D\u017B\u017C\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u0102\u0103\u255A\u2554\u2569\u2566\u2560\u2550\u256C\xA4\u0111\u0110\u010E\xCB\u010F\u0147\xCD\xCE\u011B\u2518\u250C\u2588\u2584\u0162\u016E\u2580\xD3\xDF\xD4\u0143\u0144\u0148\u0160\u0161\u0154\xDA\u0155\u0170\xFD\xDD\u0163\xB4\xAD\u02DD\u02DB\u02C7\u02D8\xA7\xF7\xB8\xB0\xA8\u02D9\u0171\u0158\u0159\u25A0\xA0',
      },
      ibm852: 'cp852',
      csibm852: 'cp852',
      cp855: {
        type: '_sbcs',
        chars:
          '\u0452\u0402\u0453\u0403\u0451\u0401\u0454\u0404\u0455\u0405\u0456\u0406\u0457\u0407\u0458\u0408\u0459\u0409\u045A\u040A\u045B\u040B\u045C\u040C\u045E\u040E\u045F\u040F\u044E\u042E\u044A\u042A\u0430\u0410\u0431\u0411\u0446\u0426\u0434\u0414\u0435\u0415\u0444\u0424\u0433\u0413\xAB\xBB\u2591\u2592\u2593\u2502\u2524\u0445\u0425\u0438\u0418\u2563\u2551\u2557\u255D\u0439\u0419\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u043A\u041A\u255A\u2554\u2569\u2566\u2560\u2550\u256C\xA4\u043B\u041B\u043C\u041C\u043D\u041D\u043E\u041E\u043F\u2518\u250C\u2588\u2584\u041F\u044F\u2580\u042F\u0440\u0420\u0441\u0421\u0442\u0422\u0443\u0423\u0436\u0416\u0432\u0412\u044C\u042C\u2116\xAD\u044B\u042B\u0437\u0417\u0448\u0428\u044D\u042D\u0449\u0429\u0447\u0427\xA7\u25A0\xA0',
      },
      ibm855: 'cp855',
      csibm855: 'cp855',
      cp856: {
        type: '_sbcs',
        chars:
          '\u05D0\u05D1\u05D2\u05D3\u05D4\u05D5\u05D6\u05D7\u05D8\u05D9\u05DA\u05DB\u05DC\u05DD\u05DE\u05DF\u05E0\u05E1\u05E2\u05E3\u05E4\u05E5\u05E6\u05E7\u05E8\u05E9\u05EA\uFFFD\xA3\uFFFD\xD7\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\xAE\xAC\xBD\xBC\uFFFD\xAB\xBB\u2591\u2592\u2593\u2502\u2524\uFFFD\uFFFD\uFFFD\xA9\u2563\u2551\u2557\u255D\xA2\xA5\u2510\u2514\u2534\u252C\u251C\u2500\u253C\uFFFD\uFFFD\u255A\u2554\u2569\u2566\u2560\u2550\u256C\xA4\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u2518\u250C\u2588\u2584\xA6\uFFFD\u2580\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\xB5\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\xAF\xB4\xAD\xB1\u2017\xBE\xB6\xA7\xF7\xB8\xB0\xA8\xB7\xB9\xB3\xB2\u25A0\xA0',
      },
      ibm856: 'cp856',
      csibm856: 'cp856',
      cp857: {
        type: '_sbcs',
        chars:
          '\xC7\xFC\xE9\xE2\xE4\xE0\xE5\xE7\xEA\xEB\xE8\xEF\xEE\u0131\xC4\xC5\xC9\xE6\xC6\xF4\xF6\xF2\xFB\xF9\u0130\xD6\xDC\xF8\xA3\xD8\u015E\u015F\xE1\xED\xF3\xFA\xF1\xD1\u011E\u011F\xBF\xAE\xAC\xBD\xBC\xA1\xAB\xBB\u2591\u2592\u2593\u2502\u2524\xC1\xC2\xC0\xA9\u2563\u2551\u2557\u255D\xA2\xA5\u2510\u2514\u2534\u252C\u251C\u2500\u253C\xE3\xC3\u255A\u2554\u2569\u2566\u2560\u2550\u256C\xA4\xBA\xAA\xCA\xCB\xC8\uFFFD\xCD\xCE\xCF\u2518\u250C\u2588\u2584\xA6\xCC\u2580\xD3\xDF\xD4\xD2\xF5\xD5\xB5\uFFFD\xD7\xDA\xDB\xD9\xEC\xFF\xAF\xB4\xAD\xB1\uFFFD\xBE\xB6\xA7\xF7\xB8\xB0\xA8\xB7\xB9\xB3\xB2\u25A0\xA0',
      },
      ibm857: 'cp857',
      csibm857: 'cp857',
      cp858: {
        type: '_sbcs',
        chars:
          '\xC7\xFC\xE9\xE2\xE4\xE0\xE5\xE7\xEA\xEB\xE8\xEF\xEE\xEC\xC4\xC5\xC9\xE6\xC6\xF4\xF6\xF2\xFB\xF9\xFF\xD6\xDC\xF8\xA3\xD8\xD7\u0192\xE1\xED\xF3\xFA\xF1\xD1\xAA\xBA\xBF\xAE\xAC\xBD\xBC\xA1\xAB\xBB\u2591\u2592\u2593\u2502\u2524\xC1\xC2\xC0\xA9\u2563\u2551\u2557\u255D\xA2\xA5\u2510\u2514\u2534\u252C\u251C\u2500\u253C\xE3\xC3\u255A\u2554\u2569\u2566\u2560\u2550\u256C\xA4\xF0\xD0\xCA\xCB\xC8\u20AC\xCD\xCE\xCF\u2518\u250C\u2588\u2584\xA6\xCC\u2580\xD3\xDF\xD4\xD2\xF5\xD5\xB5\xFE\xDE\xDA\xDB\xD9\xFD\xDD\xAF\xB4\xAD\xB1\u2017\xBE\xB6\xA7\xF7\xB8\xB0\xA8\xB7\xB9\xB3\xB2\u25A0\xA0',
      },
      ibm858: 'cp858',
      csibm858: 'cp858',
      cp860: {
        type: '_sbcs',
        chars:
          '\xC7\xFC\xE9\xE2\xE3\xE0\xC1\xE7\xEA\xCA\xE8\xCD\xD4\xEC\xC3\xC2\xC9\xC0\xC8\xF4\xF5\xF2\xDA\xF9\xCC\xD5\xDC\xA2\xA3\xD9\u20A7\xD3\xE1\xED\xF3\xFA\xF1\xD1\xAA\xBA\xBF\xD2\xAC\xBD\xBC\xA1\xAB\xBB\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\xDF\u0393\u03C0\u03A3\u03C3\xB5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\xB1\u2265\u2264\u2320\u2321\xF7\u2248\xB0\u2219\xB7\u221A\u207F\xB2\u25A0\xA0',
      },
      ibm860: 'cp860',
      csibm860: 'cp860',
      cp861: {
        type: '_sbcs',
        chars:
          '\xC7\xFC\xE9\xE2\xE4\xE0\xE5\xE7\xEA\xEB\xE8\xD0\xF0\xDE\xC4\xC5\xC9\xE6\xC6\xF4\xF6\xFE\xFB\xDD\xFD\xD6\xDC\xF8\xA3\xD8\u20A7\u0192\xE1\xED\xF3\xFA\xC1\xCD\xD3\xDA\xBF\u2310\xAC\xBD\xBC\xA1\xAB\xBB\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\xDF\u0393\u03C0\u03A3\u03C3\xB5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\xB1\u2265\u2264\u2320\u2321\xF7\u2248\xB0\u2219\xB7\u221A\u207F\xB2\u25A0\xA0',
      },
      ibm861: 'cp861',
      csibm861: 'cp861',
      cp862: {
        type: '_sbcs',
        chars:
          '\u05D0\u05D1\u05D2\u05D3\u05D4\u05D5\u05D6\u05D7\u05D8\u05D9\u05DA\u05DB\u05DC\u05DD\u05DE\u05DF\u05E0\u05E1\u05E2\u05E3\u05E4\u05E5\u05E6\u05E7\u05E8\u05E9\u05EA\xA2\xA3\xA5\u20A7\u0192\xE1\xED\xF3\xFA\xF1\xD1\xAA\xBA\xBF\u2310\xAC\xBD\xBC\xA1\xAB\xBB\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\xDF\u0393\u03C0\u03A3\u03C3\xB5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\xB1\u2265\u2264\u2320\u2321\xF7\u2248\xB0\u2219\xB7\u221A\u207F\xB2\u25A0\xA0',
      },
      ibm862: 'cp862',
      csibm862: 'cp862',
      cp863: {
        type: '_sbcs',
        chars:
          '\xC7\xFC\xE9\xE2\xC2\xE0\xB6\xE7\xEA\xEB\xE8\xEF\xEE\u2017\xC0\xA7\xC9\xC8\xCA\xF4\xCB\xCF\xFB\xF9\xA4\xD4\xDC\xA2\xA3\xD9\xDB\u0192\xA6\xB4\xF3\xFA\xA8\xB8\xB3\xAF\xCE\u2310\xAC\xBD\xBC\xBE\xAB\xBB\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\xDF\u0393\u03C0\u03A3\u03C3\xB5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\xB1\u2265\u2264\u2320\u2321\xF7\u2248\xB0\u2219\xB7\u221A\u207F\xB2\u25A0\xA0',
      },
      ibm863: 'cp863',
      csibm863: 'cp863',
      cp864: {
        type: '_sbcs',
        chars:
          '\0\x07\b	\n\v\f\r\x1B !"#$\u066A&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\x7F\xB0\xB7\u2219\u221A\u2592\u2500\u2502\u253C\u2524\u252C\u251C\u2534\u2510\u250C\u2514\u2518\u03B2\u221E\u03C6\xB1\xBD\xBC\u2248\xAB\xBB\uFEF7\uFEF8\uFFFD\uFFFD\uFEFB\uFEFC\uFFFD\xA0\xAD\uFE82\xA3\xA4\uFE84\uFFFD\uFFFD\uFE8E\uFE8F\uFE95\uFE99\u060C\uFE9D\uFEA1\uFEA5\u0660\u0661\u0662\u0663\u0664\u0665\u0666\u0667\u0668\u0669\uFED1\u061B\uFEB1\uFEB5\uFEB9\u061F\xA2\uFE80\uFE81\uFE83\uFE85\uFECA\uFE8B\uFE8D\uFE91\uFE93\uFE97\uFE9B\uFE9F\uFEA3\uFEA7\uFEA9\uFEAB\uFEAD\uFEAF\uFEB3\uFEB7\uFEBB\uFEBF\uFEC1\uFEC5\uFECB\uFECF\xA6\xAC\xF7\xD7\uFEC9\u0640\uFED3\uFED7\uFEDB\uFEDF\uFEE3\uFEE7\uFEEB\uFEED\uFEEF\uFEF3\uFEBD\uFECC\uFECE\uFECD\uFEE1\uFE7D\u0651\uFEE5\uFEE9\uFEEC\uFEF0\uFEF2\uFED0\uFED5\uFEF5\uFEF6\uFEDD\uFED9\uFEF1\u25A0\uFFFD',
      },
      ibm864: 'cp864',
      csibm864: 'cp864',
      cp865: {
        type: '_sbcs',
        chars:
          '\xC7\xFC\xE9\xE2\xE4\xE0\xE5\xE7\xEA\xEB\xE8\xEF\xEE\xEC\xC4\xC5\xC9\xE6\xC6\xF4\xF6\xF2\xFB\xF9\xFF\xD6\xDC\xF8\xA3\xD8\u20A7\u0192\xE1\xED\xF3\xFA\xF1\xD1\xAA\xBA\xBF\u2310\xAC\xBD\xBC\xA1\xAB\xA4\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\xDF\u0393\u03C0\u03A3\u03C3\xB5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\xB1\u2265\u2264\u2320\u2321\xF7\u2248\xB0\u2219\xB7\u221A\u207F\xB2\u25A0\xA0',
      },
      ibm865: 'cp865',
      csibm865: 'cp865',
      cp866: {
        type: '_sbcs',
        chars:
          '\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\u0401\u0451\u0404\u0454\u0407\u0457\u040E\u045E\xB0\u2219\xB7\u221A\u2116\xA4\u25A0\xA0',
      },
      ibm866: 'cp866',
      csibm866: 'cp866',
      cp869: {
        type: '_sbcs',
        chars:
          '\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u0386\uFFFD\xB7\xAC\xA6\u2018\u2019\u0388\u2015\u0389\u038A\u03AA\u038C\uFFFD\uFFFD\u038E\u03AB\xA9\u038F\xB2\xB3\u03AC\xA3\u03AD\u03AE\u03AF\u03CA\u0390\u03CC\u03CD\u0391\u0392\u0393\u0394\u0395\u0396\u0397\xBD\u0398\u0399\xAB\xBB\u2591\u2592\u2593\u2502\u2524\u039A\u039B\u039C\u039D\u2563\u2551\u2557\u255D\u039E\u039F\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u03A0\u03A1\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u03A3\u03A4\u03A5\u03A6\u03A7\u03A8\u03A9\u03B1\u03B2\u03B3\u2518\u250C\u2588\u2584\u03B4\u03B5\u2580\u03B6\u03B7\u03B8\u03B9\u03BA\u03BB\u03BC\u03BD\u03BE\u03BF\u03C0\u03C1\u03C3\u03C2\u03C4\u0384\xAD\xB1\u03C5\u03C6\u03C7\xA7\u03C8\u0385\xB0\xA8\u03C9\u03CB\u03B0\u03CE\u25A0\xA0',
      },
      ibm869: 'cp869',
      csibm869: 'cp869',
      cp922: {
        type: '_sbcs',
        chars:
          '\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8A\x8B\x8C\x8D\x8E\x8F\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9A\x9B\x9C\x9D\x9E\x9F\xA0\xA1\xA2\xA3\xA4\xA5\xA6\xA7\xA8\xA9\xAA\xAB\xAC\xAD\xAE\u203E\xB0\xB1\xB2\xB3\xB4\xB5\xB6\xB7\xB8\xB9\xBA\xBB\xBC\xBD\xBE\xBF\xC0\xC1\xC2\xC3\xC4\xC5\xC6\xC7\xC8\xC9\xCA\xCB\xCC\xCD\xCE\xCF\u0160\xD1\xD2\xD3\xD4\xD5\xD6\xD7\xD8\xD9\xDA\xDB\xDC\xDD\u017D\xDF\xE0\xE1\xE2\xE3\xE4\xE5\xE6\xE7\xE8\xE9\xEA\xEB\xEC\xED\xEE\xEF\u0161\xF1\xF2\xF3\xF4\xF5\xF6\xF7\xF8\xF9\xFA\xFB\xFC\xFD\u017E\xFF',
      },
      ibm922: 'cp922',
      csibm922: 'cp922',
      cp1046: {
        type: '_sbcs',
        chars:
          '\uFE88\xD7\xF7\uF8F6\uF8F5\uF8F4\uF8F7\uFE71\x88\u25A0\u2502\u2500\u2510\u250C\u2514\u2518\uFE79\uFE7B\uFE7D\uFE7F\uFE77\uFE8A\uFEF0\uFEF3\uFEF2\uFECE\uFECF\uFED0\uFEF6\uFEF8\uFEFA\uFEFC\xA0\uF8FA\uF8F9\uF8F8\xA4\uF8FB\uFE8B\uFE91\uFE97\uFE9B\uFE9F\uFEA3\u060C\xAD\uFEA7\uFEB3\u0660\u0661\u0662\u0663\u0664\u0665\u0666\u0667\u0668\u0669\uFEB7\u061B\uFEBB\uFEBF\uFECA\u061F\uFECB\u0621\u0622\u0623\u0624\u0625\u0626\u0627\u0628\u0629\u062A\u062B\u062C\u062D\u062E\u062F\u0630\u0631\u0632\u0633\u0634\u0635\u0636\u0637\uFEC7\u0639\u063A\uFECC\uFE82\uFE84\uFE8E\uFED3\u0640\u0641\u0642\u0643\u0644\u0645\u0646\u0647\u0648\u0649\u064A\u064B\u064C\u064D\u064E\u064F\u0650\u0651\u0652\uFED7\uFEDB\uFEDF\uF8FC\uFEF5\uFEF7\uFEF9\uFEFB\uFEE3\uFEE7\uFEEC\uFEE9\uFFFD',
      },
      ibm1046: 'cp1046',
      csibm1046: 'cp1046',
      cp1124: {
        type: '_sbcs',
        chars:
          '\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8A\x8B\x8C\x8D\x8E\x8F\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9A\x9B\x9C\x9D\x9E\x9F\xA0\u0401\u0402\u0490\u0404\u0405\u0406\u0407\u0408\u0409\u040A\u040B\u040C\xAD\u040E\u040F\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\u2116\u0451\u0452\u0491\u0454\u0455\u0456\u0457\u0458\u0459\u045A\u045B\u045C\xA7\u045E\u045F',
      },
      ibm1124: 'cp1124',
      csibm1124: 'cp1124',
      cp1125: {
        type: '_sbcs',
        chars:
          '\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\u0401\u0451\u0490\u0491\u0404\u0454\u0406\u0456\u0407\u0457\xB7\u221A\u2116\xA4\u25A0\xA0',
      },
      ibm1125: 'cp1125',
      csibm1125: 'cp1125',
      cp1129: {
        type: '_sbcs',
        chars:
          '\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8A\x8B\x8C\x8D\x8E\x8F\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9A\x9B\x9C\x9D\x9E\x9F\xA0\xA1\xA2\xA3\xA4\xA5\xA6\xA7\u0153\xA9\xAA\xAB\xAC\xAD\xAE\xAF\xB0\xB1\xB2\xB3\u0178\xB5\xB6\xB7\u0152\xB9\xBA\xBB\xBC\xBD\xBE\xBF\xC0\xC1\xC2\u0102\xC4\xC5\xC6\xC7\xC8\xC9\xCA\xCB\u0300\xCD\xCE\xCF\u0110\xD1\u0309\xD3\xD4\u01A0\xD6\xD7\xD8\xD9\xDA\xDB\xDC\u01AF\u0303\xDF\xE0\xE1\xE2\u0103\xE4\xE5\xE6\xE7\xE8\xE9\xEA\xEB\u0301\xED\xEE\xEF\u0111\xF1\u0323\xF3\xF4\u01A1\xF6\xF7\xF8\xF9\xFA\xFB\xFC\u01B0\u20AB\xFF',
      },
      ibm1129: 'cp1129',
      csibm1129: 'cp1129',
      cp1133: {
        type: '_sbcs',
        chars:
          '\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8A\x8B\x8C\x8D\x8E\x8F\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9A\x9B\x9C\x9D\x9E\x9F\xA0\u0E81\u0E82\u0E84\u0E87\u0E88\u0EAA\u0E8A\u0E8D\u0E94\u0E95\u0E96\u0E97\u0E99\u0E9A\u0E9B\u0E9C\u0E9D\u0E9E\u0E9F\u0EA1\u0EA2\u0EA3\u0EA5\u0EA7\u0EAB\u0EAD\u0EAE\uFFFD\uFFFD\uFFFD\u0EAF\u0EB0\u0EB2\u0EB3\u0EB4\u0EB5\u0EB6\u0EB7\u0EB8\u0EB9\u0EBC\u0EB1\u0EBB\u0EBD\uFFFD\uFFFD\uFFFD\u0EC0\u0EC1\u0EC2\u0EC3\u0EC4\u0EC8\u0EC9\u0ECA\u0ECB\u0ECC\u0ECD\u0EC6\uFFFD\u0EDC\u0EDD\u20AD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u0ED0\u0ED1\u0ED2\u0ED3\u0ED4\u0ED5\u0ED6\u0ED7\u0ED8\u0ED9\uFFFD\uFFFD\xA2\xAC\xA6\uFFFD',
      },
      ibm1133: 'cp1133',
      csibm1133: 'cp1133',
      cp1161: {
        type: '_sbcs',
        chars:
          '\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u0E48\u0E01\u0E02\u0E03\u0E04\u0E05\u0E06\u0E07\u0E08\u0E09\u0E0A\u0E0B\u0E0C\u0E0D\u0E0E\u0E0F\u0E10\u0E11\u0E12\u0E13\u0E14\u0E15\u0E16\u0E17\u0E18\u0E19\u0E1A\u0E1B\u0E1C\u0E1D\u0E1E\u0E1F\u0E20\u0E21\u0E22\u0E23\u0E24\u0E25\u0E26\u0E27\u0E28\u0E29\u0E2A\u0E2B\u0E2C\u0E2D\u0E2E\u0E2F\u0E30\u0E31\u0E32\u0E33\u0E34\u0E35\u0E36\u0E37\u0E38\u0E39\u0E3A\u0E49\u0E4A\u0E4B\u20AC\u0E3F\u0E40\u0E41\u0E42\u0E43\u0E44\u0E45\u0E46\u0E47\u0E48\u0E49\u0E4A\u0E4B\u0E4C\u0E4D\u0E4E\u0E4F\u0E50\u0E51\u0E52\u0E53\u0E54\u0E55\u0E56\u0E57\u0E58\u0E59\u0E5A\u0E5B\xA2\xAC\xA6\xA0',
      },
      ibm1161: 'cp1161',
      csibm1161: 'cp1161',
      cp1162: {
        type: '_sbcs',
        chars:
          '\u20AC\x81\x82\x83\x84\u2026\x86\x87\x88\x89\x8A\x8B\x8C\x8D\x8E\x8F\x90\u2018\u2019\u201C\u201D\u2022\u2013\u2014\x98\x99\x9A\x9B\x9C\x9D\x9E\x9F\xA0\u0E01\u0E02\u0E03\u0E04\u0E05\u0E06\u0E07\u0E08\u0E09\u0E0A\u0E0B\u0E0C\u0E0D\u0E0E\u0E0F\u0E10\u0E11\u0E12\u0E13\u0E14\u0E15\u0E16\u0E17\u0E18\u0E19\u0E1A\u0E1B\u0E1C\u0E1D\u0E1E\u0E1F\u0E20\u0E21\u0E22\u0E23\u0E24\u0E25\u0E26\u0E27\u0E28\u0E29\u0E2A\u0E2B\u0E2C\u0E2D\u0E2E\u0E2F\u0E30\u0E31\u0E32\u0E33\u0E34\u0E35\u0E36\u0E37\u0E38\u0E39\u0E3A\uFFFD\uFFFD\uFFFD\uFFFD\u0E3F\u0E40\u0E41\u0E42\u0E43\u0E44\u0E45\u0E46\u0E47\u0E48\u0E49\u0E4A\u0E4B\u0E4C\u0E4D\u0E4E\u0E4F\u0E50\u0E51\u0E52\u0E53\u0E54\u0E55\u0E56\u0E57\u0E58\u0E59\u0E5A\u0E5B\uFFFD\uFFFD\uFFFD\uFFFD',
      },
      ibm1162: 'cp1162',
      csibm1162: 'cp1162',
      cp1163: {
        type: '_sbcs',
        chars:
          '\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8A\x8B\x8C\x8D\x8E\x8F\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9A\x9B\x9C\x9D\x9E\x9F\xA0\xA1\xA2\xA3\u20AC\xA5\xA6\xA7\u0153\xA9\xAA\xAB\xAC\xAD\xAE\xAF\xB0\xB1\xB2\xB3\u0178\xB5\xB6\xB7\u0152\xB9\xBA\xBB\xBC\xBD\xBE\xBF\xC0\xC1\xC2\u0102\xC4\xC5\xC6\xC7\xC8\xC9\xCA\xCB\u0300\xCD\xCE\xCF\u0110\xD1\u0309\xD3\xD4\u01A0\xD6\xD7\xD8\xD9\xDA\xDB\xDC\u01AF\u0303\xDF\xE0\xE1\xE2\u0103\xE4\xE5\xE6\xE7\xE8\xE9\xEA\xEB\u0301\xED\xEE\xEF\u0111\xF1\u0323\xF3\xF4\u01A1\xF6\xF7\xF8\xF9\xFA\xFB\xFC\u01B0\u20AB\xFF',
      },
      ibm1163: 'cp1163',
      csibm1163: 'cp1163',
      maccroatian: {
        type: '_sbcs',
        chars:
          '\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\u0160\u2122\xB4\xA8\u2260\u017D\xD8\u221E\xB1\u2264\u2265\u2206\xB5\u2202\u2211\u220F\u0161\u222B\xAA\xBA\u2126\u017E\xF8\xBF\xA1\xAC\u221A\u0192\u2248\u0106\xAB\u010C\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u0110\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\uFFFD\xA9\u2044\xA4\u2039\u203A\xC6\xBB\u2013\xB7\u201A\u201E\u2030\xC2\u0107\xC1\u010D\xC8\xCD\xCE\xCF\xCC\xD3\xD4\u0111\xD2\xDA\xDB\xD9\u0131\u02C6\u02DC\xAF\u03C0\xCB\u02DA\xB8\xCA\xE6\u02C7',
      },
      maccyrillic: {
        type: '_sbcs',
        chars:
          '\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u2020\xB0\xA2\xA3\xA7\u2022\xB6\u0406\xAE\xA9\u2122\u0402\u0452\u2260\u0403\u0453\u221E\xB1\u2264\u2265\u0456\xB5\u2202\u0408\u0404\u0454\u0407\u0457\u0409\u0459\u040A\u045A\u0458\u0405\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026\xA0\u040B\u045B\u040C\u045C\u0455\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u201E\u040E\u045E\u040F\u045F\u2116\u0401\u0451\u044F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\xA4',
      },
      macgreek: {
        type: '_sbcs',
        chars:
          '\xC4\xB9\xB2\xC9\xB3\xD6\xDC\u0385\xE0\xE2\xE4\u0384\xA8\xE7\xE9\xE8\xEA\xEB\xA3\u2122\xEE\xEF\u2022\xBD\u2030\xF4\xF6\xA6\xAD\xF9\xFB\xFC\u2020\u0393\u0394\u0398\u039B\u039E\u03A0\xDF\xAE\xA9\u03A3\u03AA\xA7\u2260\xB0\u0387\u0391\xB1\u2264\u2265\xA5\u0392\u0395\u0396\u0397\u0399\u039A\u039C\u03A6\u03AB\u03A8\u03A9\u03AC\u039D\xAC\u039F\u03A1\u2248\u03A4\xAB\xBB\u2026\xA0\u03A5\u03A7\u0386\u0388\u0153\u2013\u2015\u201C\u201D\u2018\u2019\xF7\u0389\u038A\u038C\u038E\u03AD\u03AE\u03AF\u03CC\u038F\u03CD\u03B1\u03B2\u03C8\u03B4\u03B5\u03C6\u03B3\u03B7\u03B9\u03BE\u03BA\u03BB\u03BC\u03BD\u03BF\u03C0\u03CE\u03C1\u03C3\u03C4\u03B8\u03C9\u03C2\u03C7\u03C5\u03B6\u03CA\u03CB\u0390\u03B0\uFFFD',
      },
      maciceland: {
        type: '_sbcs',
        chars:
          '\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\xDD\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\xC6\xD8\u221E\xB1\u2264\u2265\xA5\xB5\u2202\u2211\u220F\u03C0\u222B\xAA\xBA\u2126\xE6\xF8\xBF\xA1\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\xFF\u0178\u2044\xA4\xD0\xF0\xDE\xFE\xFD\xB7\u201A\u201E\u2030\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\uFFFD\xD2\xDA\xDB\xD9\u0131\u02C6\u02DC\xAF\u02D8\u02D9\u02DA\xB8\u02DD\u02DB\u02C7',
      },
      macroman: {
        type: '_sbcs',
        chars:
          '\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\xC6\xD8\u221E\xB1\u2264\u2265\xA5\xB5\u2202\u2211\u220F\u03C0\u222B\xAA\xBA\u2126\xE6\xF8\xBF\xA1\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\xFF\u0178\u2044\xA4\u2039\u203A\uFB01\uFB02\u2021\xB7\u201A\u201E\u2030\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\uFFFD\xD2\xDA\xDB\xD9\u0131\u02C6\u02DC\xAF\u02D8\u02D9\u02DA\xB8\u02DD\u02DB\u02C7',
      },
      macromania: {
        type: '_sbcs',
        chars:
          '\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\u0102\u015E\u221E\xB1\u2264\u2265\xA5\xB5\u2202\u2211\u220F\u03C0\u222B\xAA\xBA\u2126\u0103\u015F\xBF\xA1\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\xFF\u0178\u2044\xA4\u2039\u203A\u0162\u0163\u2021\xB7\u201A\u201E\u2030\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\uFFFD\xD2\xDA\xDB\xD9\u0131\u02C6\u02DC\xAF\u02D8\u02D9\u02DA\xB8\u02DD\u02DB\u02C7',
      },
      macthai: {
        type: '_sbcs',
        chars:
          '\xAB\xBB\u2026\uF88C\uF88F\uF892\uF895\uF898\uF88B\uF88E\uF891\uF894\uF897\u201C\u201D\uF899\uFFFD\u2022\uF884\uF889\uF885\uF886\uF887\uF888\uF88A\uF88D\uF890\uF893\uF896\u2018\u2019\uFFFD\xA0\u0E01\u0E02\u0E03\u0E04\u0E05\u0E06\u0E07\u0E08\u0E09\u0E0A\u0E0B\u0E0C\u0E0D\u0E0E\u0E0F\u0E10\u0E11\u0E12\u0E13\u0E14\u0E15\u0E16\u0E17\u0E18\u0E19\u0E1A\u0E1B\u0E1C\u0E1D\u0E1E\u0E1F\u0E20\u0E21\u0E22\u0E23\u0E24\u0E25\u0E26\u0E27\u0E28\u0E29\u0E2A\u0E2B\u0E2C\u0E2D\u0E2E\u0E2F\u0E30\u0E31\u0E32\u0E33\u0E34\u0E35\u0E36\u0E37\u0E38\u0E39\u0E3A\uFEFF\u200B\u2013\u2014\u0E3F\u0E40\u0E41\u0E42\u0E43\u0E44\u0E45\u0E46\u0E47\u0E48\u0E49\u0E4A\u0E4B\u0E4C\u0E4D\u2122\u0E4F\u0E50\u0E51\u0E52\u0E53\u0E54\u0E55\u0E56\u0E57\u0E58\u0E59\xAE\xA9\uFFFD\uFFFD\uFFFD\uFFFD',
      },
      macturkish: {
        type: '_sbcs',
        chars:
          '\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\xC6\xD8\u221E\xB1\u2264\u2265\xA5\xB5\u2202\u2211\u220F\u03C0\u222B\xAA\xBA\u2126\xE6\xF8\xBF\xA1\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\xFF\u0178\u011E\u011F\u0130\u0131\u015E\u015F\u2021\xB7\u201A\u201E\u2030\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\uFFFD\xD2\xDA\xDB\xD9\uFFFD\u02C6\u02DC\xAF\u02D8\u02D9\u02DA\xB8\u02DD\u02DB\u02C7',
      },
      macukraine: {
        type: '_sbcs',
        chars:
          '\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u2020\xB0\u0490\xA3\xA7\u2022\xB6\u0406\xAE\xA9\u2122\u0402\u0452\u2260\u0403\u0453\u221E\xB1\u2264\u2265\u0456\xB5\u0491\u0408\u0404\u0454\u0407\u0457\u0409\u0459\u040A\u045A\u0458\u0405\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026\xA0\u040B\u045B\u040C\u045C\u0455\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u201E\u040E\u045E\u040F\u045F\u2116\u0401\u0451\u044F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\xA4',
      },
      koi8r: {
        type: '_sbcs',
        chars:
          '\u2500\u2502\u250C\u2510\u2514\u2518\u251C\u2524\u252C\u2534\u253C\u2580\u2584\u2588\u258C\u2590\u2591\u2592\u2593\u2320\u25A0\u2219\u221A\u2248\u2264\u2265\xA0\u2321\xB0\xB2\xB7\xF7\u2550\u2551\u2552\u0451\u2553\u2554\u2555\u2556\u2557\u2558\u2559\u255A\u255B\u255C\u255D\u255E\u255F\u2560\u2561\u0401\u2562\u2563\u2564\u2565\u2566\u2567\u2568\u2569\u256A\u256B\u256C\xA9\u044E\u0430\u0431\u0446\u0434\u0435\u0444\u0433\u0445\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u044F\u0440\u0441\u0442\u0443\u0436\u0432\u044C\u044B\u0437\u0448\u044D\u0449\u0447\u044A\u042E\u0410\u0411\u0426\u0414\u0415\u0424\u0413\u0425\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u042F\u0420\u0421\u0422\u0423\u0416\u0412\u042C\u042B\u0417\u0428\u042D\u0429\u0427\u042A',
      },
      koi8u: {
        type: '_sbcs',
        chars:
          '\u2500\u2502\u250C\u2510\u2514\u2518\u251C\u2524\u252C\u2534\u253C\u2580\u2584\u2588\u258C\u2590\u2591\u2592\u2593\u2320\u25A0\u2219\u221A\u2248\u2264\u2265\xA0\u2321\xB0\xB2\xB7\xF7\u2550\u2551\u2552\u0451\u0454\u2554\u0456\u0457\u2557\u2558\u2559\u255A\u255B\u0491\u255D\u255E\u255F\u2560\u2561\u0401\u0404\u2563\u0406\u0407\u2566\u2567\u2568\u2569\u256A\u0490\u256C\xA9\u044E\u0430\u0431\u0446\u0434\u0435\u0444\u0433\u0445\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u044F\u0440\u0441\u0442\u0443\u0436\u0432\u044C\u044B\u0437\u0448\u044D\u0449\u0447\u044A\u042E\u0410\u0411\u0426\u0414\u0415\u0424\u0413\u0425\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u042F\u0420\u0421\u0422\u0423\u0416\u0412\u042C\u042B\u0417\u0428\u042D\u0429\u0427\u042A',
      },
      koi8ru: {
        type: '_sbcs',
        chars:
          '\u2500\u2502\u250C\u2510\u2514\u2518\u251C\u2524\u252C\u2534\u253C\u2580\u2584\u2588\u258C\u2590\u2591\u2592\u2593\u2320\u25A0\u2219\u221A\u2248\u2264\u2265\xA0\u2321\xB0\xB2\xB7\xF7\u2550\u2551\u2552\u0451\u0454\u2554\u0456\u0457\u2557\u2558\u2559\u255A\u255B\u0491\u045E\u255E\u255F\u2560\u2561\u0401\u0404\u2563\u0406\u0407\u2566\u2567\u2568\u2569\u256A\u0490\u040E\xA9\u044E\u0430\u0431\u0446\u0434\u0435\u0444\u0433\u0445\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u044F\u0440\u0441\u0442\u0443\u0436\u0432\u044C\u044B\u0437\u0448\u044D\u0449\u0447\u044A\u042E\u0410\u0411\u0426\u0414\u0415\u0424\u0413\u0425\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u042F\u0420\u0421\u0422\u0423\u0416\u0412\u042C\u042B\u0417\u0428\u042D\u0429\u0427\u042A',
      },
      koi8t: {
        type: '_sbcs',
        chars:
          '\u049B\u0493\u201A\u0492\u201E\u2026\u2020\u2021\uFFFD\u2030\u04B3\u2039\u04B2\u04B7\u04B6\uFFFD\u049A\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\u2122\uFFFD\u203A\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u04EF\u04EE\u0451\xA4\u04E3\xA6\xA7\uFFFD\uFFFD\uFFFD\xAB\xAC\xAD\xAE\uFFFD\xB0\xB1\xB2\u0401\uFFFD\u04E2\xB6\xB7\uFFFD\u2116\uFFFD\xBB\uFFFD\uFFFD\uFFFD\xA9\u044E\u0430\u0431\u0446\u0434\u0435\u0444\u0433\u0445\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u044F\u0440\u0441\u0442\u0443\u0436\u0432\u044C\u044B\u0437\u0448\u044D\u0449\u0447\u044A\u042E\u0410\u0411\u0426\u0414\u0415\u0424\u0413\u0425\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u042F\u0420\u0421\u0422\u0423\u0416\u0412\u042C\u042B\u0417\u0428\u042D\u0429\u0427\u042A',
      },
      armscii8: {
        type: '_sbcs',
        chars:
          '\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8A\x8B\x8C\x8D\x8E\x8F\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9A\x9B\x9C\x9D\x9E\x9F\xA0\uFFFD\u0587\u0589)(\xBB\xAB\u2014.\u055D,-\u058A\u2026\u055C\u055B\u055E\u0531\u0561\u0532\u0562\u0533\u0563\u0534\u0564\u0535\u0565\u0536\u0566\u0537\u0567\u0538\u0568\u0539\u0569\u053A\u056A\u053B\u056B\u053C\u056C\u053D\u056D\u053E\u056E\u053F\u056F\u0540\u0570\u0541\u0571\u0542\u0572\u0543\u0573\u0544\u0574\u0545\u0575\u0546\u0576\u0547\u0577\u0548\u0578\u0549\u0579\u054A\u057A\u054B\u057B\u054C\u057C\u054D\u057D\u054E\u057E\u054F\u057F\u0550\u0580\u0551\u0581\u0552\u0582\u0553\u0583\u0554\u0584\u0555\u0585\u0556\u0586\u055A\uFFFD',
      },
      rk1048: {
        type: '_sbcs',
        chars:
          '\u0402\u0403\u201A\u0453\u201E\u2026\u2020\u2021\u20AC\u2030\u0409\u2039\u040A\u049A\u04BA\u040F\u0452\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\u2122\u0459\u203A\u045A\u049B\u04BB\u045F\xA0\u04B0\u04B1\u04D8\xA4\u04E8\xA6\xA7\u0401\xA9\u0492\xAB\xAC\xAD\xAE\u04AE\xB0\xB1\u0406\u0456\u04E9\xB5\xB6\xB7\u0451\u2116\u0493\xBB\u04D9\u04A2\u04A3\u04AF\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F',
      },
      tcvn: {
        type: '_sbcs',
        chars:
          '\0\xDA\u1EE4\u1EEA\u1EEC\u1EEE\x07\b	\n\v\f\r\u1EE8\u1EF0\u1EF2\u1EF6\u1EF8\xDD\u1EF4\x1B !"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\x7F\xC0\u1EA2\xC3\xC1\u1EA0\u1EB6\u1EAC\xC8\u1EBA\u1EBC\xC9\u1EB8\u1EC6\xCC\u1EC8\u0128\xCD\u1ECA\xD2\u1ECE\xD5\xD3\u1ECC\u1ED8\u1EDC\u1EDE\u1EE0\u1EDA\u1EE2\xD9\u1EE6\u0168\xA0\u0102\xC2\xCA\xD4\u01A0\u01AF\u0110\u0103\xE2\xEA\xF4\u01A1\u01B0\u0111\u1EB0\u0300\u0309\u0303\u0301\u0323\xE0\u1EA3\xE3\xE1\u1EA1\u1EB2\u1EB1\u1EB3\u1EB5\u1EAF\u1EB4\u1EAE\u1EA6\u1EA8\u1EAA\u1EA4\u1EC0\u1EB7\u1EA7\u1EA9\u1EAB\u1EA5\u1EAD\xE8\u1EC2\u1EBB\u1EBD\xE9\u1EB9\u1EC1\u1EC3\u1EC5\u1EBF\u1EC7\xEC\u1EC9\u1EC4\u1EBE\u1ED2\u0129\xED\u1ECB\xF2\u1ED4\u1ECF\xF5\xF3\u1ECD\u1ED3\u1ED5\u1ED7\u1ED1\u1ED9\u1EDD\u1EDF\u1EE1\u1EDB\u1EE3\xF9\u1ED6\u1EE7\u0169\xFA\u1EE5\u1EEB\u1EED\u1EEF\u1EE9\u1EF1\u1EF3\u1EF7\u1EF9\xFD\u1EF5\u1ED0',
      },
      georgianacademy: {
        type: '_sbcs',
        chars:
          '\x80\x81\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\u0160\u2039\u0152\x8D\x8E\x8F\x90\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u02DC\u2122\u0161\u203A\u0153\x9D\x9E\u0178\xA0\xA1\xA2\xA3\xA4\xA5\xA6\xA7\xA8\xA9\xAA\xAB\xAC\xAD\xAE\xAF\xB0\xB1\xB2\xB3\xB4\xB5\xB6\xB7\xB8\xB9\xBA\xBB\xBC\xBD\xBE\xBF\u10D0\u10D1\u10D2\u10D3\u10D4\u10D5\u10D6\u10D7\u10D8\u10D9\u10DA\u10DB\u10DC\u10DD\u10DE\u10DF\u10E0\u10E1\u10E2\u10E3\u10E4\u10E5\u10E6\u10E7\u10E8\u10E9\u10EA\u10EB\u10EC\u10ED\u10EE\u10EF\u10F0\u10F1\u10F2\u10F3\u10F4\u10F5\u10F6\xE7\xE8\xE9\xEA\xEB\xEC\xED\xEE\xEF\xF0\xF1\xF2\xF3\xF4\xF5\xF6\xF7\xF8\xF9\xFA\xFB\xFC\xFD\xFE\xFF',
      },
      georgianps: {
        type: '_sbcs',
        chars:
          '\x80\x81\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\u0160\u2039\u0152\x8D\x8E\x8F\x90\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u02DC\u2122\u0161\u203A\u0153\x9D\x9E\u0178\xA0\xA1\xA2\xA3\xA4\xA5\xA6\xA7\xA8\xA9\xAA\xAB\xAC\xAD\xAE\xAF\xB0\xB1\xB2\xB3\xB4\xB5\xB6\xB7\xB8\xB9\xBA\xBB\xBC\xBD\xBE\xBF\u10D0\u10D1\u10D2\u10D3\u10D4\u10D5\u10D6\u10F1\u10D7\u10D8\u10D9\u10DA\u10DB\u10DC\u10F2\u10DD\u10DE\u10DF\u10E0\u10E1\u10E2\u10F3\u10E3\u10E4\u10E5\u10E6\u10E7\u10E8\u10E9\u10EA\u10EB\u10EC\u10ED\u10EE\u10F4\u10EF\u10F0\u10F5\xE6\xE7\xE8\xE9\xEA\xEB\xEC\xED\xEE\xEF\xF0\xF1\xF2\xF3\xF4\xF5\xF6\xF7\xF8\xF9\xFA\xFB\xFC\xFD\xFE\xFF',
      },
      pt154: {
        type: '_sbcs',
        chars:
          '\u0496\u0492\u04EE\u0493\u201E\u2026\u04B6\u04AE\u04B2\u04AF\u04A0\u04E2\u04A2\u049A\u04BA\u04B8\u0497\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u04B3\u04B7\u04A1\u04E3\u04A3\u049B\u04BB\u04B9\xA0\u040E\u045E\u0408\u04E8\u0498\u04B0\xA7\u0401\xA9\u04D8\xAB\xAC\u04EF\xAE\u049C\xB0\u04B1\u0406\u0456\u0499\u04E9\xB6\xB7\u0451\u2116\u04D9\xBB\u0458\u04AA\u04AB\u049D\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F',
      },
      viscii: {
        type: '_sbcs',
        chars:
          '\0\u1EB2\u1EB4\u1EAA\x07\b	\n\v\f\r\u1EF6\u1EF8\x1B\u1EF4 !"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\x7F\u1EA0\u1EAE\u1EB0\u1EB6\u1EA4\u1EA6\u1EA8\u1EAC\u1EBC\u1EB8\u1EBE\u1EC0\u1EC2\u1EC4\u1EC6\u1ED0\u1ED2\u1ED4\u1ED6\u1ED8\u1EE2\u1EDA\u1EDC\u1EDE\u1ECA\u1ECE\u1ECC\u1EC8\u1EE6\u0168\u1EE4\u1EF2\xD5\u1EAF\u1EB1\u1EB7\u1EA5\u1EA7\u1EA9\u1EAD\u1EBD\u1EB9\u1EBF\u1EC1\u1EC3\u1EC5\u1EC7\u1ED1\u1ED3\u1ED5\u1ED7\u1EE0\u01A0\u1ED9\u1EDD\u1EDF\u1ECB\u1EF0\u1EE8\u1EEA\u1EEC\u01A1\u1EDB\u01AF\xC0\xC1\xC2\xC3\u1EA2\u0102\u1EB3\u1EB5\xC8\xC9\xCA\u1EBA\xCC\xCD\u0128\u1EF3\u0110\u1EE9\xD2\xD3\xD4\u1EA1\u1EF7\u1EEB\u1EED\xD9\xDA\u1EF9\u1EF5\xDD\u1EE1\u01B0\xE0\xE1\xE2\xE3\u1EA3\u0103\u1EEF\u1EAB\xE8\xE9\xEA\u1EBB\xEC\xED\u0129\u1EC9\u0111\u1EF1\xF2\xF3\xF4\xF5\u1ECF\u1ECD\u1EE5\xF9\xFA\u0169\u1EE7\xFD\u1EE3\u1EEE',
      },
      iso646cn: {
        type: '_sbcs',
        chars:
          '\0\x07\b	\n\v\f\r\x1B !"#\xA5%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}\u203E\x7F\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD',
      },
      iso646jp: {
        type: '_sbcs',
        chars:
          '\0\x07\b	\n\v\f\r\x1B !"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\xA5]^_`abcdefghijklmnopqrstuvwxyz{|}\u203E\x7F\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD',
      },
      hproman8: {
        type: '_sbcs',
        chars:
          '\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8A\x8B\x8C\x8D\x8E\x8F\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9A\x9B\x9C\x9D\x9E\x9F\xA0\xC0\xC2\xC8\xCA\xCB\xCE\xCF\xB4\u02CB\u02C6\xA8\u02DC\xD9\xDB\u20A4\xAF\xDD\xFD\xB0\xC7\xE7\xD1\xF1\xA1\xBF\xA4\xA3\xA5\xA7\u0192\xA2\xE2\xEA\xF4\xFB\xE1\xE9\xF3\xFA\xE0\xE8\xF2\xF9\xE4\xEB\xF6\xFC\xC5\xEE\xD8\xC6\xE5\xED\xF8\xE6\xC4\xEC\xD6\xDC\xC9\xEF\xDF\xD4\xC1\xC3\xE3\xD0\xF0\xCD\xCC\xD3\xD2\xD5\xF5\u0160\u0161\xDA\u0178\xFF\xDE\xFE\xB7\xB5\xB6\xBE\u2014\xBC\xBD\xAA\xBA\xAB\u25A0\xBB\xB1\uFFFD',
      },
      macintosh: {
        type: '_sbcs',
        chars:
          '\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\xC6\xD8\u221E\xB1\u2264\u2265\xA5\xB5\u2202\u2211\u220F\u03C0\u222B\xAA\xBA\u2126\xE6\xF8\xBF\xA1\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\xFF\u0178\u2044\xA4\u2039\u203A\uFB01\uFB02\u2021\xB7\u201A\u201E\u2030\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\uFFFD\xD2\xDA\xDB\xD9\u0131\u02C6\u02DC\xAF\u02D8\u02D9\u02DA\xB8\u02DD\u02DB\u02C7',
      },
      ascii: {
        type: '_sbcs',
        chars:
          '\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD',
      },
      tis620: {
        type: '_sbcs',
        chars:
          '\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u0E01\u0E02\u0E03\u0E04\u0E05\u0E06\u0E07\u0E08\u0E09\u0E0A\u0E0B\u0E0C\u0E0D\u0E0E\u0E0F\u0E10\u0E11\u0E12\u0E13\u0E14\u0E15\u0E16\u0E17\u0E18\u0E19\u0E1A\u0E1B\u0E1C\u0E1D\u0E1E\u0E1F\u0E20\u0E21\u0E22\u0E23\u0E24\u0E25\u0E26\u0E27\u0E28\u0E29\u0E2A\u0E2B\u0E2C\u0E2D\u0E2E\u0E2F\u0E30\u0E31\u0E32\u0E33\u0E34\u0E35\u0E36\u0E37\u0E38\u0E39\u0E3A\uFFFD\uFFFD\uFFFD\uFFFD\u0E3F\u0E40\u0E41\u0E42\u0E43\u0E44\u0E45\u0E46\u0E47\u0E48\u0E49\u0E4A\u0E4B\u0E4C\u0E4D\u0E4E\u0E4F\u0E50\u0E51\u0E52\u0E53\u0E54\u0E55\u0E56\u0E57\u0E58\u0E59\u0E5A\u0E5B\uFFFD\uFFFD\uFFFD\uFFFD',
      },
    };
  },
});

// ../../node_modules/iconv-lite/encodings/dbcs-codec.js
var require_dbcs_codec = __commonJS({
  '../../node_modules/iconv-lite/encodings/dbcs-codec.js'(exports2) {
    'use strict';
    var Buffer2 = require_safer().Buffer;
    exports2._dbcs = DBCSCodec;
    var UNASSIGNED = -1;
    var GB18030_CODE = -2;
    var SEQ_START = -10;
    var NODE_START = -1e3;
    var UNASSIGNED_NODE = new Array(256);
    var DEF_CHAR = -1;
    for (i = 0; i < 256; i++) UNASSIGNED_NODE[i] = UNASSIGNED;
    var i;
    function DBCSCodec(codecOptions, iconv) {
      this.encodingName = codecOptions.encodingName;
      if (!codecOptions)
        throw new Error('DBCS codec is called without the data.');
      if (!codecOptions.table)
        throw new Error("Encoding '" + this.encodingName + "' has no data.");
      var mappingTable = codecOptions.table();
      this.decodeTables = [];
      this.decodeTables[0] = UNASSIGNED_NODE.slice(0);
      this.decodeTableSeq = [];
      for (var i2 = 0; i2 < mappingTable.length; i2++)
        this._addDecodeChunk(mappingTable[i2]);
      this.defaultCharUnicode = iconv.defaultCharUnicode;
      this.encodeTable = [];
      this.encodeTableSeq = [];
      var skipEncodeChars = {};
      if (codecOptions.encodeSkipVals)
        for (var i2 = 0; i2 < codecOptions.encodeSkipVals.length; i2++) {
          var val = codecOptions.encodeSkipVals[i2];
          if (typeof val === 'number') skipEncodeChars[val] = true;
          else
            for (var j2 = val.from; j2 <= val.to; j2++)
              skipEncodeChars[j2] = true;
        }
      this._fillEncodeTable(0, 0, skipEncodeChars);
      if (codecOptions.encodeAdd) {
        for (var uChar in codecOptions.encodeAdd)
          if (
            Object.prototype.hasOwnProperty.call(codecOptions.encodeAdd, uChar)
          )
            this._setEncodeChar(
              uChar.charCodeAt(0),
              codecOptions.encodeAdd[uChar]
            );
      }
      this.defCharSB =
        this.encodeTable[0][iconv.defaultCharSingleByte.charCodeAt(0)];
      if (this.defCharSB === UNASSIGNED)
        this.defCharSB = this.encodeTable[0]['?'];
      if (this.defCharSB === UNASSIGNED) this.defCharSB = '?'.charCodeAt(0);
      if (typeof codecOptions.gb18030 === 'function') {
        this.gb18030 = codecOptions.gb18030();
        var thirdByteNodeIdx = this.decodeTables.length;
        var thirdByteNode = (this.decodeTables[thirdByteNodeIdx] =
          UNASSIGNED_NODE.slice(0));
        var fourthByteNodeIdx = this.decodeTables.length;
        var fourthByteNode = (this.decodeTables[fourthByteNodeIdx] =
          UNASSIGNED_NODE.slice(0));
        for (var i2 = 129; i2 <= 254; i2++) {
          var secondByteNodeIdx = NODE_START - this.decodeTables[0][i2];
          var secondByteNode = this.decodeTables[secondByteNodeIdx];
          for (var j2 = 48; j2 <= 57; j2++)
            secondByteNode[j2] = NODE_START - thirdByteNodeIdx;
        }
        for (var i2 = 129; i2 <= 254; i2++)
          thirdByteNode[i2] = NODE_START - fourthByteNodeIdx;
        for (var i2 = 48; i2 <= 57; i2++) fourthByteNode[i2] = GB18030_CODE;
      }
    }
    DBCSCodec.prototype.encoder = DBCSEncoder;
    DBCSCodec.prototype.decoder = DBCSDecoder;
    DBCSCodec.prototype._getDecodeTrieNode = function (addr) {
      var bytes = [];
      for (; addr > 0; addr >>= 8) bytes.push(addr & 255);
      if (bytes.length == 0) bytes.push(0);
      var node = this.decodeTables[0];
      for (var i2 = bytes.length - 1; i2 > 0; i2--) {
        var val = node[bytes[i2]];
        if (val == UNASSIGNED) {
          node[bytes[i2]] = NODE_START - this.decodeTables.length;
          this.decodeTables.push((node = UNASSIGNED_NODE.slice(0)));
        } else if (val <= NODE_START) {
          node = this.decodeTables[NODE_START - val];
        } else
          throw new Error(
            'Overwrite byte in ' +
              this.encodingName +
              ', addr: ' +
              addr.toString(16)
          );
      }
      return node;
    };
    DBCSCodec.prototype._addDecodeChunk = function (chunk) {
      var curAddr = parseInt(chunk[0], 16);
      var writeTable = this._getDecodeTrieNode(curAddr);
      curAddr = curAddr & 255;
      for (var k2 = 1; k2 < chunk.length; k2++) {
        var part = chunk[k2];
        if (typeof part === 'string') {
          for (var l2 = 0; l2 < part.length; ) {
            var code = part.charCodeAt(l2++);
            if (55296 <= code && code < 56320) {
              var codeTrail = part.charCodeAt(l2++);
              if (56320 <= codeTrail && codeTrail < 57344)
                writeTable[curAddr++] =
                  65536 + (code - 55296) * 1024 + (codeTrail - 56320);
              else
                throw new Error(
                  'Incorrect surrogate pair in ' +
                    this.encodingName +
                    ' at chunk ' +
                    chunk[0]
                );
            } else if (4080 < code && code <= 4095) {
              var len = 4095 - code + 2;
              var seq = [];
              for (var m2 = 0; m2 < len; m2++) seq.push(part.charCodeAt(l2++));
              writeTable[curAddr++] = SEQ_START - this.decodeTableSeq.length;
              this.decodeTableSeq.push(seq);
            } else writeTable[curAddr++] = code;
          }
        } else if (typeof part === 'number') {
          var charCode = writeTable[curAddr - 1] + 1;
          for (var l2 = 0; l2 < part; l2++) writeTable[curAddr++] = charCode++;
        } else
          throw new Error(
            "Incorrect type '" +
              typeof part +
              "' given in " +
              this.encodingName +
              ' at chunk ' +
              chunk[0]
          );
      }
      if (curAddr > 255)
        throw new Error(
          'Incorrect chunk in ' +
            this.encodingName +
            ' at addr ' +
            chunk[0] +
            ': too long' +
            curAddr
        );
    };
    DBCSCodec.prototype._getEncodeBucket = function (uCode) {
      var high = uCode >> 8;
      if (this.encodeTable[high] === void 0)
        this.encodeTable[high] = UNASSIGNED_NODE.slice(0);
      return this.encodeTable[high];
    };
    DBCSCodec.prototype._setEncodeChar = function (uCode, dbcsCode) {
      var bucket = this._getEncodeBucket(uCode);
      var low = uCode & 255;
      if (bucket[low] <= SEQ_START)
        this.encodeTableSeq[SEQ_START - bucket[low]][DEF_CHAR] = dbcsCode;
      else if (bucket[low] == UNASSIGNED) bucket[low] = dbcsCode;
    };
    DBCSCodec.prototype._setEncodeSequence = function (seq, dbcsCode) {
      var uCode = seq[0];
      var bucket = this._getEncodeBucket(uCode);
      var low = uCode & 255;
      var node;
      if (bucket[low] <= SEQ_START) {
        node = this.encodeTableSeq[SEQ_START - bucket[low]];
      } else {
        node = {};
        if (bucket[low] !== UNASSIGNED) node[DEF_CHAR] = bucket[low];
        bucket[low] = SEQ_START - this.encodeTableSeq.length;
        this.encodeTableSeq.push(node);
      }
      for (var j2 = 1; j2 < seq.length - 1; j2++) {
        var oldVal = node[uCode];
        if (typeof oldVal === 'object') node = oldVal;
        else {
          node = node[uCode] = {};
          if (oldVal !== void 0) node[DEF_CHAR] = oldVal;
        }
      }
      uCode = seq[seq.length - 1];
      node[uCode] = dbcsCode;
    };
    DBCSCodec.prototype._fillEncodeTable = function (
      nodeIdx,
      prefix,
      skipEncodeChars
    ) {
      var node = this.decodeTables[nodeIdx];
      for (var i2 = 0; i2 < 256; i2++) {
        var uCode = node[i2];
        var mbCode = prefix + i2;
        if (skipEncodeChars[mbCode]) continue;
        if (uCode >= 0) this._setEncodeChar(uCode, mbCode);
        else if (uCode <= NODE_START)
          this._fillEncodeTable(
            NODE_START - uCode,
            mbCode << 8,
            skipEncodeChars
          );
        else if (uCode <= SEQ_START)
          this._setEncodeSequence(
            this.decodeTableSeq[SEQ_START - uCode],
            mbCode
          );
      }
    };
    function DBCSEncoder(options, codec) {
      this.leadSurrogate = -1;
      this.seqObj = void 0;
      this.encodeTable = codec.encodeTable;
      this.encodeTableSeq = codec.encodeTableSeq;
      this.defaultCharSingleByte = codec.defCharSB;
      this.gb18030 = codec.gb18030;
    }
    DBCSEncoder.prototype.write = function (str) {
      var newBuf = Buffer2.alloc(str.length * (this.gb18030 ? 4 : 3)),
        leadSurrogate = this.leadSurrogate,
        seqObj = this.seqObj,
        nextChar = -1,
        i2 = 0,
        j2 = 0;
      while (true) {
        if (nextChar === -1) {
          if (i2 == str.length) break;
          var uCode = str.charCodeAt(i2++);
        } else {
          var uCode = nextChar;
          nextChar = -1;
        }
        if (55296 <= uCode && uCode < 57344) {
          if (uCode < 56320) {
            if (leadSurrogate === -1) {
              leadSurrogate = uCode;
              continue;
            } else {
              leadSurrogate = uCode;
              uCode = UNASSIGNED;
            }
          } else {
            if (leadSurrogate !== -1) {
              uCode = 65536 + (leadSurrogate - 55296) * 1024 + (uCode - 56320);
              leadSurrogate = -1;
            } else {
              uCode = UNASSIGNED;
            }
          }
        } else if (leadSurrogate !== -1) {
          nextChar = uCode;
          uCode = UNASSIGNED;
          leadSurrogate = -1;
        }
        var dbcsCode = UNASSIGNED;
        if (seqObj !== void 0 && uCode != UNASSIGNED) {
          var resCode = seqObj[uCode];
          if (typeof resCode === 'object') {
            seqObj = resCode;
            continue;
          } else if (typeof resCode == 'number') {
            dbcsCode = resCode;
          } else if (resCode == void 0) {
            resCode = seqObj[DEF_CHAR];
            if (resCode !== void 0) {
              dbcsCode = resCode;
              nextChar = uCode;
            } else {
            }
          }
          seqObj = void 0;
        } else if (uCode >= 0) {
          var subtable = this.encodeTable[uCode >> 8];
          if (subtable !== void 0) dbcsCode = subtable[uCode & 255];
          if (dbcsCode <= SEQ_START) {
            seqObj = this.encodeTableSeq[SEQ_START - dbcsCode];
            continue;
          }
          if (dbcsCode == UNASSIGNED && this.gb18030) {
            var idx = findIdx(this.gb18030.uChars, uCode);
            if (idx != -1) {
              var dbcsCode =
                this.gb18030.gbChars[idx] + (uCode - this.gb18030.uChars[idx]);
              newBuf[j2++] = 129 + Math.floor(dbcsCode / 12600);
              dbcsCode = dbcsCode % 12600;
              newBuf[j2++] = 48 + Math.floor(dbcsCode / 1260);
              dbcsCode = dbcsCode % 1260;
              newBuf[j2++] = 129 + Math.floor(dbcsCode / 10);
              dbcsCode = dbcsCode % 10;
              newBuf[j2++] = 48 + dbcsCode;
              continue;
            }
          }
        }
        if (dbcsCode === UNASSIGNED) dbcsCode = this.defaultCharSingleByte;
        if (dbcsCode < 256) {
          newBuf[j2++] = dbcsCode;
        } else if (dbcsCode < 65536) {
          newBuf[j2++] = dbcsCode >> 8;
          newBuf[j2++] = dbcsCode & 255;
        } else {
          newBuf[j2++] = dbcsCode >> 16;
          newBuf[j2++] = (dbcsCode >> 8) & 255;
          newBuf[j2++] = dbcsCode & 255;
        }
      }
      this.seqObj = seqObj;
      this.leadSurrogate = leadSurrogate;
      return newBuf.slice(0, j2);
    };
    DBCSEncoder.prototype.end = function () {
      if (this.leadSurrogate === -1 && this.seqObj === void 0) return;
      var newBuf = Buffer2.alloc(10),
        j2 = 0;
      if (this.seqObj) {
        var dbcsCode = this.seqObj[DEF_CHAR];
        if (dbcsCode !== void 0) {
          if (dbcsCode < 256) {
            newBuf[j2++] = dbcsCode;
          } else {
            newBuf[j2++] = dbcsCode >> 8;
            newBuf[j2++] = dbcsCode & 255;
          }
        } else {
        }
        this.seqObj = void 0;
      }
      if (this.leadSurrogate !== -1) {
        newBuf[j2++] = this.defaultCharSingleByte;
        this.leadSurrogate = -1;
      }
      return newBuf.slice(0, j2);
    };
    DBCSEncoder.prototype.findIdx = findIdx;
    function DBCSDecoder(options, codec) {
      this.nodeIdx = 0;
      this.prevBuf = Buffer2.alloc(0);
      this.decodeTables = codec.decodeTables;
      this.decodeTableSeq = codec.decodeTableSeq;
      this.defaultCharUnicode = codec.defaultCharUnicode;
      this.gb18030 = codec.gb18030;
    }
    DBCSDecoder.prototype.write = function (buf) {
      var newBuf = Buffer2.alloc(buf.length * 2),
        nodeIdx = this.nodeIdx,
        prevBuf = this.prevBuf,
        prevBufOffset = this.prevBuf.length,
        seqStart = -this.prevBuf.length,
        uCode;
      if (prevBufOffset > 0)
        prevBuf = Buffer2.concat([prevBuf, buf.slice(0, 10)]);
      for (var i2 = 0, j2 = 0; i2 < buf.length; i2++) {
        var curByte = i2 >= 0 ? buf[i2] : prevBuf[i2 + prevBufOffset];
        var uCode = this.decodeTables[nodeIdx][curByte];
        if (uCode >= 0) {
        } else if (uCode === UNASSIGNED) {
          i2 = seqStart;
          uCode = this.defaultCharUnicode.charCodeAt(0);
        } else if (uCode === GB18030_CODE) {
          var curSeq =
            seqStart >= 0
              ? buf.slice(seqStart, i2 + 1)
              : prevBuf.slice(seqStart + prevBufOffset, i2 + 1 + prevBufOffset);
          var ptr =
            (curSeq[0] - 129) * 12600 +
            (curSeq[1] - 48) * 1260 +
            (curSeq[2] - 129) * 10 +
            (curSeq[3] - 48);
          var idx = findIdx(this.gb18030.gbChars, ptr);
          uCode = this.gb18030.uChars[idx] + ptr - this.gb18030.gbChars[idx];
        } else if (uCode <= NODE_START) {
          nodeIdx = NODE_START - uCode;
          continue;
        } else if (uCode <= SEQ_START) {
          var seq = this.decodeTableSeq[SEQ_START - uCode];
          for (var k2 = 0; k2 < seq.length - 1; k2++) {
            uCode = seq[k2];
            newBuf[j2++] = uCode & 255;
            newBuf[j2++] = uCode >> 8;
          }
          uCode = seq[seq.length - 1];
        } else
          throw new Error(
            'iconv-lite internal error: invalid decoding table value ' +
              uCode +
              ' at ' +
              nodeIdx +
              '/' +
              curByte
          );
        if (uCode > 65535) {
          uCode -= 65536;
          var uCodeLead = 55296 + Math.floor(uCode / 1024);
          newBuf[j2++] = uCodeLead & 255;
          newBuf[j2++] = uCodeLead >> 8;
          uCode = 56320 + (uCode % 1024);
        }
        newBuf[j2++] = uCode & 255;
        newBuf[j2++] = uCode >> 8;
        nodeIdx = 0;
        seqStart = i2 + 1;
      }
      this.nodeIdx = nodeIdx;
      this.prevBuf =
        seqStart >= 0
          ? buf.slice(seqStart)
          : prevBuf.slice(seqStart + prevBufOffset);
      return newBuf.slice(0, j2).toString('ucs2');
    };
    DBCSDecoder.prototype.end = function () {
      var ret = '';
      while (this.prevBuf.length > 0) {
        ret += this.defaultCharUnicode;
        var buf = this.prevBuf.slice(1);
        this.prevBuf = Buffer2.alloc(0);
        this.nodeIdx = 0;
        if (buf.length > 0) ret += this.write(buf);
      }
      this.nodeIdx = 0;
      return ret;
    };
    function findIdx(table, val) {
      if (table[0] > val) return -1;
      var l2 = 0,
        r2 = table.length;
      while (l2 < r2 - 1) {
        var mid = l2 + Math.floor((r2 - l2 + 1) / 2);
        if (table[mid] <= val) l2 = mid;
        else r2 = mid;
      }
      return l2;
    }
  },
});

// ../../node_modules/iconv-lite/encodings/tables/shiftjis.json
var require_shiftjis = __commonJS({
  '../../node_modules/iconv-lite/encodings/tables/shiftjis.json'(
    exports2,
    module2
  ) {
    module2.exports = [
      ['0', '\0', 128],
      ['a1', '\uFF61', 62],
      [
        '8140',
        '\u3000\u3001\u3002\uFF0C\uFF0E\u30FB\uFF1A\uFF1B\uFF1F\uFF01\u309B\u309C\xB4\uFF40\xA8\uFF3E\uFFE3\uFF3F\u30FD\u30FE\u309D\u309E\u3003\u4EDD\u3005\u3006\u3007\u30FC\u2015\u2010\uFF0F\uFF3C\uFF5E\u2225\uFF5C\u2026\u2025\u2018\u2019\u201C\u201D\uFF08\uFF09\u3014\u3015\uFF3B\uFF3D\uFF5B\uFF5D\u3008',
        9,
        '\uFF0B\uFF0D\xB1\xD7',
      ],
      [
        '8180',
        '\xF7\uFF1D\u2260\uFF1C\uFF1E\u2266\u2267\u221E\u2234\u2642\u2640\xB0\u2032\u2033\u2103\uFFE5\uFF04\uFFE0\uFFE1\uFF05\uFF03\uFF06\uFF0A\uFF20\xA7\u2606\u2605\u25CB\u25CF\u25CE\u25C7\u25C6\u25A1\u25A0\u25B3\u25B2\u25BD\u25BC\u203B\u3012\u2192\u2190\u2191\u2193\u3013',
      ],
      ['81b8', '\u2208\u220B\u2286\u2287\u2282\u2283\u222A\u2229'],
      ['81c8', '\u2227\u2228\uFFE2\u21D2\u21D4\u2200\u2203'],
      [
        '81da',
        '\u2220\u22A5\u2312\u2202\u2207\u2261\u2252\u226A\u226B\u221A\u223D\u221D\u2235\u222B\u222C',
      ],
      ['81f0', '\u212B\u2030\u266F\u266D\u266A\u2020\u2021\xB6'],
      ['81fc', '\u25EF'],
      ['824f', '\uFF10', 9],
      ['8260', '\uFF21', 25],
      ['8281', '\uFF41', 25],
      ['829f', '\u3041', 82],
      ['8340', '\u30A1', 62],
      ['8380', '\u30E0', 22],
      ['839f', '\u0391', 16, '\u03A3', 6],
      ['83bf', '\u03B1', 16, '\u03C3', 6],
      ['8440', '\u0410', 5, '\u0401\u0416', 25],
      ['8470', '\u0430', 5, '\u0451\u0436', 7],
      ['8480', '\u043E', 17],
      [
        '849f',
        '\u2500\u2502\u250C\u2510\u2518\u2514\u251C\u252C\u2524\u2534\u253C\u2501\u2503\u250F\u2513\u251B\u2517\u2523\u2533\u252B\u253B\u254B\u2520\u252F\u2528\u2537\u253F\u251D\u2530\u2525\u2538\u2542',
      ],
      ['8740', '\u2460', 19, '\u2160', 9],
      [
        '875f',
        '\u3349\u3314\u3322\u334D\u3318\u3327\u3303\u3336\u3351\u3357\u330D\u3326\u3323\u332B\u334A\u333B\u339C\u339D\u339E\u338E\u338F\u33C4\u33A1',
      ],
      ['877e', '\u337B'],
      [
        '8780',
        '\u301D\u301F\u2116\u33CD\u2121\u32A4',
        4,
        '\u3231\u3232\u3239\u337E\u337D\u337C\u2252\u2261\u222B\u222E\u2211\u221A\u22A5\u2220\u221F\u22BF\u2235\u2229\u222A',
      ],
      [
        '889f',
        '\u4E9C\u5516\u5A03\u963F\u54C0\u611B\u6328\u59F6\u9022\u8475\u831C\u7A50\u60AA\u63E1\u6E25\u65ED\u8466\u82A6\u9BF5\u6893\u5727\u65A1\u6271\u5B9B\u59D0\u867B\u98F4\u7D62\u7DBE\u9B8E\u6216\u7C9F\u88B7\u5B89\u5EB5\u6309\u6697\u6848\u95C7\u978D\u674F\u4EE5\u4F0A\u4F4D\u4F9D\u5049\u56F2\u5937\u59D4\u5A01\u5C09\u60DF\u610F\u6170\u6613\u6905\u70BA\u754F\u7570\u79FB\u7DAD\u7DEF\u80C3\u840E\u8863\u8B02\u9055\u907A\u533B\u4E95\u4EA5\u57DF\u80B2\u90C1\u78EF\u4E00\u58F1\u6EA2\u9038\u7A32\u8328\u828B\u9C2F\u5141\u5370\u54BD\u54E1\u56E0\u59FB\u5F15\u98F2\u6DEB\u80E4\u852D',
      ],
      [
        '8940',
        '\u9662\u9670\u96A0\u97FB\u540B\u53F3\u5B87\u70CF\u7FBD\u8FC2\u96E8\u536F\u9D5C\u7ABA\u4E11\u7893\u81FC\u6E26\u5618\u5504\u6B1D\u851A\u9C3B\u59E5\u53A9\u6D66\u74DC\u958F\u5642\u4E91\u904B\u96F2\u834F\u990C\u53E1\u55B6\u5B30\u5F71\u6620\u66F3\u6804\u6C38\u6CF3\u6D29\u745B\u76C8\u7A4E\u9834\u82F1\u885B\u8A60\u92ED\u6DB2\u75AB\u76CA\u99C5\u60A6\u8B01\u8D8A\u95B2\u698E\u53AD\u5186',
      ],
      [
        '8980',
        '\u5712\u5830\u5944\u5BB4\u5EF6\u6028\u63A9\u63F4\u6CBF\u6F14\u708E\u7114\u7159\u71D5\u733F\u7E01\u8276\u82D1\u8597\u9060\u925B\u9D1B\u5869\u65BC\u6C5A\u7525\u51F9\u592E\u5965\u5F80\u5FDC\u62BC\u65FA\u6A2A\u6B27\u6BB4\u738B\u7FC1\u8956\u9D2C\u9D0E\u9EC4\u5CA1\u6C96\u837B\u5104\u5C4B\u61B6\u81C6\u6876\u7261\u4E59\u4FFA\u5378\u6069\u6E29\u7A4F\u97F3\u4E0B\u5316\u4EEE\u4F55\u4F3D\u4FA1\u4F73\u52A0\u53EF\u5609\u590F\u5AC1\u5BB6\u5BE1\u79D1\u6687\u679C\u67B6\u6B4C\u6CB3\u706B\u73C2\u798D\u79BE\u7A3C\u7B87\u82B1\u82DB\u8304\u8377\u83EF\u83D3\u8766\u8AB2\u5629\u8CA8\u8FE6\u904E\u971E\u868A\u4FC4\u5CE8\u6211\u7259\u753B\u81E5\u82BD\u86FE\u8CC0\u96C5\u9913\u99D5\u4ECB\u4F1A\u89E3\u56DE\u584A\u58CA\u5EFB\u5FEB\u602A\u6094\u6062\u61D0\u6212\u62D0\u6539',
      ],
      [
        '8a40',
        '\u9B41\u6666\u68B0\u6D77\u7070\u754C\u7686\u7D75\u82A5\u87F9\u958B\u968E\u8C9D\u51F1\u52BE\u5916\u54B3\u5BB3\u5D16\u6168\u6982\u6DAF\u788D\u84CB\u8857\u8A72\u93A7\u9AB8\u6D6C\u99A8\u86D9\u57A3\u67FF\u86CE\u920E\u5283\u5687\u5404\u5ED3\u62E1\u64B9\u683C\u6838\u6BBB\u7372\u78BA\u7A6B\u899A\u89D2\u8D6B\u8F03\u90ED\u95A3\u9694\u9769\u5B66\u5CB3\u697D\u984D\u984E\u639B\u7B20\u6A2B',
      ],
      [
        '8a80',
        '\u6A7F\u68B6\u9C0D\u6F5F\u5272\u559D\u6070\u62EC\u6D3B\u6E07\u6ED1\u845B\u8910\u8F44\u4E14\u9C39\u53F6\u691B\u6A3A\u9784\u682A\u515C\u7AC3\u84B2\u91DC\u938C\u565B\u9D28\u6822\u8305\u8431\u7CA5\u5208\u82C5\u74E6\u4E7E\u4F83\u51A0\u5BD2\u520A\u52D8\u52E7\u5DFB\u559A\u582A\u59E6\u5B8C\u5B98\u5BDB\u5E72\u5E79\u60A3\u611F\u6163\u61BE\u63DB\u6562\u67D1\u6853\u68FA\u6B3E\u6B53\u6C57\u6F22\u6F97\u6F45\u74B0\u7518\u76E3\u770B\u7AFF\u7BA1\u7C21\u7DE9\u7F36\u7FF0\u809D\u8266\u839E\u89B3\u8ACC\u8CAB\u9084\u9451\u9593\u9591\u95A2\u9665\u97D3\u9928\u8218\u4E38\u542B\u5CB8\u5DCC\u73A9\u764C\u773C\u5CA9\u7FEB\u8D0B\u96C1\u9811\u9854\u9858\u4F01\u4F0E\u5371\u559C\u5668\u57FA\u5947\u5B09\u5BC4\u5C90\u5E0C\u5E7E\u5FCC\u63EE\u673A\u65D7\u65E2\u671F\u68CB\u68C4',
      ],
      [
        '8b40',
        '\u6A5F\u5E30\u6BC5\u6C17\u6C7D\u757F\u7948\u5B63\u7A00\u7D00\u5FBD\u898F\u8A18\u8CB4\u8D77\u8ECC\u8F1D\u98E2\u9A0E\u9B3C\u4E80\u507D\u5100\u5993\u5B9C\u622F\u6280\u64EC\u6B3A\u72A0\u7591\u7947\u7FA9\u87FB\u8ABC\u8B70\u63AC\u83CA\u97A0\u5409\u5403\u55AB\u6854\u6A58\u8A70\u7827\u6775\u9ECD\u5374\u5BA2\u811A\u8650\u9006\u4E18\u4E45\u4EC7\u4F11\u53CA\u5438\u5BAE\u5F13\u6025\u6551',
      ],
      [
        '8b80',
        '\u673D\u6C42\u6C72\u6CE3\u7078\u7403\u7A76\u7AAE\u7B08\u7D1A\u7CFE\u7D66\u65E7\u725B\u53BB\u5C45\u5DE8\u62D2\u62E0\u6319\u6E20\u865A\u8A31\u8DDD\u92F8\u6F01\u79A6\u9B5A\u4EA8\u4EAB\u4EAC\u4F9B\u4FA0\u50D1\u5147\u7AF6\u5171\u51F6\u5354\u5321\u537F\u53EB\u55AC\u5883\u5CE1\u5F37\u5F4A\u602F\u6050\u606D\u631F\u6559\u6A4B\u6CC1\u72C2\u72ED\u77EF\u80F8\u8105\u8208\u854E\u90F7\u93E1\u97FF\u9957\u9A5A\u4EF0\u51DD\u5C2D\u6681\u696D\u5C40\u66F2\u6975\u7389\u6850\u7C81\u50C5\u52E4\u5747\u5DFE\u9326\u65A4\u6B23\u6B3D\u7434\u7981\u79BD\u7B4B\u7DCA\u82B9\u83CC\u887F\u895F\u8B39\u8FD1\u91D1\u541F\u9280\u4E5D\u5036\u53E5\u533A\u72D7\u7396\u77E9\u82E6\u8EAF\u99C6\u99C8\u99D2\u5177\u611A\u865E\u55B0\u7A7A\u5076\u5BD3\u9047\u9685\u4E32\u6ADB\u91E7\u5C51\u5C48',
      ],
      [
        '8c40',
        '\u6398\u7A9F\u6C93\u9774\u8F61\u7AAA\u718A\u9688\u7C82\u6817\u7E70\u6851\u936C\u52F2\u541B\u85AB\u8A13\u7FA4\u8ECD\u90E1\u5366\u8888\u7941\u4FC2\u50BE\u5211\u5144\u5553\u572D\u73EA\u578B\u5951\u5F62\u5F84\u6075\u6176\u6167\u61A9\u63B2\u643A\u656C\u666F\u6842\u6E13\u7566\u7A3D\u7CFB\u7D4C\u7D99\u7E4B\u7F6B\u830E\u834A\u86CD\u8A08\u8A63\u8B66\u8EFD\u981A\u9D8F\u82B8\u8FCE\u9BE8',
      ],
      [
        '8c80',
        '\u5287\u621F\u6483\u6FC0\u9699\u6841\u5091\u6B20\u6C7A\u6F54\u7A74\u7D50\u8840\u8A23\u6708\u4EF6\u5039\u5026\u5065\u517C\u5238\u5263\u55A7\u570F\u5805\u5ACC\u5EFA\u61B2\u61F8\u62F3\u6372\u691C\u6A29\u727D\u72AC\u732E\u7814\u786F\u7D79\u770C\u80A9\u898B\u8B19\u8CE2\u8ED2\u9063\u9375\u967A\u9855\u9A13\u9E78\u5143\u539F\u53B3\u5E7B\u5F26\u6E1B\u6E90\u7384\u73FE\u7D43\u8237\u8A00\u8AFA\u9650\u4E4E\u500B\u53E4\u547C\u56FA\u59D1\u5B64\u5DF1\u5EAB\u5F27\u6238\u6545\u67AF\u6E56\u72D0\u7CCA\u88B4\u80A1\u80E1\u83F0\u864E\u8A87\u8DE8\u9237\u96C7\u9867\u9F13\u4E94\u4E92\u4F0D\u5348\u5449\u543E\u5A2F\u5F8C\u5FA1\u609F\u68A7\u6A8E\u745A\u7881\u8A9E\u8AA4\u8B77\u9190\u4E5E\u9BC9\u4EA4\u4F7C\u4FAF\u5019\u5016\u5149\u516C\u529F\u52B9\u52FE\u539A\u53E3\u5411',
      ],
      [
        '8d40',
        '\u540E\u5589\u5751\u57A2\u597D\u5B54\u5B5D\u5B8F\u5DE5\u5DE7\u5DF7\u5E78\u5E83\u5E9A\u5EB7\u5F18\u6052\u614C\u6297\u62D8\u63A7\u653B\u6602\u6643\u66F4\u676D\u6821\u6897\u69CB\u6C5F\u6D2A\u6D69\u6E2F\u6E9D\u7532\u7687\u786C\u7A3F\u7CE0\u7D05\u7D18\u7D5E\u7DB1\u8015\u8003\u80AF\u80B1\u8154\u818F\u822A\u8352\u884C\u8861\u8B1B\u8CA2\u8CFC\u90CA\u9175\u9271\u783F\u92FC\u95A4\u964D',
      ],
      [
        '8d80',
        '\u9805\u9999\u9AD8\u9D3B\u525B\u52AB\u53F7\u5408\u58D5\u62F7\u6FE0\u8C6A\u8F5F\u9EB9\u514B\u523B\u544A\u56FD\u7A40\u9177\u9D60\u9ED2\u7344\u6F09\u8170\u7511\u5FFD\u60DA\u9AA8\u72DB\u8FBC\u6B64\u9803\u4ECA\u56F0\u5764\u58BE\u5A5A\u6068\u61C7\u660F\u6606\u6839\u68B1\u6DF7\u75D5\u7D3A\u826E\u9B42\u4E9B\u4F50\u53C9\u5506\u5D6F\u5DE6\u5DEE\u67FB\u6C99\u7473\u7802\u8A50\u9396\u88DF\u5750\u5EA7\u632B\u50B5\u50AC\u518D\u6700\u54C9\u585E\u59BB\u5BB0\u5F69\u624D\u63A1\u683D\u6B73\u6E08\u707D\u91C7\u7280\u7815\u7826\u796D\u658E\u7D30\u83DC\u88C1\u8F09\u969B\u5264\u5728\u6750\u7F6A\u8CA1\u51B4\u5742\u962A\u583A\u698A\u80B4\u54B2\u5D0E\u57FC\u7895\u9DFA\u4F5C\u524A\u548B\u643E\u6628\u6714\u67F5\u7A84\u7B56\u7D22\u932F\u685C\u9BAD\u7B39\u5319\u518A\u5237',
      ],
      [
        '8e40',
        '\u5BDF\u62F6\u64AE\u64E6\u672D\u6BBA\u85A9\u96D1\u7690\u9BD6\u634C\u9306\u9BAB\u76BF\u6652\u4E09\u5098\u53C2\u5C71\u60E8\u6492\u6563\u685F\u71E6\u73CA\u7523\u7B97\u7E82\u8695\u8B83\u8CDB\u9178\u9910\u65AC\u66AB\u6B8B\u4ED5\u4ED4\u4F3A\u4F7F\u523A\u53F8\u53F2\u55E3\u56DB\u58EB\u59CB\u59C9\u59FF\u5B50\u5C4D\u5E02\u5E2B\u5FD7\u601D\u6307\u652F\u5B5C\u65AF\u65BD\u65E8\u679D\u6B62',
      ],
      [
        '8e80',
        '\u6B7B\u6C0F\u7345\u7949\u79C1\u7CF8\u7D19\u7D2B\u80A2\u8102\u81F3\u8996\u8A5E\u8A69\u8A66\u8A8C\u8AEE\u8CC7\u8CDC\u96CC\u98FC\u6B6F\u4E8B\u4F3C\u4F8D\u5150\u5B57\u5BFA\u6148\u6301\u6642\u6B21\u6ECB\u6CBB\u723E\u74BD\u75D4\u78C1\u793A\u800C\u8033\u81EA\u8494\u8F9E\u6C50\u9E7F\u5F0F\u8B58\u9D2B\u7AFA\u8EF8\u5B8D\u96EB\u4E03\u53F1\u57F7\u5931\u5AC9\u5BA4\u6089\u6E7F\u6F06\u75BE\u8CEA\u5B9F\u8500\u7BE0\u5072\u67F4\u829D\u5C61\u854A\u7E1E\u820E\u5199\u5C04\u6368\u8D66\u659C\u716E\u793E\u7D17\u8005\u8B1D\u8ECA\u906E\u86C7\u90AA\u501F\u52FA\u5C3A\u6753\u707C\u7235\u914C\u91C8\u932B\u82E5\u5BC2\u5F31\u60F9\u4E3B\u53D6\u5B88\u624B\u6731\u6B8A\u72E9\u73E0\u7A2E\u816B\u8DA3\u9152\u9996\u5112\u53D7\u546A\u5BFF\u6388\u6A39\u7DAC\u9700\u56DA\u53CE\u5468',
      ],
      [
        '8f40',
        '\u5B97\u5C31\u5DDE\u4FEE\u6101\u62FE\u6D32\u79C0\u79CB\u7D42\u7E4D\u7FD2\u81ED\u821F\u8490\u8846\u8972\u8B90\u8E74\u8F2F\u9031\u914B\u916C\u96C6\u919C\u4EC0\u4F4F\u5145\u5341\u5F93\u620E\u67D4\u6C41\u6E0B\u7363\u7E26\u91CD\u9283\u53D4\u5919\u5BBF\u6DD1\u795D\u7E2E\u7C9B\u587E\u719F\u51FA\u8853\u8FF0\u4FCA\u5CFB\u6625\u77AC\u7AE3\u821C\u99FF\u51C6\u5FAA\u65EC\u696F\u6B89\u6DF3',
      ],
      [
        '8f80',
        '\u6E96\u6F64\u76FE\u7D14\u5DE1\u9075\u9187\u9806\u51E6\u521D\u6240\u6691\u66D9\u6E1A\u5EB6\u7DD2\u7F72\u66F8\u85AF\u85F7\u8AF8\u52A9\u53D9\u5973\u5E8F\u5F90\u6055\u92E4\u9664\u50B7\u511F\u52DD\u5320\u5347\u53EC\u54E8\u5546\u5531\u5617\u5968\u59BE\u5A3C\u5BB5\u5C06\u5C0F\u5C11\u5C1A\u5E84\u5E8A\u5EE0\u5F70\u627F\u6284\u62DB\u638C\u6377\u6607\u660C\u662D\u6676\u677E\u68A2\u6A1F\u6A35\u6CBC\u6D88\u6E09\u6E58\u713C\u7126\u7167\u75C7\u7701\u785D\u7901\u7965\u79F0\u7AE0\u7B11\u7CA7\u7D39\u8096\u83D6\u848B\u8549\u885D\u88F3\u8A1F\u8A3C\u8A54\u8A73\u8C61\u8CDE\u91A4\u9266\u937E\u9418\u969C\u9798\u4E0A\u4E08\u4E1E\u4E57\u5197\u5270\u57CE\u5834\u58CC\u5B22\u5E38\u60C5\u64FE\u6761\u6756\u6D44\u72B6\u7573\u7A63\u84B8\u8B72\u91B8\u9320\u5631\u57F4\u98FE',
      ],
      [
        '9040',
        '\u62ED\u690D\u6B96\u71ED\u7E54\u8077\u8272\u89E6\u98DF\u8755\u8FB1\u5C3B\u4F38\u4FE1\u4FB5\u5507\u5A20\u5BDD\u5BE9\u5FC3\u614E\u632F\u65B0\u664B\u68EE\u699B\u6D78\u6DF1\u7533\u75B9\u771F\u795E\u79E6\u7D33\u81E3\u82AF\u85AA\u89AA\u8A3A\u8EAB\u8F9B\u9032\u91DD\u9707\u4EBA\u4EC1\u5203\u5875\u58EC\u5C0B\u751A\u5C3D\u814E\u8A0A\u8FC5\u9663\u976D\u7B25\u8ACF\u9808\u9162\u56F3\u53A8',
      ],
      [
        '9080',
        '\u9017\u5439\u5782\u5E25\u63A8\u6C34\u708A\u7761\u7C8B\u7FE0\u8870\u9042\u9154\u9310\u9318\u968F\u745E\u9AC4\u5D07\u5D69\u6570\u67A2\u8DA8\u96DB\u636E\u6749\u6919\u83C5\u9817\u96C0\u88FE\u6F84\u647A\u5BF8\u4E16\u702C\u755D\u662F\u51C4\u5236\u52E2\u59D3\u5F81\u6027\u6210\u653F\u6574\u661F\u6674\u68F2\u6816\u6B63\u6E05\u7272\u751F\u76DB\u7CBE\u8056\u58F0\u88FD\u897F\u8AA0\u8A93\u8ACB\u901D\u9192\u9752\u9759\u6589\u7A0E\u8106\u96BB\u5E2D\u60DC\u621A\u65A5\u6614\u6790\u77F3\u7A4D\u7C4D\u7E3E\u810A\u8CAC\u8D64\u8DE1\u8E5F\u78A9\u5207\u62D9\u63A5\u6442\u6298\u8A2D\u7A83\u7BC0\u8AAC\u96EA\u7D76\u820C\u8749\u4ED9\u5148\u5343\u5360\u5BA3\u5C02\u5C16\u5DDD\u6226\u6247\u64B0\u6813\u6834\u6CC9\u6D45\u6D17\u67D3\u6F5C\u714E\u717D\u65CB\u7A7F\u7BAD\u7DDA',
      ],
      [
        '9140',
        '\u7E4A\u7FA8\u817A\u821B\u8239\u85A6\u8A6E\u8CCE\u8DF5\u9078\u9077\u92AD\u9291\u9583\u9BAE\u524D\u5584\u6F38\u7136\u5168\u7985\u7E55\u81B3\u7CCE\u564C\u5851\u5CA8\u63AA\u66FE\u66FD\u695A\u72D9\u758F\u758E\u790E\u7956\u79DF\u7C97\u7D20\u7D44\u8607\u8A34\u963B\u9061\u9F20\u50E7\u5275\u53CC\u53E2\u5009\u55AA\u58EE\u594F\u723D\u5B8B\u5C64\u531D\u60E3\u60F3\u635C\u6383\u633F\u63BB',
      ],
      [
        '9180',
        '\u64CD\u65E9\u66F9\u5DE3\u69CD\u69FD\u6F15\u71E5\u4E89\u75E9\u76F8\u7A93\u7CDF\u7DCF\u7D9C\u8061\u8349\u8358\u846C\u84BC\u85FB\u88C5\u8D70\u9001\u906D\u9397\u971C\u9A12\u50CF\u5897\u618E\u81D3\u8535\u8D08\u9020\u4FC3\u5074\u5247\u5373\u606F\u6349\u675F\u6E2C\u8DB3\u901F\u4FD7\u5C5E\u8CCA\u65CF\u7D9A\u5352\u8896\u5176\u63C3\u5B58\u5B6B\u5C0A\u640D\u6751\u905C\u4ED6\u591A\u592A\u6C70\u8A51\u553E\u5815\u59A5\u60F0\u6253\u67C1\u8235\u6955\u9640\u99C4\u9A28\u4F53\u5806\u5BFE\u8010\u5CB1\u5E2F\u5F85\u6020\u614B\u6234\u66FF\u6CF0\u6EDE\u80CE\u817F\u82D4\u888B\u8CB8\u9000\u902E\u968A\u9EDB\u9BDB\u4EE3\u53F0\u5927\u7B2C\u918D\u984C\u9DF9\u6EDD\u7027\u5353\u5544\u5B85\u6258\u629E\u62D3\u6CA2\u6FEF\u7422\u8A17\u9438\u6FC1\u8AFE\u8338\u51E7\u86F8\u53EA',
      ],
      [
        '9240',
        '\u53E9\u4F46\u9054\u8FB0\u596A\u8131\u5DFD\u7AEA\u8FBF\u68DA\u8C37\u72F8\u9C48\u6A3D\u8AB0\u4E39\u5358\u5606\u5766\u62C5\u63A2\u65E6\u6B4E\u6DE1\u6E5B\u70AD\u77ED\u7AEF\u7BAA\u7DBB\u803D\u80C6\u86CB\u8A95\u935B\u56E3\u58C7\u5F3E\u65AD\u6696\u6A80\u6BB5\u7537\u8AC7\u5024\u77E5\u5730\u5F1B\u6065\u667A\u6C60\u75F4\u7A1A\u7F6E\u81F4\u8718\u9045\u99B3\u7BC9\u755C\u7AF9\u7B51\u84C4',
      ],
      [
        '9280',
        '\u9010\u79E9\u7A92\u8336\u5AE1\u7740\u4E2D\u4EF2\u5B99\u5FE0\u62BD\u663C\u67F1\u6CE8\u866B\u8877\u8A3B\u914E\u92F3\u99D0\u6A17\u7026\u732A\u82E7\u8457\u8CAF\u4E01\u5146\u51CB\u558B\u5BF5\u5E16\u5E33\u5E81\u5F14\u5F35\u5F6B\u5FB4\u61F2\u6311\u66A2\u671D\u6F6E\u7252\u753A\u773A\u8074\u8139\u8178\u8776\u8ABF\u8ADC\u8D85\u8DF3\u929A\u9577\u9802\u9CE5\u52C5\u6357\u76F4\u6715\u6C88\u73CD\u8CC3\u93AE\u9673\u6D25\u589C\u690E\u69CC\u8FFD\u939A\u75DB\u901A\u585A\u6802\u63B4\u69FB\u4F43\u6F2C\u67D8\u8FBB\u8526\u7DB4\u9354\u693F\u6F70\u576A\u58F7\u5B2C\u7D2C\u722A\u540A\u91E3\u9DB4\u4EAD\u4F4E\u505C\u5075\u5243\u8C9E\u5448\u5824\u5B9A\u5E1D\u5E95\u5EAD\u5EF7\u5F1F\u608C\u62B5\u633A\u63D0\u68AF\u6C40\u7887\u798E\u7A0B\u7DE0\u8247\u8A02\u8AE6\u8E44\u9013',
      ],
      [
        '9340',
        '\u90B8\u912D\u91D8\u9F0E\u6CE5\u6458\u64E2\u6575\u6EF4\u7684\u7B1B\u9069\u93D1\u6EBA\u54F2\u5FB9\u64A4\u8F4D\u8FED\u9244\u5178\u586B\u5929\u5C55\u5E97\u6DFB\u7E8F\u751C\u8CBC\u8EE2\u985B\u70B9\u4F1D\u6BBF\u6FB1\u7530\u96FB\u514E\u5410\u5835\u5857\u59AC\u5C60\u5F92\u6597\u675C\u6E21\u767B\u83DF\u8CED\u9014\u90FD\u934D\u7825\u783A\u52AA\u5EA6\u571F\u5974\u6012\u5012\u515A\u51AC',
      ],
      [
        '9380',
        '\u51CD\u5200\u5510\u5854\u5858\u5957\u5B95\u5CF6\u5D8B\u60BC\u6295\u642D\u6771\u6843\u68BC\u68DF\u76D7\u6DD8\u6E6F\u6D9B\u706F\u71C8\u5F53\u75D8\u7977\u7B49\u7B54\u7B52\u7CD6\u7D71\u5230\u8463\u8569\u85E4\u8A0E\u8B04\u8C46\u8E0F\u9003\u900F\u9419\u9676\u982D\u9A30\u95D8\u50CD\u52D5\u540C\u5802\u5C0E\u61A7\u649E\u6D1E\u77B3\u7AE5\u80F4\u8404\u9053\u9285\u5CE0\u9D07\u533F\u5F97\u5FB3\u6D9C\u7279\u7763\u79BF\u7BE4\u6BD2\u72EC\u8AAD\u6803\u6A61\u51F8\u7A81\u6934\u5C4A\u9CF6\u82EB\u5BC5\u9149\u701E\u5678\u5C6F\u60C7\u6566\u6C8C\u8C5A\u9041\u9813\u5451\u66C7\u920D\u5948\u90A3\u5185\u4E4D\u51EA\u8599\u8B0E\u7058\u637A\u934B\u6962\u99B4\u7E04\u7577\u5357\u6960\u8EDF\u96E3\u6C5D\u4E8C\u5C3C\u5F10\u8FE9\u5302\u8CD1\u8089\u8679\u5EFF\u65E5\u4E73\u5165',
      ],
      [
        '9440',
        '\u5982\u5C3F\u97EE\u4EFB\u598A\u5FCD\u8A8D\u6FE1\u79B0\u7962\u5BE7\u8471\u732B\u71B1\u5E74\u5FF5\u637B\u649A\u71C3\u7C98\u4E43\u5EFC\u4E4B\u57DC\u56A2\u60A9\u6FC3\u7D0D\u80FD\u8133\u81BF\u8FB2\u8997\u86A4\u5DF4\u628A\u64AD\u8987\u6777\u6CE2\u6D3E\u7436\u7834\u5A46\u7F75\u82AD\u99AC\u4FF3\u5EC3\u62DD\u6392\u6557\u676F\u76C3\u724C\u80CC\u80BA\u8F29\u914D\u500D\u57F9\u5A92\u6885',
      ],
      [
        '9480',
        '\u6973\u7164\u72FD\u8CB7\u58F2\u8CE0\u966A\u9019\u877F\u79E4\u77E7\u8429\u4F2F\u5265\u535A\u62CD\u67CF\u6CCA\u767D\u7B94\u7C95\u8236\u8584\u8FEB\u66DD\u6F20\u7206\u7E1B\u83AB\u99C1\u9EA6\u51FD\u7BB1\u7872\u7BB8\u8087\u7B48\u6AE8\u5E61\u808C\u7551\u7560\u516B\u9262\u6E8C\u767A\u9197\u9AEA\u4F10\u7F70\u629C\u7B4F\u95A5\u9CE9\u567A\u5859\u86E4\u96BC\u4F34\u5224\u534A\u53CD\u53DB\u5E06\u642C\u6591\u677F\u6C3E\u6C4E\u7248\u72AF\u73ED\u7554\u7E41\u822C\u85E9\u8CA9\u7BC4\u91C6\u7169\u9812\u98EF\u633D\u6669\u756A\u76E4\u78D0\u8543\u86EE\u532A\u5351\u5426\u5983\u5E87\u5F7C\u60B2\u6249\u6279\u62AB\u6590\u6BD4\u6CCC\u75B2\u76AE\u7891\u79D8\u7DCB\u7F77\u80A5\u88AB\u8AB9\u8CBB\u907F\u975E\u98DB\u6A0B\u7C38\u5099\u5C3E\u5FAE\u6787\u6BD8\u7435\u7709\u7F8E',
      ],
      [
        '9540',
        '\u9F3B\u67CA\u7A17\u5339\u758B\u9AED\u5F66\u819D\u83F1\u8098\u5F3C\u5FC5\u7562\u7B46\u903C\u6867\u59EB\u5A9B\u7D10\u767E\u8B2C\u4FF5\u5F6A\u6A19\u6C37\u6F02\u74E2\u7968\u8868\u8A55\u8C79\u5EDF\u63CF\u75C5\u79D2\u82D7\u9328\u92F2\u849C\u86ED\u9C2D\u54C1\u5F6C\u658C\u6D5C\u7015\u8CA7\u8CD3\u983B\u654F\u74F6\u4E0D\u4ED8\u57E0\u592B\u5A66\u5BCC\u51A8\u5E03\u5E9C\u6016\u6276\u6577',
      ],
      [
        '9580',
        '\u65A7\u666E\u6D6E\u7236\u7B26\u8150\u819A\u8299\u8B5C\u8CA0\u8CE6\u8D74\u961C\u9644\u4FAE\u64AB\u6B66\u821E\u8461\u856A\u90E8\u5C01\u6953\u98A8\u847A\u8557\u4F0F\u526F\u5FA9\u5E45\u670D\u798F\u8179\u8907\u8986\u6DF5\u5F17\u6255\u6CB8\u4ECF\u7269\u9B92\u5206\u543B\u5674\u58B3\u61A4\u626E\u711A\u596E\u7C89\u7CDE\u7D1B\u96F0\u6587\u805E\u4E19\u4F75\u5175\u5840\u5E63\u5E73\u5F0A\u67C4\u4E26\u853D\u9589\u965B\u7C73\u9801\u50FB\u58C1\u7656\u78A7\u5225\u77A5\u8511\u7B86\u504F\u5909\u7247\u7BC7\u7DE8\u8FBA\u8FD4\u904D\u4FBF\u52C9\u5A29\u5F01\u97AD\u4FDD\u8217\u92EA\u5703\u6355\u6B69\u752B\u88DC\u8F14\u7A42\u52DF\u5893\u6155\u620A\u66AE\u6BCD\u7C3F\u83E9\u5023\u4FF8\u5305\u5446\u5831\u5949\u5B9D\u5CF0\u5CEF\u5D29\u5E96\u62B1\u6367\u653E\u65B9\u670B',
      ],
      [
        '9640',
        '\u6CD5\u6CE1\u70F9\u7832\u7E2B\u80DE\u82B3\u840C\u84EC\u8702\u8912\u8A2A\u8C4A\u90A6\u92D2\u98FD\u9CF3\u9D6C\u4E4F\u4EA1\u508D\u5256\u574A\u59A8\u5E3D\u5FD8\u5FD9\u623F\u66B4\u671B\u67D0\u68D2\u5192\u7D21\u80AA\u81A8\u8B00\u8C8C\u8CBF\u927E\u9632\u5420\u982C\u5317\u50D5\u535C\u58A8\u64B2\u6734\u7267\u7766\u7A46\u91E6\u52C3\u6CA1\u6B86\u5800\u5E4C\u5954\u672C\u7FFB\u51E1\u76C6',
      ],
      [
        '9680',
        '\u6469\u78E8\u9B54\u9EBB\u57CB\u59B9\u6627\u679A\u6BCE\u54E9\u69D9\u5E55\u819C\u6795\u9BAA\u67FE\u9C52\u685D\u4EA6\u4FE3\u53C8\u62B9\u672B\u6CAB\u8FC4\u4FAD\u7E6D\u9EBF\u4E07\u6162\u6E80\u6F2B\u8513\u5473\u672A\u9B45\u5DF3\u7B95\u5CAC\u5BC6\u871C\u6E4A\u84D1\u7A14\u8108\u5999\u7C8D\u6C11\u7720\u52D9\u5922\u7121\u725F\u77DB\u9727\u9D61\u690B\u5A7F\u5A18\u51A5\u540D\u547D\u660E\u76DF\u8FF7\u9298\u9CF4\u59EA\u725D\u6EC5\u514D\u68C9\u7DBF\u7DEC\u9762\u9EBA\u6478\u6A21\u8302\u5984\u5B5F\u6BDB\u731B\u76F2\u7DB2\u8017\u8499\u5132\u6728\u9ED9\u76EE\u6762\u52FF\u9905\u5C24\u623B\u7C7E\u8CB0\u554F\u60B6\u7D0B\u9580\u5301\u4E5F\u51B6\u591C\u723A\u8036\u91CE\u5F25\u77E2\u5384\u5F79\u7D04\u85AC\u8A33\u8E8D\u9756\u67F3\u85AE\u9453\u6109\u6108\u6CB9\u7652',
      ],
      [
        '9740',
        '\u8AED\u8F38\u552F\u4F51\u512A\u52C7\u53CB\u5BA5\u5E7D\u60A0\u6182\u63D6\u6709\u67DA\u6E67\u6D8C\u7336\u7337\u7531\u7950\u88D5\u8A98\u904A\u9091\u90F5\u96C4\u878D\u5915\u4E88\u4F59\u4E0E\u8A89\u8F3F\u9810\u50AD\u5E7C\u5996\u5BB9\u5EB8\u63DA\u63FA\u64C1\u66DC\u694A\u69D8\u6D0B\u6EB6\u7194\u7528\u7AAF\u7F8A\u8000\u8449\u84C9\u8981\u8B21\u8E0A\u9065\u967D\u990A\u617E\u6291\u6B32',
      ],
      [
        '9780',
        '\u6C83\u6D74\u7FCC\u7FFC\u6DC0\u7F85\u87BA\u88F8\u6765\u83B1\u983C\u96F7\u6D1B\u7D61\u843D\u916A\u4E71\u5375\u5D50\u6B04\u6FEB\u85CD\u862D\u89A7\u5229\u540F\u5C65\u674E\u68A8\u7406\u7483\u75E2\u88CF\u88E1\u91CC\u96E2\u9678\u5F8B\u7387\u7ACB\u844E\u63A0\u7565\u5289\u6D41\u6E9C\u7409\u7559\u786B\u7C92\u9686\u7ADC\u9F8D\u4FB6\u616E\u65C5\u865C\u4E86\u4EAE\u50DA\u4E21\u51CC\u5BEE\u6599\u6881\u6DBC\u731F\u7642\u77AD\u7A1C\u7CE7\u826F\u8AD2\u907C\u91CF\u9675\u9818\u529B\u7DD1\u502B\u5398\u6797\u6DCB\u71D0\u7433\u81E8\u8F2A\u96A3\u9C57\u9E9F\u7460\u5841\u6D99\u7D2F\u985E\u4EE4\u4F36\u4F8B\u51B7\u52B1\u5DBA\u601C\u73B2\u793C\u82D3\u9234\u96B7\u96F6\u970A\u9E97\u9F62\u66A6\u6B74\u5217\u52A3\u70C8\u88C2\u5EC9\u604B\u6190\u6F23\u7149\u7C3E\u7DF4\u806F',
      ],
      [
        '9840',
        '\u84EE\u9023\u932C\u5442\u9B6F\u6AD3\u7089\u8CC2\u8DEF\u9732\u52B4\u5A41\u5ECA\u5F04\u6717\u697C\u6994\u6D6A\u6F0F\u7262\u72FC\u7BED\u8001\u807E\u874B\u90CE\u516D\u9E93\u7984\u808B\u9332\u8AD6\u502D\u548C\u8A71\u6B6A\u8CC4\u8107\u60D1\u67A0\u9DF2\u4E99\u4E98\u9C10\u8A6B\u85C1\u8568\u6900\u6E7E\u7897\u8155',
      ],
      [
        '989f',
        '\u5F0C\u4E10\u4E15\u4E2A\u4E31\u4E36\u4E3C\u4E3F\u4E42\u4E56\u4E58\u4E82\u4E85\u8C6B\u4E8A\u8212\u5F0D\u4E8E\u4E9E\u4E9F\u4EA0\u4EA2\u4EB0\u4EB3\u4EB6\u4ECE\u4ECD\u4EC4\u4EC6\u4EC2\u4ED7\u4EDE\u4EED\u4EDF\u4EF7\u4F09\u4F5A\u4F30\u4F5B\u4F5D\u4F57\u4F47\u4F76\u4F88\u4F8F\u4F98\u4F7B\u4F69\u4F70\u4F91\u4F6F\u4F86\u4F96\u5118\u4FD4\u4FDF\u4FCE\u4FD8\u4FDB\u4FD1\u4FDA\u4FD0\u4FE4\u4FE5\u501A\u5028\u5014\u502A\u5025\u5005\u4F1C\u4FF6\u5021\u5029\u502C\u4FFE\u4FEF\u5011\u5006\u5043\u5047\u6703\u5055\u5050\u5048\u505A\u5056\u506C\u5078\u5080\u509A\u5085\u50B4\u50B2',
      ],
      [
        '9940',
        '\u50C9\u50CA\u50B3\u50C2\u50D6\u50DE\u50E5\u50ED\u50E3\u50EE\u50F9\u50F5\u5109\u5101\u5102\u5116\u5115\u5114\u511A\u5121\u513A\u5137\u513C\u513B\u513F\u5140\u5152\u514C\u5154\u5162\u7AF8\u5169\u516A\u516E\u5180\u5182\u56D8\u518C\u5189\u518F\u5191\u5193\u5195\u5196\u51A4\u51A6\u51A2\u51A9\u51AA\u51AB\u51B3\u51B1\u51B2\u51B0\u51B5\u51BD\u51C5\u51C9\u51DB\u51E0\u8655\u51E9\u51ED',
      ],
      [
        '9980',
        '\u51F0\u51F5\u51FE\u5204\u520B\u5214\u520E\u5227\u522A\u522E\u5233\u5239\u524F\u5244\u524B\u524C\u525E\u5254\u526A\u5274\u5269\u5273\u527F\u527D\u528D\u5294\u5292\u5271\u5288\u5291\u8FA8\u8FA7\u52AC\u52AD\u52BC\u52B5\u52C1\u52CD\u52D7\u52DE\u52E3\u52E6\u98ED\u52E0\u52F3\u52F5\u52F8\u52F9\u5306\u5308\u7538\u530D\u5310\u530F\u5315\u531A\u5323\u532F\u5331\u5333\u5338\u5340\u5346\u5345\u4E17\u5349\u534D\u51D6\u535E\u5369\u536E\u5918\u537B\u5377\u5382\u5396\u53A0\u53A6\u53A5\u53AE\u53B0\u53B6\u53C3\u7C12\u96D9\u53DF\u66FC\u71EE\u53EE\u53E8\u53ED\u53FA\u5401\u543D\u5440\u542C\u542D\u543C\u542E\u5436\u5429\u541D\u544E\u548F\u5475\u548E\u545F\u5471\u5477\u5470\u5492\u547B\u5480\u5476\u5484\u5490\u5486\u54C7\u54A2\u54B8\u54A5\u54AC\u54C4\u54C8\u54A8',
      ],
      [
        '9a40',
        '\u54AB\u54C2\u54A4\u54BE\u54BC\u54D8\u54E5\u54E6\u550F\u5514\u54FD\u54EE\u54ED\u54FA\u54E2\u5539\u5540\u5563\u554C\u552E\u555C\u5545\u5556\u5557\u5538\u5533\u555D\u5599\u5580\u54AF\u558A\u559F\u557B\u557E\u5598\u559E\u55AE\u557C\u5583\u55A9\u5587\u55A8\u55DA\u55C5\u55DF\u55C4\u55DC\u55E4\u55D4\u5614\u55F7\u5616\u55FE\u55FD\u561B\u55F9\u564E\u5650\u71DF\u5634\u5636\u5632\u5638',
      ],
      [
        '9a80',
        '\u566B\u5664\u562F\u566C\u566A\u5686\u5680\u568A\u56A0\u5694\u568F\u56A5\u56AE\u56B6\u56B4\u56C2\u56BC\u56C1\u56C3\u56C0\u56C8\u56CE\u56D1\u56D3\u56D7\u56EE\u56F9\u5700\u56FF\u5704\u5709\u5708\u570B\u570D\u5713\u5718\u5716\u55C7\u571C\u5726\u5737\u5738\u574E\u573B\u5740\u574F\u5769\u57C0\u5788\u5761\u577F\u5789\u5793\u57A0\u57B3\u57A4\u57AA\u57B0\u57C3\u57C6\u57D4\u57D2\u57D3\u580A\u57D6\u57E3\u580B\u5819\u581D\u5872\u5821\u5862\u584B\u5870\u6BC0\u5852\u583D\u5879\u5885\u58B9\u589F\u58AB\u58BA\u58DE\u58BB\u58B8\u58AE\u58C5\u58D3\u58D1\u58D7\u58D9\u58D8\u58E5\u58DC\u58E4\u58DF\u58EF\u58FA\u58F9\u58FB\u58FC\u58FD\u5902\u590A\u5910\u591B\u68A6\u5925\u592C\u592D\u5932\u5938\u593E\u7AD2\u5955\u5950\u594E\u595A\u5958\u5962\u5960\u5967\u596C\u5969',
      ],
      [
        '9b40',
        '\u5978\u5981\u599D\u4F5E\u4FAB\u59A3\u59B2\u59C6\u59E8\u59DC\u598D\u59D9\u59DA\u5A25\u5A1F\u5A11\u5A1C\u5A09\u5A1A\u5A40\u5A6C\u5A49\u5A35\u5A36\u5A62\u5A6A\u5A9A\u5ABC\u5ABE\u5ACB\u5AC2\u5ABD\u5AE3\u5AD7\u5AE6\u5AE9\u5AD6\u5AFA\u5AFB\u5B0C\u5B0B\u5B16\u5B32\u5AD0\u5B2A\u5B36\u5B3E\u5B43\u5B45\u5B40\u5B51\u5B55\u5B5A\u5B5B\u5B65\u5B69\u5B70\u5B73\u5B75\u5B78\u6588\u5B7A\u5B80',
      ],
      [
        '9b80',
        '\u5B83\u5BA6\u5BB8\u5BC3\u5BC7\u5BC9\u5BD4\u5BD0\u5BE4\u5BE6\u5BE2\u5BDE\u5BE5\u5BEB\u5BF0\u5BF6\u5BF3\u5C05\u5C07\u5C08\u5C0D\u5C13\u5C20\u5C22\u5C28\u5C38\u5C39\u5C41\u5C46\u5C4E\u5C53\u5C50\u5C4F\u5B71\u5C6C\u5C6E\u4E62\u5C76\u5C79\u5C8C\u5C91\u5C94\u599B\u5CAB\u5CBB\u5CB6\u5CBC\u5CB7\u5CC5\u5CBE\u5CC7\u5CD9\u5CE9\u5CFD\u5CFA\u5CED\u5D8C\u5CEA\u5D0B\u5D15\u5D17\u5D5C\u5D1F\u5D1B\u5D11\u5D14\u5D22\u5D1A\u5D19\u5D18\u5D4C\u5D52\u5D4E\u5D4B\u5D6C\u5D73\u5D76\u5D87\u5D84\u5D82\u5DA2\u5D9D\u5DAC\u5DAE\u5DBD\u5D90\u5DB7\u5DBC\u5DC9\u5DCD\u5DD3\u5DD2\u5DD6\u5DDB\u5DEB\u5DF2\u5DF5\u5E0B\u5E1A\u5E19\u5E11\u5E1B\u5E36\u5E37\u5E44\u5E43\u5E40\u5E4E\u5E57\u5E54\u5E5F\u5E62\u5E64\u5E47\u5E75\u5E76\u5E7A\u9EBC\u5E7F\u5EA0\u5EC1\u5EC2\u5EC8\u5ED0\u5ECF',
      ],
      [
        '9c40',
        '\u5ED6\u5EE3\u5EDD\u5EDA\u5EDB\u5EE2\u5EE1\u5EE8\u5EE9\u5EEC\u5EF1\u5EF3\u5EF0\u5EF4\u5EF8\u5EFE\u5F03\u5F09\u5F5D\u5F5C\u5F0B\u5F11\u5F16\u5F29\u5F2D\u5F38\u5F41\u5F48\u5F4C\u5F4E\u5F2F\u5F51\u5F56\u5F57\u5F59\u5F61\u5F6D\u5F73\u5F77\u5F83\u5F82\u5F7F\u5F8A\u5F88\u5F91\u5F87\u5F9E\u5F99\u5F98\u5FA0\u5FA8\u5FAD\u5FBC\u5FD6\u5FFB\u5FE4\u5FF8\u5FF1\u5FDD\u60B3\u5FFF\u6021\u6060',
      ],
      [
        '9c80',
        '\u6019\u6010\u6029\u600E\u6031\u601B\u6015\u602B\u6026\u600F\u603A\u605A\u6041\u606A\u6077\u605F\u604A\u6046\u604D\u6063\u6043\u6064\u6042\u606C\u606B\u6059\u6081\u608D\u60E7\u6083\u609A\u6084\u609B\u6096\u6097\u6092\u60A7\u608B\u60E1\u60B8\u60E0\u60D3\u60B4\u5FF0\u60BD\u60C6\u60B5\u60D8\u614D\u6115\u6106\u60F6\u60F7\u6100\u60F4\u60FA\u6103\u6121\u60FB\u60F1\u610D\u610E\u6147\u613E\u6128\u6127\u614A\u613F\u613C\u612C\u6134\u613D\u6142\u6144\u6173\u6177\u6158\u6159\u615A\u616B\u6174\u616F\u6165\u6171\u615F\u615D\u6153\u6175\u6199\u6196\u6187\u61AC\u6194\u619A\u618A\u6191\u61AB\u61AE\u61CC\u61CA\u61C9\u61F7\u61C8\u61C3\u61C6\u61BA\u61CB\u7F79\u61CD\u61E6\u61E3\u61F6\u61FA\u61F4\u61FF\u61FD\u61FC\u61FE\u6200\u6208\u6209\u620D\u620C\u6214\u621B',
      ],
      [
        '9d40',
        '\u621E\u6221\u622A\u622E\u6230\u6232\u6233\u6241\u624E\u625E\u6263\u625B\u6260\u6268\u627C\u6282\u6289\u627E\u6292\u6293\u6296\u62D4\u6283\u6294\u62D7\u62D1\u62BB\u62CF\u62FF\u62C6\u64D4\u62C8\u62DC\u62CC\u62CA\u62C2\u62C7\u629B\u62C9\u630C\u62EE\u62F1\u6327\u6302\u6308\u62EF\u62F5\u6350\u633E\u634D\u641C\u634F\u6396\u638E\u6380\u63AB\u6376\u63A3\u638F\u6389\u639F\u63B5\u636B',
      ],
      [
        '9d80',
        '\u6369\u63BE\u63E9\u63C0\u63C6\u63E3\u63C9\u63D2\u63F6\u63C4\u6416\u6434\u6406\u6413\u6426\u6436\u651D\u6417\u6428\u640F\u6467\u646F\u6476\u644E\u652A\u6495\u6493\u64A5\u64A9\u6488\u64BC\u64DA\u64D2\u64C5\u64C7\u64BB\u64D8\u64C2\u64F1\u64E7\u8209\u64E0\u64E1\u62AC\u64E3\u64EF\u652C\u64F6\u64F4\u64F2\u64FA\u6500\u64FD\u6518\u651C\u6505\u6524\u6523\u652B\u6534\u6535\u6537\u6536\u6538\u754B\u6548\u6556\u6555\u654D\u6558\u655E\u655D\u6572\u6578\u6582\u6583\u8B8A\u659B\u659F\u65AB\u65B7\u65C3\u65C6\u65C1\u65C4\u65CC\u65D2\u65DB\u65D9\u65E0\u65E1\u65F1\u6772\u660A\u6603\u65FB\u6773\u6635\u6636\u6634\u661C\u664F\u6644\u6649\u6641\u665E\u665D\u6664\u6667\u6668\u665F\u6662\u6670\u6683\u6688\u668E\u6689\u6684\u6698\u669D\u66C1\u66B9\u66C9\u66BE\u66BC',
      ],
      [
        '9e40',
        '\u66C4\u66B8\u66D6\u66DA\u66E0\u663F\u66E6\u66E9\u66F0\u66F5\u66F7\u670F\u6716\u671E\u6726\u6727\u9738\u672E\u673F\u6736\u6741\u6738\u6737\u6746\u675E\u6760\u6759\u6763\u6764\u6789\u6770\u67A9\u677C\u676A\u678C\u678B\u67A6\u67A1\u6785\u67B7\u67EF\u67B4\u67EC\u67B3\u67E9\u67B8\u67E4\u67DE\u67DD\u67E2\u67EE\u67B9\u67CE\u67C6\u67E7\u6A9C\u681E\u6846\u6829\u6840\u684D\u6832\u684E',
      ],
      [
        '9e80',
        '\u68B3\u682B\u6859\u6863\u6877\u687F\u689F\u688F\u68AD\u6894\u689D\u689B\u6883\u6AAE\u68B9\u6874\u68B5\u68A0\u68BA\u690F\u688D\u687E\u6901\u68CA\u6908\u68D8\u6922\u6926\u68E1\u690C\u68CD\u68D4\u68E7\u68D5\u6936\u6912\u6904\u68D7\u68E3\u6925\u68F9\u68E0\u68EF\u6928\u692A\u691A\u6923\u6921\u68C6\u6979\u6977\u695C\u6978\u696B\u6954\u697E\u696E\u6939\u6974\u693D\u6959\u6930\u6961\u695E\u695D\u6981\u696A\u69B2\u69AE\u69D0\u69BF\u69C1\u69D3\u69BE\u69CE\u5BE8\u69CA\u69DD\u69BB\u69C3\u69A7\u6A2E\u6991\u69A0\u699C\u6995\u69B4\u69DE\u69E8\u6A02\u6A1B\u69FF\u6B0A\u69F9\u69F2\u69E7\u6A05\u69B1\u6A1E\u69ED\u6A14\u69EB\u6A0A\u6A12\u6AC1\u6A23\u6A13\u6A44\u6A0C\u6A72\u6A36\u6A78\u6A47\u6A62\u6A59\u6A66\u6A48\u6A38\u6A22\u6A90\u6A8D\u6AA0\u6A84\u6AA2\u6AA3',
      ],
      [
        '9f40',
        '\u6A97\u8617\u6ABB\u6AC3\u6AC2\u6AB8\u6AB3\u6AAC\u6ADE\u6AD1\u6ADF\u6AAA\u6ADA\u6AEA\u6AFB\u6B05\u8616\u6AFA\u6B12\u6B16\u9B31\u6B1F\u6B38\u6B37\u76DC\u6B39\u98EE\u6B47\u6B43\u6B49\u6B50\u6B59\u6B54\u6B5B\u6B5F\u6B61\u6B78\u6B79\u6B7F\u6B80\u6B84\u6B83\u6B8D\u6B98\u6B95\u6B9E\u6BA4\u6BAA\u6BAB\u6BAF\u6BB2\u6BB1\u6BB3\u6BB7\u6BBC\u6BC6\u6BCB\u6BD3\u6BDF\u6BEC\u6BEB\u6BF3\u6BEF',
      ],
      [
        '9f80',
        '\u9EBE\u6C08\u6C13\u6C14\u6C1B\u6C24\u6C23\u6C5E\u6C55\u6C62\u6C6A\u6C82\u6C8D\u6C9A\u6C81\u6C9B\u6C7E\u6C68\u6C73\u6C92\u6C90\u6CC4\u6CF1\u6CD3\u6CBD\u6CD7\u6CC5\u6CDD\u6CAE\u6CB1\u6CBE\u6CBA\u6CDB\u6CEF\u6CD9\u6CEA\u6D1F\u884D\u6D36\u6D2B\u6D3D\u6D38\u6D19\u6D35\u6D33\u6D12\u6D0C\u6D63\u6D93\u6D64\u6D5A\u6D79\u6D59\u6D8E\u6D95\u6FE4\u6D85\u6DF9\u6E15\u6E0A\u6DB5\u6DC7\u6DE6\u6DB8\u6DC6\u6DEC\u6DDE\u6DCC\u6DE8\u6DD2\u6DC5\u6DFA\u6DD9\u6DE4\u6DD5\u6DEA\u6DEE\u6E2D\u6E6E\u6E2E\u6E19\u6E72\u6E5F\u6E3E\u6E23\u6E6B\u6E2B\u6E76\u6E4D\u6E1F\u6E43\u6E3A\u6E4E\u6E24\u6EFF\u6E1D\u6E38\u6E82\u6EAA\u6E98\u6EC9\u6EB7\u6ED3\u6EBD\u6EAF\u6EC4\u6EB2\u6ED4\u6ED5\u6E8F\u6EA5\u6EC2\u6E9F\u6F41\u6F11\u704C\u6EEC\u6EF8\u6EFE\u6F3F\u6EF2\u6F31\u6EEF\u6F32\u6ECC',
      ],
      [
        'e040',
        '\u6F3E\u6F13\u6EF7\u6F86\u6F7A\u6F78\u6F81\u6F80\u6F6F\u6F5B\u6FF3\u6F6D\u6F82\u6F7C\u6F58\u6F8E\u6F91\u6FC2\u6F66\u6FB3\u6FA3\u6FA1\u6FA4\u6FB9\u6FC6\u6FAA\u6FDF\u6FD5\u6FEC\u6FD4\u6FD8\u6FF1\u6FEE\u6FDB\u7009\u700B\u6FFA\u7011\u7001\u700F\u6FFE\u701B\u701A\u6F74\u701D\u7018\u701F\u7030\u703E\u7032\u7051\u7063\u7099\u7092\u70AF\u70F1\u70AC\u70B8\u70B3\u70AE\u70DF\u70CB\u70DD',
      ],
      [
        'e080',
        '\u70D9\u7109\u70FD\u711C\u7119\u7165\u7155\u7188\u7166\u7162\u714C\u7156\u716C\u718F\u71FB\u7184\u7195\u71A8\u71AC\u71D7\u71B9\u71BE\u71D2\u71C9\u71D4\u71CE\u71E0\u71EC\u71E7\u71F5\u71FC\u71F9\u71FF\u720D\u7210\u721B\u7228\u722D\u722C\u7230\u7232\u723B\u723C\u723F\u7240\u7246\u724B\u7258\u7274\u727E\u7282\u7281\u7287\u7292\u7296\u72A2\u72A7\u72B9\u72B2\u72C3\u72C6\u72C4\u72CE\u72D2\u72E2\u72E0\u72E1\u72F9\u72F7\u500F\u7317\u730A\u731C\u7316\u731D\u7334\u732F\u7329\u7325\u733E\u734E\u734F\u9ED8\u7357\u736A\u7368\u7370\u7378\u7375\u737B\u737A\u73C8\u73B3\u73CE\u73BB\u73C0\u73E5\u73EE\u73DE\u74A2\u7405\u746F\u7425\u73F8\u7432\u743A\u7455\u743F\u745F\u7459\u7441\u745C\u7469\u7470\u7463\u746A\u7476\u747E\u748B\u749E\u74A7\u74CA\u74CF\u74D4\u73F1',
      ],
      [
        'e140',
        '\u74E0\u74E3\u74E7\u74E9\u74EE\u74F2\u74F0\u74F1\u74F8\u74F7\u7504\u7503\u7505\u750C\u750E\u750D\u7515\u7513\u751E\u7526\u752C\u753C\u7544\u754D\u754A\u7549\u755B\u7546\u755A\u7569\u7564\u7567\u756B\u756D\u7578\u7576\u7586\u7587\u7574\u758A\u7589\u7582\u7594\u759A\u759D\u75A5\u75A3\u75C2\u75B3\u75C3\u75B5\u75BD\u75B8\u75BC\u75B1\u75CD\u75CA\u75D2\u75D9\u75E3\u75DE\u75FE\u75FF',
      ],
      [
        'e180',
        '\u75FC\u7601\u75F0\u75FA\u75F2\u75F3\u760B\u760D\u7609\u761F\u7627\u7620\u7621\u7622\u7624\u7634\u7630\u763B\u7647\u7648\u7646\u765C\u7658\u7661\u7662\u7668\u7669\u766A\u7667\u766C\u7670\u7672\u7676\u7678\u767C\u7680\u7683\u7688\u768B\u768E\u7696\u7693\u7699\u769A\u76B0\u76B4\u76B8\u76B9\u76BA\u76C2\u76CD\u76D6\u76D2\u76DE\u76E1\u76E5\u76E7\u76EA\u862F\u76FB\u7708\u7707\u7704\u7729\u7724\u771E\u7725\u7726\u771B\u7737\u7738\u7747\u775A\u7768\u776B\u775B\u7765\u777F\u777E\u7779\u778E\u778B\u7791\u77A0\u779E\u77B0\u77B6\u77B9\u77BF\u77BC\u77BD\u77BB\u77C7\u77CD\u77D7\u77DA\u77DC\u77E3\u77EE\u77FC\u780C\u7812\u7926\u7820\u792A\u7845\u788E\u7874\u7886\u787C\u789A\u788C\u78A3\u78B5\u78AA\u78AF\u78D1\u78C6\u78CB\u78D4\u78BE\u78BC\u78C5\u78CA\u78EC',
      ],
      [
        'e240',
        '\u78E7\u78DA\u78FD\u78F4\u7907\u7912\u7911\u7919\u792C\u792B\u7940\u7960\u7957\u795F\u795A\u7955\u7953\u797A\u797F\u798A\u799D\u79A7\u9F4B\u79AA\u79AE\u79B3\u79B9\u79BA\u79C9\u79D5\u79E7\u79EC\u79E1\u79E3\u7A08\u7A0D\u7A18\u7A19\u7A20\u7A1F\u7980\u7A31\u7A3B\u7A3E\u7A37\u7A43\u7A57\u7A49\u7A61\u7A62\u7A69\u9F9D\u7A70\u7A79\u7A7D\u7A88\u7A97\u7A95\u7A98\u7A96\u7AA9\u7AC8\u7AB0',
      ],
      [
        'e280',
        '\u7AB6\u7AC5\u7AC4\u7ABF\u9083\u7AC7\u7ACA\u7ACD\u7ACF\u7AD5\u7AD3\u7AD9\u7ADA\u7ADD\u7AE1\u7AE2\u7AE6\u7AED\u7AF0\u7B02\u7B0F\u7B0A\u7B06\u7B33\u7B18\u7B19\u7B1E\u7B35\u7B28\u7B36\u7B50\u7B7A\u7B04\u7B4D\u7B0B\u7B4C\u7B45\u7B75\u7B65\u7B74\u7B67\u7B70\u7B71\u7B6C\u7B6E\u7B9D\u7B98\u7B9F\u7B8D\u7B9C\u7B9A\u7B8B\u7B92\u7B8F\u7B5D\u7B99\u7BCB\u7BC1\u7BCC\u7BCF\u7BB4\u7BC6\u7BDD\u7BE9\u7C11\u7C14\u7BE6\u7BE5\u7C60\u7C00\u7C07\u7C13\u7BF3\u7BF7\u7C17\u7C0D\u7BF6\u7C23\u7C27\u7C2A\u7C1F\u7C37\u7C2B\u7C3D\u7C4C\u7C43\u7C54\u7C4F\u7C40\u7C50\u7C58\u7C5F\u7C64\u7C56\u7C65\u7C6C\u7C75\u7C83\u7C90\u7CA4\u7CAD\u7CA2\u7CAB\u7CA1\u7CA8\u7CB3\u7CB2\u7CB1\u7CAE\u7CB9\u7CBD\u7CC0\u7CC5\u7CC2\u7CD8\u7CD2\u7CDC\u7CE2\u9B3B\u7CEF\u7CF2\u7CF4\u7CF6\u7CFA\u7D06',
      ],
      [
        'e340',
        '\u7D02\u7D1C\u7D15\u7D0A\u7D45\u7D4B\u7D2E\u7D32\u7D3F\u7D35\u7D46\u7D73\u7D56\u7D4E\u7D72\u7D68\u7D6E\u7D4F\u7D63\u7D93\u7D89\u7D5B\u7D8F\u7D7D\u7D9B\u7DBA\u7DAE\u7DA3\u7DB5\u7DC7\u7DBD\u7DAB\u7E3D\u7DA2\u7DAF\u7DDC\u7DB8\u7D9F\u7DB0\u7DD8\u7DDD\u7DE4\u7DDE\u7DFB\u7DF2\u7DE1\u7E05\u7E0A\u7E23\u7E21\u7E12\u7E31\u7E1F\u7E09\u7E0B\u7E22\u7E46\u7E66\u7E3B\u7E35\u7E39\u7E43\u7E37',
      ],
      [
        'e380',
        '\u7E32\u7E3A\u7E67\u7E5D\u7E56\u7E5E\u7E59\u7E5A\u7E79\u7E6A\u7E69\u7E7C\u7E7B\u7E83\u7DD5\u7E7D\u8FAE\u7E7F\u7E88\u7E89\u7E8C\u7E92\u7E90\u7E93\u7E94\u7E96\u7E8E\u7E9B\u7E9C\u7F38\u7F3A\u7F45\u7F4C\u7F4D\u7F4E\u7F50\u7F51\u7F55\u7F54\u7F58\u7F5F\u7F60\u7F68\u7F69\u7F67\u7F78\u7F82\u7F86\u7F83\u7F88\u7F87\u7F8C\u7F94\u7F9E\u7F9D\u7F9A\u7FA3\u7FAF\u7FB2\u7FB9\u7FAE\u7FB6\u7FB8\u8B71\u7FC5\u7FC6\u7FCA\u7FD5\u7FD4\u7FE1\u7FE6\u7FE9\u7FF3\u7FF9\u98DC\u8006\u8004\u800B\u8012\u8018\u8019\u801C\u8021\u8028\u803F\u803B\u804A\u8046\u8052\u8058\u805A\u805F\u8062\u8068\u8073\u8072\u8070\u8076\u8079\u807D\u807F\u8084\u8086\u8085\u809B\u8093\u809A\u80AD\u5190\u80AC\u80DB\u80E5\u80D9\u80DD\u80C4\u80DA\u80D6\u8109\u80EF\u80F1\u811B\u8129\u8123\u812F\u814B',
      ],
      [
        'e440',
        '\u968B\u8146\u813E\u8153\u8151\u80FC\u8171\u816E\u8165\u8166\u8174\u8183\u8188\u818A\u8180\u8182\u81A0\u8195\u81A4\u81A3\u815F\u8193\u81A9\u81B0\u81B5\u81BE\u81B8\u81BD\u81C0\u81C2\u81BA\u81C9\u81CD\u81D1\u81D9\u81D8\u81C8\u81DA\u81DF\u81E0\u81E7\u81FA\u81FB\u81FE\u8201\u8202\u8205\u8207\u820A\u820D\u8210\u8216\u8229\u822B\u8238\u8233\u8240\u8259\u8258\u825D\u825A\u825F\u8264',
      ],
      [
        'e480',
        '\u8262\u8268\u826A\u826B\u822E\u8271\u8277\u8278\u827E\u828D\u8292\u82AB\u829F\u82BB\u82AC\u82E1\u82E3\u82DF\u82D2\u82F4\u82F3\u82FA\u8393\u8303\u82FB\u82F9\u82DE\u8306\u82DC\u8309\u82D9\u8335\u8334\u8316\u8332\u8331\u8340\u8339\u8350\u8345\u832F\u832B\u8317\u8318\u8385\u839A\u83AA\u839F\u83A2\u8396\u8323\u838E\u8387\u838A\u837C\u83B5\u8373\u8375\u83A0\u8389\u83A8\u83F4\u8413\u83EB\u83CE\u83FD\u8403\u83D8\u840B\u83C1\u83F7\u8407\u83E0\u83F2\u840D\u8422\u8420\u83BD\u8438\u8506\u83FB\u846D\u842A\u843C\u855A\u8484\u8477\u846B\u84AD\u846E\u8482\u8469\u8446\u842C\u846F\u8479\u8435\u84CA\u8462\u84B9\u84BF\u849F\u84D9\u84CD\u84BB\u84DA\u84D0\u84C1\u84C6\u84D6\u84A1\u8521\u84FF\u84F4\u8517\u8518\u852C\u851F\u8515\u8514\u84FC\u8540\u8563\u8558\u8548',
      ],
      [
        'e540',
        '\u8541\u8602\u854B\u8555\u8580\u85A4\u8588\u8591\u858A\u85A8\u856D\u8594\u859B\u85EA\u8587\u859C\u8577\u857E\u8590\u85C9\u85BA\u85CF\u85B9\u85D0\u85D5\u85DD\u85E5\u85DC\u85F9\u860A\u8613\u860B\u85FE\u85FA\u8606\u8622\u861A\u8630\u863F\u864D\u4E55\u8654\u865F\u8667\u8671\u8693\u86A3\u86A9\u86AA\u868B\u868C\u86B6\u86AF\u86C4\u86C6\u86B0\u86C9\u8823\u86AB\u86D4\u86DE\u86E9\u86EC',
      ],
      [
        'e580',
        '\u86DF\u86DB\u86EF\u8712\u8706\u8708\u8700\u8703\u86FB\u8711\u8709\u870D\u86F9\u870A\u8734\u873F\u8737\u873B\u8725\u8729\u871A\u8760\u875F\u8778\u874C\u874E\u8774\u8757\u8768\u876E\u8759\u8753\u8763\u876A\u8805\u87A2\u879F\u8782\u87AF\u87CB\u87BD\u87C0\u87D0\u96D6\u87AB\u87C4\u87B3\u87C7\u87C6\u87BB\u87EF\u87F2\u87E0\u880F\u880D\u87FE\u87F6\u87F7\u880E\u87D2\u8811\u8816\u8815\u8822\u8821\u8831\u8836\u8839\u8827\u883B\u8844\u8842\u8852\u8859\u885E\u8862\u886B\u8881\u887E\u889E\u8875\u887D\u88B5\u8872\u8882\u8897\u8892\u88AE\u8899\u88A2\u888D\u88A4\u88B0\u88BF\u88B1\u88C3\u88C4\u88D4\u88D8\u88D9\u88DD\u88F9\u8902\u88FC\u88F4\u88E8\u88F2\u8904\u890C\u890A\u8913\u8943\u891E\u8925\u892A\u892B\u8941\u8944\u893B\u8936\u8938\u894C\u891D\u8960\u895E',
      ],
      [
        'e640',
        '\u8966\u8964\u896D\u896A\u896F\u8974\u8977\u897E\u8983\u8988\u898A\u8993\u8998\u89A1\u89A9\u89A6\u89AC\u89AF\u89B2\u89BA\u89BD\u89BF\u89C0\u89DA\u89DC\u89DD\u89E7\u89F4\u89F8\u8A03\u8A16\u8A10\u8A0C\u8A1B\u8A1D\u8A25\u8A36\u8A41\u8A5B\u8A52\u8A46\u8A48\u8A7C\u8A6D\u8A6C\u8A62\u8A85\u8A82\u8A84\u8AA8\u8AA1\u8A91\u8AA5\u8AA6\u8A9A\u8AA3\u8AC4\u8ACD\u8AC2\u8ADA\u8AEB\u8AF3\u8AE7',
      ],
      [
        'e680',
        '\u8AE4\u8AF1\u8B14\u8AE0\u8AE2\u8AF7\u8ADE\u8ADB\u8B0C\u8B07\u8B1A\u8AE1\u8B16\u8B10\u8B17\u8B20\u8B33\u97AB\u8B26\u8B2B\u8B3E\u8B28\u8B41\u8B4C\u8B4F\u8B4E\u8B49\u8B56\u8B5B\u8B5A\u8B6B\u8B5F\u8B6C\u8B6F\u8B74\u8B7D\u8B80\u8B8C\u8B8E\u8B92\u8B93\u8B96\u8B99\u8B9A\u8C3A\u8C41\u8C3F\u8C48\u8C4C\u8C4E\u8C50\u8C55\u8C62\u8C6C\u8C78\u8C7A\u8C82\u8C89\u8C85\u8C8A\u8C8D\u8C8E\u8C94\u8C7C\u8C98\u621D\u8CAD\u8CAA\u8CBD\u8CB2\u8CB3\u8CAE\u8CB6\u8CC8\u8CC1\u8CE4\u8CE3\u8CDA\u8CFD\u8CFA\u8CFB\u8D04\u8D05\u8D0A\u8D07\u8D0F\u8D0D\u8D10\u9F4E\u8D13\u8CCD\u8D14\u8D16\u8D67\u8D6D\u8D71\u8D73\u8D81\u8D99\u8DC2\u8DBE\u8DBA\u8DCF\u8DDA\u8DD6\u8DCC\u8DDB\u8DCB\u8DEA\u8DEB\u8DDF\u8DE3\u8DFC\u8E08\u8E09\u8DFF\u8E1D\u8E1E\u8E10\u8E1F\u8E42\u8E35\u8E30\u8E34\u8E4A',
      ],
      [
        'e740',
        '\u8E47\u8E49\u8E4C\u8E50\u8E48\u8E59\u8E64\u8E60\u8E2A\u8E63\u8E55\u8E76\u8E72\u8E7C\u8E81\u8E87\u8E85\u8E84\u8E8B\u8E8A\u8E93\u8E91\u8E94\u8E99\u8EAA\u8EA1\u8EAC\u8EB0\u8EC6\u8EB1\u8EBE\u8EC5\u8EC8\u8ECB\u8EDB\u8EE3\u8EFC\u8EFB\u8EEB\u8EFE\u8F0A\u8F05\u8F15\u8F12\u8F19\u8F13\u8F1C\u8F1F\u8F1B\u8F0C\u8F26\u8F33\u8F3B\u8F39\u8F45\u8F42\u8F3E\u8F4C\u8F49\u8F46\u8F4E\u8F57\u8F5C',
      ],
      [
        'e780',
        '\u8F62\u8F63\u8F64\u8F9C\u8F9F\u8FA3\u8FAD\u8FAF\u8FB7\u8FDA\u8FE5\u8FE2\u8FEA\u8FEF\u9087\u8FF4\u9005\u8FF9\u8FFA\u9011\u9015\u9021\u900D\u901E\u9016\u900B\u9027\u9036\u9035\u9039\u8FF8\u904F\u9050\u9051\u9052\u900E\u9049\u903E\u9056\u9058\u905E\u9068\u906F\u9076\u96A8\u9072\u9082\u907D\u9081\u9080\u908A\u9089\u908F\u90A8\u90AF\u90B1\u90B5\u90E2\u90E4\u6248\u90DB\u9102\u9112\u9119\u9132\u9130\u914A\u9156\u9158\u9163\u9165\u9169\u9173\u9172\u918B\u9189\u9182\u91A2\u91AB\u91AF\u91AA\u91B5\u91B4\u91BA\u91C0\u91C1\u91C9\u91CB\u91D0\u91D6\u91DF\u91E1\u91DB\u91FC\u91F5\u91F6\u921E\u91FF\u9214\u922C\u9215\u9211\u925E\u9257\u9245\u9249\u9264\u9248\u9295\u923F\u924B\u9250\u929C\u9296\u9293\u929B\u925A\u92CF\u92B9\u92B7\u92E9\u930F\u92FA\u9344\u932E',
      ],
      [
        'e840',
        '\u9319\u9322\u931A\u9323\u933A\u9335\u933B\u935C\u9360\u937C\u936E\u9356\u93B0\u93AC\u93AD\u9394\u93B9\u93D6\u93D7\u93E8\u93E5\u93D8\u93C3\u93DD\u93D0\u93C8\u93E4\u941A\u9414\u9413\u9403\u9407\u9410\u9436\u942B\u9435\u9421\u943A\u9441\u9452\u9444\u945B\u9460\u9462\u945E\u946A\u9229\u9470\u9475\u9477\u947D\u945A\u947C\u947E\u9481\u947F\u9582\u9587\u958A\u9594\u9596\u9598\u9599',
      ],
      [
        'e880',
        '\u95A0\u95A8\u95A7\u95AD\u95BC\u95BB\u95B9\u95BE\u95CA\u6FF6\u95C3\u95CD\u95CC\u95D5\u95D4\u95D6\u95DC\u95E1\u95E5\u95E2\u9621\u9628\u962E\u962F\u9642\u964C\u964F\u964B\u9677\u965C\u965E\u965D\u965F\u9666\u9672\u966C\u968D\u9698\u9695\u9697\u96AA\u96A7\u96B1\u96B2\u96B0\u96B4\u96B6\u96B8\u96B9\u96CE\u96CB\u96C9\u96CD\u894D\u96DC\u970D\u96D5\u96F9\u9704\u9706\u9708\u9713\u970E\u9711\u970F\u9716\u9719\u9724\u972A\u9730\u9739\u973D\u973E\u9744\u9746\u9748\u9742\u9749\u975C\u9760\u9764\u9766\u9768\u52D2\u976B\u9771\u9779\u9785\u977C\u9781\u977A\u9786\u978B\u978F\u9790\u979C\u97A8\u97A6\u97A3\u97B3\u97B4\u97C3\u97C6\u97C8\u97CB\u97DC\u97ED\u9F4F\u97F2\u7ADF\u97F6\u97F5\u980F\u980C\u9838\u9824\u9821\u9837\u983D\u9846\u984F\u984B\u986B\u986F\u9870',
      ],
      [
        'e940',
        '\u9871\u9874\u9873\u98AA\u98AF\u98B1\u98B6\u98C4\u98C3\u98C6\u98E9\u98EB\u9903\u9909\u9912\u9914\u9918\u9921\u991D\u991E\u9924\u9920\u992C\u992E\u993D\u993E\u9942\u9949\u9945\u9950\u994B\u9951\u9952\u994C\u9955\u9997\u9998\u99A5\u99AD\u99AE\u99BC\u99DF\u99DB\u99DD\u99D8\u99D1\u99ED\u99EE\u99F1\u99F2\u99FB\u99F8\u9A01\u9A0F\u9A05\u99E2\u9A19\u9A2B\u9A37\u9A45\u9A42\u9A40\u9A43',
      ],
      [
        'e980',
        '\u9A3E\u9A55\u9A4D\u9A5B\u9A57\u9A5F\u9A62\u9A65\u9A64\u9A69\u9A6B\u9A6A\u9AAD\u9AB0\u9ABC\u9AC0\u9ACF\u9AD1\u9AD3\u9AD4\u9ADE\u9ADF\u9AE2\u9AE3\u9AE6\u9AEF\u9AEB\u9AEE\u9AF4\u9AF1\u9AF7\u9AFB\u9B06\u9B18\u9B1A\u9B1F\u9B22\u9B23\u9B25\u9B27\u9B28\u9B29\u9B2A\u9B2E\u9B2F\u9B32\u9B44\u9B43\u9B4F\u9B4D\u9B4E\u9B51\u9B58\u9B74\u9B93\u9B83\u9B91\u9B96\u9B97\u9B9F\u9BA0\u9BA8\u9BB4\u9BC0\u9BCA\u9BB9\u9BC6\u9BCF\u9BD1\u9BD2\u9BE3\u9BE2\u9BE4\u9BD4\u9BE1\u9C3A\u9BF2\u9BF1\u9BF0\u9C15\u9C14\u9C09\u9C13\u9C0C\u9C06\u9C08\u9C12\u9C0A\u9C04\u9C2E\u9C1B\u9C25\u9C24\u9C21\u9C30\u9C47\u9C32\u9C46\u9C3E\u9C5A\u9C60\u9C67\u9C76\u9C78\u9CE7\u9CEC\u9CF0\u9D09\u9D08\u9CEB\u9D03\u9D06\u9D2A\u9D26\u9DAF\u9D23\u9D1F\u9D44\u9D15\u9D12\u9D41\u9D3F\u9D3E\u9D46\u9D48',
      ],
      [
        'ea40',
        '\u9D5D\u9D5E\u9D64\u9D51\u9D50\u9D59\u9D72\u9D89\u9D87\u9DAB\u9D6F\u9D7A\u9D9A\u9DA4\u9DA9\u9DB2\u9DC4\u9DC1\u9DBB\u9DB8\u9DBA\u9DC6\u9DCF\u9DC2\u9DD9\u9DD3\u9DF8\u9DE6\u9DED\u9DEF\u9DFD\u9E1A\u9E1B\u9E1E\u9E75\u9E79\u9E7D\u9E81\u9E88\u9E8B\u9E8C\u9E92\u9E95\u9E91\u9E9D\u9EA5\u9EA9\u9EB8\u9EAA\u9EAD\u9761\u9ECC\u9ECE\u9ECF\u9ED0\u9ED4\u9EDC\u9EDE\u9EDD\u9EE0\u9EE5\u9EE8\u9EEF',
      ],
      [
        'ea80',
        '\u9EF4\u9EF6\u9EF7\u9EF9\u9EFB\u9EFC\u9EFD\u9F07\u9F08\u76B7\u9F15\u9F21\u9F2C\u9F3E\u9F4A\u9F52\u9F54\u9F63\u9F5F\u9F60\u9F61\u9F66\u9F67\u9F6C\u9F6A\u9F77\u9F72\u9F76\u9F95\u9F9C\u9FA0\u582F\u69C7\u9059\u7464\u51DC\u7199',
      ],
      [
        'ed40',
        '\u7E8A\u891C\u9348\u9288\u84DC\u4FC9\u70BB\u6631\u68C8\u92F9\u66FB\u5F45\u4E28\u4EE1\u4EFC\u4F00\u4F03\u4F39\u4F56\u4F92\u4F8A\u4F9A\u4F94\u4FCD\u5040\u5022\u4FFF\u501E\u5046\u5070\u5042\u5094\u50F4\u50D8\u514A\u5164\u519D\u51BE\u51EC\u5215\u529C\u52A6\u52C0\u52DB\u5300\u5307\u5324\u5372\u5393\u53B2\u53DD\uFA0E\u549C\u548A\u54A9\u54FF\u5586\u5759\u5765\u57AC\u57C8\u57C7\uFA0F',
      ],
      [
        'ed80',
        '\uFA10\u589E\u58B2\u590B\u5953\u595B\u595D\u5963\u59A4\u59BA\u5B56\u5BC0\u752F\u5BD8\u5BEC\u5C1E\u5CA6\u5CBA\u5CF5\u5D27\u5D53\uFA11\u5D42\u5D6D\u5DB8\u5DB9\u5DD0\u5F21\u5F34\u5F67\u5FB7\u5FDE\u605D\u6085\u608A\u60DE\u60D5\u6120\u60F2\u6111\u6137\u6130\u6198\u6213\u62A6\u63F5\u6460\u649D\u64CE\u654E\u6600\u6615\u663B\u6609\u662E\u661E\u6624\u6665\u6657\u6659\uFA12\u6673\u6699\u66A0\u66B2\u66BF\u66FA\u670E\uF929\u6766\u67BB\u6852\u67C0\u6801\u6844\u68CF\uFA13\u6968\uFA14\u6998\u69E2\u6A30\u6A6B\u6A46\u6A73\u6A7E\u6AE2\u6AE4\u6BD6\u6C3F\u6C5C\u6C86\u6C6F\u6CDA\u6D04\u6D87\u6D6F\u6D96\u6DAC\u6DCF\u6DF8\u6DF2\u6DFC\u6E39\u6E5C\u6E27\u6E3C\u6EBF\u6F88\u6FB5\u6FF5\u7005\u7007\u7028\u7085\u70AB\u710F\u7104\u715C\u7146\u7147\uFA15\u71C1\u71FE\u72B1',
      ],
      [
        'ee40',
        '\u72BE\u7324\uFA16\u7377\u73BD\u73C9\u73D6\u73E3\u73D2\u7407\u73F5\u7426\u742A\u7429\u742E\u7462\u7489\u749F\u7501\u756F\u7682\u769C\u769E\u769B\u76A6\uFA17\u7746\u52AF\u7821\u784E\u7864\u787A\u7930\uFA18\uFA19\uFA1A\u7994\uFA1B\u799B\u7AD1\u7AE7\uFA1C\u7AEB\u7B9E\uFA1D\u7D48\u7D5C\u7DB7\u7DA0\u7DD6\u7E52\u7F47\u7FA1\uFA1E\u8301\u8362\u837F\u83C7\u83F6\u8448\u84B4\u8553\u8559',
      ],
      [
        'ee80',
        '\u856B\uFA1F\u85B0\uFA20\uFA21\u8807\u88F5\u8A12\u8A37\u8A79\u8AA7\u8ABE\u8ADF\uFA22\u8AF6\u8B53\u8B7F\u8CF0\u8CF4\u8D12\u8D76\uFA23\u8ECF\uFA24\uFA25\u9067\u90DE\uFA26\u9115\u9127\u91DA\u91D7\u91DE\u91ED\u91EE\u91E4\u91E5\u9206\u9210\u920A\u923A\u9240\u923C\u924E\u9259\u9251\u9239\u9267\u92A7\u9277\u9278\u92E7\u92D7\u92D9\u92D0\uFA27\u92D5\u92E0\u92D3\u9325\u9321\u92FB\uFA28\u931E\u92FF\u931D\u9302\u9370\u9357\u93A4\u93C6\u93DE\u93F8\u9431\u9445\u9448\u9592\uF9DC\uFA29\u969D\u96AF\u9733\u973B\u9743\u974D\u974F\u9751\u9755\u9857\u9865\uFA2A\uFA2B\u9927\uFA2C\u999E\u9A4E\u9AD9\u9ADC\u9B75\u9B72\u9B8F\u9BB1\u9BBB\u9C00\u9D70\u9D6B\uFA2D\u9E19\u9ED1',
      ],
      ['eeef', '\u2170', 9, '\uFFE2\uFFE4\uFF07\uFF02'],
      ['f040', '\uE000', 62],
      ['f080', '\uE03F', 124],
      ['f140', '\uE0BC', 62],
      ['f180', '\uE0FB', 124],
      ['f240', '\uE178', 62],
      ['f280', '\uE1B7', 124],
      ['f340', '\uE234', 62],
      ['f380', '\uE273', 124],
      ['f440', '\uE2F0', 62],
      ['f480', '\uE32F', 124],
      ['f540', '\uE3AC', 62],
      ['f580', '\uE3EB', 124],
      ['f640', '\uE468', 62],
      ['f680', '\uE4A7', 124],
      ['f740', '\uE524', 62],
      ['f780', '\uE563', 124],
      ['f840', '\uE5E0', 62],
      ['f880', '\uE61F', 124],
      ['f940', '\uE69C'],
      [
        'fa40',
        '\u2170',
        9,
        '\u2160',
        9,
        '\uFFE2\uFFE4\uFF07\uFF02\u3231\u2116\u2121\u2235\u7E8A\u891C\u9348\u9288\u84DC\u4FC9\u70BB\u6631\u68C8\u92F9\u66FB\u5F45\u4E28\u4EE1\u4EFC\u4F00\u4F03\u4F39\u4F56\u4F92\u4F8A\u4F9A\u4F94\u4FCD\u5040\u5022\u4FFF\u501E\u5046\u5070\u5042\u5094\u50F4\u50D8\u514A',
      ],
      [
        'fa80',
        '\u5164\u519D\u51BE\u51EC\u5215\u529C\u52A6\u52C0\u52DB\u5300\u5307\u5324\u5372\u5393\u53B2\u53DD\uFA0E\u549C\u548A\u54A9\u54FF\u5586\u5759\u5765\u57AC\u57C8\u57C7\uFA0F\uFA10\u589E\u58B2\u590B\u5953\u595B\u595D\u5963\u59A4\u59BA\u5B56\u5BC0\u752F\u5BD8\u5BEC\u5C1E\u5CA6\u5CBA\u5CF5\u5D27\u5D53\uFA11\u5D42\u5D6D\u5DB8\u5DB9\u5DD0\u5F21\u5F34\u5F67\u5FB7\u5FDE\u605D\u6085\u608A\u60DE\u60D5\u6120\u60F2\u6111\u6137\u6130\u6198\u6213\u62A6\u63F5\u6460\u649D\u64CE\u654E\u6600\u6615\u663B\u6609\u662E\u661E\u6624\u6665\u6657\u6659\uFA12\u6673\u6699\u66A0\u66B2\u66BF\u66FA\u670E\uF929\u6766\u67BB\u6852\u67C0\u6801\u6844\u68CF\uFA13\u6968\uFA14\u6998\u69E2\u6A30\u6A6B\u6A46\u6A73\u6A7E\u6AE2\u6AE4\u6BD6\u6C3F\u6C5C\u6C86\u6C6F\u6CDA\u6D04\u6D87\u6D6F',
      ],
      [
        'fb40',
        '\u6D96\u6DAC\u6DCF\u6DF8\u6DF2\u6DFC\u6E39\u6E5C\u6E27\u6E3C\u6EBF\u6F88\u6FB5\u6FF5\u7005\u7007\u7028\u7085\u70AB\u710F\u7104\u715C\u7146\u7147\uFA15\u71C1\u71FE\u72B1\u72BE\u7324\uFA16\u7377\u73BD\u73C9\u73D6\u73E3\u73D2\u7407\u73F5\u7426\u742A\u7429\u742E\u7462\u7489\u749F\u7501\u756F\u7682\u769C\u769E\u769B\u76A6\uFA17\u7746\u52AF\u7821\u784E\u7864\u787A\u7930\uFA18\uFA19',
      ],
      [
        'fb80',
        '\uFA1A\u7994\uFA1B\u799B\u7AD1\u7AE7\uFA1C\u7AEB\u7B9E\uFA1D\u7D48\u7D5C\u7DB7\u7DA0\u7DD6\u7E52\u7F47\u7FA1\uFA1E\u8301\u8362\u837F\u83C7\u83F6\u8448\u84B4\u8553\u8559\u856B\uFA1F\u85B0\uFA20\uFA21\u8807\u88F5\u8A12\u8A37\u8A79\u8AA7\u8ABE\u8ADF\uFA22\u8AF6\u8B53\u8B7F\u8CF0\u8CF4\u8D12\u8D76\uFA23\u8ECF\uFA24\uFA25\u9067\u90DE\uFA26\u9115\u9127\u91DA\u91D7\u91DE\u91ED\u91EE\u91E4\u91E5\u9206\u9210\u920A\u923A\u9240\u923C\u924E\u9259\u9251\u9239\u9267\u92A7\u9277\u9278\u92E7\u92D7\u92D9\u92D0\uFA27\u92D5\u92E0\u92D3\u9325\u9321\u92FB\uFA28\u931E\u92FF\u931D\u9302\u9370\u9357\u93A4\u93C6\u93DE\u93F8\u9431\u9445\u9448\u9592\uF9DC\uFA29\u969D\u96AF\u9733\u973B\u9743\u974D\u974F\u9751\u9755\u9857\u9865\uFA2A\uFA2B\u9927\uFA2C\u999E\u9A4E\u9AD9',
      ],
      [
        'fc40',
        '\u9ADC\u9B75\u9B72\u9B8F\u9BB1\u9BBB\u9C00\u9D70\u9D6B\uFA2D\u9E19\u9ED1',
      ],
    ];
  },
});

// ../../node_modules/iconv-lite/encodings/tables/eucjp.json
var require_eucjp = __commonJS({
  '../../node_modules/iconv-lite/encodings/tables/eucjp.json'(
    exports2,
    module2
  ) {
    module2.exports = [
      ['0', '\0', 127],
      ['8ea1', '\uFF61', 62],
      [
        'a1a1',
        '\u3000\u3001\u3002\uFF0C\uFF0E\u30FB\uFF1A\uFF1B\uFF1F\uFF01\u309B\u309C\xB4\uFF40\xA8\uFF3E\uFFE3\uFF3F\u30FD\u30FE\u309D\u309E\u3003\u4EDD\u3005\u3006\u3007\u30FC\u2015\u2010\uFF0F\uFF3C\uFF5E\u2225\uFF5C\u2026\u2025\u2018\u2019\u201C\u201D\uFF08\uFF09\u3014\u3015\uFF3B\uFF3D\uFF5B\uFF5D\u3008',
        9,
        '\uFF0B\uFF0D\xB1\xD7\xF7\uFF1D\u2260\uFF1C\uFF1E\u2266\u2267\u221E\u2234\u2642\u2640\xB0\u2032\u2033\u2103\uFFE5\uFF04\uFFE0\uFFE1\uFF05\uFF03\uFF06\uFF0A\uFF20\xA7\u2606\u2605\u25CB\u25CF\u25CE\u25C7',
      ],
      [
        'a2a1',
        '\u25C6\u25A1\u25A0\u25B3\u25B2\u25BD\u25BC\u203B\u3012\u2192\u2190\u2191\u2193\u3013',
      ],
      ['a2ba', '\u2208\u220B\u2286\u2287\u2282\u2283\u222A\u2229'],
      ['a2ca', '\u2227\u2228\uFFE2\u21D2\u21D4\u2200\u2203'],
      [
        'a2dc',
        '\u2220\u22A5\u2312\u2202\u2207\u2261\u2252\u226A\u226B\u221A\u223D\u221D\u2235\u222B\u222C',
      ],
      ['a2f2', '\u212B\u2030\u266F\u266D\u266A\u2020\u2021\xB6'],
      ['a2fe', '\u25EF'],
      ['a3b0', '\uFF10', 9],
      ['a3c1', '\uFF21', 25],
      ['a3e1', '\uFF41', 25],
      ['a4a1', '\u3041', 82],
      ['a5a1', '\u30A1', 85],
      ['a6a1', '\u0391', 16, '\u03A3', 6],
      ['a6c1', '\u03B1', 16, '\u03C3', 6],
      ['a7a1', '\u0410', 5, '\u0401\u0416', 25],
      ['a7d1', '\u0430', 5, '\u0451\u0436', 25],
      [
        'a8a1',
        '\u2500\u2502\u250C\u2510\u2518\u2514\u251C\u252C\u2524\u2534\u253C\u2501\u2503\u250F\u2513\u251B\u2517\u2523\u2533\u252B\u253B\u254B\u2520\u252F\u2528\u2537\u253F\u251D\u2530\u2525\u2538\u2542',
      ],
      ['ada1', '\u2460', 19, '\u2160', 9],
      [
        'adc0',
        '\u3349\u3314\u3322\u334D\u3318\u3327\u3303\u3336\u3351\u3357\u330D\u3326\u3323\u332B\u334A\u333B\u339C\u339D\u339E\u338E\u338F\u33C4\u33A1',
      ],
      [
        'addf',
        '\u337B\u301D\u301F\u2116\u33CD\u2121\u32A4',
        4,
        '\u3231\u3232\u3239\u337E\u337D\u337C\u2252\u2261\u222B\u222E\u2211\u221A\u22A5\u2220\u221F\u22BF\u2235\u2229\u222A',
      ],
      [
        'b0a1',
        '\u4E9C\u5516\u5A03\u963F\u54C0\u611B\u6328\u59F6\u9022\u8475\u831C\u7A50\u60AA\u63E1\u6E25\u65ED\u8466\u82A6\u9BF5\u6893\u5727\u65A1\u6271\u5B9B\u59D0\u867B\u98F4\u7D62\u7DBE\u9B8E\u6216\u7C9F\u88B7\u5B89\u5EB5\u6309\u6697\u6848\u95C7\u978D\u674F\u4EE5\u4F0A\u4F4D\u4F9D\u5049\u56F2\u5937\u59D4\u5A01\u5C09\u60DF\u610F\u6170\u6613\u6905\u70BA\u754F\u7570\u79FB\u7DAD\u7DEF\u80C3\u840E\u8863\u8B02\u9055\u907A\u533B\u4E95\u4EA5\u57DF\u80B2\u90C1\u78EF\u4E00\u58F1\u6EA2\u9038\u7A32\u8328\u828B\u9C2F\u5141\u5370\u54BD\u54E1\u56E0\u59FB\u5F15\u98F2\u6DEB\u80E4\u852D',
      ],
      [
        'b1a1',
        '\u9662\u9670\u96A0\u97FB\u540B\u53F3\u5B87\u70CF\u7FBD\u8FC2\u96E8\u536F\u9D5C\u7ABA\u4E11\u7893\u81FC\u6E26\u5618\u5504\u6B1D\u851A\u9C3B\u59E5\u53A9\u6D66\u74DC\u958F\u5642\u4E91\u904B\u96F2\u834F\u990C\u53E1\u55B6\u5B30\u5F71\u6620\u66F3\u6804\u6C38\u6CF3\u6D29\u745B\u76C8\u7A4E\u9834\u82F1\u885B\u8A60\u92ED\u6DB2\u75AB\u76CA\u99C5\u60A6\u8B01\u8D8A\u95B2\u698E\u53AD\u5186\u5712\u5830\u5944\u5BB4\u5EF6\u6028\u63A9\u63F4\u6CBF\u6F14\u708E\u7114\u7159\u71D5\u733F\u7E01\u8276\u82D1\u8597\u9060\u925B\u9D1B\u5869\u65BC\u6C5A\u7525\u51F9\u592E\u5965\u5F80\u5FDC',
      ],
      [
        'b2a1',
        '\u62BC\u65FA\u6A2A\u6B27\u6BB4\u738B\u7FC1\u8956\u9D2C\u9D0E\u9EC4\u5CA1\u6C96\u837B\u5104\u5C4B\u61B6\u81C6\u6876\u7261\u4E59\u4FFA\u5378\u6069\u6E29\u7A4F\u97F3\u4E0B\u5316\u4EEE\u4F55\u4F3D\u4FA1\u4F73\u52A0\u53EF\u5609\u590F\u5AC1\u5BB6\u5BE1\u79D1\u6687\u679C\u67B6\u6B4C\u6CB3\u706B\u73C2\u798D\u79BE\u7A3C\u7B87\u82B1\u82DB\u8304\u8377\u83EF\u83D3\u8766\u8AB2\u5629\u8CA8\u8FE6\u904E\u971E\u868A\u4FC4\u5CE8\u6211\u7259\u753B\u81E5\u82BD\u86FE\u8CC0\u96C5\u9913\u99D5\u4ECB\u4F1A\u89E3\u56DE\u584A\u58CA\u5EFB\u5FEB\u602A\u6094\u6062\u61D0\u6212\u62D0\u6539',
      ],
      [
        'b3a1',
        '\u9B41\u6666\u68B0\u6D77\u7070\u754C\u7686\u7D75\u82A5\u87F9\u958B\u968E\u8C9D\u51F1\u52BE\u5916\u54B3\u5BB3\u5D16\u6168\u6982\u6DAF\u788D\u84CB\u8857\u8A72\u93A7\u9AB8\u6D6C\u99A8\u86D9\u57A3\u67FF\u86CE\u920E\u5283\u5687\u5404\u5ED3\u62E1\u64B9\u683C\u6838\u6BBB\u7372\u78BA\u7A6B\u899A\u89D2\u8D6B\u8F03\u90ED\u95A3\u9694\u9769\u5B66\u5CB3\u697D\u984D\u984E\u639B\u7B20\u6A2B\u6A7F\u68B6\u9C0D\u6F5F\u5272\u559D\u6070\u62EC\u6D3B\u6E07\u6ED1\u845B\u8910\u8F44\u4E14\u9C39\u53F6\u691B\u6A3A\u9784\u682A\u515C\u7AC3\u84B2\u91DC\u938C\u565B\u9D28\u6822\u8305\u8431',
      ],
      [
        'b4a1',
        '\u7CA5\u5208\u82C5\u74E6\u4E7E\u4F83\u51A0\u5BD2\u520A\u52D8\u52E7\u5DFB\u559A\u582A\u59E6\u5B8C\u5B98\u5BDB\u5E72\u5E79\u60A3\u611F\u6163\u61BE\u63DB\u6562\u67D1\u6853\u68FA\u6B3E\u6B53\u6C57\u6F22\u6F97\u6F45\u74B0\u7518\u76E3\u770B\u7AFF\u7BA1\u7C21\u7DE9\u7F36\u7FF0\u809D\u8266\u839E\u89B3\u8ACC\u8CAB\u9084\u9451\u9593\u9591\u95A2\u9665\u97D3\u9928\u8218\u4E38\u542B\u5CB8\u5DCC\u73A9\u764C\u773C\u5CA9\u7FEB\u8D0B\u96C1\u9811\u9854\u9858\u4F01\u4F0E\u5371\u559C\u5668\u57FA\u5947\u5B09\u5BC4\u5C90\u5E0C\u5E7E\u5FCC\u63EE\u673A\u65D7\u65E2\u671F\u68CB\u68C4',
      ],
      [
        'b5a1',
        '\u6A5F\u5E30\u6BC5\u6C17\u6C7D\u757F\u7948\u5B63\u7A00\u7D00\u5FBD\u898F\u8A18\u8CB4\u8D77\u8ECC\u8F1D\u98E2\u9A0E\u9B3C\u4E80\u507D\u5100\u5993\u5B9C\u622F\u6280\u64EC\u6B3A\u72A0\u7591\u7947\u7FA9\u87FB\u8ABC\u8B70\u63AC\u83CA\u97A0\u5409\u5403\u55AB\u6854\u6A58\u8A70\u7827\u6775\u9ECD\u5374\u5BA2\u811A\u8650\u9006\u4E18\u4E45\u4EC7\u4F11\u53CA\u5438\u5BAE\u5F13\u6025\u6551\u673D\u6C42\u6C72\u6CE3\u7078\u7403\u7A76\u7AAE\u7B08\u7D1A\u7CFE\u7D66\u65E7\u725B\u53BB\u5C45\u5DE8\u62D2\u62E0\u6319\u6E20\u865A\u8A31\u8DDD\u92F8\u6F01\u79A6\u9B5A\u4EA8\u4EAB\u4EAC',
      ],
      [
        'b6a1',
        '\u4F9B\u4FA0\u50D1\u5147\u7AF6\u5171\u51F6\u5354\u5321\u537F\u53EB\u55AC\u5883\u5CE1\u5F37\u5F4A\u602F\u6050\u606D\u631F\u6559\u6A4B\u6CC1\u72C2\u72ED\u77EF\u80F8\u8105\u8208\u854E\u90F7\u93E1\u97FF\u9957\u9A5A\u4EF0\u51DD\u5C2D\u6681\u696D\u5C40\u66F2\u6975\u7389\u6850\u7C81\u50C5\u52E4\u5747\u5DFE\u9326\u65A4\u6B23\u6B3D\u7434\u7981\u79BD\u7B4B\u7DCA\u82B9\u83CC\u887F\u895F\u8B39\u8FD1\u91D1\u541F\u9280\u4E5D\u5036\u53E5\u533A\u72D7\u7396\u77E9\u82E6\u8EAF\u99C6\u99C8\u99D2\u5177\u611A\u865E\u55B0\u7A7A\u5076\u5BD3\u9047\u9685\u4E32\u6ADB\u91E7\u5C51\u5C48',
      ],
      [
        'b7a1',
        '\u6398\u7A9F\u6C93\u9774\u8F61\u7AAA\u718A\u9688\u7C82\u6817\u7E70\u6851\u936C\u52F2\u541B\u85AB\u8A13\u7FA4\u8ECD\u90E1\u5366\u8888\u7941\u4FC2\u50BE\u5211\u5144\u5553\u572D\u73EA\u578B\u5951\u5F62\u5F84\u6075\u6176\u6167\u61A9\u63B2\u643A\u656C\u666F\u6842\u6E13\u7566\u7A3D\u7CFB\u7D4C\u7D99\u7E4B\u7F6B\u830E\u834A\u86CD\u8A08\u8A63\u8B66\u8EFD\u981A\u9D8F\u82B8\u8FCE\u9BE8\u5287\u621F\u6483\u6FC0\u9699\u6841\u5091\u6B20\u6C7A\u6F54\u7A74\u7D50\u8840\u8A23\u6708\u4EF6\u5039\u5026\u5065\u517C\u5238\u5263\u55A7\u570F\u5805\u5ACC\u5EFA\u61B2\u61F8\u62F3\u6372',
      ],
      [
        'b8a1',
        '\u691C\u6A29\u727D\u72AC\u732E\u7814\u786F\u7D79\u770C\u80A9\u898B\u8B19\u8CE2\u8ED2\u9063\u9375\u967A\u9855\u9A13\u9E78\u5143\u539F\u53B3\u5E7B\u5F26\u6E1B\u6E90\u7384\u73FE\u7D43\u8237\u8A00\u8AFA\u9650\u4E4E\u500B\u53E4\u547C\u56FA\u59D1\u5B64\u5DF1\u5EAB\u5F27\u6238\u6545\u67AF\u6E56\u72D0\u7CCA\u88B4\u80A1\u80E1\u83F0\u864E\u8A87\u8DE8\u9237\u96C7\u9867\u9F13\u4E94\u4E92\u4F0D\u5348\u5449\u543E\u5A2F\u5F8C\u5FA1\u609F\u68A7\u6A8E\u745A\u7881\u8A9E\u8AA4\u8B77\u9190\u4E5E\u9BC9\u4EA4\u4F7C\u4FAF\u5019\u5016\u5149\u516C\u529F\u52B9\u52FE\u539A\u53E3\u5411',
      ],
      [
        'b9a1',
        '\u540E\u5589\u5751\u57A2\u597D\u5B54\u5B5D\u5B8F\u5DE5\u5DE7\u5DF7\u5E78\u5E83\u5E9A\u5EB7\u5F18\u6052\u614C\u6297\u62D8\u63A7\u653B\u6602\u6643\u66F4\u676D\u6821\u6897\u69CB\u6C5F\u6D2A\u6D69\u6E2F\u6E9D\u7532\u7687\u786C\u7A3F\u7CE0\u7D05\u7D18\u7D5E\u7DB1\u8015\u8003\u80AF\u80B1\u8154\u818F\u822A\u8352\u884C\u8861\u8B1B\u8CA2\u8CFC\u90CA\u9175\u9271\u783F\u92FC\u95A4\u964D\u9805\u9999\u9AD8\u9D3B\u525B\u52AB\u53F7\u5408\u58D5\u62F7\u6FE0\u8C6A\u8F5F\u9EB9\u514B\u523B\u544A\u56FD\u7A40\u9177\u9D60\u9ED2\u7344\u6F09\u8170\u7511\u5FFD\u60DA\u9AA8\u72DB\u8FBC',
      ],
      [
        'baa1',
        '\u6B64\u9803\u4ECA\u56F0\u5764\u58BE\u5A5A\u6068\u61C7\u660F\u6606\u6839\u68B1\u6DF7\u75D5\u7D3A\u826E\u9B42\u4E9B\u4F50\u53C9\u5506\u5D6F\u5DE6\u5DEE\u67FB\u6C99\u7473\u7802\u8A50\u9396\u88DF\u5750\u5EA7\u632B\u50B5\u50AC\u518D\u6700\u54C9\u585E\u59BB\u5BB0\u5F69\u624D\u63A1\u683D\u6B73\u6E08\u707D\u91C7\u7280\u7815\u7826\u796D\u658E\u7D30\u83DC\u88C1\u8F09\u969B\u5264\u5728\u6750\u7F6A\u8CA1\u51B4\u5742\u962A\u583A\u698A\u80B4\u54B2\u5D0E\u57FC\u7895\u9DFA\u4F5C\u524A\u548B\u643E\u6628\u6714\u67F5\u7A84\u7B56\u7D22\u932F\u685C\u9BAD\u7B39\u5319\u518A\u5237',
      ],
      [
        'bba1',
        '\u5BDF\u62F6\u64AE\u64E6\u672D\u6BBA\u85A9\u96D1\u7690\u9BD6\u634C\u9306\u9BAB\u76BF\u6652\u4E09\u5098\u53C2\u5C71\u60E8\u6492\u6563\u685F\u71E6\u73CA\u7523\u7B97\u7E82\u8695\u8B83\u8CDB\u9178\u9910\u65AC\u66AB\u6B8B\u4ED5\u4ED4\u4F3A\u4F7F\u523A\u53F8\u53F2\u55E3\u56DB\u58EB\u59CB\u59C9\u59FF\u5B50\u5C4D\u5E02\u5E2B\u5FD7\u601D\u6307\u652F\u5B5C\u65AF\u65BD\u65E8\u679D\u6B62\u6B7B\u6C0F\u7345\u7949\u79C1\u7CF8\u7D19\u7D2B\u80A2\u8102\u81F3\u8996\u8A5E\u8A69\u8A66\u8A8C\u8AEE\u8CC7\u8CDC\u96CC\u98FC\u6B6F\u4E8B\u4F3C\u4F8D\u5150\u5B57\u5BFA\u6148\u6301\u6642',
      ],
      [
        'bca1',
        '\u6B21\u6ECB\u6CBB\u723E\u74BD\u75D4\u78C1\u793A\u800C\u8033\u81EA\u8494\u8F9E\u6C50\u9E7F\u5F0F\u8B58\u9D2B\u7AFA\u8EF8\u5B8D\u96EB\u4E03\u53F1\u57F7\u5931\u5AC9\u5BA4\u6089\u6E7F\u6F06\u75BE\u8CEA\u5B9F\u8500\u7BE0\u5072\u67F4\u829D\u5C61\u854A\u7E1E\u820E\u5199\u5C04\u6368\u8D66\u659C\u716E\u793E\u7D17\u8005\u8B1D\u8ECA\u906E\u86C7\u90AA\u501F\u52FA\u5C3A\u6753\u707C\u7235\u914C\u91C8\u932B\u82E5\u5BC2\u5F31\u60F9\u4E3B\u53D6\u5B88\u624B\u6731\u6B8A\u72E9\u73E0\u7A2E\u816B\u8DA3\u9152\u9996\u5112\u53D7\u546A\u5BFF\u6388\u6A39\u7DAC\u9700\u56DA\u53CE\u5468',
      ],
      [
        'bda1',
        '\u5B97\u5C31\u5DDE\u4FEE\u6101\u62FE\u6D32\u79C0\u79CB\u7D42\u7E4D\u7FD2\u81ED\u821F\u8490\u8846\u8972\u8B90\u8E74\u8F2F\u9031\u914B\u916C\u96C6\u919C\u4EC0\u4F4F\u5145\u5341\u5F93\u620E\u67D4\u6C41\u6E0B\u7363\u7E26\u91CD\u9283\u53D4\u5919\u5BBF\u6DD1\u795D\u7E2E\u7C9B\u587E\u719F\u51FA\u8853\u8FF0\u4FCA\u5CFB\u6625\u77AC\u7AE3\u821C\u99FF\u51C6\u5FAA\u65EC\u696F\u6B89\u6DF3\u6E96\u6F64\u76FE\u7D14\u5DE1\u9075\u9187\u9806\u51E6\u521D\u6240\u6691\u66D9\u6E1A\u5EB6\u7DD2\u7F72\u66F8\u85AF\u85F7\u8AF8\u52A9\u53D9\u5973\u5E8F\u5F90\u6055\u92E4\u9664\u50B7\u511F',
      ],
      [
        'bea1',
        '\u52DD\u5320\u5347\u53EC\u54E8\u5546\u5531\u5617\u5968\u59BE\u5A3C\u5BB5\u5C06\u5C0F\u5C11\u5C1A\u5E84\u5E8A\u5EE0\u5F70\u627F\u6284\u62DB\u638C\u6377\u6607\u660C\u662D\u6676\u677E\u68A2\u6A1F\u6A35\u6CBC\u6D88\u6E09\u6E58\u713C\u7126\u7167\u75C7\u7701\u785D\u7901\u7965\u79F0\u7AE0\u7B11\u7CA7\u7D39\u8096\u83D6\u848B\u8549\u885D\u88F3\u8A1F\u8A3C\u8A54\u8A73\u8C61\u8CDE\u91A4\u9266\u937E\u9418\u969C\u9798\u4E0A\u4E08\u4E1E\u4E57\u5197\u5270\u57CE\u5834\u58CC\u5B22\u5E38\u60C5\u64FE\u6761\u6756\u6D44\u72B6\u7573\u7A63\u84B8\u8B72\u91B8\u9320\u5631\u57F4\u98FE',
      ],
      [
        'bfa1',
        '\u62ED\u690D\u6B96\u71ED\u7E54\u8077\u8272\u89E6\u98DF\u8755\u8FB1\u5C3B\u4F38\u4FE1\u4FB5\u5507\u5A20\u5BDD\u5BE9\u5FC3\u614E\u632F\u65B0\u664B\u68EE\u699B\u6D78\u6DF1\u7533\u75B9\u771F\u795E\u79E6\u7D33\u81E3\u82AF\u85AA\u89AA\u8A3A\u8EAB\u8F9B\u9032\u91DD\u9707\u4EBA\u4EC1\u5203\u5875\u58EC\u5C0B\u751A\u5C3D\u814E\u8A0A\u8FC5\u9663\u976D\u7B25\u8ACF\u9808\u9162\u56F3\u53A8\u9017\u5439\u5782\u5E25\u63A8\u6C34\u708A\u7761\u7C8B\u7FE0\u8870\u9042\u9154\u9310\u9318\u968F\u745E\u9AC4\u5D07\u5D69\u6570\u67A2\u8DA8\u96DB\u636E\u6749\u6919\u83C5\u9817\u96C0\u88FE',
      ],
      [
        'c0a1',
        '\u6F84\u647A\u5BF8\u4E16\u702C\u755D\u662F\u51C4\u5236\u52E2\u59D3\u5F81\u6027\u6210\u653F\u6574\u661F\u6674\u68F2\u6816\u6B63\u6E05\u7272\u751F\u76DB\u7CBE\u8056\u58F0\u88FD\u897F\u8AA0\u8A93\u8ACB\u901D\u9192\u9752\u9759\u6589\u7A0E\u8106\u96BB\u5E2D\u60DC\u621A\u65A5\u6614\u6790\u77F3\u7A4D\u7C4D\u7E3E\u810A\u8CAC\u8D64\u8DE1\u8E5F\u78A9\u5207\u62D9\u63A5\u6442\u6298\u8A2D\u7A83\u7BC0\u8AAC\u96EA\u7D76\u820C\u8749\u4ED9\u5148\u5343\u5360\u5BA3\u5C02\u5C16\u5DDD\u6226\u6247\u64B0\u6813\u6834\u6CC9\u6D45\u6D17\u67D3\u6F5C\u714E\u717D\u65CB\u7A7F\u7BAD\u7DDA',
      ],
      [
        'c1a1',
        '\u7E4A\u7FA8\u817A\u821B\u8239\u85A6\u8A6E\u8CCE\u8DF5\u9078\u9077\u92AD\u9291\u9583\u9BAE\u524D\u5584\u6F38\u7136\u5168\u7985\u7E55\u81B3\u7CCE\u564C\u5851\u5CA8\u63AA\u66FE\u66FD\u695A\u72D9\u758F\u758E\u790E\u7956\u79DF\u7C97\u7D20\u7D44\u8607\u8A34\u963B\u9061\u9F20\u50E7\u5275\u53CC\u53E2\u5009\u55AA\u58EE\u594F\u723D\u5B8B\u5C64\u531D\u60E3\u60F3\u635C\u6383\u633F\u63BB\u64CD\u65E9\u66F9\u5DE3\u69CD\u69FD\u6F15\u71E5\u4E89\u75E9\u76F8\u7A93\u7CDF\u7DCF\u7D9C\u8061\u8349\u8358\u846C\u84BC\u85FB\u88C5\u8D70\u9001\u906D\u9397\u971C\u9A12\u50CF\u5897\u618E',
      ],
      [
        'c2a1',
        '\u81D3\u8535\u8D08\u9020\u4FC3\u5074\u5247\u5373\u606F\u6349\u675F\u6E2C\u8DB3\u901F\u4FD7\u5C5E\u8CCA\u65CF\u7D9A\u5352\u8896\u5176\u63C3\u5B58\u5B6B\u5C0A\u640D\u6751\u905C\u4ED6\u591A\u592A\u6C70\u8A51\u553E\u5815\u59A5\u60F0\u6253\u67C1\u8235\u6955\u9640\u99C4\u9A28\u4F53\u5806\u5BFE\u8010\u5CB1\u5E2F\u5F85\u6020\u614B\u6234\u66FF\u6CF0\u6EDE\u80CE\u817F\u82D4\u888B\u8CB8\u9000\u902E\u968A\u9EDB\u9BDB\u4EE3\u53F0\u5927\u7B2C\u918D\u984C\u9DF9\u6EDD\u7027\u5353\u5544\u5B85\u6258\u629E\u62D3\u6CA2\u6FEF\u7422\u8A17\u9438\u6FC1\u8AFE\u8338\u51E7\u86F8\u53EA',
      ],
      [
        'c3a1',
        '\u53E9\u4F46\u9054\u8FB0\u596A\u8131\u5DFD\u7AEA\u8FBF\u68DA\u8C37\u72F8\u9C48\u6A3D\u8AB0\u4E39\u5358\u5606\u5766\u62C5\u63A2\u65E6\u6B4E\u6DE1\u6E5B\u70AD\u77ED\u7AEF\u7BAA\u7DBB\u803D\u80C6\u86CB\u8A95\u935B\u56E3\u58C7\u5F3E\u65AD\u6696\u6A80\u6BB5\u7537\u8AC7\u5024\u77E5\u5730\u5F1B\u6065\u667A\u6C60\u75F4\u7A1A\u7F6E\u81F4\u8718\u9045\u99B3\u7BC9\u755C\u7AF9\u7B51\u84C4\u9010\u79E9\u7A92\u8336\u5AE1\u7740\u4E2D\u4EF2\u5B99\u5FE0\u62BD\u663C\u67F1\u6CE8\u866B\u8877\u8A3B\u914E\u92F3\u99D0\u6A17\u7026\u732A\u82E7\u8457\u8CAF\u4E01\u5146\u51CB\u558B\u5BF5',
      ],
      [
        'c4a1',
        '\u5E16\u5E33\u5E81\u5F14\u5F35\u5F6B\u5FB4\u61F2\u6311\u66A2\u671D\u6F6E\u7252\u753A\u773A\u8074\u8139\u8178\u8776\u8ABF\u8ADC\u8D85\u8DF3\u929A\u9577\u9802\u9CE5\u52C5\u6357\u76F4\u6715\u6C88\u73CD\u8CC3\u93AE\u9673\u6D25\u589C\u690E\u69CC\u8FFD\u939A\u75DB\u901A\u585A\u6802\u63B4\u69FB\u4F43\u6F2C\u67D8\u8FBB\u8526\u7DB4\u9354\u693F\u6F70\u576A\u58F7\u5B2C\u7D2C\u722A\u540A\u91E3\u9DB4\u4EAD\u4F4E\u505C\u5075\u5243\u8C9E\u5448\u5824\u5B9A\u5E1D\u5E95\u5EAD\u5EF7\u5F1F\u608C\u62B5\u633A\u63D0\u68AF\u6C40\u7887\u798E\u7A0B\u7DE0\u8247\u8A02\u8AE6\u8E44\u9013',
      ],
      [
        'c5a1',
        '\u90B8\u912D\u91D8\u9F0E\u6CE5\u6458\u64E2\u6575\u6EF4\u7684\u7B1B\u9069\u93D1\u6EBA\u54F2\u5FB9\u64A4\u8F4D\u8FED\u9244\u5178\u586B\u5929\u5C55\u5E97\u6DFB\u7E8F\u751C\u8CBC\u8EE2\u985B\u70B9\u4F1D\u6BBF\u6FB1\u7530\u96FB\u514E\u5410\u5835\u5857\u59AC\u5C60\u5F92\u6597\u675C\u6E21\u767B\u83DF\u8CED\u9014\u90FD\u934D\u7825\u783A\u52AA\u5EA6\u571F\u5974\u6012\u5012\u515A\u51AC\u51CD\u5200\u5510\u5854\u5858\u5957\u5B95\u5CF6\u5D8B\u60BC\u6295\u642D\u6771\u6843\u68BC\u68DF\u76D7\u6DD8\u6E6F\u6D9B\u706F\u71C8\u5F53\u75D8\u7977\u7B49\u7B54\u7B52\u7CD6\u7D71\u5230',
      ],
      [
        'c6a1',
        '\u8463\u8569\u85E4\u8A0E\u8B04\u8C46\u8E0F\u9003\u900F\u9419\u9676\u982D\u9A30\u95D8\u50CD\u52D5\u540C\u5802\u5C0E\u61A7\u649E\u6D1E\u77B3\u7AE5\u80F4\u8404\u9053\u9285\u5CE0\u9D07\u533F\u5F97\u5FB3\u6D9C\u7279\u7763\u79BF\u7BE4\u6BD2\u72EC\u8AAD\u6803\u6A61\u51F8\u7A81\u6934\u5C4A\u9CF6\u82EB\u5BC5\u9149\u701E\u5678\u5C6F\u60C7\u6566\u6C8C\u8C5A\u9041\u9813\u5451\u66C7\u920D\u5948\u90A3\u5185\u4E4D\u51EA\u8599\u8B0E\u7058\u637A\u934B\u6962\u99B4\u7E04\u7577\u5357\u6960\u8EDF\u96E3\u6C5D\u4E8C\u5C3C\u5F10\u8FE9\u5302\u8CD1\u8089\u8679\u5EFF\u65E5\u4E73\u5165',
      ],
      [
        'c7a1',
        '\u5982\u5C3F\u97EE\u4EFB\u598A\u5FCD\u8A8D\u6FE1\u79B0\u7962\u5BE7\u8471\u732B\u71B1\u5E74\u5FF5\u637B\u649A\u71C3\u7C98\u4E43\u5EFC\u4E4B\u57DC\u56A2\u60A9\u6FC3\u7D0D\u80FD\u8133\u81BF\u8FB2\u8997\u86A4\u5DF4\u628A\u64AD\u8987\u6777\u6CE2\u6D3E\u7436\u7834\u5A46\u7F75\u82AD\u99AC\u4FF3\u5EC3\u62DD\u6392\u6557\u676F\u76C3\u724C\u80CC\u80BA\u8F29\u914D\u500D\u57F9\u5A92\u6885\u6973\u7164\u72FD\u8CB7\u58F2\u8CE0\u966A\u9019\u877F\u79E4\u77E7\u8429\u4F2F\u5265\u535A\u62CD\u67CF\u6CCA\u767D\u7B94\u7C95\u8236\u8584\u8FEB\u66DD\u6F20\u7206\u7E1B\u83AB\u99C1\u9EA6',
      ],
      [
        'c8a1',
        '\u51FD\u7BB1\u7872\u7BB8\u8087\u7B48\u6AE8\u5E61\u808C\u7551\u7560\u516B\u9262\u6E8C\u767A\u9197\u9AEA\u4F10\u7F70\u629C\u7B4F\u95A5\u9CE9\u567A\u5859\u86E4\u96BC\u4F34\u5224\u534A\u53CD\u53DB\u5E06\u642C\u6591\u677F\u6C3E\u6C4E\u7248\u72AF\u73ED\u7554\u7E41\u822C\u85E9\u8CA9\u7BC4\u91C6\u7169\u9812\u98EF\u633D\u6669\u756A\u76E4\u78D0\u8543\u86EE\u532A\u5351\u5426\u5983\u5E87\u5F7C\u60B2\u6249\u6279\u62AB\u6590\u6BD4\u6CCC\u75B2\u76AE\u7891\u79D8\u7DCB\u7F77\u80A5\u88AB\u8AB9\u8CBB\u907F\u975E\u98DB\u6A0B\u7C38\u5099\u5C3E\u5FAE\u6787\u6BD8\u7435\u7709\u7F8E',
      ],
      [
        'c9a1',
        '\u9F3B\u67CA\u7A17\u5339\u758B\u9AED\u5F66\u819D\u83F1\u8098\u5F3C\u5FC5\u7562\u7B46\u903C\u6867\u59EB\u5A9B\u7D10\u767E\u8B2C\u4FF5\u5F6A\u6A19\u6C37\u6F02\u74E2\u7968\u8868\u8A55\u8C79\u5EDF\u63CF\u75C5\u79D2\u82D7\u9328\u92F2\u849C\u86ED\u9C2D\u54C1\u5F6C\u658C\u6D5C\u7015\u8CA7\u8CD3\u983B\u654F\u74F6\u4E0D\u4ED8\u57E0\u592B\u5A66\u5BCC\u51A8\u5E03\u5E9C\u6016\u6276\u6577\u65A7\u666E\u6D6E\u7236\u7B26\u8150\u819A\u8299\u8B5C\u8CA0\u8CE6\u8D74\u961C\u9644\u4FAE\u64AB\u6B66\u821E\u8461\u856A\u90E8\u5C01\u6953\u98A8\u847A\u8557\u4F0F\u526F\u5FA9\u5E45\u670D',
      ],
      [
        'caa1',
        '\u798F\u8179\u8907\u8986\u6DF5\u5F17\u6255\u6CB8\u4ECF\u7269\u9B92\u5206\u543B\u5674\u58B3\u61A4\u626E\u711A\u596E\u7C89\u7CDE\u7D1B\u96F0\u6587\u805E\u4E19\u4F75\u5175\u5840\u5E63\u5E73\u5F0A\u67C4\u4E26\u853D\u9589\u965B\u7C73\u9801\u50FB\u58C1\u7656\u78A7\u5225\u77A5\u8511\u7B86\u504F\u5909\u7247\u7BC7\u7DE8\u8FBA\u8FD4\u904D\u4FBF\u52C9\u5A29\u5F01\u97AD\u4FDD\u8217\u92EA\u5703\u6355\u6B69\u752B\u88DC\u8F14\u7A42\u52DF\u5893\u6155\u620A\u66AE\u6BCD\u7C3F\u83E9\u5023\u4FF8\u5305\u5446\u5831\u5949\u5B9D\u5CF0\u5CEF\u5D29\u5E96\u62B1\u6367\u653E\u65B9\u670B',
      ],
      [
        'cba1',
        '\u6CD5\u6CE1\u70F9\u7832\u7E2B\u80DE\u82B3\u840C\u84EC\u8702\u8912\u8A2A\u8C4A\u90A6\u92D2\u98FD\u9CF3\u9D6C\u4E4F\u4EA1\u508D\u5256\u574A\u59A8\u5E3D\u5FD8\u5FD9\u623F\u66B4\u671B\u67D0\u68D2\u5192\u7D21\u80AA\u81A8\u8B00\u8C8C\u8CBF\u927E\u9632\u5420\u982C\u5317\u50D5\u535C\u58A8\u64B2\u6734\u7267\u7766\u7A46\u91E6\u52C3\u6CA1\u6B86\u5800\u5E4C\u5954\u672C\u7FFB\u51E1\u76C6\u6469\u78E8\u9B54\u9EBB\u57CB\u59B9\u6627\u679A\u6BCE\u54E9\u69D9\u5E55\u819C\u6795\u9BAA\u67FE\u9C52\u685D\u4EA6\u4FE3\u53C8\u62B9\u672B\u6CAB\u8FC4\u4FAD\u7E6D\u9EBF\u4E07\u6162\u6E80',
      ],
      [
        'cca1',
        '\u6F2B\u8513\u5473\u672A\u9B45\u5DF3\u7B95\u5CAC\u5BC6\u871C\u6E4A\u84D1\u7A14\u8108\u5999\u7C8D\u6C11\u7720\u52D9\u5922\u7121\u725F\u77DB\u9727\u9D61\u690B\u5A7F\u5A18\u51A5\u540D\u547D\u660E\u76DF\u8FF7\u9298\u9CF4\u59EA\u725D\u6EC5\u514D\u68C9\u7DBF\u7DEC\u9762\u9EBA\u6478\u6A21\u8302\u5984\u5B5F\u6BDB\u731B\u76F2\u7DB2\u8017\u8499\u5132\u6728\u9ED9\u76EE\u6762\u52FF\u9905\u5C24\u623B\u7C7E\u8CB0\u554F\u60B6\u7D0B\u9580\u5301\u4E5F\u51B6\u591C\u723A\u8036\u91CE\u5F25\u77E2\u5384\u5F79\u7D04\u85AC\u8A33\u8E8D\u9756\u67F3\u85AE\u9453\u6109\u6108\u6CB9\u7652',
      ],
      [
        'cda1',
        '\u8AED\u8F38\u552F\u4F51\u512A\u52C7\u53CB\u5BA5\u5E7D\u60A0\u6182\u63D6\u6709\u67DA\u6E67\u6D8C\u7336\u7337\u7531\u7950\u88D5\u8A98\u904A\u9091\u90F5\u96C4\u878D\u5915\u4E88\u4F59\u4E0E\u8A89\u8F3F\u9810\u50AD\u5E7C\u5996\u5BB9\u5EB8\u63DA\u63FA\u64C1\u66DC\u694A\u69D8\u6D0B\u6EB6\u7194\u7528\u7AAF\u7F8A\u8000\u8449\u84C9\u8981\u8B21\u8E0A\u9065\u967D\u990A\u617E\u6291\u6B32\u6C83\u6D74\u7FCC\u7FFC\u6DC0\u7F85\u87BA\u88F8\u6765\u83B1\u983C\u96F7\u6D1B\u7D61\u843D\u916A\u4E71\u5375\u5D50\u6B04\u6FEB\u85CD\u862D\u89A7\u5229\u540F\u5C65\u674E\u68A8\u7406\u7483',
      ],
      [
        'cea1',
        '\u75E2\u88CF\u88E1\u91CC\u96E2\u9678\u5F8B\u7387\u7ACB\u844E\u63A0\u7565\u5289\u6D41\u6E9C\u7409\u7559\u786B\u7C92\u9686\u7ADC\u9F8D\u4FB6\u616E\u65C5\u865C\u4E86\u4EAE\u50DA\u4E21\u51CC\u5BEE\u6599\u6881\u6DBC\u731F\u7642\u77AD\u7A1C\u7CE7\u826F\u8AD2\u907C\u91CF\u9675\u9818\u529B\u7DD1\u502B\u5398\u6797\u6DCB\u71D0\u7433\u81E8\u8F2A\u96A3\u9C57\u9E9F\u7460\u5841\u6D99\u7D2F\u985E\u4EE4\u4F36\u4F8B\u51B7\u52B1\u5DBA\u601C\u73B2\u793C\u82D3\u9234\u96B7\u96F6\u970A\u9E97\u9F62\u66A6\u6B74\u5217\u52A3\u70C8\u88C2\u5EC9\u604B\u6190\u6F23\u7149\u7C3E\u7DF4\u806F',
      ],
      [
        'cfa1',
        '\u84EE\u9023\u932C\u5442\u9B6F\u6AD3\u7089\u8CC2\u8DEF\u9732\u52B4\u5A41\u5ECA\u5F04\u6717\u697C\u6994\u6D6A\u6F0F\u7262\u72FC\u7BED\u8001\u807E\u874B\u90CE\u516D\u9E93\u7984\u808B\u9332\u8AD6\u502D\u548C\u8A71\u6B6A\u8CC4\u8107\u60D1\u67A0\u9DF2\u4E99\u4E98\u9C10\u8A6B\u85C1\u8568\u6900\u6E7E\u7897\u8155',
      ],
      [
        'd0a1',
        '\u5F0C\u4E10\u4E15\u4E2A\u4E31\u4E36\u4E3C\u4E3F\u4E42\u4E56\u4E58\u4E82\u4E85\u8C6B\u4E8A\u8212\u5F0D\u4E8E\u4E9E\u4E9F\u4EA0\u4EA2\u4EB0\u4EB3\u4EB6\u4ECE\u4ECD\u4EC4\u4EC6\u4EC2\u4ED7\u4EDE\u4EED\u4EDF\u4EF7\u4F09\u4F5A\u4F30\u4F5B\u4F5D\u4F57\u4F47\u4F76\u4F88\u4F8F\u4F98\u4F7B\u4F69\u4F70\u4F91\u4F6F\u4F86\u4F96\u5118\u4FD4\u4FDF\u4FCE\u4FD8\u4FDB\u4FD1\u4FDA\u4FD0\u4FE4\u4FE5\u501A\u5028\u5014\u502A\u5025\u5005\u4F1C\u4FF6\u5021\u5029\u502C\u4FFE\u4FEF\u5011\u5006\u5043\u5047\u6703\u5055\u5050\u5048\u505A\u5056\u506C\u5078\u5080\u509A\u5085\u50B4\u50B2',
      ],
      [
        'd1a1',
        '\u50C9\u50CA\u50B3\u50C2\u50D6\u50DE\u50E5\u50ED\u50E3\u50EE\u50F9\u50F5\u5109\u5101\u5102\u5116\u5115\u5114\u511A\u5121\u513A\u5137\u513C\u513B\u513F\u5140\u5152\u514C\u5154\u5162\u7AF8\u5169\u516A\u516E\u5180\u5182\u56D8\u518C\u5189\u518F\u5191\u5193\u5195\u5196\u51A4\u51A6\u51A2\u51A9\u51AA\u51AB\u51B3\u51B1\u51B2\u51B0\u51B5\u51BD\u51C5\u51C9\u51DB\u51E0\u8655\u51E9\u51ED\u51F0\u51F5\u51FE\u5204\u520B\u5214\u520E\u5227\u522A\u522E\u5233\u5239\u524F\u5244\u524B\u524C\u525E\u5254\u526A\u5274\u5269\u5273\u527F\u527D\u528D\u5294\u5292\u5271\u5288\u5291\u8FA8',
      ],
      [
        'd2a1',
        '\u8FA7\u52AC\u52AD\u52BC\u52B5\u52C1\u52CD\u52D7\u52DE\u52E3\u52E6\u98ED\u52E0\u52F3\u52F5\u52F8\u52F9\u5306\u5308\u7538\u530D\u5310\u530F\u5315\u531A\u5323\u532F\u5331\u5333\u5338\u5340\u5346\u5345\u4E17\u5349\u534D\u51D6\u535E\u5369\u536E\u5918\u537B\u5377\u5382\u5396\u53A0\u53A6\u53A5\u53AE\u53B0\u53B6\u53C3\u7C12\u96D9\u53DF\u66FC\u71EE\u53EE\u53E8\u53ED\u53FA\u5401\u543D\u5440\u542C\u542D\u543C\u542E\u5436\u5429\u541D\u544E\u548F\u5475\u548E\u545F\u5471\u5477\u5470\u5492\u547B\u5480\u5476\u5484\u5490\u5486\u54C7\u54A2\u54B8\u54A5\u54AC\u54C4\u54C8\u54A8',
      ],
      [
        'd3a1',
        '\u54AB\u54C2\u54A4\u54BE\u54BC\u54D8\u54E5\u54E6\u550F\u5514\u54FD\u54EE\u54ED\u54FA\u54E2\u5539\u5540\u5563\u554C\u552E\u555C\u5545\u5556\u5557\u5538\u5533\u555D\u5599\u5580\u54AF\u558A\u559F\u557B\u557E\u5598\u559E\u55AE\u557C\u5583\u55A9\u5587\u55A8\u55DA\u55C5\u55DF\u55C4\u55DC\u55E4\u55D4\u5614\u55F7\u5616\u55FE\u55FD\u561B\u55F9\u564E\u5650\u71DF\u5634\u5636\u5632\u5638\u566B\u5664\u562F\u566C\u566A\u5686\u5680\u568A\u56A0\u5694\u568F\u56A5\u56AE\u56B6\u56B4\u56C2\u56BC\u56C1\u56C3\u56C0\u56C8\u56CE\u56D1\u56D3\u56D7\u56EE\u56F9\u5700\u56FF\u5704\u5709',
      ],
      [
        'd4a1',
        '\u5708\u570B\u570D\u5713\u5718\u5716\u55C7\u571C\u5726\u5737\u5738\u574E\u573B\u5740\u574F\u5769\u57C0\u5788\u5761\u577F\u5789\u5793\u57A0\u57B3\u57A4\u57AA\u57B0\u57C3\u57C6\u57D4\u57D2\u57D3\u580A\u57D6\u57E3\u580B\u5819\u581D\u5872\u5821\u5862\u584B\u5870\u6BC0\u5852\u583D\u5879\u5885\u58B9\u589F\u58AB\u58BA\u58DE\u58BB\u58B8\u58AE\u58C5\u58D3\u58D1\u58D7\u58D9\u58D8\u58E5\u58DC\u58E4\u58DF\u58EF\u58FA\u58F9\u58FB\u58FC\u58FD\u5902\u590A\u5910\u591B\u68A6\u5925\u592C\u592D\u5932\u5938\u593E\u7AD2\u5955\u5950\u594E\u595A\u5958\u5962\u5960\u5967\u596C\u5969',
      ],
      [
        'd5a1',
        '\u5978\u5981\u599D\u4F5E\u4FAB\u59A3\u59B2\u59C6\u59E8\u59DC\u598D\u59D9\u59DA\u5A25\u5A1F\u5A11\u5A1C\u5A09\u5A1A\u5A40\u5A6C\u5A49\u5A35\u5A36\u5A62\u5A6A\u5A9A\u5ABC\u5ABE\u5ACB\u5AC2\u5ABD\u5AE3\u5AD7\u5AE6\u5AE9\u5AD6\u5AFA\u5AFB\u5B0C\u5B0B\u5B16\u5B32\u5AD0\u5B2A\u5B36\u5B3E\u5B43\u5B45\u5B40\u5B51\u5B55\u5B5A\u5B5B\u5B65\u5B69\u5B70\u5B73\u5B75\u5B78\u6588\u5B7A\u5B80\u5B83\u5BA6\u5BB8\u5BC3\u5BC7\u5BC9\u5BD4\u5BD0\u5BE4\u5BE6\u5BE2\u5BDE\u5BE5\u5BEB\u5BF0\u5BF6\u5BF3\u5C05\u5C07\u5C08\u5C0D\u5C13\u5C20\u5C22\u5C28\u5C38\u5C39\u5C41\u5C46\u5C4E\u5C53',
      ],
      [
        'd6a1',
        '\u5C50\u5C4F\u5B71\u5C6C\u5C6E\u4E62\u5C76\u5C79\u5C8C\u5C91\u5C94\u599B\u5CAB\u5CBB\u5CB6\u5CBC\u5CB7\u5CC5\u5CBE\u5CC7\u5CD9\u5CE9\u5CFD\u5CFA\u5CED\u5D8C\u5CEA\u5D0B\u5D15\u5D17\u5D5C\u5D1F\u5D1B\u5D11\u5D14\u5D22\u5D1A\u5D19\u5D18\u5D4C\u5D52\u5D4E\u5D4B\u5D6C\u5D73\u5D76\u5D87\u5D84\u5D82\u5DA2\u5D9D\u5DAC\u5DAE\u5DBD\u5D90\u5DB7\u5DBC\u5DC9\u5DCD\u5DD3\u5DD2\u5DD6\u5DDB\u5DEB\u5DF2\u5DF5\u5E0B\u5E1A\u5E19\u5E11\u5E1B\u5E36\u5E37\u5E44\u5E43\u5E40\u5E4E\u5E57\u5E54\u5E5F\u5E62\u5E64\u5E47\u5E75\u5E76\u5E7A\u9EBC\u5E7F\u5EA0\u5EC1\u5EC2\u5EC8\u5ED0\u5ECF',
      ],
      [
        'd7a1',
        '\u5ED6\u5EE3\u5EDD\u5EDA\u5EDB\u5EE2\u5EE1\u5EE8\u5EE9\u5EEC\u5EF1\u5EF3\u5EF0\u5EF4\u5EF8\u5EFE\u5F03\u5F09\u5F5D\u5F5C\u5F0B\u5F11\u5F16\u5F29\u5F2D\u5F38\u5F41\u5F48\u5F4C\u5F4E\u5F2F\u5F51\u5F56\u5F57\u5F59\u5F61\u5F6D\u5F73\u5F77\u5F83\u5F82\u5F7F\u5F8A\u5F88\u5F91\u5F87\u5F9E\u5F99\u5F98\u5FA0\u5FA8\u5FAD\u5FBC\u5FD6\u5FFB\u5FE4\u5FF8\u5FF1\u5FDD\u60B3\u5FFF\u6021\u6060\u6019\u6010\u6029\u600E\u6031\u601B\u6015\u602B\u6026\u600F\u603A\u605A\u6041\u606A\u6077\u605F\u604A\u6046\u604D\u6063\u6043\u6064\u6042\u606C\u606B\u6059\u6081\u608D\u60E7\u6083\u609A',
      ],
      [
        'd8a1',
        '\u6084\u609B\u6096\u6097\u6092\u60A7\u608B\u60E1\u60B8\u60E0\u60D3\u60B4\u5FF0\u60BD\u60C6\u60B5\u60D8\u614D\u6115\u6106\u60F6\u60F7\u6100\u60F4\u60FA\u6103\u6121\u60FB\u60F1\u610D\u610E\u6147\u613E\u6128\u6127\u614A\u613F\u613C\u612C\u6134\u613D\u6142\u6144\u6173\u6177\u6158\u6159\u615A\u616B\u6174\u616F\u6165\u6171\u615F\u615D\u6153\u6175\u6199\u6196\u6187\u61AC\u6194\u619A\u618A\u6191\u61AB\u61AE\u61CC\u61CA\u61C9\u61F7\u61C8\u61C3\u61C6\u61BA\u61CB\u7F79\u61CD\u61E6\u61E3\u61F6\u61FA\u61F4\u61FF\u61FD\u61FC\u61FE\u6200\u6208\u6209\u620D\u620C\u6214\u621B',
      ],
      [
        'd9a1',
        '\u621E\u6221\u622A\u622E\u6230\u6232\u6233\u6241\u624E\u625E\u6263\u625B\u6260\u6268\u627C\u6282\u6289\u627E\u6292\u6293\u6296\u62D4\u6283\u6294\u62D7\u62D1\u62BB\u62CF\u62FF\u62C6\u64D4\u62C8\u62DC\u62CC\u62CA\u62C2\u62C7\u629B\u62C9\u630C\u62EE\u62F1\u6327\u6302\u6308\u62EF\u62F5\u6350\u633E\u634D\u641C\u634F\u6396\u638E\u6380\u63AB\u6376\u63A3\u638F\u6389\u639F\u63B5\u636B\u6369\u63BE\u63E9\u63C0\u63C6\u63E3\u63C9\u63D2\u63F6\u63C4\u6416\u6434\u6406\u6413\u6426\u6436\u651D\u6417\u6428\u640F\u6467\u646F\u6476\u644E\u652A\u6495\u6493\u64A5\u64A9\u6488\u64BC',
      ],
      [
        'daa1',
        '\u64DA\u64D2\u64C5\u64C7\u64BB\u64D8\u64C2\u64F1\u64E7\u8209\u64E0\u64E1\u62AC\u64E3\u64EF\u652C\u64F6\u64F4\u64F2\u64FA\u6500\u64FD\u6518\u651C\u6505\u6524\u6523\u652B\u6534\u6535\u6537\u6536\u6538\u754B\u6548\u6556\u6555\u654D\u6558\u655E\u655D\u6572\u6578\u6582\u6583\u8B8A\u659B\u659F\u65AB\u65B7\u65C3\u65C6\u65C1\u65C4\u65CC\u65D2\u65DB\u65D9\u65E0\u65E1\u65F1\u6772\u660A\u6603\u65FB\u6773\u6635\u6636\u6634\u661C\u664F\u6644\u6649\u6641\u665E\u665D\u6664\u6667\u6668\u665F\u6662\u6670\u6683\u6688\u668E\u6689\u6684\u6698\u669D\u66C1\u66B9\u66C9\u66BE\u66BC',
      ],
      [
        'dba1',
        '\u66C4\u66B8\u66D6\u66DA\u66E0\u663F\u66E6\u66E9\u66F0\u66F5\u66F7\u670F\u6716\u671E\u6726\u6727\u9738\u672E\u673F\u6736\u6741\u6738\u6737\u6746\u675E\u6760\u6759\u6763\u6764\u6789\u6770\u67A9\u677C\u676A\u678C\u678B\u67A6\u67A1\u6785\u67B7\u67EF\u67B4\u67EC\u67B3\u67E9\u67B8\u67E4\u67DE\u67DD\u67E2\u67EE\u67B9\u67CE\u67C6\u67E7\u6A9C\u681E\u6846\u6829\u6840\u684D\u6832\u684E\u68B3\u682B\u6859\u6863\u6877\u687F\u689F\u688F\u68AD\u6894\u689D\u689B\u6883\u6AAE\u68B9\u6874\u68B5\u68A0\u68BA\u690F\u688D\u687E\u6901\u68CA\u6908\u68D8\u6922\u6926\u68E1\u690C\u68CD',
      ],
      [
        'dca1',
        '\u68D4\u68E7\u68D5\u6936\u6912\u6904\u68D7\u68E3\u6925\u68F9\u68E0\u68EF\u6928\u692A\u691A\u6923\u6921\u68C6\u6979\u6977\u695C\u6978\u696B\u6954\u697E\u696E\u6939\u6974\u693D\u6959\u6930\u6961\u695E\u695D\u6981\u696A\u69B2\u69AE\u69D0\u69BF\u69C1\u69D3\u69BE\u69CE\u5BE8\u69CA\u69DD\u69BB\u69C3\u69A7\u6A2E\u6991\u69A0\u699C\u6995\u69B4\u69DE\u69E8\u6A02\u6A1B\u69FF\u6B0A\u69F9\u69F2\u69E7\u6A05\u69B1\u6A1E\u69ED\u6A14\u69EB\u6A0A\u6A12\u6AC1\u6A23\u6A13\u6A44\u6A0C\u6A72\u6A36\u6A78\u6A47\u6A62\u6A59\u6A66\u6A48\u6A38\u6A22\u6A90\u6A8D\u6AA0\u6A84\u6AA2\u6AA3',
      ],
      [
        'dda1',
        '\u6A97\u8617\u6ABB\u6AC3\u6AC2\u6AB8\u6AB3\u6AAC\u6ADE\u6AD1\u6ADF\u6AAA\u6ADA\u6AEA\u6AFB\u6B05\u8616\u6AFA\u6B12\u6B16\u9B31\u6B1F\u6B38\u6B37\u76DC\u6B39\u98EE\u6B47\u6B43\u6B49\u6B50\u6B59\u6B54\u6B5B\u6B5F\u6B61\u6B78\u6B79\u6B7F\u6B80\u6B84\u6B83\u6B8D\u6B98\u6B95\u6B9E\u6BA4\u6BAA\u6BAB\u6BAF\u6BB2\u6BB1\u6BB3\u6BB7\u6BBC\u6BC6\u6BCB\u6BD3\u6BDF\u6BEC\u6BEB\u6BF3\u6BEF\u9EBE\u6C08\u6C13\u6C14\u6C1B\u6C24\u6C23\u6C5E\u6C55\u6C62\u6C6A\u6C82\u6C8D\u6C9A\u6C81\u6C9B\u6C7E\u6C68\u6C73\u6C92\u6C90\u6CC4\u6CF1\u6CD3\u6CBD\u6CD7\u6CC5\u6CDD\u6CAE\u6CB1\u6CBE',
      ],
      [
        'dea1',
        '\u6CBA\u6CDB\u6CEF\u6CD9\u6CEA\u6D1F\u884D\u6D36\u6D2B\u6D3D\u6D38\u6D19\u6D35\u6D33\u6D12\u6D0C\u6D63\u6D93\u6D64\u6D5A\u6D79\u6D59\u6D8E\u6D95\u6FE4\u6D85\u6DF9\u6E15\u6E0A\u6DB5\u6DC7\u6DE6\u6DB8\u6DC6\u6DEC\u6DDE\u6DCC\u6DE8\u6DD2\u6DC5\u6DFA\u6DD9\u6DE4\u6DD5\u6DEA\u6DEE\u6E2D\u6E6E\u6E2E\u6E19\u6E72\u6E5F\u6E3E\u6E23\u6E6B\u6E2B\u6E76\u6E4D\u6E1F\u6E43\u6E3A\u6E4E\u6E24\u6EFF\u6E1D\u6E38\u6E82\u6EAA\u6E98\u6EC9\u6EB7\u6ED3\u6EBD\u6EAF\u6EC4\u6EB2\u6ED4\u6ED5\u6E8F\u6EA5\u6EC2\u6E9F\u6F41\u6F11\u704C\u6EEC\u6EF8\u6EFE\u6F3F\u6EF2\u6F31\u6EEF\u6F32\u6ECC',
      ],
      [
        'dfa1',
        '\u6F3E\u6F13\u6EF7\u6F86\u6F7A\u6F78\u6F81\u6F80\u6F6F\u6F5B\u6FF3\u6F6D\u6F82\u6F7C\u6F58\u6F8E\u6F91\u6FC2\u6F66\u6FB3\u6FA3\u6FA1\u6FA4\u6FB9\u6FC6\u6FAA\u6FDF\u6FD5\u6FEC\u6FD4\u6FD8\u6FF1\u6FEE\u6FDB\u7009\u700B\u6FFA\u7011\u7001\u700F\u6FFE\u701B\u701A\u6F74\u701D\u7018\u701F\u7030\u703E\u7032\u7051\u7063\u7099\u7092\u70AF\u70F1\u70AC\u70B8\u70B3\u70AE\u70DF\u70CB\u70DD\u70D9\u7109\u70FD\u711C\u7119\u7165\u7155\u7188\u7166\u7162\u714C\u7156\u716C\u718F\u71FB\u7184\u7195\u71A8\u71AC\u71D7\u71B9\u71BE\u71D2\u71C9\u71D4\u71CE\u71E0\u71EC\u71E7\u71F5\u71FC',
      ],
      [
        'e0a1',
        '\u71F9\u71FF\u720D\u7210\u721B\u7228\u722D\u722C\u7230\u7232\u723B\u723C\u723F\u7240\u7246\u724B\u7258\u7274\u727E\u7282\u7281\u7287\u7292\u7296\u72A2\u72A7\u72B9\u72B2\u72C3\u72C6\u72C4\u72CE\u72D2\u72E2\u72E0\u72E1\u72F9\u72F7\u500F\u7317\u730A\u731C\u7316\u731D\u7334\u732F\u7329\u7325\u733E\u734E\u734F\u9ED8\u7357\u736A\u7368\u7370\u7378\u7375\u737B\u737A\u73C8\u73B3\u73CE\u73BB\u73C0\u73E5\u73EE\u73DE\u74A2\u7405\u746F\u7425\u73F8\u7432\u743A\u7455\u743F\u745F\u7459\u7441\u745C\u7469\u7470\u7463\u746A\u7476\u747E\u748B\u749E\u74A7\u74CA\u74CF\u74D4\u73F1',
      ],
      [
        'e1a1',
        '\u74E0\u74E3\u74E7\u74E9\u74EE\u74F2\u74F0\u74F1\u74F8\u74F7\u7504\u7503\u7505\u750C\u750E\u750D\u7515\u7513\u751E\u7526\u752C\u753C\u7544\u754D\u754A\u7549\u755B\u7546\u755A\u7569\u7564\u7567\u756B\u756D\u7578\u7576\u7586\u7587\u7574\u758A\u7589\u7582\u7594\u759A\u759D\u75A5\u75A3\u75C2\u75B3\u75C3\u75B5\u75BD\u75B8\u75BC\u75B1\u75CD\u75CA\u75D2\u75D9\u75E3\u75DE\u75FE\u75FF\u75FC\u7601\u75F0\u75FA\u75F2\u75F3\u760B\u760D\u7609\u761F\u7627\u7620\u7621\u7622\u7624\u7634\u7630\u763B\u7647\u7648\u7646\u765C\u7658\u7661\u7662\u7668\u7669\u766A\u7667\u766C\u7670',
      ],
      [
        'e2a1',
        '\u7672\u7676\u7678\u767C\u7680\u7683\u7688\u768B\u768E\u7696\u7693\u7699\u769A\u76B0\u76B4\u76B8\u76B9\u76BA\u76C2\u76CD\u76D6\u76D2\u76DE\u76E1\u76E5\u76E7\u76EA\u862F\u76FB\u7708\u7707\u7704\u7729\u7724\u771E\u7725\u7726\u771B\u7737\u7738\u7747\u775A\u7768\u776B\u775B\u7765\u777F\u777E\u7779\u778E\u778B\u7791\u77A0\u779E\u77B0\u77B6\u77B9\u77BF\u77BC\u77BD\u77BB\u77C7\u77CD\u77D7\u77DA\u77DC\u77E3\u77EE\u77FC\u780C\u7812\u7926\u7820\u792A\u7845\u788E\u7874\u7886\u787C\u789A\u788C\u78A3\u78B5\u78AA\u78AF\u78D1\u78C6\u78CB\u78D4\u78BE\u78BC\u78C5\u78CA\u78EC',
      ],
      [
        'e3a1',
        '\u78E7\u78DA\u78FD\u78F4\u7907\u7912\u7911\u7919\u792C\u792B\u7940\u7960\u7957\u795F\u795A\u7955\u7953\u797A\u797F\u798A\u799D\u79A7\u9F4B\u79AA\u79AE\u79B3\u79B9\u79BA\u79C9\u79D5\u79E7\u79EC\u79E1\u79E3\u7A08\u7A0D\u7A18\u7A19\u7A20\u7A1F\u7980\u7A31\u7A3B\u7A3E\u7A37\u7A43\u7A57\u7A49\u7A61\u7A62\u7A69\u9F9D\u7A70\u7A79\u7A7D\u7A88\u7A97\u7A95\u7A98\u7A96\u7AA9\u7AC8\u7AB0\u7AB6\u7AC5\u7AC4\u7ABF\u9083\u7AC7\u7ACA\u7ACD\u7ACF\u7AD5\u7AD3\u7AD9\u7ADA\u7ADD\u7AE1\u7AE2\u7AE6\u7AED\u7AF0\u7B02\u7B0F\u7B0A\u7B06\u7B33\u7B18\u7B19\u7B1E\u7B35\u7B28\u7B36\u7B50',
      ],
      [
        'e4a1',
        '\u7B7A\u7B04\u7B4D\u7B0B\u7B4C\u7B45\u7B75\u7B65\u7B74\u7B67\u7B70\u7B71\u7B6C\u7B6E\u7B9D\u7B98\u7B9F\u7B8D\u7B9C\u7B9A\u7B8B\u7B92\u7B8F\u7B5D\u7B99\u7BCB\u7BC1\u7BCC\u7BCF\u7BB4\u7BC6\u7BDD\u7BE9\u7C11\u7C14\u7BE6\u7BE5\u7C60\u7C00\u7C07\u7C13\u7BF3\u7BF7\u7C17\u7C0D\u7BF6\u7C23\u7C27\u7C2A\u7C1F\u7C37\u7C2B\u7C3D\u7C4C\u7C43\u7C54\u7C4F\u7C40\u7C50\u7C58\u7C5F\u7C64\u7C56\u7C65\u7C6C\u7C75\u7C83\u7C90\u7CA4\u7CAD\u7CA2\u7CAB\u7CA1\u7CA8\u7CB3\u7CB2\u7CB1\u7CAE\u7CB9\u7CBD\u7CC0\u7CC5\u7CC2\u7CD8\u7CD2\u7CDC\u7CE2\u9B3B\u7CEF\u7CF2\u7CF4\u7CF6\u7CFA\u7D06',
      ],
      [
        'e5a1',
        '\u7D02\u7D1C\u7D15\u7D0A\u7D45\u7D4B\u7D2E\u7D32\u7D3F\u7D35\u7D46\u7D73\u7D56\u7D4E\u7D72\u7D68\u7D6E\u7D4F\u7D63\u7D93\u7D89\u7D5B\u7D8F\u7D7D\u7D9B\u7DBA\u7DAE\u7DA3\u7DB5\u7DC7\u7DBD\u7DAB\u7E3D\u7DA2\u7DAF\u7DDC\u7DB8\u7D9F\u7DB0\u7DD8\u7DDD\u7DE4\u7DDE\u7DFB\u7DF2\u7DE1\u7E05\u7E0A\u7E23\u7E21\u7E12\u7E31\u7E1F\u7E09\u7E0B\u7E22\u7E46\u7E66\u7E3B\u7E35\u7E39\u7E43\u7E37\u7E32\u7E3A\u7E67\u7E5D\u7E56\u7E5E\u7E59\u7E5A\u7E79\u7E6A\u7E69\u7E7C\u7E7B\u7E83\u7DD5\u7E7D\u8FAE\u7E7F\u7E88\u7E89\u7E8C\u7E92\u7E90\u7E93\u7E94\u7E96\u7E8E\u7E9B\u7E9C\u7F38\u7F3A',
      ],
      [
        'e6a1',
        '\u7F45\u7F4C\u7F4D\u7F4E\u7F50\u7F51\u7F55\u7F54\u7F58\u7F5F\u7F60\u7F68\u7F69\u7F67\u7F78\u7F82\u7F86\u7F83\u7F88\u7F87\u7F8C\u7F94\u7F9E\u7F9D\u7F9A\u7FA3\u7FAF\u7FB2\u7FB9\u7FAE\u7FB6\u7FB8\u8B71\u7FC5\u7FC6\u7FCA\u7FD5\u7FD4\u7FE1\u7FE6\u7FE9\u7FF3\u7FF9\u98DC\u8006\u8004\u800B\u8012\u8018\u8019\u801C\u8021\u8028\u803F\u803B\u804A\u8046\u8052\u8058\u805A\u805F\u8062\u8068\u8073\u8072\u8070\u8076\u8079\u807D\u807F\u8084\u8086\u8085\u809B\u8093\u809A\u80AD\u5190\u80AC\u80DB\u80E5\u80D9\u80DD\u80C4\u80DA\u80D6\u8109\u80EF\u80F1\u811B\u8129\u8123\u812F\u814B',
      ],
      [
        'e7a1',
        '\u968B\u8146\u813E\u8153\u8151\u80FC\u8171\u816E\u8165\u8166\u8174\u8183\u8188\u818A\u8180\u8182\u81A0\u8195\u81A4\u81A3\u815F\u8193\u81A9\u81B0\u81B5\u81BE\u81B8\u81BD\u81C0\u81C2\u81BA\u81C9\u81CD\u81D1\u81D9\u81D8\u81C8\u81DA\u81DF\u81E0\u81E7\u81FA\u81FB\u81FE\u8201\u8202\u8205\u8207\u820A\u820D\u8210\u8216\u8229\u822B\u8238\u8233\u8240\u8259\u8258\u825D\u825A\u825F\u8264\u8262\u8268\u826A\u826B\u822E\u8271\u8277\u8278\u827E\u828D\u8292\u82AB\u829F\u82BB\u82AC\u82E1\u82E3\u82DF\u82D2\u82F4\u82F3\u82FA\u8393\u8303\u82FB\u82F9\u82DE\u8306\u82DC\u8309\u82D9',
      ],
      [
        'e8a1',
        '\u8335\u8334\u8316\u8332\u8331\u8340\u8339\u8350\u8345\u832F\u832B\u8317\u8318\u8385\u839A\u83AA\u839F\u83A2\u8396\u8323\u838E\u8387\u838A\u837C\u83B5\u8373\u8375\u83A0\u8389\u83A8\u83F4\u8413\u83EB\u83CE\u83FD\u8403\u83D8\u840B\u83C1\u83F7\u8407\u83E0\u83F2\u840D\u8422\u8420\u83BD\u8438\u8506\u83FB\u846D\u842A\u843C\u855A\u8484\u8477\u846B\u84AD\u846E\u8482\u8469\u8446\u842C\u846F\u8479\u8435\u84CA\u8462\u84B9\u84BF\u849F\u84D9\u84CD\u84BB\u84DA\u84D0\u84C1\u84C6\u84D6\u84A1\u8521\u84FF\u84F4\u8517\u8518\u852C\u851F\u8515\u8514\u84FC\u8540\u8563\u8558\u8548',
      ],
      [
        'e9a1',
        '\u8541\u8602\u854B\u8555\u8580\u85A4\u8588\u8591\u858A\u85A8\u856D\u8594\u859B\u85EA\u8587\u859C\u8577\u857E\u8590\u85C9\u85BA\u85CF\u85B9\u85D0\u85D5\u85DD\u85E5\u85DC\u85F9\u860A\u8613\u860B\u85FE\u85FA\u8606\u8622\u861A\u8630\u863F\u864D\u4E55\u8654\u865F\u8667\u8671\u8693\u86A3\u86A9\u86AA\u868B\u868C\u86B6\u86AF\u86C4\u86C6\u86B0\u86C9\u8823\u86AB\u86D4\u86DE\u86E9\u86EC\u86DF\u86DB\u86EF\u8712\u8706\u8708\u8700\u8703\u86FB\u8711\u8709\u870D\u86F9\u870A\u8734\u873F\u8737\u873B\u8725\u8729\u871A\u8760\u875F\u8778\u874C\u874E\u8774\u8757\u8768\u876E\u8759',
      ],
      [
        'eaa1',
        '\u8753\u8763\u876A\u8805\u87A2\u879F\u8782\u87AF\u87CB\u87BD\u87C0\u87D0\u96D6\u87AB\u87C4\u87B3\u87C7\u87C6\u87BB\u87EF\u87F2\u87E0\u880F\u880D\u87FE\u87F6\u87F7\u880E\u87D2\u8811\u8816\u8815\u8822\u8821\u8831\u8836\u8839\u8827\u883B\u8844\u8842\u8852\u8859\u885E\u8862\u886B\u8881\u887E\u889E\u8875\u887D\u88B5\u8872\u8882\u8897\u8892\u88AE\u8899\u88A2\u888D\u88A4\u88B0\u88BF\u88B1\u88C3\u88C4\u88D4\u88D8\u88D9\u88DD\u88F9\u8902\u88FC\u88F4\u88E8\u88F2\u8904\u890C\u890A\u8913\u8943\u891E\u8925\u892A\u892B\u8941\u8944\u893B\u8936\u8938\u894C\u891D\u8960\u895E',
      ],
      [
        'eba1',
        '\u8966\u8964\u896D\u896A\u896F\u8974\u8977\u897E\u8983\u8988\u898A\u8993\u8998\u89A1\u89A9\u89A6\u89AC\u89AF\u89B2\u89BA\u89BD\u89BF\u89C0\u89DA\u89DC\u89DD\u89E7\u89F4\u89F8\u8A03\u8A16\u8A10\u8A0C\u8A1B\u8A1D\u8A25\u8A36\u8A41\u8A5B\u8A52\u8A46\u8A48\u8A7C\u8A6D\u8A6C\u8A62\u8A85\u8A82\u8A84\u8AA8\u8AA1\u8A91\u8AA5\u8AA6\u8A9A\u8AA3\u8AC4\u8ACD\u8AC2\u8ADA\u8AEB\u8AF3\u8AE7\u8AE4\u8AF1\u8B14\u8AE0\u8AE2\u8AF7\u8ADE\u8ADB\u8B0C\u8B07\u8B1A\u8AE1\u8B16\u8B10\u8B17\u8B20\u8B33\u97AB\u8B26\u8B2B\u8B3E\u8B28\u8B41\u8B4C\u8B4F\u8B4E\u8B49\u8B56\u8B5B\u8B5A\u8B6B',
      ],
      [
        'eca1',
        '\u8B5F\u8B6C\u8B6F\u8B74\u8B7D\u8B80\u8B8C\u8B8E\u8B92\u8B93\u8B96\u8B99\u8B9A\u8C3A\u8C41\u8C3F\u8C48\u8C4C\u8C4E\u8C50\u8C55\u8C62\u8C6C\u8C78\u8C7A\u8C82\u8C89\u8C85\u8C8A\u8C8D\u8C8E\u8C94\u8C7C\u8C98\u621D\u8CAD\u8CAA\u8CBD\u8CB2\u8CB3\u8CAE\u8CB6\u8CC8\u8CC1\u8CE4\u8CE3\u8CDA\u8CFD\u8CFA\u8CFB\u8D04\u8D05\u8D0A\u8D07\u8D0F\u8D0D\u8D10\u9F4E\u8D13\u8CCD\u8D14\u8D16\u8D67\u8D6D\u8D71\u8D73\u8D81\u8D99\u8DC2\u8DBE\u8DBA\u8DCF\u8DDA\u8DD6\u8DCC\u8DDB\u8DCB\u8DEA\u8DEB\u8DDF\u8DE3\u8DFC\u8E08\u8E09\u8DFF\u8E1D\u8E1E\u8E10\u8E1F\u8E42\u8E35\u8E30\u8E34\u8E4A',
      ],
      [
        'eda1',
        '\u8E47\u8E49\u8E4C\u8E50\u8E48\u8E59\u8E64\u8E60\u8E2A\u8E63\u8E55\u8E76\u8E72\u8E7C\u8E81\u8E87\u8E85\u8E84\u8E8B\u8E8A\u8E93\u8E91\u8E94\u8E99\u8EAA\u8EA1\u8EAC\u8EB0\u8EC6\u8EB1\u8EBE\u8EC5\u8EC8\u8ECB\u8EDB\u8EE3\u8EFC\u8EFB\u8EEB\u8EFE\u8F0A\u8F05\u8F15\u8F12\u8F19\u8F13\u8F1C\u8F1F\u8F1B\u8F0C\u8F26\u8F33\u8F3B\u8F39\u8F45\u8F42\u8F3E\u8F4C\u8F49\u8F46\u8F4E\u8F57\u8F5C\u8F62\u8F63\u8F64\u8F9C\u8F9F\u8FA3\u8FAD\u8FAF\u8FB7\u8FDA\u8FE5\u8FE2\u8FEA\u8FEF\u9087\u8FF4\u9005\u8FF9\u8FFA\u9011\u9015\u9021\u900D\u901E\u9016\u900B\u9027\u9036\u9035\u9039\u8FF8',
      ],
      [
        'eea1',
        '\u904F\u9050\u9051\u9052\u900E\u9049\u903E\u9056\u9058\u905E\u9068\u906F\u9076\u96A8\u9072\u9082\u907D\u9081\u9080\u908A\u9089\u908F\u90A8\u90AF\u90B1\u90B5\u90E2\u90E4\u6248\u90DB\u9102\u9112\u9119\u9132\u9130\u914A\u9156\u9158\u9163\u9165\u9169\u9173\u9172\u918B\u9189\u9182\u91A2\u91AB\u91AF\u91AA\u91B5\u91B4\u91BA\u91C0\u91C1\u91C9\u91CB\u91D0\u91D6\u91DF\u91E1\u91DB\u91FC\u91F5\u91F6\u921E\u91FF\u9214\u922C\u9215\u9211\u925E\u9257\u9245\u9249\u9264\u9248\u9295\u923F\u924B\u9250\u929C\u9296\u9293\u929B\u925A\u92CF\u92B9\u92B7\u92E9\u930F\u92FA\u9344\u932E',
      ],
      [
        'efa1',
        '\u9319\u9322\u931A\u9323\u933A\u9335\u933B\u935C\u9360\u937C\u936E\u9356\u93B0\u93AC\u93AD\u9394\u93B9\u93D6\u93D7\u93E8\u93E5\u93D8\u93C3\u93DD\u93D0\u93C8\u93E4\u941A\u9414\u9413\u9403\u9407\u9410\u9436\u942B\u9435\u9421\u943A\u9441\u9452\u9444\u945B\u9460\u9462\u945E\u946A\u9229\u9470\u9475\u9477\u947D\u945A\u947C\u947E\u9481\u947F\u9582\u9587\u958A\u9594\u9596\u9598\u9599\u95A0\u95A8\u95A7\u95AD\u95BC\u95BB\u95B9\u95BE\u95CA\u6FF6\u95C3\u95CD\u95CC\u95D5\u95D4\u95D6\u95DC\u95E1\u95E5\u95E2\u9621\u9628\u962E\u962F\u9642\u964C\u964F\u964B\u9677\u965C\u965E',
      ],
      [
        'f0a1',
        '\u965D\u965F\u9666\u9672\u966C\u968D\u9698\u9695\u9697\u96AA\u96A7\u96B1\u96B2\u96B0\u96B4\u96B6\u96B8\u96B9\u96CE\u96CB\u96C9\u96CD\u894D\u96DC\u970D\u96D5\u96F9\u9704\u9706\u9708\u9713\u970E\u9711\u970F\u9716\u9719\u9724\u972A\u9730\u9739\u973D\u973E\u9744\u9746\u9748\u9742\u9749\u975C\u9760\u9764\u9766\u9768\u52D2\u976B\u9771\u9779\u9785\u977C\u9781\u977A\u9786\u978B\u978F\u9790\u979C\u97A8\u97A6\u97A3\u97B3\u97B4\u97C3\u97C6\u97C8\u97CB\u97DC\u97ED\u9F4F\u97F2\u7ADF\u97F6\u97F5\u980F\u980C\u9838\u9824\u9821\u9837\u983D\u9846\u984F\u984B\u986B\u986F\u9870',
      ],
      [
        'f1a1',
        '\u9871\u9874\u9873\u98AA\u98AF\u98B1\u98B6\u98C4\u98C3\u98C6\u98E9\u98EB\u9903\u9909\u9912\u9914\u9918\u9921\u991D\u991E\u9924\u9920\u992C\u992E\u993D\u993E\u9942\u9949\u9945\u9950\u994B\u9951\u9952\u994C\u9955\u9997\u9998\u99A5\u99AD\u99AE\u99BC\u99DF\u99DB\u99DD\u99D8\u99D1\u99ED\u99EE\u99F1\u99F2\u99FB\u99F8\u9A01\u9A0F\u9A05\u99E2\u9A19\u9A2B\u9A37\u9A45\u9A42\u9A40\u9A43\u9A3E\u9A55\u9A4D\u9A5B\u9A57\u9A5F\u9A62\u9A65\u9A64\u9A69\u9A6B\u9A6A\u9AAD\u9AB0\u9ABC\u9AC0\u9ACF\u9AD1\u9AD3\u9AD4\u9ADE\u9ADF\u9AE2\u9AE3\u9AE6\u9AEF\u9AEB\u9AEE\u9AF4\u9AF1\u9AF7',
      ],
      [
        'f2a1',
        '\u9AFB\u9B06\u9B18\u9B1A\u9B1F\u9B22\u9B23\u9B25\u9B27\u9B28\u9B29\u9B2A\u9B2E\u9B2F\u9B32\u9B44\u9B43\u9B4F\u9B4D\u9B4E\u9B51\u9B58\u9B74\u9B93\u9B83\u9B91\u9B96\u9B97\u9B9F\u9BA0\u9BA8\u9BB4\u9BC0\u9BCA\u9BB9\u9BC6\u9BCF\u9BD1\u9BD2\u9BE3\u9BE2\u9BE4\u9BD4\u9BE1\u9C3A\u9BF2\u9BF1\u9BF0\u9C15\u9C14\u9C09\u9C13\u9C0C\u9C06\u9C08\u9C12\u9C0A\u9C04\u9C2E\u9C1B\u9C25\u9C24\u9C21\u9C30\u9C47\u9C32\u9C46\u9C3E\u9C5A\u9C60\u9C67\u9C76\u9C78\u9CE7\u9CEC\u9CF0\u9D09\u9D08\u9CEB\u9D03\u9D06\u9D2A\u9D26\u9DAF\u9D23\u9D1F\u9D44\u9D15\u9D12\u9D41\u9D3F\u9D3E\u9D46\u9D48',
      ],
      [
        'f3a1',
        '\u9D5D\u9D5E\u9D64\u9D51\u9D50\u9D59\u9D72\u9D89\u9D87\u9DAB\u9D6F\u9D7A\u9D9A\u9DA4\u9DA9\u9DB2\u9DC4\u9DC1\u9DBB\u9DB8\u9DBA\u9DC6\u9DCF\u9DC2\u9DD9\u9DD3\u9DF8\u9DE6\u9DED\u9DEF\u9DFD\u9E1A\u9E1B\u9E1E\u9E75\u9E79\u9E7D\u9E81\u9E88\u9E8B\u9E8C\u9E92\u9E95\u9E91\u9E9D\u9EA5\u9EA9\u9EB8\u9EAA\u9EAD\u9761\u9ECC\u9ECE\u9ECF\u9ED0\u9ED4\u9EDC\u9EDE\u9EDD\u9EE0\u9EE5\u9EE8\u9EEF\u9EF4\u9EF6\u9EF7\u9EF9\u9EFB\u9EFC\u9EFD\u9F07\u9F08\u76B7\u9F15\u9F21\u9F2C\u9F3E\u9F4A\u9F52\u9F54\u9F63\u9F5F\u9F60\u9F61\u9F66\u9F67\u9F6C\u9F6A\u9F77\u9F72\u9F76\u9F95\u9F9C\u9FA0',
      ],
      ['f4a1', '\u582F\u69C7\u9059\u7464\u51DC\u7199'],
      [
        'f9a1',
        '\u7E8A\u891C\u9348\u9288\u84DC\u4FC9\u70BB\u6631\u68C8\u92F9\u66FB\u5F45\u4E28\u4EE1\u4EFC\u4F00\u4F03\u4F39\u4F56\u4F92\u4F8A\u4F9A\u4F94\u4FCD\u5040\u5022\u4FFF\u501E\u5046\u5070\u5042\u5094\u50F4\u50D8\u514A\u5164\u519D\u51BE\u51EC\u5215\u529C\u52A6\u52C0\u52DB\u5300\u5307\u5324\u5372\u5393\u53B2\u53DD\uFA0E\u549C\u548A\u54A9\u54FF\u5586\u5759\u5765\u57AC\u57C8\u57C7\uFA0F\uFA10\u589E\u58B2\u590B\u5953\u595B\u595D\u5963\u59A4\u59BA\u5B56\u5BC0\u752F\u5BD8\u5BEC\u5C1E\u5CA6\u5CBA\u5CF5\u5D27\u5D53\uFA11\u5D42\u5D6D\u5DB8\u5DB9\u5DD0\u5F21\u5F34\u5F67\u5FB7',
      ],
      [
        'faa1',
        '\u5FDE\u605D\u6085\u608A\u60DE\u60D5\u6120\u60F2\u6111\u6137\u6130\u6198\u6213\u62A6\u63F5\u6460\u649D\u64CE\u654E\u6600\u6615\u663B\u6609\u662E\u661E\u6624\u6665\u6657\u6659\uFA12\u6673\u6699\u66A0\u66B2\u66BF\u66FA\u670E\uF929\u6766\u67BB\u6852\u67C0\u6801\u6844\u68CF\uFA13\u6968\uFA14\u6998\u69E2\u6A30\u6A6B\u6A46\u6A73\u6A7E\u6AE2\u6AE4\u6BD6\u6C3F\u6C5C\u6C86\u6C6F\u6CDA\u6D04\u6D87\u6D6F\u6D96\u6DAC\u6DCF\u6DF8\u6DF2\u6DFC\u6E39\u6E5C\u6E27\u6E3C\u6EBF\u6F88\u6FB5\u6FF5\u7005\u7007\u7028\u7085\u70AB\u710F\u7104\u715C\u7146\u7147\uFA15\u71C1\u71FE\u72B1',
      ],
      [
        'fba1',
        '\u72BE\u7324\uFA16\u7377\u73BD\u73C9\u73D6\u73E3\u73D2\u7407\u73F5\u7426\u742A\u7429\u742E\u7462\u7489\u749F\u7501\u756F\u7682\u769C\u769E\u769B\u76A6\uFA17\u7746\u52AF\u7821\u784E\u7864\u787A\u7930\uFA18\uFA19\uFA1A\u7994\uFA1B\u799B\u7AD1\u7AE7\uFA1C\u7AEB\u7B9E\uFA1D\u7D48\u7D5C\u7DB7\u7DA0\u7DD6\u7E52\u7F47\u7FA1\uFA1E\u8301\u8362\u837F\u83C7\u83F6\u8448\u84B4\u8553\u8559\u856B\uFA1F\u85B0\uFA20\uFA21\u8807\u88F5\u8A12\u8A37\u8A79\u8AA7\u8ABE\u8ADF\uFA22\u8AF6\u8B53\u8B7F\u8CF0\u8CF4\u8D12\u8D76\uFA23\u8ECF\uFA24\uFA25\u9067\u90DE\uFA26\u9115\u9127\u91DA',
      ],
      [
        'fca1',
        '\u91D7\u91DE\u91ED\u91EE\u91E4\u91E5\u9206\u9210\u920A\u923A\u9240\u923C\u924E\u9259\u9251\u9239\u9267\u92A7\u9277\u9278\u92E7\u92D7\u92D9\u92D0\uFA27\u92D5\u92E0\u92D3\u9325\u9321\u92FB\uFA28\u931E\u92FF\u931D\u9302\u9370\u9357\u93A4\u93C6\u93DE\u93F8\u9431\u9445\u9448\u9592\uF9DC\uFA29\u969D\u96AF\u9733\u973B\u9743\u974D\u974F\u9751\u9755\u9857\u9865\uFA2A\uFA2B\u9927\uFA2C\u999E\u9A4E\u9AD9\u9ADC\u9B75\u9B72\u9B8F\u9BB1\u9BBB\u9C00\u9D70\u9D6B\uFA2D\u9E19\u9ED1',
      ],
      ['fcf1', '\u2170', 9, '\uFFE2\uFFE4\uFF07\uFF02'],
      [
        '8fa2af',
        '\u02D8\u02C7\xB8\u02D9\u02DD\xAF\u02DB\u02DA\uFF5E\u0384\u0385',
      ],
      ['8fa2c2', '\xA1\xA6\xBF'],
      ['8fa2eb', '\xBA\xAA\xA9\xAE\u2122\xA4\u2116'],
      ['8fa6e1', '\u0386\u0388\u0389\u038A\u03AA'],
      ['8fa6e7', '\u038C'],
      ['8fa6e9', '\u038E\u03AB'],
      ['8fa6ec', '\u038F'],
      [
        '8fa6f1',
        '\u03AC\u03AD\u03AE\u03AF\u03CA\u0390\u03CC\u03C2\u03CD\u03CB\u03B0\u03CE',
      ],
      ['8fa7c2', '\u0402', 10, '\u040E\u040F'],
      ['8fa7f2', '\u0452', 10, '\u045E\u045F'],
      ['8fa9a1', '\xC6\u0110'],
      ['8fa9a4', '\u0126'],
      ['8fa9a6', '\u0132'],
      ['8fa9a8', '\u0141\u013F'],
      ['8fa9ab', '\u014A\xD8\u0152'],
      ['8fa9af', '\u0166\xDE'],
      [
        '8fa9c1',
        '\xE6\u0111\xF0\u0127\u0131\u0133\u0138\u0142\u0140\u0149\u014B\xF8\u0153\xDF\u0167\xFE',
      ],
      [
        '8faaa1',
        '\xC1\xC0\xC4\xC2\u0102\u01CD\u0100\u0104\xC5\xC3\u0106\u0108\u010C\xC7\u010A\u010E\xC9\xC8\xCB\xCA\u011A\u0116\u0112\u0118',
      ],
      [
        '8faaba',
        '\u011C\u011E\u0122\u0120\u0124\xCD\xCC\xCF\xCE\u01CF\u0130\u012A\u012E\u0128\u0134\u0136\u0139\u013D\u013B\u0143\u0147\u0145\xD1\xD3\xD2\xD6\xD4\u01D1\u0150\u014C\xD5\u0154\u0158\u0156\u015A\u015C\u0160\u015E\u0164\u0162\xDA\xD9\xDC\xDB\u016C\u01D3\u0170\u016A\u0172\u016E\u0168\u01D7\u01DB\u01D9\u01D5\u0174\xDD\u0178\u0176\u0179\u017D\u017B',
      ],
      [
        '8faba1',
        '\xE1\xE0\xE4\xE2\u0103\u01CE\u0101\u0105\xE5\xE3\u0107\u0109\u010D\xE7\u010B\u010F\xE9\xE8\xEB\xEA\u011B\u0117\u0113\u0119\u01F5\u011D\u011F',
      ],
      ['8fabbd', '\u0121\u0125\xED\xEC\xEF\xEE\u01D0'],
      [
        '8fabc5',
        '\u012B\u012F\u0129\u0135\u0137\u013A\u013E\u013C\u0144\u0148\u0146\xF1\xF3\xF2\xF6\xF4\u01D2\u0151\u014D\xF5\u0155\u0159\u0157\u015B\u015D\u0161\u015F\u0165\u0163\xFA\xF9\xFC\xFB\u016D\u01D4\u0171\u016B\u0173\u016F\u0169\u01D8\u01DC\u01DA\u01D6\u0175\xFD\xFF\u0177\u017A\u017E\u017C',
      ],
      [
        '8fb0a1',
        '\u4E02\u4E04\u4E05\u4E0C\u4E12\u4E1F\u4E23\u4E24\u4E28\u4E2B\u4E2E\u4E2F\u4E30\u4E35\u4E40\u4E41\u4E44\u4E47\u4E51\u4E5A\u4E5C\u4E63\u4E68\u4E69\u4E74\u4E75\u4E79\u4E7F\u4E8D\u4E96\u4E97\u4E9D\u4EAF\u4EB9\u4EC3\u4ED0\u4EDA\u4EDB\u4EE0\u4EE1\u4EE2\u4EE8\u4EEF\u4EF1\u4EF3\u4EF5\u4EFD\u4EFE\u4EFF\u4F00\u4F02\u4F03\u4F08\u4F0B\u4F0C\u4F12\u4F15\u4F16\u4F17\u4F19\u4F2E\u4F31\u4F60\u4F33\u4F35\u4F37\u4F39\u4F3B\u4F3E\u4F40\u4F42\u4F48\u4F49\u4F4B\u4F4C\u4F52\u4F54\u4F56\u4F58\u4F5F\u4F63\u4F6A\u4F6C\u4F6E\u4F71\u4F77\u4F78\u4F79\u4F7A\u4F7D\u4F7E\u4F81\u4F82\u4F84',
      ],
      [
        '8fb1a1',
        '\u4F85\u4F89\u4F8A\u4F8C\u4F8E\u4F90\u4F92\u4F93\u4F94\u4F97\u4F99\u4F9A\u4F9E\u4F9F\u4FB2\u4FB7\u4FB9\u4FBB\u4FBC\u4FBD\u4FBE\u4FC0\u4FC1\u4FC5\u4FC6\u4FC8\u4FC9\u4FCB\u4FCC\u4FCD\u4FCF\u4FD2\u4FDC\u4FE0\u4FE2\u4FF0\u4FF2\u4FFC\u4FFD\u4FFF\u5000\u5001\u5004\u5007\u500A\u500C\u500E\u5010\u5013\u5017\u5018\u501B\u501C\u501D\u501E\u5022\u5027\u502E\u5030\u5032\u5033\u5035\u5040\u5041\u5042\u5045\u5046\u504A\u504C\u504E\u5051\u5052\u5053\u5057\u5059\u505F\u5060\u5062\u5063\u5066\u5067\u506A\u506D\u5070\u5071\u503B\u5081\u5083\u5084\u5086\u508A\u508E\u508F\u5090',
      ],
      [
        '8fb2a1',
        '\u5092\u5093\u5094\u5096\u509B\u509C\u509E',
        4,
        '\u50AA\u50AF\u50B0\u50B9\u50BA\u50BD\u50C0\u50C3\u50C4\u50C7\u50CC\u50CE\u50D0\u50D3\u50D4\u50D8\u50DC\u50DD\u50DF\u50E2\u50E4\u50E6\u50E8\u50E9\u50EF\u50F1\u50F6\u50FA\u50FE\u5103\u5106\u5107\u5108\u510B\u510C\u510D\u510E\u50F2\u5110\u5117\u5119\u511B\u511C\u511D\u511E\u5123\u5127\u5128\u512C\u512D\u512F\u5131\u5133\u5134\u5135\u5138\u5139\u5142\u514A\u514F\u5153\u5155\u5157\u5158\u515F\u5164\u5166\u517E\u5183\u5184\u518B\u518E\u5198\u519D\u51A1\u51A3\u51AD\u51B8\u51BA\u51BC\u51BE\u51BF\u51C2',
      ],
      [
        '8fb3a1',
        '\u51C8\u51CF\u51D1\u51D2\u51D3\u51D5\u51D8\u51DE\u51E2\u51E5\u51EE\u51F2\u51F3\u51F4\u51F7\u5201\u5202\u5205\u5212\u5213\u5215\u5216\u5218\u5222\u5228\u5231\u5232\u5235\u523C\u5245\u5249\u5255\u5257\u5258\u525A\u525C\u525F\u5260\u5261\u5266\u526E\u5277\u5278\u5279\u5280\u5282\u5285\u528A\u528C\u5293\u5295\u5296\u5297\u5298\u529A\u529C\u52A4\u52A5\u52A6\u52A7\u52AF\u52B0\u52B6\u52B7\u52B8\u52BA\u52BB\u52BD\u52C0\u52C4\u52C6\u52C8\u52CC\u52CF\u52D1\u52D4\u52D6\u52DB\u52DC\u52E1\u52E5\u52E8\u52E9\u52EA\u52EC\u52F0\u52F1\u52F4\u52F6\u52F7\u5300\u5303\u530A\u530B',
      ],
      [
        '8fb4a1',
        '\u530C\u5311\u5313\u5318\u531B\u531C\u531E\u531F\u5325\u5327\u5328\u5329\u532B\u532C\u532D\u5330\u5332\u5335\u533C\u533D\u533E\u5342\u534C\u534B\u5359\u535B\u5361\u5363\u5365\u536C\u536D\u5372\u5379\u537E\u5383\u5387\u5388\u538E\u5393\u5394\u5399\u539D\u53A1\u53A4\u53AA\u53AB\u53AF\u53B2\u53B4\u53B5\u53B7\u53B8\u53BA\u53BD\u53C0\u53C5\u53CF\u53D2\u53D3\u53D5\u53DA\u53DD\u53DE\u53E0\u53E6\u53E7\u53F5\u5402\u5413\u541A\u5421\u5427\u5428\u542A\u542F\u5431\u5434\u5435\u5443\u5444\u5447\u544D\u544F\u545E\u5462\u5464\u5466\u5467\u5469\u546B\u546D\u546E\u5474\u547F',
      ],
      [
        '8fb5a1',
        '\u5481\u5483\u5485\u5488\u5489\u548D\u5491\u5495\u5496\u549C\u549F\u54A1\u54A6\u54A7\u54A9\u54AA\u54AD\u54AE\u54B1\u54B7\u54B9\u54BA\u54BB\u54BF\u54C6\u54CA\u54CD\u54CE\u54E0\u54EA\u54EC\u54EF\u54F6\u54FC\u54FE\u54FF\u5500\u5501\u5505\u5508\u5509\u550C\u550D\u550E\u5515\u552A\u552B\u5532\u5535\u5536\u553B\u553C\u553D\u5541\u5547\u5549\u554A\u554D\u5550\u5551\u5558\u555A\u555B\u555E\u5560\u5561\u5564\u5566\u557F\u5581\u5582\u5586\u5588\u558E\u558F\u5591\u5592\u5593\u5594\u5597\u55A3\u55A4\u55AD\u55B2\u55BF\u55C1\u55C3\u55C6\u55C9\u55CB\u55CC\u55CE\u55D1\u55D2',
      ],
      [
        '8fb6a1',
        '\u55D3\u55D7\u55D8\u55DB\u55DE\u55E2\u55E9\u55F6\u55FF\u5605\u5608\u560A\u560D',
        5,
        '\u5619\u562C\u5630\u5633\u5635\u5637\u5639\u563B\u563C\u563D\u563F\u5640\u5641\u5643\u5644\u5646\u5649\u564B\u564D\u564F\u5654\u565E\u5660\u5661\u5662\u5663\u5666\u5669\u566D\u566F\u5671\u5672\u5675\u5684\u5685\u5688\u568B\u568C\u5695\u5699\u569A\u569D\u569E\u569F\u56A6\u56A7\u56A8\u56A9\u56AB\u56AC\u56AD\u56B1\u56B3\u56B7\u56BE\u56C5\u56C9\u56CA\u56CB\u56CF\u56D0\u56CC\u56CD\u56D9\u56DC\u56DD\u56DF\u56E1\u56E4',
        4,
        '\u56F1\u56EB\u56ED',
      ],
      [
        '8fb7a1',
        '\u56F6\u56F7\u5701\u5702\u5707\u570A\u570C\u5711\u5715\u571A\u571B\u571D\u5720\u5722\u5723\u5724\u5725\u5729\u572A\u572C\u572E\u572F\u5733\u5734\u573D\u573E\u573F\u5745\u5746\u574C\u574D\u5752\u5762\u5765\u5767\u5768\u576B\u576D',
        4,
        '\u5773\u5774\u5775\u5777\u5779\u577A\u577B\u577C\u577E\u5781\u5783\u578C\u5794\u5797\u5799\u579A\u579C\u579D\u579E\u579F\u57A1\u5795\u57A7\u57A8\u57A9\u57AC\u57B8\u57BD\u57C7\u57C8\u57CC\u57CF\u57D5\u57DD\u57DE\u57E4\u57E6\u57E7\u57E9\u57ED\u57F0\u57F5\u57F6\u57F8\u57FD\u57FE\u57FF\u5803\u5804\u5808\u5809\u57E1',
      ],
      [
        '8fb8a1',
        '\u580C\u580D\u581B\u581E\u581F\u5820\u5826\u5827\u582D\u5832\u5839\u583F\u5849\u584C\u584D\u584F\u5850\u5855\u585F\u5861\u5864\u5867\u5868\u5878\u587C\u587F\u5880\u5881\u5887\u5888\u5889\u588A\u588C\u588D\u588F\u5890\u5894\u5896\u589D\u58A0\u58A1\u58A2\u58A6\u58A9\u58B1\u58B2\u58C4\u58BC\u58C2\u58C8\u58CD\u58CE\u58D0\u58D2\u58D4\u58D6\u58DA\u58DD\u58E1\u58E2\u58E9\u58F3\u5905\u5906\u590B\u590C\u5912\u5913\u5914\u8641\u591D\u5921\u5923\u5924\u5928\u592F\u5930\u5933\u5935\u5936\u593F\u5943\u5946\u5952\u5953\u5959\u595B\u595D\u595E\u595F\u5961\u5963\u596B\u596D',
      ],
      [
        '8fb9a1',
        '\u596F\u5972\u5975\u5976\u5979\u597B\u597C\u598B\u598C\u598E\u5992\u5995\u5997\u599F\u59A4\u59A7\u59AD\u59AE\u59AF\u59B0\u59B3\u59B7\u59BA\u59BC\u59C1\u59C3\u59C4\u59C8\u59CA\u59CD\u59D2\u59DD\u59DE\u59DF\u59E3\u59E4\u59E7\u59EE\u59EF\u59F1\u59F2\u59F4\u59F7\u5A00\u5A04\u5A0C\u5A0D\u5A0E\u5A12\u5A13\u5A1E\u5A23\u5A24\u5A27\u5A28\u5A2A\u5A2D\u5A30\u5A44\u5A45\u5A47\u5A48\u5A4C\u5A50\u5A55\u5A5E\u5A63\u5A65\u5A67\u5A6D\u5A77\u5A7A\u5A7B\u5A7E\u5A8B\u5A90\u5A93\u5A96\u5A99\u5A9C\u5A9E\u5A9F\u5AA0\u5AA2\u5AA7\u5AAC\u5AB1\u5AB2\u5AB3\u5AB5\u5AB8\u5ABA\u5ABB\u5ABF',
      ],
      [
        '8fbaa1',
        '\u5AC4\u5AC6\u5AC8\u5ACF\u5ADA\u5ADC\u5AE0\u5AE5\u5AEA\u5AEE\u5AF5\u5AF6\u5AFD\u5B00\u5B01\u5B08\u5B17\u5B34\u5B19\u5B1B\u5B1D\u5B21\u5B25\u5B2D\u5B38\u5B41\u5B4B\u5B4C\u5B52\u5B56\u5B5E\u5B68\u5B6E\u5B6F\u5B7C\u5B7D\u5B7E\u5B7F\u5B81\u5B84\u5B86\u5B8A\u5B8E\u5B90\u5B91\u5B93\u5B94\u5B96\u5BA8\u5BA9\u5BAC\u5BAD\u5BAF\u5BB1\u5BB2\u5BB7\u5BBA\u5BBC\u5BC0\u5BC1\u5BCD\u5BCF\u5BD6',
        4,
        '\u5BE0\u5BEF\u5BF1\u5BF4\u5BFD\u5C0C\u5C17\u5C1E\u5C1F\u5C23\u5C26\u5C29\u5C2B\u5C2C\u5C2E\u5C30\u5C32\u5C35\u5C36\u5C59\u5C5A\u5C5C\u5C62\u5C63\u5C67\u5C68\u5C69',
      ],
      [
        '8fbba1',
        '\u5C6D\u5C70\u5C74\u5C75\u5C7A\u5C7B\u5C7C\u5C7D\u5C87\u5C88\u5C8A\u5C8F\u5C92\u5C9D\u5C9F\u5CA0\u5CA2\u5CA3\u5CA6\u5CAA\u5CB2\u5CB4\u5CB5\u5CBA\u5CC9\u5CCB\u5CD2\u5CDD\u5CD7\u5CEE\u5CF1\u5CF2\u5CF4\u5D01\u5D06\u5D0D\u5D12\u5D2B\u5D23\u5D24\u5D26\u5D27\u5D31\u5D34\u5D39\u5D3D\u5D3F\u5D42\u5D43\u5D46\u5D48\u5D55\u5D51\u5D59\u5D4A\u5D5F\u5D60\u5D61\u5D62\u5D64\u5D6A\u5D6D\u5D70\u5D79\u5D7A\u5D7E\u5D7F\u5D81\u5D83\u5D88\u5D8A\u5D92\u5D93\u5D94\u5D95\u5D99\u5D9B\u5D9F\u5DA0\u5DA7\u5DAB\u5DB0\u5DB4\u5DB8\u5DB9\u5DC3\u5DC7\u5DCB\u5DD0\u5DCE\u5DD8\u5DD9\u5DE0\u5DE4',
      ],
      [
        '8fbca1',
        '\u5DE9\u5DF8\u5DF9\u5E00\u5E07\u5E0D\u5E12\u5E14\u5E15\u5E18\u5E1F\u5E20\u5E2E\u5E28\u5E32\u5E35\u5E3E\u5E4B\u5E50\u5E49\u5E51\u5E56\u5E58\u5E5B\u5E5C\u5E5E\u5E68\u5E6A',
        4,
        '\u5E70\u5E80\u5E8B\u5E8E\u5EA2\u5EA4\u5EA5\u5EA8\u5EAA\u5EAC\u5EB1\u5EB3\u5EBD\u5EBE\u5EBF\u5EC6\u5ECC\u5ECB\u5ECE\u5ED1\u5ED2\u5ED4\u5ED5\u5EDC\u5EDE\u5EE5\u5EEB\u5F02\u5F06\u5F07\u5F08\u5F0E\u5F19\u5F1C\u5F1D\u5F21\u5F22\u5F23\u5F24\u5F28\u5F2B\u5F2C\u5F2E\u5F30\u5F34\u5F36\u5F3B\u5F3D\u5F3F\u5F40\u5F44\u5F45\u5F47\u5F4D\u5F50\u5F54\u5F58\u5F5B\u5F60\u5F63\u5F64\u5F67',
      ],
      [
        '8fbda1',
        '\u5F6F\u5F72\u5F74\u5F75\u5F78\u5F7A\u5F7D\u5F7E\u5F89\u5F8D\u5F8F\u5F96\u5F9C\u5F9D\u5FA2\u5FA7\u5FAB\u5FA4\u5FAC\u5FAF\u5FB0\u5FB1\u5FB8\u5FC4\u5FC7\u5FC8\u5FC9\u5FCB\u5FD0',
        4,
        '\u5FDE\u5FE1\u5FE2\u5FE8\u5FE9\u5FEA\u5FEC\u5FED\u5FEE\u5FEF\u5FF2\u5FF3\u5FF6\u5FFA\u5FFC\u6007\u600A\u600D\u6013\u6014\u6017\u6018\u601A\u601F\u6024\u602D\u6033\u6035\u6040\u6047\u6048\u6049\u604C\u6051\u6054\u6056\u6057\u605D\u6061\u6067\u6071\u607E\u607F\u6082\u6086\u6088\u608A\u608E\u6091\u6093\u6095\u6098\u609D\u609E\u60A2\u60A4\u60A5\u60A8\u60B0\u60B1\u60B7',
      ],
      [
        '8fbea1',
        '\u60BB\u60BE\u60C2\u60C4\u60C8\u60C9\u60CA\u60CB\u60CE\u60CF\u60D4\u60D5\u60D9\u60DB\u60DD\u60DE\u60E2\u60E5\u60F2\u60F5\u60F8\u60FC\u60FD\u6102\u6107\u610A\u610C\u6110',
        4,
        '\u6116\u6117\u6119\u611C\u611E\u6122\u612A\u612B\u6130\u6131\u6135\u6136\u6137\u6139\u6141\u6145\u6146\u6149\u615E\u6160\u616C\u6172\u6178\u617B\u617C\u617F\u6180\u6181\u6183\u6184\u618B\u618D\u6192\u6193\u6197\u6198\u619C\u619D\u619F\u61A0\u61A5\u61A8\u61AA\u61AD\u61B8\u61B9\u61BC\u61C0\u61C1\u61C2\u61CE\u61CF\u61D5\u61DC\u61DD\u61DE\u61DF\u61E1\u61E2\u61E7\u61E9\u61E5',
      ],
      [
        '8fbfa1',
        '\u61EC\u61ED\u61EF\u6201\u6203\u6204\u6207\u6213\u6215\u621C\u6220\u6222\u6223\u6227\u6229\u622B\u6239\u623D\u6242\u6243\u6244\u6246\u624C\u6250\u6251\u6252\u6254\u6256\u625A\u625C\u6264\u626D\u626F\u6273\u627A\u627D\u628D\u628E\u628F\u6290\u62A6\u62A8\u62B3\u62B6\u62B7\u62BA\u62BE\u62BF\u62C4\u62CE\u62D5\u62D6\u62DA\u62EA\u62F2\u62F4\u62FC\u62FD\u6303\u6304\u630A\u630B\u630D\u6310\u6313\u6316\u6318\u6329\u632A\u632D\u6335\u6336\u6339\u633C\u6341\u6342\u6343\u6344\u6346\u634A\u634B\u634E\u6352\u6353\u6354\u6358\u635B\u6365\u6366\u636C\u636D\u6371\u6374\u6375',
      ],
      [
        '8fc0a1',
        '\u6378\u637C\u637D\u637F\u6382\u6384\u6387\u638A\u6390\u6394\u6395\u6399\u639A\u639E\u63A4\u63A6\u63AD\u63AE\u63AF\u63BD\u63C1\u63C5\u63C8\u63CE\u63D1\u63D3\u63D4\u63D5\u63DC\u63E0\u63E5\u63EA\u63EC\u63F2\u63F3\u63F5\u63F8\u63F9\u6409\u640A\u6410\u6412\u6414\u6418\u641E\u6420\u6422\u6424\u6425\u6429\u642A\u642F\u6430\u6435\u643D\u643F\u644B\u644F\u6451\u6452\u6453\u6454\u645A\u645B\u645C\u645D\u645F\u6460\u6461\u6463\u646D\u6473\u6474\u647B\u647D\u6485\u6487\u648F\u6490\u6491\u6498\u6499\u649B\u649D\u649F\u64A1\u64A3\u64A6\u64A8\u64AC\u64B3\u64BD\u64BE\u64BF',
      ],
      [
        '8fc1a1',
        '\u64C4\u64C9\u64CA\u64CB\u64CC\u64CE\u64D0\u64D1\u64D5\u64D7\u64E4\u64E5\u64E9\u64EA\u64ED\u64F0\u64F5\u64F7\u64FB\u64FF\u6501\u6504\u6508\u6509\u650A\u650F\u6513\u6514\u6516\u6519\u651B\u651E\u651F\u6522\u6526\u6529\u652E\u6531\u653A\u653C\u653D\u6543\u6547\u6549\u6550\u6552\u6554\u655F\u6560\u6567\u656B\u657A\u657D\u6581\u6585\u658A\u6592\u6595\u6598\u659D\u65A0\u65A3\u65A6\u65AE\u65B2\u65B3\u65B4\u65BF\u65C2\u65C8\u65C9\u65CE\u65D0\u65D4\u65D6\u65D8\u65DF\u65F0\u65F2\u65F4\u65F5\u65F9\u65FE\u65FF\u6600\u6604\u6608\u6609\u660D\u6611\u6612\u6615\u6616\u661D',
      ],
      [
        '8fc2a1',
        '\u661E\u6621\u6622\u6623\u6624\u6626\u6629\u662A\u662B\u662C\u662E\u6630\u6631\u6633\u6639\u6637\u6640\u6645\u6646\u664A\u664C\u6651\u664E\u6657\u6658\u6659\u665B\u665C\u6660\u6661\u66FB\u666A\u666B\u666C\u667E\u6673\u6675\u667F\u6677\u6678\u6679\u667B\u6680\u667C\u668B\u668C\u668D\u6690\u6692\u6699\u669A\u669B\u669C\u669F\u66A0\u66A4\u66AD\u66B1\u66B2\u66B5\u66BB\u66BF\u66C0\u66C2\u66C3\u66C8\u66CC\u66CE\u66CF\u66D4\u66DB\u66DF\u66E8\u66EB\u66EC\u66EE\u66FA\u6705\u6707\u670E\u6713\u6719\u671C\u6720\u6722\u6733\u673E\u6745\u6747\u6748\u674C\u6754\u6755\u675D',
      ],
      [
        '8fc3a1',
        '\u6766\u676C\u676E\u6774\u6776\u677B\u6781\u6784\u678E\u678F\u6791\u6793\u6796\u6798\u6799\u679B\u67B0\u67B1\u67B2\u67B5\u67BB\u67BC\u67BD\u67F9\u67C0\u67C2\u67C3\u67C5\u67C8\u67C9\u67D2\u67D7\u67D9\u67DC\u67E1\u67E6\u67F0\u67F2\u67F6\u67F7\u6852\u6814\u6819\u681D\u681F\u6828\u6827\u682C\u682D\u682F\u6830\u6831\u6833\u683B\u683F\u6844\u6845\u684A\u684C\u6855\u6857\u6858\u685B\u686B\u686E',
        4,
        '\u6875\u6879\u687A\u687B\u687C\u6882\u6884\u6886\u6888\u6896\u6898\u689A\u689C\u68A1\u68A3\u68A5\u68A9\u68AA\u68AE\u68B2\u68BB\u68C5\u68C8\u68CC\u68CF',
      ],
      [
        '8fc4a1',
        '\u68D0\u68D1\u68D3\u68D6\u68D9\u68DC\u68DD\u68E5\u68E8\u68EA\u68EB\u68EC\u68ED\u68F0\u68F1\u68F5\u68F6\u68FB\u68FC\u68FD\u6906\u6909\u690A\u6910\u6911\u6913\u6916\u6917\u6931\u6933\u6935\u6938\u693B\u6942\u6945\u6949\u694E\u6957\u695B\u6963\u6964\u6965\u6966\u6968\u6969\u696C\u6970\u6971\u6972\u697A\u697B\u697F\u6980\u698D\u6992\u6996\u6998\u69A1\u69A5\u69A6\u69A8\u69AB\u69AD\u69AF\u69B7\u69B8\u69BA\u69BC\u69C5\u69C8\u69D1\u69D6\u69D7\u69E2\u69E5\u69EE\u69EF\u69F1\u69F3\u69F5\u69FE\u6A00\u6A01\u6A03\u6A0F\u6A11\u6A15\u6A1A\u6A1D\u6A20\u6A24\u6A28\u6A30\u6A32',
      ],
      [
        '8fc5a1',
        '\u6A34\u6A37\u6A3B\u6A3E\u6A3F\u6A45\u6A46\u6A49\u6A4A\u6A4E\u6A50\u6A51\u6A52\u6A55\u6A56\u6A5B\u6A64\u6A67\u6A6A\u6A71\u6A73\u6A7E\u6A81\u6A83\u6A86\u6A87\u6A89\u6A8B\u6A91\u6A9B\u6A9D\u6A9E\u6A9F\u6AA5\u6AAB\u6AAF\u6AB0\u6AB1\u6AB4\u6ABD\u6ABE\u6ABF\u6AC6\u6AC9\u6AC8\u6ACC\u6AD0\u6AD4\u6AD5\u6AD6\u6ADC\u6ADD\u6AE4\u6AE7\u6AEC\u6AF0\u6AF1\u6AF2\u6AFC\u6AFD\u6B02\u6B03\u6B06\u6B07\u6B09\u6B0F\u6B10\u6B11\u6B17\u6B1B\u6B1E\u6B24\u6B28\u6B2B\u6B2C\u6B2F\u6B35\u6B36\u6B3B\u6B3F\u6B46\u6B4A\u6B4D\u6B52\u6B56\u6B58\u6B5D\u6B60\u6B67\u6B6B\u6B6E\u6B70\u6B75\u6B7D',
      ],
      [
        '8fc6a1',
        '\u6B7E\u6B82\u6B85\u6B97\u6B9B\u6B9F\u6BA0\u6BA2\u6BA3\u6BA8\u6BA9\u6BAC\u6BAD\u6BAE\u6BB0\u6BB8\u6BB9\u6BBD\u6BBE\u6BC3\u6BC4\u6BC9\u6BCC\u6BD6\u6BDA\u6BE1\u6BE3\u6BE6\u6BE7\u6BEE\u6BF1\u6BF7\u6BF9\u6BFF\u6C02\u6C04\u6C05\u6C09\u6C0D\u6C0E\u6C10\u6C12\u6C19\u6C1F\u6C26\u6C27\u6C28\u6C2C\u6C2E\u6C33\u6C35\u6C36\u6C3A\u6C3B\u6C3F\u6C4A\u6C4B\u6C4D\u6C4F\u6C52\u6C54\u6C59\u6C5B\u6C5C\u6C6B\u6C6D\u6C6F\u6C74\u6C76\u6C78\u6C79\u6C7B\u6C85\u6C86\u6C87\u6C89\u6C94\u6C95\u6C97\u6C98\u6C9C\u6C9F\u6CB0\u6CB2\u6CB4\u6CC2\u6CC6\u6CCD\u6CCF\u6CD0\u6CD1\u6CD2\u6CD4\u6CD6',
      ],
      [
        '8fc7a1',
        '\u6CDA\u6CDC\u6CE0\u6CE7\u6CE9\u6CEB\u6CEC\u6CEE\u6CF2\u6CF4\u6D04\u6D07\u6D0A\u6D0E\u6D0F\u6D11\u6D13\u6D1A\u6D26\u6D27\u6D28\u6C67\u6D2E\u6D2F\u6D31\u6D39\u6D3C\u6D3F\u6D57\u6D5E\u6D5F\u6D61\u6D65\u6D67\u6D6F\u6D70\u6D7C\u6D82\u6D87\u6D91\u6D92\u6D94\u6D96\u6D97\u6D98\u6DAA\u6DAC\u6DB4\u6DB7\u6DB9\u6DBD\u6DBF\u6DC4\u6DC8\u6DCA\u6DCE\u6DCF\u6DD6\u6DDB\u6DDD\u6DDF\u6DE0\u6DE2\u6DE5\u6DE9\u6DEF\u6DF0\u6DF4\u6DF6\u6DFC\u6E00\u6E04\u6E1E\u6E22\u6E27\u6E32\u6E36\u6E39\u6E3B\u6E3C\u6E44\u6E45\u6E48\u6E49\u6E4B\u6E4F\u6E51\u6E52\u6E53\u6E54\u6E57\u6E5C\u6E5D\u6E5E',
      ],
      [
        '8fc8a1',
        '\u6E62\u6E63\u6E68\u6E73\u6E7B\u6E7D\u6E8D\u6E93\u6E99\u6EA0\u6EA7\u6EAD\u6EAE\u6EB1\u6EB3\u6EBB\u6EBF\u6EC0\u6EC1\u6EC3\u6EC7\u6EC8\u6ECA\u6ECD\u6ECE\u6ECF\u6EEB\u6EED\u6EEE\u6EF9\u6EFB\u6EFD\u6F04\u6F08\u6F0A\u6F0C\u6F0D\u6F16\u6F18\u6F1A\u6F1B\u6F26\u6F29\u6F2A\u6F2F\u6F30\u6F33\u6F36\u6F3B\u6F3C\u6F2D\u6F4F\u6F51\u6F52\u6F53\u6F57\u6F59\u6F5A\u6F5D\u6F5E\u6F61\u6F62\u6F68\u6F6C\u6F7D\u6F7E\u6F83\u6F87\u6F88\u6F8B\u6F8C\u6F8D\u6F90\u6F92\u6F93\u6F94\u6F96\u6F9A\u6F9F\u6FA0\u6FA5\u6FA6\u6FA7\u6FA8\u6FAE\u6FAF\u6FB0\u6FB5\u6FB6\u6FBC\u6FC5\u6FC7\u6FC8\u6FCA',
      ],
      [
        '8fc9a1',
        '\u6FDA\u6FDE\u6FE8\u6FE9\u6FF0\u6FF5\u6FF9\u6FFC\u6FFD\u7000\u7005\u7006\u7007\u700D\u7017\u7020\u7023\u702F\u7034\u7037\u7039\u703C\u7043\u7044\u7048\u7049\u704A\u704B\u7054\u7055\u705D\u705E\u704E\u7064\u7065\u706C\u706E\u7075\u7076\u707E\u7081\u7085\u7086\u7094',
        4,
        '\u709B\u70A4\u70AB\u70B0\u70B1\u70B4\u70B7\u70CA\u70D1\u70D3\u70D4\u70D5\u70D6\u70D8\u70DC\u70E4\u70FA\u7103',
        4,
        '\u710B\u710C\u710F\u711E\u7120\u712B\u712D\u712F\u7130\u7131\u7138\u7141\u7145\u7146\u7147\u714A\u714B\u7150\u7152\u7157\u715A\u715C\u715E\u7160',
      ],
      [
        '8fcaa1',
        '\u7168\u7179\u7180\u7185\u7187\u718C\u7192\u719A\u719B\u71A0\u71A2\u71AF\u71B0\u71B2\u71B3\u71BA\u71BF\u71C0\u71C1\u71C4\u71CB\u71CC\u71D3\u71D6\u71D9\u71DA\u71DC\u71F8\u71FE\u7200\u7207\u7208\u7209\u7213\u7217\u721A\u721D\u721F\u7224\u722B\u722F\u7234\u7238\u7239\u7241\u7242\u7243\u7245\u724E\u724F\u7250\u7253\u7255\u7256\u725A\u725C\u725E\u7260\u7263\u7268\u726B\u726E\u726F\u7271\u7277\u7278\u727B\u727C\u727F\u7284\u7289\u728D\u728E\u7293\u729B\u72A8\u72AD\u72AE\u72B1\u72B4\u72BE\u72C1\u72C7\u72C9\u72CC\u72D5\u72D6\u72D8\u72DF\u72E5\u72F3\u72F4\u72FA\u72FB',
      ],
      [
        '8fcba1',
        '\u72FE\u7302\u7304\u7305\u7307\u730B\u730D\u7312\u7313\u7318\u7319\u731E\u7322\u7324\u7327\u7328\u732C\u7331\u7332\u7335\u733A\u733B\u733D\u7343\u734D\u7350\u7352\u7356\u7358\u735D\u735E\u735F\u7360\u7366\u7367\u7369\u736B\u736C\u736E\u736F\u7371\u7377\u7379\u737C\u7380\u7381\u7383\u7385\u7386\u738E\u7390\u7393\u7395\u7397\u7398\u739C\u739E\u739F\u73A0\u73A2\u73A5\u73A6\u73AA\u73AB\u73AD\u73B5\u73B7\u73B9\u73BC\u73BD\u73BF\u73C5\u73C6\u73C9\u73CB\u73CC\u73CF\u73D2\u73D3\u73D6\u73D9\u73DD\u73E1\u73E3\u73E6\u73E7\u73E9\u73F4\u73F5\u73F7\u73F9\u73FA\u73FB\u73FD',
      ],
      [
        '8fcca1',
        '\u73FF\u7400\u7401\u7404\u7407\u740A\u7411\u741A\u741B\u7424\u7426\u7428',
        9,
        '\u7439\u7440\u7443\u7444\u7446\u7447\u744B\u744D\u7451\u7452\u7457\u745D\u7462\u7466\u7467\u7468\u746B\u746D\u746E\u7471\u7472\u7480\u7481\u7485\u7486\u7487\u7489\u748F\u7490\u7491\u7492\u7498\u7499\u749A\u749C\u749F\u74A0\u74A1\u74A3\u74A6\u74A8\u74A9\u74AA\u74AB\u74AE\u74AF\u74B1\u74B2\u74B5\u74B9\u74BB\u74BF\u74C8\u74C9\u74CC\u74D0\u74D3\u74D8\u74DA\u74DB\u74DE\u74DF\u74E4\u74E8\u74EA\u74EB\u74EF\u74F4\u74FA\u74FB\u74FC\u74FF\u7506',
      ],
      [
        '8fcda1',
        '\u7512\u7516\u7517\u7520\u7521\u7524\u7527\u7529\u752A\u752F\u7536\u7539\u753D\u753E\u753F\u7540\u7543\u7547\u7548\u754E\u7550\u7552\u7557\u755E\u755F\u7561\u756F\u7571\u7579',
        5,
        '\u7581\u7585\u7590\u7592\u7593\u7595\u7599\u759C\u75A2\u75A4\u75B4\u75BA\u75BF\u75C0\u75C1\u75C4\u75C6\u75CC\u75CE\u75CF\u75D7\u75DC\u75DF\u75E0\u75E1\u75E4\u75E7\u75EC\u75EE\u75EF\u75F1\u75F9\u7600\u7602\u7603\u7604\u7607\u7608\u760A\u760C\u760F\u7612\u7613\u7615\u7616\u7619\u761B\u761C\u761D\u761E\u7623\u7625\u7626\u7629\u762D\u7632\u7633\u7635\u7638\u7639',
      ],
      [
        '8fcea1',
        '\u763A\u763C\u764A\u7640\u7641\u7643\u7644\u7645\u7649\u764B\u7655\u7659\u765F\u7664\u7665\u766D\u766E\u766F\u7671\u7674\u7681\u7685\u768C\u768D\u7695\u769B\u769C\u769D\u769F\u76A0\u76A2',
        6,
        '\u76AA\u76AD\u76BD\u76C1\u76C5\u76C9\u76CB\u76CC\u76CE\u76D4\u76D9\u76E0\u76E6\u76E8\u76EC\u76F0\u76F1\u76F6\u76F9\u76FC\u7700\u7706\u770A\u770E\u7712\u7714\u7715\u7717\u7719\u771A\u771C\u7722\u7728\u772D\u772E\u772F\u7734\u7735\u7736\u7739\u773D\u773E\u7742\u7745\u7746\u774A\u774D\u774E\u774F\u7752\u7756\u7757\u775C\u775E\u775F\u7760\u7762',
      ],
      [
        '8fcfa1',
        '\u7764\u7767\u776A\u776C\u7770\u7772\u7773\u7774\u777A\u777D\u7780\u7784\u778C\u778D\u7794\u7795\u7796\u779A\u779F\u77A2\u77A7\u77AA\u77AE\u77AF\u77B1\u77B5\u77BE\u77C3\u77C9\u77D1\u77D2\u77D5\u77D9\u77DE\u77DF\u77E0\u77E4\u77E6\u77EA\u77EC\u77F0\u77F1\u77F4\u77F8\u77FB\u7805\u7806\u7809\u780D\u780E\u7811\u781D\u7821\u7822\u7823\u782D\u782E\u7830\u7835\u7837\u7843\u7844\u7847\u7848\u784C\u784E\u7852\u785C\u785E\u7860\u7861\u7863\u7864\u7868\u786A\u786E\u787A\u787E\u788A\u788F\u7894\u7898\u78A1\u789D\u789E\u789F\u78A4\u78A8\u78AC\u78AD\u78B0\u78B1\u78B2\u78B3',
      ],
      [
        '8fd0a1',
        '\u78BB\u78BD\u78BF\u78C7\u78C8\u78C9\u78CC\u78CE\u78D2\u78D3\u78D5\u78D6\u78E4\u78DB\u78DF\u78E0\u78E1\u78E6\u78EA\u78F2\u78F3\u7900\u78F6\u78F7\u78FA\u78FB\u78FF\u7906\u790C\u7910\u791A\u791C\u791E\u791F\u7920\u7925\u7927\u7929\u792D\u7931\u7934\u7935\u793B\u793D\u793F\u7944\u7945\u7946\u794A\u794B\u794F\u7951\u7954\u7958\u795B\u795C\u7967\u7969\u796B\u7972\u7979\u797B\u797C\u797E\u798B\u798C\u7991\u7993\u7994\u7995\u7996\u7998\u799B\u799C\u79A1\u79A8\u79A9\u79AB\u79AF\u79B1\u79B4\u79B8\u79BB\u79C2\u79C4\u79C7\u79C8\u79CA\u79CF\u79D4\u79D6\u79DA\u79DD\u79DE',
      ],
      [
        '8fd1a1',
        '\u79E0\u79E2\u79E5\u79EA\u79EB\u79ED\u79F1\u79F8\u79FC\u7A02\u7A03\u7A07\u7A09\u7A0A\u7A0C\u7A11\u7A15\u7A1B\u7A1E\u7A21\u7A27\u7A2B\u7A2D\u7A2F\u7A30\u7A34\u7A35\u7A38\u7A39\u7A3A\u7A44\u7A45\u7A47\u7A48\u7A4C\u7A55\u7A56\u7A59\u7A5C\u7A5D\u7A5F\u7A60\u7A65\u7A67\u7A6A\u7A6D\u7A75\u7A78\u7A7E\u7A80\u7A82\u7A85\u7A86\u7A8A\u7A8B\u7A90\u7A91\u7A94\u7A9E\u7AA0\u7AA3\u7AAC\u7AB3\u7AB5\u7AB9\u7ABB\u7ABC\u7AC6\u7AC9\u7ACC\u7ACE\u7AD1\u7ADB\u7AE8\u7AE9\u7AEB\u7AEC\u7AF1\u7AF4\u7AFB\u7AFD\u7AFE\u7B07\u7B14\u7B1F\u7B23\u7B27\u7B29\u7B2A\u7B2B\u7B2D\u7B2E\u7B2F\u7B30',
      ],
      [
        '8fd2a1',
        '\u7B31\u7B34\u7B3D\u7B3F\u7B40\u7B41\u7B47\u7B4E\u7B55\u7B60\u7B64\u7B66\u7B69\u7B6A\u7B6D\u7B6F\u7B72\u7B73\u7B77\u7B84\u7B89\u7B8E\u7B90\u7B91\u7B96\u7B9B\u7B9E\u7BA0\u7BA5\u7BAC\u7BAF\u7BB0\u7BB2\u7BB5\u7BB6\u7BBA\u7BBB\u7BBC\u7BBD\u7BC2\u7BC5\u7BC8\u7BCA\u7BD4\u7BD6\u7BD7\u7BD9\u7BDA\u7BDB\u7BE8\u7BEA\u7BF2\u7BF4\u7BF5\u7BF8\u7BF9\u7BFA\u7BFC\u7BFE\u7C01\u7C02\u7C03\u7C04\u7C06\u7C09\u7C0B\u7C0C\u7C0E\u7C0F\u7C19\u7C1B\u7C20\u7C25\u7C26\u7C28\u7C2C\u7C31\u7C33\u7C34\u7C36\u7C39\u7C3A\u7C46\u7C4A\u7C55\u7C51\u7C52\u7C53\u7C59',
        5,
      ],
      [
        '8fd3a1',
        '\u7C61\u7C63\u7C67\u7C69\u7C6D\u7C6E\u7C70\u7C72\u7C79\u7C7C\u7C7D\u7C86\u7C87\u7C8F\u7C94\u7C9E\u7CA0\u7CA6\u7CB0\u7CB6\u7CB7\u7CBA\u7CBB\u7CBC\u7CBF\u7CC4\u7CC7\u7CC8\u7CC9\u7CCD\u7CCF\u7CD3\u7CD4\u7CD5\u7CD7\u7CD9\u7CDA\u7CDD\u7CE6\u7CE9\u7CEB\u7CF5\u7D03\u7D07\u7D08\u7D09\u7D0F\u7D11\u7D12\u7D13\u7D16\u7D1D\u7D1E\u7D23\u7D26\u7D2A\u7D2D\u7D31\u7D3C\u7D3D\u7D3E\u7D40\u7D41\u7D47\u7D48\u7D4D\u7D51\u7D53\u7D57\u7D59\u7D5A\u7D5C\u7D5D\u7D65\u7D67\u7D6A\u7D70\u7D78\u7D7A\u7D7B\u7D7F\u7D81\u7D82\u7D83\u7D85\u7D86\u7D88\u7D8B\u7D8C\u7D8D\u7D91\u7D96\u7D97\u7D9D',
      ],
      [
        '8fd4a1',
        '\u7D9E\u7DA6\u7DA7\u7DAA\u7DB3\u7DB6\u7DB7\u7DB9\u7DC2',
        4,
        '\u7DCC\u7DCD\u7DCE\u7DD7\u7DD9\u7E00\u7DE2\u7DE5\u7DE6\u7DEA\u7DEB\u7DED\u7DF1\u7DF5\u7DF6\u7DF9\u7DFA\u7E08\u7E10\u7E11\u7E15\u7E17\u7E1C\u7E1D\u7E20\u7E27\u7E28\u7E2C\u7E2D\u7E2F\u7E33\u7E36\u7E3F\u7E44\u7E45\u7E47\u7E4E\u7E50\u7E52\u7E58\u7E5F\u7E61\u7E62\u7E65\u7E6B\u7E6E\u7E6F\u7E73\u7E78\u7E7E\u7E81\u7E86\u7E87\u7E8A\u7E8D\u7E91\u7E95\u7E98\u7E9A\u7E9D\u7E9E\u7F3C\u7F3B\u7F3D\u7F3E\u7F3F\u7F43\u7F44\u7F47\u7F4F\u7F52\u7F53\u7F5B\u7F5C\u7F5D\u7F61\u7F63\u7F64\u7F65\u7F66\u7F6D',
      ],
      [
        '8fd5a1',
        '\u7F71\u7F7D\u7F7E\u7F7F\u7F80\u7F8B\u7F8D\u7F8F\u7F90\u7F91\u7F96\u7F97\u7F9C\u7FA1\u7FA2\u7FA6\u7FAA\u7FAD\u7FB4\u7FBC\u7FBF\u7FC0\u7FC3\u7FC8\u7FCE\u7FCF\u7FDB\u7FDF\u7FE3\u7FE5\u7FE8\u7FEC\u7FEE\u7FEF\u7FF2\u7FFA\u7FFD\u7FFE\u7FFF\u8007\u8008\u800A\u800D\u800E\u800F\u8011\u8013\u8014\u8016\u801D\u801E\u801F\u8020\u8024\u8026\u802C\u802E\u8030\u8034\u8035\u8037\u8039\u803A\u803C\u803E\u8040\u8044\u8060\u8064\u8066\u806D\u8071\u8075\u8081\u8088\u808E\u809C\u809E\u80A6\u80A7\u80AB\u80B8\u80B9\u80C8\u80CD\u80CF\u80D2\u80D4\u80D5\u80D7\u80D8\u80E0\u80ED\u80EE',
      ],
      [
        '8fd6a1',
        '\u80F0\u80F2\u80F3\u80F6\u80F9\u80FA\u80FE\u8103\u810B\u8116\u8117\u8118\u811C\u811E\u8120\u8124\u8127\u812C\u8130\u8135\u813A\u813C\u8145\u8147\u814A\u814C\u8152\u8157\u8160\u8161\u8167\u8168\u8169\u816D\u816F\u8177\u8181\u8190\u8184\u8185\u8186\u818B\u818E\u8196\u8198\u819B\u819E\u81A2\u81AE\u81B2\u81B4\u81BB\u81CB\u81C3\u81C5\u81CA\u81CE\u81CF\u81D5\u81D7\u81DB\u81DD\u81DE\u81E1\u81E4\u81EB\u81EC\u81F0\u81F1\u81F2\u81F5\u81F6\u81F8\u81F9\u81FD\u81FF\u8200\u8203\u820F\u8213\u8214\u8219\u821A\u821D\u8221\u8222\u8228\u8232\u8234\u823A\u8243\u8244\u8245\u8246',
      ],
      [
        '8fd7a1',
        '\u824B\u824E\u824F\u8251\u8256\u825C\u8260\u8263\u8267\u826D\u8274\u827B\u827D\u827F\u8280\u8281\u8283\u8284\u8287\u8289\u828A\u828E\u8291\u8294\u8296\u8298\u829A\u829B\u82A0\u82A1\u82A3\u82A4\u82A7\u82A8\u82A9\u82AA\u82AE\u82B0\u82B2\u82B4\u82B7\u82BA\u82BC\u82BE\u82BF\u82C6\u82D0\u82D5\u82DA\u82E0\u82E2\u82E4\u82E8\u82EA\u82ED\u82EF\u82F6\u82F7\u82FD\u82FE\u8300\u8301\u8307\u8308\u830A\u830B\u8354\u831B\u831D\u831E\u831F\u8321\u8322\u832C\u832D\u832E\u8330\u8333\u8337\u833A\u833C\u833D\u8342\u8343\u8344\u8347\u834D\u834E\u8351\u8355\u8356\u8357\u8370\u8378',
      ],
      [
        '8fd8a1',
        '\u837D\u837F\u8380\u8382\u8384\u8386\u838D\u8392\u8394\u8395\u8398\u8399\u839B\u839C\u839D\u83A6\u83A7\u83A9\u83AC\u83BE\u83BF\u83C0\u83C7\u83C9\u83CF\u83D0\u83D1\u83D4\u83DD\u8353\u83E8\u83EA\u83F6\u83F8\u83F9\u83FC\u8401\u8406\u840A\u840F\u8411\u8415\u8419\u83AD\u842F\u8439\u8445\u8447\u8448\u844A\u844D\u844F\u8451\u8452\u8456\u8458\u8459\u845A\u845C\u8460\u8464\u8465\u8467\u846A\u8470\u8473\u8474\u8476\u8478\u847C\u847D\u8481\u8485\u8492\u8493\u8495\u849E\u84A6\u84A8\u84A9\u84AA\u84AF\u84B1\u84B4\u84BA\u84BD\u84BE\u84C0\u84C2\u84C7\u84C8\u84CC\u84CF\u84D3',
      ],
      [
        '8fd9a1',
        '\u84DC\u84E7\u84EA\u84EF\u84F0\u84F1\u84F2\u84F7\u8532\u84FA\u84FB\u84FD\u8502\u8503\u8507\u850C\u850E\u8510\u851C\u851E\u8522\u8523\u8524\u8525\u8527\u852A\u852B\u852F\u8533\u8534\u8536\u853F\u8546\u854F',
        4,
        '\u8556\u8559\u855C',
        6,
        '\u8564\u856B\u856F\u8579\u857A\u857B\u857D\u857F\u8581\u8585\u8586\u8589\u858B\u858C\u858F\u8593\u8598\u859D\u859F\u85A0\u85A2\u85A5\u85A7\u85B4\u85B6\u85B7\u85B8\u85BC\u85BD\u85BE\u85BF\u85C2\u85C7\u85CA\u85CB\u85CE\u85AD\u85D8\u85DA\u85DF\u85E0\u85E6\u85E8\u85ED\u85F3\u85F6\u85FC',
      ],
      [
        '8fdaa1',
        '\u85FF\u8600\u8604\u8605\u860D\u860E\u8610\u8611\u8612\u8618\u8619\u861B\u861E\u8621\u8627\u8629\u8636\u8638\u863A\u863C\u863D\u8640\u8642\u8646\u8652\u8653\u8656\u8657\u8658\u8659\u865D\u8660',
        4,
        '\u8669\u866C\u866F\u8675\u8676\u8677\u867A\u868D\u8691\u8696\u8698\u869A\u869C\u86A1\u86A6\u86A7\u86A8\u86AD\u86B1\u86B3\u86B4\u86B5\u86B7\u86B8\u86B9\u86BF\u86C0\u86C1\u86C3\u86C5\u86D1\u86D2\u86D5\u86D7\u86DA\u86DC\u86E0\u86E3\u86E5\u86E7\u8688\u86FA\u86FC\u86FD\u8704\u8705\u8707\u870B\u870E\u870F\u8710\u8713\u8714\u8719\u871E\u871F\u8721\u8723',
      ],
      [
        '8fdba1',
        '\u8728\u872E\u872F\u8731\u8732\u8739\u873A\u873C\u873D\u873E\u8740\u8743\u8745\u874D\u8758\u875D\u8761\u8764\u8765\u876F\u8771\u8772\u877B\u8783',
        6,
        '\u878B\u878C\u8790\u8793\u8795\u8797\u8798\u8799\u879E\u87A0\u87A3\u87A7\u87AC\u87AD\u87AE\u87B1\u87B5\u87BE\u87BF\u87C1\u87C8\u87C9\u87CA\u87CE\u87D5\u87D6\u87D9\u87DA\u87DC\u87DF\u87E2\u87E3\u87E4\u87EA\u87EB\u87ED\u87F1\u87F3\u87F8\u87FA\u87FF\u8801\u8803\u8806\u8809\u880A\u880B\u8810\u8819\u8812\u8813\u8814\u8818\u881A\u881B\u881C\u881E\u881F\u8828\u882D\u882E\u8830\u8832\u8835',
      ],
      [
        '8fdca1',
        '\u883A\u883C\u8841\u8843\u8845\u8848\u8849\u884A\u884B\u884E\u8851\u8855\u8856\u8858\u885A\u885C\u885F\u8860\u8864\u8869\u8871\u8879\u887B\u8880\u8898\u889A\u889B\u889C\u889F\u88A0\u88A8\u88AA\u88BA\u88BD\u88BE\u88C0\u88CA',
        4,
        '\u88D1\u88D2\u88D3\u88DB\u88DE\u88E7\u88EF\u88F0\u88F1\u88F5\u88F7\u8901\u8906\u890D\u890E\u890F\u8915\u8916\u8918\u8919\u891A\u891C\u8920\u8926\u8927\u8928\u8930\u8931\u8932\u8935\u8939\u893A\u893E\u8940\u8942\u8945\u8946\u8949\u894F\u8952\u8957\u895A\u895B\u895C\u8961\u8962\u8963\u896B\u896E\u8970\u8973\u8975\u897A',
      ],
      [
        '8fdda1',
        '\u897B\u897C\u897D\u8989\u898D\u8990\u8994\u8995\u899B\u899C\u899F\u89A0\u89A5\u89B0\u89B4\u89B5\u89B6\u89B7\u89BC\u89D4',
        4,
        '\u89E5\u89E9\u89EB\u89ED\u89F1\u89F3\u89F6\u89F9\u89FD\u89FF\u8A04\u8A05\u8A07\u8A0F\u8A11\u8A12\u8A14\u8A15\u8A1E\u8A20\u8A22\u8A24\u8A26\u8A2B\u8A2C\u8A2F\u8A35\u8A37\u8A3D\u8A3E\u8A40\u8A43\u8A45\u8A47\u8A49\u8A4D\u8A4E\u8A53\u8A56\u8A57\u8A58\u8A5C\u8A5D\u8A61\u8A65\u8A67\u8A75\u8A76\u8A77\u8A79\u8A7A\u8A7B\u8A7E\u8A7F\u8A80\u8A83\u8A86\u8A8B\u8A8F\u8A90\u8A92\u8A96\u8A97\u8A99\u8A9F\u8AA7\u8AA9\u8AAE\u8AAF\u8AB3',
      ],
      [
        '8fdea1',
        '\u8AB6\u8AB7\u8ABB\u8ABE\u8AC3\u8AC6\u8AC8\u8AC9\u8ACA\u8AD1\u8AD3\u8AD4\u8AD5\u8AD7\u8ADD\u8ADF\u8AEC\u8AF0\u8AF4\u8AF5\u8AF6\u8AFC\u8AFF\u8B05\u8B06\u8B0B\u8B11\u8B1C\u8B1E\u8B1F\u8B0A\u8B2D\u8B30\u8B37\u8B3C\u8B42',
        4,
        '\u8B48\u8B52\u8B53\u8B54\u8B59\u8B4D\u8B5E\u8B63\u8B6D\u8B76\u8B78\u8B79\u8B7C\u8B7E\u8B81\u8B84\u8B85\u8B8B\u8B8D\u8B8F\u8B94\u8B95\u8B9C\u8B9E\u8B9F\u8C38\u8C39\u8C3D\u8C3E\u8C45\u8C47\u8C49\u8C4B\u8C4F\u8C51\u8C53\u8C54\u8C57\u8C58\u8C5B\u8C5D\u8C59\u8C63\u8C64\u8C66\u8C68\u8C69\u8C6D\u8C73\u8C75\u8C76\u8C7B\u8C7E\u8C86',
      ],
      [
        '8fdfa1',
        '\u8C87\u8C8B\u8C90\u8C92\u8C93\u8C99\u8C9B\u8C9C\u8CA4\u8CB9\u8CBA\u8CC5\u8CC6\u8CC9\u8CCB\u8CCF\u8CD6\u8CD5\u8CD9\u8CDD\u8CE1\u8CE8\u8CEC\u8CEF\u8CF0\u8CF2\u8CF5\u8CF7\u8CF8\u8CFE\u8CFF\u8D01\u8D03\u8D09\u8D12\u8D17\u8D1B\u8D65\u8D69\u8D6C\u8D6E\u8D7F\u8D82\u8D84\u8D88\u8D8D\u8D90\u8D91\u8D95\u8D9E\u8D9F\u8DA0\u8DA6\u8DAB\u8DAC\u8DAF\u8DB2\u8DB5\u8DB7\u8DB9\u8DBB\u8DC0\u8DC5\u8DC6\u8DC7\u8DC8\u8DCA\u8DCE\u8DD1\u8DD4\u8DD5\u8DD7\u8DD9\u8DE4\u8DE5\u8DE7\u8DEC\u8DF0\u8DBC\u8DF1\u8DF2\u8DF4\u8DFD\u8E01\u8E04\u8E05\u8E06\u8E0B\u8E11\u8E14\u8E16\u8E20\u8E21\u8E22',
      ],
      [
        '8fe0a1',
        '\u8E23\u8E26\u8E27\u8E31\u8E33\u8E36\u8E37\u8E38\u8E39\u8E3D\u8E40\u8E41\u8E4B\u8E4D\u8E4E\u8E4F\u8E54\u8E5B\u8E5C\u8E5D\u8E5E\u8E61\u8E62\u8E69\u8E6C\u8E6D\u8E6F\u8E70\u8E71\u8E79\u8E7A\u8E7B\u8E82\u8E83\u8E89\u8E90\u8E92\u8E95\u8E9A\u8E9B\u8E9D\u8E9E\u8EA2\u8EA7\u8EA9\u8EAD\u8EAE\u8EB3\u8EB5\u8EBA\u8EBB\u8EC0\u8EC1\u8EC3\u8EC4\u8EC7\u8ECF\u8ED1\u8ED4\u8EDC\u8EE8\u8EEE\u8EF0\u8EF1\u8EF7\u8EF9\u8EFA\u8EED\u8F00\u8F02\u8F07\u8F08\u8F0F\u8F10\u8F16\u8F17\u8F18\u8F1E\u8F20\u8F21\u8F23\u8F25\u8F27\u8F28\u8F2C\u8F2D\u8F2E\u8F34\u8F35\u8F36\u8F37\u8F3A\u8F40\u8F41',
      ],
      [
        '8fe1a1',
        '\u8F43\u8F47\u8F4F\u8F51',
        4,
        '\u8F58\u8F5D\u8F5E\u8F65\u8F9D\u8FA0\u8FA1\u8FA4\u8FA5\u8FA6\u8FB5\u8FB6\u8FB8\u8FBE\u8FC0\u8FC1\u8FC6\u8FCA\u8FCB\u8FCD\u8FD0\u8FD2\u8FD3\u8FD5\u8FE0\u8FE3\u8FE4\u8FE8\u8FEE\u8FF1\u8FF5\u8FF6\u8FFB\u8FFE\u9002\u9004\u9008\u900C\u9018\u901B\u9028\u9029\u902F\u902A\u902C\u902D\u9033\u9034\u9037\u903F\u9043\u9044\u904C\u905B\u905D\u9062\u9066\u9067\u906C\u9070\u9074\u9079\u9085\u9088\u908B\u908C\u908E\u9090\u9095\u9097\u9098\u9099\u909B\u90A0\u90A1\u90A2\u90A5\u90B0\u90B2\u90B3\u90B4\u90B6\u90BD\u90CC\u90BE\u90C3',
      ],
      [
        '8fe2a1',
        '\u90C4\u90C5\u90C7\u90C8\u90D5\u90D7\u90D8\u90D9\u90DC\u90DD\u90DF\u90E5\u90D2\u90F6\u90EB\u90EF\u90F0\u90F4\u90FE\u90FF\u9100\u9104\u9105\u9106\u9108\u910D\u9110\u9114\u9116\u9117\u9118\u911A\u911C\u911E\u9120\u9125\u9122\u9123\u9127\u9129\u912E\u912F\u9131\u9134\u9136\u9137\u9139\u913A\u913C\u913D\u9143\u9147\u9148\u914F\u9153\u9157\u9159\u915A\u915B\u9161\u9164\u9167\u916D\u9174\u9179\u917A\u917B\u9181\u9183\u9185\u9186\u918A\u918E\u9191\u9193\u9194\u9195\u9198\u919E\u91A1\u91A6\u91A8\u91AC\u91AD\u91AE\u91B0\u91B1\u91B2\u91B3\u91B6\u91BB\u91BC\u91BD\u91BF',
      ],
      [
        '8fe3a1',
        '\u91C2\u91C3\u91C5\u91D3\u91D4\u91D7\u91D9\u91DA\u91DE\u91E4\u91E5\u91E9\u91EA\u91EC',
        5,
        '\u91F7\u91F9\u91FB\u91FD\u9200\u9201\u9204\u9205\u9206\u9207\u9209\u920A\u920C\u9210\u9212\u9213\u9216\u9218\u921C\u921D\u9223\u9224\u9225\u9226\u9228\u922E\u922F\u9230\u9233\u9235\u9236\u9238\u9239\u923A\u923C\u923E\u9240\u9242\u9243\u9246\u9247\u924A\u924D\u924E\u924F\u9251\u9258\u9259\u925C\u925D\u9260\u9261\u9265\u9267\u9268\u9269\u926E\u926F\u9270\u9275',
        4,
        '\u927B\u927C\u927D\u927F\u9288\u9289\u928A\u928D\u928E\u9292\u9297',
      ],
      [
        '8fe4a1',
        '\u9299\u929F\u92A0\u92A4\u92A5\u92A7\u92A8\u92AB\u92AF\u92B2\u92B6\u92B8\u92BA\u92BB\u92BC\u92BD\u92BF',
        4,
        '\u92C5\u92C6\u92C7\u92C8\u92CB\u92CC\u92CD\u92CE\u92D0\u92D3\u92D5\u92D7\u92D8\u92D9\u92DC\u92DD\u92DF\u92E0\u92E1\u92E3\u92E5\u92E7\u92E8\u92EC\u92EE\u92F0\u92F9\u92FB\u92FF\u9300\u9302\u9308\u930D\u9311\u9314\u9315\u931C\u931D\u931E\u931F\u9321\u9324\u9325\u9327\u9329\u932A\u9333\u9334\u9336\u9337\u9347\u9348\u9349\u9350\u9351\u9352\u9355\u9357\u9358\u935A\u935E\u9364\u9365\u9367\u9369\u936A\u936D\u936F\u9370\u9371\u9373\u9374\u9376',
      ],
      [
        '8fe5a1',
        '\u937A\u937D\u937F\u9380\u9381\u9382\u9388\u938A\u938B\u938D\u938F\u9392\u9395\u9398\u939B\u939E\u93A1\u93A3\u93A4\u93A6\u93A8\u93AB\u93B4\u93B5\u93B6\u93BA\u93A9\u93C1\u93C4\u93C5\u93C6\u93C7\u93C9',
        4,
        '\u93D3\u93D9\u93DC\u93DE\u93DF\u93E2\u93E6\u93E7\u93F9\u93F7\u93F8\u93FA\u93FB\u93FD\u9401\u9402\u9404\u9408\u9409\u940D\u940E\u940F\u9415\u9416\u9417\u941F\u942E\u942F\u9431\u9432\u9433\u9434\u943B\u943F\u943D\u9443\u9445\u9448\u944A\u944C\u9455\u9459\u945C\u945F\u9461\u9463\u9468\u946B\u946D\u946E\u946F\u9471\u9472\u9484\u9483\u9578\u9579',
      ],
      [
        '8fe6a1',
        '\u957E\u9584\u9588\u958C\u958D\u958E\u959D\u959E\u959F\u95A1\u95A6\u95A9\u95AB\u95AC\u95B4\u95B6\u95BA\u95BD\u95BF\u95C6\u95C8\u95C9\u95CB\u95D0\u95D1\u95D2\u95D3\u95D9\u95DA\u95DD\u95DE\u95DF\u95E0\u95E4\u95E6\u961D\u961E\u9622\u9624\u9625\u9626\u962C\u9631\u9633\u9637\u9638\u9639\u963A\u963C\u963D\u9641\u9652\u9654\u9656\u9657\u9658\u9661\u966E\u9674\u967B\u967C\u967E\u967F\u9681\u9682\u9683\u9684\u9689\u9691\u9696\u969A\u969D\u969F\u96A4\u96A5\u96A6\u96A9\u96AE\u96AF\u96B3\u96BA\u96CA\u96D2\u5DB2\u96D8\u96DA\u96DD\u96DE\u96DF\u96E9\u96EF\u96F1\u96FA\u9702',
      ],
      [
        '8fe7a1',
        '\u9703\u9705\u9709\u971A\u971B\u971D\u9721\u9722\u9723\u9728\u9731\u9733\u9741\u9743\u974A\u974E\u974F\u9755\u9757\u9758\u975A\u975B\u9763\u9767\u976A\u976E\u9773\u9776\u9777\u9778\u977B\u977D\u977F\u9780\u9789\u9795\u9796\u9797\u9799\u979A\u979E\u979F\u97A2\u97AC\u97AE\u97B1\u97B2\u97B5\u97B6\u97B8\u97B9\u97BA\u97BC\u97BE\u97BF\u97C1\u97C4\u97C5\u97C7\u97C9\u97CA\u97CC\u97CD\u97CE\u97D0\u97D1\u97D4\u97D7\u97D8\u97D9\u97DD\u97DE\u97E0\u97DB\u97E1\u97E4\u97EF\u97F1\u97F4\u97F7\u97F8\u97FA\u9807\u980A\u9819\u980D\u980E\u9814\u9816\u981C\u981E\u9820\u9823\u9826',
      ],
      [
        '8fe8a1',
        '\u982B\u982E\u982F\u9830\u9832\u9833\u9835\u9825\u983E\u9844\u9847\u984A\u9851\u9852\u9853\u9856\u9857\u9859\u985A\u9862\u9863\u9865\u9866\u986A\u986C\u98AB\u98AD\u98AE\u98B0\u98B4\u98B7\u98B8\u98BA\u98BB\u98BF\u98C2\u98C5\u98C8\u98CC\u98E1\u98E3\u98E5\u98E6\u98E7\u98EA\u98F3\u98F6\u9902\u9907\u9908\u9911\u9915\u9916\u9917\u991A\u991B\u991C\u991F\u9922\u9926\u9927\u992B\u9931',
        4,
        '\u9939\u993A\u993B\u993C\u9940\u9941\u9946\u9947\u9948\u994D\u994E\u9954\u9958\u9959\u995B\u995C\u995E\u995F\u9960\u999B\u999D\u999F\u99A6\u99B0\u99B1\u99B2\u99B5',
      ],
      [
        '8fe9a1',
        '\u99B9\u99BA\u99BD\u99BF\u99C3\u99C9\u99D3\u99D4\u99D9\u99DA\u99DC\u99DE\u99E7\u99EA\u99EB\u99EC\u99F0\u99F4\u99F5\u99F9\u99FD\u99FE\u9A02\u9A03\u9A04\u9A0B\u9A0C\u9A10\u9A11\u9A16\u9A1E\u9A20\u9A22\u9A23\u9A24\u9A27\u9A2D\u9A2E\u9A33\u9A35\u9A36\u9A38\u9A47\u9A41\u9A44\u9A4A\u9A4B\u9A4C\u9A4E\u9A51\u9A54\u9A56\u9A5D\u9AAA\u9AAC\u9AAE\u9AAF\u9AB2\u9AB4\u9AB5\u9AB6\u9AB9\u9ABB\u9ABE\u9ABF\u9AC1\u9AC3\u9AC6\u9AC8\u9ACE\u9AD0\u9AD2\u9AD5\u9AD6\u9AD7\u9ADB\u9ADC\u9AE0\u9AE4\u9AE5\u9AE7\u9AE9\u9AEC\u9AF2\u9AF3\u9AF5\u9AF9\u9AFA\u9AFD\u9AFF',
        4,
      ],
      [
        '8feaa1',
        '\u9B04\u9B05\u9B08\u9B09\u9B0B\u9B0C\u9B0D\u9B0E\u9B10\u9B12\u9B16\u9B19\u9B1B\u9B1C\u9B20\u9B26\u9B2B\u9B2D\u9B33\u9B34\u9B35\u9B37\u9B39\u9B3A\u9B3D\u9B48\u9B4B\u9B4C\u9B55\u9B56\u9B57\u9B5B\u9B5E\u9B61\u9B63\u9B65\u9B66\u9B68\u9B6A',
        4,
        '\u9B73\u9B75\u9B77\u9B78\u9B79\u9B7F\u9B80\u9B84\u9B85\u9B86\u9B87\u9B89\u9B8A\u9B8B\u9B8D\u9B8F\u9B90\u9B94\u9B9A\u9B9D\u9B9E\u9BA6\u9BA7\u9BA9\u9BAC\u9BB0\u9BB1\u9BB2\u9BB7\u9BB8\u9BBB\u9BBC\u9BBE\u9BBF\u9BC1\u9BC7\u9BC8\u9BCE\u9BD0\u9BD7\u9BD8\u9BDD\u9BDF\u9BE5\u9BE7\u9BEA\u9BEB\u9BEF\u9BF3\u9BF7\u9BF8',
      ],
      [
        '8feba1',
        '\u9BF9\u9BFA\u9BFD\u9BFF\u9C00\u9C02\u9C0B\u9C0F\u9C11\u9C16\u9C18\u9C19\u9C1A\u9C1C\u9C1E\u9C22\u9C23\u9C26',
        4,
        '\u9C31\u9C35\u9C36\u9C37\u9C3D\u9C41\u9C43\u9C44\u9C45\u9C49\u9C4A\u9C4E\u9C4F\u9C50\u9C53\u9C54\u9C56\u9C58\u9C5B\u9C5D\u9C5E\u9C5F\u9C63\u9C69\u9C6A\u9C5C\u9C6B\u9C68\u9C6E\u9C70\u9C72\u9C75\u9C77\u9C7B\u9CE6\u9CF2\u9CF7\u9CF9\u9D0B\u9D02\u9D11\u9D17\u9D18\u9D1C\u9D1D\u9D1E\u9D2F\u9D30\u9D32\u9D33\u9D34\u9D3A\u9D3C\u9D45\u9D3D\u9D42\u9D43\u9D47\u9D4A\u9D53\u9D54\u9D5F\u9D63\u9D62\u9D65\u9D69\u9D6A\u9D6B\u9D70\u9D76\u9D77\u9D7B',
      ],
      [
        '8feca1',
        '\u9D7C\u9D7E\u9D83\u9D84\u9D86\u9D8A\u9D8D\u9D8E\u9D92\u9D93\u9D95\u9D96\u9D97\u9D98\u9DA1\u9DAA\u9DAC\u9DAE\u9DB1\u9DB5\u9DB9\u9DBC\u9DBF\u9DC3\u9DC7\u9DC9\u9DCA\u9DD4\u9DD5\u9DD6\u9DD7\u9DDA\u9DDE\u9DDF\u9DE0\u9DE5\u9DE7\u9DE9\u9DEB\u9DEE\u9DF0\u9DF3\u9DF4\u9DFE\u9E0A\u9E02\u9E07\u9E0E\u9E10\u9E11\u9E12\u9E15\u9E16\u9E19\u9E1C\u9E1D\u9E7A\u9E7B\u9E7C\u9E80\u9E82\u9E83\u9E84\u9E85\u9E87\u9E8E\u9E8F\u9E96\u9E98\u9E9B\u9E9E\u9EA4\u9EA8\u9EAC\u9EAE\u9EAF\u9EB0\u9EB3\u9EB4\u9EB5\u9EC6\u9EC8\u9ECB\u9ED5\u9EDF\u9EE4\u9EE7\u9EEC\u9EED\u9EEE\u9EF0\u9EF1\u9EF2\u9EF5',
      ],
      [
        '8feda1',
        '\u9EF8\u9EFF\u9F02\u9F03\u9F09\u9F0F\u9F10\u9F11\u9F12\u9F14\u9F16\u9F17\u9F19\u9F1A\u9F1B\u9F1F\u9F22\u9F26\u9F2A\u9F2B\u9F2F\u9F31\u9F32\u9F34\u9F37\u9F39\u9F3A\u9F3C\u9F3D\u9F3F\u9F41\u9F43',
        4,
        '\u9F53\u9F55\u9F56\u9F57\u9F58\u9F5A\u9F5D\u9F5E\u9F68\u9F69\u9F6D',
        4,
        '\u9F73\u9F75\u9F7A\u9F7D\u9F8F\u9F90\u9F91\u9F92\u9F94\u9F96\u9F97\u9F9E\u9FA1\u9FA2\u9FA3\u9FA5',
      ],
    ];
  },
});

// ../../node_modules/iconv-lite/encodings/tables/cp936.json
var require_cp936 = __commonJS({
  '../../node_modules/iconv-lite/encodings/tables/cp936.json'(
    exports2,
    module2
  ) {
    module2.exports = [
      ['0', '\0', 127, '\u20AC'],
      [
        '8140',
        '\u4E02\u4E04\u4E05\u4E06\u4E0F\u4E12\u4E17\u4E1F\u4E20\u4E21\u4E23\u4E26\u4E29\u4E2E\u4E2F\u4E31\u4E33\u4E35\u4E37\u4E3C\u4E40\u4E41\u4E42\u4E44\u4E46\u4E4A\u4E51\u4E55\u4E57\u4E5A\u4E5B\u4E62\u4E63\u4E64\u4E65\u4E67\u4E68\u4E6A',
        5,
        '\u4E72\u4E74',
        9,
        '\u4E7F',
        6,
        '\u4E87\u4E8A',
      ],
      [
        '8180',
        '\u4E90\u4E96\u4E97\u4E99\u4E9C\u4E9D\u4E9E\u4EA3\u4EAA\u4EAF\u4EB0\u4EB1\u4EB4\u4EB6\u4EB7\u4EB8\u4EB9\u4EBC\u4EBD\u4EBE\u4EC8\u4ECC\u4ECF\u4ED0\u4ED2\u4EDA\u4EDB\u4EDC\u4EE0\u4EE2\u4EE6\u4EE7\u4EE9\u4EED\u4EEE\u4EEF\u4EF1\u4EF4\u4EF8\u4EF9\u4EFA\u4EFC\u4EFE\u4F00\u4F02',
        6,
        '\u4F0B\u4F0C\u4F12',
        4,
        '\u4F1C\u4F1D\u4F21\u4F23\u4F28\u4F29\u4F2C\u4F2D\u4F2E\u4F31\u4F33\u4F35\u4F37\u4F39\u4F3B\u4F3E',
        4,
        '\u4F44\u4F45\u4F47',
        5,
        '\u4F52\u4F54\u4F56\u4F61\u4F62\u4F66\u4F68\u4F6A\u4F6B\u4F6D\u4F6E\u4F71\u4F72\u4F75\u4F77\u4F78\u4F79\u4F7A\u4F7D\u4F80\u4F81\u4F82\u4F85\u4F86\u4F87\u4F8A\u4F8C\u4F8E\u4F90\u4F92\u4F93\u4F95\u4F96\u4F98\u4F99\u4F9A\u4F9C\u4F9E\u4F9F\u4FA1\u4FA2',
      ],
      [
        '8240',
        '\u4FA4\u4FAB\u4FAD\u4FB0',
        4,
        '\u4FB6',
        8,
        '\u4FC0\u4FC1\u4FC2\u4FC6\u4FC7\u4FC8\u4FC9\u4FCB\u4FCC\u4FCD\u4FD2',
        4,
        '\u4FD9\u4FDB\u4FE0\u4FE2\u4FE4\u4FE5\u4FE7\u4FEB\u4FEC\u4FF0\u4FF2\u4FF4\u4FF5\u4FF6\u4FF7\u4FF9\u4FFB\u4FFC\u4FFD\u4FFF',
        11,
      ],
      [
        '8280',
        '\u500B\u500E\u5010\u5011\u5013\u5015\u5016\u5017\u501B\u501D\u501E\u5020\u5022\u5023\u5024\u5027\u502B\u502F',
        10,
        '\u503B\u503D\u503F\u5040\u5041\u5042\u5044\u5045\u5046\u5049\u504A\u504B\u504D\u5050',
        4,
        '\u5056\u5057\u5058\u5059\u505B\u505D',
        7,
        '\u5066',
        5,
        '\u506D',
        8,
        '\u5078\u5079\u507A\u507C\u507D\u5081\u5082\u5083\u5084\u5086\u5087\u5089\u508A\u508B\u508C\u508E',
        20,
        '\u50A4\u50A6\u50AA\u50AB\u50AD',
        4,
        '\u50B3',
        6,
        '\u50BC',
      ],
      [
        '8340',
        '\u50BD',
        17,
        '\u50D0',
        5,
        '\u50D7\u50D8\u50D9\u50DB',
        10,
        '\u50E8\u50E9\u50EA\u50EB\u50EF\u50F0\u50F1\u50F2\u50F4\u50F6',
        4,
        '\u50FC',
        9,
        '\u5108',
      ],
      [
        '8380',
        '\u5109\u510A\u510C',
        5,
        '\u5113',
        13,
        '\u5122',
        28,
        '\u5142\u5147\u514A\u514C\u514E\u514F\u5150\u5152\u5153\u5157\u5158\u5159\u515B\u515D',
        4,
        '\u5163\u5164\u5166\u5167\u5169\u516A\u516F\u5172\u517A\u517E\u517F\u5183\u5184\u5186\u5187\u518A\u518B\u518E\u518F\u5190\u5191\u5193\u5194\u5198\u519A\u519D\u519E\u519F\u51A1\u51A3\u51A6',
        4,
        '\u51AD\u51AE\u51B4\u51B8\u51B9\u51BA\u51BE\u51BF\u51C1\u51C2\u51C3\u51C5\u51C8\u51CA\u51CD\u51CE\u51D0\u51D2',
        5,
      ],
      [
        '8440',
        '\u51D8\u51D9\u51DA\u51DC\u51DE\u51DF\u51E2\u51E3\u51E5',
        5,
        '\u51EC\u51EE\u51F1\u51F2\u51F4\u51F7\u51FE\u5204\u5205\u5209\u520B\u520C\u520F\u5210\u5213\u5214\u5215\u521C\u521E\u521F\u5221\u5222\u5223\u5225\u5226\u5227\u522A\u522C\u522F\u5231\u5232\u5234\u5235\u523C\u523E\u5244',
        5,
        '\u524B\u524E\u524F\u5252\u5253\u5255\u5257\u5258',
      ],
      [
        '8480',
        '\u5259\u525A\u525B\u525D\u525F\u5260\u5262\u5263\u5264\u5266\u5268\u526B\u526C\u526D\u526E\u5270\u5271\u5273',
        9,
        '\u527E\u5280\u5283',
        4,
        '\u5289',
        6,
        '\u5291\u5292\u5294',
        6,
        '\u529C\u52A4\u52A5\u52A6\u52A7\u52AE\u52AF\u52B0\u52B4',
        9,
        '\u52C0\u52C1\u52C2\u52C4\u52C5\u52C6\u52C8\u52CA\u52CC\u52CD\u52CE\u52CF\u52D1\u52D3\u52D4\u52D5\u52D7\u52D9',
        5,
        '\u52E0\u52E1\u52E2\u52E3\u52E5',
        10,
        '\u52F1',
        7,
        '\u52FB\u52FC\u52FD\u5301\u5302\u5303\u5304\u5307\u5309\u530A\u530B\u530C\u530E',
      ],
      [
        '8540',
        '\u5311\u5312\u5313\u5314\u5318\u531B\u531C\u531E\u531F\u5322\u5324\u5325\u5327\u5328\u5329\u532B\u532C\u532D\u532F',
        9,
        '\u533C\u533D\u5340\u5342\u5344\u5346\u534B\u534C\u534D\u5350\u5354\u5358\u5359\u535B\u535D\u5365\u5368\u536A\u536C\u536D\u5372\u5376\u5379\u537B\u537C\u537D\u537E\u5380\u5381\u5383\u5387\u5388\u538A\u538E\u538F',
      ],
      [
        '8580',
        '\u5390',
        4,
        '\u5396\u5397\u5399\u539B\u539C\u539E\u53A0\u53A1\u53A4\u53A7\u53AA\u53AB\u53AC\u53AD\u53AF',
        6,
        '\u53B7\u53B8\u53B9\u53BA\u53BC\u53BD\u53BE\u53C0\u53C3',
        4,
        '\u53CE\u53CF\u53D0\u53D2\u53D3\u53D5\u53DA\u53DC\u53DD\u53DE\u53E1\u53E2\u53E7\u53F4\u53FA\u53FE\u53FF\u5400\u5402\u5405\u5407\u540B\u5414\u5418\u5419\u541A\u541C\u5422\u5424\u5425\u542A\u5430\u5433\u5436\u5437\u543A\u543D\u543F\u5441\u5442\u5444\u5445\u5447\u5449\u544C\u544D\u544E\u544F\u5451\u545A\u545D',
        4,
        '\u5463\u5465\u5467\u5469',
        7,
        '\u5474\u5479\u547A\u547E\u547F\u5481\u5483\u5485\u5487\u5488\u5489\u548A\u548D\u5491\u5493\u5497\u5498\u549C\u549E\u549F\u54A0\u54A1',
      ],
      [
        '8640',
        '\u54A2\u54A5\u54AE\u54B0\u54B2\u54B5\u54B6\u54B7\u54B9\u54BA\u54BC\u54BE\u54C3\u54C5\u54CA\u54CB\u54D6\u54D8\u54DB\u54E0',
        4,
        '\u54EB\u54EC\u54EF\u54F0\u54F1\u54F4',
        5,
        '\u54FB\u54FE\u5500\u5502\u5503\u5504\u5505\u5508\u550A',
        4,
        '\u5512\u5513\u5515',
        5,
        '\u551C\u551D\u551E\u551F\u5521\u5525\u5526',
      ],
      [
        '8680',
        '\u5528\u5529\u552B\u552D\u5532\u5534\u5535\u5536\u5538\u5539\u553A\u553B\u553D\u5540\u5542\u5545\u5547\u5548\u554B',
        4,
        '\u5551\u5552\u5553\u5554\u5557',
        4,
        '\u555D\u555E\u555F\u5560\u5562\u5563\u5568\u5569\u556B\u556F',
        5,
        '\u5579\u557A\u557D\u557F\u5585\u5586\u558C\u558D\u558E\u5590\u5592\u5593\u5595\u5596\u5597\u559A\u559B\u559E\u55A0',
        6,
        '\u55A8',
        8,
        '\u55B2\u55B4\u55B6\u55B8\u55BA\u55BC\u55BF',
        4,
        '\u55C6\u55C7\u55C8\u55CA\u55CB\u55CE\u55CF\u55D0\u55D5\u55D7',
        4,
        '\u55DE\u55E0\u55E2\u55E7\u55E9\u55ED\u55EE\u55F0\u55F1\u55F4\u55F6\u55F8',
        4,
        '\u55FF\u5602\u5603\u5604\u5605',
      ],
      [
        '8740',
        '\u5606\u5607\u560A\u560B\u560D\u5610',
        7,
        '\u5619\u561A\u561C\u561D\u5620\u5621\u5622\u5625\u5626\u5628\u5629\u562A\u562B\u562E\u562F\u5630\u5633\u5635\u5637\u5638\u563A\u563C\u563D\u563E\u5640',
        11,
        '\u564F',
        4,
        '\u5655\u5656\u565A\u565B\u565D',
        4,
      ],
      [
        '8780',
        '\u5663\u5665\u5666\u5667\u566D\u566E\u566F\u5670\u5672\u5673\u5674\u5675\u5677\u5678\u5679\u567A\u567D',
        7,
        '\u5687',
        6,
        '\u5690\u5691\u5692\u5694',
        14,
        '\u56A4',
        10,
        '\u56B0',
        6,
        '\u56B8\u56B9\u56BA\u56BB\u56BD',
        12,
        '\u56CB',
        8,
        '\u56D5\u56D6\u56D8\u56D9\u56DC\u56E3\u56E5',
        5,
        '\u56EC\u56EE\u56EF\u56F2\u56F3\u56F6\u56F7\u56F8\u56FB\u56FC\u5700\u5701\u5702\u5705\u5707\u570B',
        6,
      ],
      [
        '8840',
        '\u5712',
        9,
        '\u571D\u571E\u5720\u5721\u5722\u5724\u5725\u5726\u5727\u572B\u5731\u5732\u5734',
        4,
        '\u573C\u573D\u573F\u5741\u5743\u5744\u5745\u5746\u5748\u5749\u574B\u5752',
        4,
        '\u5758\u5759\u5762\u5763\u5765\u5767\u576C\u576E\u5770\u5771\u5772\u5774\u5775\u5778\u5779\u577A\u577D\u577E\u577F\u5780',
      ],
      [
        '8880',
        '\u5781\u5787\u5788\u5789\u578A\u578D',
        4,
        '\u5794',
        6,
        '\u579C\u579D\u579E\u579F\u57A5\u57A8\u57AA\u57AC\u57AF\u57B0\u57B1\u57B3\u57B5\u57B6\u57B7\u57B9',
        8,
        '\u57C4',
        6,
        '\u57CC\u57CD\u57D0\u57D1\u57D3\u57D6\u57D7\u57DB\u57DC\u57DE\u57E1\u57E2\u57E3\u57E5',
        7,
        '\u57EE\u57F0\u57F1\u57F2\u57F3\u57F5\u57F6\u57F7\u57FB\u57FC\u57FE\u57FF\u5801\u5803\u5804\u5805\u5808\u5809\u580A\u580C\u580E\u580F\u5810\u5812\u5813\u5814\u5816\u5817\u5818\u581A\u581B\u581C\u581D\u581F\u5822\u5823\u5825',
        4,
        '\u582B',
        4,
        '\u5831\u5832\u5833\u5834\u5836',
        7,
      ],
      [
        '8940',
        '\u583E',
        5,
        '\u5845',
        6,
        '\u584E\u584F\u5850\u5852\u5853\u5855\u5856\u5857\u5859',
        4,
        '\u585F',
        5,
        '\u5866',
        4,
        '\u586D',
        16,
        '\u587F\u5882\u5884\u5886\u5887\u5888\u588A\u588B\u588C',
      ],
      [
        '8980',
        '\u588D',
        4,
        '\u5894',
        4,
        '\u589B\u589C\u589D\u58A0',
        7,
        '\u58AA',
        17,
        '\u58BD\u58BE\u58BF\u58C0\u58C2\u58C3\u58C4\u58C6',
        10,
        '\u58D2\u58D3\u58D4\u58D6',
        13,
        '\u58E5',
        5,
        '\u58ED\u58EF\u58F1\u58F2\u58F4\u58F5\u58F7\u58F8\u58FA',
        7,
        '\u5903\u5905\u5906\u5908',
        4,
        '\u590E\u5910\u5911\u5912\u5913\u5917\u5918\u591B\u591D\u591E\u5920\u5921\u5922\u5923\u5926\u5928\u592C\u5930\u5932\u5933\u5935\u5936\u593B',
      ],
      [
        '8a40',
        '\u593D\u593E\u593F\u5940\u5943\u5945\u5946\u594A\u594C\u594D\u5950\u5952\u5953\u5959\u595B',
        4,
        '\u5961\u5963\u5964\u5966',
        12,
        '\u5975\u5977\u597A\u597B\u597C\u597E\u597F\u5980\u5985\u5989\u598B\u598C\u598E\u598F\u5990\u5991\u5994\u5995\u5998\u599A\u599B\u599C\u599D\u599F\u59A0\u59A1\u59A2\u59A6',
      ],
      [
        '8a80',
        '\u59A7\u59AC\u59AD\u59B0\u59B1\u59B3',
        5,
        '\u59BA\u59BC\u59BD\u59BF',
        6,
        '\u59C7\u59C8\u59C9\u59CC\u59CD\u59CE\u59CF\u59D5\u59D6\u59D9\u59DB\u59DE',
        4,
        '\u59E4\u59E6\u59E7\u59E9\u59EA\u59EB\u59ED',
        11,
        '\u59FA\u59FC\u59FD\u59FE\u5A00\u5A02\u5A0A\u5A0B\u5A0D\u5A0E\u5A0F\u5A10\u5A12\u5A14\u5A15\u5A16\u5A17\u5A19\u5A1A\u5A1B\u5A1D\u5A1E\u5A21\u5A22\u5A24\u5A26\u5A27\u5A28\u5A2A',
        6,
        '\u5A33\u5A35\u5A37',
        4,
        '\u5A3D\u5A3E\u5A3F\u5A41',
        4,
        '\u5A47\u5A48\u5A4B',
        9,
        '\u5A56\u5A57\u5A58\u5A59\u5A5B',
        5,
      ],
      [
        '8b40',
        '\u5A61\u5A63\u5A64\u5A65\u5A66\u5A68\u5A69\u5A6B',
        8,
        '\u5A78\u5A79\u5A7B\u5A7C\u5A7D\u5A7E\u5A80',
        17,
        '\u5A93',
        6,
        '\u5A9C',
        13,
        '\u5AAB\u5AAC',
      ],
      [
        '8b80',
        '\u5AAD',
        4,
        '\u5AB4\u5AB6\u5AB7\u5AB9',
        4,
        '\u5ABF\u5AC0\u5AC3',
        5,
        '\u5ACA\u5ACB\u5ACD',
        4,
        '\u5AD3\u5AD5\u5AD7\u5AD9\u5ADA\u5ADB\u5ADD\u5ADE\u5ADF\u5AE2\u5AE4\u5AE5\u5AE7\u5AE8\u5AEA\u5AEC',
        4,
        '\u5AF2',
        22,
        '\u5B0A',
        11,
        '\u5B18',
        25,
        '\u5B33\u5B35\u5B36\u5B38',
        7,
        '\u5B41',
        6,
      ],
      [
        '8c40',
        '\u5B48',
        7,
        '\u5B52\u5B56\u5B5E\u5B60\u5B61\u5B67\u5B68\u5B6B\u5B6D\u5B6E\u5B6F\u5B72\u5B74\u5B76\u5B77\u5B78\u5B79\u5B7B\u5B7C\u5B7E\u5B7F\u5B82\u5B86\u5B8A\u5B8D\u5B8E\u5B90\u5B91\u5B92\u5B94\u5B96\u5B9F\u5BA7\u5BA8\u5BA9\u5BAC\u5BAD\u5BAE\u5BAF\u5BB1\u5BB2\u5BB7\u5BBA\u5BBB\u5BBC\u5BC0\u5BC1\u5BC3\u5BC8\u5BC9\u5BCA\u5BCB\u5BCD\u5BCE\u5BCF',
      ],
      [
        '8c80',
        '\u5BD1\u5BD4',
        8,
        '\u5BE0\u5BE2\u5BE3\u5BE6\u5BE7\u5BE9',
        4,
        '\u5BEF\u5BF1',
        6,
        '\u5BFD\u5BFE\u5C00\u5C02\u5C03\u5C05\u5C07\u5C08\u5C0B\u5C0C\u5C0D\u5C0E\u5C10\u5C12\u5C13\u5C17\u5C19\u5C1B\u5C1E\u5C1F\u5C20\u5C21\u5C23\u5C26\u5C28\u5C29\u5C2A\u5C2B\u5C2D\u5C2E\u5C2F\u5C30\u5C32\u5C33\u5C35\u5C36\u5C37\u5C43\u5C44\u5C46\u5C47\u5C4C\u5C4D\u5C52\u5C53\u5C54\u5C56\u5C57\u5C58\u5C5A\u5C5B\u5C5C\u5C5D\u5C5F\u5C62\u5C64\u5C67',
        6,
        '\u5C70\u5C72',
        6,
        '\u5C7B\u5C7C\u5C7D\u5C7E\u5C80\u5C83',
        4,
        '\u5C89\u5C8A\u5C8B\u5C8E\u5C8F\u5C92\u5C93\u5C95\u5C9D',
        4,
        '\u5CA4',
        4,
      ],
      [
        '8d40',
        '\u5CAA\u5CAE\u5CAF\u5CB0\u5CB2\u5CB4\u5CB6\u5CB9\u5CBA\u5CBB\u5CBC\u5CBE\u5CC0\u5CC2\u5CC3\u5CC5',
        5,
        '\u5CCC',
        5,
        '\u5CD3',
        5,
        '\u5CDA',
        6,
        '\u5CE2\u5CE3\u5CE7\u5CE9\u5CEB\u5CEC\u5CEE\u5CEF\u5CF1',
        9,
        '\u5CFC',
        4,
      ],
      [
        '8d80',
        '\u5D01\u5D04\u5D05\u5D08',
        5,
        '\u5D0F',
        4,
        '\u5D15\u5D17\u5D18\u5D19\u5D1A\u5D1C\u5D1D\u5D1F',
        4,
        '\u5D25\u5D28\u5D2A\u5D2B\u5D2C\u5D2F',
        4,
        '\u5D35',
        7,
        '\u5D3F',
        7,
        '\u5D48\u5D49\u5D4D',
        10,
        '\u5D59\u5D5A\u5D5C\u5D5E',
        10,
        '\u5D6A\u5D6D\u5D6E\u5D70\u5D71\u5D72\u5D73\u5D75',
        12,
        '\u5D83',
        21,
        '\u5D9A\u5D9B\u5D9C\u5D9E\u5D9F\u5DA0',
      ],
      [
        '8e40',
        '\u5DA1',
        21,
        '\u5DB8',
        12,
        '\u5DC6',
        6,
        '\u5DCE',
        12,
        '\u5DDC\u5DDF\u5DE0\u5DE3\u5DE4\u5DEA\u5DEC\u5DED',
      ],
      [
        '8e80',
        '\u5DF0\u5DF5\u5DF6\u5DF8',
        4,
        '\u5DFF\u5E00\u5E04\u5E07\u5E09\u5E0A\u5E0B\u5E0D\u5E0E\u5E12\u5E13\u5E17\u5E1E',
        7,
        '\u5E28',
        4,
        '\u5E2F\u5E30\u5E32',
        4,
        '\u5E39\u5E3A\u5E3E\u5E3F\u5E40\u5E41\u5E43\u5E46',
        5,
        '\u5E4D',
        6,
        '\u5E56',
        4,
        '\u5E5C\u5E5D\u5E5F\u5E60\u5E63',
        14,
        '\u5E75\u5E77\u5E79\u5E7E\u5E81\u5E82\u5E83\u5E85\u5E88\u5E89\u5E8C\u5E8D\u5E8E\u5E92\u5E98\u5E9B\u5E9D\u5EA1\u5EA2\u5EA3\u5EA4\u5EA8',
        4,
        '\u5EAE',
        4,
        '\u5EB4\u5EBA\u5EBB\u5EBC\u5EBD\u5EBF',
        6,
      ],
      [
        '8f40',
        '\u5EC6\u5EC7\u5EC8\u5ECB',
        5,
        '\u5ED4\u5ED5\u5ED7\u5ED8\u5ED9\u5EDA\u5EDC',
        11,
        '\u5EE9\u5EEB',
        8,
        '\u5EF5\u5EF8\u5EF9\u5EFB\u5EFC\u5EFD\u5F05\u5F06\u5F07\u5F09\u5F0C\u5F0D\u5F0E\u5F10\u5F12\u5F14\u5F16\u5F19\u5F1A\u5F1C\u5F1D\u5F1E\u5F21\u5F22\u5F23\u5F24',
      ],
      [
        '8f80',
        '\u5F28\u5F2B\u5F2C\u5F2E\u5F30\u5F32',
        6,
        '\u5F3B\u5F3D\u5F3E\u5F3F\u5F41',
        14,
        '\u5F51\u5F54\u5F59\u5F5A\u5F5B\u5F5C\u5F5E\u5F5F\u5F60\u5F63\u5F65\u5F67\u5F68\u5F6B\u5F6E\u5F6F\u5F72\u5F74\u5F75\u5F76\u5F78\u5F7A\u5F7D\u5F7E\u5F7F\u5F83\u5F86\u5F8D\u5F8E\u5F8F\u5F91\u5F93\u5F94\u5F96\u5F9A\u5F9B\u5F9D\u5F9E\u5F9F\u5FA0\u5FA2',
        5,
        '\u5FA9\u5FAB\u5FAC\u5FAF',
        5,
        '\u5FB6\u5FB8\u5FB9\u5FBA\u5FBB\u5FBE',
        4,
        '\u5FC7\u5FC8\u5FCA\u5FCB\u5FCE\u5FD3\u5FD4\u5FD5\u5FDA\u5FDB\u5FDC\u5FDE\u5FDF\u5FE2\u5FE3\u5FE5\u5FE6\u5FE8\u5FE9\u5FEC\u5FEF\u5FF0\u5FF2\u5FF3\u5FF4\u5FF6\u5FF7\u5FF9\u5FFA\u5FFC\u6007',
      ],
      [
        '9040',
        '\u6008\u6009\u600B\u600C\u6010\u6011\u6013\u6017\u6018\u601A\u601E\u601F\u6022\u6023\u6024\u602C\u602D\u602E\u6030',
        4,
        '\u6036',
        4,
        '\u603D\u603E\u6040\u6044',
        6,
        '\u604C\u604E\u604F\u6051\u6053\u6054\u6056\u6057\u6058\u605B\u605C\u605E\u605F\u6060\u6061\u6065\u6066\u606E\u6071\u6072\u6074\u6075\u6077\u607E\u6080',
      ],
      [
        '9080',
        '\u6081\u6082\u6085\u6086\u6087\u6088\u608A\u608B\u608E\u608F\u6090\u6091\u6093\u6095\u6097\u6098\u6099\u609C\u609E\u60A1\u60A2\u60A4\u60A5\u60A7\u60A9\u60AA\u60AE\u60B0\u60B3\u60B5\u60B6\u60B7\u60B9\u60BA\u60BD',
        7,
        '\u60C7\u60C8\u60C9\u60CC',
        4,
        '\u60D2\u60D3\u60D4\u60D6\u60D7\u60D9\u60DB\u60DE\u60E1',
        4,
        '\u60EA\u60F1\u60F2\u60F5\u60F7\u60F8\u60FB',
        4,
        '\u6102\u6103\u6104\u6105\u6107\u610A\u610B\u610C\u6110',
        4,
        '\u6116\u6117\u6118\u6119\u611B\u611C\u611D\u611E\u6121\u6122\u6125\u6128\u6129\u612A\u612C',
        18,
        '\u6140',
        6,
      ],
      [
        '9140',
        '\u6147\u6149\u614B\u614D\u614F\u6150\u6152\u6153\u6154\u6156',
        6,
        '\u615E\u615F\u6160\u6161\u6163\u6164\u6165\u6166\u6169',
        6,
        '\u6171\u6172\u6173\u6174\u6176\u6178',
        18,
        '\u618C\u618D\u618F',
        4,
        '\u6195',
      ],
      [
        '9180',
        '\u6196',
        6,
        '\u619E',
        8,
        '\u61AA\u61AB\u61AD',
        9,
        '\u61B8',
        5,
        '\u61BF\u61C0\u61C1\u61C3',
        4,
        '\u61C9\u61CC',
        4,
        '\u61D3\u61D5',
        16,
        '\u61E7',
        13,
        '\u61F6',
        8,
        '\u6200',
        5,
        '\u6207\u6209\u6213\u6214\u6219\u621C\u621D\u621E\u6220\u6223\u6226\u6227\u6228\u6229\u622B\u622D\u622F\u6230\u6231\u6232\u6235\u6236\u6238',
        4,
        '\u6242\u6244\u6245\u6246\u624A',
      ],
      [
        '9240',
        '\u624F\u6250\u6255\u6256\u6257\u6259\u625A\u625C',
        6,
        '\u6264\u6265\u6268\u6271\u6272\u6274\u6275\u6277\u6278\u627A\u627B\u627D\u6281\u6282\u6283\u6285\u6286\u6287\u6288\u628B',
        5,
        '\u6294\u6299\u629C\u629D\u629E\u62A3\u62A6\u62A7\u62A9\u62AA\u62AD\u62AE\u62AF\u62B0\u62B2\u62B3\u62B4\u62B6\u62B7\u62B8\u62BA\u62BE\u62C0\u62C1',
      ],
      [
        '9280',
        '\u62C3\u62CB\u62CF\u62D1\u62D5\u62DD\u62DE\u62E0\u62E1\u62E4\u62EA\u62EB\u62F0\u62F2\u62F5\u62F8\u62F9\u62FA\u62FB\u6300\u6303\u6304\u6305\u6306\u630A\u630B\u630C\u630D\u630F\u6310\u6312\u6313\u6314\u6315\u6317\u6318\u6319\u631C\u6326\u6327\u6329\u632C\u632D\u632E\u6330\u6331\u6333',
        5,
        '\u633B\u633C\u633E\u633F\u6340\u6341\u6344\u6347\u6348\u634A\u6351\u6352\u6353\u6354\u6356',
        7,
        '\u6360\u6364\u6365\u6366\u6368\u636A\u636B\u636C\u636F\u6370\u6372\u6373\u6374\u6375\u6378\u6379\u637C\u637D\u637E\u637F\u6381\u6383\u6384\u6385\u6386\u638B\u638D\u6391\u6393\u6394\u6395\u6397\u6399',
        6,
        '\u63A1\u63A4\u63A6\u63AB\u63AF\u63B1\u63B2\u63B5\u63B6\u63B9\u63BB\u63BD\u63BF\u63C0',
      ],
      [
        '9340',
        '\u63C1\u63C2\u63C3\u63C5\u63C7\u63C8\u63CA\u63CB\u63CC\u63D1\u63D3\u63D4\u63D5\u63D7',
        6,
        '\u63DF\u63E2\u63E4',
        4,
        '\u63EB\u63EC\u63EE\u63EF\u63F0\u63F1\u63F3\u63F5\u63F7\u63F9\u63FA\u63FB\u63FC\u63FE\u6403\u6404\u6406',
        4,
        '\u640D\u640E\u6411\u6412\u6415',
        5,
        '\u641D\u641F\u6422\u6423\u6424',
      ],
      [
        '9380',
        '\u6425\u6427\u6428\u6429\u642B\u642E',
        5,
        '\u6435',
        4,
        '\u643B\u643C\u643E\u6440\u6442\u6443\u6449\u644B',
        6,
        '\u6453\u6455\u6456\u6457\u6459',
        4,
        '\u645F',
        7,
        '\u6468\u646A\u646B\u646C\u646E',
        9,
        '\u647B',
        6,
        '\u6483\u6486\u6488',
        8,
        '\u6493\u6494\u6497\u6498\u649A\u649B\u649C\u649D\u649F',
        4,
        '\u64A5\u64A6\u64A7\u64A8\u64AA\u64AB\u64AF\u64B1\u64B2\u64B3\u64B4\u64B6\u64B9\u64BB\u64BD\u64BE\u64BF\u64C1\u64C3\u64C4\u64C6',
        6,
        '\u64CF\u64D1\u64D3\u64D4\u64D5\u64D6\u64D9\u64DA',
      ],
      [
        '9440',
        '\u64DB\u64DC\u64DD\u64DF\u64E0\u64E1\u64E3\u64E5\u64E7',
        24,
        '\u6501',
        7,
        '\u650A',
        7,
        '\u6513',
        4,
        '\u6519',
        8,
      ],
      [
        '9480',
        '\u6522\u6523\u6524\u6526',
        4,
        '\u652C\u652D\u6530\u6531\u6532\u6533\u6537\u653A\u653C\u653D\u6540',
        4,
        '\u6546\u6547\u654A\u654B\u654D\u654E\u6550\u6552\u6553\u6554\u6557\u6558\u655A\u655C\u655F\u6560\u6561\u6564\u6565\u6567\u6568\u6569\u656A\u656D\u656E\u656F\u6571\u6573\u6575\u6576\u6578',
        14,
        '\u6588\u6589\u658A\u658D\u658E\u658F\u6592\u6594\u6595\u6596\u6598\u659A\u659D\u659E\u65A0\u65A2\u65A3\u65A6\u65A8\u65AA\u65AC\u65AE\u65B1',
        7,
        '\u65BA\u65BB\u65BE\u65BF\u65C0\u65C2\u65C7\u65C8\u65C9\u65CA\u65CD\u65D0\u65D1\u65D3\u65D4\u65D5\u65D8',
        7,
        '\u65E1\u65E3\u65E4\u65EA\u65EB',
      ],
      [
        '9540',
        '\u65F2\u65F3\u65F4\u65F5\u65F8\u65F9\u65FB',
        4,
        '\u6601\u6604\u6605\u6607\u6608\u6609\u660B\u660D\u6610\u6611\u6612\u6616\u6617\u6618\u661A\u661B\u661C\u661E\u6621\u6622\u6623\u6624\u6626\u6629\u662A\u662B\u662C\u662E\u6630\u6632\u6633\u6637',
        4,
        '\u663D\u663F\u6640\u6642\u6644',
        6,
        '\u664D\u664E\u6650\u6651\u6658',
      ],
      [
        '9580',
        '\u6659\u665B\u665C\u665D\u665E\u6660\u6662\u6663\u6665\u6667\u6669',
        4,
        '\u6671\u6672\u6673\u6675\u6678\u6679\u667B\u667C\u667D\u667F\u6680\u6681\u6683\u6685\u6686\u6688\u6689\u668A\u668B\u668D\u668E\u668F\u6690\u6692\u6693\u6694\u6695\u6698',
        4,
        '\u669E',
        8,
        '\u66A9',
        4,
        '\u66AF',
        4,
        '\u66B5\u66B6\u66B7\u66B8\u66BA\u66BB\u66BC\u66BD\u66BF',
        25,
        '\u66DA\u66DE',
        7,
        '\u66E7\u66E8\u66EA',
        5,
        '\u66F1\u66F5\u66F6\u66F8\u66FA\u66FB\u66FD\u6701\u6702\u6703',
      ],
      [
        '9640',
        '\u6704\u6705\u6706\u6707\u670C\u670E\u670F\u6711\u6712\u6713\u6716\u6718\u6719\u671A\u671C\u671E\u6720',
        5,
        '\u6727\u6729\u672E\u6730\u6732\u6733\u6736\u6737\u6738\u6739\u673B\u673C\u673E\u673F\u6741\u6744\u6745\u6747\u674A\u674B\u674D\u6752\u6754\u6755\u6757',
        4,
        '\u675D\u6762\u6763\u6764\u6766\u6767\u676B\u676C\u676E\u6771\u6774\u6776',
      ],
      [
        '9680',
        '\u6778\u6779\u677A\u677B\u677D\u6780\u6782\u6783\u6785\u6786\u6788\u678A\u678C\u678D\u678E\u678F\u6791\u6792\u6793\u6794\u6796\u6799\u679B\u679F\u67A0\u67A1\u67A4\u67A6\u67A9\u67AC\u67AE\u67B1\u67B2\u67B4\u67B9',
        7,
        '\u67C2\u67C5',
        9,
        '\u67D5\u67D6\u67D7\u67DB\u67DF\u67E1\u67E3\u67E4\u67E6\u67E7\u67E8\u67EA\u67EB\u67ED\u67EE\u67F2\u67F5',
        7,
        '\u67FE\u6801\u6802\u6803\u6804\u6806\u680D\u6810\u6812\u6814\u6815\u6818',
        4,
        '\u681E\u681F\u6820\u6822',
        6,
        '\u682B',
        6,
        '\u6834\u6835\u6836\u683A\u683B\u683F\u6847\u684B\u684D\u684F\u6852\u6856',
        5,
      ],
      [
        '9740',
        '\u685C\u685D\u685E\u685F\u686A\u686C',
        7,
        '\u6875\u6878',
        8,
        '\u6882\u6884\u6887',
        7,
        '\u6890\u6891\u6892\u6894\u6895\u6896\u6898',
        9,
        '\u68A3\u68A4\u68A5\u68A9\u68AA\u68AB\u68AC\u68AE\u68B1\u68B2\u68B4\u68B6\u68B7\u68B8',
      ],
      [
        '9780',
        '\u68B9',
        6,
        '\u68C1\u68C3',
        5,
        '\u68CA\u68CC\u68CE\u68CF\u68D0\u68D1\u68D3\u68D4\u68D6\u68D7\u68D9\u68DB',
        4,
        '\u68E1\u68E2\u68E4',
        9,
        '\u68EF\u68F2\u68F3\u68F4\u68F6\u68F7\u68F8\u68FB\u68FD\u68FE\u68FF\u6900\u6902\u6903\u6904\u6906',
        4,
        '\u690C\u690F\u6911\u6913',
        11,
        '\u6921\u6922\u6923\u6925',
        7,
        '\u692E\u692F\u6931\u6932\u6933\u6935\u6936\u6937\u6938\u693A\u693B\u693C\u693E\u6940\u6941\u6943',
        16,
        '\u6955\u6956\u6958\u6959\u695B\u695C\u695F',
      ],
      [
        '9840',
        '\u6961\u6962\u6964\u6965\u6967\u6968\u6969\u696A\u696C\u696D\u696F\u6970\u6972',
        4,
        '\u697A\u697B\u697D\u697E\u697F\u6981\u6983\u6985\u698A\u698B\u698C\u698E',
        5,
        '\u6996\u6997\u6999\u699A\u699D',
        9,
        '\u69A9\u69AA\u69AC\u69AE\u69AF\u69B0\u69B2\u69B3\u69B5\u69B6\u69B8\u69B9\u69BA\u69BC\u69BD',
      ],
      [
        '9880',
        '\u69BE\u69BF\u69C0\u69C2',
        7,
        '\u69CB\u69CD\u69CF\u69D1\u69D2\u69D3\u69D5',
        5,
        '\u69DC\u69DD\u69DE\u69E1',
        11,
        '\u69EE\u69EF\u69F0\u69F1\u69F3',
        9,
        '\u69FE\u6A00',
        9,
        '\u6A0B',
        11,
        '\u6A19',
        5,
        '\u6A20\u6A22',
        5,
        '\u6A29\u6A2B\u6A2C\u6A2D\u6A2E\u6A30\u6A32\u6A33\u6A34\u6A36',
        6,
        '\u6A3F',
        4,
        '\u6A45\u6A46\u6A48',
        7,
        '\u6A51',
        6,
        '\u6A5A',
      ],
      [
        '9940',
        '\u6A5C',
        4,
        '\u6A62\u6A63\u6A64\u6A66',
        10,
        '\u6A72',
        6,
        '\u6A7A\u6A7B\u6A7D\u6A7E\u6A7F\u6A81\u6A82\u6A83\u6A85',
        8,
        '\u6A8F\u6A92',
        4,
        '\u6A98',
        7,
        '\u6AA1',
        5,
      ],
      ['9980', '\u6AA7\u6AA8\u6AAA\u6AAD', 114, '\u6B25\u6B26\u6B28', 6],
      [
        '9a40',
        '\u6B2F\u6B30\u6B31\u6B33\u6B34\u6B35\u6B36\u6B38\u6B3B\u6B3C\u6B3D\u6B3F\u6B40\u6B41\u6B42\u6B44\u6B45\u6B48\u6B4A\u6B4B\u6B4D',
        11,
        '\u6B5A',
        7,
        '\u6B68\u6B69\u6B6B',
        13,
        '\u6B7A\u6B7D\u6B7E\u6B7F\u6B80\u6B85\u6B88',
      ],
      [
        '9a80',
        '\u6B8C\u6B8E\u6B8F\u6B90\u6B91\u6B94\u6B95\u6B97\u6B98\u6B99\u6B9C',
        4,
        '\u6BA2',
        7,
        '\u6BAB',
        7,
        '\u6BB6\u6BB8',
        6,
        '\u6BC0\u6BC3\u6BC4\u6BC6',
        4,
        '\u6BCC\u6BCE\u6BD0\u6BD1\u6BD8\u6BDA\u6BDC',
        4,
        '\u6BE2',
        7,
        '\u6BEC\u6BED\u6BEE\u6BF0\u6BF1\u6BF2\u6BF4\u6BF6\u6BF7\u6BF8\u6BFA\u6BFB\u6BFC\u6BFE',
        6,
        '\u6C08',
        4,
        '\u6C0E\u6C12\u6C17\u6C1C\u6C1D\u6C1E\u6C20\u6C23\u6C25\u6C2B\u6C2C\u6C2D\u6C31\u6C33\u6C36\u6C37\u6C39\u6C3A\u6C3B\u6C3C\u6C3E\u6C3F\u6C43\u6C44\u6C45\u6C48\u6C4B',
        4,
        '\u6C51\u6C52\u6C53\u6C56\u6C58',
      ],
      [
        '9b40',
        '\u6C59\u6C5A\u6C62\u6C63\u6C65\u6C66\u6C67\u6C6B',
        4,
        '\u6C71\u6C73\u6C75\u6C77\u6C78\u6C7A\u6C7B\u6C7C\u6C7F\u6C80\u6C84\u6C87\u6C8A\u6C8B\u6C8D\u6C8E\u6C91\u6C92\u6C95\u6C96\u6C97\u6C98\u6C9A\u6C9C\u6C9D\u6C9E\u6CA0\u6CA2\u6CA8\u6CAC\u6CAF\u6CB0\u6CB4\u6CB5\u6CB6\u6CB7\u6CBA\u6CC0\u6CC1\u6CC2\u6CC3\u6CC6\u6CC7\u6CC8\u6CCB\u6CCD\u6CCE\u6CCF\u6CD1\u6CD2\u6CD8',
      ],
      [
        '9b80',
        '\u6CD9\u6CDA\u6CDC\u6CDD\u6CDF\u6CE4\u6CE6\u6CE7\u6CE9\u6CEC\u6CED\u6CF2\u6CF4\u6CF9\u6CFF\u6D00\u6D02\u6D03\u6D05\u6D06\u6D08\u6D09\u6D0A\u6D0D\u6D0F\u6D10\u6D11\u6D13\u6D14\u6D15\u6D16\u6D18\u6D1C\u6D1D\u6D1F',
        5,
        '\u6D26\u6D28\u6D29\u6D2C\u6D2D\u6D2F\u6D30\u6D34\u6D36\u6D37\u6D38\u6D3A\u6D3F\u6D40\u6D42\u6D44\u6D49\u6D4C\u6D50\u6D55\u6D56\u6D57\u6D58\u6D5B\u6D5D\u6D5F\u6D61\u6D62\u6D64\u6D65\u6D67\u6D68\u6D6B\u6D6C\u6D6D\u6D70\u6D71\u6D72\u6D73\u6D75\u6D76\u6D79\u6D7A\u6D7B\u6D7D',
        4,
        '\u6D83\u6D84\u6D86\u6D87\u6D8A\u6D8B\u6D8D\u6D8F\u6D90\u6D92\u6D96',
        4,
        '\u6D9C\u6DA2\u6DA5\u6DAC\u6DAD\u6DB0\u6DB1\u6DB3\u6DB4\u6DB6\u6DB7\u6DB9',
        5,
        '\u6DC1\u6DC2\u6DC3\u6DC8\u6DC9\u6DCA',
      ],
      [
        '9c40',
        '\u6DCD\u6DCE\u6DCF\u6DD0\u6DD2\u6DD3\u6DD4\u6DD5\u6DD7\u6DDA\u6DDB\u6DDC\u6DDF\u6DE2\u6DE3\u6DE5\u6DE7\u6DE8\u6DE9\u6DEA\u6DED\u6DEF\u6DF0\u6DF2\u6DF4\u6DF5\u6DF6\u6DF8\u6DFA\u6DFD',
        7,
        '\u6E06\u6E07\u6E08\u6E09\u6E0B\u6E0F\u6E12\u6E13\u6E15\u6E18\u6E19\u6E1B\u6E1C\u6E1E\u6E1F\u6E22\u6E26\u6E27\u6E28\u6E2A\u6E2C\u6E2E\u6E30\u6E31\u6E33\u6E35',
      ],
      [
        '9c80',
        '\u6E36\u6E37\u6E39\u6E3B',
        7,
        '\u6E45',
        7,
        '\u6E4F\u6E50\u6E51\u6E52\u6E55\u6E57\u6E59\u6E5A\u6E5C\u6E5D\u6E5E\u6E60',
        10,
        '\u6E6C\u6E6D\u6E6F',
        14,
        '\u6E80\u6E81\u6E82\u6E84\u6E87\u6E88\u6E8A',
        4,
        '\u6E91',
        6,
        '\u6E99\u6E9A\u6E9B\u6E9D\u6E9E\u6EA0\u6EA1\u6EA3\u6EA4\u6EA6\u6EA8\u6EA9\u6EAB\u6EAC\u6EAD\u6EAE\u6EB0\u6EB3\u6EB5\u6EB8\u6EB9\u6EBC\u6EBE\u6EBF\u6EC0\u6EC3\u6EC4\u6EC5\u6EC6\u6EC8\u6EC9\u6ECA\u6ECC\u6ECD\u6ECE\u6ED0\u6ED2\u6ED6\u6ED8\u6ED9\u6EDB\u6EDC\u6EDD\u6EE3\u6EE7\u6EEA',
        5,
      ],
      [
        '9d40',
        '\u6EF0\u6EF1\u6EF2\u6EF3\u6EF5\u6EF6\u6EF7\u6EF8\u6EFA',
        7,
        '\u6F03\u6F04\u6F05\u6F07\u6F08\u6F0A',
        4,
        '\u6F10\u6F11\u6F12\u6F16',
        9,
        '\u6F21\u6F22\u6F23\u6F25\u6F26\u6F27\u6F28\u6F2C\u6F2E\u6F30\u6F32\u6F34\u6F35\u6F37',
        6,
        '\u6F3F\u6F40\u6F41\u6F42',
      ],
      [
        '9d80',
        '\u6F43\u6F44\u6F45\u6F48\u6F49\u6F4A\u6F4C\u6F4E',
        9,
        '\u6F59\u6F5A\u6F5B\u6F5D\u6F5F\u6F60\u6F61\u6F63\u6F64\u6F65\u6F67',
        5,
        '\u6F6F\u6F70\u6F71\u6F73\u6F75\u6F76\u6F77\u6F79\u6F7B\u6F7D',
        6,
        '\u6F85\u6F86\u6F87\u6F8A\u6F8B\u6F8F',
        12,
        '\u6F9D\u6F9E\u6F9F\u6FA0\u6FA2',
        4,
        '\u6FA8',
        10,
        '\u6FB4\u6FB5\u6FB7\u6FB8\u6FBA',
        5,
        '\u6FC1\u6FC3',
        5,
        '\u6FCA',
        6,
        '\u6FD3',
        10,
        '\u6FDF\u6FE2\u6FE3\u6FE4\u6FE5',
      ],
      [
        '9e40',
        '\u6FE6',
        7,
        '\u6FF0',
        32,
        '\u7012',
        7,
        '\u701C',
        6,
        '\u7024',
        6,
      ],
      [
        '9e80',
        '\u702B',
        9,
        '\u7036\u7037\u7038\u703A',
        17,
        '\u704D\u704E\u7050',
        13,
        '\u705F',
        11,
        '\u706E\u7071\u7072\u7073\u7074\u7077\u7079\u707A\u707B\u707D\u7081\u7082\u7083\u7084\u7086\u7087\u7088\u708B\u708C\u708D\u708F\u7090\u7091\u7093\u7097\u7098\u709A\u709B\u709E',
        12,
        '\u70B0\u70B2\u70B4\u70B5\u70B6\u70BA\u70BE\u70BF\u70C4\u70C5\u70C6\u70C7\u70C9\u70CB',
        12,
        '\u70DA',
      ],
      [
        '9f40',
        '\u70DC\u70DD\u70DE\u70E0\u70E1\u70E2\u70E3\u70E5\u70EA\u70EE\u70F0',
        6,
        '\u70F8\u70FA\u70FB\u70FC\u70FE',
        10,
        '\u710B',
        4,
        '\u7111\u7112\u7114\u7117\u711B',
        10,
        '\u7127',
        7,
        '\u7132\u7133\u7134',
      ],
      [
        '9f80',
        '\u7135\u7137',
        13,
        '\u7146\u7147\u7148\u7149\u714B\u714D\u714F',
        12,
        '\u715D\u715F',
        4,
        '\u7165\u7169',
        4,
        '\u716F\u7170\u7171\u7174\u7175\u7176\u7177\u7179\u717B\u717C\u717E',
        5,
        '\u7185',
        4,
        '\u718B\u718C\u718D\u718E\u7190\u7191\u7192\u7193\u7195\u7196\u7197\u719A',
        4,
        '\u71A1',
        6,
        '\u71A9\u71AA\u71AB\u71AD',
        5,
        '\u71B4\u71B6\u71B7\u71B8\u71BA',
        8,
        '\u71C4',
        9,
        '\u71CF',
        4,
      ],
      [
        'a040',
        '\u71D6',
        9,
        '\u71E1\u71E2\u71E3\u71E4\u71E6\u71E8',
        5,
        '\u71EF',
        9,
        '\u71FA',
        11,
        '\u7207',
        19,
      ],
      [
        'a080',
        '\u721B\u721C\u721E',
        9,
        '\u7229\u722B\u722D\u722E\u722F\u7232\u7233\u7234\u723A\u723C\u723E\u7240',
        6,
        '\u7249\u724A\u724B\u724E\u724F\u7250\u7251\u7253\u7254\u7255\u7257\u7258\u725A\u725C\u725E\u7260\u7263\u7264\u7265\u7268\u726A\u726B\u726C\u726D\u7270\u7271\u7273\u7274\u7276\u7277\u7278\u727B\u727C\u727D\u7282\u7283\u7285',
        4,
        '\u728C\u728E\u7290\u7291\u7293',
        11,
        '\u72A0',
        11,
        '\u72AE\u72B1\u72B2\u72B3\u72B5\u72BA',
        6,
        '\u72C5\u72C6\u72C7\u72C9\u72CA\u72CB\u72CC\u72CF\u72D1\u72D3\u72D4\u72D5\u72D6\u72D8\u72DA\u72DB',
      ],
      [
        'a1a1',
        '\u3000\u3001\u3002\xB7\u02C9\u02C7\xA8\u3003\u3005\u2014\uFF5E\u2016\u2026\u2018\u2019\u201C\u201D\u3014\u3015\u3008',
        7,
        '\u3016\u3017\u3010\u3011\xB1\xD7\xF7\u2236\u2227\u2228\u2211\u220F\u222A\u2229\u2208\u2237\u221A\u22A5\u2225\u2220\u2312\u2299\u222B\u222E\u2261\u224C\u2248\u223D\u221D\u2260\u226E\u226F\u2264\u2265\u221E\u2235\u2234\u2642\u2640\xB0\u2032\u2033\u2103\uFF04\xA4\uFFE0\uFFE1\u2030\xA7\u2116\u2606\u2605\u25CB\u25CF\u25CE\u25C7\u25C6\u25A1\u25A0\u25B3\u25B2\u203B\u2192\u2190\u2191\u2193\u3013',
      ],
      ['a2a1', '\u2170', 9],
      ['a2b1', '\u2488', 19, '\u2474', 19, '\u2460', 9],
      ['a2e5', '\u3220', 9],
      ['a2f1', '\u2160', 11],
      ['a3a1', '\uFF01\uFF02\uFF03\uFFE5\uFF05', 88, '\uFFE3'],
      ['a4a1', '\u3041', 82],
      ['a5a1', '\u30A1', 85],
      ['a6a1', '\u0391', 16, '\u03A3', 6],
      ['a6c1', '\u03B1', 16, '\u03C3', 6],
      [
        'a6e0',
        '\uFE35\uFE36\uFE39\uFE3A\uFE3F\uFE40\uFE3D\uFE3E\uFE41\uFE42\uFE43\uFE44',
      ],
      ['a6ee', '\uFE3B\uFE3C\uFE37\uFE38\uFE31'],
      ['a6f4', '\uFE33\uFE34'],
      ['a7a1', '\u0410', 5, '\u0401\u0416', 25],
      ['a7d1', '\u0430', 5, '\u0451\u0436', 25],
      [
        'a840',
        '\u02CA\u02CB\u02D9\u2013\u2015\u2025\u2035\u2105\u2109\u2196\u2197\u2198\u2199\u2215\u221F\u2223\u2252\u2266\u2267\u22BF\u2550',
        35,
        '\u2581',
        6,
      ],
      [
        'a880',
        '\u2588',
        7,
        '\u2593\u2594\u2595\u25BC\u25BD\u25E2\u25E3\u25E4\u25E5\u2609\u2295\u3012\u301D\u301E',
      ],
      [
        'a8a1',
        '\u0101\xE1\u01CE\xE0\u0113\xE9\u011B\xE8\u012B\xED\u01D0\xEC\u014D\xF3\u01D2\xF2\u016B\xFA\u01D4\xF9\u01D6\u01D8\u01DA\u01DC\xFC\xEA\u0251',
      ],
      ['a8bd', '\u0144\u0148'],
      ['a8c0', '\u0261'],
      ['a8c5', '\u3105', 36],
      [
        'a940',
        '\u3021',
        8,
        '\u32A3\u338E\u338F\u339C\u339D\u339E\u33A1\u33C4\u33CE\u33D1\u33D2\u33D5\uFE30\uFFE2\uFFE4',
      ],
      ['a959', '\u2121\u3231'],
      ['a95c', '\u2010'],
      [
        'a960',
        '\u30FC\u309B\u309C\u30FD\u30FE\u3006\u309D\u309E\uFE49',
        9,
        '\uFE54\uFE55\uFE56\uFE57\uFE59',
        8,
      ],
      ['a980', '\uFE62', 4, '\uFE68\uFE69\uFE6A\uFE6B'],
      ['a996', '\u3007'],
      ['a9a4', '\u2500', 75],
      [
        'aa40',
        '\u72DC\u72DD\u72DF\u72E2',
        5,
        '\u72EA\u72EB\u72F5\u72F6\u72F9\u72FD\u72FE\u72FF\u7300\u7302\u7304',
        5,
        '\u730B\u730C\u730D\u730F\u7310\u7311\u7312\u7314\u7318\u7319\u731A\u731F\u7320\u7323\u7324\u7326\u7327\u7328\u732D\u732F\u7330\u7332\u7333\u7335\u7336\u733A\u733B\u733C\u733D\u7340',
        8,
      ],
      [
        'aa80',
        '\u7349\u734A\u734B\u734C\u734E\u734F\u7351\u7353\u7354\u7355\u7356\u7358',
        7,
        '\u7361',
        10,
        '\u736E\u7370\u7371',
      ],
      [
        'ab40',
        '\u7372',
        11,
        '\u737F',
        4,
        '\u7385\u7386\u7388\u738A\u738C\u738D\u738F\u7390\u7392\u7393\u7394\u7395\u7397\u7398\u7399\u739A\u739C\u739D\u739E\u73A0\u73A1\u73A3',
        5,
        '\u73AA\u73AC\u73AD\u73B1\u73B4\u73B5\u73B6\u73B8\u73B9\u73BC\u73BD\u73BE\u73BF\u73C1\u73C3',
        4,
      ],
      [
        'ab80',
        '\u73CB\u73CC\u73CE\u73D2',
        6,
        '\u73DA\u73DB\u73DC\u73DD\u73DF\u73E1\u73E2\u73E3\u73E4\u73E6\u73E8\u73EA\u73EB\u73EC\u73EE\u73EF\u73F0\u73F1\u73F3',
        4,
      ],
      [
        'ac40',
        '\u73F8',
        10,
        '\u7404\u7407\u7408\u740B\u740C\u740D\u740E\u7411',
        8,
        '\u741C',
        5,
        '\u7423\u7424\u7427\u7429\u742B\u742D\u742F\u7431\u7432\u7437',
        4,
        '\u743D\u743E\u743F\u7440\u7442',
        11,
      ],
      [
        'ac80',
        '\u744E',
        6,
        '\u7456\u7458\u745D\u7460',
        12,
        '\u746E\u746F\u7471',
        4,
        '\u7478\u7479\u747A',
      ],
      [
        'ad40',
        '\u747B\u747C\u747D\u747F\u7482\u7484\u7485\u7486\u7488\u7489\u748A\u748C\u748D\u748F\u7491',
        10,
        '\u749D\u749F',
        7,
        '\u74AA',
        15,
        '\u74BB',
        12,
      ],
      [
        'ad80',
        '\u74C8',
        9,
        '\u74D3',
        8,
        '\u74DD\u74DF\u74E1\u74E5\u74E7',
        6,
        '\u74F0\u74F1\u74F2',
      ],
      [
        'ae40',
        '\u74F3\u74F5\u74F8',
        6,
        '\u7500\u7501\u7502\u7503\u7505',
        7,
        '\u750E\u7510\u7512\u7514\u7515\u7516\u7517\u751B\u751D\u751E\u7520',
        4,
        '\u7526\u7527\u752A\u752E\u7534\u7536\u7539\u753C\u753D\u753F\u7541\u7542\u7543\u7544\u7546\u7547\u7549\u754A\u754D\u7550\u7551\u7552\u7553\u7555\u7556\u7557\u7558',
      ],
      [
        'ae80',
        '\u755D',
        7,
        '\u7567\u7568\u7569\u756B',
        6,
        '\u7573\u7575\u7576\u7577\u757A',
        4,
        '\u7580\u7581\u7582\u7584\u7585\u7587',
      ],
      [
        'af40',
        '\u7588\u7589\u758A\u758C\u758D\u758E\u7590\u7593\u7595\u7598\u759B\u759C\u759E\u75A2\u75A6',
        4,
        '\u75AD\u75B6\u75B7\u75BA\u75BB\u75BF\u75C0\u75C1\u75C6\u75CB\u75CC\u75CE\u75CF\u75D0\u75D1\u75D3\u75D7\u75D9\u75DA\u75DC\u75DD\u75DF\u75E0\u75E1\u75E5\u75E9\u75EC\u75ED\u75EE\u75EF\u75F2\u75F3\u75F5\u75F6\u75F7\u75F8\u75FA\u75FB\u75FD\u75FE\u7602\u7604\u7606\u7607',
      ],
      [
        'af80',
        '\u7608\u7609\u760B\u760D\u760E\u760F\u7611\u7612\u7613\u7614\u7616\u761A\u761C\u761D\u761E\u7621\u7623\u7627\u7628\u762C\u762E\u762F\u7631\u7632\u7636\u7637\u7639\u763A\u763B\u763D\u7641\u7642\u7644',
      ],
      [
        'b040',
        '\u7645',
        6,
        '\u764E',
        5,
        '\u7655\u7657',
        4,
        '\u765D\u765F\u7660\u7661\u7662\u7664',
        6,
        '\u766C\u766D\u766E\u7670',
        7,
        '\u7679\u767A\u767C\u767F\u7680\u7681\u7683\u7685\u7689\u768A\u768C\u768D\u768F\u7690\u7692\u7694\u7695\u7697\u7698\u769A\u769B',
      ],
      [
        'b080',
        '\u769C',
        7,
        '\u76A5',
        8,
        '\u76AF\u76B0\u76B3\u76B5',
        9,
        '\u76C0\u76C1\u76C3\u554A\u963F\u57C3\u6328\u54CE\u5509\u54C0\u7691\u764C\u853C\u77EE\u827E\u788D\u7231\u9698\u978D\u6C28\u5B89\u4FFA\u6309\u6697\u5CB8\u80FA\u6848\u80AE\u6602\u76CE\u51F9\u6556\u71AC\u7FF1\u8884\u50B2\u5965\u61CA\u6FB3\u82AD\u634C\u6252\u53ED\u5427\u7B06\u516B\u75A4\u5DF4\u62D4\u8DCB\u9776\u628A\u8019\u575D\u9738\u7F62\u7238\u767D\u67CF\u767E\u6446\u4F70\u8D25\u62DC\u7A17\u6591\u73ED\u642C\u6273\u822C\u9881\u677F\u7248\u626E\u62CC\u4F34\u74E3\u534A\u529E\u7ECA\u90A6\u5E2E\u6886\u699C\u8180\u7ED1\u68D2\u78C5\u868C\u9551\u508D\u8C24\u82DE\u80DE\u5305\u8912\u5265',
      ],
      [
        'b140',
        '\u76C4\u76C7\u76C9\u76CB\u76CC\u76D3\u76D5\u76D9\u76DA\u76DC\u76DD\u76DE\u76E0',
        4,
        '\u76E6',
        7,
        '\u76F0\u76F3\u76F5\u76F6\u76F7\u76FA\u76FB\u76FD\u76FF\u7700\u7702\u7703\u7705\u7706\u770A\u770C\u770E',
        10,
        '\u771B\u771C\u771D\u771E\u7721\u7723\u7724\u7725\u7727\u772A\u772B',
      ],
      [
        'b180',
        '\u772C\u772E\u7730',
        4,
        '\u7739\u773B\u773D\u773E\u773F\u7742\u7744\u7745\u7746\u7748',
        7,
        '\u7752',
        7,
        '\u775C\u8584\u96F9\u4FDD\u5821\u9971\u5B9D\u62B1\u62A5\u66B4\u8C79\u9C8D\u7206\u676F\u7891\u60B2\u5351\u5317\u8F88\u80CC\u8D1D\u94A1\u500D\u72C8\u5907\u60EB\u7119\u88AB\u5954\u82EF\u672C\u7B28\u5D29\u7EF7\u752D\u6CF5\u8E66\u8FF8\u903C\u9F3B\u6BD4\u9119\u7B14\u5F7C\u78A7\u84D6\u853D\u6BD5\u6BD9\u6BD6\u5E01\u5E87\u75F9\u95ED\u655D\u5F0A\u5FC5\u8F9F\u58C1\u81C2\u907F\u965B\u97AD\u8FB9\u7F16\u8D2C\u6241\u4FBF\u53D8\u535E\u8FA8\u8FA9\u8FAB\u904D\u6807\u5F6A\u8198\u8868\u9CD6\u618B\u522B\u762A\u5F6C\u658C\u6FD2\u6EE8\u5BBE\u6448\u5175\u51B0\u67C4\u4E19\u79C9\u997C\u70B3',
      ],
      [
        'b240',
        '\u775D\u775E\u775F\u7760\u7764\u7767\u7769\u776A\u776D',
        11,
        '\u777A\u777B\u777C\u7781\u7782\u7783\u7786',
        5,
        '\u778F\u7790\u7793',
        11,
        '\u77A1\u77A3\u77A4\u77A6\u77A8\u77AB\u77AD\u77AE\u77AF\u77B1\u77B2\u77B4\u77B6',
        4,
      ],
      [
        'b280',
        '\u77BC\u77BE\u77C0',
        12,
        '\u77CE',
        8,
        '\u77D8\u77D9\u77DA\u77DD',
        4,
        '\u77E4\u75C5\u5E76\u73BB\u83E0\u64AD\u62E8\u94B5\u6CE2\u535A\u52C3\u640F\u94C2\u7B94\u4F2F\u5E1B\u8236\u8116\u818A\u6E24\u6CCA\u9A73\u6355\u535C\u54FA\u8865\u57E0\u4E0D\u5E03\u6B65\u7C3F\u90E8\u6016\u64E6\u731C\u88C1\u6750\u624D\u8D22\u776C\u8E29\u91C7\u5F69\u83DC\u8521\u9910\u53C2\u8695\u6B8B\u60ED\u60E8\u707F\u82CD\u8231\u4ED3\u6CA7\u85CF\u64CD\u7CD9\u69FD\u66F9\u8349\u5395\u7B56\u4FA7\u518C\u6D4B\u5C42\u8E6D\u63D2\u53C9\u832C\u8336\u67E5\u78B4\u643D\u5BDF\u5C94\u5DEE\u8BE7\u62C6\u67F4\u8C7A\u6400\u63BA\u8749\u998B\u8C17\u7F20\u94F2\u4EA7\u9610\u98A4\u660C\u7316',
      ],
      [
        'b340',
        '\u77E6\u77E8\u77EA\u77EF\u77F0\u77F1\u77F2\u77F4\u77F5\u77F7\u77F9\u77FA\u77FB\u77FC\u7803',
        5,
        '\u780A\u780B\u780E\u780F\u7810\u7813\u7815\u7819\u781B\u781E\u7820\u7821\u7822\u7824\u7828\u782A\u782B\u782E\u782F\u7831\u7832\u7833\u7835\u7836\u783D\u783F\u7841\u7842\u7843\u7844\u7846\u7848\u7849\u784A\u784B\u784D\u784F\u7851\u7853\u7854\u7858\u7859\u785A',
      ],
      [
        'b380',
        '\u785B\u785C\u785E',
        11,
        '\u786F',
        7,
        '\u7878\u7879\u787A\u787B\u787D',
        6,
        '\u573A\u5C1D\u5E38\u957F\u507F\u80A0\u5382\u655E\u7545\u5531\u5021\u8D85\u6284\u949E\u671D\u5632\u6F6E\u5DE2\u5435\u7092\u8F66\u626F\u64A4\u63A3\u5F7B\u6F88\u90F4\u81E3\u8FB0\u5C18\u6668\u5FF1\u6C89\u9648\u8D81\u886C\u6491\u79F0\u57CE\u6A59\u6210\u5448\u4E58\u7A0B\u60E9\u6F84\u8BDA\u627F\u901E\u9A8B\u79E4\u5403\u75F4\u6301\u5319\u6C60\u8FDF\u5F1B\u9A70\u803B\u9F7F\u4F88\u5C3A\u8D64\u7FC5\u65A5\u70BD\u5145\u51B2\u866B\u5D07\u5BA0\u62BD\u916C\u7574\u8E0C\u7A20\u6101\u7B79\u4EC7\u7EF8\u7785\u4E11\u81ED\u521D\u51FA\u6A71\u53A8\u8E87\u9504\u96CF\u6EC1\u9664\u695A',
      ],
      [
        'b440',
        '\u7884\u7885\u7886\u7888\u788A\u788B\u788F\u7890\u7892\u7894\u7895\u7896\u7899\u789D\u789E\u78A0\u78A2\u78A4\u78A6\u78A8',
        7,
        '\u78B5\u78B6\u78B7\u78B8\u78BA\u78BB\u78BC\u78BD\u78BF\u78C0\u78C2\u78C3\u78C4\u78C6\u78C7\u78C8\u78CC\u78CD\u78CE\u78CF\u78D1\u78D2\u78D3\u78D6\u78D7\u78D8\u78DA',
        9,
      ],
      [
        'b480',
        '\u78E4\u78E5\u78E6\u78E7\u78E9\u78EA\u78EB\u78ED',
        4,
        '\u78F3\u78F5\u78F6\u78F8\u78F9\u78FB',
        5,
        '\u7902\u7903\u7904\u7906',
        6,
        '\u7840\u50A8\u77D7\u6410\u89E6\u5904\u63E3\u5DDD\u7A7F\u693D\u4F20\u8239\u5598\u4E32\u75AE\u7A97\u5E62\u5E8A\u95EF\u521B\u5439\u708A\u6376\u9524\u5782\u6625\u693F\u9187\u5507\u6DF3\u7EAF\u8822\u6233\u7EF0\u75B5\u8328\u78C1\u96CC\u8F9E\u6148\u74F7\u8BCD\u6B64\u523A\u8D50\u6B21\u806A\u8471\u56F1\u5306\u4ECE\u4E1B\u51D1\u7C97\u918B\u7C07\u4FC3\u8E7F\u7BE1\u7A9C\u6467\u5D14\u50AC\u8106\u7601\u7CB9\u6DEC\u7FE0\u6751\u5B58\u5BF8\u78CB\u64AE\u6413\u63AA\u632B\u9519\u642D\u8FBE\u7B54\u7629\u6253\u5927\u5446\u6B79\u50A3\u6234\u5E26\u6B86\u4EE3\u8D37\u888B\u5F85\u902E',
      ],
      [
        'b540',
        '\u790D',
        5,
        '\u7914',
        9,
        '\u791F',
        4,
        '\u7925',
        14,
        '\u7935',
        4,
        '\u793D\u793F\u7942\u7943\u7944\u7945\u7947\u794A',
        8,
        '\u7954\u7955\u7958\u7959\u7961\u7963',
      ],
      [
        'b580',
        '\u7964\u7966\u7969\u796A\u796B\u796C\u796E\u7970',
        6,
        '\u7979\u797B',
        4,
        '\u7982\u7983\u7986\u7987\u7988\u7989\u798B\u798C\u798D\u798E\u7990\u7991\u7992\u6020\u803D\u62C5\u4E39\u5355\u90F8\u63B8\u80C6\u65E6\u6C2E\u4F46\u60EE\u6DE1\u8BDE\u5F39\u86CB\u5F53\u6321\u515A\u8361\u6863\u5200\u6363\u8E48\u5012\u5C9B\u7977\u5BFC\u5230\u7A3B\u60BC\u9053\u76D7\u5FB7\u5F97\u7684\u8E6C\u706F\u767B\u7B49\u77AA\u51F3\u9093\u5824\u4F4E\u6EF4\u8FEA\u654C\u7B1B\u72C4\u6DA4\u7FDF\u5AE1\u62B5\u5E95\u5730\u8482\u7B2C\u5E1D\u5F1F\u9012\u7F14\u98A0\u6382\u6EC7\u7898\u70B9\u5178\u975B\u57AB\u7535\u4F43\u7538\u5E97\u60E6\u5960\u6DC0\u6BBF\u7889\u53FC\u96D5\u51CB\u5201\u6389\u540A\u9493\u8C03\u8DCC\u7239\u789F\u8776\u8FED\u8C0D\u53E0',
      ],
      [
        'b640',
        '\u7993',
        6,
        '\u799B',
        11,
        '\u79A8',
        10,
        '\u79B4',
        4,
        '\u79BC\u79BF\u79C2\u79C4\u79C5\u79C7\u79C8\u79CA\u79CC\u79CE\u79CF\u79D0\u79D3\u79D4\u79D6\u79D7\u79D9',
        5,
        '\u79E0\u79E1\u79E2\u79E5\u79E8\u79EA',
      ],
      [
        'b680',
        '\u79EC\u79EE\u79F1',
        6,
        '\u79F9\u79FA\u79FC\u79FE\u79FF\u7A01\u7A04\u7A05\u7A07\u7A08\u7A09\u7A0A\u7A0C\u7A0F',
        4,
        '\u7A15\u7A16\u7A18\u7A19\u7A1B\u7A1C\u4E01\u76EF\u53EE\u9489\u9876\u9F0E\u952D\u5B9A\u8BA2\u4E22\u4E1C\u51AC\u8463\u61C2\u52A8\u680B\u4F97\u606B\u51BB\u6D1E\u515C\u6296\u6597\u9661\u8C46\u9017\u75D8\u90FD\u7763\u6BD2\u728A\u72EC\u8BFB\u5835\u7779\u8D4C\u675C\u9540\u809A\u5EA6\u6E21\u5992\u7AEF\u77ED\u953B\u6BB5\u65AD\u7F0E\u5806\u5151\u961F\u5BF9\u58A9\u5428\u8E72\u6566\u987F\u56E4\u949D\u76FE\u9041\u6387\u54C6\u591A\u593A\u579B\u8EB2\u6735\u8DFA\u8235\u5241\u60F0\u5815\u86FE\u5CE8\u9E45\u4FC4\u989D\u8BB9\u5A25\u6076\u5384\u627C\u904F\u9102\u997F\u6069\u800C\u513F\u8033\u5C14\u9975\u6D31\u4E8C',
      ],
      [
        'b740',
        '\u7A1D\u7A1F\u7A21\u7A22\u7A24',
        14,
        '\u7A34\u7A35\u7A36\u7A38\u7A3A\u7A3E\u7A40',
        5,
        '\u7A47',
        9,
        '\u7A52',
        4,
        '\u7A58',
        16,
      ],
      [
        'b780',
        '\u7A69',
        6,
        '\u7A71\u7A72\u7A73\u7A75\u7A7B\u7A7C\u7A7D\u7A7E\u7A82\u7A85\u7A87\u7A89\u7A8A\u7A8B\u7A8C\u7A8E\u7A8F\u7A90\u7A93\u7A94\u7A99\u7A9A\u7A9B\u7A9E\u7AA1\u7AA2\u8D30\u53D1\u7F5A\u7B4F\u4F10\u4E4F\u9600\u6CD5\u73D0\u85E9\u5E06\u756A\u7FFB\u6A0A\u77FE\u9492\u7E41\u51E1\u70E6\u53CD\u8FD4\u8303\u8D29\u72AF\u996D\u6CDB\u574A\u82B3\u65B9\u80AA\u623F\u9632\u59A8\u4EFF\u8BBF\u7EBA\u653E\u83F2\u975E\u5561\u98DE\u80A5\u532A\u8BFD\u5420\u80BA\u5E9F\u6CB8\u8D39\u82AC\u915A\u5429\u6C1B\u5206\u7EB7\u575F\u711A\u6C7E\u7C89\u594B\u4EFD\u5FFF\u6124\u7CAA\u4E30\u5C01\u67AB\u8702\u5CF0\u950B\u98CE\u75AF\u70FD\u9022\u51AF\u7F1D\u8BBD\u5949\u51E4\u4F5B\u5426\u592B\u6577\u80A4\u5B75\u6276\u62C2\u8F90\u5E45\u6C1F\u7B26\u4F0F\u4FD8\u670D',
      ],
      [
        'b840',
        '\u7AA3\u7AA4\u7AA7\u7AA9\u7AAA\u7AAB\u7AAE',
        4,
        '\u7AB4',
        10,
        '\u7AC0',
        10,
        '\u7ACC',
        9,
        '\u7AD7\u7AD8\u7ADA\u7ADB\u7ADC\u7ADD\u7AE1\u7AE2\u7AE4\u7AE7',
        5,
        '\u7AEE\u7AF0\u7AF1\u7AF2\u7AF3',
      ],
      [
        'b880',
        '\u7AF4',
        4,
        '\u7AFB\u7AFC\u7AFE\u7B00\u7B01\u7B02\u7B05\u7B07\u7B09\u7B0C\u7B0D\u7B0E\u7B10\u7B12\u7B13\u7B16\u7B17\u7B18\u7B1A\u7B1C\u7B1D\u7B1F\u7B21\u7B22\u7B23\u7B27\u7B29\u7B2D\u6D6E\u6DAA\u798F\u88B1\u5F17\u752B\u629A\u8F85\u4FEF\u91DC\u65A7\u812F\u8151\u5E9C\u8150\u8D74\u526F\u8986\u8D4B\u590D\u5085\u4ED8\u961C\u7236\u8179\u8D1F\u5BCC\u8BA3\u9644\u5987\u7F1A\u5490\u5676\u560E\u8BE5\u6539\u6982\u9499\u76D6\u6E89\u5E72\u7518\u6746\u67D1\u7AFF\u809D\u8D76\u611F\u79C6\u6562\u8D63\u5188\u521A\u94A2\u7F38\u809B\u7EB2\u5C97\u6E2F\u6760\u7BD9\u768B\u9AD8\u818F\u7F94\u7CD5\u641E\u9550\u7A3F\u544A\u54E5\u6B4C\u6401\u6208\u9E3D\u80F3\u7599\u5272\u9769\u845B\u683C\u86E4\u9601\u9694\u94EC\u4E2A\u5404\u7ED9\u6839\u8DDF\u8015\u66F4\u5E9A\u7FB9',
      ],
      [
        'b940',
        '\u7B2F\u7B30\u7B32\u7B34\u7B35\u7B36\u7B37\u7B39\u7B3B\u7B3D\u7B3F',
        5,
        '\u7B46\u7B48\u7B4A\u7B4D\u7B4E\u7B53\u7B55\u7B57\u7B59\u7B5C\u7B5E\u7B5F\u7B61\u7B63',
        10,
        '\u7B6F\u7B70\u7B73\u7B74\u7B76\u7B78\u7B7A\u7B7C\u7B7D\u7B7F\u7B81\u7B82\u7B83\u7B84\u7B86',
        6,
        '\u7B8E\u7B8F',
      ],
      [
        'b980',
        '\u7B91\u7B92\u7B93\u7B96\u7B98\u7B99\u7B9A\u7B9B\u7B9E\u7B9F\u7BA0\u7BA3\u7BA4\u7BA5\u7BAE\u7BAF\u7BB0\u7BB2\u7BB3\u7BB5\u7BB6\u7BB7\u7BB9',
        7,
        '\u7BC2\u7BC3\u7BC4\u57C2\u803F\u6897\u5DE5\u653B\u529F\u606D\u9F9A\u4F9B\u8EAC\u516C\u5BAB\u5F13\u5DE9\u6C5E\u62F1\u8D21\u5171\u94A9\u52FE\u6C9F\u82DF\u72D7\u57A2\u6784\u8D2D\u591F\u8F9C\u83C7\u5495\u7B8D\u4F30\u6CBD\u5B64\u59D1\u9F13\u53E4\u86CA\u9AA8\u8C37\u80A1\u6545\u987E\u56FA\u96C7\u522E\u74DC\u5250\u5BE1\u6302\u8902\u4E56\u62D0\u602A\u68FA\u5173\u5B98\u51A0\u89C2\u7BA1\u9986\u7F50\u60EF\u704C\u8D2F\u5149\u5E7F\u901B\u7470\u89C4\u572D\u7845\u5F52\u9F9F\u95FA\u8F68\u9B3C\u8BE1\u7678\u6842\u67DC\u8DEA\u8D35\u523D\u8F8A\u6EDA\u68CD\u9505\u90ED\u56FD\u679C\u88F9\u8FC7\u54C8',
      ],
      [
        'ba40',
        '\u7BC5\u7BC8\u7BC9\u7BCA\u7BCB\u7BCD\u7BCE\u7BCF\u7BD0\u7BD2\u7BD4',
        4,
        '\u7BDB\u7BDC\u7BDE\u7BDF\u7BE0\u7BE2\u7BE3\u7BE4\u7BE7\u7BE8\u7BE9\u7BEB\u7BEC\u7BED\u7BEF\u7BF0\u7BF2',
        4,
        '\u7BF8\u7BF9\u7BFA\u7BFB\u7BFD\u7BFF',
        7,
        '\u7C08\u7C09\u7C0A\u7C0D\u7C0E\u7C10',
        5,
        '\u7C17\u7C18\u7C19',
      ],
      [
        'ba80',
        '\u7C1A',
        4,
        '\u7C20',
        5,
        '\u7C28\u7C29\u7C2B',
        12,
        '\u7C39',
        5,
        '\u7C42\u9AB8\u5B69\u6D77\u6C26\u4EA5\u5BB3\u9A87\u9163\u61A8\u90AF\u97E9\u542B\u6DB5\u5BD2\u51FD\u558A\u7F55\u7FF0\u64BC\u634D\u65F1\u61BE\u608D\u710A\u6C57\u6C49\u592F\u676D\u822A\u58D5\u568E\u8C6A\u6BEB\u90DD\u597D\u8017\u53F7\u6D69\u5475\u559D\u8377\u83CF\u6838\u79BE\u548C\u4F55\u5408\u76D2\u8C89\u9602\u6CB3\u6DB8\u8D6B\u8910\u9E64\u8D3A\u563F\u9ED1\u75D5\u5F88\u72E0\u6068\u54FC\u4EA8\u6A2A\u8861\u6052\u8F70\u54C4\u70D8\u8679\u9E3F\u6D2A\u5B8F\u5F18\u7EA2\u5589\u4FAF\u7334\u543C\u539A\u5019\u540E\u547C\u4E4E\u5FFD\u745A\u58F6\u846B\u80E1\u8774\u72D0\u7CCA\u6E56',
      ],
      ['bb40', '\u7C43', 9, '\u7C4E', 36, '\u7C75', 5, '\u7C7E', 9],
      [
        'bb80',
        '\u7C88\u7C8A',
        6,
        '\u7C93\u7C94\u7C96\u7C99\u7C9A\u7C9B\u7CA0\u7CA1\u7CA3\u7CA6\u7CA7\u7CA8\u7CA9\u7CAB\u7CAC\u7CAD\u7CAF\u7CB0\u7CB4',
        4,
        '\u7CBA\u7CBB\u5F27\u864E\u552C\u62A4\u4E92\u6CAA\u6237\u82B1\u54D7\u534E\u733E\u6ED1\u753B\u5212\u5316\u8BDD\u69D0\u5F8A\u6000\u6DEE\u574F\u6B22\u73AF\u6853\u8FD8\u7F13\u6362\u60A3\u5524\u75EA\u8C62\u7115\u6DA3\u5BA6\u5E7B\u8352\u614C\u9EC4\u78FA\u8757\u7C27\u7687\u51F0\u60F6\u714C\u6643\u5E4C\u604D\u8C0E\u7070\u6325\u8F89\u5FBD\u6062\u86D4\u56DE\u6BC1\u6094\u6167\u5349\u60E0\u6666\u8D3F\u79FD\u4F1A\u70E9\u6C47\u8BB3\u8BF2\u7ED8\u8364\u660F\u5A5A\u9B42\u6D51\u6DF7\u8C41\u6D3B\u4F19\u706B\u83B7\u6216\u60D1\u970D\u8D27\u7978\u51FB\u573E\u57FA\u673A\u7578\u7A3D\u79EF\u7B95',
      ],
      [
        'bc40',
        '\u7CBF\u7CC0\u7CC2\u7CC3\u7CC4\u7CC6\u7CC9\u7CCB\u7CCE',
        6,
        '\u7CD8\u7CDA\u7CDB\u7CDD\u7CDE\u7CE1',
        6,
        '\u7CE9',
        5,
        '\u7CF0',
        7,
        '\u7CF9\u7CFA\u7CFC',
        13,
        '\u7D0B',
        5,
      ],
      [
        'bc80',
        '\u7D11',
        14,
        '\u7D21\u7D23\u7D24\u7D25\u7D26\u7D28\u7D29\u7D2A\u7D2C\u7D2D\u7D2E\u7D30',
        6,
        '\u808C\u9965\u8FF9\u6FC0\u8BA5\u9E21\u59EC\u7EE9\u7F09\u5409\u6781\u68D8\u8F91\u7C4D\u96C6\u53CA\u6025\u75BE\u6C72\u5373\u5AC9\u7EA7\u6324\u51E0\u810A\u5DF1\u84DF\u6280\u5180\u5B63\u4F0E\u796D\u5242\u60B8\u6D4E\u5BC4\u5BC2\u8BA1\u8BB0\u65E2\u5FCC\u9645\u5993\u7EE7\u7EAA\u5609\u67B7\u5939\u4F73\u5BB6\u52A0\u835A\u988A\u8D3E\u7532\u94BE\u5047\u7A3C\u4EF7\u67B6\u9A7E\u5AC1\u6B7C\u76D1\u575A\u5C16\u7B3A\u95F4\u714E\u517C\u80A9\u8270\u5978\u7F04\u8327\u68C0\u67EC\u78B1\u7877\u62E3\u6361\u7B80\u4FED\u526A\u51CF\u8350\u69DB\u9274\u8DF5\u8D31\u89C1\u952E\u7BAD\u4EF6',
      ],
      ['bd40', '\u7D37', 54, '\u7D6F', 7],
      [
        'bd80',
        '\u7D78',
        32,
        '\u5065\u8230\u5251\u996F\u6E10\u6E85\u6DA7\u5EFA\u50F5\u59DC\u5C06\u6D46\u6C5F\u7586\u848B\u6868\u5956\u8BB2\u5320\u9171\u964D\u8549\u6912\u7901\u7126\u80F6\u4EA4\u90CA\u6D47\u9A84\u5A07\u56BC\u6405\u94F0\u77EB\u4FA5\u811A\u72E1\u89D2\u997A\u7F34\u7EDE\u527F\u6559\u9175\u8F7F\u8F83\u53EB\u7A96\u63ED\u63A5\u7686\u79F8\u8857\u9636\u622A\u52AB\u8282\u6854\u6770\u6377\u776B\u7AED\u6D01\u7ED3\u89E3\u59D0\u6212\u85C9\u82A5\u754C\u501F\u4ECB\u75A5\u8BEB\u5C4A\u5DFE\u7B4B\u65A4\u91D1\u4ECA\u6D25\u895F\u7D27\u9526\u4EC5\u8C28\u8FDB\u9773\u664B\u7981\u8FD1\u70EC\u6D78',
      ],
      ['be40', '\u7D99', 12, '\u7DA7', 6, '\u7DAF', 42],
      [
        'be80',
        '\u7DDA',
        32,
        '\u5C3D\u52B2\u8346\u5162\u830E\u775B\u6676\u9CB8\u4EAC\u60CA\u7CBE\u7CB3\u7ECF\u4E95\u8B66\u666F\u9888\u9759\u5883\u656C\u955C\u5F84\u75C9\u9756\u7ADF\u7ADE\u51C0\u70AF\u7A98\u63EA\u7A76\u7EA0\u7396\u97ED\u4E45\u7078\u4E5D\u9152\u53A9\u6551\u65E7\u81FC\u8205\u548E\u5C31\u759A\u97A0\u62D8\u72D9\u75BD\u5C45\u9A79\u83CA\u5C40\u5480\u77E9\u4E3E\u6CAE\u805A\u62D2\u636E\u5DE8\u5177\u8DDD\u8E1E\u952F\u4FF1\u53E5\u60E7\u70AC\u5267\u6350\u9E43\u5A1F\u5026\u7737\u5377\u7EE2\u6485\u652B\u6289\u6398\u5014\u7235\u89C9\u51B3\u8BC0\u7EDD\u5747\u83CC\u94A7\u519B\u541B\u5CFB',
      ],
      ['bf40', '\u7DFB', 62],
      [
        'bf80',
        '\u7E3A\u7E3C',
        4,
        '\u7E42',
        4,
        '\u7E48',
        21,
        '\u4FCA\u7AE3\u6D5A\u90E1\u9A8F\u5580\u5496\u5361\u54AF\u5F00\u63E9\u6977\u51EF\u6168\u520A\u582A\u52D8\u574E\u780D\u770B\u5EB7\u6177\u7CE0\u625B\u6297\u4EA2\u7095\u8003\u62F7\u70E4\u9760\u5777\u82DB\u67EF\u68F5\u78D5\u9897\u79D1\u58F3\u54B3\u53EF\u6E34\u514B\u523B\u5BA2\u8BFE\u80AF\u5543\u57A6\u6073\u5751\u542D\u7A7A\u6050\u5B54\u63A7\u62A0\u53E3\u6263\u5BC7\u67AF\u54ED\u7A9F\u82E6\u9177\u5E93\u88E4\u5938\u57AE\u630E\u8DE8\u80EF\u5757\u7B77\u4FA9\u5FEB\u5BBD\u6B3E\u5321\u7B50\u72C2\u6846\u77FF\u7736\u65F7\u51B5\u4E8F\u76D4\u5CBF\u7AA5\u8475\u594E\u9B41\u5080',
      ],
      ['c040', '\u7E5E', 35, '\u7E83', 23, '\u7E9C\u7E9D\u7E9E'],
      [
        'c080',
        '\u7EAE\u7EB4\u7EBB\u7EBC\u7ED6\u7EE4\u7EEC\u7EF9\u7F0A\u7F10\u7F1E\u7F37\u7F39\u7F3B',
        6,
        '\u7F43\u7F46',
        9,
        '\u7F52\u7F53\u9988\u6127\u6E83\u5764\u6606\u6346\u56F0\u62EC\u6269\u5ED3\u9614\u5783\u62C9\u5587\u8721\u814A\u8FA3\u5566\u83B1\u6765\u8D56\u84DD\u5A6A\u680F\u62E6\u7BEE\u9611\u5170\u6F9C\u8C30\u63FD\u89C8\u61D2\u7F06\u70C2\u6EE5\u7405\u6994\u72FC\u5ECA\u90CE\u6717\u6D6A\u635E\u52B3\u7262\u8001\u4F6C\u59E5\u916A\u70D9\u6D9D\u52D2\u4E50\u96F7\u956D\u857E\u78CA\u7D2F\u5121\u5792\u64C2\u808B\u7C7B\u6CEA\u68F1\u695E\u51B7\u5398\u68A8\u7281\u9ECE\u7BF1\u72F8\u79BB\u6F13\u7406\u674E\u91CC\u9CA4\u793C\u8389\u8354\u540F\u6817\u4E3D\u5389\u52B1\u783E\u5386\u5229\u5088\u4F8B\u4FD0',
      ],
      [
        'c140',
        '\u7F56\u7F59\u7F5B\u7F5C\u7F5D\u7F5E\u7F60\u7F63',
        4,
        '\u7F6B\u7F6C\u7F6D\u7F6F\u7F70\u7F73\u7F75\u7F76\u7F77\u7F78\u7F7A\u7F7B\u7F7C\u7F7D\u7F7F\u7F80\u7F82',
        7,
        '\u7F8B\u7F8D\u7F8F',
        4,
        '\u7F95',
        4,
        '\u7F9B\u7F9C\u7FA0\u7FA2\u7FA3\u7FA5\u7FA6\u7FA8',
        6,
        '\u7FB1',
      ],
      [
        'c180',
        '\u7FB3',
        4,
        '\u7FBA\u7FBB\u7FBE\u7FC0\u7FC2\u7FC3\u7FC4\u7FC6\u7FC7\u7FC8\u7FC9\u7FCB\u7FCD\u7FCF',
        4,
        '\u7FD6\u7FD7\u7FD9',
        5,
        '\u7FE2\u7FE3\u75E2\u7ACB\u7C92\u6CA5\u96B6\u529B\u7483\u54E9\u4FE9\u8054\u83B2\u8FDE\u9570\u5EC9\u601C\u6D9F\u5E18\u655B\u8138\u94FE\u604B\u70BC\u7EC3\u7CAE\u51C9\u6881\u7CB1\u826F\u4E24\u8F86\u91CF\u667E\u4EAE\u8C05\u64A9\u804A\u50DA\u7597\u71CE\u5BE5\u8FBD\u6F66\u4E86\u6482\u9563\u5ED6\u6599\u5217\u88C2\u70C8\u52A3\u730E\u7433\u6797\u78F7\u9716\u4E34\u90BB\u9CDE\u6DCB\u51DB\u8D41\u541D\u62CE\u73B2\u83F1\u96F6\u9F84\u94C3\u4F36\u7F9A\u51CC\u7075\u9675\u5CAD\u9886\u53E6\u4EE4\u6E9C\u7409\u69B4\u786B\u998F\u7559\u5218\u7624\u6D41\u67F3\u516D\u9F99\u804B\u5499\u7B3C\u7ABF',
      ],
      [
        'c240',
        '\u7FE4\u7FE7\u7FE8\u7FEA\u7FEB\u7FEC\u7FED\u7FEF\u7FF2\u7FF4',
        6,
        '\u7FFD\u7FFE\u7FFF\u8002\u8007\u8008\u8009\u800A\u800E\u800F\u8011\u8013\u801A\u801B\u801D\u801E\u801F\u8021\u8023\u8024\u802B',
        5,
        '\u8032\u8034\u8039\u803A\u803C\u803E\u8040\u8041\u8044\u8045\u8047\u8048\u8049\u804E\u804F\u8050\u8051\u8053\u8055\u8056\u8057',
      ],
      [
        'c280',
        '\u8059\u805B',
        13,
        '\u806B',
        5,
        '\u8072',
        11,
        '\u9686\u5784\u62E2\u9647\u697C\u5A04\u6402\u7BD3\u6F0F\u964B\u82A6\u5362\u9885\u5E90\u7089\u63B3\u5364\u864F\u9C81\u9E93\u788C\u9732\u8DEF\u8D42\u9E7F\u6F5E\u7984\u5F55\u9646\u622E\u9A74\u5415\u94DD\u4FA3\u65C5\u5C65\u5C61\u7F15\u8651\u6C2F\u5F8B\u7387\u6EE4\u7EFF\u5CE6\u631B\u5B6A\u6EE6\u5375\u4E71\u63A0\u7565\u62A1\u8F6E\u4F26\u4ED1\u6CA6\u7EB6\u8BBA\u841D\u87BA\u7F57\u903B\u9523\u7BA9\u9AA1\u88F8\u843D\u6D1B\u9A86\u7EDC\u5988\u9EBB\u739B\u7801\u8682\u9A6C\u9A82\u561B\u5417\u57CB\u4E70\u9EA6\u5356\u8FC8\u8109\u7792\u9992\u86EE\u6EE1\u8513\u66FC\u6162\u6F2B',
      ],
      [
        'c340',
        '\u807E\u8081\u8082\u8085\u8088\u808A\u808D',
        5,
        '\u8094\u8095\u8097\u8099\u809E\u80A3\u80A6\u80A7\u80A8\u80AC\u80B0\u80B3\u80B5\u80B6\u80B8\u80B9\u80BB\u80C5\u80C7',
        4,
        '\u80CF',
        6,
        '\u80D8\u80DF\u80E0\u80E2\u80E3\u80E6\u80EE\u80F5\u80F7\u80F9\u80FB\u80FE\u80FF\u8100\u8101\u8103\u8104\u8105\u8107\u8108\u810B',
      ],
      [
        'c380',
        '\u810C\u8115\u8117\u8119\u811B\u811C\u811D\u811F',
        12,
        '\u812D\u812E\u8130\u8133\u8134\u8135\u8137\u8139',
        4,
        '\u813F\u8C29\u8292\u832B\u76F2\u6C13\u5FD9\u83BD\u732B\u8305\u951A\u6BDB\u77DB\u94C6\u536F\u8302\u5192\u5E3D\u8C8C\u8D38\u4E48\u73AB\u679A\u6885\u9176\u9709\u7164\u6CA1\u7709\u5A92\u9541\u6BCF\u7F8E\u6627\u5BD0\u59B9\u5A9A\u95E8\u95F7\u4EEC\u840C\u8499\u6AAC\u76DF\u9530\u731B\u68A6\u5B5F\u772F\u919A\u9761\u7CDC\u8FF7\u8C1C\u5F25\u7C73\u79D8\u89C5\u6CCC\u871C\u5BC6\u5E42\u68C9\u7720\u7EF5\u5195\u514D\u52C9\u5A29\u7F05\u9762\u82D7\u63CF\u7784\u85D0\u79D2\u6E3A\u5E99\u5999\u8511\u706D\u6C11\u62BF\u76BF\u654F\u60AF\u95FD\u660E\u879F\u9E23\u94ED\u540D\u547D\u8C2C\u6478',
      ],
      [
        'c440',
        '\u8140',
        5,
        '\u8147\u8149\u814D\u814E\u814F\u8152\u8156\u8157\u8158\u815B',
        4,
        '\u8161\u8162\u8163\u8164\u8166\u8168\u816A\u816B\u816C\u816F\u8172\u8173\u8175\u8176\u8177\u8178\u8181\u8183',
        4,
        '\u8189\u818B\u818C\u818D\u818E\u8190\u8192',
        5,
        '\u8199\u819A\u819E',
        4,
        '\u81A4\u81A5',
      ],
      [
        'c480',
        '\u81A7\u81A9\u81AB',
        7,
        '\u81B4',
        5,
        '\u81BC\u81BD\u81BE\u81BF\u81C4\u81C5\u81C7\u81C8\u81C9\u81CB\u81CD',
        6,
        '\u6479\u8611\u6A21\u819C\u78E8\u6469\u9B54\u62B9\u672B\u83AB\u58A8\u9ED8\u6CAB\u6F20\u5BDE\u964C\u8C0B\u725F\u67D0\u62C7\u7261\u4EA9\u59C6\u6BCD\u5893\u66AE\u5E55\u52DF\u6155\u6728\u76EE\u7766\u7267\u7A46\u62FF\u54EA\u5450\u94A0\u90A3\u5A1C\u7EB3\u6C16\u4E43\u5976\u8010\u5948\u5357\u7537\u96BE\u56CA\u6320\u8111\u607C\u95F9\u6DD6\u5462\u9981\u5185\u5AE9\u80FD\u59AE\u9713\u502A\u6CE5\u5C3C\u62DF\u4F60\u533F\u817B\u9006\u6EBA\u852B\u62C8\u5E74\u78BE\u64B5\u637B\u5FF5\u5A18\u917F\u9E1F\u5C3F\u634F\u8042\u5B7D\u556E\u954A\u954D\u6D85\u60A8\u67E0\u72DE\u51DD\u5B81',
      ],
      [
        'c540',
        '\u81D4',
        14,
        '\u81E4\u81E5\u81E6\u81E8\u81E9\u81EB\u81EE',
        4,
        '\u81F5',
        5,
        '\u81FD\u81FF\u8203\u8207',
        4,
        '\u820E\u820F\u8211\u8213\u8215',
        5,
        '\u821D\u8220\u8224\u8225\u8226\u8227\u8229\u822E\u8232\u823A\u823C\u823D\u823F',
      ],
      [
        'c580',
        '\u8240\u8241\u8242\u8243\u8245\u8246\u8248\u824A\u824C\u824D\u824E\u8250',
        7,
        '\u8259\u825B\u825C\u825D\u825E\u8260',
        7,
        '\u8269\u62E7\u6CDE\u725B\u626D\u94AE\u7EBD\u8113\u6D53\u519C\u5F04\u5974\u52AA\u6012\u5973\u6696\u8650\u759F\u632A\u61E6\u7CEF\u8BFA\u54E6\u6B27\u9E25\u6BB4\u85D5\u5455\u5076\u6CA4\u556A\u8DB4\u722C\u5E15\u6015\u7436\u62CD\u6392\u724C\u5F98\u6E43\u6D3E\u6500\u6F58\u76D8\u78D0\u76FC\u7554\u5224\u53DB\u4E53\u5E9E\u65C1\u802A\u80D6\u629B\u5486\u5228\u70AE\u888D\u8DD1\u6CE1\u5478\u80DA\u57F9\u88F4\u8D54\u966A\u914D\u4F69\u6C9B\u55B7\u76C6\u7830\u62A8\u70F9\u6F8E\u5F6D\u84EC\u68DA\u787C\u7BF7\u81A8\u670B\u9E4F\u6367\u78B0\u576F\u7812\u9739\u6279\u62AB\u5288\u7435\u6BD7',
      ],
      [
        'c640',
        '\u826A\u826B\u826C\u826D\u8271\u8275\u8276\u8277\u8278\u827B\u827C\u8280\u8281\u8283\u8285\u8286\u8287\u8289\u828C\u8290\u8293\u8294\u8295\u8296\u829A\u829B\u829E\u82A0\u82A2\u82A3\u82A7\u82B2\u82B5\u82B6\u82BA\u82BB\u82BC\u82BF\u82C0\u82C2\u82C3\u82C5\u82C6\u82C9\u82D0\u82D6\u82D9\u82DA\u82DD\u82E2\u82E7\u82E8\u82E9\u82EA\u82EC\u82ED\u82EE\u82F0\u82F2\u82F3\u82F5\u82F6\u82F8',
      ],
      [
        'c680',
        '\u82FA\u82FC',
        4,
        '\u830A\u830B\u830D\u8310\u8312\u8313\u8316\u8318\u8319\u831D',
        9,
        '\u8329\u832A\u832E\u8330\u8332\u8337\u833B\u833D\u5564\u813E\u75B2\u76AE\u5339\u75DE\u50FB\u5C41\u8B6C\u7BC7\u504F\u7247\u9A97\u98D8\u6F02\u74E2\u7968\u6487\u77A5\u62FC\u9891\u8D2B\u54C1\u8058\u4E52\u576A\u82F9\u840D\u5E73\u51ED\u74F6\u8BC4\u5C4F\u5761\u6CFC\u9887\u5A46\u7834\u9B44\u8FEB\u7C95\u5256\u6251\u94FA\u4EC6\u8386\u8461\u83E9\u84B2\u57D4\u6734\u5703\u666E\u6D66\u8C31\u66DD\u7011\u671F\u6B3A\u6816\u621A\u59BB\u4E03\u51C4\u6F06\u67D2\u6C8F\u5176\u68CB\u5947\u6B67\u7566\u5D0E\u8110\u9F50\u65D7\u7948\u7941\u9A91\u8D77\u5C82\u4E5E\u4F01\u542F\u5951\u780C\u5668\u6C14\u8FC4\u5F03\u6C7D\u6CE3\u8BAB\u6390',
      ],
      [
        'c740',
        '\u833E\u833F\u8341\u8342\u8344\u8345\u8348\u834A',
        4,
        '\u8353\u8355',
        4,
        '\u835D\u8362\u8370',
        6,
        '\u8379\u837A\u837E',
        6,
        '\u8387\u8388\u838A\u838B\u838C\u838D\u838F\u8390\u8391\u8394\u8395\u8396\u8397\u8399\u839A\u839D\u839F\u83A1',
        6,
        '\u83AC\u83AD\u83AE',
      ],
      [
        'c780',
        '\u83AF\u83B5\u83BB\u83BE\u83BF\u83C2\u83C3\u83C4\u83C6\u83C8\u83C9\u83CB\u83CD\u83CE\u83D0\u83D1\u83D2\u83D3\u83D5\u83D7\u83D9\u83DA\u83DB\u83DE\u83E2\u83E3\u83E4\u83E6\u83E7\u83E8\u83EB\u83EC\u83ED\u6070\u6D3D\u7275\u6266\u948E\u94C5\u5343\u8FC1\u7B7E\u4EDF\u8C26\u4E7E\u9ED4\u94B1\u94B3\u524D\u6F5C\u9063\u6D45\u8C34\u5811\u5D4C\u6B20\u6B49\u67AA\u545B\u8154\u7F8C\u5899\u8537\u5F3A\u62A2\u6A47\u9539\u6572\u6084\u6865\u77A7\u4E54\u4FA8\u5DE7\u9798\u64AC\u7FD8\u5CED\u4FCF\u7A8D\u5207\u8304\u4E14\u602F\u7A83\u94A6\u4FB5\u4EB2\u79E6\u7434\u52E4\u82B9\u64D2\u79BD\u5BDD\u6C81\u9752\u8F7B\u6C22\u503E\u537F\u6E05\u64CE\u6674\u6C30\u60C5\u9877\u8BF7\u5E86\u743C\u7A77\u79CB\u4E18\u90B1\u7403\u6C42\u56DA\u914B\u6CC5\u8D8B\u533A\u86C6\u66F2\u8EAF\u5C48\u9A71\u6E20',
      ],
      [
        'c840',
        '\u83EE\u83EF\u83F3',
        4,
        '\u83FA\u83FB\u83FC\u83FE\u83FF\u8400\u8402\u8405\u8407\u8408\u8409\u840A\u8410\u8412',
        5,
        '\u8419\u841A\u841B\u841E',
        5,
        '\u8429',
        7,
        '\u8432',
        5,
        '\u8439\u843A\u843B\u843E',
        7,
        '\u8447\u8448\u8449',
      ],
      [
        'c880',
        '\u844A',
        6,
        '\u8452',
        4,
        '\u8458\u845D\u845E\u845F\u8460\u8462\u8464',
        4,
        '\u846A\u846E\u846F\u8470\u8472\u8474\u8477\u8479\u847B\u847C\u53D6\u5A36\u9F8B\u8DA3\u53BB\u5708\u98A7\u6743\u919B\u6CC9\u5168\u75CA\u62F3\u72AC\u5238\u529D\u7F3A\u7094\u7638\u5374\u9E4A\u69B7\u786E\u96C0\u88D9\u7FA4\u7136\u71C3\u5189\u67D3\u74E4\u58E4\u6518\u56B7\u8BA9\u9976\u6270\u7ED5\u60F9\u70ED\u58EC\u4EC1\u4EBA\u5FCD\u97E7\u4EFB\u8BA4\u5203\u598A\u7EAB\u6254\u4ECD\u65E5\u620E\u8338\u84C9\u8363\u878D\u7194\u6EB6\u5BB9\u7ED2\u5197\u63C9\u67D4\u8089\u8339\u8815\u5112\u5B7A\u5982\u8FB1\u4E73\u6C5D\u5165\u8925\u8F6F\u962E\u854A\u745E\u9510\u95F0\u6DA6\u82E5\u5F31\u6492\u6D12\u8428\u816E\u9CC3\u585E\u8D5B\u4E09\u53C1',
      ],
      [
        'c940',
        '\u847D',
        4,
        '\u8483\u8484\u8485\u8486\u848A\u848D\u848F',
        7,
        '\u8498\u849A\u849B\u849D\u849E\u849F\u84A0\u84A2',
        12,
        '\u84B0\u84B1\u84B3\u84B5\u84B6\u84B7\u84BB\u84BC\u84BE\u84C0\u84C2\u84C3\u84C5\u84C6\u84C7\u84C8\u84CB\u84CC\u84CE\u84CF\u84D2\u84D4\u84D5\u84D7',
      ],
      [
        'c980',
        '\u84D8',
        4,
        '\u84DE\u84E1\u84E2\u84E4\u84E7',
        4,
        '\u84ED\u84EE\u84EF\u84F1',
        10,
        '\u84FD\u84FE\u8500\u8501\u8502\u4F1E\u6563\u6851\u55D3\u4E27\u6414\u9A9A\u626B\u5AC2\u745F\u8272\u6DA9\u68EE\u50E7\u838E\u7802\u6740\u5239\u6C99\u7EB1\u50BB\u5565\u715E\u7B5B\u6652\u73CA\u82EB\u6749\u5C71\u5220\u717D\u886B\u95EA\u9655\u64C5\u8D61\u81B3\u5584\u6C55\u6247\u7F2E\u5892\u4F24\u5546\u8D4F\u664C\u4E0A\u5C1A\u88F3\u68A2\u634E\u7A0D\u70E7\u828D\u52FA\u97F6\u5C11\u54E8\u90B5\u7ECD\u5962\u8D4A\u86C7\u820C\u820D\u8D66\u6444\u5C04\u6151\u6D89\u793E\u8BBE\u7837\u7533\u547B\u4F38\u8EAB\u6DF1\u5A20\u7EC5\u795E\u6C88\u5BA1\u5A76\u751A\u80BE\u614E\u6E17\u58F0\u751F\u7525\u7272\u5347\u7EF3',
      ],
      [
        'ca40',
        '\u8503',
        8,
        '\u850D\u850E\u850F\u8510\u8512\u8514\u8515\u8516\u8518\u8519\u851B\u851C\u851D\u851E\u8520\u8522',
        8,
        '\u852D',
        9,
        '\u853E',
        4,
        '\u8544\u8545\u8546\u8547\u854B',
        10,
      ],
      [
        'ca80',
        '\u8557\u8558\u855A\u855B\u855C\u855D\u855F',
        4,
        '\u8565\u8566\u8567\u8569',
        8,
        '\u8573\u8575\u8576\u8577\u8578\u857C\u857D\u857F\u8580\u8581\u7701\u76DB\u5269\u80DC\u5723\u5E08\u5931\u72EE\u65BD\u6E7F\u8BD7\u5C38\u8671\u5341\u77F3\u62FE\u65F6\u4EC0\u98DF\u8680\u5B9E\u8BC6\u53F2\u77E2\u4F7F\u5C4E\u9A76\u59CB\u5F0F\u793A\u58EB\u4E16\u67FF\u4E8B\u62ED\u8A93\u901D\u52BF\u662F\u55DC\u566C\u9002\u4ED5\u4F8D\u91CA\u9970\u6C0F\u5E02\u6043\u5BA4\u89C6\u8BD5\u6536\u624B\u9996\u5B88\u5BFF\u6388\u552E\u53D7\u7626\u517D\u852C\u67A2\u68B3\u6B8A\u6292\u8F93\u53D4\u8212\u6DD1\u758F\u4E66\u8D4E\u5B70\u719F\u85AF\u6691\u66D9\u7F72\u8700\u9ECD\u9F20\u5C5E\u672F\u8FF0\u6811\u675F\u620D\u7AD6\u5885\u5EB6\u6570\u6F31',
      ],
      [
        'cb40',
        '\u8582\u8583\u8586\u8588',
        6,
        '\u8590',
        10,
        '\u859D',
        6,
        '\u85A5\u85A6\u85A7\u85A9\u85AB\u85AC\u85AD\u85B1',
        5,
        '\u85B8\u85BA',
        6,
        '\u85C2',
        6,
        '\u85CA',
        4,
        '\u85D1\u85D2',
      ],
      [
        'cb80',
        '\u85D4\u85D6',
        5,
        '\u85DD',
        6,
        '\u85E5\u85E6\u85E7\u85E8\u85EA',
        14,
        '\u6055\u5237\u800D\u6454\u8870\u7529\u5E05\u6813\u62F4\u971C\u53CC\u723D\u8C01\u6C34\u7761\u7A0E\u542E\u77AC\u987A\u821C\u8BF4\u7855\u6714\u70C1\u65AF\u6495\u5636\u601D\u79C1\u53F8\u4E1D\u6B7B\u8086\u5BFA\u55E3\u56DB\u4F3A\u4F3C\u9972\u5DF3\u677E\u8038\u6002\u9882\u9001\u5B8B\u8BBC\u8BF5\u641C\u8258\u64DE\u55FD\u82CF\u9165\u4FD7\u7D20\u901F\u7C9F\u50F3\u5851\u6EAF\u5BBF\u8BC9\u8083\u9178\u849C\u7B97\u867D\u968B\u968F\u7EE5\u9AD3\u788E\u5C81\u7A57\u9042\u96A7\u795F\u5B59\u635F\u7B0B\u84D1\u68AD\u5506\u7F29\u7410\u7D22\u9501\u6240\u584C\u4ED6\u5B83\u5979\u5854',
      ],
      [
        'cc40',
        '\u85F9\u85FA\u85FC\u85FD\u85FE\u8600',
        4,
        '\u8606',
        10,
        '\u8612\u8613\u8614\u8615\u8617',
        15,
        '\u8628\u862A',
        13,
        '\u8639\u863A\u863B\u863D\u863E\u863F\u8640',
      ],
      [
        'cc80',
        '\u8641',
        11,
        '\u8652\u8653\u8655',
        4,
        '\u865B\u865C\u865D\u865F\u8660\u8661\u8663',
        7,
        '\u736D\u631E\u8E4B\u8E0F\u80CE\u82D4\u62AC\u53F0\u6CF0\u915E\u592A\u6001\u6C70\u574D\u644A\u8D2A\u762B\u6EE9\u575B\u6A80\u75F0\u6F6D\u8C2D\u8C08\u5766\u6BEF\u8892\u78B3\u63A2\u53F9\u70AD\u6C64\u5858\u642A\u5802\u68E0\u819B\u5510\u7CD6\u5018\u8EBA\u6DCC\u8D9F\u70EB\u638F\u6D9B\u6ED4\u7EE6\u8404\u6843\u9003\u6DD8\u9676\u8BA8\u5957\u7279\u85E4\u817E\u75BC\u8A8A\u68AF\u5254\u8E22\u9511\u63D0\u9898\u8E44\u557C\u4F53\u66FF\u568F\u60D5\u6D95\u5243\u5C49\u5929\u6DFB\u586B\u7530\u751C\u606C\u8214\u8146\u6311\u6761\u8FE2\u773A\u8DF3\u8D34\u94C1\u5E16\u5385\u542C\u70C3',
      ],
      [
        'cd40',
        '\u866D\u866F\u8670\u8672',
        6,
        '\u8683',
        6,
        '\u868E',
        4,
        '\u8694\u8696',
        5,
        '\u869E',
        4,
        '\u86A5\u86A6\u86AB\u86AD\u86AE\u86B2\u86B3\u86B7\u86B8\u86B9\u86BB',
        4,
        '\u86C1\u86C2\u86C3\u86C5\u86C8\u86CC\u86CD\u86D2\u86D3\u86D5\u86D6\u86D7\u86DA\u86DC',
      ],
      [
        'cd80',
        '\u86DD\u86E0\u86E1\u86E2\u86E3\u86E5\u86E6\u86E7\u86E8\u86EA\u86EB\u86EC\u86EF\u86F5\u86F6\u86F7\u86FA\u86FB\u86FC\u86FD\u86FF\u8701\u8704\u8705\u8706\u870B\u870C\u870E\u870F\u8710\u8711\u8714\u8716\u6C40\u5EF7\u505C\u4EAD\u5EAD\u633A\u8247\u901A\u6850\u916E\u77B3\u540C\u94DC\u5F64\u7AE5\u6876\u6345\u7B52\u7EDF\u75DB\u5077\u6295\u5934\u900F\u51F8\u79C3\u7A81\u56FE\u5F92\u9014\u6D82\u5C60\u571F\u5410\u5154\u6E4D\u56E2\u63A8\u9893\u817F\u8715\u892A\u9000\u541E\u5C6F\u81C0\u62D6\u6258\u8131\u9E35\u9640\u9A6E\u9A7C\u692D\u59A5\u62D3\u553E\u6316\u54C7\u86D9\u6D3C\u5A03\u74E6\u889C\u6B6A\u5916\u8C4C\u5F2F\u6E7E\u73A9\u987D\u4E38\u70F7\u5B8C\u7897\u633D\u665A\u7696\u60CB\u5B9B\u5A49\u4E07\u8155\u6C6A\u738B\u4EA1\u6789\u7F51\u5F80\u65FA\u671B\u5FD8\u5984\u5A01',
      ],
      [
        'ce40',
        '\u8719\u871B\u871D\u871F\u8720\u8724\u8726\u8727\u8728\u872A\u872B\u872C\u872D\u872F\u8730\u8732\u8733\u8735\u8736\u8738\u8739\u873A\u873C\u873D\u8740',
        6,
        '\u874A\u874B\u874D\u874F\u8750\u8751\u8752\u8754\u8755\u8756\u8758\u875A',
        5,
        '\u8761\u8762\u8766',
        7,
        '\u876F\u8771\u8772\u8773\u8775',
      ],
      [
        'ce80',
        '\u8777\u8778\u8779\u877A\u877F\u8780\u8781\u8784\u8786\u8787\u8789\u878A\u878C\u878E',
        4,
        '\u8794\u8795\u8796\u8798',
        6,
        '\u87A0',
        4,
        '\u5DCD\u5FAE\u5371\u97E6\u8FDD\u6845\u56F4\u552F\u60DF\u4E3A\u6F4D\u7EF4\u82C7\u840E\u59D4\u4F1F\u4F2A\u5C3E\u7EAC\u672A\u851A\u5473\u754F\u80C3\u5582\u9B4F\u4F4D\u6E2D\u8C13\u5C09\u6170\u536B\u761F\u6E29\u868A\u6587\u95FB\u7EB9\u543B\u7A33\u7D0A\u95EE\u55E1\u7FC1\u74EE\u631D\u8717\u6DA1\u7A9D\u6211\u65A1\u5367\u63E1\u6C83\u5DEB\u545C\u94A8\u4E4C\u6C61\u8BEC\u5C4B\u65E0\u829C\u68A7\u543E\u5434\u6BCB\u6B66\u4E94\u6342\u5348\u821E\u4F0D\u4FAE\u575E\u620A\u96FE\u6664\u7269\u52FF\u52A1\u609F\u8BEF\u6614\u7199\u6790\u897F\u7852\u77FD\u6670\u563B\u5438\u9521\u727A',
      ],
      [
        'cf40',
        '\u87A5\u87A6\u87A7\u87A9\u87AA\u87AE\u87B0\u87B1\u87B2\u87B4\u87B6\u87B7\u87B8\u87B9\u87BB\u87BC\u87BE\u87BF\u87C1',
        4,
        '\u87C7\u87C8\u87C9\u87CC',
        4,
        '\u87D4',
        6,
        '\u87DC\u87DD\u87DE\u87DF\u87E1\u87E2\u87E3\u87E4\u87E6\u87E7\u87E8\u87E9\u87EB\u87EC\u87ED\u87EF',
        9,
      ],
      [
        'cf80',
        '\u87FA\u87FB\u87FC\u87FD\u87FF\u8800\u8801\u8802\u8804',
        5,
        '\u880B',
        7,
        '\u8814\u8817\u8818\u8819\u881A\u881C',
        4,
        '\u8823\u7A00\u606F\u5E0C\u6089\u819D\u5915\u60DC\u7184\u70EF\u6EAA\u6C50\u7280\u6A84\u88AD\u5E2D\u4E60\u5AB3\u559C\u94E3\u6D17\u7CFB\u9699\u620F\u7EC6\u778E\u867E\u5323\u971E\u8F96\u6687\u5CE1\u4FA0\u72ED\u4E0B\u53A6\u590F\u5413\u6380\u9528\u5148\u4ED9\u9C9C\u7EA4\u54B8\u8D24\u8854\u8237\u95F2\u6D8E\u5F26\u5ACC\u663E\u9669\u73B0\u732E\u53BF\u817A\u9985\u7FA1\u5BAA\u9677\u9650\u7EBF\u76F8\u53A2\u9576\u9999\u7BB1\u8944\u6E58\u4E61\u7FD4\u7965\u8BE6\u60F3\u54CD\u4EAB\u9879\u5DF7\u6A61\u50CF\u5411\u8C61\u8427\u785D\u9704\u524A\u54EE\u56A3\u9500\u6D88\u5BB5\u6DC6\u6653',
      ],
      [
        'd040',
        '\u8824',
        13,
        '\u8833',
        5,
        '\u883A\u883B\u883D\u883E\u883F\u8841\u8842\u8843\u8846',
        5,
        '\u884E',
        5,
        '\u8855\u8856\u8858\u885A',
        6,
        '\u8866\u8867\u886A\u886D\u886F\u8871\u8873\u8874\u8875\u8876\u8878\u8879\u887A',
      ],
      [
        'd080',
        '\u887B\u887C\u8880\u8883\u8886\u8887\u8889\u888A\u888C\u888E\u888F\u8890\u8891\u8893\u8894\u8895\u8897',
        4,
        '\u889D',
        4,
        '\u88A3\u88A5',
        5,
        '\u5C0F\u5B5D\u6821\u8096\u5578\u7B11\u6548\u6954\u4E9B\u6B47\u874E\u978B\u534F\u631F\u643A\u90AA\u659C\u80C1\u8C10\u5199\u68B0\u5378\u87F9\u61C8\u6CC4\u6CFB\u8C22\u5C51\u85AA\u82AF\u950C\u6B23\u8F9B\u65B0\u5FFB\u5FC3\u4FE1\u8845\u661F\u8165\u7329\u60FA\u5174\u5211\u578B\u5F62\u90A2\u884C\u9192\u5E78\u674F\u6027\u59D3\u5144\u51F6\u80F8\u5308\u6C79\u96C4\u718A\u4F11\u4FEE\u7F9E\u673D\u55C5\u9508\u79C0\u8896\u7EE3\u589F\u620C\u9700\u865A\u5618\u987B\u5F90\u8BB8\u84C4\u9157\u53D9\u65ED\u5E8F\u755C\u6064\u7D6E\u5A7F\u7EEA\u7EED\u8F69\u55A7\u5BA3\u60AC\u65CB\u7384',
      ],
      [
        'd140',
        '\u88AC\u88AE\u88AF\u88B0\u88B2',
        4,
        '\u88B8\u88B9\u88BA\u88BB\u88BD\u88BE\u88BF\u88C0\u88C3\u88C4\u88C7\u88C8\u88CA\u88CB\u88CC\u88CD\u88CF\u88D0\u88D1\u88D3\u88D6\u88D7\u88DA',
        4,
        '\u88E0\u88E1\u88E6\u88E7\u88E9',
        6,
        '\u88F2\u88F5\u88F6\u88F7\u88FA\u88FB\u88FD\u88FF\u8900\u8901\u8903',
        5,
      ],
      [
        'd180',
        '\u8909\u890B',
        4,
        '\u8911\u8914',
        4,
        '\u891C',
        4,
        '\u8922\u8923\u8924\u8926\u8927\u8928\u8929\u892C\u892D\u892E\u892F\u8931\u8932\u8933\u8935\u8937\u9009\u7663\u7729\u7EDA\u9774\u859B\u5B66\u7A74\u96EA\u8840\u52CB\u718F\u5FAA\u65EC\u8BE2\u5BFB\u9A6F\u5DE1\u6B89\u6C5B\u8BAD\u8BAF\u900A\u8FC5\u538B\u62BC\u9E26\u9E2D\u5440\u4E2B\u82BD\u7259\u869C\u5D16\u8859\u6DAF\u96C5\u54D1\u4E9A\u8BB6\u7109\u54BD\u9609\u70DF\u6DF9\u76D0\u4E25\u7814\u8712\u5CA9\u5EF6\u8A00\u989C\u960E\u708E\u6CBF\u5944\u63A9\u773C\u884D\u6F14\u8273\u5830\u71D5\u538C\u781A\u96C1\u5501\u5F66\u7130\u5BB4\u8C1A\u9A8C\u6B83\u592E\u9E2F\u79E7\u6768\u626C\u4F6F\u75A1\u7F8A\u6D0B\u9633\u6C27\u4EF0\u75D2\u517B\u6837\u6F3E\u9080\u8170\u5996\u7476',
      ],
      [
        'd240',
        '\u8938',
        8,
        '\u8942\u8943\u8945',
        24,
        '\u8960',
        5,
        '\u8967',
        19,
        '\u897C',
      ],
      [
        'd280',
        '\u897D\u897E\u8980\u8982\u8984\u8985\u8987',
        26,
        '\u6447\u5C27\u9065\u7A91\u8C23\u59DA\u54AC\u8200\u836F\u8981\u8000\u6930\u564E\u8036\u7237\u91CE\u51B6\u4E5F\u9875\u6396\u4E1A\u53F6\u66F3\u814B\u591C\u6DB2\u4E00\u58F9\u533B\u63D6\u94F1\u4F9D\u4F0A\u8863\u9890\u5937\u9057\u79FB\u4EEA\u80F0\u7591\u6C82\u5B9C\u59E8\u5F5D\u6905\u8681\u501A\u5DF2\u4E59\u77E3\u4EE5\u827A\u6291\u6613\u9091\u5C79\u4EBF\u5F79\u81C6\u9038\u8084\u75AB\u4EA6\u88D4\u610F\u6BC5\u5FC6\u4E49\u76CA\u6EA2\u8BE3\u8BAE\u8C0A\u8BD1\u5F02\u7FFC\u7FCC\u7ECE\u8335\u836B\u56E0\u6BB7\u97F3\u9634\u59FB\u541F\u94F6\u6DEB\u5BC5\u996E\u5C39\u5F15\u9690',
      ],
      [
        'd340',
        '\u89A2',
        30,
        '\u89C3\u89CD\u89D3\u89D4\u89D5\u89D7\u89D8\u89D9\u89DB\u89DD\u89DF\u89E0\u89E1\u89E2\u89E4\u89E7\u89E8\u89E9\u89EA\u89EC\u89ED\u89EE\u89F0\u89F1\u89F2\u89F4',
        6,
      ],
      [
        'd380',
        '\u89FB',
        4,
        '\u8A01',
        5,
        '\u8A08',
        21,
        '\u5370\u82F1\u6A31\u5A74\u9E70\u5E94\u7F28\u83B9\u8424\u8425\u8367\u8747\u8FCE\u8D62\u76C8\u5F71\u9896\u786C\u6620\u54DF\u62E5\u4F63\u81C3\u75C8\u5EB8\u96CD\u8E0A\u86F9\u548F\u6CF3\u6D8C\u6C38\u607F\u52C7\u7528\u5E7D\u4F18\u60A0\u5FE7\u5C24\u7531\u90AE\u94C0\u72B9\u6CB9\u6E38\u9149\u6709\u53CB\u53F3\u4F51\u91C9\u8BF1\u53C8\u5E7C\u8FC2\u6DE4\u4E8E\u76C2\u6986\u865E\u611A\u8206\u4F59\u4FDE\u903E\u9C7C\u6109\u6E1D\u6E14\u9685\u4E88\u5A31\u96E8\u4E0E\u5C7F\u79B9\u5B87\u8BED\u7FBD\u7389\u57DF\u828B\u90C1\u5401\u9047\u55BB\u5CEA\u5FA1\u6108\u6B32\u72F1\u80B2\u8A89',
      ],
      ['d440', '\u8A1E', 31, '\u8A3F', 8, '\u8A49', 21],
      [
        'd480',
        '\u8A5F',
        25,
        '\u8A7A',
        6,
        '\u6D74\u5BD3\u88D5\u9884\u8C6B\u9A6D\u9E33\u6E0A\u51A4\u5143\u57A3\u8881\u539F\u63F4\u8F95\u56ED\u5458\u5706\u733F\u6E90\u7F18\u8FDC\u82D1\u613F\u6028\u9662\u66F0\u7EA6\u8D8A\u8DC3\u94A5\u5CB3\u7CA4\u6708\u60A6\u9605\u8018\u4E91\u90E7\u5300\u9668\u5141\u8FD0\u8574\u915D\u6655\u97F5\u5B55\u531D\u7838\u6742\u683D\u54C9\u707E\u5BB0\u8F7D\u518D\u5728\u54B1\u6512\u6682\u8D5E\u8D43\u810F\u846C\u906D\u7CDF\u51FF\u85FB\u67A3\u65E9\u6FA1\u86A4\u8E81\u566A\u9020\u7682\u7076\u71E5\u8D23\u62E9\u5219\u6CFD\u8D3C\u600E\u589E\u618E\u66FE\u8D60\u624E\u55B3\u6E23\u672D\u8F67',
      ],
      ['d540', '\u8A81', 7, '\u8A8B', 7, '\u8A94', 46],
      [
        'd580',
        '\u8AC3',
        32,
        '\u94E1\u95F8\u7728\u6805\u69A8\u548B\u4E4D\u70B8\u8BC8\u6458\u658B\u5B85\u7A84\u503A\u5BE8\u77BB\u6BE1\u8A79\u7C98\u6CBE\u76CF\u65A9\u8F97\u5D2D\u5C55\u8638\u6808\u5360\u6218\u7AD9\u6E5B\u7EFD\u6A1F\u7AE0\u5F70\u6F33\u5F20\u638C\u6DA8\u6756\u4E08\u5E10\u8D26\u4ED7\u80C0\u7634\u969C\u62DB\u662D\u627E\u6CBC\u8D75\u7167\u7F69\u5146\u8087\u53EC\u906E\u6298\u54F2\u86F0\u8F99\u8005\u9517\u8517\u8FD9\u6D59\u73CD\u659F\u771F\u7504\u7827\u81FB\u8D1E\u9488\u4FA6\u6795\u75B9\u8BCA\u9707\u632F\u9547\u9635\u84B8\u6323\u7741\u5F81\u72F0\u4E89\u6014\u6574\u62EF\u6B63\u653F',
      ],
      ['d640', '\u8AE4', 34, '\u8B08', 27],
      [
        'd680',
        '\u8B24\u8B25\u8B27',
        30,
        '\u5E27\u75C7\u90D1\u8BC1\u829D\u679D\u652F\u5431\u8718\u77E5\u80A2\u8102\u6C41\u4E4B\u7EC7\u804C\u76F4\u690D\u6B96\u6267\u503C\u4F84\u5740\u6307\u6B62\u8DBE\u53EA\u65E8\u7EB8\u5FD7\u631A\u63B7\u81F3\u81F4\u7F6E\u5E1C\u5CD9\u5236\u667A\u79E9\u7A1A\u8D28\u7099\u75D4\u6EDE\u6CBB\u7A92\u4E2D\u76C5\u5FE0\u949F\u8877\u7EC8\u79CD\u80BF\u91CD\u4EF2\u4F17\u821F\u5468\u5DDE\u6D32\u8BCC\u7CA5\u8F74\u8098\u5E1A\u5492\u76B1\u5B99\u663C\u9AA4\u73E0\u682A\u86DB\u6731\u732A\u8BF8\u8BDB\u9010\u7AF9\u70DB\u716E\u62C4\u77A9\u5631\u4E3B\u8457\u67F1\u52A9\u86C0\u8D2E\u94F8\u7B51',
      ],
      ['d740', '\u8B46', 31, '\u8B67', 4, '\u8B6D', 25],
      [
        'd780',
        '\u8B87',
        24,
        '\u8BAC\u8BB1\u8BBB\u8BC7\u8BD0\u8BEA\u8C09\u8C1E\u4F4F\u6CE8\u795D\u9A7B\u6293\u722A\u62FD\u4E13\u7816\u8F6C\u64B0\u8D5A\u7BC6\u6869\u5E84\u88C5\u5986\u649E\u58EE\u72B6\u690E\u9525\u8FFD\u8D58\u5760\u7F00\u8C06\u51C6\u6349\u62D9\u5353\u684C\u7422\u8301\u914C\u5544\u7740\u707C\u6D4A\u5179\u54A8\u8D44\u59FF\u6ECB\u6DC4\u5B5C\u7D2B\u4ED4\u7C7D\u6ED3\u5B50\u81EA\u6E0D\u5B57\u9B03\u68D5\u8E2A\u5B97\u7EFC\u603B\u7EB5\u90B9\u8D70\u594F\u63CD\u79DF\u8DB3\u5352\u65CF\u7956\u8BC5\u963B\u7EC4\u94BB\u7E82\u5634\u9189\u6700\u7F6A\u5C0A\u9075\u6628\u5DE6\u4F50\u67DE\u505A\u4F5C\u5750\u5EA7',
      ],
      [
        'd840',
        '\u8C38',
        8,
        '\u8C42\u8C43\u8C44\u8C45\u8C48\u8C4A\u8C4B\u8C4D',
        7,
        '\u8C56\u8C57\u8C58\u8C59\u8C5B',
        5,
        '\u8C63',
        6,
        '\u8C6C',
        6,
        '\u8C74\u8C75\u8C76\u8C77\u8C7B',
        6,
        '\u8C83\u8C84\u8C86\u8C87',
      ],
      [
        'd880',
        '\u8C88\u8C8B\u8C8D',
        6,
        '\u8C95\u8C96\u8C97\u8C99',
        20,
        '\u4E8D\u4E0C\u5140\u4E10\u5EFF\u5345\u4E15\u4E98\u4E1E\u9B32\u5B6C\u5669\u4E28\u79BA\u4E3F\u5315\u4E47\u592D\u723B\u536E\u6C10\u56DF\u80E4\u9997\u6BD3\u777E\u9F17\u4E36\u4E9F\u9F10\u4E5C\u4E69\u4E93\u8288\u5B5B\u556C\u560F\u4EC4\u538D\u539D\u53A3\u53A5\u53AE\u9765\u8D5D\u531A\u53F5\u5326\u532E\u533E\u8D5C\u5366\u5363\u5202\u5208\u520E\u522D\u5233\u523F\u5240\u524C\u525E\u5261\u525C\u84AF\u527D\u5282\u5281\u5290\u5293\u5182\u7F54\u4EBB\u4EC3\u4EC9\u4EC2\u4EE8\u4EE1\u4EEB\u4EDE\u4F1B\u4EF3\u4F22\u4F64\u4EF5\u4F25\u4F27\u4F09\u4F2B\u4F5E\u4F67\u6538\u4F5A\u4F5D',
      ],
      ['d940', '\u8CAE', 62],
      [
        'd980',
        '\u8CED',
        32,
        '\u4F5F\u4F57\u4F32\u4F3D\u4F76\u4F74\u4F91\u4F89\u4F83\u4F8F\u4F7E\u4F7B\u4FAA\u4F7C\u4FAC\u4F94\u4FE6\u4FE8\u4FEA\u4FC5\u4FDA\u4FE3\u4FDC\u4FD1\u4FDF\u4FF8\u5029\u504C\u4FF3\u502C\u500F\u502E\u502D\u4FFE\u501C\u500C\u5025\u5028\u507E\u5043\u5055\u5048\u504E\u506C\u507B\u50A5\u50A7\u50A9\u50BA\u50D6\u5106\u50ED\u50EC\u50E6\u50EE\u5107\u510B\u4EDD\u6C3D\u4F58\u4F65\u4FCE\u9FA0\u6C46\u7C74\u516E\u5DFD\u9EC9\u9998\u5181\u5914\u52F9\u530D\u8A07\u5310\u51EB\u5919\u5155\u4EA0\u5156\u4EB3\u886E\u88A4\u4EB5\u8114\u88D2\u7980\u5B34\u8803\u7FB8\u51AB\u51B1\u51BD\u51BC',
      ],
      [
        'da40',
        '\u8D0E',
        14,
        '\u8D20\u8D51\u8D52\u8D57\u8D5F\u8D65\u8D68\u8D69\u8D6A\u8D6C\u8D6E\u8D6F\u8D71\u8D72\u8D78',
        8,
        '\u8D82\u8D83\u8D86\u8D87\u8D88\u8D89\u8D8C',
        4,
        '\u8D92\u8D93\u8D95',
        9,
        '\u8DA0\u8DA1',
      ],
      [
        'da80',
        '\u8DA2\u8DA4',
        12,
        '\u8DB2\u8DB6\u8DB7\u8DB9\u8DBB\u8DBD\u8DC0\u8DC1\u8DC2\u8DC5\u8DC7\u8DC8\u8DC9\u8DCA\u8DCD\u8DD0\u8DD2\u8DD3\u8DD4\u51C7\u5196\u51A2\u51A5\u8BA0\u8BA6\u8BA7\u8BAA\u8BB4\u8BB5\u8BB7\u8BC2\u8BC3\u8BCB\u8BCF\u8BCE\u8BD2\u8BD3\u8BD4\u8BD6\u8BD8\u8BD9\u8BDC\u8BDF\u8BE0\u8BE4\u8BE8\u8BE9\u8BEE\u8BF0\u8BF3\u8BF6\u8BF9\u8BFC\u8BFF\u8C00\u8C02\u8C04\u8C07\u8C0C\u8C0F\u8C11\u8C12\u8C14\u8C15\u8C16\u8C19\u8C1B\u8C18\u8C1D\u8C1F\u8C20\u8C21\u8C25\u8C27\u8C2A\u8C2B\u8C2E\u8C2F\u8C32\u8C33\u8C35\u8C36\u5369\u537A\u961D\u9622\u9621\u9631\u962A\u963D\u963C\u9642\u9649\u9654\u965F\u9667\u966C\u9672\u9674\u9688\u968D\u9697\u96B0\u9097\u909B\u909D\u9099\u90AC\u90A1\u90B4\u90B3\u90B6\u90BA',
      ],
      [
        'db40',
        '\u8DD5\u8DD8\u8DD9\u8DDC\u8DE0\u8DE1\u8DE2\u8DE5\u8DE6\u8DE7\u8DE9\u8DED\u8DEE\u8DF0\u8DF1\u8DF2\u8DF4\u8DF6\u8DFC\u8DFE',
        6,
        '\u8E06\u8E07\u8E08\u8E0B\u8E0D\u8E0E\u8E10\u8E11\u8E12\u8E13\u8E15',
        7,
        '\u8E20\u8E21\u8E24',
        4,
        '\u8E2B\u8E2D\u8E30\u8E32\u8E33\u8E34\u8E36\u8E37\u8E38\u8E3B\u8E3C\u8E3E',
      ],
      [
        'db80',
        '\u8E3F\u8E43\u8E45\u8E46\u8E4C',
        4,
        '\u8E53',
        5,
        '\u8E5A',
        11,
        '\u8E67\u8E68\u8E6A\u8E6B\u8E6E\u8E71\u90B8\u90B0\u90CF\u90C5\u90BE\u90D0\u90C4\u90C7\u90D3\u90E6\u90E2\u90DC\u90D7\u90DB\u90EB\u90EF\u90FE\u9104\u9122\u911E\u9123\u9131\u912F\u9139\u9143\u9146\u520D\u5942\u52A2\u52AC\u52AD\u52BE\u54FF\u52D0\u52D6\u52F0\u53DF\u71EE\u77CD\u5EF4\u51F5\u51FC\u9B2F\u53B6\u5F01\u755A\u5DEF\u574C\u57A9\u57A1\u587E\u58BC\u58C5\u58D1\u5729\u572C\u572A\u5733\u5739\u572E\u572F\u575C\u573B\u5742\u5769\u5785\u576B\u5786\u577C\u577B\u5768\u576D\u5776\u5773\u57AD\u57A4\u578C\u57B2\u57CF\u57A7\u57B4\u5793\u57A0\u57D5\u57D8\u57DA\u57D9\u57D2\u57B8\u57F4\u57EF\u57F8\u57E4\u57DD',
      ],
      [
        'dc40',
        '\u8E73\u8E75\u8E77',
        4,
        '\u8E7D\u8E7E\u8E80\u8E82\u8E83\u8E84\u8E86\u8E88',
        6,
        '\u8E91\u8E92\u8E93\u8E95',
        6,
        '\u8E9D\u8E9F',
        11,
        '\u8EAD\u8EAE\u8EB0\u8EB1\u8EB3',
        6,
        '\u8EBB',
        7,
      ],
      [
        'dc80',
        '\u8EC3',
        10,
        '\u8ECF',
        21,
        '\u580B\u580D\u57FD\u57ED\u5800\u581E\u5819\u5844\u5820\u5865\u586C\u5881\u5889\u589A\u5880\u99A8\u9F19\u61FF\u8279\u827D\u827F\u828F\u828A\u82A8\u8284\u828E\u8291\u8297\u8299\u82AB\u82B8\u82BE\u82B0\u82C8\u82CA\u82E3\u8298\u82B7\u82AE\u82CB\u82CC\u82C1\u82A9\u82B4\u82A1\u82AA\u829F\u82C4\u82CE\u82A4\u82E1\u8309\u82F7\u82E4\u830F\u8307\u82DC\u82F4\u82D2\u82D8\u830C\u82FB\u82D3\u8311\u831A\u8306\u8314\u8315\u82E0\u82D5\u831C\u8351\u835B\u835C\u8308\u8392\u833C\u8334\u8331\u839B\u835E\u832F\u834F\u8347\u8343\u835F\u8340\u8317\u8360\u832D\u833A\u8333\u8366\u8365',
      ],
      ['dd40', '\u8EE5', 62],
      [
        'dd80',
        '\u8F24',
        32,
        '\u8368\u831B\u8369\u836C\u836A\u836D\u836E\u83B0\u8378\u83B3\u83B4\u83A0\u83AA\u8393\u839C\u8385\u837C\u83B6\u83A9\u837D\u83B8\u837B\u8398\u839E\u83A8\u83BA\u83BC\u83C1\u8401\u83E5\u83D8\u5807\u8418\u840B\u83DD\u83FD\u83D6\u841C\u8438\u8411\u8406\u83D4\u83DF\u840F\u8403\u83F8\u83F9\u83EA\u83C5\u83C0\u8426\u83F0\u83E1\u845C\u8451\u845A\u8459\u8473\u8487\u8488\u847A\u8489\u8478\u843C\u8446\u8469\u8476\u848C\u848E\u8431\u846D\u84C1\u84CD\u84D0\u84E6\u84BD\u84D3\u84CA\u84BF\u84BA\u84E0\u84A1\u84B9\u84B4\u8497\u84E5\u84E3\u850C\u750D\u8538\u84F0\u8539\u851F\u853A',
      ],
      [
        'de40',
        '\u8F45',
        32,
        '\u8F6A\u8F80\u8F8C\u8F92\u8F9D\u8FA0\u8FA1\u8FA2\u8FA4\u8FA5\u8FA6\u8FA7\u8FAA\u8FAC\u8FAD\u8FAE\u8FAF\u8FB2\u8FB3\u8FB4\u8FB5\u8FB7\u8FB8\u8FBA\u8FBB\u8FBC\u8FBF\u8FC0\u8FC3\u8FC6',
      ],
      [
        'de80',
        '\u8FC9',
        4,
        '\u8FCF\u8FD2\u8FD6\u8FD7\u8FDA\u8FE0\u8FE1\u8FE3\u8FE7\u8FEC\u8FEF\u8FF1\u8FF2\u8FF4\u8FF5\u8FF6\u8FFA\u8FFB\u8FFC\u8FFE\u8FFF\u9007\u9008\u900C\u900E\u9013\u9015\u9018\u8556\u853B\u84FF\u84FC\u8559\u8548\u8568\u8564\u855E\u857A\u77A2\u8543\u8572\u857B\u85A4\u85A8\u8587\u858F\u8579\u85AE\u859C\u8585\u85B9\u85B7\u85B0\u85D3\u85C1\u85DC\u85FF\u8627\u8605\u8629\u8616\u863C\u5EFE\u5F08\u593C\u5941\u8037\u5955\u595A\u5958\u530F\u5C22\u5C25\u5C2C\u5C34\u624C\u626A\u629F\u62BB\u62CA\u62DA\u62D7\u62EE\u6322\u62F6\u6339\u634B\u6343\u63AD\u63F6\u6371\u637A\u638E\u63B4\u636D\u63AC\u638A\u6369\u63AE\u63BC\u63F2\u63F8\u63E0\u63FF\u63C4\u63DE\u63CE\u6452\u63C6\u63BE\u6445\u6441\u640B\u641B\u6420\u640C\u6426\u6421\u645E\u6484\u646D\u6496',
      ],
      [
        'df40',
        '\u9019\u901C\u9023\u9024\u9025\u9027',
        5,
        '\u9030',
        4,
        '\u9037\u9039\u903A\u903D\u903F\u9040\u9043\u9045\u9046\u9048',
        4,
        '\u904E\u9054\u9055\u9056\u9059\u905A\u905C',
        5,
        '\u9064\u9066\u9067\u9069\u906A\u906B\u906C\u906F',
        4,
        '\u9076',
        6,
        '\u907E\u9081',
      ],
      [
        'df80',
        '\u9084\u9085\u9086\u9087\u9089\u908A\u908C',
        4,
        '\u9092\u9094\u9096\u9098\u909A\u909C\u909E\u909F\u90A0\u90A4\u90A5\u90A7\u90A8\u90A9\u90AB\u90AD\u90B2\u90B7\u90BC\u90BD\u90BF\u90C0\u647A\u64B7\u64B8\u6499\u64BA\u64C0\u64D0\u64D7\u64E4\u64E2\u6509\u6525\u652E\u5F0B\u5FD2\u7519\u5F11\u535F\u53F1\u53FD\u53E9\u53E8\u53FB\u5412\u5416\u5406\u544B\u5452\u5453\u5454\u5456\u5443\u5421\u5457\u5459\u5423\u5432\u5482\u5494\u5477\u5471\u5464\u549A\u549B\u5484\u5476\u5466\u549D\u54D0\u54AD\u54C2\u54B4\u54D2\u54A7\u54A6\u54D3\u54D4\u5472\u54A3\u54D5\u54BB\u54BF\u54CC\u54D9\u54DA\u54DC\u54A9\u54AA\u54A4\u54DD\u54CF\u54DE\u551B\u54E7\u5520\u54FD\u5514\u54F3\u5522\u5523\u550F\u5511\u5527\u552A\u5567\u558F\u55B5\u5549\u556D\u5541\u5555\u553F\u5550\u553C',
      ],
      [
        'e040',
        '\u90C2\u90C3\u90C6\u90C8\u90C9\u90CB\u90CC\u90CD\u90D2\u90D4\u90D5\u90D6\u90D8\u90D9\u90DA\u90DE\u90DF\u90E0\u90E3\u90E4\u90E5\u90E9\u90EA\u90EC\u90EE\u90F0\u90F1\u90F2\u90F3\u90F5\u90F6\u90F7\u90F9\u90FA\u90FB\u90FC\u90FF\u9100\u9101\u9103\u9105',
        19,
        '\u911A\u911B\u911C',
      ],
      [
        'e080',
        '\u911D\u911F\u9120\u9121\u9124',
        10,
        '\u9130\u9132',
        6,
        '\u913A',
        8,
        '\u9144\u5537\u5556\u5575\u5576\u5577\u5533\u5530\u555C\u558B\u55D2\u5583\u55B1\u55B9\u5588\u5581\u559F\u557E\u55D6\u5591\u557B\u55DF\u55BD\u55BE\u5594\u5599\u55EA\u55F7\u55C9\u561F\u55D1\u55EB\u55EC\u55D4\u55E6\u55DD\u55C4\u55EF\u55E5\u55F2\u55F3\u55CC\u55CD\u55E8\u55F5\u55E4\u8F94\u561E\u5608\u560C\u5601\u5624\u5623\u55FE\u5600\u5627\u562D\u5658\u5639\u5657\u562C\u564D\u5662\u5659\u565C\u564C\u5654\u5686\u5664\u5671\u566B\u567B\u567C\u5685\u5693\u56AF\u56D4\u56D7\u56DD\u56E1\u56F5\u56EB\u56F9\u56FF\u5704\u570A\u5709\u571C\u5E0F\u5E19\u5E14\u5E11\u5E31\u5E3B\u5E3C',
      ],
      [
        'e140',
        '\u9145\u9147\u9148\u9151\u9153\u9154\u9155\u9156\u9158\u9159\u915B\u915C\u915F\u9160\u9166\u9167\u9168\u916B\u916D\u9173\u917A\u917B\u917C\u9180',
        4,
        '\u9186\u9188\u918A\u918E\u918F\u9193',
        6,
        '\u919C',
        5,
        '\u91A4',
        5,
        '\u91AB\u91AC\u91B0\u91B1\u91B2\u91B3\u91B6\u91B7\u91B8\u91B9\u91BB',
      ],
      [
        'e180',
        '\u91BC',
        10,
        '\u91C8\u91CB\u91D0\u91D2',
        9,
        '\u91DD',
        8,
        '\u5E37\u5E44\u5E54\u5E5B\u5E5E\u5E61\u5C8C\u5C7A\u5C8D\u5C90\u5C96\u5C88\u5C98\u5C99\u5C91\u5C9A\u5C9C\u5CB5\u5CA2\u5CBD\u5CAC\u5CAB\u5CB1\u5CA3\u5CC1\u5CB7\u5CC4\u5CD2\u5CE4\u5CCB\u5CE5\u5D02\u5D03\u5D27\u5D26\u5D2E\u5D24\u5D1E\u5D06\u5D1B\u5D58\u5D3E\u5D34\u5D3D\u5D6C\u5D5B\u5D6F\u5D5D\u5D6B\u5D4B\u5D4A\u5D69\u5D74\u5D82\u5D99\u5D9D\u8C73\u5DB7\u5DC5\u5F73\u5F77\u5F82\u5F87\u5F89\u5F8C\u5F95\u5F99\u5F9C\u5FA8\u5FAD\u5FB5\u5FBC\u8862\u5F61\u72AD\u72B0\u72B4\u72B7\u72B8\u72C3\u72C1\u72CE\u72CD\u72D2\u72E8\u72EF\u72E9\u72F2\u72F4\u72F7\u7301\u72F3\u7303\u72FA',
      ],
      ['e240', '\u91E6', 62],
      [
        'e280',
        '\u9225',
        32,
        '\u72FB\u7317\u7313\u7321\u730A\u731E\u731D\u7315\u7322\u7339\u7325\u732C\u7338\u7331\u7350\u734D\u7357\u7360\u736C\u736F\u737E\u821B\u5925\u98E7\u5924\u5902\u9963\u9967',
        5,
        '\u9974\u9977\u997D\u9980\u9984\u9987\u998A\u998D\u9990\u9991\u9993\u9994\u9995\u5E80\u5E91\u5E8B\u5E96\u5EA5\u5EA0\u5EB9\u5EB5\u5EBE\u5EB3\u8D53\u5ED2\u5ED1\u5EDB\u5EE8\u5EEA\u81BA\u5FC4\u5FC9\u5FD6\u5FCF\u6003\u5FEE\u6004\u5FE1\u5FE4\u5FFE\u6005\u6006\u5FEA\u5FED\u5FF8\u6019\u6035\u6026\u601B\u600F\u600D\u6029\u602B\u600A\u603F\u6021\u6078\u6079\u607B\u607A\u6042',
      ],
      ['e340', '\u9246', 45, '\u9275', 16],
      [
        'e380',
        '\u9286',
        7,
        '\u928F',
        24,
        '\u606A\u607D\u6096\u609A\u60AD\u609D\u6083\u6092\u608C\u609B\u60EC\u60BB\u60B1\u60DD\u60D8\u60C6\u60DA\u60B4\u6120\u6126\u6115\u6123\u60F4\u6100\u610E\u612B\u614A\u6175\u61AC\u6194\u61A7\u61B7\u61D4\u61F5\u5FDD\u96B3\u95E9\u95EB\u95F1\u95F3\u95F5\u95F6\u95FC\u95FE\u9603\u9604\u9606\u9608\u960A\u960B\u960C\u960D\u960F\u9612\u9615\u9616\u9617\u9619\u961A\u4E2C\u723F\u6215\u6C35\u6C54\u6C5C\u6C4A\u6CA3\u6C85\u6C90\u6C94\u6C8C\u6C68\u6C69\u6C74\u6C76\u6C86\u6CA9\u6CD0\u6CD4\u6CAD\u6CF7\u6CF8\u6CF1\u6CD7\u6CB2\u6CE0\u6CD6\u6CFA\u6CEB\u6CEE\u6CB1\u6CD3\u6CEF\u6CFE',
      ],
      ['e440', '\u92A8', 5, '\u92AF', 24, '\u92C9', 31],
      [
        'e480',
        '\u92E9',
        32,
        '\u6D39\u6D27\u6D0C\u6D43\u6D48\u6D07\u6D04\u6D19\u6D0E\u6D2B\u6D4D\u6D2E\u6D35\u6D1A\u6D4F\u6D52\u6D54\u6D33\u6D91\u6D6F\u6D9E\u6DA0\u6D5E\u6D93\u6D94\u6D5C\u6D60\u6D7C\u6D63\u6E1A\u6DC7\u6DC5\u6DDE\u6E0E\u6DBF\u6DE0\u6E11\u6DE6\u6DDD\u6DD9\u6E16\u6DAB\u6E0C\u6DAE\u6E2B\u6E6E\u6E4E\u6E6B\u6EB2\u6E5F\u6E86\u6E53\u6E54\u6E32\u6E25\u6E44\u6EDF\u6EB1\u6E98\u6EE0\u6F2D\u6EE2\u6EA5\u6EA7\u6EBD\u6EBB\u6EB7\u6ED7\u6EB4\u6ECF\u6E8F\u6EC2\u6E9F\u6F62\u6F46\u6F47\u6F24\u6F15\u6EF9\u6F2F\u6F36\u6F4B\u6F74\u6F2A\u6F09\u6F29\u6F89\u6F8D\u6F8C\u6F78\u6F72\u6F7C\u6F7A\u6FD1',
      ],
      ['e540', '\u930A', 51, '\u933F', 10],
      [
        'e580',
        '\u934A',
        31,
        '\u936B\u6FC9\u6FA7\u6FB9\u6FB6\u6FC2\u6FE1\u6FEE\u6FDE\u6FE0\u6FEF\u701A\u7023\u701B\u7039\u7035\u704F\u705E\u5B80\u5B84\u5B95\u5B93\u5BA5\u5BB8\u752F\u9A9E\u6434\u5BE4\u5BEE\u8930\u5BF0\u8E47\u8B07\u8FB6\u8FD3\u8FD5\u8FE5\u8FEE\u8FE4\u8FE9\u8FE6\u8FF3\u8FE8\u9005\u9004\u900B\u9026\u9011\u900D\u9016\u9021\u9035\u9036\u902D\u902F\u9044\u9051\u9052\u9050\u9068\u9058\u9062\u905B\u66B9\u9074\u907D\u9082\u9088\u9083\u908B\u5F50\u5F57\u5F56\u5F58\u5C3B\u54AB\u5C50\u5C59\u5B71\u5C63\u5C66\u7FBC\u5F2A\u5F29\u5F2D\u8274\u5F3C\u9B3B\u5C6E\u5981\u5983\u598D\u59A9\u59AA\u59A3',
      ],
      ['e640', '\u936C', 34, '\u9390', 27],
      [
        'e680',
        '\u93AC',
        29,
        '\u93CB\u93CC\u93CD\u5997\u59CA\u59AB\u599E\u59A4\u59D2\u59B2\u59AF\u59D7\u59BE\u5A05\u5A06\u59DD\u5A08\u59E3\u59D8\u59F9\u5A0C\u5A09\u5A32\u5A34\u5A11\u5A23\u5A13\u5A40\u5A67\u5A4A\u5A55\u5A3C\u5A62\u5A75\u80EC\u5AAA\u5A9B\u5A77\u5A7A\u5ABE\u5AEB\u5AB2\u5AD2\u5AD4\u5AB8\u5AE0\u5AE3\u5AF1\u5AD6\u5AE6\u5AD8\u5ADC\u5B09\u5B17\u5B16\u5B32\u5B37\u5B40\u5C15\u5C1C\u5B5A\u5B65\u5B73\u5B51\u5B53\u5B62\u9A75\u9A77\u9A78\u9A7A\u9A7F\u9A7D\u9A80\u9A81\u9A85\u9A88\u9A8A\u9A90\u9A92\u9A93\u9A96\u9A98\u9A9B\u9A9C\u9A9D\u9A9F\u9AA0\u9AA2\u9AA3\u9AA5\u9AA7\u7E9F\u7EA1\u7EA3\u7EA5\u7EA8\u7EA9',
      ],
      ['e740', '\u93CE', 7, '\u93D7', 54],
      [
        'e780',
        '\u940E',
        32,
        '\u7EAD\u7EB0\u7EBE\u7EC0\u7EC1\u7EC2\u7EC9\u7ECB\u7ECC\u7ED0\u7ED4\u7ED7\u7EDB\u7EE0\u7EE1\u7EE8\u7EEB\u7EEE\u7EEF\u7EF1\u7EF2\u7F0D\u7EF6\u7EFA\u7EFB\u7EFE\u7F01\u7F02\u7F03\u7F07\u7F08\u7F0B\u7F0C\u7F0F\u7F11\u7F12\u7F17\u7F19\u7F1C\u7F1B\u7F1F\u7F21',
        6,
        '\u7F2A\u7F2B\u7F2C\u7F2D\u7F2F',
        4,
        '\u7F35\u5E7A\u757F\u5DDB\u753E\u9095\u738E\u7391\u73AE\u73A2\u739F\u73CF\u73C2\u73D1\u73B7\u73B3\u73C0\u73C9\u73C8\u73E5\u73D9\u987C\u740A\u73E9\u73E7\u73DE\u73BA\u73F2\u740F\u742A\u745B\u7426\u7425\u7428\u7430\u742E\u742C',
      ],
      ['e840', '\u942F', 14, '\u943F', 43, '\u946C\u946D\u946E\u946F'],
      [
        'e880',
        '\u9470',
        20,
        '\u9491\u9496\u9498\u94C7\u94CF\u94D3\u94D4\u94DA\u94E6\u94FB\u951C\u9520\u741B\u741A\u7441\u745C\u7457\u7455\u7459\u7477\u746D\u747E\u749C\u748E\u7480\u7481\u7487\u748B\u749E\u74A8\u74A9\u7490\u74A7\u74D2\u74BA\u97EA\u97EB\u97EC\u674C\u6753\u675E\u6748\u6769\u67A5\u6787\u676A\u6773\u6798\u67A7\u6775\u67A8\u679E\u67AD\u678B\u6777\u677C\u67F0\u6809\u67D8\u680A\u67E9\u67B0\u680C\u67D9\u67B5\u67DA\u67B3\u67DD\u6800\u67C3\u67B8\u67E2\u680E\u67C1\u67FD\u6832\u6833\u6860\u6861\u684E\u6862\u6844\u6864\u6883\u681D\u6855\u6866\u6841\u6867\u6840\u683E\u684A\u6849\u6829\u68B5\u688F\u6874\u6877\u6893\u686B\u68C2\u696E\u68FC\u691F\u6920\u68F9',
      ],
      [
        'e940',
        '\u9527\u9533\u953D\u9543\u9548\u954B\u9555\u955A\u9560\u956E\u9574\u9575\u9577',
        7,
        '\u9580',
        42,
      ],
      [
        'e980',
        '\u95AB',
        32,
        '\u6924\u68F0\u690B\u6901\u6957\u68E3\u6910\u6971\u6939\u6960\u6942\u695D\u6984\u696B\u6980\u6998\u6978\u6934\u69CC\u6987\u6988\u69CE\u6989\u6966\u6963\u6979\u699B\u69A7\u69BB\u69AB\u69AD\u69D4\u69B1\u69C1\u69CA\u69DF\u6995\u69E0\u698D\u69FF\u6A2F\u69ED\u6A17\u6A18\u6A65\u69F2\u6A44\u6A3E\u6AA0\u6A50\u6A5B\u6A35\u6A8E\u6A79\u6A3D\u6A28\u6A58\u6A7C\u6A91\u6A90\u6AA9\u6A97\u6AAB\u7337\u7352\u6B81\u6B82\u6B87\u6B84\u6B92\u6B93\u6B8D\u6B9A\u6B9B\u6BA1\u6BAA\u8F6B\u8F6D\u8F71\u8F72\u8F73\u8F75\u8F76\u8F78\u8F77\u8F79\u8F7A\u8F7C\u8F7E\u8F81\u8F82\u8F84\u8F87\u8F8B',
      ],
      [
        'ea40',
        '\u95CC',
        27,
        '\u95EC\u95FF\u9607\u9613\u9618\u961B\u961E\u9620\u9623',
        6,
        '\u962B\u962C\u962D\u962F\u9630\u9637\u9638\u9639\u963A\u963E\u9641\u9643\u964A\u964E\u964F\u9651\u9652\u9653\u9656\u9657',
      ],
      [
        'ea80',
        '\u9658\u9659\u965A\u965C\u965D\u965E\u9660\u9663\u9665\u9666\u966B\u966D',
        4,
        '\u9673\u9678',
        12,
        '\u9687\u9689\u968A\u8F8D\u8F8E\u8F8F\u8F98\u8F9A\u8ECE\u620B\u6217\u621B\u621F\u6222\u6221\u6225\u6224\u622C\u81E7\u74EF\u74F4\u74FF\u750F\u7511\u7513\u6534\u65EE\u65EF\u65F0\u660A\u6619\u6772\u6603\u6615\u6600\u7085\u66F7\u661D\u6634\u6631\u6636\u6635\u8006\u665F\u6654\u6641\u664F\u6656\u6661\u6657\u6677\u6684\u668C\u66A7\u669D\u66BE\u66DB\u66DC\u66E6\u66E9\u8D32\u8D33\u8D36\u8D3B\u8D3D\u8D40\u8D45\u8D46\u8D48\u8D49\u8D47\u8D4D\u8D55\u8D59\u89C7\u89CA\u89CB\u89CC\u89CE\u89CF\u89D0\u89D1\u726E\u729F\u725D\u7266\u726F\u727E\u727F\u7284\u728B\u728D\u728F\u7292\u6308\u6332\u63B0',
      ],
      [
        'eb40',
        '\u968C\u968E\u9691\u9692\u9693\u9695\u9696\u969A\u969B\u969D',
        9,
        '\u96A8',
        7,
        '\u96B1\u96B2\u96B4\u96B5\u96B7\u96B8\u96BA\u96BB\u96BF\u96C2\u96C3\u96C8\u96CA\u96CB\u96D0\u96D1\u96D3\u96D4\u96D6',
        9,
        '\u96E1',
        6,
        '\u96EB',
      ],
      [
        'eb80',
        '\u96EC\u96ED\u96EE\u96F0\u96F1\u96F2\u96F4\u96F5\u96F8\u96FA\u96FB\u96FC\u96FD\u96FF\u9702\u9703\u9705\u970A\u970B\u970C\u9710\u9711\u9712\u9714\u9715\u9717',
        4,
        '\u971D\u971F\u9720\u643F\u64D8\u8004\u6BEA\u6BF3\u6BFD\u6BF5\u6BF9\u6C05\u6C07\u6C06\u6C0D\u6C15\u6C18\u6C19\u6C1A\u6C21\u6C29\u6C24\u6C2A\u6C32\u6535\u6555\u656B\u724D\u7252\u7256\u7230\u8662\u5216\u809F\u809C\u8093\u80BC\u670A\u80BD\u80B1\u80AB\u80AD\u80B4\u80B7\u80E7\u80E8\u80E9\u80EA\u80DB\u80C2\u80C4\u80D9\u80CD\u80D7\u6710\u80DD\u80EB\u80F1\u80F4\u80ED\u810D\u810E\u80F2\u80FC\u6715\u8112\u8C5A\u8136\u811E\u812C\u8118\u8132\u8148\u814C\u8153\u8174\u8159\u815A\u8171\u8160\u8169\u817C\u817D\u816D\u8167\u584D\u5AB5\u8188\u8182\u8191\u6ED5\u81A3\u81AA\u81CC\u6726\u81CA\u81BB',
      ],
      [
        'ec40',
        '\u9721',
        8,
        '\u972B\u972C\u972E\u972F\u9731\u9733',
        4,
        '\u973A\u973B\u973C\u973D\u973F',
        18,
        '\u9754\u9755\u9757\u9758\u975A\u975C\u975D\u975F\u9763\u9764\u9766\u9767\u9768\u976A',
        7,
      ],
      [
        'ec80',
        '\u9772\u9775\u9777',
        4,
        '\u977D',
        7,
        '\u9786',
        4,
        '\u978C\u978E\u978F\u9790\u9793\u9795\u9796\u9797\u9799',
        4,
        '\u81C1\u81A6\u6B24\u6B37\u6B39\u6B43\u6B46\u6B59\u98D1\u98D2\u98D3\u98D5\u98D9\u98DA\u6BB3\u5F40\u6BC2\u89F3\u6590\u9F51\u6593\u65BC\u65C6\u65C4\u65C3\u65CC\u65CE\u65D2\u65D6\u7080\u709C\u7096\u709D\u70BB\u70C0\u70B7\u70AB\u70B1\u70E8\u70CA\u7110\u7113\u7116\u712F\u7131\u7173\u715C\u7168\u7145\u7172\u714A\u7178\u717A\u7198\u71B3\u71B5\u71A8\u71A0\u71E0\u71D4\u71E7\u71F9\u721D\u7228\u706C\u7118\u7166\u71B9\u623E\u623D\u6243\u6248\u6249\u793B\u7940\u7946\u7949\u795B\u795C\u7953\u795A\u7962\u7957\u7960\u796F\u7967\u797A\u7985\u798A\u799A\u79A7\u79B3\u5FD1\u5FD0',
      ],
      [
        'ed40',
        '\u979E\u979F\u97A1\u97A2\u97A4',
        6,
        '\u97AC\u97AE\u97B0\u97B1\u97B3\u97B5',
        46,
      ],
      [
        'ed80',
        '\u97E4\u97E5\u97E8\u97EE',
        4,
        '\u97F4\u97F7',
        23,
        '\u603C\u605D\u605A\u6067\u6041\u6059\u6063\u60AB\u6106\u610D\u615D\u61A9\u619D\u61CB\u61D1\u6206\u8080\u807F\u6C93\u6CF6\u6DFC\u77F6\u77F8\u7800\u7809\u7817\u7818\u7811\u65AB\u782D\u781C\u781D\u7839\u783A\u783B\u781F\u783C\u7825\u782C\u7823\u7829\u784E\u786D\u7856\u7857\u7826\u7850\u7847\u784C\u786A\u789B\u7893\u789A\u7887\u789C\u78A1\u78A3\u78B2\u78B9\u78A5\u78D4\u78D9\u78C9\u78EC\u78F2\u7905\u78F4\u7913\u7924\u791E\u7934\u9F9B\u9EF9\u9EFB\u9EFC\u76F1\u7704\u770D\u76F9\u7707\u7708\u771A\u7722\u7719\u772D\u7726\u7735\u7738\u7750\u7751\u7747\u7743\u775A\u7768',
      ],
      ['ee40', '\u980F', 62],
      [
        'ee80',
        '\u984E',
        32,
        '\u7762\u7765\u777F\u778D\u777D\u7780\u778C\u7791\u779F\u77A0\u77B0\u77B5\u77BD\u753A\u7540\u754E\u754B\u7548\u755B\u7572\u7579\u7583\u7F58\u7F61\u7F5F\u8A48\u7F68\u7F74\u7F71\u7F79\u7F81\u7F7E\u76CD\u76E5\u8832\u9485\u9486\u9487\u948B\u948A\u948C\u948D\u948F\u9490\u9494\u9497\u9495\u949A\u949B\u949C\u94A3\u94A4\u94AB\u94AA\u94AD\u94AC\u94AF\u94B0\u94B2\u94B4\u94B6',
        4,
        '\u94BC\u94BD\u94BF\u94C4\u94C8',
        6,
        '\u94D0\u94D1\u94D2\u94D5\u94D6\u94D7\u94D9\u94D8\u94DB\u94DE\u94DF\u94E0\u94E2\u94E4\u94E5\u94E7\u94E8\u94EA',
      ],
      [
        'ef40',
        '\u986F',
        5,
        '\u988B\u988E\u9892\u9895\u9899\u98A3\u98A8',
        37,
        '\u98CF\u98D0\u98D4\u98D6\u98D7\u98DB\u98DC\u98DD\u98E0',
        4,
      ],
      [
        'ef80',
        '\u98E5\u98E6\u98E9',
        30,
        '\u94E9\u94EB\u94EE\u94EF\u94F3\u94F4\u94F5\u94F7\u94F9\u94FC\u94FD\u94FF\u9503\u9502\u9506\u9507\u9509\u950A\u950D\u950E\u950F\u9512',
        4,
        '\u9518\u951B\u951D\u951E\u951F\u9522\u952A\u952B\u9529\u952C\u9531\u9532\u9534\u9536\u9537\u9538\u953C\u953E\u953F\u9542\u9535\u9544\u9545\u9546\u9549\u954C\u954E\u954F\u9552\u9553\u9554\u9556\u9557\u9558\u9559\u955B\u955E\u955F\u955D\u9561\u9562\u9564',
        8,
        '\u956F\u9571\u9572\u9573\u953A\u77E7\u77EC\u96C9\u79D5\u79ED\u79E3\u79EB\u7A06\u5D47\u7A03\u7A02\u7A1E\u7A14',
      ],
      ['f040', '\u9908', 4, '\u990E\u990F\u9911', 28, '\u992F', 26],
      [
        'f080',
        '\u994A',
        9,
        '\u9956',
        12,
        '\u9964\u9966\u9973\u9978\u9979\u997B\u997E\u9982\u9983\u9989\u7A39\u7A37\u7A51\u9ECF\u99A5\u7A70\u7688\u768E\u7693\u7699\u76A4\u74DE\u74E0\u752C\u9E20\u9E22\u9E28',
        4,
        '\u9E32\u9E31\u9E36\u9E38\u9E37\u9E39\u9E3A\u9E3E\u9E41\u9E42\u9E44\u9E46\u9E47\u9E48\u9E49\u9E4B\u9E4C\u9E4E\u9E51\u9E55\u9E57\u9E5A\u9E5B\u9E5C\u9E5E\u9E63\u9E66',
        6,
        '\u9E71\u9E6D\u9E73\u7592\u7594\u7596\u75A0\u759D\u75AC\u75A3\u75B3\u75B4\u75B8\u75C4\u75B1\u75B0\u75C3\u75C2\u75D6\u75CD\u75E3\u75E8\u75E6\u75E4\u75EB\u75E7\u7603\u75F1\u75FC\u75FF\u7610\u7600\u7605\u760C\u7617\u760A\u7625\u7618\u7615\u7619',
      ],
      ['f140', '\u998C\u998E\u999A', 10, '\u99A6\u99A7\u99A9', 47],
      [
        'f180',
        '\u99D9',
        32,
        '\u761B\u763C\u7622\u7620\u7640\u762D\u7630\u763F\u7635\u7643\u763E\u7633\u764D\u765E\u7654\u765C\u7656\u766B\u766F\u7FCA\u7AE6\u7A78\u7A79\u7A80\u7A86\u7A88\u7A95\u7AA6\u7AA0\u7AAC\u7AA8\u7AAD\u7AB3\u8864\u8869\u8872\u887D\u887F\u8882\u88A2\u88C6\u88B7\u88BC\u88C9\u88E2\u88CE\u88E3\u88E5\u88F1\u891A\u88FC\u88E8\u88FE\u88F0\u8921\u8919\u8913\u891B\u890A\u8934\u892B\u8936\u8941\u8966\u897B\u758B\u80E5\u76B2\u76B4\u77DC\u8012\u8014\u8016\u801C\u8020\u8022\u8025\u8026\u8027\u8029\u8028\u8031\u800B\u8035\u8043\u8046\u804D\u8052\u8069\u8071\u8983\u9878\u9880\u9883',
      ],
      ['f240', '\u99FA', 62],
      [
        'f280',
        '\u9A39',
        32,
        '\u9889\u988C\u988D\u988F\u9894\u989A\u989B\u989E\u989F\u98A1\u98A2\u98A5\u98A6\u864D\u8654\u866C\u866E\u867F\u867A\u867C\u867B\u86A8\u868D\u868B\u86AC\u869D\u86A7\u86A3\u86AA\u8693\u86A9\u86B6\u86C4\u86B5\u86CE\u86B0\u86BA\u86B1\u86AF\u86C9\u86CF\u86B4\u86E9\u86F1\u86F2\u86ED\u86F3\u86D0\u8713\u86DE\u86F4\u86DF\u86D8\u86D1\u8703\u8707\u86F8\u8708\u870A\u870D\u8709\u8723\u873B\u871E\u8725\u872E\u871A\u873E\u8748\u8734\u8731\u8729\u8737\u873F\u8782\u8722\u877D\u877E\u877B\u8760\u8770\u874C\u876E\u878B\u8753\u8763\u877C\u8764\u8759\u8765\u8793\u87AF\u87A8\u87D2',
      ],
      [
        'f340',
        '\u9A5A',
        17,
        '\u9A72\u9A83\u9A89\u9A8D\u9A8E\u9A94\u9A95\u9A99\u9AA6\u9AA9',
        6,
        '\u9AB2\u9AB3\u9AB4\u9AB5\u9AB9\u9ABB\u9ABD\u9ABE\u9ABF\u9AC3\u9AC4\u9AC6',
        4,
        '\u9ACD\u9ACE\u9ACF\u9AD0\u9AD2\u9AD4\u9AD5\u9AD6\u9AD7\u9AD9\u9ADA\u9ADB\u9ADC',
      ],
      [
        'f380',
        '\u9ADD\u9ADE\u9AE0\u9AE2\u9AE3\u9AE4\u9AE5\u9AE7\u9AE8\u9AE9\u9AEA\u9AEC\u9AEE\u9AF0',
        8,
        '\u9AFA\u9AFC',
        6,
        '\u9B04\u9B05\u9B06\u87C6\u8788\u8785\u87AD\u8797\u8783\u87AB\u87E5\u87AC\u87B5\u87B3\u87CB\u87D3\u87BD\u87D1\u87C0\u87CA\u87DB\u87EA\u87E0\u87EE\u8816\u8813\u87FE\u880A\u881B\u8821\u8839\u883C\u7F36\u7F42\u7F44\u7F45\u8210\u7AFA\u7AFD\u7B08\u7B03\u7B04\u7B15\u7B0A\u7B2B\u7B0F\u7B47\u7B38\u7B2A\u7B19\u7B2E\u7B31\u7B20\u7B25\u7B24\u7B33\u7B3E\u7B1E\u7B58\u7B5A\u7B45\u7B75\u7B4C\u7B5D\u7B60\u7B6E\u7B7B\u7B62\u7B72\u7B71\u7B90\u7BA6\u7BA7\u7BB8\u7BAC\u7B9D\u7BA8\u7B85\u7BAA\u7B9C\u7BA2\u7BAB\u7BB4\u7BD1\u7BC1\u7BCC\u7BDD\u7BDA\u7BE5\u7BE6\u7BEA\u7C0C\u7BFE\u7BFC\u7C0F\u7C16\u7C0B',
      ],
      [
        'f440',
        '\u9B07\u9B09',
        5,
        '\u9B10\u9B11\u9B12\u9B14',
        10,
        '\u9B20\u9B21\u9B22\u9B24',
        10,
        '\u9B30\u9B31\u9B33',
        7,
        '\u9B3D\u9B3E\u9B3F\u9B40\u9B46\u9B4A\u9B4B\u9B4C\u9B4E\u9B50\u9B52\u9B53\u9B55',
        5,
      ],
      [
        'f480',
        '\u9B5B',
        32,
        '\u7C1F\u7C2A\u7C26\u7C38\u7C41\u7C40\u81FE\u8201\u8202\u8204\u81EC\u8844\u8221\u8222\u8223\u822D\u822F\u8228\u822B\u8238\u823B\u8233\u8234\u823E\u8244\u8249\u824B\u824F\u825A\u825F\u8268\u887E\u8885\u8888\u88D8\u88DF\u895E\u7F9D\u7F9F\u7FA7\u7FAF\u7FB0\u7FB2\u7C7C\u6549\u7C91\u7C9D\u7C9C\u7C9E\u7CA2\u7CB2\u7CBC\u7CBD\u7CC1\u7CC7\u7CCC\u7CCD\u7CC8\u7CC5\u7CD7\u7CE8\u826E\u66A8\u7FBF\u7FCE\u7FD5\u7FE5\u7FE1\u7FE6\u7FE9\u7FEE\u7FF3\u7CF8\u7D77\u7DA6\u7DAE\u7E47\u7E9B\u9EB8\u9EB4\u8D73\u8D84\u8D94\u8D91\u8DB1\u8D67\u8D6D\u8C47\u8C49\u914A\u9150\u914E\u914F\u9164',
      ],
      ['f540', '\u9B7C', 62],
      [
        'f580',
        '\u9BBB',
        32,
        '\u9162\u9161\u9170\u9169\u916F\u917D\u917E\u9172\u9174\u9179\u918C\u9185\u9190\u918D\u9191\u91A2\u91A3\u91AA\u91AD\u91AE\u91AF\u91B5\u91B4\u91BA\u8C55\u9E7E\u8DB8\u8DEB\u8E05\u8E59\u8E69\u8DB5\u8DBF\u8DBC\u8DBA\u8DC4\u8DD6\u8DD7\u8DDA\u8DDE\u8DCE\u8DCF\u8DDB\u8DC6\u8DEC\u8DF7\u8DF8\u8DE3\u8DF9\u8DFB\u8DE4\u8E09\u8DFD\u8E14\u8E1D\u8E1F\u8E2C\u8E2E\u8E23\u8E2F\u8E3A\u8E40\u8E39\u8E35\u8E3D\u8E31\u8E49\u8E41\u8E42\u8E51\u8E52\u8E4A\u8E70\u8E76\u8E7C\u8E6F\u8E74\u8E85\u8E8F\u8E94\u8E90\u8E9C\u8E9E\u8C78\u8C82\u8C8A\u8C85\u8C98\u8C94\u659B\u89D6\u89DE\u89DA\u89DC',
      ],
      ['f640', '\u9BDC', 62],
      [
        'f680',
        '\u9C1B',
        32,
        '\u89E5\u89EB\u89EF\u8A3E\u8B26\u9753\u96E9\u96F3\u96EF\u9706\u9701\u9708\u970F\u970E\u972A\u972D\u9730\u973E\u9F80\u9F83\u9F85',
        5,
        '\u9F8C\u9EFE\u9F0B\u9F0D\u96B9\u96BC\u96BD\u96CE\u96D2\u77BF\u96E0\u928E\u92AE\u92C8\u933E\u936A\u93CA\u938F\u943E\u946B\u9C7F\u9C82\u9C85\u9C86\u9C87\u9C88\u7A23\u9C8B\u9C8E\u9C90\u9C91\u9C92\u9C94\u9C95\u9C9A\u9C9B\u9C9E',
        5,
        '\u9CA5',
        4,
        '\u9CAB\u9CAD\u9CAE\u9CB0',
        7,
        '\u9CBA\u9CBB\u9CBC\u9CBD\u9CC4\u9CC5\u9CC6\u9CC7\u9CCA\u9CCB',
      ],
      ['f740', '\u9C3C', 62],
      [
        'f780',
        '\u9C7B\u9C7D\u9C7E\u9C80\u9C83\u9C84\u9C89\u9C8A\u9C8C\u9C8F\u9C93\u9C96\u9C97\u9C98\u9C99\u9C9D\u9CAA\u9CAC\u9CAF\u9CB9\u9CBE',
        4,
        '\u9CC8\u9CC9\u9CD1\u9CD2\u9CDA\u9CDB\u9CE0\u9CE1\u9CCC',
        4,
        '\u9CD3\u9CD4\u9CD5\u9CD7\u9CD8\u9CD9\u9CDC\u9CDD\u9CDF\u9CE2\u977C\u9785\u9791\u9792\u9794\u97AF\u97AB\u97A3\u97B2\u97B4\u9AB1\u9AB0\u9AB7\u9E58\u9AB6\u9ABA\u9ABC\u9AC1\u9AC0\u9AC5\u9AC2\u9ACB\u9ACC\u9AD1\u9B45\u9B43\u9B47\u9B49\u9B48\u9B4D\u9B51\u98E8\u990D\u992E\u9955\u9954\u9ADF\u9AE1\u9AE6\u9AEF\u9AEB\u9AFB\u9AED\u9AF9\u9B08\u9B0F\u9B13\u9B1F\u9B23\u9EBD\u9EBE\u7E3B\u9E82\u9E87\u9E88\u9E8B\u9E92\u93D6\u9E9D\u9E9F\u9EDB\u9EDC\u9EDD\u9EE0\u9EDF\u9EE2\u9EE9\u9EE7\u9EE5\u9EEA\u9EEF\u9F22\u9F2C\u9F2F\u9F39\u9F37\u9F3D\u9F3E\u9F44',
      ],
      ['f840', '\u9CE3', 62],
      ['f880', '\u9D22', 32],
      ['f940', '\u9D43', 62],
      ['f980', '\u9D82', 32],
      ['fa40', '\u9DA3', 62],
      ['fa80', '\u9DE2', 32],
      [
        'fb40',
        '\u9E03',
        27,
        '\u9E24\u9E27\u9E2E\u9E30\u9E34\u9E3B\u9E3C\u9E40\u9E4D\u9E50\u9E52\u9E53\u9E54\u9E56\u9E59\u9E5D\u9E5F\u9E60\u9E61\u9E62\u9E65\u9E6E\u9E6F\u9E72\u9E74',
        9,
        '\u9E80',
      ],
      [
        'fb80',
        '\u9E81\u9E83\u9E84\u9E85\u9E86\u9E89\u9E8A\u9E8C',
        5,
        '\u9E94',
        8,
        '\u9E9E\u9EA0',
        5,
        '\u9EA7\u9EA8\u9EA9\u9EAA',
      ],
      [
        'fc40',
        '\u9EAB',
        8,
        '\u9EB5\u9EB6\u9EB7\u9EB9\u9EBA\u9EBC\u9EBF',
        4,
        '\u9EC5\u9EC6\u9EC7\u9EC8\u9ECA\u9ECB\u9ECC\u9ED0\u9ED2\u9ED3\u9ED5\u9ED6\u9ED7\u9ED9\u9EDA\u9EDE\u9EE1\u9EE3\u9EE4\u9EE6\u9EE8\u9EEB\u9EEC\u9EED\u9EEE\u9EF0',
        8,
        '\u9EFA\u9EFD\u9EFF',
        6,
      ],
      [
        'fc80',
        '\u9F06',
        4,
        '\u9F0C\u9F0F\u9F11\u9F12\u9F14\u9F15\u9F16\u9F18\u9F1A',
        5,
        '\u9F21\u9F23',
        8,
        '\u9F2D\u9F2E\u9F30\u9F31',
      ],
      [
        'fd40',
        '\u9F32',
        4,
        '\u9F38\u9F3A\u9F3C\u9F3F',
        4,
        '\u9F45',
        10,
        '\u9F52',
        38,
      ],
      [
        'fd80',
        '\u9F79',
        5,
        '\u9F81\u9F82\u9F8D',
        11,
        '\u9F9C\u9F9D\u9F9E\u9FA1',
        4,
        '\uF92C\uF979\uF995\uF9E7\uF9F1',
      ],
      [
        'fe40',
        '\uFA0C\uFA0D\uFA0E\uFA0F\uFA11\uFA13\uFA14\uFA18\uFA1F\uFA20\uFA21\uFA23\uFA24\uFA27\uFA28\uFA29',
      ],
    ];
  },
});

// ../../node_modules/iconv-lite/encodings/tables/gbk-added.json
var require_gbk_added = __commonJS({
  '../../node_modules/iconv-lite/encodings/tables/gbk-added.json'(
    exports2,
    module2
  ) {
    module2.exports = [
      ['a140', '\uE4C6', 62],
      ['a180', '\uE505', 32],
      ['a240', '\uE526', 62],
      ['a280', '\uE565', 32],
      ['a2ab', '\uE766', 5],
      ['a2e3', '\u20AC\uE76D'],
      ['a2ef', '\uE76E\uE76F'],
      ['a2fd', '\uE770\uE771'],
      ['a340', '\uE586', 62],
      ['a380', '\uE5C5', 31, '\u3000'],
      ['a440', '\uE5E6', 62],
      ['a480', '\uE625', 32],
      ['a4f4', '\uE772', 10],
      ['a540', '\uE646', 62],
      ['a580', '\uE685', 32],
      ['a5f7', '\uE77D', 7],
      ['a640', '\uE6A6', 62],
      ['a680', '\uE6E5', 32],
      ['a6b9', '\uE785', 7],
      ['a6d9', '\uE78D', 6],
      ['a6ec', '\uE794\uE795'],
      ['a6f3', '\uE796'],
      ['a6f6', '\uE797', 8],
      ['a740', '\uE706', 62],
      ['a780', '\uE745', 32],
      ['a7c2', '\uE7A0', 14],
      ['a7f2', '\uE7AF', 12],
      ['a896', '\uE7BC', 10],
      ['a8bc', '\uE7C7'],
      ['a8bf', '\u01F9'],
      ['a8c1', '\uE7C9\uE7CA\uE7CB\uE7CC'],
      ['a8ea', '\uE7CD', 20],
      ['a958', '\uE7E2'],
      ['a95b', '\uE7E3'],
      ['a95d', '\uE7E4\uE7E5\uE7E6'],
      ['a989', '\u303E\u2FF0', 11],
      ['a997', '\uE7F4', 12],
      ['a9f0', '\uE801', 14],
      ['aaa1', '\uE000', 93],
      ['aba1', '\uE05E', 93],
      ['aca1', '\uE0BC', 93],
      ['ada1', '\uE11A', 93],
      ['aea1', '\uE178', 93],
      ['afa1', '\uE1D6', 93],
      ['d7fa', '\uE810', 4],
      ['f8a1', '\uE234', 93],
      ['f9a1', '\uE292', 93],
      ['faa1', '\uE2F0', 93],
      ['fba1', '\uE34E', 93],
      ['fca1', '\uE3AC', 93],
      ['fda1', '\uE40A', 93],
      [
        'fe50',
        '\u2E81\uE816\uE817\uE818\u2E84\u3473\u3447\u2E88\u2E8B\uE81E\u359E\u361A\u360E\u2E8C\u2E97\u396E\u3918\uE826\u39CF\u39DF\u3A73\u39D0\uE82B\uE82C\u3B4E\u3C6E\u3CE0\u2EA7\uE831\uE832\u2EAA\u4056\u415F\u2EAE\u4337\u2EB3\u2EB6\u2EB7\uE83B\u43B1\u43AC\u2EBB\u43DD\u44D6\u4661\u464C\uE843',
      ],
      [
        'fe80',
        '\u4723\u4729\u477C\u478D\u2ECA\u4947\u497A\u497D\u4982\u4983\u4985\u4986\u499F\u499B\u49B7\u49B6\uE854\uE855\u4CA3\u4C9F\u4CA0\u4CA1\u4C77\u4CA2\u4D13',
        6,
        '\u4DAE\uE864\uE468',
        93,
      ],
    ];
  },
});

// ../../node_modules/iconv-lite/encodings/tables/gb18030-ranges.json
var require_gb18030_ranges = __commonJS({
  '../../node_modules/iconv-lite/encodings/tables/gb18030-ranges.json'(
    exports2,
    module2
  ) {
    module2.exports = {
      uChars: [
        128, 165, 169, 178, 184, 216, 226, 235, 238, 244, 248, 251, 253, 258,
        276, 284, 300, 325, 329, 334, 364, 463, 465, 467, 469, 471, 473, 475,
        477, 506, 594, 610, 712, 716, 730, 930, 938, 962, 970, 1026, 1104, 1106,
        8209, 8215, 8218, 8222, 8231, 8241, 8244, 8246, 8252, 8365, 8452, 8454,
        8458, 8471, 8482, 8556, 8570, 8596, 8602, 8713, 8720, 8722, 8726, 8731,
        8737, 8740, 8742, 8748, 8751, 8760, 8766, 8777, 8781, 8787, 8802, 8808,
        8816, 8854, 8858, 8870, 8896, 8979, 9322, 9372, 9548, 9588, 9616, 9622,
        9634, 9652, 9662, 9672, 9676, 9680, 9702, 9735, 9738, 9793, 9795, 11906,
        11909, 11913, 11917, 11928, 11944, 11947, 11951, 11956, 11960, 11964,
        11979, 12284, 12292, 12312, 12319, 12330, 12351, 12436, 12447, 12535,
        12543, 12586, 12842, 12850, 12964, 13200, 13215, 13218, 13253, 13263,
        13267, 13270, 13384, 13428, 13727, 13839, 13851, 14617, 14703, 14801,
        14816, 14964, 15183, 15471, 15585, 16471, 16736, 17208, 17325, 17330,
        17374, 17623, 17997, 18018, 18212, 18218, 18301, 18318, 18760, 18811,
        18814, 18820, 18823, 18844, 18848, 18872, 19576, 19620, 19738, 19887,
        40870, 59244, 59336, 59367, 59413, 59417, 59423, 59431, 59437, 59443,
        59452, 59460, 59478, 59493, 63789, 63866, 63894, 63976, 63986, 64016,
        64018, 64021, 64025, 64034, 64037, 64042, 65074, 65093, 65107, 65112,
        65127, 65132, 65375, 65510, 65536,
      ],
      gbChars: [
        0, 36, 38, 45, 50, 81, 89, 95, 96, 100, 103, 104, 105, 109, 126, 133,
        148, 172, 175, 179, 208, 306, 307, 308, 309, 310, 311, 312, 313, 341,
        428, 443, 544, 545, 558, 741, 742, 749, 750, 805, 819, 820, 7922, 7924,
        7925, 7927, 7934, 7943, 7944, 7945, 7950, 8062, 8148, 8149, 8152, 8164,
        8174, 8236, 8240, 8262, 8264, 8374, 8380, 8381, 8384, 8388, 8390, 8392,
        8393, 8394, 8396, 8401, 8406, 8416, 8419, 8424, 8437, 8439, 8445, 8482,
        8485, 8496, 8521, 8603, 8936, 8946, 9046, 9050, 9063, 9066, 9076, 9092,
        9100, 9108, 9111, 9113, 9131, 9162, 9164, 9218, 9219, 11329, 11331,
        11334, 11336, 11346, 11361, 11363, 11366, 11370, 11372, 11375, 11389,
        11682, 11686, 11687, 11692, 11694, 11714, 11716, 11723, 11725, 11730,
        11736, 11982, 11989, 12102, 12336, 12348, 12350, 12384, 12393, 12395,
        12397, 12510, 12553, 12851, 12962, 12973, 13738, 13823, 13919, 13933,
        14080, 14298, 14585, 14698, 15583, 15847, 16318, 16434, 16438, 16481,
        16729, 17102, 17122, 17315, 17320, 17402, 17418, 17859, 17909, 17911,
        17915, 17916, 17936, 17939, 17961, 18664, 18703, 18814, 18962, 19043,
        33469, 33470, 33471, 33484, 33485, 33490, 33497, 33501, 33505, 33513,
        33520, 33536, 33550, 37845, 37921, 37948, 38029, 38038, 38064, 38065,
        38066, 38069, 38075, 38076, 38078, 39108, 39109, 39113, 39114, 39115,
        39116, 39265, 39394, 189e3,
      ],
    };
  },
});

// ../../node_modules/iconv-lite/encodings/tables/cp949.json
var require_cp949 = __commonJS({
  '../../node_modules/iconv-lite/encodings/tables/cp949.json'(
    exports2,
    module2
  ) {
    module2.exports = [
      ['0', '\0', 127],
      [
        '8141',
        '\uAC02\uAC03\uAC05\uAC06\uAC0B',
        4,
        '\uAC18\uAC1E\uAC1F\uAC21\uAC22\uAC23\uAC25',
        6,
        '\uAC2E\uAC32\uAC33\uAC34',
      ],
      [
        '8161',
        '\uAC35\uAC36\uAC37\uAC3A\uAC3B\uAC3D\uAC3E\uAC3F\uAC41',
        9,
        '\uAC4C\uAC4E',
        5,
        '\uAC55',
      ],
      [
        '8181',
        '\uAC56\uAC57\uAC59\uAC5A\uAC5B\uAC5D',
        18,
        '\uAC72\uAC73\uAC75\uAC76\uAC79\uAC7B',
        4,
        '\uAC82\uAC87\uAC88\uAC8D\uAC8E\uAC8F\uAC91\uAC92\uAC93\uAC95',
        6,
        '\uAC9E\uACA2',
        5,
        '\uACAB\uACAD\uACAE\uACB1',
        6,
        '\uACBA\uACBE\uACBF\uACC0\uACC2\uACC3\uACC5\uACC6\uACC7\uACC9\uACCA\uACCB\uACCD',
        7,
        '\uACD6\uACD8',
        7,
        '\uACE2\uACE3\uACE5\uACE6\uACE9\uACEB\uACED\uACEE\uACF2\uACF4\uACF7',
        4,
        '\uACFE\uACFF\uAD01\uAD02\uAD03\uAD05\uAD07',
        4,
        '\uAD0E\uAD10\uAD12\uAD13',
      ],
      [
        '8241',
        '\uAD14\uAD15\uAD16\uAD17\uAD19\uAD1A\uAD1B\uAD1D\uAD1E\uAD1F\uAD21',
        7,
        '\uAD2A\uAD2B\uAD2E',
        5,
      ],
      [
        '8261',
        '\uAD36\uAD37\uAD39\uAD3A\uAD3B\uAD3D',
        6,
        '\uAD46\uAD48\uAD4A',
        5,
        '\uAD51\uAD52\uAD53\uAD55\uAD56\uAD57',
      ],
      [
        '8281',
        '\uAD59',
        7,
        '\uAD62\uAD64',
        7,
        '\uAD6E\uAD6F\uAD71\uAD72\uAD77\uAD78\uAD79\uAD7A\uAD7E\uAD80\uAD83',
        4,
        '\uAD8A\uAD8B\uAD8D\uAD8E\uAD8F\uAD91',
        10,
        '\uAD9E',
        5,
        '\uADA5',
        17,
        '\uADB8',
        7,
        '\uADC2\uADC3\uADC5\uADC6\uADC7\uADC9',
        6,
        '\uADD2\uADD4',
        7,
        '\uADDD\uADDE\uADDF\uADE1\uADE2\uADE3\uADE5',
        18,
      ],
      [
        '8341',
        '\uADFA\uADFB\uADFD\uADFE\uAE02',
        5,
        '\uAE0A\uAE0C\uAE0E',
        5,
        '\uAE15',
        7,
      ],
      ['8361', '\uAE1D', 18, '\uAE32\uAE33\uAE35\uAE36\uAE39\uAE3B\uAE3C'],
      [
        '8381',
        '\uAE3D\uAE3E\uAE3F\uAE42\uAE44\uAE47\uAE48\uAE49\uAE4B\uAE4F\uAE51\uAE52\uAE53\uAE55\uAE57',
        4,
        '\uAE5E\uAE62\uAE63\uAE64\uAE66\uAE67\uAE6A\uAE6B\uAE6D\uAE6E\uAE6F\uAE71',
        6,
        '\uAE7A\uAE7E',
        5,
        '\uAE86',
        5,
        '\uAE8D',
        46,
        '\uAEBF\uAEC1\uAEC2\uAEC3\uAEC5',
        6,
        '\uAECE\uAED2',
        5,
        '\uAEDA\uAEDB\uAEDD',
        8,
      ],
      [
        '8441',
        '\uAEE6\uAEE7\uAEE9\uAEEA\uAEEC\uAEEE',
        5,
        '\uAEF5\uAEF6\uAEF7\uAEF9\uAEFA\uAEFB\uAEFD',
        8,
      ],
      ['8461', '\uAF06\uAF09\uAF0A\uAF0B\uAF0C\uAF0E\uAF0F\uAF11', 18],
      [
        '8481',
        '\uAF24',
        7,
        '\uAF2E\uAF2F\uAF31\uAF33\uAF35',
        6,
        '\uAF3E\uAF40\uAF44\uAF45\uAF46\uAF47\uAF4A',
        5,
        '\uAF51',
        10,
        '\uAF5E',
        5,
        '\uAF66',
        18,
        '\uAF7A',
        5,
        '\uAF81\uAF82\uAF83\uAF85\uAF86\uAF87\uAF89',
        6,
        '\uAF92\uAF93\uAF94\uAF96',
        5,
        '\uAF9D',
        26,
        '\uAFBA\uAFBB\uAFBD\uAFBE',
      ],
      [
        '8541',
        '\uAFBF\uAFC1',
        5,
        '\uAFCA\uAFCC\uAFCF',
        4,
        '\uAFD5',
        6,
        '\uAFDD',
        4,
      ],
      [
        '8561',
        '\uAFE2',
        5,
        '\uAFEA',
        5,
        '\uAFF2\uAFF3\uAFF5\uAFF6\uAFF7\uAFF9',
        6,
        '\uB002\uB003',
      ],
      [
        '8581',
        '\uB005',
        6,
        '\uB00D\uB00E\uB00F\uB011\uB012\uB013\uB015',
        6,
        '\uB01E',
        9,
        '\uB029',
        26,
        '\uB046\uB047\uB049\uB04B\uB04D\uB04F\uB050\uB051\uB052\uB056\uB058\uB05A\uB05B\uB05C\uB05E',
        29,
        '\uB07E\uB07F\uB081\uB082\uB083\uB085',
        6,
        '\uB08E\uB090\uB092',
        5,
        '\uB09B\uB09D\uB09E\uB0A3\uB0A4',
      ],
      [
        '8641',
        '\uB0A5\uB0A6\uB0A7\uB0AA\uB0B0\uB0B2\uB0B6\uB0B7\uB0B9\uB0BA\uB0BB\uB0BD',
        6,
        '\uB0C6\uB0CA',
        5,
        '\uB0D2',
      ],
      [
        '8661',
        '\uB0D3\uB0D5\uB0D6\uB0D7\uB0D9',
        6,
        '\uB0E1\uB0E2\uB0E3\uB0E4\uB0E6',
        10,
      ],
      [
        '8681',
        '\uB0F1',
        22,
        '\uB10A\uB10D\uB10E\uB10F\uB111\uB114\uB115\uB116\uB117\uB11A\uB11E',
        4,
        '\uB126\uB127\uB129\uB12A\uB12B\uB12D',
        6,
        '\uB136\uB13A',
        5,
        '\uB142\uB143\uB145\uB146\uB147\uB149',
        6,
        '\uB152\uB153\uB156\uB157\uB159\uB15A\uB15B\uB15D\uB15E\uB15F\uB161',
        22,
        '\uB17A\uB17B\uB17D\uB17E\uB17F\uB181\uB183',
        4,
        '\uB18A\uB18C\uB18E\uB18F\uB190\uB191\uB195\uB196\uB197\uB199\uB19A\uB19B\uB19D',
      ],
      ['8741', '\uB19E', 9, '\uB1A9', 15],
      ['8761', '\uB1B9', 18, '\uB1CD\uB1CE\uB1CF\uB1D1\uB1D2\uB1D3\uB1D5'],
      [
        '8781',
        '\uB1D6',
        5,
        '\uB1DE\uB1E0',
        7,
        '\uB1EA\uB1EB\uB1ED\uB1EE\uB1EF\uB1F1',
        7,
        '\uB1FA\uB1FC\uB1FE',
        5,
        '\uB206\uB207\uB209\uB20A\uB20D',
        6,
        '\uB216\uB218\uB21A',
        5,
        '\uB221',
        18,
        '\uB235',
        6,
        '\uB23D',
        26,
        '\uB259\uB25A\uB25B\uB25D\uB25E\uB25F\uB261',
        6,
        '\uB26A',
        4,
      ],
      [
        '8841',
        '\uB26F',
        4,
        '\uB276',
        5,
        '\uB27D',
        6,
        '\uB286\uB287\uB288\uB28A',
        4,
      ],
      [
        '8861',
        '\uB28F\uB292\uB293\uB295\uB296\uB297\uB29B',
        4,
        '\uB2A2\uB2A4\uB2A7\uB2A8\uB2A9\uB2AB\uB2AD\uB2AE\uB2AF\uB2B1\uB2B2\uB2B3\uB2B5\uB2B6\uB2B7',
      ],
      [
        '8881',
        '\uB2B8',
        15,
        '\uB2CA\uB2CB\uB2CD\uB2CE\uB2CF\uB2D1\uB2D3',
        4,
        '\uB2DA\uB2DC\uB2DE\uB2DF\uB2E0\uB2E1\uB2E3\uB2E7\uB2E9\uB2EA\uB2F0\uB2F1\uB2F2\uB2F6\uB2FC\uB2FD\uB2FE\uB302\uB303\uB305\uB306\uB307\uB309',
        6,
        '\uB312\uB316',
        5,
        '\uB31D',
        54,
        '\uB357\uB359\uB35A\uB35D\uB360\uB361\uB362\uB363',
      ],
      [
        '8941',
        '\uB366\uB368\uB36A\uB36C\uB36D\uB36F\uB372\uB373\uB375\uB376\uB377\uB379',
        6,
        '\uB382\uB386',
        5,
        '\uB38D',
      ],
      [
        '8961',
        '\uB38E\uB38F\uB391\uB392\uB393\uB395',
        10,
        '\uB3A2',
        5,
        '\uB3A9\uB3AA\uB3AB\uB3AD',
      ],
      [
        '8981',
        '\uB3AE',
        21,
        '\uB3C6\uB3C7\uB3C9\uB3CA\uB3CD\uB3CF\uB3D1\uB3D2\uB3D3\uB3D6\uB3D8\uB3DA\uB3DC\uB3DE\uB3DF\uB3E1\uB3E2\uB3E3\uB3E5\uB3E6\uB3E7\uB3E9',
        18,
        '\uB3FD',
        18,
        '\uB411',
        6,
        '\uB419\uB41A\uB41B\uB41D\uB41E\uB41F\uB421',
        6,
        '\uB42A\uB42C',
        7,
        '\uB435',
        15,
      ],
      [
        '8a41',
        '\uB445',
        10,
        '\uB452\uB453\uB455\uB456\uB457\uB459',
        6,
        '\uB462\uB464\uB466',
      ],
      ['8a61', '\uB467', 4, '\uB46D', 18, '\uB481\uB482'],
      [
        '8a81',
        '\uB483',
        4,
        '\uB489',
        19,
        '\uB49E',
        5,
        '\uB4A5\uB4A6\uB4A7\uB4A9\uB4AA\uB4AB\uB4AD',
        7,
        '\uB4B6\uB4B8\uB4BA',
        5,
        '\uB4C1\uB4C2\uB4C3\uB4C5\uB4C6\uB4C7\uB4C9',
        6,
        '\uB4D1\uB4D2\uB4D3\uB4D4\uB4D6',
        5,
        '\uB4DE\uB4DF\uB4E1\uB4E2\uB4E5\uB4E7',
        4,
        '\uB4EE\uB4F0\uB4F2',
        5,
        '\uB4F9',
        26,
        '\uB516\uB517\uB519\uB51A\uB51D',
      ],
      [
        '8b41',
        '\uB51E',
        5,
        '\uB526\uB52B',
        4,
        '\uB532\uB533\uB535\uB536\uB537\uB539',
        6,
        '\uB542\uB546',
      ],
      [
        '8b61',
        '\uB547\uB548\uB549\uB54A\uB54E\uB54F\uB551\uB552\uB553\uB555',
        6,
        '\uB55E\uB562',
        8,
      ],
      [
        '8b81',
        '\uB56B',
        52,
        '\uB5A2\uB5A3\uB5A5\uB5A6\uB5A7\uB5A9\uB5AC\uB5AD\uB5AE\uB5AF\uB5B2\uB5B6',
        4,
        '\uB5BE\uB5BF\uB5C1\uB5C2\uB5C3\uB5C5',
        6,
        '\uB5CE\uB5D2',
        5,
        '\uB5D9',
        18,
        '\uB5ED',
        18,
      ],
      ['8c41', '\uB600', 15, '\uB612\uB613\uB615\uB616\uB617\uB619', 4],
      ['8c61', '\uB61E', 6, '\uB626', 5, '\uB62D', 6, '\uB635', 5],
      [
        '8c81',
        '\uB63B',
        12,
        '\uB649',
        26,
        '\uB665\uB666\uB667\uB669',
        50,
        '\uB69E\uB69F\uB6A1\uB6A2\uB6A3\uB6A5',
        5,
        '\uB6AD\uB6AE\uB6AF\uB6B0\uB6B2',
        16,
      ],
      ['8d41', '\uB6C3', 16, '\uB6D5', 8],
      [
        '8d61',
        '\uB6DE',
        17,
        '\uB6F1\uB6F2\uB6F3\uB6F5\uB6F6\uB6F7\uB6F9\uB6FA',
      ],
      [
        '8d81',
        '\uB6FB',
        4,
        '\uB702\uB703\uB704\uB706',
        33,
        '\uB72A\uB72B\uB72D\uB72E\uB731',
        6,
        '\uB73A\uB73C',
        7,
        '\uB745\uB746\uB747\uB749\uB74A\uB74B\uB74D',
        6,
        '\uB756',
        9,
        '\uB761\uB762\uB763\uB765\uB766\uB767\uB769',
        6,
        '\uB772\uB774\uB776',
        5,
        '\uB77E\uB77F\uB781\uB782\uB783\uB785',
        6,
        '\uB78E\uB793\uB794\uB795\uB79A\uB79B\uB79D\uB79E',
      ],
      ['8e41', '\uB79F\uB7A1', 6, '\uB7AA\uB7AE', 5, '\uB7B6\uB7B7\uB7B9', 8],
      ['8e61', '\uB7C2', 4, '\uB7C8\uB7CA', 19],
      [
        '8e81',
        '\uB7DE',
        13,
        '\uB7EE\uB7EF\uB7F1\uB7F2\uB7F3\uB7F5',
        6,
        '\uB7FE\uB802',
        4,
        '\uB80A\uB80B\uB80D\uB80E\uB80F\uB811',
        6,
        '\uB81A\uB81C\uB81E',
        5,
        '\uB826\uB827\uB829\uB82A\uB82B\uB82D',
        6,
        '\uB836\uB83A',
        5,
        '\uB841\uB842\uB843\uB845',
        11,
        '\uB852\uB854',
        7,
        '\uB85E\uB85F\uB861\uB862\uB863\uB865',
        6,
        '\uB86E\uB870\uB872',
        5,
        '\uB879\uB87A\uB87B\uB87D',
        7,
      ],
      ['8f41', '\uB885', 7, '\uB88E', 17],
      [
        '8f61',
        '\uB8A0',
        7,
        '\uB8A9',
        6,
        '\uB8B1\uB8B2\uB8B3\uB8B5\uB8B6\uB8B7\uB8B9',
        4,
      ],
      [
        '8f81',
        '\uB8BE\uB8BF\uB8C2\uB8C4\uB8C6',
        5,
        '\uB8CD\uB8CE\uB8CF\uB8D1\uB8D2\uB8D3\uB8D5',
        7,
        '\uB8DE\uB8E0\uB8E2',
        5,
        '\uB8EA\uB8EB\uB8ED\uB8EE\uB8EF\uB8F1',
        6,
        '\uB8FA\uB8FC\uB8FE',
        5,
        '\uB905',
        18,
        '\uB919',
        6,
        '\uB921',
        26,
        '\uB93E\uB93F\uB941\uB942\uB943\uB945',
        6,
        '\uB94D\uB94E\uB950\uB952',
        5,
      ],
      [
        '9041',
        '\uB95A\uB95B\uB95D\uB95E\uB95F\uB961',
        6,
        '\uB96A\uB96C\uB96E',
        5,
        '\uB976\uB977\uB979\uB97A\uB97B\uB97D',
      ],
      ['9061', '\uB97E', 5, '\uB986\uB988\uB98B\uB98C\uB98F', 15],
      [
        '9081',
        '\uB99F',
        12,
        '\uB9AE\uB9AF\uB9B1\uB9B2\uB9B3\uB9B5',
        6,
        '\uB9BE\uB9C0\uB9C2',
        5,
        '\uB9CA\uB9CB\uB9CD\uB9D3',
        4,
        '\uB9DA\uB9DC\uB9DF\uB9E0\uB9E2\uB9E6\uB9E7\uB9E9\uB9EA\uB9EB\uB9ED',
        6,
        '\uB9F6\uB9FB',
        4,
        '\uBA02',
        5,
        '\uBA09',
        11,
        '\uBA16',
        33,
        '\uBA3A\uBA3B\uBA3D\uBA3E\uBA3F\uBA41\uBA43\uBA44\uBA45\uBA46',
      ],
      [
        '9141',
        '\uBA47\uBA4A\uBA4C\uBA4F\uBA50\uBA51\uBA52\uBA56\uBA57\uBA59\uBA5A\uBA5B\uBA5D',
        6,
        '\uBA66\uBA6A',
        5,
      ],
      [
        '9161',
        '\uBA72\uBA73\uBA75\uBA76\uBA77\uBA79',
        9,
        '\uBA86\uBA88\uBA89\uBA8A\uBA8B\uBA8D',
        5,
      ],
      [
        '9181',
        '\uBA93',
        20,
        '\uBAAA\uBAAD\uBAAE\uBAAF\uBAB1\uBAB3',
        4,
        '\uBABA\uBABC\uBABE',
        5,
        '\uBAC5\uBAC6\uBAC7\uBAC9',
        14,
        '\uBADA',
        33,
        '\uBAFD\uBAFE\uBAFF\uBB01\uBB02\uBB03\uBB05',
        7,
        '\uBB0E\uBB10\uBB12',
        5,
        '\uBB19\uBB1A\uBB1B\uBB1D\uBB1E\uBB1F\uBB21',
        6,
      ],
      [
        '9241',
        '\uBB28\uBB2A\uBB2C',
        7,
        '\uBB37\uBB39\uBB3A\uBB3F',
        4,
        '\uBB46\uBB48\uBB4A\uBB4B\uBB4C\uBB4E\uBB51\uBB52',
      ],
      [
        '9261',
        '\uBB53\uBB55\uBB56\uBB57\uBB59',
        7,
        '\uBB62\uBB64',
        7,
        '\uBB6D',
        4,
      ],
      [
        '9281',
        '\uBB72',
        21,
        '\uBB89\uBB8A\uBB8B\uBB8D\uBB8E\uBB8F\uBB91',
        18,
        '\uBBA5\uBBA6\uBBA7\uBBA9\uBBAA\uBBAB\uBBAD',
        6,
        '\uBBB5\uBBB6\uBBB8',
        7,
        '\uBBC1\uBBC2\uBBC3\uBBC5\uBBC6\uBBC7\uBBC9',
        6,
        '\uBBD1\uBBD2\uBBD4',
        35,
        '\uBBFA\uBBFB\uBBFD\uBBFE\uBC01',
      ],
      [
        '9341',
        '\uBC03',
        4,
        '\uBC0A\uBC0E\uBC10\uBC12\uBC13\uBC19\uBC1A\uBC20\uBC21\uBC22\uBC23\uBC26\uBC28\uBC2A\uBC2B\uBC2C\uBC2E\uBC2F\uBC32\uBC33\uBC35',
      ],
      [
        '9361',
        '\uBC36\uBC37\uBC39',
        6,
        '\uBC42\uBC46\uBC47\uBC48\uBC4A\uBC4B\uBC4E\uBC4F\uBC51',
        8,
      ],
      [
        '9381',
        '\uBC5A\uBC5B\uBC5C\uBC5E',
        37,
        '\uBC86\uBC87\uBC89\uBC8A\uBC8D\uBC8F',
        4,
        '\uBC96\uBC98\uBC9B',
        4,
        '\uBCA2\uBCA3\uBCA5\uBCA6\uBCA9',
        6,
        '\uBCB2\uBCB6',
        5,
        '\uBCBE\uBCBF\uBCC1\uBCC2\uBCC3\uBCC5',
        7,
        '\uBCCE\uBCD2\uBCD3\uBCD4\uBCD6\uBCD7\uBCD9\uBCDA\uBCDB\uBCDD',
        22,
        '\uBCF7\uBCF9\uBCFA\uBCFB\uBCFD',
      ],
      [
        '9441',
        '\uBCFE',
        5,
        '\uBD06\uBD08\uBD0A',
        5,
        '\uBD11\uBD12\uBD13\uBD15',
        8,
      ],
      ['9461', '\uBD1E', 5, '\uBD25', 6, '\uBD2D', 12],
      [
        '9481',
        '\uBD3A',
        5,
        '\uBD41',
        6,
        '\uBD4A\uBD4B\uBD4D\uBD4E\uBD4F\uBD51',
        6,
        '\uBD5A',
        9,
        '\uBD65\uBD66\uBD67\uBD69',
        22,
        '\uBD82\uBD83\uBD85\uBD86\uBD8B',
        4,
        '\uBD92\uBD94\uBD96\uBD97\uBD98\uBD9B\uBD9D',
        6,
        '\uBDA5',
        10,
        '\uBDB1',
        6,
        '\uBDB9',
        24,
      ],
      [
        '9541',
        '\uBDD2\uBDD3\uBDD6\uBDD7\uBDD9\uBDDA\uBDDB\uBDDD',
        11,
        '\uBDEA',
        5,
        '\uBDF1',
      ],
      [
        '9561',
        '\uBDF2\uBDF3\uBDF5\uBDF6\uBDF7\uBDF9',
        6,
        '\uBE01\uBE02\uBE04\uBE06',
        5,
        '\uBE0E\uBE0F\uBE11\uBE12\uBE13',
      ],
      [
        '9581',
        '\uBE15',
        6,
        '\uBE1E\uBE20',
        35,
        '\uBE46\uBE47\uBE49\uBE4A\uBE4B\uBE4D\uBE4F',
        4,
        '\uBE56\uBE58\uBE5C\uBE5D\uBE5E\uBE5F\uBE62\uBE63\uBE65\uBE66\uBE67\uBE69\uBE6B',
        4,
        '\uBE72\uBE76',
        4,
        '\uBE7E\uBE7F\uBE81\uBE82\uBE83\uBE85',
        6,
        '\uBE8E\uBE92',
        5,
        '\uBE9A',
        13,
        '\uBEA9',
        14,
      ],
      ['9641', '\uBEB8', 23, '\uBED2\uBED3'],
      ['9661', '\uBED5\uBED6\uBED9', 6, '\uBEE1\uBEE2\uBEE6', 5, '\uBEED', 8],
      [
        '9681',
        '\uBEF6',
        10,
        '\uBF02',
        5,
        '\uBF0A',
        13,
        '\uBF1A\uBF1E',
        33,
        '\uBF42\uBF43\uBF45\uBF46\uBF47\uBF49',
        6,
        '\uBF52\uBF53\uBF54\uBF56',
        44,
      ],
      ['9741', '\uBF83', 16, '\uBF95', 8],
      ['9761', '\uBF9E', 17, '\uBFB1', 7],
      [
        '9781',
        '\uBFB9',
        11,
        '\uBFC6',
        5,
        '\uBFCE\uBFCF\uBFD1\uBFD2\uBFD3\uBFD5',
        6,
        '\uBFDD\uBFDE\uBFE0\uBFE2',
        89,
        '\uC03D\uC03E\uC03F',
      ],
      ['9841', '\uC040', 16, '\uC052', 5, '\uC059\uC05A\uC05B'],
      ['9861', '\uC05D\uC05E\uC05F\uC061', 6, '\uC06A', 15],
      [
        '9881',
        '\uC07A',
        21,
        '\uC092\uC093\uC095\uC096\uC097\uC099',
        6,
        '\uC0A2\uC0A4\uC0A6',
        5,
        '\uC0AE\uC0B1\uC0B2\uC0B7',
        4,
        '\uC0BE\uC0C2\uC0C3\uC0C4\uC0C6\uC0C7\uC0CA\uC0CB\uC0CD\uC0CE\uC0CF\uC0D1',
        6,
        '\uC0DA\uC0DE',
        5,
        '\uC0E6\uC0E7\uC0E9\uC0EA\uC0EB\uC0ED',
        6,
        '\uC0F6\uC0F8\uC0FA',
        5,
        '\uC101\uC102\uC103\uC105\uC106\uC107\uC109',
        6,
        '\uC111\uC112\uC113\uC114\uC116',
        5,
        '\uC121\uC122\uC125\uC128\uC129\uC12A\uC12B\uC12E',
      ],
      [
        '9941',
        '\uC132\uC133\uC134\uC135\uC137\uC13A\uC13B\uC13D\uC13E\uC13F\uC141',
        6,
        '\uC14A\uC14E',
        5,
        '\uC156\uC157',
      ],
      [
        '9961',
        '\uC159\uC15A\uC15B\uC15D',
        6,
        '\uC166\uC16A',
        5,
        '\uC171\uC172\uC173\uC175\uC176\uC177\uC179\uC17A\uC17B',
      ],
      [
        '9981',
        '\uC17C',
        8,
        '\uC186',
        5,
        '\uC18F\uC191\uC192\uC193\uC195\uC197',
        4,
        '\uC19E\uC1A0\uC1A2\uC1A3\uC1A4\uC1A6\uC1A7\uC1AA\uC1AB\uC1AD\uC1AE\uC1AF\uC1B1',
        11,
        '\uC1BE',
        5,
        '\uC1C5\uC1C6\uC1C7\uC1C9\uC1CA\uC1CB\uC1CD',
        6,
        '\uC1D5\uC1D6\uC1D9',
        6,
        '\uC1E1\uC1E2\uC1E3\uC1E5\uC1E6\uC1E7\uC1E9',
        6,
        '\uC1F2\uC1F4',
        7,
        '\uC1FE\uC1FF\uC201\uC202\uC203\uC205',
        6,
        '\uC20E\uC210\uC212',
        5,
        '\uC21A\uC21B\uC21D\uC21E\uC221\uC222\uC223',
      ],
      [
        '9a41',
        '\uC224\uC225\uC226\uC227\uC22A\uC22C\uC22E\uC230\uC233\uC235',
        16,
      ],
      [
        '9a61',
        '\uC246\uC247\uC249',
        6,
        '\uC252\uC253\uC255\uC256\uC257\uC259',
        6,
        '\uC261\uC262\uC263\uC264\uC266',
      ],
      [
        '9a81',
        '\uC267',
        4,
        '\uC26E\uC26F\uC271\uC272\uC273\uC275',
        6,
        '\uC27E\uC280\uC282',
        5,
        '\uC28A',
        5,
        '\uC291',
        6,
        '\uC299\uC29A\uC29C\uC29E',
        5,
        '\uC2A6\uC2A7\uC2A9\uC2AA\uC2AB\uC2AE',
        5,
        '\uC2B6\uC2B8\uC2BA',
        33,
        '\uC2DE\uC2DF\uC2E1\uC2E2\uC2E5',
        5,
        '\uC2EE\uC2F0\uC2F2\uC2F3\uC2F4\uC2F5\uC2F7\uC2FA\uC2FD\uC2FE\uC2FF\uC301',
        6,
        '\uC30A\uC30B\uC30E\uC30F',
      ],
      [
        '9b41',
        '\uC310\uC311\uC312\uC316\uC317\uC319\uC31A\uC31B\uC31D',
        6,
        '\uC326\uC327\uC32A',
        8,
      ],
      ['9b61', '\uC333', 17, '\uC346', 7],
      [
        '9b81',
        '\uC34E',
        25,
        '\uC36A\uC36B\uC36D\uC36E\uC36F\uC371\uC373',
        4,
        '\uC37A\uC37B\uC37E',
        5,
        '\uC385\uC386\uC387\uC389\uC38A\uC38B\uC38D',
        50,
        '\uC3C1',
        22,
        '\uC3DA',
      ],
      [
        '9c41',
        '\uC3DB\uC3DD\uC3DE\uC3E1\uC3E3',
        4,
        '\uC3EA\uC3EB\uC3EC\uC3EE',
        5,
        '\uC3F6\uC3F7\uC3F9',
        5,
      ],
      ['9c61', '\uC3FF', 8, '\uC409', 6, '\uC411', 9],
      [
        '9c81',
        '\uC41B',
        8,
        '\uC425',
        6,
        '\uC42D\uC42E\uC42F\uC431\uC432\uC433\uC435',
        6,
        '\uC43E',
        9,
        '\uC449',
        26,
        '\uC466\uC467\uC469\uC46A\uC46B\uC46D',
        6,
        '\uC476\uC477\uC478\uC47A',
        5,
        '\uC481',
        18,
        '\uC495',
        6,
        '\uC49D',
        12,
      ],
      ['9d41', '\uC4AA', 13, '\uC4B9\uC4BA\uC4BB\uC4BD', 8],
      ['9d61', '\uC4C6', 25],
      [
        '9d81',
        '\uC4E0',
        8,
        '\uC4EA',
        5,
        '\uC4F2\uC4F3\uC4F5\uC4F6\uC4F7\uC4F9\uC4FB\uC4FC\uC4FD\uC4FE\uC502',
        9,
        '\uC50D\uC50E\uC50F\uC511\uC512\uC513\uC515',
        6,
        '\uC51D',
        10,
        '\uC52A\uC52B\uC52D\uC52E\uC52F\uC531',
        6,
        '\uC53A\uC53C\uC53E',
        5,
        '\uC546\uC547\uC54B\uC54F\uC550\uC551\uC552\uC556\uC55A\uC55B\uC55C\uC55F\uC562\uC563\uC565\uC566\uC567\uC569',
        6,
        '\uC572\uC576',
        5,
        '\uC57E\uC57F\uC581\uC582\uC583\uC585\uC586\uC588\uC589\uC58A\uC58B\uC58E\uC590\uC592\uC593\uC594',
      ],
      [
        '9e41',
        '\uC596\uC599\uC59A\uC59B\uC59D\uC59E\uC59F\uC5A1',
        7,
        '\uC5AA',
        9,
        '\uC5B6',
      ],
      [
        '9e61',
        '\uC5B7\uC5BA\uC5BF',
        4,
        '\uC5CB\uC5CD\uC5CF\uC5D2\uC5D3\uC5D5\uC5D6\uC5D7\uC5D9',
        6,
        '\uC5E2\uC5E4\uC5E6\uC5E7',
      ],
      [
        '9e81',
        '\uC5E8\uC5E9\uC5EA\uC5EB\uC5EF\uC5F1\uC5F2\uC5F3\uC5F5\uC5F8\uC5F9\uC5FA\uC5FB\uC602\uC603\uC604\uC609\uC60A\uC60B\uC60D\uC60E\uC60F\uC611',
        6,
        '\uC61A\uC61D',
        6,
        '\uC626\uC627\uC629\uC62A\uC62B\uC62F\uC631\uC632\uC636\uC638\uC63A\uC63C\uC63D\uC63E\uC63F\uC642\uC643\uC645\uC646\uC647\uC649',
        6,
        '\uC652\uC656',
        5,
        '\uC65E\uC65F\uC661',
        10,
        '\uC66D\uC66E\uC670\uC672',
        5,
        '\uC67A\uC67B\uC67D\uC67E\uC67F\uC681',
        6,
        '\uC68A\uC68C\uC68E',
        5,
        '\uC696\uC697\uC699\uC69A\uC69B\uC69D',
        6,
        '\uC6A6',
      ],
      [
        '9f41',
        '\uC6A8\uC6AA',
        5,
        '\uC6B2\uC6B3\uC6B5\uC6B6\uC6B7\uC6BB',
        4,
        '\uC6C2\uC6C4\uC6C6',
        5,
        '\uC6CE',
      ],
      [
        '9f61',
        '\uC6CF\uC6D1\uC6D2\uC6D3\uC6D5',
        6,
        '\uC6DE\uC6DF\uC6E2',
        5,
        '\uC6EA\uC6EB\uC6ED\uC6EE\uC6EF\uC6F1\uC6F2',
      ],
      [
        '9f81',
        '\uC6F3',
        4,
        '\uC6FA\uC6FB\uC6FC\uC6FE',
        5,
        '\uC706\uC707\uC709\uC70A\uC70B\uC70D',
        6,
        '\uC716\uC718\uC71A',
        5,
        '\uC722\uC723\uC725\uC726\uC727\uC729',
        6,
        '\uC732\uC734\uC736\uC738\uC739\uC73A\uC73B\uC73E\uC73F\uC741\uC742\uC743\uC745',
        4,
        '\uC74B\uC74E\uC750\uC759\uC75A\uC75B\uC75D\uC75E\uC75F\uC761',
        6,
        '\uC769\uC76A\uC76C',
        7,
        '\uC776\uC777\uC779\uC77A\uC77B\uC77F\uC780\uC781\uC782\uC786\uC78B\uC78C\uC78D\uC78F\uC792\uC793\uC795\uC799\uC79B',
        4,
        '\uC7A2\uC7A7',
        4,
        '\uC7AE\uC7AF\uC7B1\uC7B2\uC7B3\uC7B5\uC7B6\uC7B7',
      ],
      [
        'a041',
        '\uC7B8\uC7B9\uC7BA\uC7BB\uC7BE\uC7C2',
        5,
        '\uC7CA\uC7CB\uC7CD\uC7CF\uC7D1',
        6,
        '\uC7D9\uC7DA\uC7DB\uC7DC',
      ],
      ['a061', '\uC7DE', 5, '\uC7E5\uC7E6\uC7E7\uC7E9\uC7EA\uC7EB\uC7ED', 13],
      [
        'a081',
        '\uC7FB',
        4,
        '\uC802\uC803\uC805\uC806\uC807\uC809\uC80B',
        4,
        '\uC812\uC814\uC817',
        4,
        '\uC81E\uC81F\uC821\uC822\uC823\uC825',
        6,
        '\uC82E\uC830\uC832',
        5,
        '\uC839\uC83A\uC83B\uC83D\uC83E\uC83F\uC841',
        6,
        '\uC84A\uC84B\uC84E',
        5,
        '\uC855',
        26,
        '\uC872\uC873\uC875\uC876\uC877\uC879\uC87B',
        4,
        '\uC882\uC884\uC888\uC889\uC88A\uC88E',
        5,
        '\uC895',
        7,
        '\uC89E\uC8A0\uC8A2\uC8A3\uC8A4',
      ],
      ['a141', '\uC8A5\uC8A6\uC8A7\uC8A9', 18, '\uC8BE\uC8BF\uC8C0\uC8C1'],
      [
        'a161',
        '\uC8C2\uC8C3\uC8C5\uC8C6\uC8C7\uC8C9\uC8CA\uC8CB\uC8CD',
        6,
        '\uC8D6\uC8D8\uC8DA',
        5,
        '\uC8E2\uC8E3\uC8E5',
      ],
      [
        'a181',
        '\uC8E6',
        14,
        '\uC8F6',
        5,
        '\uC8FE\uC8FF\uC901\uC902\uC903\uC907',
        4,
        '\uC90E\u3000\u3001\u3002\xB7\u2025\u2026\xA8\u3003\xAD\u2015\u2225\uFF3C\u223C\u2018\u2019\u201C\u201D\u3014\u3015\u3008',
        9,
        '\xB1\xD7\xF7\u2260\u2264\u2265\u221E\u2234\xB0\u2032\u2033\u2103\u212B\uFFE0\uFFE1\uFFE5\u2642\u2640\u2220\u22A5\u2312\u2202\u2207\u2261\u2252\xA7\u203B\u2606\u2605\u25CB\u25CF\u25CE\u25C7\u25C6\u25A1\u25A0\u25B3\u25B2\u25BD\u25BC\u2192\u2190\u2191\u2193\u2194\u3013\u226A\u226B\u221A\u223D\u221D\u2235\u222B\u222C\u2208\u220B\u2286\u2287\u2282\u2283\u222A\u2229\u2227\u2228\uFFE2',
      ],
      ['a241', '\uC910\uC912', 5, '\uC919', 18],
      ['a261', '\uC92D', 6, '\uC935', 18],
      [
        'a281',
        '\uC948',
        7,
        '\uC952\uC953\uC955\uC956\uC957\uC959',
        6,
        '\uC962\uC964',
        7,
        '\uC96D\uC96E\uC96F\u21D2\u21D4\u2200\u2203\xB4\uFF5E\u02C7\u02D8\u02DD\u02DA\u02D9\xB8\u02DB\xA1\xBF\u02D0\u222E\u2211\u220F\xA4\u2109\u2030\u25C1\u25C0\u25B7\u25B6\u2664\u2660\u2661\u2665\u2667\u2663\u2299\u25C8\u25A3\u25D0\u25D1\u2592\u25A4\u25A5\u25A8\u25A7\u25A6\u25A9\u2668\u260F\u260E\u261C\u261E\xB6\u2020\u2021\u2195\u2197\u2199\u2196\u2198\u266D\u2669\u266A\u266C\u327F\u321C\u2116\u33C7\u2122\u33C2\u33D8\u2121\u20AC\xAE',
      ],
      [
        'a341',
        '\uC971\uC972\uC973\uC975',
        6,
        '\uC97D',
        10,
        '\uC98A\uC98B\uC98D\uC98E\uC98F',
      ],
      ['a361', '\uC991', 6, '\uC99A\uC99C\uC99E', 16],
      [
        'a381',
        '\uC9AF',
        16,
        '\uC9C2\uC9C3\uC9C5\uC9C6\uC9C9\uC9CB',
        4,
        '\uC9D2\uC9D4\uC9D7\uC9D8\uC9DB\uFF01',
        58,
        '\uFFE6\uFF3D',
        32,
        '\uFFE3',
      ],
      [
        'a441',
        '\uC9DE\uC9DF\uC9E1\uC9E3\uC9E5\uC9E6\uC9E8\uC9E9\uC9EA\uC9EB\uC9EE\uC9F2',
        5,
        '\uC9FA\uC9FB\uC9FD\uC9FE\uC9FF\uCA01\uCA02\uCA03\uCA04',
      ],
      [
        'a461',
        '\uCA05\uCA06\uCA07\uCA0A\uCA0E',
        5,
        '\uCA15\uCA16\uCA17\uCA19',
        12,
      ],
      ['a481', '\uCA26\uCA27\uCA28\uCA2A', 28, '\u3131', 93],
      [
        'a541',
        '\uCA47',
        4,
        '\uCA4E\uCA4F\uCA51\uCA52\uCA53\uCA55',
        6,
        '\uCA5E\uCA62',
        5,
        '\uCA69\uCA6A',
      ],
      ['a561', '\uCA6B', 17, '\uCA7E', 5, '\uCA85\uCA86'],
      ['a581', '\uCA87', 16, '\uCA99', 14, '\u2170', 9],
      ['a5b0', '\u2160', 9],
      ['a5c1', '\u0391', 16, '\u03A3', 6],
      ['a5e1', '\u03B1', 16, '\u03C3', 6],
      ['a641', '\uCAA8', 19, '\uCABE\uCABF\uCAC1\uCAC2\uCAC3\uCAC5'],
      [
        'a661',
        '\uCAC6',
        5,
        '\uCACE\uCAD0\uCAD2\uCAD4\uCAD5\uCAD6\uCAD7\uCADA',
        5,
        '\uCAE1',
        6,
      ],
      [
        'a681',
        '\uCAE8\uCAE9\uCAEA\uCAEB\uCAED',
        6,
        '\uCAF5',
        18,
        '\uCB09\uCB0A\u2500\u2502\u250C\u2510\u2518\u2514\u251C\u252C\u2524\u2534\u253C\u2501\u2503\u250F\u2513\u251B\u2517\u2523\u2533\u252B\u253B\u254B\u2520\u252F\u2528\u2537\u253F\u251D\u2530\u2525\u2538\u2542\u2512\u2511\u251A\u2519\u2516\u2515\u250E\u250D\u251E\u251F\u2521\u2522\u2526\u2527\u2529\u252A\u252D\u252E\u2531\u2532\u2535\u2536\u2539\u253A\u253D\u253E\u2540\u2541\u2543',
        7,
      ],
      [
        'a741',
        '\uCB0B',
        4,
        '\uCB11\uCB12\uCB13\uCB15\uCB16\uCB17\uCB19',
        6,
        '\uCB22',
        7,
      ],
      ['a761', '\uCB2A', 22, '\uCB42\uCB43\uCB44'],
      [
        'a781',
        '\uCB45\uCB46\uCB47\uCB4A\uCB4B\uCB4D\uCB4E\uCB4F\uCB51',
        6,
        '\uCB5A\uCB5B\uCB5C\uCB5E',
        5,
        '\uCB65',
        7,
        '\u3395\u3396\u3397\u2113\u3398\u33C4\u33A3\u33A4\u33A5\u33A6\u3399',
        9,
        '\u33CA\u338D\u338E\u338F\u33CF\u3388\u3389\u33C8\u33A7\u33A8\u33B0',
        9,
        '\u3380',
        4,
        '\u33BA',
        5,
        '\u3390',
        4,
        '\u2126\u33C0\u33C1\u338A\u338B\u338C\u33D6\u33C5\u33AD\u33AE\u33AF\u33DB\u33A9\u33AA\u33AB\u33AC\u33DD\u33D0\u33D3\u33C3\u33C9\u33DC\u33C6',
      ],
      ['a841', '\uCB6D', 10, '\uCB7A', 14],
      ['a861', '\uCB89', 18, '\uCB9D', 6],
      ['a881', '\uCBA4', 19, '\uCBB9', 11, '\xC6\xD0\xAA\u0126'],
      ['a8a6', '\u0132'],
      ['a8a8', '\u013F\u0141\xD8\u0152\xBA\xDE\u0166\u014A'],
      [
        'a8b1',
        '\u3260',
        27,
        '\u24D0',
        25,
        '\u2460',
        14,
        '\xBD\u2153\u2154\xBC\xBE\u215B\u215C\u215D\u215E',
      ],
      ['a941', '\uCBC5', 14, '\uCBD5', 10],
      ['a961', '\uCBE0\uCBE1\uCBE2\uCBE3\uCBE5\uCBE6\uCBE8\uCBEA', 18],
      [
        'a981',
        '\uCBFD',
        14,
        '\uCC0E\uCC0F\uCC11\uCC12\uCC13\uCC15',
        6,
        '\uCC1E\uCC1F\uCC20\uCC23\uCC24\xE6\u0111\xF0\u0127\u0131\u0133\u0138\u0140\u0142\xF8\u0153\xDF\xFE\u0167\u014B\u0149\u3200',
        27,
        '\u249C',
        25,
        '\u2474',
        14,
        '\xB9\xB2\xB3\u2074\u207F\u2081\u2082\u2083\u2084',
      ],
      [
        'aa41',
        '\uCC25\uCC26\uCC2A\uCC2B\uCC2D\uCC2F\uCC31',
        6,
        '\uCC3A\uCC3F',
        4,
        '\uCC46\uCC47\uCC49\uCC4A\uCC4B\uCC4D\uCC4E',
      ],
      [
        'aa61',
        '\uCC4F',
        4,
        '\uCC56\uCC5A',
        5,
        '\uCC61\uCC62\uCC63\uCC65\uCC67\uCC69',
        6,
        '\uCC71\uCC72',
      ],
      ['aa81', '\uCC73\uCC74\uCC76', 29, '\u3041', 82],
      [
        'ab41',
        '\uCC94\uCC95\uCC96\uCC97\uCC9A\uCC9B\uCC9D\uCC9E\uCC9F\uCCA1',
        6,
        '\uCCAA\uCCAE',
        5,
        '\uCCB6\uCCB7\uCCB9',
      ],
      [
        'ab61',
        '\uCCBA\uCCBB\uCCBD',
        6,
        '\uCCC6\uCCC8\uCCCA',
        5,
        '\uCCD1\uCCD2\uCCD3\uCCD5',
        5,
      ],
      [
        'ab81',
        '\uCCDB',
        8,
        '\uCCE5',
        6,
        '\uCCED\uCCEE\uCCEF\uCCF1',
        12,
        '\u30A1',
        85,
      ],
      [
        'ac41',
        '\uCCFE\uCCFF\uCD00\uCD02',
        5,
        '\uCD0A\uCD0B\uCD0D\uCD0E\uCD0F\uCD11',
        6,
        '\uCD1A\uCD1C\uCD1E\uCD1F\uCD20',
      ],
      [
        'ac61',
        '\uCD21\uCD22\uCD23\uCD25\uCD26\uCD27\uCD29\uCD2A\uCD2B\uCD2D',
        11,
        '\uCD3A',
        4,
      ],
      ['ac81', '\uCD3F', 28, '\uCD5D\uCD5E\uCD5F\u0410', 5, '\u0401\u0416', 25],
      ['acd1', '\u0430', 5, '\u0451\u0436', 25],
      [
        'ad41',
        '\uCD61\uCD62\uCD63\uCD65',
        6,
        '\uCD6E\uCD70\uCD72',
        5,
        '\uCD79',
        7,
      ],
      [
        'ad61',
        '\uCD81',
        6,
        '\uCD89',
        10,
        '\uCD96\uCD97\uCD99\uCD9A\uCD9B\uCD9D\uCD9E\uCD9F',
      ],
      [
        'ad81',
        '\uCDA0\uCDA1\uCDA2\uCDA3\uCDA6\uCDA8\uCDAA',
        5,
        '\uCDB1',
        18,
        '\uCDC5',
      ],
      ['ae41', '\uCDC6', 5, '\uCDCD\uCDCE\uCDCF\uCDD1', 16],
      [
        'ae61',
        '\uCDE2',
        5,
        '\uCDE9\uCDEA\uCDEB\uCDED\uCDEE\uCDEF\uCDF1',
        6,
        '\uCDFA\uCDFC\uCDFE',
        4,
      ],
      [
        'ae81',
        '\uCE03\uCE05\uCE06\uCE07\uCE09\uCE0A\uCE0B\uCE0D',
        6,
        '\uCE15\uCE16\uCE17\uCE18\uCE1A',
        5,
        '\uCE22\uCE23\uCE25\uCE26\uCE27\uCE29\uCE2A\uCE2B',
      ],
      ['af41', '\uCE2C\uCE2D\uCE2E\uCE2F\uCE32\uCE34\uCE36', 19],
      [
        'af61',
        '\uCE4A',
        13,
        '\uCE5A\uCE5B\uCE5D\uCE5E\uCE62',
        5,
        '\uCE6A\uCE6C',
      ],
      [
        'af81',
        '\uCE6E',
        5,
        '\uCE76\uCE77\uCE79\uCE7A\uCE7B\uCE7D',
        6,
        '\uCE86\uCE88\uCE8A',
        5,
        '\uCE92\uCE93\uCE95\uCE96\uCE97\uCE99',
      ],
      ['b041', '\uCE9A', 5, '\uCEA2\uCEA6', 5, '\uCEAE', 12],
      ['b061', '\uCEBB', 5, '\uCEC2', 19],
      [
        'b081',
        '\uCED6',
        13,
        '\uCEE6\uCEE7\uCEE9\uCEEA\uCEED',
        6,
        '\uCEF6\uCEFA',
        5,
        '\uAC00\uAC01\uAC04\uAC07\uAC08\uAC09\uAC0A\uAC10',
        7,
        '\uAC19',
        4,
        '\uAC20\uAC24\uAC2C\uAC2D\uAC2F\uAC30\uAC31\uAC38\uAC39\uAC3C\uAC40\uAC4B\uAC4D\uAC54\uAC58\uAC5C\uAC70\uAC71\uAC74\uAC77\uAC78\uAC7A\uAC80\uAC81\uAC83\uAC84\uAC85\uAC86\uAC89\uAC8A\uAC8B\uAC8C\uAC90\uAC94\uAC9C\uAC9D\uAC9F\uACA0\uACA1\uACA8\uACA9\uACAA\uACAC\uACAF\uACB0\uACB8\uACB9\uACBB\uACBC\uACBD\uACC1\uACC4\uACC8\uACCC\uACD5\uACD7\uACE0\uACE1\uACE4\uACE7\uACE8\uACEA\uACEC\uACEF\uACF0\uACF1\uACF3\uACF5\uACF6\uACFC\uACFD\uAD00\uAD04\uAD06',
      ],
      [
        'b141',
        '\uCF02\uCF03\uCF05\uCF06\uCF07\uCF09',
        6,
        '\uCF12\uCF14\uCF16',
        5,
        '\uCF1D\uCF1E\uCF1F\uCF21\uCF22\uCF23',
      ],
      ['b161', '\uCF25', 6, '\uCF2E\uCF32', 5, '\uCF39', 11],
      [
        'b181',
        '\uCF45',
        14,
        '\uCF56\uCF57\uCF59\uCF5A\uCF5B\uCF5D',
        6,
        '\uCF66\uCF68\uCF6A\uCF6B\uCF6C\uAD0C\uAD0D\uAD0F\uAD11\uAD18\uAD1C\uAD20\uAD29\uAD2C\uAD2D\uAD34\uAD35\uAD38\uAD3C\uAD44\uAD45\uAD47\uAD49\uAD50\uAD54\uAD58\uAD61\uAD63\uAD6C\uAD6D\uAD70\uAD73\uAD74\uAD75\uAD76\uAD7B\uAD7C\uAD7D\uAD7F\uAD81\uAD82\uAD88\uAD89\uAD8C\uAD90\uAD9C\uAD9D\uADA4\uADB7\uADC0\uADC1\uADC4\uADC8\uADD0\uADD1\uADD3\uADDC\uADE0\uADE4\uADF8\uADF9\uADFC\uADFF\uAE00\uAE01\uAE08\uAE09\uAE0B\uAE0D\uAE14\uAE30\uAE31\uAE34\uAE37\uAE38\uAE3A\uAE40\uAE41\uAE43\uAE45\uAE46\uAE4A\uAE4C\uAE4D\uAE4E\uAE50\uAE54\uAE56\uAE5C\uAE5D\uAE5F\uAE60\uAE61\uAE65\uAE68\uAE69\uAE6C\uAE70\uAE78',
      ],
      [
        'b241',
        '\uCF6D\uCF6E\uCF6F\uCF72\uCF73\uCF75\uCF76\uCF77\uCF79',
        6,
        '\uCF81\uCF82\uCF83\uCF84\uCF86',
        5,
        '\uCF8D',
      ],
      ['b261', '\uCF8E', 18, '\uCFA2', 5, '\uCFA9'],
      [
        'b281',
        '\uCFAA',
        5,
        '\uCFB1',
        18,
        '\uCFC5',
        6,
        '\uAE79\uAE7B\uAE7C\uAE7D\uAE84\uAE85\uAE8C\uAEBC\uAEBD\uAEBE\uAEC0\uAEC4\uAECC\uAECD\uAECF\uAED0\uAED1\uAED8\uAED9\uAEDC\uAEE8\uAEEB\uAEED\uAEF4\uAEF8\uAEFC\uAF07\uAF08\uAF0D\uAF10\uAF2C\uAF2D\uAF30\uAF32\uAF34\uAF3C\uAF3D\uAF3F\uAF41\uAF42\uAF43\uAF48\uAF49\uAF50\uAF5C\uAF5D\uAF64\uAF65\uAF79\uAF80\uAF84\uAF88\uAF90\uAF91\uAF95\uAF9C\uAFB8\uAFB9\uAFBC\uAFC0\uAFC7\uAFC8\uAFC9\uAFCB\uAFCD\uAFCE\uAFD4\uAFDC\uAFE8\uAFE9\uAFF0\uAFF1\uAFF4\uAFF8\uB000\uB001\uB004\uB00C\uB010\uB014\uB01C\uB01D\uB028\uB044\uB045\uB048\uB04A\uB04C\uB04E\uB053\uB054\uB055\uB057\uB059',
      ],
      ['b341', '\uCFCC', 19, '\uCFE2\uCFE3\uCFE5\uCFE6\uCFE7\uCFE9'],
      [
        'b361',
        '\uCFEA',
        5,
        '\uCFF2\uCFF4\uCFF6',
        5,
        '\uCFFD\uCFFE\uCFFF\uD001\uD002\uD003\uD005',
        5,
      ],
      [
        'b381',
        '\uD00B',
        5,
        '\uD012',
        5,
        '\uD019',
        19,
        '\uB05D\uB07C\uB07D\uB080\uB084\uB08C\uB08D\uB08F\uB091\uB098\uB099\uB09A\uB09C\uB09F\uB0A0\uB0A1\uB0A2\uB0A8\uB0A9\uB0AB',
        4,
        '\uB0B1\uB0B3\uB0B4\uB0B5\uB0B8\uB0BC\uB0C4\uB0C5\uB0C7\uB0C8\uB0C9\uB0D0\uB0D1\uB0D4\uB0D8\uB0E0\uB0E5\uB108\uB109\uB10B\uB10C\uB110\uB112\uB113\uB118\uB119\uB11B\uB11C\uB11D\uB123\uB124\uB125\uB128\uB12C\uB134\uB135\uB137\uB138\uB139\uB140\uB141\uB144\uB148\uB150\uB151\uB154\uB155\uB158\uB15C\uB160\uB178\uB179\uB17C\uB180\uB182\uB188\uB189\uB18B\uB18D\uB192\uB193\uB194\uB198\uB19C\uB1A8\uB1CC\uB1D0\uB1D4\uB1DC\uB1DD',
      ],
      [
        'b441',
        '\uD02E',
        5,
        '\uD036\uD037\uD039\uD03A\uD03B\uD03D',
        6,
        '\uD046\uD048\uD04A',
        5,
      ],
      [
        'b461',
        '\uD051\uD052\uD053\uD055\uD056\uD057\uD059',
        6,
        '\uD061',
        10,
        '\uD06E\uD06F',
      ],
      [
        'b481',
        '\uD071\uD072\uD073\uD075',
        6,
        '\uD07E\uD07F\uD080\uD082',
        18,
        '\uB1DF\uB1E8\uB1E9\uB1EC\uB1F0\uB1F9\uB1FB\uB1FD\uB204\uB205\uB208\uB20B\uB20C\uB214\uB215\uB217\uB219\uB220\uB234\uB23C\uB258\uB25C\uB260\uB268\uB269\uB274\uB275\uB27C\uB284\uB285\uB289\uB290\uB291\uB294\uB298\uB299\uB29A\uB2A0\uB2A1\uB2A3\uB2A5\uB2A6\uB2AA\uB2AC\uB2B0\uB2B4\uB2C8\uB2C9\uB2CC\uB2D0\uB2D2\uB2D8\uB2D9\uB2DB\uB2DD\uB2E2\uB2E4\uB2E5\uB2E6\uB2E8\uB2EB',
        4,
        '\uB2F3\uB2F4\uB2F5\uB2F7',
        4,
        '\uB2FF\uB300\uB301\uB304\uB308\uB310\uB311\uB313\uB314\uB315\uB31C\uB354\uB355\uB356\uB358\uB35B\uB35C\uB35E\uB35F\uB364\uB365',
      ],
      ['b541', '\uD095', 14, '\uD0A6\uD0A7\uD0A9\uD0AA\uD0AB\uD0AD', 5],
      [
        'b561',
        '\uD0B3\uD0B6\uD0B8\uD0BA',
        5,
        '\uD0C2\uD0C3\uD0C5\uD0C6\uD0C7\uD0CA',
        5,
        '\uD0D2\uD0D6',
        4,
      ],
      [
        'b581',
        '\uD0DB\uD0DE\uD0DF\uD0E1\uD0E2\uD0E3\uD0E5',
        6,
        '\uD0EE\uD0F2',
        5,
        '\uD0F9',
        11,
        '\uB367\uB369\uB36B\uB36E\uB370\uB371\uB374\uB378\uB380\uB381\uB383\uB384\uB385\uB38C\uB390\uB394\uB3A0\uB3A1\uB3A8\uB3AC\uB3C4\uB3C5\uB3C8\uB3CB\uB3CC\uB3CE\uB3D0\uB3D4\uB3D5\uB3D7\uB3D9\uB3DB\uB3DD\uB3E0\uB3E4\uB3E8\uB3FC\uB410\uB418\uB41C\uB420\uB428\uB429\uB42B\uB434\uB450\uB451\uB454\uB458\uB460\uB461\uB463\uB465\uB46C\uB480\uB488\uB49D\uB4A4\uB4A8\uB4AC\uB4B5\uB4B7\uB4B9\uB4C0\uB4C4\uB4C8\uB4D0\uB4D5\uB4DC\uB4DD\uB4E0\uB4E3\uB4E4\uB4E6\uB4EC\uB4ED\uB4EF\uB4F1\uB4F8\uB514\uB515\uB518\uB51B\uB51C\uB524\uB525\uB527\uB528\uB529\uB52A\uB530\uB531\uB534\uB538',
      ],
      ['b641', '\uD105', 7, '\uD10E', 17],
      [
        'b661',
        '\uD120',
        15,
        '\uD132\uD133\uD135\uD136\uD137\uD139\uD13B\uD13C\uD13D\uD13E',
      ],
      [
        'b681',
        '\uD13F\uD142\uD146',
        5,
        '\uD14E\uD14F\uD151\uD152\uD153\uD155',
        6,
        '\uD15E\uD160\uD162',
        5,
        '\uD169\uD16A\uD16B\uD16D\uB540\uB541\uB543\uB544\uB545\uB54B\uB54C\uB54D\uB550\uB554\uB55C\uB55D\uB55F\uB560\uB561\uB5A0\uB5A1\uB5A4\uB5A8\uB5AA\uB5AB\uB5B0\uB5B1\uB5B3\uB5B4\uB5B5\uB5BB\uB5BC\uB5BD\uB5C0\uB5C4\uB5CC\uB5CD\uB5CF\uB5D0\uB5D1\uB5D8\uB5EC\uB610\uB611\uB614\uB618\uB625\uB62C\uB634\uB648\uB664\uB668\uB69C\uB69D\uB6A0\uB6A4\uB6AB\uB6AC\uB6B1\uB6D4\uB6F0\uB6F4\uB6F8\uB700\uB701\uB705\uB728\uB729\uB72C\uB72F\uB730\uB738\uB739\uB73B\uB744\uB748\uB74C\uB754\uB755\uB760\uB764\uB768\uB770\uB771\uB773\uB775\uB77C\uB77D\uB780\uB784\uB78C\uB78D\uB78F\uB790\uB791\uB792\uB796\uB797',
      ],
      ['b741', '\uD16E', 13, '\uD17D', 6, '\uD185\uD186\uD187\uD189\uD18A'],
      ['b761', '\uD18B', 20, '\uD1A2\uD1A3\uD1A5\uD1A6\uD1A7'],
      [
        'b781',
        '\uD1A9',
        6,
        '\uD1B2\uD1B4\uD1B6\uD1B7\uD1B8\uD1B9\uD1BB\uD1BD\uD1BE\uD1BF\uD1C1',
        14,
        '\uB798\uB799\uB79C\uB7A0\uB7A8\uB7A9\uB7AB\uB7AC\uB7AD\uB7B4\uB7B5\uB7B8\uB7C7\uB7C9\uB7EC\uB7ED\uB7F0\uB7F4\uB7FC\uB7FD\uB7FF\uB800\uB801\uB807\uB808\uB809\uB80C\uB810\uB818\uB819\uB81B\uB81D\uB824\uB825\uB828\uB82C\uB834\uB835\uB837\uB838\uB839\uB840\uB844\uB851\uB853\uB85C\uB85D\uB860\uB864\uB86C\uB86D\uB86F\uB871\uB878\uB87C\uB88D\uB8A8\uB8B0\uB8B4\uB8B8\uB8C0\uB8C1\uB8C3\uB8C5\uB8CC\uB8D0\uB8D4\uB8DD\uB8DF\uB8E1\uB8E8\uB8E9\uB8EC\uB8F0\uB8F8\uB8F9\uB8FB\uB8FD\uB904\uB918\uB920\uB93C\uB93D\uB940\uB944\uB94C\uB94F\uB951\uB958\uB959\uB95C\uB960\uB968\uB969',
      ],
      ['b841', '\uD1D0', 7, '\uD1D9', 17],
      ['b861', '\uD1EB', 8, '\uD1F5\uD1F6\uD1F7\uD1F9', 13],
      [
        'b881',
        '\uD208\uD20A',
        5,
        '\uD211',
        24,
        '\uB96B\uB96D\uB974\uB975\uB978\uB97C\uB984\uB985\uB987\uB989\uB98A\uB98D\uB98E\uB9AC\uB9AD\uB9B0\uB9B4\uB9BC\uB9BD\uB9BF\uB9C1\uB9C8\uB9C9\uB9CC\uB9CE',
        4,
        '\uB9D8\uB9D9\uB9DB\uB9DD\uB9DE\uB9E1\uB9E3\uB9E4\uB9E5\uB9E8\uB9EC\uB9F4\uB9F5\uB9F7\uB9F8\uB9F9\uB9FA\uBA00\uBA01\uBA08\uBA15\uBA38\uBA39\uBA3C\uBA40\uBA42\uBA48\uBA49\uBA4B\uBA4D\uBA4E\uBA53\uBA54\uBA55\uBA58\uBA5C\uBA64\uBA65\uBA67\uBA68\uBA69\uBA70\uBA71\uBA74\uBA78\uBA83\uBA84\uBA85\uBA87\uBA8C\uBAA8\uBAA9\uBAAB\uBAAC\uBAB0\uBAB2\uBAB8\uBAB9\uBABB\uBABD\uBAC4\uBAC8\uBAD8\uBAD9\uBAFC',
      ],
      [
        'b941',
        '\uD22A\uD22B\uD22E\uD22F\uD231\uD232\uD233\uD235',
        6,
        '\uD23E\uD240\uD242',
        5,
        '\uD249\uD24A\uD24B\uD24C',
      ],
      ['b961', '\uD24D', 14, '\uD25D', 6, '\uD265\uD266\uD267\uD268'],
      [
        'b981',
        '\uD269',
        22,
        '\uD282\uD283\uD285\uD286\uD287\uD289\uD28A\uD28B\uD28C\uBB00\uBB04\uBB0D\uBB0F\uBB11\uBB18\uBB1C\uBB20\uBB29\uBB2B\uBB34\uBB35\uBB36\uBB38\uBB3B\uBB3C\uBB3D\uBB3E\uBB44\uBB45\uBB47\uBB49\uBB4D\uBB4F\uBB50\uBB54\uBB58\uBB61\uBB63\uBB6C\uBB88\uBB8C\uBB90\uBBA4\uBBA8\uBBAC\uBBB4\uBBB7\uBBC0\uBBC4\uBBC8\uBBD0\uBBD3\uBBF8\uBBF9\uBBFC\uBBFF\uBC00\uBC02\uBC08\uBC09\uBC0B\uBC0C\uBC0D\uBC0F\uBC11\uBC14',
        4,
        '\uBC1B',
        4,
        '\uBC24\uBC25\uBC27\uBC29\uBC2D\uBC30\uBC31\uBC34\uBC38\uBC40\uBC41\uBC43\uBC44\uBC45\uBC49\uBC4C\uBC4D\uBC50\uBC5D\uBC84\uBC85\uBC88\uBC8B\uBC8C\uBC8E\uBC94\uBC95\uBC97',
      ],
      [
        'ba41',
        '\uD28D\uD28E\uD28F\uD292\uD293\uD294\uD296',
        5,
        '\uD29D\uD29E\uD29F\uD2A1\uD2A2\uD2A3\uD2A5',
        6,
        '\uD2AD',
      ],
      [
        'ba61',
        '\uD2AE\uD2AF\uD2B0\uD2B2',
        5,
        '\uD2BA\uD2BB\uD2BD\uD2BE\uD2C1\uD2C3',
        4,
        '\uD2CA\uD2CC',
        5,
      ],
      [
        'ba81',
        '\uD2D2\uD2D3\uD2D5\uD2D6\uD2D7\uD2D9\uD2DA\uD2DB\uD2DD',
        6,
        '\uD2E6',
        9,
        '\uD2F2\uD2F3\uD2F5\uD2F6\uD2F7\uD2F9\uD2FA\uBC99\uBC9A\uBCA0\uBCA1\uBCA4\uBCA7\uBCA8\uBCB0\uBCB1\uBCB3\uBCB4\uBCB5\uBCBC\uBCBD\uBCC0\uBCC4\uBCCD\uBCCF\uBCD0\uBCD1\uBCD5\uBCD8\uBCDC\uBCF4\uBCF5\uBCF6\uBCF8\uBCFC\uBD04\uBD05\uBD07\uBD09\uBD10\uBD14\uBD24\uBD2C\uBD40\uBD48\uBD49\uBD4C\uBD50\uBD58\uBD59\uBD64\uBD68\uBD80\uBD81\uBD84\uBD87\uBD88\uBD89\uBD8A\uBD90\uBD91\uBD93\uBD95\uBD99\uBD9A\uBD9C\uBDA4\uBDB0\uBDB8\uBDD4\uBDD5\uBDD8\uBDDC\uBDE9\uBDF0\uBDF4\uBDF8\uBE00\uBE03\uBE05\uBE0C\uBE0D\uBE10\uBE14\uBE1C\uBE1D\uBE1F\uBE44\uBE45\uBE48\uBE4C\uBE4E\uBE54\uBE55\uBE57\uBE59\uBE5A\uBE5B\uBE60\uBE61\uBE64',
      ],
      [
        'bb41',
        '\uD2FB',
        4,
        '\uD302\uD304\uD306',
        5,
        '\uD30F\uD311\uD312\uD313\uD315\uD317',
        4,
        '\uD31E\uD322\uD323',
      ],
      [
        'bb61',
        '\uD324\uD326\uD327\uD32A\uD32B\uD32D\uD32E\uD32F\uD331',
        6,
        '\uD33A\uD33E',
        5,
        '\uD346\uD347\uD348\uD349',
      ],
      [
        'bb81',
        '\uD34A',
        31,
        '\uBE68\uBE6A\uBE70\uBE71\uBE73\uBE74\uBE75\uBE7B\uBE7C\uBE7D\uBE80\uBE84\uBE8C\uBE8D\uBE8F\uBE90\uBE91\uBE98\uBE99\uBEA8\uBED0\uBED1\uBED4\uBED7\uBED8\uBEE0\uBEE3\uBEE4\uBEE5\uBEEC\uBF01\uBF08\uBF09\uBF18\uBF19\uBF1B\uBF1C\uBF1D\uBF40\uBF41\uBF44\uBF48\uBF50\uBF51\uBF55\uBF94\uBFB0\uBFC5\uBFCC\uBFCD\uBFD0\uBFD4\uBFDC\uBFDF\uBFE1\uC03C\uC051\uC058\uC05C\uC060\uC068\uC069\uC090\uC091\uC094\uC098\uC0A0\uC0A1\uC0A3\uC0A5\uC0AC\uC0AD\uC0AF\uC0B0\uC0B3\uC0B4\uC0B5\uC0B6\uC0BC\uC0BD\uC0BF\uC0C0\uC0C1\uC0C5\uC0C8\uC0C9\uC0CC\uC0D0\uC0D8\uC0D9\uC0DB\uC0DC\uC0DD\uC0E4',
      ],
      [
        'bc41',
        '\uD36A',
        17,
        '\uD37E\uD37F\uD381\uD382\uD383\uD385\uD386\uD387',
      ],
      [
        'bc61',
        '\uD388\uD389\uD38A\uD38B\uD38E\uD392',
        5,
        '\uD39A\uD39B\uD39D\uD39E\uD39F\uD3A1',
        6,
        '\uD3AA\uD3AC\uD3AE',
      ],
      [
        'bc81',
        '\uD3AF',
        4,
        '\uD3B5\uD3B6\uD3B7\uD3B9\uD3BA\uD3BB\uD3BD',
        6,
        '\uD3C6\uD3C7\uD3CA',
        5,
        '\uD3D1',
        5,
        '\uC0E5\uC0E8\uC0EC\uC0F4\uC0F5\uC0F7\uC0F9\uC100\uC104\uC108\uC110\uC115\uC11C',
        4,
        '\uC123\uC124\uC126\uC127\uC12C\uC12D\uC12F\uC130\uC131\uC136\uC138\uC139\uC13C\uC140\uC148\uC149\uC14B\uC14C\uC14D\uC154\uC155\uC158\uC15C\uC164\uC165\uC167\uC168\uC169\uC170\uC174\uC178\uC185\uC18C\uC18D\uC18E\uC190\uC194\uC196\uC19C\uC19D\uC19F\uC1A1\uC1A5\uC1A8\uC1A9\uC1AC\uC1B0\uC1BD\uC1C4\uC1C8\uC1CC\uC1D4\uC1D7\uC1D8\uC1E0\uC1E4\uC1E8\uC1F0\uC1F1\uC1F3\uC1FC\uC1FD\uC200\uC204\uC20C\uC20D\uC20F\uC211\uC218\uC219\uC21C\uC21F\uC220\uC228\uC229\uC22B\uC22D',
      ],
      [
        'bd41',
        '\uD3D7\uD3D9',
        7,
        '\uD3E2\uD3E4',
        7,
        '\uD3EE\uD3EF\uD3F1\uD3F2\uD3F3\uD3F5\uD3F6\uD3F7',
      ],
      ['bd61', '\uD3F8\uD3F9\uD3FA\uD3FB\uD3FE\uD400\uD402', 5, '\uD409', 13],
      [
        'bd81',
        '\uD417',
        5,
        '\uD41E',
        25,
        '\uC22F\uC231\uC232\uC234\uC248\uC250\uC251\uC254\uC258\uC260\uC265\uC26C\uC26D\uC270\uC274\uC27C\uC27D\uC27F\uC281\uC288\uC289\uC290\uC298\uC29B\uC29D\uC2A4\uC2A5\uC2A8\uC2AC\uC2AD\uC2B4\uC2B5\uC2B7\uC2B9\uC2DC\uC2DD\uC2E0\uC2E3\uC2E4\uC2EB\uC2EC\uC2ED\uC2EF\uC2F1\uC2F6\uC2F8\uC2F9\uC2FB\uC2FC\uC300\uC308\uC309\uC30C\uC30D\uC313\uC314\uC315\uC318\uC31C\uC324\uC325\uC328\uC329\uC345\uC368\uC369\uC36C\uC370\uC372\uC378\uC379\uC37C\uC37D\uC384\uC388\uC38C\uC3C0\uC3D8\uC3D9\uC3DC\uC3DF\uC3E0\uC3E2\uC3E8\uC3E9\uC3ED\uC3F4\uC3F5\uC3F8\uC408\uC410\uC424\uC42C\uC430',
      ],
      ['be41', '\uD438', 7, '\uD441\uD442\uD443\uD445', 14],
      [
        'be61',
        '\uD454',
        7,
        '\uD45D\uD45E\uD45F\uD461\uD462\uD463\uD465',
        7,
        '\uD46E\uD470\uD471\uD472',
      ],
      [
        'be81',
        '\uD473',
        4,
        '\uD47A\uD47B\uD47D\uD47E\uD481\uD483',
        4,
        '\uD48A\uD48C\uD48E',
        5,
        '\uD495',
        8,
        '\uC434\uC43C\uC43D\uC448\uC464\uC465\uC468\uC46C\uC474\uC475\uC479\uC480\uC494\uC49C\uC4B8\uC4BC\uC4E9\uC4F0\uC4F1\uC4F4\uC4F8\uC4FA\uC4FF\uC500\uC501\uC50C\uC510\uC514\uC51C\uC528\uC529\uC52C\uC530\uC538\uC539\uC53B\uC53D\uC544\uC545\uC548\uC549\uC54A\uC54C\uC54D\uC54E\uC553\uC554\uC555\uC557\uC558\uC559\uC55D\uC55E\uC560\uC561\uC564\uC568\uC570\uC571\uC573\uC574\uC575\uC57C\uC57D\uC580\uC584\uC587\uC58C\uC58D\uC58F\uC591\uC595\uC597\uC598\uC59C\uC5A0\uC5A9\uC5B4\uC5B5\uC5B8\uC5B9\uC5BB\uC5BC\uC5BD\uC5BE\uC5C4',
        6,
        '\uC5CC\uC5CE',
      ],
      ['bf41', '\uD49E', 10, '\uD4AA', 14],
      ['bf61', '\uD4B9', 18, '\uD4CD\uD4CE\uD4CF\uD4D1\uD4D2\uD4D3\uD4D5'],
      [
        'bf81',
        '\uD4D6',
        5,
        '\uD4DD\uD4DE\uD4E0',
        7,
        '\uD4E9\uD4EA\uD4EB\uD4ED\uD4EE\uD4EF\uD4F1',
        6,
        '\uD4F9\uD4FA\uD4FC\uC5D0\uC5D1\uC5D4\uC5D8\uC5E0\uC5E1\uC5E3\uC5E5\uC5EC\uC5ED\uC5EE\uC5F0\uC5F4\uC5F6\uC5F7\uC5FC',
        5,
        '\uC605\uC606\uC607\uC608\uC60C\uC610\uC618\uC619\uC61B\uC61C\uC624\uC625\uC628\uC62C\uC62D\uC62E\uC630\uC633\uC634\uC635\uC637\uC639\uC63B\uC640\uC641\uC644\uC648\uC650\uC651\uC653\uC654\uC655\uC65C\uC65D\uC660\uC66C\uC66F\uC671\uC678\uC679\uC67C\uC680\uC688\uC689\uC68B\uC68D\uC694\uC695\uC698\uC69C\uC6A4\uC6A5\uC6A7\uC6A9\uC6B0\uC6B1\uC6B4\uC6B8\uC6B9\uC6BA\uC6C0\uC6C1\uC6C3\uC6C5\uC6CC\uC6CD\uC6D0\uC6D4\uC6DC\uC6DD\uC6E0\uC6E1\uC6E8',
      ],
      [
        'c041',
        '\uD4FE',
        5,
        '\uD505\uD506\uD507\uD509\uD50A\uD50B\uD50D',
        6,
        '\uD516\uD518',
        5,
      ],
      ['c061', '\uD51E', 25],
      [
        'c081',
        '\uD538\uD539\uD53A\uD53B\uD53E\uD53F\uD541\uD542\uD543\uD545',
        6,
        '\uD54E\uD550\uD552',
        5,
        '\uD55A\uD55B\uD55D\uD55E\uD55F\uD561\uD562\uD563\uC6E9\uC6EC\uC6F0\uC6F8\uC6F9\uC6FD\uC704\uC705\uC708\uC70C\uC714\uC715\uC717\uC719\uC720\uC721\uC724\uC728\uC730\uC731\uC733\uC735\uC737\uC73C\uC73D\uC740\uC744\uC74A\uC74C\uC74D\uC74F\uC751',
        7,
        '\uC75C\uC760\uC768\uC76B\uC774\uC775\uC778\uC77C\uC77D\uC77E\uC783\uC784\uC785\uC787\uC788\uC789\uC78A\uC78E\uC790\uC791\uC794\uC796\uC797\uC798\uC79A\uC7A0\uC7A1\uC7A3\uC7A4\uC7A5\uC7A6\uC7AC\uC7AD\uC7B0\uC7B4\uC7BC\uC7BD\uC7BF\uC7C0\uC7C1\uC7C8\uC7C9\uC7CC\uC7CE\uC7D0\uC7D8\uC7DD\uC7E4\uC7E8\uC7EC\uC800\uC801\uC804\uC808\uC80A',
      ],
      [
        'c141',
        '\uD564\uD566\uD567\uD56A\uD56C\uD56E',
        5,
        '\uD576\uD577\uD579\uD57A\uD57B\uD57D',
        6,
        '\uD586\uD58A\uD58B',
      ],
      ['c161', '\uD58C\uD58D\uD58E\uD58F\uD591', 19, '\uD5A6\uD5A7'],
      [
        'c181',
        '\uD5A8',
        31,
        '\uC810\uC811\uC813\uC815\uC816\uC81C\uC81D\uC820\uC824\uC82C\uC82D\uC82F\uC831\uC838\uC83C\uC840\uC848\uC849\uC84C\uC84D\uC854\uC870\uC871\uC874\uC878\uC87A\uC880\uC881\uC883\uC885\uC886\uC887\uC88B\uC88C\uC88D\uC894\uC89D\uC89F\uC8A1\uC8A8\uC8BC\uC8BD\uC8C4\uC8C8\uC8CC\uC8D4\uC8D5\uC8D7\uC8D9\uC8E0\uC8E1\uC8E4\uC8F5\uC8FC\uC8FD\uC900\uC904\uC905\uC906\uC90C\uC90D\uC90F\uC911\uC918\uC92C\uC934\uC950\uC951\uC954\uC958\uC960\uC961\uC963\uC96C\uC970\uC974\uC97C\uC988\uC989\uC98C\uC990\uC998\uC999\uC99B\uC99D\uC9C0\uC9C1\uC9C4\uC9C7\uC9C8\uC9CA\uC9D0\uC9D1\uC9D3',
      ],
      [
        'c241',
        '\uD5CA\uD5CB\uD5CD\uD5CE\uD5CF\uD5D1\uD5D3',
        4,
        '\uD5DA\uD5DC\uD5DE',
        5,
        '\uD5E6\uD5E7\uD5E9\uD5EA\uD5EB\uD5ED\uD5EE',
      ],
      [
        'c261',
        '\uD5EF',
        4,
        '\uD5F6\uD5F8\uD5FA',
        5,
        '\uD602\uD603\uD605\uD606\uD607\uD609',
        6,
        '\uD612',
      ],
      [
        'c281',
        '\uD616',
        5,
        '\uD61D\uD61E\uD61F\uD621\uD622\uD623\uD625',
        7,
        '\uD62E',
        9,
        '\uD63A\uD63B\uC9D5\uC9D6\uC9D9\uC9DA\uC9DC\uC9DD\uC9E0\uC9E2\uC9E4\uC9E7\uC9EC\uC9ED\uC9EF\uC9F0\uC9F1\uC9F8\uC9F9\uC9FC\uCA00\uCA08\uCA09\uCA0B\uCA0C\uCA0D\uCA14\uCA18\uCA29\uCA4C\uCA4D\uCA50\uCA54\uCA5C\uCA5D\uCA5F\uCA60\uCA61\uCA68\uCA7D\uCA84\uCA98\uCABC\uCABD\uCAC0\uCAC4\uCACC\uCACD\uCACF\uCAD1\uCAD3\uCAD8\uCAD9\uCAE0\uCAEC\uCAF4\uCB08\uCB10\uCB14\uCB18\uCB20\uCB21\uCB41\uCB48\uCB49\uCB4C\uCB50\uCB58\uCB59\uCB5D\uCB64\uCB78\uCB79\uCB9C\uCBB8\uCBD4\uCBE4\uCBE7\uCBE9\uCC0C\uCC0D\uCC10\uCC14\uCC1C\uCC1D\uCC21\uCC22\uCC27\uCC28\uCC29\uCC2C\uCC2E\uCC30\uCC38\uCC39\uCC3B',
      ],
      [
        'c341',
        '\uD63D\uD63E\uD63F\uD641\uD642\uD643\uD644\uD646\uD647\uD64A\uD64C\uD64E\uD64F\uD650\uD652\uD653\uD656\uD657\uD659\uD65A\uD65B\uD65D',
        4,
      ],
      ['c361', '\uD662', 4, '\uD668\uD66A', 5, '\uD672\uD673\uD675', 11],
      [
        'c381',
        '\uD681\uD682\uD684\uD686',
        5,
        '\uD68E\uD68F\uD691\uD692\uD693\uD695',
        7,
        '\uD69E\uD6A0\uD6A2',
        5,
        '\uD6A9\uD6AA\uCC3C\uCC3D\uCC3E\uCC44\uCC45\uCC48\uCC4C\uCC54\uCC55\uCC57\uCC58\uCC59\uCC60\uCC64\uCC66\uCC68\uCC70\uCC75\uCC98\uCC99\uCC9C\uCCA0\uCCA8\uCCA9\uCCAB\uCCAC\uCCAD\uCCB4\uCCB5\uCCB8\uCCBC\uCCC4\uCCC5\uCCC7\uCCC9\uCCD0\uCCD4\uCCE4\uCCEC\uCCF0\uCD01\uCD08\uCD09\uCD0C\uCD10\uCD18\uCD19\uCD1B\uCD1D\uCD24\uCD28\uCD2C\uCD39\uCD5C\uCD60\uCD64\uCD6C\uCD6D\uCD6F\uCD71\uCD78\uCD88\uCD94\uCD95\uCD98\uCD9C\uCDA4\uCDA5\uCDA7\uCDA9\uCDB0\uCDC4\uCDCC\uCDD0\uCDE8\uCDEC\uCDF0\uCDF8\uCDF9\uCDFB\uCDFD\uCE04\uCE08\uCE0C\uCE14\uCE19\uCE20\uCE21\uCE24\uCE28\uCE30\uCE31\uCE33\uCE35',
      ],
      [
        'c441',
        '\uD6AB\uD6AD\uD6AE\uD6AF\uD6B1',
        7,
        '\uD6BA\uD6BC',
        7,
        '\uD6C6\uD6C7\uD6C9\uD6CA\uD6CB',
      ],
      [
        'c461',
        '\uD6CD\uD6CE\uD6CF\uD6D0\uD6D2\uD6D3\uD6D5\uD6D6\uD6D8\uD6DA',
        5,
        '\uD6E1\uD6E2\uD6E3\uD6E5\uD6E6\uD6E7\uD6E9',
        4,
      ],
      [
        'c481',
        '\uD6EE\uD6EF\uD6F1\uD6F2\uD6F3\uD6F4\uD6F6',
        5,
        '\uD6FE\uD6FF\uD701\uD702\uD703\uD705',
        11,
        '\uD712\uD713\uD714\uCE58\uCE59\uCE5C\uCE5F\uCE60\uCE61\uCE68\uCE69\uCE6B\uCE6D\uCE74\uCE75\uCE78\uCE7C\uCE84\uCE85\uCE87\uCE89\uCE90\uCE91\uCE94\uCE98\uCEA0\uCEA1\uCEA3\uCEA4\uCEA5\uCEAC\uCEAD\uCEC1\uCEE4\uCEE5\uCEE8\uCEEB\uCEEC\uCEF4\uCEF5\uCEF7\uCEF8\uCEF9\uCF00\uCF01\uCF04\uCF08\uCF10\uCF11\uCF13\uCF15\uCF1C\uCF20\uCF24\uCF2C\uCF2D\uCF2F\uCF30\uCF31\uCF38\uCF54\uCF55\uCF58\uCF5C\uCF64\uCF65\uCF67\uCF69\uCF70\uCF71\uCF74\uCF78\uCF80\uCF85\uCF8C\uCFA1\uCFA8\uCFB0\uCFC4\uCFE0\uCFE1\uCFE4\uCFE8\uCFF0\uCFF1\uCFF3\uCFF5\uCFFC\uD000\uD004\uD011\uD018\uD02D\uD034\uD035\uD038\uD03C',
      ],
      [
        'c541',
        '\uD715\uD716\uD717\uD71A\uD71B\uD71D\uD71E\uD71F\uD721',
        6,
        '\uD72A\uD72C\uD72E',
        5,
        '\uD736\uD737\uD739',
      ],
      [
        'c561',
        '\uD73A\uD73B\uD73D',
        6,
        '\uD745\uD746\uD748\uD74A',
        5,
        '\uD752\uD753\uD755\uD75A',
        4,
      ],
      [
        'c581',
        '\uD75F\uD762\uD764\uD766\uD767\uD768\uD76A\uD76B\uD76D\uD76E\uD76F\uD771\uD772\uD773\uD775',
        6,
        '\uD77E\uD77F\uD780\uD782',
        5,
        '\uD78A\uD78B\uD044\uD045\uD047\uD049\uD050\uD054\uD058\uD060\uD06C\uD06D\uD070\uD074\uD07C\uD07D\uD081\uD0A4\uD0A5\uD0A8\uD0AC\uD0B4\uD0B5\uD0B7\uD0B9\uD0C0\uD0C1\uD0C4\uD0C8\uD0C9\uD0D0\uD0D1\uD0D3\uD0D4\uD0D5\uD0DC\uD0DD\uD0E0\uD0E4\uD0EC\uD0ED\uD0EF\uD0F0\uD0F1\uD0F8\uD10D\uD130\uD131\uD134\uD138\uD13A\uD140\uD141\uD143\uD144\uD145\uD14C\uD14D\uD150\uD154\uD15C\uD15D\uD15F\uD161\uD168\uD16C\uD17C\uD184\uD188\uD1A0\uD1A1\uD1A4\uD1A8\uD1B0\uD1B1\uD1B3\uD1B5\uD1BA\uD1BC\uD1C0\uD1D8\uD1F4\uD1F8\uD207\uD209\uD210\uD22C\uD22D\uD230\uD234\uD23C\uD23D\uD23F\uD241\uD248\uD25C',
      ],
      ['c641', '\uD78D\uD78E\uD78F\uD791', 6, '\uD79A\uD79C\uD79E', 5],
      [
        'c6a1',
        '\uD264\uD280\uD281\uD284\uD288\uD290\uD291\uD295\uD29C\uD2A0\uD2A4\uD2AC\uD2B1\uD2B8\uD2B9\uD2BC\uD2BF\uD2C0\uD2C2\uD2C8\uD2C9\uD2CB\uD2D4\uD2D8\uD2DC\uD2E4\uD2E5\uD2F0\uD2F1\uD2F4\uD2F8\uD300\uD301\uD303\uD305\uD30C\uD30D\uD30E\uD310\uD314\uD316\uD31C\uD31D\uD31F\uD320\uD321\uD325\uD328\uD329\uD32C\uD330\uD338\uD339\uD33B\uD33C\uD33D\uD344\uD345\uD37C\uD37D\uD380\uD384\uD38C\uD38D\uD38F\uD390\uD391\uD398\uD399\uD39C\uD3A0\uD3A8\uD3A9\uD3AB\uD3AD\uD3B4\uD3B8\uD3BC\uD3C4\uD3C5\uD3C8\uD3C9\uD3D0\uD3D8\uD3E1\uD3E3\uD3EC\uD3ED\uD3F0\uD3F4\uD3FC\uD3FD\uD3FF\uD401',
      ],
      [
        'c7a1',
        '\uD408\uD41D\uD440\uD444\uD45C\uD460\uD464\uD46D\uD46F\uD478\uD479\uD47C\uD47F\uD480\uD482\uD488\uD489\uD48B\uD48D\uD494\uD4A9\uD4CC\uD4D0\uD4D4\uD4DC\uD4DF\uD4E8\uD4EC\uD4F0\uD4F8\uD4FB\uD4FD\uD504\uD508\uD50C\uD514\uD515\uD517\uD53C\uD53D\uD540\uD544\uD54C\uD54D\uD54F\uD551\uD558\uD559\uD55C\uD560\uD565\uD568\uD569\uD56B\uD56D\uD574\uD575\uD578\uD57C\uD584\uD585\uD587\uD588\uD589\uD590\uD5A5\uD5C8\uD5C9\uD5CC\uD5D0\uD5D2\uD5D8\uD5D9\uD5DB\uD5DD\uD5E4\uD5E5\uD5E8\uD5EC\uD5F4\uD5F5\uD5F7\uD5F9\uD600\uD601\uD604\uD608\uD610\uD611\uD613\uD614\uD615\uD61C\uD620',
      ],
      [
        'c8a1',
        '\uD624\uD62D\uD638\uD639\uD63C\uD640\uD645\uD648\uD649\uD64B\uD64D\uD651\uD654\uD655\uD658\uD65C\uD667\uD669\uD670\uD671\uD674\uD683\uD685\uD68C\uD68D\uD690\uD694\uD69D\uD69F\uD6A1\uD6A8\uD6AC\uD6B0\uD6B9\uD6BB\uD6C4\uD6C5\uD6C8\uD6CC\uD6D1\uD6D4\uD6D7\uD6D9\uD6E0\uD6E4\uD6E8\uD6F0\uD6F5\uD6FC\uD6FD\uD700\uD704\uD711\uD718\uD719\uD71C\uD720\uD728\uD729\uD72B\uD72D\uD734\uD735\uD738\uD73C\uD744\uD747\uD749\uD750\uD751\uD754\uD756\uD757\uD758\uD759\uD760\uD761\uD763\uD765\uD769\uD76C\uD770\uD774\uD77C\uD77D\uD781\uD788\uD789\uD78C\uD790\uD798\uD799\uD79B\uD79D',
      ],
      [
        'caa1',
        '\u4F3D\u4F73\u5047\u50F9\u52A0\u53EF\u5475\u54E5\u5609\u5AC1\u5BB6\u6687\u67B6\u67B7\u67EF\u6B4C\u73C2\u75C2\u7A3C\u82DB\u8304\u8857\u8888\u8A36\u8CC8\u8DCF\u8EFB\u8FE6\u99D5\u523B\u5374\u5404\u606A\u6164\u6BBC\u73CF\u811A\u89BA\u89D2\u95A3\u4F83\u520A\u58BE\u5978\u59E6\u5E72\u5E79\u61C7\u63C0\u6746\u67EC\u687F\u6F97\u764E\u770B\u78F5\u7A08\u7AFF\u7C21\u809D\u826E\u8271\u8AEB\u9593\u4E6B\u559D\u66F7\u6E34\u78A3\u7AED\u845B\u8910\u874E\u97A8\u52D8\u574E\u582A\u5D4C\u611F\u61BE\u6221\u6562\u67D1\u6A44\u6E1B\u7518\u75B3\u76E3\u77B0\u7D3A\u90AF\u9451\u9452\u9F95',
      ],
      [
        'cba1',
        '\u5323\u5CAC\u7532\u80DB\u9240\u9598\u525B\u5808\u59DC\u5CA1\u5D17\u5EB7\u5F3A\u5F4A\u6177\u6C5F\u757A\u7586\u7CE0\u7D73\u7DB1\u7F8C\u8154\u8221\u8591\u8941\u8B1B\u92FC\u964D\u9C47\u4ECB\u4EF7\u500B\u51F1\u584F\u6137\u613E\u6168\u6539\u69EA\u6F11\u75A5\u7686\u76D6\u7B87\u82A5\u84CB\uF900\u93A7\u958B\u5580\u5BA2\u5751\uF901\u7CB3\u7FB9\u91B5\u5028\u53BB\u5C45\u5DE8\u62D2\u636E\u64DA\u64E7\u6E20\u70AC\u795B\u8DDD\u8E1E\uF902\u907D\u9245\u92F8\u4E7E\u4EF6\u5065\u5DFE\u5EFA\u6106\u6957\u8171\u8654\u8E47\u9375\u9A2B\u4E5E\u5091\u6770\u6840\u5109\u528D\u5292\u6AA2',
      ],
      [
        'cca1',
        '\u77BC\u9210\u9ED4\u52AB\u602F\u8FF2\u5048\u61A9\u63ED\u64CA\u683C\u6A84\u6FC0\u8188\u89A1\u9694\u5805\u727D\u72AC\u7504\u7D79\u7E6D\u80A9\u898B\u8B74\u9063\u9D51\u6289\u6C7A\u6F54\u7D50\u7F3A\u8A23\u517C\u614A\u7B9D\u8B19\u9257\u938C\u4EAC\u4FD3\u501E\u50BE\u5106\u52C1\u52CD\u537F\u5770\u5883\u5E9A\u5F91\u6176\u61AC\u64CE\u656C\u666F\u66BB\u66F4\u6897\u6D87\u7085\u70F1\u749F\u74A5\u74CA\u75D9\u786C\u78EC\u7ADF\u7AF6\u7D45\u7D93\u8015\u803F\u811B\u8396\u8B66\u8F15\u9015\u93E1\u9803\u9838\u9A5A\u9BE8\u4FC2\u5553\u583A\u5951\u5B63\u5C46\u60B8\u6212\u6842\u68B0',
      ],
      [
        'cda1',
        '\u68E8\u6EAA\u754C\u7678\u78CE\u7A3D\u7CFB\u7E6B\u7E7C\u8A08\u8AA1\u8C3F\u968E\u9DC4\u53E4\u53E9\u544A\u5471\u56FA\u59D1\u5B64\u5C3B\u5EAB\u62F7\u6537\u6545\u6572\u66A0\u67AF\u69C1\u6CBD\u75FC\u7690\u777E\u7A3F\u7F94\u8003\u80A1\u818F\u82E6\u82FD\u83F0\u85C1\u8831\u88B4\u8AA5\uF903\u8F9C\u932E\u96C7\u9867\u9AD8\u9F13\u54ED\u659B\u66F2\u688F\u7A40\u8C37\u9D60\u56F0\u5764\u5D11\u6606\u68B1\u68CD\u6EFE\u7428\u889E\u9BE4\u6C68\uF904\u9AA8\u4F9B\u516C\u5171\u529F\u5B54\u5DE5\u6050\u606D\u62F1\u63A7\u653B\u73D9\u7A7A\u86A3\u8CA2\u978F\u4E32\u5BE1\u6208\u679C\u74DC',
      ],
      [
        'cea1',
        '\u79D1\u83D3\u8A87\u8AB2\u8DE8\u904E\u934B\u9846\u5ED3\u69E8\u85FF\u90ED\uF905\u51A0\u5B98\u5BEC\u6163\u68FA\u6B3E\u704C\u742F\u74D8\u7BA1\u7F50\u83C5\u89C0\u8CAB\u95DC\u9928\u522E\u605D\u62EC\u9002\u4F8A\u5149\u5321\u58D9\u5EE3\u66E0\u6D38\u709A\u72C2\u73D6\u7B50\u80F1\u945B\u5366\u639B\u7F6B\u4E56\u5080\u584A\u58DE\u602A\u6127\u62D0\u69D0\u9B41\u5B8F\u7D18\u80B1\u8F5F\u4EA4\u50D1\u54AC\u55AC\u5B0C\u5DA0\u5DE7\u652A\u654E\u6821\u6A4B\u72E1\u768E\u77EF\u7D5E\u7FF9\u81A0\u854E\u86DF\u8F03\u8F4E\u90CA\u9903\u9A55\u9BAB\u4E18\u4E45\u4E5D\u4EC7\u4FF1\u5177\u52FE',
      ],
      [
        'cfa1',
        '\u5340\u53E3\u53E5\u548E\u5614\u5775\u57A2\u5BC7\u5D87\u5ED0\u61FC\u62D8\u6551\u67B8\u67E9\u69CB\u6B50\u6BC6\u6BEC\u6C42\u6E9D\u7078\u72D7\u7396\u7403\u77BF\u77E9\u7A76\u7D7F\u8009\u81FC\u8205\u820A\u82DF\u8862\u8B33\u8CFC\u8EC0\u9011\u90B1\u9264\u92B6\u99D2\u9A45\u9CE9\u9DD7\u9F9C\u570B\u5C40\u83CA\u97A0\u97AB\u9EB4\u541B\u7A98\u7FA4\u88D9\u8ECD\u90E1\u5800\u5C48\u6398\u7A9F\u5BAE\u5F13\u7A79\u7AAE\u828E\u8EAC\u5026\u5238\u52F8\u5377\u5708\u62F3\u6372\u6B0A\u6DC3\u7737\u53A5\u7357\u8568\u8E76\u95D5\u673A\u6AC3\u6F70\u8A6D\u8ECC\u994B\uF906\u6677\u6B78\u8CB4',
      ],
      [
        'd0a1',
        '\u9B3C\uF907\u53EB\u572D\u594E\u63C6\u69FB\u73EA\u7845\u7ABA\u7AC5\u7CFE\u8475\u898F\u8D73\u9035\u95A8\u52FB\u5747\u7547\u7B60\u83CC\u921E\uF908\u6A58\u514B\u524B\u5287\u621F\u68D8\u6975\u9699\u50C5\u52A4\u52E4\u61C3\u65A4\u6839\u69FF\u747E\u7B4B\u82B9\u83EB\u89B2\u8B39\u8FD1\u9949\uF909\u4ECA\u5997\u64D2\u6611\u6A8E\u7434\u7981\u79BD\u82A9\u887E\u887F\u895F\uF90A\u9326\u4F0B\u53CA\u6025\u6271\u6C72\u7D1A\u7D66\u4E98\u5162\u77DC\u80AF\u4F01\u4F0E\u5176\u5180\u55DC\u5668\u573B\u57FA\u57FC\u5914\u5947\u5993\u5BC4\u5C90\u5D0E\u5DF1\u5E7E\u5FCC\u6280\u65D7\u65E3',
      ],
      [
        'd1a1',
        '\u671E\u671F\u675E\u68CB\u68C4\u6A5F\u6B3A\u6C23\u6C7D\u6C82\u6DC7\u7398\u7426\u742A\u7482\u74A3\u7578\u757F\u7881\u78EF\u7941\u7947\u7948\u797A\u7B95\u7D00\u7DBA\u7F88\u8006\u802D\u808C\u8A18\u8B4F\u8C48\u8D77\u9321\u9324\u98E2\u9951\u9A0E\u9A0F\u9A65\u9E92\u7DCA\u4F76\u5409\u62EE\u6854\u91D1\u55AB\u513A\uF90B\uF90C\u5A1C\u61E6\uF90D\u62CF\u62FF\uF90E',
        5,
        '\u90A3\uF914',
        4,
        '\u8AFE\uF919\uF91A\uF91B\uF91C\u6696\uF91D\u7156\uF91E\uF91F\u96E3\uF920\u634F\u637A\u5357\uF921\u678F\u6960\u6E73\uF922\u7537\uF923\uF924\uF925',
      ],
      [
        'd2a1',
        '\u7D0D\uF926\uF927\u8872\u56CA\u5A18\uF928',
        4,
        '\u4E43\uF92D\u5167\u5948\u67F0\u8010\uF92E\u5973\u5E74\u649A\u79CA\u5FF5\u606C\u62C8\u637B\u5BE7\u5BD7\u52AA\uF92F\u5974\u5F29\u6012\uF930\uF931\uF932\u7459\uF933',
        5,
        '\u99D1\uF939',
        10,
        '\u6FC3\uF944\uF945\u81BF\u8FB2\u60F1\uF946\uF947\u8166\uF948\uF949\u5C3F\uF94A',
        7,
        '\u5AE9\u8A25\u677B\u7D10\uF952',
        5,
        '\u80FD\uF958\uF959\u5C3C\u6CE5\u533F\u6EBA\u591A\u8336',
      ],
      [
        'd3a1',
        '\u4E39\u4EB6\u4F46\u55AE\u5718\u58C7\u5F56\u65B7\u65E6\u6A80\u6BB5\u6E4D\u77ED\u7AEF\u7C1E\u7DDE\u86CB\u8892\u9132\u935B\u64BB\u6FBE\u737A\u75B8\u9054\u5556\u574D\u61BA\u64D4\u66C7\u6DE1\u6E5B\u6F6D\u6FB9\u75F0\u8043\u81BD\u8541\u8983\u8AC7\u8B5A\u931F\u6C93\u7553\u7B54\u8E0F\u905D\u5510\u5802\u5858\u5E62\u6207\u649E\u68E0\u7576\u7CD6\u87B3\u9EE8\u4EE3\u5788\u576E\u5927\u5C0D\u5CB1\u5E36\u5F85\u6234\u64E1\u73B3\u81FA\u888B\u8CB8\u968A\u9EDB\u5B85\u5FB7\u60B3\u5012\u5200\u5230\u5716\u5835\u5857\u5C0E\u5C60\u5CF6\u5D8B\u5EA6\u5F92\u60BC\u6311\u6389\u6417\u6843',
      ],
      [
        'd4a1',
        '\u68F9\u6AC2\u6DD8\u6E21\u6ED4\u6FE4\u71FE\u76DC\u7779\u79B1\u7A3B\u8404\u89A9\u8CED\u8DF3\u8E48\u9003\u9014\u9053\u90FD\u934D\u9676\u97DC\u6BD2\u7006\u7258\u72A2\u7368\u7763\u79BF\u7BE4\u7E9B\u8B80\u58A9\u60C7\u6566\u65FD\u66BE\u6C8C\u711E\u71C9\u8C5A\u9813\u4E6D\u7A81\u4EDD\u51AC\u51CD\u52D5\u540C\u61A7\u6771\u6850\u68DF\u6D1E\u6F7C\u75BC\u77B3\u7AE5\u80F4\u8463\u9285\u515C\u6597\u675C\u6793\u75D8\u7AC7\u8373\uF95A\u8C46\u9017\u982D\u5C6F\u81C0\u829A\u9041\u906F\u920D\u5F97\u5D9D\u6A59\u71C8\u767B\u7B49\u85E4\u8B04\u9127\u9A30\u5587\u61F6\uF95B\u7669\u7F85',
      ],
      [
        'd5a1',
        '\u863F\u87BA\u88F8\u908F\uF95C\u6D1B\u70D9\u73DE\u7D61\u843D\uF95D\u916A\u99F1\uF95E\u4E82\u5375\u6B04\u6B12\u703E\u721B\u862D\u9E1E\u524C\u8FA3\u5D50\u64E5\u652C\u6B16\u6FEB\u7C43\u7E9C\u85CD\u8964\u89BD\u62C9\u81D8\u881F\u5ECA\u6717\u6D6A\u72FC\u7405\u746F\u8782\u90DE\u4F86\u5D0D\u5FA0\u840A\u51B7\u63A0\u7565\u4EAE\u5006\u5169\u51C9\u6881\u6A11\u7CAE\u7CB1\u7CE7\u826F\u8AD2\u8F1B\u91CF\u4FB6\u5137\u52F5\u5442\u5EEC\u616E\u623E\u65C5\u6ADA\u6FFE\u792A\u85DC\u8823\u95AD\u9A62\u9A6A\u9E97\u9ECE\u529B\u66C6\u6B77\u701D\u792B\u8F62\u9742\u6190\u6200\u6523\u6F23',
      ],
      [
        'd6a1',
        '\u7149\u7489\u7DF4\u806F\u84EE\u8F26\u9023\u934A\u51BD\u5217\u52A3\u6D0C\u70C8\u88C2\u5EC9\u6582\u6BAE\u6FC2\u7C3E\u7375\u4EE4\u4F36\u56F9\uF95F\u5CBA\u5DBA\u601C\u73B2\u7B2D\u7F9A\u7FCE\u8046\u901E\u9234\u96F6\u9748\u9818\u9F61\u4F8B\u6FA7\u79AE\u91B4\u96B7\u52DE\uF960\u6488\u64C4\u6AD3\u6F5E\u7018\u7210\u76E7\u8001\u8606\u865C\u8DEF\u8F05\u9732\u9B6F\u9DFA\u9E75\u788C\u797F\u7DA0\u83C9\u9304\u9E7F\u9E93\u8AD6\u58DF\u5F04\u6727\u7027\u74CF\u7C60\u807E\u5121\u7028\u7262\u78CA\u8CC2\u8CDA\u8CF4\u96F7\u4E86\u50DA\u5BEE\u5ED6\u6599\u71CE\u7642\u77AD\u804A\u84FC',
      ],
      [
        'd7a1',
        '\u907C\u9B27\u9F8D\u58D8\u5A41\u5C62\u6A13\u6DDA\u6F0F\u763B\u7D2F\u7E37\u851E\u8938\u93E4\u964B\u5289\u65D2\u67F3\u69B4\u6D41\u6E9C\u700F\u7409\u7460\u7559\u7624\u786B\u8B2C\u985E\u516D\u622E\u9678\u4F96\u502B\u5D19\u6DEA\u7DB8\u8F2A\u5F8B\u6144\u6817\uF961\u9686\u52D2\u808B\u51DC\u51CC\u695E\u7A1C\u7DBE\u83F1\u9675\u4FDA\u5229\u5398\u540F\u550E\u5C65\u60A7\u674E\u68A8\u6D6C\u7281\u72F8\u7406\u7483\uF962\u75E2\u7C6C\u7F79\u7FB8\u8389\u88CF\u88E1\u91CC\u91D0\u96E2\u9BC9\u541D\u6F7E\u71D0\u7498\u85FA\u8EAA\u96A3\u9C57\u9E9F\u6797\u6DCB\u7433\u81E8\u9716\u782C',
      ],
      [
        'd8a1',
        '\u7ACB\u7B20\u7C92\u6469\u746A\u75F2\u78BC\u78E8\u99AC\u9B54\u9EBB\u5BDE\u5E55\u6F20\u819C\u83AB\u9088\u4E07\u534D\u5A29\u5DD2\u5F4E\u6162\u633D\u6669\u66FC\u6EFF\u6F2B\u7063\u779E\u842C\u8513\u883B\u8F13\u9945\u9C3B\u551C\u62B9\u672B\u6CAB\u8309\u896A\u977A\u4EA1\u5984\u5FD8\u5FD9\u671B\u7DB2\u7F54\u8292\u832B\u83BD\u8F1E\u9099\u57CB\u59B9\u5A92\u5BD0\u6627\u679A\u6885\u6BCF\u7164\u7F75\u8CB7\u8CE3\u9081\u9B45\u8108\u8C8A\u964C\u9A40\u9EA5\u5B5F\u6C13\u731B\u76F2\u76DF\u840C\u51AA\u8993\u514D\u5195\u52C9\u68C9\u6C94\u7704\u7720\u7DBF\u7DEC\u9762\u9EB5\u6EC5',
      ],
      [
        'd9a1',
        '\u8511\u51A5\u540D\u547D\u660E\u669D\u6927\u6E9F\u76BF\u7791\u8317\u84C2\u879F\u9169\u9298\u9CF4\u8882\u4FAE\u5192\u52DF\u59C6\u5E3D\u6155\u6478\u6479\u66AE\u67D0\u6A21\u6BCD\u6BDB\u725F\u7261\u7441\u7738\u77DB\u8017\u82BC\u8305\u8B00\u8B28\u8C8C\u6728\u6C90\u7267\u76EE\u7766\u7A46\u9DA9\u6B7F\u6C92\u5922\u6726\u8499\u536F\u5893\u5999\u5EDF\u63CF\u6634\u6773\u6E3A\u732B\u7AD7\u82D7\u9328\u52D9\u5DEB\u61AE\u61CB\u620A\u62C7\u64AB\u65E0\u6959\u6B66\u6BCB\u7121\u73F7\u755D\u7E46\u821E\u8302\u856A\u8AA3\u8CBF\u9727\u9D61\u58A8\u9ED8\u5011\u520E\u543B\u554F\u6587',
      ],
      [
        'daa1',
        '\u6C76\u7D0A\u7D0B\u805E\u868A\u9580\u96EF\u52FF\u6C95\u7269\u5473\u5A9A\u5C3E\u5D4B\u5F4C\u5FAE\u672A\u68B6\u6963\u6E3C\u6E44\u7709\u7C73\u7F8E\u8587\u8B0E\u8FF7\u9761\u9EF4\u5CB7\u60B6\u610D\u61AB\u654F\u65FB\u65FC\u6C11\u6CEF\u739F\u73C9\u7DE1\u9594\u5BC6\u871C\u8B10\u525D\u535A\u62CD\u640F\u64B2\u6734\u6A38\u6CCA\u73C0\u749E\u7B94\u7C95\u7E1B\u818A\u8236\u8584\u8FEB\u96F9\u99C1\u4F34\u534A\u53CD\u53DB\u62CC\u642C\u6500\u6591\u69C3\u6CEE\u6F58\u73ED\u7554\u7622\u76E4\u76FC\u78D0\u78FB\u792C\u7D46\u822C\u87E0\u8FD4\u9812\u98EF\u52C3\u62D4\u64A5\u6E24\u6F51',
      ],
      [
        'dba1',
        '\u767C\u8DCB\u91B1\u9262\u9AEE\u9B43\u5023\u508D\u574A\u59A8\u5C28\u5E47\u5F77\u623F\u653E\u65B9\u65C1\u6609\u678B\u699C\u6EC2\u78C5\u7D21\u80AA\u8180\u822B\u82B3\u84A1\u868C\u8A2A\u8B17\u90A6\u9632\u9F90\u500D\u4FF3\uF963\u57F9\u5F98\u62DC\u6392\u676F\u6E43\u7119\u76C3\u80CC\u80DA\u88F4\u88F5\u8919\u8CE0\u8F29\u914D\u966A\u4F2F\u4F70\u5E1B\u67CF\u6822\u767D\u767E\u9B44\u5E61\u6A0A\u7169\u71D4\u756A\uF964\u7E41\u8543\u85E9\u98DC\u4F10\u7B4F\u7F70\u95A5\u51E1\u5E06\u68B5\u6C3E\u6C4E\u6CDB\u72AF\u7BC4\u8303\u6CD5\u743A\u50FB\u5288\u58C1\u64D8\u6A97\u74A7\u7656',
      ],
      [
        'dca1',
        '\u78A7\u8617\u95E2\u9739\uF965\u535E\u5F01\u8B8A\u8FA8\u8FAF\u908A\u5225\u77A5\u9C49\u9F08\u4E19\u5002\u5175\u5C5B\u5E77\u661E\u663A\u67C4\u68C5\u70B3\u7501\u75C5\u79C9\u7ADD\u8F27\u9920\u9A08\u4FDD\u5821\u5831\u5BF6\u666E\u6B65\u6D11\u6E7A\u6F7D\u73E4\u752B\u83E9\u88DC\u8913\u8B5C\u8F14\u4F0F\u50D5\u5310\u535C\u5B93\u5FA9\u670D\u798F\u8179\u832F\u8514\u8907\u8986\u8F39\u8F3B\u99A5\u9C12\u672C\u4E76\u4FF8\u5949\u5C01\u5CEF\u5CF0\u6367\u68D2\u70FD\u71A2\u742B\u7E2B\u84EC\u8702\u9022\u92D2\u9CF3\u4E0D\u4ED8\u4FEF\u5085\u5256\u526F\u5426\u5490\u57E0\u592B\u5A66',
      ],
      [
        'dda1',
        '\u5B5A\u5B75\u5BCC\u5E9C\uF966\u6276\u6577\u65A7\u6D6E\u6EA5\u7236\u7B26\u7C3F\u7F36\u8150\u8151\u819A\u8240\u8299\u83A9\u8A03\u8CA0\u8CE6\u8CFB\u8D74\u8DBA\u90E8\u91DC\u961C\u9644\u99D9\u9CE7\u5317\u5206\u5429\u5674\u58B3\u5954\u596E\u5FFF\u61A4\u626E\u6610\u6C7E\u711A\u76C6\u7C89\u7CDE\u7D1B\u82AC\u8CC1\u96F0\uF967\u4F5B\u5F17\u5F7F\u62C2\u5D29\u670B\u68DA\u787C\u7E43\u9D6C\u4E15\u5099\u5315\u532A\u5351\u5983\u5A62\u5E87\u60B2\u618A\u6249\u6279\u6590\u6787\u69A7\u6BD4\u6BD6\u6BD7\u6BD8\u6CB8\uF968\u7435\u75FA\u7812\u7891\u79D5\u79D8\u7C83\u7DCB\u7FE1\u80A5',
      ],
      [
        'dea1',
        '\u813E\u81C2\u83F2\u871A\u88E8\u8AB9\u8B6C\u8CBB\u9119\u975E\u98DB\u9F3B\u56AC\u5B2A\u5F6C\u658C\u6AB3\u6BAF\u6D5C\u6FF1\u7015\u725D\u73AD\u8CA7\u8CD3\u983B\u6191\u6C37\u8058\u9A01\u4E4D\u4E8B\u4E9B\u4ED5\u4F3A\u4F3C\u4F7F\u4FDF\u50FF\u53F2\u53F8\u5506\u55E3\u56DB\u58EB\u5962\u5A11\u5BEB\u5BFA\u5C04\u5DF3\u5E2B\u5F99\u601D\u6368\u659C\u65AF\u67F6\u67FB\u68AD\u6B7B\u6C99\u6CD7\u6E23\u7009\u7345\u7802\u793E\u7940\u7960\u79C1\u7BE9\u7D17\u7D72\u8086\u820D\u838E\u84D1\u86C7\u88DF\u8A50\u8A5E\u8B1D\u8CDC\u8D66\u8FAD\u90AA\u98FC\u99DF\u9E9D\u524A\uF969\u6714\uF96A',
      ],
      [
        'dfa1',
        '\u5098\u522A\u5C71\u6563\u6C55\u73CA\u7523\u759D\u7B97\u849C\u9178\u9730\u4E77\u6492\u6BBA\u715E\u85A9\u4E09\uF96B\u6749\u68EE\u6E17\u829F\u8518\u886B\u63F7\u6F81\u9212\u98AF\u4E0A\u50B7\u50CF\u511F\u5546\u55AA\u5617\u5B40\u5C19\u5CE0\u5E38\u5E8A\u5EA0\u5EC2\u60F3\u6851\u6A61\u6E58\u723D\u7240\u72C0\u76F8\u7965\u7BB1\u7FD4\u88F3\u89F4\u8A73\u8C61\u8CDE\u971C\u585E\u74BD\u8CFD\u55C7\uF96C\u7A61\u7D22\u8272\u7272\u751F\u7525\uF96D\u7B19\u5885\u58FB\u5DBC\u5E8F\u5EB6\u5F90\u6055\u6292\u637F\u654D\u6691\u66D9\u66F8\u6816\u68F2\u7280\u745E\u7B6E\u7D6E\u7DD6\u7F72',
      ],
      [
        'e0a1',
        '\u80E5\u8212\u85AF\u897F\u8A93\u901D\u92E4\u9ECD\u9F20\u5915\u596D\u5E2D\u60DC\u6614\u6673\u6790\u6C50\u6DC5\u6F5F\u77F3\u78A9\u84C6\u91CB\u932B\u4ED9\u50CA\u5148\u5584\u5B0B\u5BA3\u6247\u657E\u65CB\u6E32\u717D\u7401\u7444\u7487\u74BF\u766C\u79AA\u7DDA\u7E55\u7FA8\u817A\u81B3\u8239\u861A\u87EC\u8A75\u8DE3\u9078\u9291\u9425\u994D\u9BAE\u5368\u5C51\u6954\u6CC4\u6D29\u6E2B\u820C\u859B\u893B\u8A2D\u8AAA\u96EA\u9F67\u5261\u66B9\u6BB2\u7E96\u87FE\u8D0D\u9583\u965D\u651D\u6D89\u71EE\uF96E\u57CE\u59D3\u5BAC\u6027\u60FA\u6210\u661F\u665F\u7329\u73F9\u76DB\u7701\u7B6C',
      ],
      [
        'e1a1',
        '\u8056\u8072\u8165\u8AA0\u9192\u4E16\u52E2\u6B72\u6D17\u7A05\u7B39\u7D30\uF96F\u8CB0\u53EC\u562F\u5851\u5BB5\u5C0F\u5C11\u5DE2\u6240\u6383\u6414\u662D\u68B3\u6CBC\u6D88\u6EAF\u701F\u70A4\u71D2\u7526\u758F\u758E\u7619\u7B11\u7BE0\u7C2B\u7D20\u7D39\u852C\u856D\u8607\u8A34\u900D\u9061\u90B5\u92B7\u97F6\u9A37\u4FD7\u5C6C\u675F\u6D91\u7C9F\u7E8C\u8B16\u8D16\u901F\u5B6B\u5DFD\u640D\u84C0\u905C\u98E1\u7387\u5B8B\u609A\u677E\u6DDE\u8A1F\u8AA6\u9001\u980C\u5237\uF970\u7051\u788E\u9396\u8870\u91D7\u4FEE\u53D7\u55FD\u56DA\u5782\u58FD\u5AC2\u5B88\u5CAB\u5CC0\u5E25\u6101',
      ],
      [
        'e2a1',
        '\u620D\u624B\u6388\u641C\u6536\u6578\u6A39\u6B8A\u6C34\u6D19\u6F31\u71E7\u72E9\u7378\u7407\u74B2\u7626\u7761\u79C0\u7A57\u7AEA\u7CB9\u7D8F\u7DAC\u7E61\u7F9E\u8129\u8331\u8490\u84DA\u85EA\u8896\u8AB0\u8B90\u8F38\u9042\u9083\u916C\u9296\u92B9\u968B\u96A7\u96A8\u96D6\u9700\u9808\u9996\u9AD3\u9B1A\u53D4\u587E\u5919\u5B70\u5BBF\u6DD1\u6F5A\u719F\u7421\u74B9\u8085\u83FD\u5DE1\u5F87\u5FAA\u6042\u65EC\u6812\u696F\u6A53\u6B89\u6D35\u6DF3\u73E3\u76FE\u77AC\u7B4D\u7D14\u8123\u821C\u8340\u84F4\u8563\u8A62\u8AC4\u9187\u931E\u9806\u99B4\u620C\u8853\u8FF0\u9265\u5D07\u5D27',
      ],
      [
        'e3a1',
        '\u5D69\u745F\u819D\u8768\u6FD5\u62FE\u7FD2\u8936\u8972\u4E1E\u4E58\u50E7\u52DD\u5347\u627F\u6607\u7E69\u8805\u965E\u4F8D\u5319\u5636\u59CB\u5AA4\u5C38\u5C4E\u5C4D\u5E02\u5F11\u6043\u65BD\u662F\u6642\u67BE\u67F4\u731C\u77E2\u793A\u7FC5\u8494\u84CD\u8996\u8A66\u8A69\u8AE1\u8C55\u8C7A\u57F4\u5BD4\u5F0F\u606F\u62ED\u690D\u6B96\u6E5C\u7184\u7BD2\u8755\u8B58\u8EFE\u98DF\u98FE\u4F38\u4F81\u4FE1\u547B\u5A20\u5BB8\u613C\u65B0\u6668\u71FC\u7533\u795E\u7D33\u814E\u81E3\u8398\u85AA\u85CE\u8703\u8A0A\u8EAB\u8F9B\uF971\u8FC5\u5931\u5BA4\u5BE6\u6089\u5BE9\u5C0B\u5FC3\u6C81',
      ],
      [
        'e4a1',
        '\uF972\u6DF1\u700B\u751A\u82AF\u8AF6\u4EC0\u5341\uF973\u96D9\u6C0F\u4E9E\u4FC4\u5152\u555E\u5A25\u5CE8\u6211\u7259\u82BD\u83AA\u86FE\u8859\u8A1D\u963F\u96C5\u9913\u9D09\u9D5D\u580A\u5CB3\u5DBD\u5E44\u60E1\u6115\u63E1\u6A02\u6E25\u9102\u9354\u984E\u9C10\u9F77\u5B89\u5CB8\u6309\u664F\u6848\u773C\u96C1\u978D\u9854\u9B9F\u65A1\u8B01\u8ECB\u95BC\u5535\u5CA9\u5DD6\u5EB5\u6697\u764C\u83F4\u95C7\u58D3\u62BC\u72CE\u9D28\u4EF0\u592E\u600F\u663B\u6B83\u79E7\u9D26\u5393\u54C0\u57C3\u5D16\u611B\u66D6\u6DAF\u788D\u827E\u9698\u9744\u5384\u627C\u6396\u6DB2\u7E0A\u814B\u984D',
      ],
      [
        'e5a1',
        '\u6AFB\u7F4C\u9DAF\u9E1A\u4E5F\u503B\u51B6\u591C\u60F9\u63F6\u6930\u723A\u8036\uF974\u91CE\u5F31\uF975\uF976\u7D04\u82E5\u846F\u84BB\u85E5\u8E8D\uF977\u4F6F\uF978\uF979\u58E4\u5B43\u6059\u63DA\u6518\u656D\u6698\uF97A\u694A\u6A23\u6D0B\u7001\u716C\u75D2\u760D\u79B3\u7A70\uF97B\u7F8A\uF97C\u8944\uF97D\u8B93\u91C0\u967D\uF97E\u990A\u5704\u5FA1\u65BC\u6F01\u7600\u79A6\u8A9E\u99AD\u9B5A\u9F6C\u5104\u61B6\u6291\u6A8D\u81C6\u5043\u5830\u5F66\u7109\u8A00\u8AFA\u5B7C\u8616\u4FFA\u513C\u56B4\u5944\u63A9\u6DF9\u5DAA\u696D\u5186\u4E88\u4F59\uF97F\uF980\uF981\u5982\uF982',
      ],
      [
        'e6a1',
        '\uF983\u6B5F\u6C5D\uF984\u74B5\u7916\uF985\u8207\u8245\u8339\u8F3F\u8F5D\uF986\u9918\uF987\uF988\uF989\u4EA6\uF98A\u57DF\u5F79\u6613\uF98B\uF98C\u75AB\u7E79\u8B6F\uF98D\u9006\u9A5B\u56A5\u5827\u59F8\u5A1F\u5BB4\uF98E\u5EF6\uF98F\uF990\u6350\u633B\uF991\u693D\u6C87\u6CBF\u6D8E\u6D93\u6DF5\u6F14\uF992\u70DF\u7136\u7159\uF993\u71C3\u71D5\uF994\u784F\u786F\uF995\u7B75\u7DE3\uF996\u7E2F\uF997\u884D\u8EDF\uF998\uF999\uF99A\u925B\uF99B\u9CF6\uF99C\uF99D\uF99E\u6085\u6D85\uF99F\u71B1\uF9A0\uF9A1\u95B1\u53AD\uF9A2\uF9A3\uF9A4\u67D3\uF9A5\u708E\u7130\u7430\u8276\u82D2',
      ],
      [
        'e7a1',
        '\uF9A6\u95BB\u9AE5\u9E7D\u66C4\uF9A7\u71C1\u8449\uF9A8\uF9A9\u584B\uF9AA\uF9AB\u5DB8\u5F71\uF9AC\u6620\u668E\u6979\u69AE\u6C38\u6CF3\u6E36\u6F41\u6FDA\u701B\u702F\u7150\u71DF\u7370\uF9AD\u745B\uF9AE\u74D4\u76C8\u7A4E\u7E93\uF9AF\uF9B0\u82F1\u8A60\u8FCE\uF9B1\u9348\uF9B2\u9719\uF9B3\uF9B4\u4E42\u502A\uF9B5\u5208\u53E1\u66F3\u6C6D\u6FCA\u730A\u777F\u7A62\u82AE\u85DD\u8602\uF9B6\u88D4\u8A63\u8B7D\u8C6B\uF9B7\u92B3\uF9B8\u9713\u9810\u4E94\u4F0D\u4FC9\u50B2\u5348\u543E\u5433\u55DA\u5862\u58BA\u5967\u5A1B\u5BE4\u609F\uF9B9\u61CA\u6556\u65FF\u6664\u68A7\u6C5A\u6FB3',
      ],
      [
        'e8a1',
        '\u70CF\u71AC\u7352\u7B7D\u8708\u8AA4\u9C32\u9F07\u5C4B\u6C83\u7344\u7389\u923A\u6EAB\u7465\u761F\u7A69\u7E15\u860A\u5140\u58C5\u64C1\u74EE\u7515\u7670\u7FC1\u9095\u96CD\u9954\u6E26\u74E6\u7AA9\u7AAA\u81E5\u86D9\u8778\u8A1B\u5A49\u5B8C\u5B9B\u68A1\u6900\u6D63\u73A9\u7413\u742C\u7897\u7DE9\u7FEB\u8118\u8155\u839E\u8C4C\u962E\u9811\u66F0\u5F80\u65FA\u6789\u6C6A\u738B\u502D\u5A03\u6B6A\u77EE\u5916\u5D6C\u5DCD\u7325\u754F\uF9BA\uF9BB\u50E5\u51F9\u582F\u592D\u5996\u59DA\u5BE5\uF9BC\uF9BD\u5DA2\u62D7\u6416\u6493\u64FE\uF9BE\u66DC\uF9BF\u6A48\uF9C0\u71FF\u7464\uF9C1',
      ],
      [
        'e9a1',
        '\u7A88\u7AAF\u7E47\u7E5E\u8000\u8170\uF9C2\u87EF\u8981\u8B20\u9059\uF9C3\u9080\u9952\u617E\u6B32\u6D74\u7E1F\u8925\u8FB1\u4FD1\u50AD\u5197\u52C7\u57C7\u5889\u5BB9\u5EB8\u6142\u6995\u6D8C\u6E67\u6EB6\u7194\u7462\u7528\u752C\u8073\u8338\u84C9\u8E0A\u9394\u93DE\uF9C4\u4E8E\u4F51\u5076\u512A\u53C8\u53CB\u53F3\u5B87\u5BD3\u5C24\u611A\u6182\u65F4\u725B\u7397\u7440\u76C2\u7950\u7991\u79B9\u7D06\u7FBD\u828B\u85D5\u865E\u8FC2\u9047\u90F5\u91EA\u9685\u96E8\u96E9\u52D6\u5F67\u65ED\u6631\u682F\u715C\u7A36\u90C1\u980A\u4E91\uF9C5\u6A52\u6B9E\u6F90\u7189\u8018\u82B8\u8553',
      ],
      [
        'eaa1',
        '\u904B\u9695\u96F2\u97FB\u851A\u9B31\u4E90\u718A\u96C4\u5143\u539F\u54E1\u5713\u5712\u57A3\u5A9B\u5AC4\u5BC3\u6028\u613F\u63F4\u6C85\u6D39\u6E72\u6E90\u7230\u733F\u7457\u82D1\u8881\u8F45\u9060\uF9C6\u9662\u9858\u9D1B\u6708\u8D8A\u925E\u4F4D\u5049\u50DE\u5371\u570D\u59D4\u5A01\u5C09\u6170\u6690\u6E2D\u7232\u744B\u7DEF\u80C3\u840E\u8466\u853F\u875F\u885B\u8918\u8B02\u9055\u97CB\u9B4F\u4E73\u4F91\u5112\u516A\uF9C7\u552F\u55A9\u5B7A\u5BA5\u5E7C\u5E7D\u5EBE\u60A0\u60DF\u6108\u6109\u63C4\u6538\u6709\uF9C8\u67D4\u67DA\uF9C9\u6961\u6962\u6CB9\u6D27\uF9CA\u6E38\uF9CB',
      ],
      [
        'eba1',
        '\u6FE1\u7336\u7337\uF9CC\u745C\u7531\uF9CD\u7652\uF9CE\uF9CF\u7DAD\u81FE\u8438\u88D5\u8A98\u8ADB\u8AED\u8E30\u8E42\u904A\u903E\u907A\u9149\u91C9\u936E\uF9D0\uF9D1\u5809\uF9D2\u6BD3\u8089\u80B2\uF9D3\uF9D4\u5141\u596B\u5C39\uF9D5\uF9D6\u6F64\u73A7\u80E4\u8D07\uF9D7\u9217\u958F\uF9D8\uF9D9\uF9DA\uF9DB\u807F\u620E\u701C\u7D68\u878D\uF9DC\u57A0\u6069\u6147\u6BB7\u8ABE\u9280\u96B1\u4E59\u541F\u6DEB\u852D\u9670\u97F3\u98EE\u63D6\u6CE3\u9091\u51DD\u61C9\u81BA\u9DF9\u4F9D\u501A\u5100\u5B9C\u610F\u61FF\u64EC\u6905\u6BC5\u7591\u77E3\u7FA9\u8264\u858F\u87FB\u8863\u8ABC',
      ],
      [
        'eca1',
        '\u8B70\u91AB\u4E8C\u4EE5\u4F0A\uF9DD\uF9DE\u5937\u59E8\uF9DF\u5DF2\u5F1B\u5F5B\u6021\uF9E0\uF9E1\uF9E2\uF9E3\u723E\u73E5\uF9E4\u7570\u75CD\uF9E5\u79FB\uF9E6\u800C\u8033\u8084\u82E1\u8351\uF9E7\uF9E8\u8CBD\u8CB3\u9087\uF9E9\uF9EA\u98F4\u990C\uF9EB\uF9EC\u7037\u76CA\u7FCA\u7FCC\u7FFC\u8B1A\u4EBA\u4EC1\u5203\u5370\uF9ED\u54BD\u56E0\u59FB\u5BC5\u5F15\u5FCD\u6E6E\uF9EE\uF9EF\u7D6A\u8335\uF9F0\u8693\u8A8D\uF9F1\u976D\u9777\uF9F2\uF9F3\u4E00\u4F5A\u4F7E\u58F9\u65E5\u6EA2\u9038\u93B0\u99B9\u4EFB\u58EC\u598A\u59D9\u6041\uF9F4\uF9F5\u7A14\uF9F6\u834F\u8CC3\u5165\u5344',
      ],
      [
        'eda1',
        '\uF9F7\uF9F8\uF9F9\u4ECD\u5269\u5B55\u82BF\u4ED4\u523A\u54A8\u59C9\u59FF\u5B50\u5B57\u5B5C\u6063\u6148\u6ECB\u7099\u716E\u7386\u74F7\u75B5\u78C1\u7D2B\u8005\u81EA\u8328\u8517\u85C9\u8AEE\u8CC7\u96CC\u4F5C\u52FA\u56BC\u65AB\u6628\u707C\u70B8\u7235\u7DBD\u828D\u914C\u96C0\u9D72\u5B71\u68E7\u6B98\u6F7A\u76DE\u5C91\u66AB\u6F5B\u7BB4\u7C2A\u8836\u96DC\u4E08\u4ED7\u5320\u5834\u58BB\u58EF\u596C\u5C07\u5E33\u5E84\u5F35\u638C\u66B2\u6756\u6A1F\u6AA3\u6B0C\u6F3F\u7246\uF9FA\u7350\u748B\u7AE0\u7CA7\u8178\u81DF\u81E7\u838A\u846C\u8523\u8594\u85CF\u88DD\u8D13\u91AC\u9577',
      ],
      [
        'eea1',
        '\u969C\u518D\u54C9\u5728\u5BB0\u624D\u6750\u683D\u6893\u6E3D\u6ED3\u707D\u7E21\u88C1\u8CA1\u8F09\u9F4B\u9F4E\u722D\u7B8F\u8ACD\u931A\u4F47\u4F4E\u5132\u5480\u59D0\u5E95\u62B5\u6775\u696E\u6A17\u6CAE\u6E1A\u72D9\u732A\u75BD\u7BB8\u7D35\u82E7\u83F9\u8457\u85F7\u8A5B\u8CAF\u8E87\u9019\u90B8\u96CE\u9F5F\u52E3\u540A\u5AE1\u5BC2\u6458\u6575\u6EF4\u72C4\uF9FB\u7684\u7A4D\u7B1B\u7C4D\u7E3E\u7FDF\u837B\u8B2B\u8CCA\u8D64\u8DE1\u8E5F\u8FEA\u8FF9\u9069\u93D1\u4F43\u4F7A\u50B3\u5168\u5178\u524D\u526A\u5861\u587C\u5960\u5C08\u5C55\u5EDB\u609B\u6230\u6813\u6BBF\u6C08\u6FB1',
      ],
      [
        'efa1',
        '\u714E\u7420\u7530\u7538\u7551\u7672\u7B4C\u7B8B\u7BAD\u7BC6\u7E8F\u8A6E\u8F3E\u8F49\u923F\u9293\u9322\u942B\u96FB\u985A\u986B\u991E\u5207\u622A\u6298\u6D59\u7664\u7ACA\u7BC0\u7D76\u5360\u5CBE\u5E97\u6F38\u70B9\u7C98\u9711\u9B8E\u9EDE\u63A5\u647A\u8776\u4E01\u4E95\u4EAD\u505C\u5075\u5448\u59C3\u5B9A\u5E40\u5EAD\u5EF7\u5F81\u60C5\u633A\u653F\u6574\u65CC\u6676\u6678\u67FE\u6968\u6A89\u6B63\u6C40\u6DC0\u6DE8\u6E1F\u6E5E\u701E\u70A1\u738E\u73FD\u753A\u775B\u7887\u798E\u7A0B\u7A7D\u7CBE\u7D8E\u8247\u8A02\u8AEA\u8C9E\u912D\u914A\u91D8\u9266\u92CC\u9320\u9706\u9756',
      ],
      [
        'f0a1',
        '\u975C\u9802\u9F0E\u5236\u5291\u557C\u5824\u5E1D\u5F1F\u608C\u63D0\u68AF\u6FDF\u796D\u7B2C\u81CD\u85BA\u88FD\u8AF8\u8E44\u918D\u9664\u969B\u973D\u984C\u9F4A\u4FCE\u5146\u51CB\u52A9\u5632\u5F14\u5F6B\u63AA\u64CD\u65E9\u6641\u66FA\u66F9\u671D\u689D\u68D7\u69FD\u6F15\u6F6E\u7167\u71E5\u722A\u74AA\u773A\u7956\u795A\u79DF\u7A20\u7A95\u7C97\u7CDF\u7D44\u7E70\u8087\u85FB\u86A4\u8A54\u8ABF\u8D99\u8E81\u9020\u906D\u91E3\u963B\u96D5\u9CE5\u65CF\u7C07\u8DB3\u93C3\u5B58\u5C0A\u5352\u62D9\u731D\u5027\u5B97\u5F9E\u60B0\u616B\u68D5\u6DD9\u742E\u7A2E\u7D42\u7D9C\u7E31\u816B',
      ],
      [
        'f1a1',
        '\u8E2A\u8E35\u937E\u9418\u4F50\u5750\u5DE6\u5EA7\u632B\u7F6A\u4E3B\u4F4F\u4F8F\u505A\u59DD\u80C4\u546A\u5468\u55FE\u594F\u5B99\u5DDE\u5EDA\u665D\u6731\u67F1\u682A\u6CE8\u6D32\u6E4A\u6F8D\u70B7\u73E0\u7587\u7C4C\u7D02\u7D2C\u7DA2\u821F\u86DB\u8A3B\u8A85\u8D70\u8E8A\u8F33\u9031\u914E\u9152\u9444\u99D0\u7AF9\u7CA5\u4FCA\u5101\u51C6\u57C8\u5BEF\u5CFB\u6659\u6A3D\u6D5A\u6E96\u6FEC\u710C\u756F\u7AE3\u8822\u9021\u9075\u96CB\u99FF\u8301\u4E2D\u4EF2\u8846\u91CD\u537D\u6ADB\u696B\u6C41\u847A\u589E\u618E\u66FE\u62EF\u70DD\u7511\u75C7\u7E52\u84B8\u8B49\u8D08\u4E4B\u53EA',
      ],
      [
        'f2a1',
        '\u54AB\u5730\u5740\u5FD7\u6301\u6307\u646F\u652F\u65E8\u667A\u679D\u67B3\u6B62\u6C60\u6C9A\u6F2C\u77E5\u7825\u7949\u7957\u7D19\u80A2\u8102\u81F3\u829D\u82B7\u8718\u8A8C\uF9FC\u8D04\u8DBE\u9072\u76F4\u7A19\u7A37\u7E54\u8077\u5507\u55D4\u5875\u632F\u6422\u6649\u664B\u686D\u699B\u6B84\u6D25\u6EB1\u73CD\u7468\u74A1\u755B\u75B9\u76E1\u771E\u778B\u79E6\u7E09\u7E1D\u81FB\u852F\u8897\u8A3A\u8CD1\u8EEB\u8FB0\u9032\u93AD\u9663\u9673\u9707\u4F84\u53F1\u59EA\u5AC9\u5E19\u684E\u74C6\u75BE\u79E9\u7A92\u81A3\u86ED\u8CEA\u8DCC\u8FED\u659F\u6715\uF9FD\u57F7\u6F57\u7DDD\u8F2F',
      ],
      [
        'f3a1',
        '\u93F6\u96C6\u5FB5\u61F2\u6F84\u4E14\u4F98\u501F\u53C9\u55DF\u5D6F\u5DEE\u6B21\u6B64\u78CB\u7B9A\uF9FE\u8E49\u8ECA\u906E\u6349\u643E\u7740\u7A84\u932F\u947F\u9F6A\u64B0\u6FAF\u71E6\u74A8\u74DA\u7AC4\u7C12\u7E82\u7CB2\u7E98\u8B9A\u8D0A\u947D\u9910\u994C\u5239\u5BDF\u64E6\u672D\u7D2E\u50ED\u53C3\u5879\u6158\u6159\u61FA\u65AC\u7AD9\u8B92\u8B96\u5009\u5021\u5275\u5531\u5A3C\u5EE0\u5F70\u6134\u655E\u660C\u6636\u66A2\u69CD\u6EC4\u6F32\u7316\u7621\u7A93\u8139\u8259\u83D6\u84BC\u50B5\u57F0\u5BC0\u5BE8\u5F69\u63A1\u7826\u7DB5\u83DC\u8521\u91C7\u91F5\u518A\u67F5\u7B56',
      ],
      [
        'f4a1',
        '\u8CAC\u51C4\u59BB\u60BD\u8655\u501C\uF9FF\u5254\u5C3A\u617D\u621A\u62D3\u64F2\u65A5\u6ECC\u7620\u810A\u8E60\u965F\u96BB\u4EDF\u5343\u5598\u5929\u5DDD\u64C5\u6CC9\u6DFA\u7394\u7A7F\u821B\u85A6\u8CE4\u8E10\u9077\u91E7\u95E1\u9621\u97C6\u51F8\u54F2\u5586\u5FB9\u64A4\u6F88\u7DB4\u8F1F\u8F4D\u9435\u50C9\u5C16\u6CBE\u6DFB\u751B\u77BB\u7C3D\u7C64\u8A79\u8AC2\u581E\u59BE\u5E16\u6377\u7252\u758A\u776B\u8ADC\u8CBC\u8F12\u5EF3\u6674\u6DF8\u807D\u83C1\u8ACB\u9751\u9BD6\uFA00\u5243\u66FF\u6D95\u6EEF\u7DE0\u8AE6\u902E\u905E\u9AD4\u521D\u527F\u54E8\u6194\u6284\u62DB\u68A2',
      ],
      [
        'f5a1',
        '\u6912\u695A\u6A35\u7092\u7126\u785D\u7901\u790E\u79D2\u7A0D\u8096\u8278\u82D5\u8349\u8549\u8C82\u8D85\u9162\u918B\u91AE\u4FC3\u56D1\u71ED\u77D7\u8700\u89F8\u5BF8\u5FD6\u6751\u90A8\u53E2\u585A\u5BF5\u60A4\u6181\u6460\u7E3D\u8070\u8525\u9283\u64AE\u50AC\u5D14\u6700\u589C\u62BD\u63A8\u690E\u6978\u6A1E\u6E6B\u76BA\u79CB\u82BB\u8429\u8ACF\u8DA8\u8FFD\u9112\u914B\u919C\u9310\u9318\u939A\u96DB\u9A36\u9C0D\u4E11\u755C\u795D\u7AFA\u7B51\u7BC9\u7E2E\u84C4\u8E59\u8E74\u8EF8\u9010\u6625\u693F\u7443\u51FA\u672E\u9EDC\u5145\u5FE0\u6C96\u87F2\u885D\u8877\u60B4\u81B5\u8403',
      ],
      [
        'f6a1',
        '\u8D05\u53D6\u5439\u5634\u5A36\u5C31\u708A\u7FE0\u805A\u8106\u81ED\u8DA3\u9189\u9A5F\u9DF2\u5074\u4EC4\u53A0\u60FB\u6E2C\u5C64\u4F88\u5024\u55E4\u5CD9\u5E5F\u6065\u6894\u6CBB\u6DC4\u71BE\u75D4\u75F4\u7661\u7A1A\u7A49\u7DC7\u7DFB\u7F6E\u81F4\u86A9\u8F1C\u96C9\u99B3\u9F52\u5247\u52C5\u98ED\u89AA\u4E03\u67D2\u6F06\u4FB5\u5BE2\u6795\u6C88\u6D78\u741B\u7827\u91DD\u937C\u87C4\u79E4\u7A31\u5FEB\u4ED6\u54A4\u553E\u58AE\u59A5\u60F0\u6253\u62D6\u6736\u6955\u8235\u9640\u99B1\u99DD\u502C\u5353\u5544\u577C\uFA01\u6258\uFA02\u64E2\u666B\u67DD\u6FC1\u6FEF\u7422\u7438\u8A17',
      ],
      [
        'f7a1',
        '\u9438\u5451\u5606\u5766\u5F48\u619A\u6B4E\u7058\u70AD\u7DBB\u8A95\u596A\u812B\u63A2\u7708\u803D\u8CAA\u5854\u642D\u69BB\u5B95\u5E11\u6E6F\uFA03\u8569\u514C\u53F0\u592A\u6020\u614B\u6B86\u6C70\u6CF0\u7B1E\u80CE\u82D4\u8DC6\u90B0\u98B1\uFA04\u64C7\u6FA4\u6491\u6504\u514E\u5410\u571F\u8A0E\u615F\u6876\uFA05\u75DB\u7B52\u7D71\u901A\u5806\u69CC\u817F\u892A\u9000\u9839\u5078\u5957\u59AC\u6295\u900F\u9B2A\u615D\u7279\u95D6\u5761\u5A46\u5DF4\u628A\u64AD\u64FA\u6777\u6CE2\u6D3E\u722C\u7436\u7834\u7F77\u82AD\u8DDB\u9817\u5224\u5742\u677F\u7248\u74E3\u8CA9\u8FA6\u9211',
      ],
      [
        'f8a1',
        '\u962A\u516B\u53ED\u634C\u4F69\u5504\u6096\u6557\u6C9B\u6D7F\u724C\u72FD\u7A17\u8987\u8C9D\u5F6D\u6F8E\u70F9\u81A8\u610E\u4FBF\u504F\u6241\u7247\u7BC7\u7DE8\u7FE9\u904D\u97AD\u9A19\u8CB6\u576A\u5E73\u67B0\u840D\u8A55\u5420\u5B16\u5E63\u5EE2\u5F0A\u6583\u80BA\u853D\u9589\u965B\u4F48\u5305\u530D\u530F\u5486\u54FA\u5703\u5E03\u6016\u629B\u62B1\u6355\uFA06\u6CE1\u6D66\u75B1\u7832\u80DE\u812F\u82DE\u8461\u84B2\u888D\u8912\u900B\u92EA\u98FD\u9B91\u5E45\u66B4\u66DD\u7011\u7206\uFA07\u4FF5\u527D\u5F6A\u6153\u6753\u6A19\u6F02\u74E2\u7968\u8868\u8C79\u98C7\u98C4\u9A43',
      ],
      [
        'f9a1',
        '\u54C1\u7A1F\u6953\u8AF7\u8C4A\u98A8\u99AE\u5F7C\u62AB\u75B2\u76AE\u88AB\u907F\u9642\u5339\u5F3C\u5FC5\u6CCC\u73CC\u7562\u758B\u7B46\u82FE\u999D\u4E4F\u903C\u4E0B\u4F55\u53A6\u590F\u5EC8\u6630\u6CB3\u7455\u8377\u8766\u8CC0\u9050\u971E\u9C15\u58D1\u5B78\u8650\u8B14\u9DB4\u5BD2\u6068\u608D\u65F1\u6C57\u6F22\u6FA3\u701A\u7F55\u7FF0\u9591\u9592\u9650\u97D3\u5272\u8F44\u51FD\u542B\u54B8\u5563\u558A\u6ABB\u6DB5\u7DD8\u8266\u929C\u9677\u9E79\u5408\u54C8\u76D2\u86E4\u95A4\u95D4\u965C\u4EA2\u4F09\u59EE\u5AE6\u5DF7\u6052\u6297\u676D\u6841\u6C86\u6E2F\u7F38\u809B\u822A',
      ],
      [
        'faa1',
        '\uFA08\uFA09\u9805\u4EA5\u5055\u54B3\u5793\u595A\u5B69\u5BB3\u61C8\u6977\u6D77\u7023\u87F9\u89E3\u8A72\u8AE7\u9082\u99ED\u9AB8\u52BE\u6838\u5016\u5E78\u674F\u8347\u884C\u4EAB\u5411\u56AE\u73E6\u9115\u97FF\u9909\u9957\u9999\u5653\u589F\u865B\u8A31\u61B2\u6AF6\u737B\u8ED2\u6B47\u96AA\u9A57\u5955\u7200\u8D6B\u9769\u4FD4\u5CF4\u5F26\u61F8\u665B\u6CEB\u70AB\u7384\u73B9\u73FE\u7729\u774D\u7D43\u7D62\u7E23\u8237\u8852\uFA0A\u8CE2\u9249\u986F\u5B51\u7A74\u8840\u9801\u5ACC\u4FE0\u5354\u593E\u5CFD\u633E\u6D79\u72F9\u8105\u8107\u83A2\u92CF\u9830\u4EA8\u5144\u5211\u578B',
      ],
      [
        'fba1',
        '\u5F62\u6CC2\u6ECE\u7005\u7050\u70AF\u7192\u73E9\u7469\u834A\u87A2\u8861\u9008\u90A2\u93A3\u99A8\u516E\u5F57\u60E0\u6167\u66B3\u8559\u8E4A\u91AF\u978B\u4E4E\u4E92\u547C\u58D5\u58FA\u597D\u5CB5\u5F27\u6236\u6248\u660A\u6667\u6BEB\u6D69\u6DCF\u6E56\u6EF8\u6F94\u6FE0\u6FE9\u705D\u72D0\u7425\u745A\u74E0\u7693\u795C\u7CCA\u7E1E\u80E1\u82A6\u846B\u84BF\u864E\u865F\u8774\u8B77\u8C6A\u93AC\u9800\u9865\u60D1\u6216\u9177\u5A5A\u660F\u6DF7\u6E3E\u743F\u9B42\u5FFD\u60DA\u7B0F\u54C4\u5F18\u6C5E\u6CD3\u6D2A\u70D8\u7D05\u8679\u8A0C\u9D3B\u5316\u548C\u5B05\u6A3A\u706B\u7575',
      ],
      [
        'fca1',
        '\u798D\u79BE\u82B1\u83EF\u8A71\u8B41\u8CA8\u9774\uFA0B\u64F4\u652B\u78BA\u78BB\u7A6B\u4E38\u559A\u5950\u5BA6\u5E7B\u60A3\u63DB\u6B61\u6665\u6853\u6E19\u7165\u74B0\u7D08\u9084\u9A69\u9C25\u6D3B\u6ED1\u733E\u8C41\u95CA\u51F0\u5E4C\u5FA8\u604D\u60F6\u6130\u614C\u6643\u6644\u69A5\u6CC1\u6E5F\u6EC9\u6F62\u714C\u749C\u7687\u7BC1\u7C27\u8352\u8757\u9051\u968D\u9EC3\u532F\u56DE\u5EFB\u5F8A\u6062\u6094\u61F7\u6666\u6703\u6A9C\u6DEE\u6FAE\u7070\u736A\u7E6A\u81BE\u8334\u86D4\u8AA8\u8CC4\u5283\u7372\u5B96\u6A6B\u9404\u54EE\u5686\u5B5D\u6548\u6585\u66C9\u689F\u6D8D\u6DC6',
      ],
      [
        'fda1',
        '\u723B\u80B4\u9175\u9A4D\u4FAF\u5019\u539A\u540E\u543C\u5589\u55C5\u5E3F\u5F8C\u673D\u7166\u73DD\u9005\u52DB\u52F3\u5864\u58CE\u7104\u718F\u71FB\u85B0\u8A13\u6688\u85A8\u55A7\u6684\u714A\u8431\u5349\u5599\u6BC1\u5F59\u5FBD\u63EE\u6689\u7147\u8AF1\u8F1D\u9EBE\u4F11\u643A\u70CB\u7566\u8667\u6064\u8B4E\u9DF8\u5147\u51F6\u5308\u6D36\u80F8\u9ED1\u6615\u6B23\u7098\u75D5\u5403\u5C79\u7D07\u8A16\u6B20\u6B3D\u6B46\u5438\u6070\u6D3D\u7FD5\u8208\u50D6\u51DE\u559C\u566B\u56CD\u59EC\u5B09\u5E0C\u6199\u6198\u6231\u665E\u66E6\u7199\u71B9\u71BA\u72A7\u79A7\u7A00\u7FB2\u8A70',
      ],
    ];
  },
});

// ../../node_modules/iconv-lite/encodings/tables/cp950.json
var require_cp950 = __commonJS({
  '../../node_modules/iconv-lite/encodings/tables/cp950.json'(
    exports2,
    module2
  ) {
    module2.exports = [
      ['0', '\0', 127],
      [
        'a140',
        '\u3000\uFF0C\u3001\u3002\uFF0E\u2027\uFF1B\uFF1A\uFF1F\uFF01\uFE30\u2026\u2025\uFE50\uFE51\uFE52\xB7\uFE54\uFE55\uFE56\uFE57\uFF5C\u2013\uFE31\u2014\uFE33\u2574\uFE34\uFE4F\uFF08\uFF09\uFE35\uFE36\uFF5B\uFF5D\uFE37\uFE38\u3014\u3015\uFE39\uFE3A\u3010\u3011\uFE3B\uFE3C\u300A\u300B\uFE3D\uFE3E\u3008\u3009\uFE3F\uFE40\u300C\u300D\uFE41\uFE42\u300E\u300F\uFE43\uFE44\uFE59\uFE5A',
      ],
      [
        'a1a1',
        '\uFE5B\uFE5C\uFE5D\uFE5E\u2018\u2019\u201C\u201D\u301D\u301E\u2035\u2032\uFF03\uFF06\uFF0A\u203B\xA7\u3003\u25CB\u25CF\u25B3\u25B2\u25CE\u2606\u2605\u25C7\u25C6\u25A1\u25A0\u25BD\u25BC\u32A3\u2105\xAF\uFFE3\uFF3F\u02CD\uFE49\uFE4A\uFE4D\uFE4E\uFE4B\uFE4C\uFE5F\uFE60\uFE61\uFF0B\uFF0D\xD7\xF7\xB1\u221A\uFF1C\uFF1E\uFF1D\u2266\u2267\u2260\u221E\u2252\u2261\uFE62',
        4,
        '\uFF5E\u2229\u222A\u22A5\u2220\u221F\u22BF\u33D2\u33D1\u222B\u222E\u2235\u2234\u2640\u2642\u2295\u2299\u2191\u2193\u2190\u2192\u2196\u2197\u2199\u2198\u2225\u2223\uFF0F',
      ],
      [
        'a240',
        '\uFF3C\u2215\uFE68\uFF04\uFFE5\u3012\uFFE0\uFFE1\uFF05\uFF20\u2103\u2109\uFE69\uFE6A\uFE6B\u33D5\u339C\u339D\u339E\u33CE\u33A1\u338E\u338F\u33C4\xB0\u5159\u515B\u515E\u515D\u5161\u5163\u55E7\u74E9\u7CCE\u2581',
        7,
        '\u258F\u258E\u258D\u258C\u258B\u258A\u2589\u253C\u2534\u252C\u2524\u251C\u2594\u2500\u2502\u2595\u250C\u2510\u2514\u2518\u256D',
      ],
      [
        'a2a1',
        '\u256E\u2570\u256F\u2550\u255E\u256A\u2561\u25E2\u25E3\u25E5\u25E4\u2571\u2572\u2573\uFF10',
        9,
        '\u2160',
        9,
        '\u3021',
        8,
        '\u5341\u5344\u5345\uFF21',
        25,
        '\uFF41',
        21,
      ],
      [
        'a340',
        '\uFF57\uFF58\uFF59\uFF5A\u0391',
        16,
        '\u03A3',
        6,
        '\u03B1',
        16,
        '\u03C3',
        6,
        '\u3105',
        10,
      ],
      ['a3a1', '\u3110', 25, '\u02D9\u02C9\u02CA\u02C7\u02CB'],
      ['a3e1', '\u20AC'],
      [
        'a440',
        '\u4E00\u4E59\u4E01\u4E03\u4E43\u4E5D\u4E86\u4E8C\u4EBA\u513F\u5165\u516B\u51E0\u5200\u5201\u529B\u5315\u5341\u535C\u53C8\u4E09\u4E0B\u4E08\u4E0A\u4E2B\u4E38\u51E1\u4E45\u4E48\u4E5F\u4E5E\u4E8E\u4EA1\u5140\u5203\u52FA\u5343\u53C9\u53E3\u571F\u58EB\u5915\u5927\u5973\u5B50\u5B51\u5B53\u5BF8\u5C0F\u5C22\u5C38\u5C71\u5DDD\u5DE5\u5DF1\u5DF2\u5DF3\u5DFE\u5E72\u5EFE\u5F0B\u5F13\u624D',
      ],
      [
        'a4a1',
        '\u4E11\u4E10\u4E0D\u4E2D\u4E30\u4E39\u4E4B\u5C39\u4E88\u4E91\u4E95\u4E92\u4E94\u4EA2\u4EC1\u4EC0\u4EC3\u4EC6\u4EC7\u4ECD\u4ECA\u4ECB\u4EC4\u5143\u5141\u5167\u516D\u516E\u516C\u5197\u51F6\u5206\u5207\u5208\u52FB\u52FE\u52FF\u5316\u5339\u5348\u5347\u5345\u535E\u5384\u53CB\u53CA\u53CD\u58EC\u5929\u592B\u592A\u592D\u5B54\u5C11\u5C24\u5C3A\u5C6F\u5DF4\u5E7B\u5EFF\u5F14\u5F15\u5FC3\u6208\u6236\u624B\u624E\u652F\u6587\u6597\u65A4\u65B9\u65E5\u66F0\u6708\u6728\u6B20\u6B62\u6B79\u6BCB\u6BD4\u6BDB\u6C0F\u6C34\u706B\u722A\u7236\u723B\u7247\u7259\u725B\u72AC\u738B\u4E19',
      ],
      [
        'a540',
        '\u4E16\u4E15\u4E14\u4E18\u4E3B\u4E4D\u4E4F\u4E4E\u4EE5\u4ED8\u4ED4\u4ED5\u4ED6\u4ED7\u4EE3\u4EE4\u4ED9\u4EDE\u5145\u5144\u5189\u518A\u51AC\u51F9\u51FA\u51F8\u520A\u52A0\u529F\u5305\u5306\u5317\u531D\u4EDF\u534A\u5349\u5361\u5360\u536F\u536E\u53BB\u53EF\u53E4\u53F3\u53EC\u53EE\u53E9\u53E8\u53FC\u53F8\u53F5\u53EB\u53E6\u53EA\u53F2\u53F1\u53F0\u53E5\u53ED\u53FB\u56DB\u56DA\u5916',
      ],
      [
        'a5a1',
        '\u592E\u5931\u5974\u5976\u5B55\u5B83\u5C3C\u5DE8\u5DE7\u5DE6\u5E02\u5E03\u5E73\u5E7C\u5F01\u5F18\u5F17\u5FC5\u620A\u6253\u6254\u6252\u6251\u65A5\u65E6\u672E\u672C\u672A\u672B\u672D\u6B63\u6BCD\u6C11\u6C10\u6C38\u6C41\u6C40\u6C3E\u72AF\u7384\u7389\u74DC\u74E6\u7518\u751F\u7528\u7529\u7530\u7531\u7532\u7533\u758B\u767D\u76AE\u76BF\u76EE\u77DB\u77E2\u77F3\u793A\u79BE\u7A74\u7ACB\u4E1E\u4E1F\u4E52\u4E53\u4E69\u4E99\u4EA4\u4EA6\u4EA5\u4EFF\u4F09\u4F19\u4F0A\u4F15\u4F0D\u4F10\u4F11\u4F0F\u4EF2\u4EF6\u4EFB\u4EF0\u4EF3\u4EFD\u4F01\u4F0B\u5149\u5147\u5146\u5148\u5168',
      ],
      [
        'a640',
        '\u5171\u518D\u51B0\u5217\u5211\u5212\u520E\u5216\u52A3\u5308\u5321\u5320\u5370\u5371\u5409\u540F\u540C\u540A\u5410\u5401\u540B\u5404\u5411\u540D\u5408\u5403\u540E\u5406\u5412\u56E0\u56DE\u56DD\u5733\u5730\u5728\u572D\u572C\u572F\u5729\u5919\u591A\u5937\u5938\u5984\u5978\u5983\u597D\u5979\u5982\u5981\u5B57\u5B58\u5B87\u5B88\u5B85\u5B89\u5BFA\u5C16\u5C79\u5DDE\u5E06\u5E76\u5E74',
      ],
      [
        'a6a1',
        '\u5F0F\u5F1B\u5FD9\u5FD6\u620E\u620C\u620D\u6210\u6263\u625B\u6258\u6536\u65E9\u65E8\u65EC\u65ED\u66F2\u66F3\u6709\u673D\u6734\u6731\u6735\u6B21\u6B64\u6B7B\u6C16\u6C5D\u6C57\u6C59\u6C5F\u6C60\u6C50\u6C55\u6C61\u6C5B\u6C4D\u6C4E\u7070\u725F\u725D\u767E\u7AF9\u7C73\u7CF8\u7F36\u7F8A\u7FBD\u8001\u8003\u800C\u8012\u8033\u807F\u8089\u808B\u808C\u81E3\u81EA\u81F3\u81FC\u820C\u821B\u821F\u826E\u8272\u827E\u866B\u8840\u884C\u8863\u897F\u9621\u4E32\u4EA8\u4F4D\u4F4F\u4F47\u4F57\u4F5E\u4F34\u4F5B\u4F55\u4F30\u4F50\u4F51\u4F3D\u4F3A\u4F38\u4F43\u4F54\u4F3C\u4F46\u4F63',
      ],
      [
        'a740',
        '\u4F5C\u4F60\u4F2F\u4F4E\u4F36\u4F59\u4F5D\u4F48\u4F5A\u514C\u514B\u514D\u5175\u51B6\u51B7\u5225\u5224\u5229\u522A\u5228\u52AB\u52A9\u52AA\u52AC\u5323\u5373\u5375\u541D\u542D\u541E\u543E\u5426\u544E\u5427\u5446\u5443\u5433\u5448\u5442\u541B\u5429\u544A\u5439\u543B\u5438\u542E\u5435\u5436\u5420\u543C\u5440\u5431\u542B\u541F\u542C\u56EA\u56F0\u56E4\u56EB\u574A\u5751\u5740\u574D',
      ],
      [
        'a7a1',
        '\u5747\u574E\u573E\u5750\u574F\u573B\u58EF\u593E\u599D\u5992\u59A8\u599E\u59A3\u5999\u5996\u598D\u59A4\u5993\u598A\u59A5\u5B5D\u5B5C\u5B5A\u5B5B\u5B8C\u5B8B\u5B8F\u5C2C\u5C40\u5C41\u5C3F\u5C3E\u5C90\u5C91\u5C94\u5C8C\u5DEB\u5E0C\u5E8F\u5E87\u5E8A\u5EF7\u5F04\u5F1F\u5F64\u5F62\u5F77\u5F79\u5FD8\u5FCC\u5FD7\u5FCD\u5FF1\u5FEB\u5FF8\u5FEA\u6212\u6211\u6284\u6297\u6296\u6280\u6276\u6289\u626D\u628A\u627C\u627E\u6279\u6273\u6292\u626F\u6298\u626E\u6295\u6293\u6291\u6286\u6539\u653B\u6538\u65F1\u66F4\u675F\u674E\u674F\u6750\u6751\u675C\u6756\u675E\u6749\u6746\u6760',
      ],
      [
        'a840',
        '\u6753\u6757\u6B65\u6BCF\u6C42\u6C5E\u6C99\u6C81\u6C88\u6C89\u6C85\u6C9B\u6C6A\u6C7A\u6C90\u6C70\u6C8C\u6C68\u6C96\u6C92\u6C7D\u6C83\u6C72\u6C7E\u6C74\u6C86\u6C76\u6C8D\u6C94\u6C98\u6C82\u7076\u707C\u707D\u7078\u7262\u7261\u7260\u72C4\u72C2\u7396\u752C\u752B\u7537\u7538\u7682\u76EF\u77E3\u79C1\u79C0\u79BF\u7A76\u7CFB\u7F55\u8096\u8093\u809D\u8098\u809B\u809A\u80B2\u826F\u8292',
      ],
      [
        'a8a1',
        '\u828B\u828D\u898B\u89D2\u8A00\u8C37\u8C46\u8C55\u8C9D\u8D64\u8D70\u8DB3\u8EAB\u8ECA\u8F9B\u8FB0\u8FC2\u8FC6\u8FC5\u8FC4\u5DE1\u9091\u90A2\u90AA\u90A6\u90A3\u9149\u91C6\u91CC\u9632\u962E\u9631\u962A\u962C\u4E26\u4E56\u4E73\u4E8B\u4E9B\u4E9E\u4EAB\u4EAC\u4F6F\u4F9D\u4F8D\u4F73\u4F7F\u4F6C\u4F9B\u4F8B\u4F86\u4F83\u4F70\u4F75\u4F88\u4F69\u4F7B\u4F96\u4F7E\u4F8F\u4F91\u4F7A\u5154\u5152\u5155\u5169\u5177\u5176\u5178\u51BD\u51FD\u523B\u5238\u5237\u523A\u5230\u522E\u5236\u5241\u52BE\u52BB\u5352\u5354\u5353\u5351\u5366\u5377\u5378\u5379\u53D6\u53D4\u53D7\u5473\u5475',
      ],
      [
        'a940',
        '\u5496\u5478\u5495\u5480\u547B\u5477\u5484\u5492\u5486\u547C\u5490\u5471\u5476\u548C\u549A\u5462\u5468\u548B\u547D\u548E\u56FA\u5783\u5777\u576A\u5769\u5761\u5766\u5764\u577C\u591C\u5949\u5947\u5948\u5944\u5954\u59BE\u59BB\u59D4\u59B9\u59AE\u59D1\u59C6\u59D0\u59CD\u59CB\u59D3\u59CA\u59AF\u59B3\u59D2\u59C5\u5B5F\u5B64\u5B63\u5B97\u5B9A\u5B98\u5B9C\u5B99\u5B9B\u5C1A\u5C48\u5C45',
      ],
      [
        'a9a1',
        '\u5C46\u5CB7\u5CA1\u5CB8\u5CA9\u5CAB\u5CB1\u5CB3\u5E18\u5E1A\u5E16\u5E15\u5E1B\u5E11\u5E78\u5E9A\u5E97\u5E9C\u5E95\u5E96\u5EF6\u5F26\u5F27\u5F29\u5F80\u5F81\u5F7F\u5F7C\u5FDD\u5FE0\u5FFD\u5FF5\u5FFF\u600F\u6014\u602F\u6035\u6016\u602A\u6015\u6021\u6027\u6029\u602B\u601B\u6216\u6215\u623F\u623E\u6240\u627F\u62C9\u62CC\u62C4\u62BF\u62C2\u62B9\u62D2\u62DB\u62AB\u62D3\u62D4\u62CB\u62C8\u62A8\u62BD\u62BC\u62D0\u62D9\u62C7\u62CD\u62B5\u62DA\u62B1\u62D8\u62D6\u62D7\u62C6\u62AC\u62CE\u653E\u65A7\u65BC\u65FA\u6614\u6613\u660C\u6606\u6602\u660E\u6600\u660F\u6615\u660A',
      ],
      [
        'aa40',
        '\u6607\u670D\u670B\u676D\u678B\u6795\u6771\u679C\u6773\u6777\u6787\u679D\u6797\u676F\u6770\u677F\u6789\u677E\u6790\u6775\u679A\u6793\u677C\u676A\u6772\u6B23\u6B66\u6B67\u6B7F\u6C13\u6C1B\u6CE3\u6CE8\u6CF3\u6CB1\u6CCC\u6CE5\u6CB3\u6CBD\u6CBE\u6CBC\u6CE2\u6CAB\u6CD5\u6CD3\u6CB8\u6CC4\u6CB9\u6CC1\u6CAE\u6CD7\u6CC5\u6CF1\u6CBF\u6CBB\u6CE1\u6CDB\u6CCA\u6CAC\u6CEF\u6CDC\u6CD6\u6CE0',
      ],
      [
        'aaa1',
        '\u7095\u708E\u7092\u708A\u7099\u722C\u722D\u7238\u7248\u7267\u7269\u72C0\u72CE\u72D9\u72D7\u72D0\u73A9\u73A8\u739F\u73AB\u73A5\u753D\u759D\u7599\u759A\u7684\u76C2\u76F2\u76F4\u77E5\u77FD\u793E\u7940\u7941\u79C9\u79C8\u7A7A\u7A79\u7AFA\u7CFE\u7F54\u7F8C\u7F8B\u8005\u80BA\u80A5\u80A2\u80B1\u80A1\u80AB\u80A9\u80B4\u80AA\u80AF\u81E5\u81FE\u820D\u82B3\u829D\u8299\u82AD\u82BD\u829F\u82B9\u82B1\u82AC\u82A5\u82AF\u82B8\u82A3\u82B0\u82BE\u82B7\u864E\u8671\u521D\u8868\u8ECB\u8FCE\u8FD4\u8FD1\u90B5\u90B8\u90B1\u90B6\u91C7\u91D1\u9577\u9580\u961C\u9640\u963F\u963B\u9644',
      ],
      [
        'ab40',
        '\u9642\u96B9\u96E8\u9752\u975E\u4E9F\u4EAD\u4EAE\u4FE1\u4FB5\u4FAF\u4FBF\u4FE0\u4FD1\u4FCF\u4FDD\u4FC3\u4FB6\u4FD8\u4FDF\u4FCA\u4FD7\u4FAE\u4FD0\u4FC4\u4FC2\u4FDA\u4FCE\u4FDE\u4FB7\u5157\u5192\u5191\u51A0\u524E\u5243\u524A\u524D\u524C\u524B\u5247\u52C7\u52C9\u52C3\u52C1\u530D\u5357\u537B\u539A\u53DB\u54AC\u54C0\u54A8\u54CE\u54C9\u54B8\u54A6\u54B3\u54C7\u54C2\u54BD\u54AA\u54C1',
      ],
      [
        'aba1',
        '\u54C4\u54C8\u54AF\u54AB\u54B1\u54BB\u54A9\u54A7\u54BF\u56FF\u5782\u578B\u57A0\u57A3\u57A2\u57CE\u57AE\u5793\u5955\u5951\u594F\u594E\u5950\u59DC\u59D8\u59FF\u59E3\u59E8\u5A03\u59E5\u59EA\u59DA\u59E6\u5A01\u59FB\u5B69\u5BA3\u5BA6\u5BA4\u5BA2\u5BA5\u5C01\u5C4E\u5C4F\u5C4D\u5C4B\u5CD9\u5CD2\u5DF7\u5E1D\u5E25\u5E1F\u5E7D\u5EA0\u5EA6\u5EFA\u5F08\u5F2D\u5F65\u5F88\u5F85\u5F8A\u5F8B\u5F87\u5F8C\u5F89\u6012\u601D\u6020\u6025\u600E\u6028\u604D\u6070\u6068\u6062\u6046\u6043\u606C\u606B\u606A\u6064\u6241\u62DC\u6316\u6309\u62FC\u62ED\u6301\u62EE\u62FD\u6307\u62F1\u62F7',
      ],
      [
        'ac40',
        '\u62EF\u62EC\u62FE\u62F4\u6311\u6302\u653F\u6545\u65AB\u65BD\u65E2\u6625\u662D\u6620\u6627\u662F\u661F\u6628\u6631\u6624\u66F7\u67FF\u67D3\u67F1\u67D4\u67D0\u67EC\u67B6\u67AF\u67F5\u67E9\u67EF\u67C4\u67D1\u67B4\u67DA\u67E5\u67B8\u67CF\u67DE\u67F3\u67B0\u67D9\u67E2\u67DD\u67D2\u6B6A\u6B83\u6B86\u6BB5\u6BD2\u6BD7\u6C1F\u6CC9\u6D0B\u6D32\u6D2A\u6D41\u6D25\u6D0C\u6D31\u6D1E\u6D17',
      ],
      [
        'aca1',
        '\u6D3B\u6D3D\u6D3E\u6D36\u6D1B\u6CF5\u6D39\u6D27\u6D38\u6D29\u6D2E\u6D35\u6D0E\u6D2B\u70AB\u70BA\u70B3\u70AC\u70AF\u70AD\u70B8\u70AE\u70A4\u7230\u7272\u726F\u7274\u72E9\u72E0\u72E1\u73B7\u73CA\u73BB\u73B2\u73CD\u73C0\u73B3\u751A\u752D\u754F\u754C\u754E\u754B\u75AB\u75A4\u75A5\u75A2\u75A3\u7678\u7686\u7687\u7688\u76C8\u76C6\u76C3\u76C5\u7701\u76F9\u76F8\u7709\u770B\u76FE\u76FC\u7707\u77DC\u7802\u7814\u780C\u780D\u7946\u7949\u7948\u7947\u79B9\u79BA\u79D1\u79D2\u79CB\u7A7F\u7A81\u7AFF\u7AFD\u7C7D\u7D02\u7D05\u7D00\u7D09\u7D07\u7D04\u7D06\u7F38\u7F8E\u7FBF\u8004',
      ],
      [
        'ad40',
        '\u8010\u800D\u8011\u8036\u80D6\u80E5\u80DA\u80C3\u80C4\u80CC\u80E1\u80DB\u80CE\u80DE\u80E4\u80DD\u81F4\u8222\u82E7\u8303\u8305\u82E3\u82DB\u82E6\u8304\u82E5\u8302\u8309\u82D2\u82D7\u82F1\u8301\u82DC\u82D4\u82D1\u82DE\u82D3\u82DF\u82EF\u8306\u8650\u8679\u867B\u867A\u884D\u886B\u8981\u89D4\u8A08\u8A02\u8A03\u8C9E\u8CA0\u8D74\u8D73\u8DB4\u8ECD\u8ECC\u8FF0\u8FE6\u8FE2\u8FEA\u8FE5',
      ],
      [
        'ada1',
        '\u8FED\u8FEB\u8FE4\u8FE8\u90CA\u90CE\u90C1\u90C3\u914B\u914A\u91CD\u9582\u9650\u964B\u964C\u964D\u9762\u9769\u97CB\u97ED\u97F3\u9801\u98A8\u98DB\u98DF\u9996\u9999\u4E58\u4EB3\u500C\u500D\u5023\u4FEF\u5026\u5025\u4FF8\u5029\u5016\u5006\u503C\u501F\u501A\u5012\u5011\u4FFA\u5000\u5014\u5028\u4FF1\u5021\u500B\u5019\u5018\u4FF3\u4FEE\u502D\u502A\u4FFE\u502B\u5009\u517C\u51A4\u51A5\u51A2\u51CD\u51CC\u51C6\u51CB\u5256\u525C\u5254\u525B\u525D\u532A\u537F\u539F\u539D\u53DF\u54E8\u5510\u5501\u5537\u54FC\u54E5\u54F2\u5506\u54FA\u5514\u54E9\u54ED\u54E1\u5509\u54EE\u54EA',
      ],
      [
        'ae40',
        '\u54E6\u5527\u5507\u54FD\u550F\u5703\u5704\u57C2\u57D4\u57CB\u57C3\u5809\u590F\u5957\u5958\u595A\u5A11\u5A18\u5A1C\u5A1F\u5A1B\u5A13\u59EC\u5A20\u5A23\u5A29\u5A25\u5A0C\u5A09\u5B6B\u5C58\u5BB0\u5BB3\u5BB6\u5BB4\u5BAE\u5BB5\u5BB9\u5BB8\u5C04\u5C51\u5C55\u5C50\u5CED\u5CFD\u5CFB\u5CEA\u5CE8\u5CF0\u5CF6\u5D01\u5CF4\u5DEE\u5E2D\u5E2B\u5EAB\u5EAD\u5EA7\u5F31\u5F92\u5F91\u5F90\u6059',
      ],
      [
        'aea1',
        '\u6063\u6065\u6050\u6055\u606D\u6069\u606F\u6084\u609F\u609A\u608D\u6094\u608C\u6085\u6096\u6247\u62F3\u6308\u62FF\u634E\u633E\u632F\u6355\u6342\u6346\u634F\u6349\u633A\u6350\u633D\u632A\u632B\u6328\u634D\u634C\u6548\u6549\u6599\u65C1\u65C5\u6642\u6649\u664F\u6643\u6652\u664C\u6645\u6641\u66F8\u6714\u6715\u6717\u6821\u6838\u6848\u6846\u6853\u6839\u6842\u6854\u6829\u68B3\u6817\u684C\u6851\u683D\u67F4\u6850\u6840\u683C\u6843\u682A\u6845\u6813\u6818\u6841\u6B8A\u6B89\u6BB7\u6C23\u6C27\u6C28\u6C26\u6C24\u6CF0\u6D6A\u6D95\u6D88\u6D87\u6D66\u6D78\u6D77\u6D59\u6D93',
      ],
      [
        'af40',
        '\u6D6C\u6D89\u6D6E\u6D5A\u6D74\u6D69\u6D8C\u6D8A\u6D79\u6D85\u6D65\u6D94\u70CA\u70D8\u70E4\u70D9\u70C8\u70CF\u7239\u7279\u72FC\u72F9\u72FD\u72F8\u72F7\u7386\u73ED\u7409\u73EE\u73E0\u73EA\u73DE\u7554\u755D\u755C\u755A\u7559\u75BE\u75C5\u75C7\u75B2\u75B3\u75BD\u75BC\u75B9\u75C2\u75B8\u768B\u76B0\u76CA\u76CD\u76CE\u7729\u771F\u7720\u7728\u77E9\u7830\u7827\u7838\u781D\u7834\u7837',
      ],
      [
        'afa1',
        '\u7825\u782D\u7820\u781F\u7832\u7955\u7950\u7960\u795F\u7956\u795E\u795D\u7957\u795A\u79E4\u79E3\u79E7\u79DF\u79E6\u79E9\u79D8\u7A84\u7A88\u7AD9\u7B06\u7B11\u7C89\u7D21\u7D17\u7D0B\u7D0A\u7D20\u7D22\u7D14\u7D10\u7D15\u7D1A\u7D1C\u7D0D\u7D19\u7D1B\u7F3A\u7F5F\u7F94\u7FC5\u7FC1\u8006\u8018\u8015\u8019\u8017\u803D\u803F\u80F1\u8102\u80F0\u8105\u80ED\u80F4\u8106\u80F8\u80F3\u8108\u80FD\u810A\u80FC\u80EF\u81ED\u81EC\u8200\u8210\u822A\u822B\u8228\u822C\u82BB\u832B\u8352\u8354\u834A\u8338\u8350\u8349\u8335\u8334\u834F\u8332\u8339\u8336\u8317\u8340\u8331\u8328\u8343',
      ],
      [
        'b040',
        '\u8654\u868A\u86AA\u8693\u86A4\u86A9\u868C\u86A3\u869C\u8870\u8877\u8881\u8882\u887D\u8879\u8A18\u8A10\u8A0E\u8A0C\u8A15\u8A0A\u8A17\u8A13\u8A16\u8A0F\u8A11\u8C48\u8C7A\u8C79\u8CA1\u8CA2\u8D77\u8EAC\u8ED2\u8ED4\u8ECF\u8FB1\u9001\u9006\u8FF7\u9000\u8FFA\u8FF4\u9003\u8FFD\u9005\u8FF8\u9095\u90E1\u90DD\u90E2\u9152\u914D\u914C\u91D8\u91DD\u91D7\u91DC\u91D9\u9583\u9662\u9663\u9661',
      ],
      [
        'b0a1',
        '\u965B\u965D\u9664\u9658\u965E\u96BB\u98E2\u99AC\u9AA8\u9AD8\u9B25\u9B32\u9B3C\u4E7E\u507A\u507D\u505C\u5047\u5043\u504C\u505A\u5049\u5065\u5076\u504E\u5055\u5075\u5074\u5077\u504F\u500F\u506F\u506D\u515C\u5195\u51F0\u526A\u526F\u52D2\u52D9\u52D8\u52D5\u5310\u530F\u5319\u533F\u5340\u533E\u53C3\u66FC\u5546\u556A\u5566\u5544\u555E\u5561\u5543\u554A\u5531\u5556\u554F\u5555\u552F\u5564\u5538\u552E\u555C\u552C\u5563\u5533\u5541\u5557\u5708\u570B\u5709\u57DF\u5805\u580A\u5806\u57E0\u57E4\u57FA\u5802\u5835\u57F7\u57F9\u5920\u5962\u5A36\u5A41\u5A49\u5A66\u5A6A\u5A40',
      ],
      [
        'b140',
        '\u5A3C\u5A62\u5A5A\u5A46\u5A4A\u5B70\u5BC7\u5BC5\u5BC4\u5BC2\u5BBF\u5BC6\u5C09\u5C08\u5C07\u5C60\u5C5C\u5C5D\u5D07\u5D06\u5D0E\u5D1B\u5D16\u5D22\u5D11\u5D29\u5D14\u5D19\u5D24\u5D27\u5D17\u5DE2\u5E38\u5E36\u5E33\u5E37\u5EB7\u5EB8\u5EB6\u5EB5\u5EBE\u5F35\u5F37\u5F57\u5F6C\u5F69\u5F6B\u5F97\u5F99\u5F9E\u5F98\u5FA1\u5FA0\u5F9C\u607F\u60A3\u6089\u60A0\u60A8\u60CB\u60B4\u60E6\u60BD',
      ],
      [
        'b1a1',
        '\u60C5\u60BB\u60B5\u60DC\u60BC\u60D8\u60D5\u60C6\u60DF\u60B8\u60DA\u60C7\u621A\u621B\u6248\u63A0\u63A7\u6372\u6396\u63A2\u63A5\u6377\u6367\u6398\u63AA\u6371\u63A9\u6389\u6383\u639B\u636B\u63A8\u6384\u6388\u6399\u63A1\u63AC\u6392\u638F\u6380\u637B\u6369\u6368\u637A\u655D\u6556\u6551\u6559\u6557\u555F\u654F\u6558\u6555\u6554\u659C\u659B\u65AC\u65CF\u65CB\u65CC\u65CE\u665D\u665A\u6664\u6668\u6666\u665E\u66F9\u52D7\u671B\u6881\u68AF\u68A2\u6893\u68B5\u687F\u6876\u68B1\u68A7\u6897\u68B0\u6883\u68C4\u68AD\u6886\u6885\u6894\u689D\u68A8\u689F\u68A1\u6882\u6B32\u6BBA',
      ],
      [
        'b240',
        '\u6BEB\u6BEC\u6C2B\u6D8E\u6DBC\u6DF3\u6DD9\u6DB2\u6DE1\u6DCC\u6DE4\u6DFB\u6DFA\u6E05\u6DC7\u6DCB\u6DAF\u6DD1\u6DAE\u6DDE\u6DF9\u6DB8\u6DF7\u6DF5\u6DC5\u6DD2\u6E1A\u6DB5\u6DDA\u6DEB\u6DD8\u6DEA\u6DF1\u6DEE\u6DE8\u6DC6\u6DC4\u6DAA\u6DEC\u6DBF\u6DE6\u70F9\u7109\u710A\u70FD\u70EF\u723D\u727D\u7281\u731C\u731B\u7316\u7313\u7319\u7387\u7405\u740A\u7403\u7406\u73FE\u740D\u74E0\u74F6',
      ],
      [
        'b2a1',
        '\u74F7\u751C\u7522\u7565\u7566\u7562\u7570\u758F\u75D4\u75D5\u75B5\u75CA\u75CD\u768E\u76D4\u76D2\u76DB\u7737\u773E\u773C\u7736\u7738\u773A\u786B\u7843\u784E\u7965\u7968\u796D\u79FB\u7A92\u7A95\u7B20\u7B28\u7B1B\u7B2C\u7B26\u7B19\u7B1E\u7B2E\u7C92\u7C97\u7C95\u7D46\u7D43\u7D71\u7D2E\u7D39\u7D3C\u7D40\u7D30\u7D33\u7D44\u7D2F\u7D42\u7D32\u7D31\u7F3D\u7F9E\u7F9A\u7FCC\u7FCE\u7FD2\u801C\u804A\u8046\u812F\u8116\u8123\u812B\u8129\u8130\u8124\u8202\u8235\u8237\u8236\u8239\u838E\u839E\u8398\u8378\u83A2\u8396\u83BD\u83AB\u8392\u838A\u8393\u8389\u83A0\u8377\u837B\u837C',
      ],
      [
        'b340',
        '\u8386\u83A7\u8655\u5F6A\u86C7\u86C0\u86B6\u86C4\u86B5\u86C6\u86CB\u86B1\u86AF\u86C9\u8853\u889E\u8888\u88AB\u8892\u8896\u888D\u888B\u8993\u898F\u8A2A\u8A1D\u8A23\u8A25\u8A31\u8A2D\u8A1F\u8A1B\u8A22\u8C49\u8C5A\u8CA9\u8CAC\u8CAB\u8CA8\u8CAA\u8CA7\u8D67\u8D66\u8DBE\u8DBA\u8EDB\u8EDF\u9019\u900D\u901A\u9017\u9023\u901F\u901D\u9010\u9015\u901E\u9020\u900F\u9022\u9016\u901B\u9014',
      ],
      [
        'b3a1',
        '\u90E8\u90ED\u90FD\u9157\u91CE\u91F5\u91E6\u91E3\u91E7\u91ED\u91E9\u9589\u966A\u9675\u9673\u9678\u9670\u9674\u9676\u9677\u966C\u96C0\u96EA\u96E9\u7AE0\u7ADF\u9802\u9803\u9B5A\u9CE5\u9E75\u9E7F\u9EA5\u9EBB\u50A2\u508D\u5085\u5099\u5091\u5080\u5096\u5098\u509A\u6700\u51F1\u5272\u5274\u5275\u5269\u52DE\u52DD\u52DB\u535A\u53A5\u557B\u5580\u55A7\u557C\u558A\u559D\u5598\u5582\u559C\u55AA\u5594\u5587\u558B\u5583\u55B3\u55AE\u559F\u553E\u55B2\u559A\u55BB\u55AC\u55B1\u557E\u5589\u55AB\u5599\u570D\u582F\u582A\u5834\u5824\u5830\u5831\u5821\u581D\u5820\u58F9\u58FA\u5960',
      ],
      [
        'b440',
        '\u5A77\u5A9A\u5A7F\u5A92\u5A9B\u5AA7\u5B73\u5B71\u5BD2\u5BCC\u5BD3\u5BD0\u5C0A\u5C0B\u5C31\u5D4C\u5D50\u5D34\u5D47\u5DFD\u5E45\u5E3D\u5E40\u5E43\u5E7E\u5ECA\u5EC1\u5EC2\u5EC4\u5F3C\u5F6D\u5FA9\u5FAA\u5FA8\u60D1\u60E1\u60B2\u60B6\u60E0\u611C\u6123\u60FA\u6115\u60F0\u60FB\u60F4\u6168\u60F1\u610E\u60F6\u6109\u6100\u6112\u621F\u6249\u63A3\u638C\u63CF\u63C0\u63E9\u63C9\u63C6\u63CD',
      ],
      [
        'b4a1',
        '\u63D2\u63E3\u63D0\u63E1\u63D6\u63ED\u63EE\u6376\u63F4\u63EA\u63DB\u6452\u63DA\u63F9\u655E\u6566\u6562\u6563\u6591\u6590\u65AF\u666E\u6670\u6674\u6676\u666F\u6691\u667A\u667E\u6677\u66FE\u66FF\u671F\u671D\u68FA\u68D5\u68E0\u68D8\u68D7\u6905\u68DF\u68F5\u68EE\u68E7\u68F9\u68D2\u68F2\u68E3\u68CB\u68CD\u690D\u6912\u690E\u68C9\u68DA\u696E\u68FB\u6B3E\u6B3A\u6B3D\u6B98\u6B96\u6BBC\u6BEF\u6C2E\u6C2F\u6C2C\u6E2F\u6E38\u6E54\u6E21\u6E32\u6E67\u6E4A\u6E20\u6E25\u6E23\u6E1B\u6E5B\u6E58\u6E24\u6E56\u6E6E\u6E2D\u6E26\u6E6F\u6E34\u6E4D\u6E3A\u6E2C\u6E43\u6E1D\u6E3E\u6ECB',
      ],
      [
        'b540',
        '\u6E89\u6E19\u6E4E\u6E63\u6E44\u6E72\u6E69\u6E5F\u7119\u711A\u7126\u7130\u7121\u7136\u716E\u711C\u724C\u7284\u7280\u7336\u7325\u7334\u7329\u743A\u742A\u7433\u7422\u7425\u7435\u7436\u7434\u742F\u741B\u7426\u7428\u7525\u7526\u756B\u756A\u75E2\u75DB\u75E3\u75D9\u75D8\u75DE\u75E0\u767B\u767C\u7696\u7693\u76B4\u76DC\u774F\u77ED\u785D\u786C\u786F\u7A0D\u7A08\u7A0B\u7A05\u7A00\u7A98',
      ],
      [
        'b5a1',
        '\u7A97\u7A96\u7AE5\u7AE3\u7B49\u7B56\u7B46\u7B50\u7B52\u7B54\u7B4D\u7B4B\u7B4F\u7B51\u7C9F\u7CA5\u7D5E\u7D50\u7D68\u7D55\u7D2B\u7D6E\u7D72\u7D61\u7D66\u7D62\u7D70\u7D73\u5584\u7FD4\u7FD5\u800B\u8052\u8085\u8155\u8154\u814B\u8151\u814E\u8139\u8146\u813E\u814C\u8153\u8174\u8212\u821C\u83E9\u8403\u83F8\u840D\u83E0\u83C5\u840B\u83C1\u83EF\u83F1\u83F4\u8457\u840A\u83F0\u840C\u83CC\u83FD\u83F2\u83CA\u8438\u840E\u8404\u83DC\u8407\u83D4\u83DF\u865B\u86DF\u86D9\u86ED\u86D4\u86DB\u86E4\u86D0\u86DE\u8857\u88C1\u88C2\u88B1\u8983\u8996\u8A3B\u8A60\u8A55\u8A5E\u8A3C\u8A41',
      ],
      [
        'b640',
        '\u8A54\u8A5B\u8A50\u8A46\u8A34\u8A3A\u8A36\u8A56\u8C61\u8C82\u8CAF\u8CBC\u8CB3\u8CBD\u8CC1\u8CBB\u8CC0\u8CB4\u8CB7\u8CB6\u8CBF\u8CB8\u8D8A\u8D85\u8D81\u8DCE\u8DDD\u8DCB\u8DDA\u8DD1\u8DCC\u8DDB\u8DC6\u8EFB\u8EF8\u8EFC\u8F9C\u902E\u9035\u9031\u9038\u9032\u9036\u9102\u90F5\u9109\u90FE\u9163\u9165\u91CF\u9214\u9215\u9223\u9209\u921E\u920D\u9210\u9207\u9211\u9594\u958F\u958B\u9591',
      ],
      [
        'b6a1',
        '\u9593\u9592\u958E\u968A\u968E\u968B\u967D\u9685\u9686\u968D\u9672\u9684\u96C1\u96C5\u96C4\u96C6\u96C7\u96EF\u96F2\u97CC\u9805\u9806\u9808\u98E7\u98EA\u98EF\u98E9\u98F2\u98ED\u99AE\u99AD\u9EC3\u9ECD\u9ED1\u4E82\u50AD\u50B5\u50B2\u50B3\u50C5\u50BE\u50AC\u50B7\u50BB\u50AF\u50C7\u527F\u5277\u527D\u52DF\u52E6\u52E4\u52E2\u52E3\u532F\u55DF\u55E8\u55D3\u55E6\u55CE\u55DC\u55C7\u55D1\u55E3\u55E4\u55EF\u55DA\u55E1\u55C5\u55C6\u55E5\u55C9\u5712\u5713\u585E\u5851\u5858\u5857\u585A\u5854\u586B\u584C\u586D\u584A\u5862\u5852\u584B\u5967\u5AC1\u5AC9\u5ACC\u5ABE\u5ABD\u5ABC',
      ],
      [
        'b740',
        '\u5AB3\u5AC2\u5AB2\u5D69\u5D6F\u5E4C\u5E79\u5EC9\u5EC8\u5F12\u5F59\u5FAC\u5FAE\u611A\u610F\u6148\u611F\u60F3\u611B\u60F9\u6101\u6108\u614E\u614C\u6144\u614D\u613E\u6134\u6127\u610D\u6106\u6137\u6221\u6222\u6413\u643E\u641E\u642A\u642D\u643D\u642C\u640F\u641C\u6414\u640D\u6436\u6416\u6417\u6406\u656C\u659F\u65B0\u6697\u6689\u6687\u6688\u6696\u6684\u6698\u668D\u6703\u6994\u696D',
      ],
      [
        'b7a1',
        '\u695A\u6977\u6960\u6954\u6975\u6930\u6982\u694A\u6968\u696B\u695E\u6953\u6979\u6986\u695D\u6963\u695B\u6B47\u6B72\u6BC0\u6BBF\u6BD3\u6BFD\u6EA2\u6EAF\u6ED3\u6EB6\u6EC2\u6E90\u6E9D\u6EC7\u6EC5\u6EA5\u6E98\u6EBC\u6EBA\u6EAB\u6ED1\u6E96\u6E9C\u6EC4\u6ED4\u6EAA\u6EA7\u6EB4\u714E\u7159\u7169\u7164\u7149\u7167\u715C\u716C\u7166\u714C\u7165\u715E\u7146\u7168\u7156\u723A\u7252\u7337\u7345\u733F\u733E\u746F\u745A\u7455\u745F\u745E\u7441\u743F\u7459\u745B\u745C\u7576\u7578\u7600\u75F0\u7601\u75F2\u75F1\u75FA\u75FF\u75F4\u75F3\u76DE\u76DF\u775B\u776B\u7766\u775E\u7763',
      ],
      [
        'b840',
        '\u7779\u776A\u776C\u775C\u7765\u7768\u7762\u77EE\u788E\u78B0\u7897\u7898\u788C\u7889\u787C\u7891\u7893\u787F\u797A\u797F\u7981\u842C\u79BD\u7A1C\u7A1A\u7A20\u7A14\u7A1F\u7A1E\u7A9F\u7AA0\u7B77\u7BC0\u7B60\u7B6E\u7B67\u7CB1\u7CB3\u7CB5\u7D93\u7D79\u7D91\u7D81\u7D8F\u7D5B\u7F6E\u7F69\u7F6A\u7F72\u7FA9\u7FA8\u7FA4\u8056\u8058\u8086\u8084\u8171\u8170\u8178\u8165\u816E\u8173\u816B',
      ],
      [
        'b8a1',
        '\u8179\u817A\u8166\u8205\u8247\u8482\u8477\u843D\u8431\u8475\u8466\u846B\u8449\u846C\u845B\u843C\u8435\u8461\u8463\u8469\u846D\u8446\u865E\u865C\u865F\u86F9\u8713\u8708\u8707\u8700\u86FE\u86FB\u8702\u8703\u8706\u870A\u8859\u88DF\u88D4\u88D9\u88DC\u88D8\u88DD\u88E1\u88CA\u88D5\u88D2\u899C\u89E3\u8A6B\u8A72\u8A73\u8A66\u8A69\u8A70\u8A87\u8A7C\u8A63\u8AA0\u8A71\u8A85\u8A6D\u8A62\u8A6E\u8A6C\u8A79\u8A7B\u8A3E\u8A68\u8C62\u8C8A\u8C89\u8CCA\u8CC7\u8CC8\u8CC4\u8CB2\u8CC3\u8CC2\u8CC5\u8DE1\u8DDF\u8DE8\u8DEF\u8DF3\u8DFA\u8DEA\u8DE4\u8DE6\u8EB2\u8F03\u8F09\u8EFE\u8F0A',
      ],
      [
        'b940',
        '\u8F9F\u8FB2\u904B\u904A\u9053\u9042\u9054\u903C\u9055\u9050\u9047\u904F\u904E\u904D\u9051\u903E\u9041\u9112\u9117\u916C\u916A\u9169\u91C9\u9237\u9257\u9238\u923D\u9240\u923E\u925B\u924B\u9264\u9251\u9234\u9249\u924D\u9245\u9239\u923F\u925A\u9598\u9698\u9694\u9695\u96CD\u96CB\u96C9\u96CA\u96F7\u96FB\u96F9\u96F6\u9756\u9774\u9776\u9810\u9811\u9813\u980A\u9812\u980C\u98FC\u98F4',
      ],
      [
        'b9a1',
        '\u98FD\u98FE\u99B3\u99B1\u99B4\u9AE1\u9CE9\u9E82\u9F0E\u9F13\u9F20\u50E7\u50EE\u50E5\u50D6\u50ED\u50DA\u50D5\u50CF\u50D1\u50F1\u50CE\u50E9\u5162\u51F3\u5283\u5282\u5331\u53AD\u55FE\u5600\u561B\u5617\u55FD\u5614\u5606\u5609\u560D\u560E\u55F7\u5616\u561F\u5608\u5610\u55F6\u5718\u5716\u5875\u587E\u5883\u5893\u588A\u5879\u5885\u587D\u58FD\u5925\u5922\u5924\u596A\u5969\u5AE1\u5AE6\u5AE9\u5AD7\u5AD6\u5AD8\u5AE3\u5B75\u5BDE\u5BE7\u5BE1\u5BE5\u5BE6\u5BE8\u5BE2\u5BE4\u5BDF\u5C0D\u5C62\u5D84\u5D87\u5E5B\u5E63\u5E55\u5E57\u5E54\u5ED3\u5ED6\u5F0A\u5F46\u5F70\u5FB9\u6147',
      ],
      [
        'ba40',
        '\u613F\u614B\u6177\u6162\u6163\u615F\u615A\u6158\u6175\u622A\u6487\u6458\u6454\u64A4\u6478\u645F\u647A\u6451\u6467\u6434\u646D\u647B\u6572\u65A1\u65D7\u65D6\u66A2\u66A8\u669D\u699C\u69A8\u6995\u69C1\u69AE\u69D3\u69CB\u699B\u69B7\u69BB\u69AB\u69B4\u69D0\u69CD\u69AD\u69CC\u69A6\u69C3\u69A3\u6B49\u6B4C\u6C33\u6F33\u6F14\u6EFE\u6F13\u6EF4\u6F29\u6F3E\u6F20\u6F2C\u6F0F\u6F02\u6F22',
      ],
      [
        'baa1',
        '\u6EFF\u6EEF\u6F06\u6F31\u6F38\u6F32\u6F23\u6F15\u6F2B\u6F2F\u6F88\u6F2A\u6EEC\u6F01\u6EF2\u6ECC\u6EF7\u7194\u7199\u717D\u718A\u7184\u7192\u723E\u7292\u7296\u7344\u7350\u7464\u7463\u746A\u7470\u746D\u7504\u7591\u7627\u760D\u760B\u7609\u7613\u76E1\u76E3\u7784\u777D\u777F\u7761\u78C1\u789F\u78A7\u78B3\u78A9\u78A3\u798E\u798F\u798D\u7A2E\u7A31\u7AAA\u7AA9\u7AED\u7AEF\u7BA1\u7B95\u7B8B\u7B75\u7B97\u7B9D\u7B94\u7B8F\u7BB8\u7B87\u7B84\u7CB9\u7CBD\u7CBE\u7DBB\u7DB0\u7D9C\u7DBD\u7DBE\u7DA0\u7DCA\u7DB4\u7DB2\u7DB1\u7DBA\u7DA2\u7DBF\u7DB5\u7DB8\u7DAD\u7DD2\u7DC7\u7DAC',
      ],
      [
        'bb40',
        '\u7F70\u7FE0\u7FE1\u7FDF\u805E\u805A\u8087\u8150\u8180\u818F\u8188\u818A\u817F\u8182\u81E7\u81FA\u8207\u8214\u821E\u824B\u84C9\u84BF\u84C6\u84C4\u8499\u849E\u84B2\u849C\u84CB\u84B8\u84C0\u84D3\u8490\u84BC\u84D1\u84CA\u873F\u871C\u873B\u8722\u8725\u8734\u8718\u8755\u8737\u8729\u88F3\u8902\u88F4\u88F9\u88F8\u88FD\u88E8\u891A\u88EF\u8AA6\u8A8C\u8A9E\u8AA3\u8A8D\u8AA1\u8A93\u8AA4',
      ],
      [
        'bba1',
        '\u8AAA\u8AA5\u8AA8\u8A98\u8A91\u8A9A\u8AA7\u8C6A\u8C8D\u8C8C\u8CD3\u8CD1\u8CD2\u8D6B\u8D99\u8D95\u8DFC\u8F14\u8F12\u8F15\u8F13\u8FA3\u9060\u9058\u905C\u9063\u9059\u905E\u9062\u905D\u905B\u9119\u9118\u911E\u9175\u9178\u9177\u9174\u9278\u9280\u9285\u9298\u9296\u927B\u9293\u929C\u92A8\u927C\u9291\u95A1\u95A8\u95A9\u95A3\u95A5\u95A4\u9699\u969C\u969B\u96CC\u96D2\u9700\u977C\u9785\u97F6\u9817\u9818\u98AF\u98B1\u9903\u9905\u990C\u9909\u99C1\u9AAF\u9AB0\u9AE6\u9B41\u9B42\u9CF4\u9CF6\u9CF3\u9EBC\u9F3B\u9F4A\u5104\u5100\u50FB\u50F5\u50F9\u5102\u5108\u5109\u5105\u51DC',
      ],
      [
        'bc40',
        '\u5287\u5288\u5289\u528D\u528A\u52F0\u53B2\u562E\u563B\u5639\u5632\u563F\u5634\u5629\u5653\u564E\u5657\u5674\u5636\u562F\u5630\u5880\u589F\u589E\u58B3\u589C\u58AE\u58A9\u58A6\u596D\u5B09\u5AFB\u5B0B\u5AF5\u5B0C\u5B08\u5BEE\u5BEC\u5BE9\u5BEB\u5C64\u5C65\u5D9D\u5D94\u5E62\u5E5F\u5E61\u5EE2\u5EDA\u5EDF\u5EDD\u5EE3\u5EE0\u5F48\u5F71\u5FB7\u5FB5\u6176\u6167\u616E\u615D\u6155\u6182',
      ],
      [
        'bca1',
        '\u617C\u6170\u616B\u617E\u61A7\u6190\u61AB\u618E\u61AC\u619A\u61A4\u6194\u61AE\u622E\u6469\u646F\u6479\u649E\u64B2\u6488\u6490\u64B0\u64A5\u6493\u6495\u64A9\u6492\u64AE\u64AD\u64AB\u649A\u64AC\u6499\u64A2\u64B3\u6575\u6577\u6578\u66AE\u66AB\u66B4\u66B1\u6A23\u6A1F\u69E8\u6A01\u6A1E\u6A19\u69FD\u6A21\u6A13\u6A0A\u69F3\u6A02\u6A05\u69ED\u6A11\u6B50\u6B4E\u6BA4\u6BC5\u6BC6\u6F3F\u6F7C\u6F84\u6F51\u6F66\u6F54\u6F86\u6F6D\u6F5B\u6F78\u6F6E\u6F8E\u6F7A\u6F70\u6F64\u6F97\u6F58\u6ED5\u6F6F\u6F60\u6F5F\u719F\u71AC\u71B1\u71A8\u7256\u729B\u734E\u7357\u7469\u748B\u7483',
      ],
      [
        'bd40',
        '\u747E\u7480\u757F\u7620\u7629\u761F\u7624\u7626\u7621\u7622\u769A\u76BA\u76E4\u778E\u7787\u778C\u7791\u778B\u78CB\u78C5\u78BA\u78CA\u78BE\u78D5\u78BC\u78D0\u7A3F\u7A3C\u7A40\u7A3D\u7A37\u7A3B\u7AAF\u7AAE\u7BAD\u7BB1\u7BC4\u7BB4\u7BC6\u7BC7\u7BC1\u7BA0\u7BCC\u7CCA\u7DE0\u7DF4\u7DEF\u7DFB\u7DD8\u7DEC\u7DDD\u7DE8\u7DE3\u7DDA\u7DDE\u7DE9\u7D9E\u7DD9\u7DF2\u7DF9\u7F75\u7F77\u7FAF',
      ],
      [
        'bda1',
        '\u7FE9\u8026\u819B\u819C\u819D\u81A0\u819A\u8198\u8517\u853D\u851A\u84EE\u852C\u852D\u8513\u8511\u8523\u8521\u8514\u84EC\u8525\u84FF\u8506\u8782\u8774\u8776\u8760\u8766\u8778\u8768\u8759\u8757\u874C\u8753\u885B\u885D\u8910\u8907\u8912\u8913\u8915\u890A\u8ABC\u8AD2\u8AC7\u8AC4\u8A95\u8ACB\u8AF8\u8AB2\u8AC9\u8AC2\u8ABF\u8AB0\u8AD6\u8ACD\u8AB6\u8AB9\u8ADB\u8C4C\u8C4E\u8C6C\u8CE0\u8CDE\u8CE6\u8CE4\u8CEC\u8CED\u8CE2\u8CE3\u8CDC\u8CEA\u8CE1\u8D6D\u8D9F\u8DA3\u8E2B\u8E10\u8E1D\u8E22\u8E0F\u8E29\u8E1F\u8E21\u8E1E\u8EBA\u8F1D\u8F1B\u8F1F\u8F29\u8F26\u8F2A\u8F1C\u8F1E',
      ],
      [
        'be40',
        '\u8F25\u9069\u906E\u9068\u906D\u9077\u9130\u912D\u9127\u9131\u9187\u9189\u918B\u9183\u92C5\u92BB\u92B7\u92EA\u92AC\u92E4\u92C1\u92B3\u92BC\u92D2\u92C7\u92F0\u92B2\u95AD\u95B1\u9704\u9706\u9707\u9709\u9760\u978D\u978B\u978F\u9821\u982B\u981C\u98B3\u990A\u9913\u9912\u9918\u99DD\u99D0\u99DF\u99DB\u99D1\u99D5\u99D2\u99D9\u9AB7\u9AEE\u9AEF\u9B27\u9B45\u9B44\u9B77\u9B6F\u9D06\u9D09',
      ],
      [
        'bea1',
        '\u9D03\u9EA9\u9EBE\u9ECE\u58A8\u9F52\u5112\u5118\u5114\u5110\u5115\u5180\u51AA\u51DD\u5291\u5293\u52F3\u5659\u566B\u5679\u5669\u5664\u5678\u566A\u5668\u5665\u5671\u566F\u566C\u5662\u5676\u58C1\u58BE\u58C7\u58C5\u596E\u5B1D\u5B34\u5B78\u5BF0\u5C0E\u5F4A\u61B2\u6191\u61A9\u618A\u61CD\u61B6\u61BE\u61CA\u61C8\u6230\u64C5\u64C1\u64CB\u64BB\u64BC\u64DA\u64C4\u64C7\u64C2\u64CD\u64BF\u64D2\u64D4\u64BE\u6574\u66C6\u66C9\u66B9\u66C4\u66C7\u66B8\u6A3D\u6A38\u6A3A\u6A59\u6A6B\u6A58\u6A39\u6A44\u6A62\u6A61\u6A4B\u6A47\u6A35\u6A5F\u6A48\u6B59\u6B77\u6C05\u6FC2\u6FB1\u6FA1',
      ],
      [
        'bf40',
        '\u6FC3\u6FA4\u6FC1\u6FA7\u6FB3\u6FC0\u6FB9\u6FB6\u6FA6\u6FA0\u6FB4\u71BE\u71C9\u71D0\u71D2\u71C8\u71D5\u71B9\u71CE\u71D9\u71DC\u71C3\u71C4\u7368\u749C\u74A3\u7498\u749F\u749E\u74E2\u750C\u750D\u7634\u7638\u763A\u76E7\u76E5\u77A0\u779E\u779F\u77A5\u78E8\u78DA\u78EC\u78E7\u79A6\u7A4D\u7A4E\u7A46\u7A4C\u7A4B\u7ABA\u7BD9\u7C11\u7BC9\u7BE4\u7BDB\u7BE1\u7BE9\u7BE6\u7CD5\u7CD6\u7E0A',
      ],
      [
        'bfa1',
        '\u7E11\u7E08\u7E1B\u7E23\u7E1E\u7E1D\u7E09\u7E10\u7F79\u7FB2\u7FF0\u7FF1\u7FEE\u8028\u81B3\u81A9\u81A8\u81FB\u8208\u8258\u8259\u854A\u8559\u8548\u8568\u8569\u8543\u8549\u856D\u856A\u855E\u8783\u879F\u879E\u87A2\u878D\u8861\u892A\u8932\u8925\u892B\u8921\u89AA\u89A6\u8AE6\u8AFA\u8AEB\u8AF1\u8B00\u8ADC\u8AE7\u8AEE\u8AFE\u8B01\u8B02\u8AF7\u8AED\u8AF3\u8AF6\u8AFC\u8C6B\u8C6D\u8C93\u8CF4\u8E44\u8E31\u8E34\u8E42\u8E39\u8E35\u8F3B\u8F2F\u8F38\u8F33\u8FA8\u8FA6\u9075\u9074\u9078\u9072\u907C\u907A\u9134\u9192\u9320\u9336\u92F8\u9333\u932F\u9322\u92FC\u932B\u9304\u931A',
      ],
      [
        'c040',
        '\u9310\u9326\u9321\u9315\u932E\u9319\u95BB\u96A7\u96A8\u96AA\u96D5\u970E\u9711\u9716\u970D\u9713\u970F\u975B\u975C\u9766\u9798\u9830\u9838\u983B\u9837\u982D\u9839\u9824\u9910\u9928\u991E\u991B\u9921\u991A\u99ED\u99E2\u99F1\u9AB8\u9ABC\u9AFB\u9AED\u9B28\u9B91\u9D15\u9D23\u9D26\u9D28\u9D12\u9D1B\u9ED8\u9ED4\u9F8D\u9F9C\u512A\u511F\u5121\u5132\u52F5\u568E\u5680\u5690\u5685\u5687',
      ],
      [
        'c0a1',
        '\u568F\u58D5\u58D3\u58D1\u58CE\u5B30\u5B2A\u5B24\u5B7A\u5C37\u5C68\u5DBC\u5DBA\u5DBD\u5DB8\u5E6B\u5F4C\u5FBD\u61C9\u61C2\u61C7\u61E6\u61CB\u6232\u6234\u64CE\u64CA\u64D8\u64E0\u64F0\u64E6\u64EC\u64F1\u64E2\u64ED\u6582\u6583\u66D9\u66D6\u6A80\u6A94\u6A84\u6AA2\u6A9C\u6ADB\u6AA3\u6A7E\u6A97\u6A90\u6AA0\u6B5C\u6BAE\u6BDA\u6C08\u6FD8\u6FF1\u6FDF\u6FE0\u6FDB\u6FE4\u6FEB\u6FEF\u6F80\u6FEC\u6FE1\u6FE9\u6FD5\u6FEE\u6FF0\u71E7\u71DF\u71EE\u71E6\u71E5\u71ED\u71EC\u71F4\u71E0\u7235\u7246\u7370\u7372\u74A9\u74B0\u74A6\u74A8\u7646\u7642\u764C\u76EA\u77B3\u77AA\u77B0\u77AC',
      ],
      [
        'c140',
        '\u77A7\u77AD\u77EF\u78F7\u78FA\u78F4\u78EF\u7901\u79A7\u79AA\u7A57\u7ABF\u7C07\u7C0D\u7BFE\u7BF7\u7C0C\u7BE0\u7CE0\u7CDC\u7CDE\u7CE2\u7CDF\u7CD9\u7CDD\u7E2E\u7E3E\u7E46\u7E37\u7E32\u7E43\u7E2B\u7E3D\u7E31\u7E45\u7E41\u7E34\u7E39\u7E48\u7E35\u7E3F\u7E2F\u7F44\u7FF3\u7FFC\u8071\u8072\u8070\u806F\u8073\u81C6\u81C3\u81BA\u81C2\u81C0\u81BF\u81BD\u81C9\u81BE\u81E8\u8209\u8271\u85AA',
      ],
      [
        'c1a1',
        '\u8584\u857E\u859C\u8591\u8594\u85AF\u859B\u8587\u85A8\u858A\u8667\u87C0\u87D1\u87B3\u87D2\u87C6\u87AB\u87BB\u87BA\u87C8\u87CB\u893B\u8936\u8944\u8938\u893D\u89AC\u8B0E\u8B17\u8B19\u8B1B\u8B0A\u8B20\u8B1D\u8B04\u8B10\u8C41\u8C3F\u8C73\u8CFA\u8CFD\u8CFC\u8CF8\u8CFB\u8DA8\u8E49\u8E4B\u8E48\u8E4A\u8F44\u8F3E\u8F42\u8F45\u8F3F\u907F\u907D\u9084\u9081\u9082\u9080\u9139\u91A3\u919E\u919C\u934D\u9382\u9328\u9375\u934A\u9365\u934B\u9318\u937E\u936C\u935B\u9370\u935A\u9354\u95CA\u95CB\u95CC\u95C8\u95C6\u96B1\u96B8\u96D6\u971C\u971E\u97A0\u97D3\u9846\u98B6\u9935\u9A01',
      ],
      [
        'c240',
        '\u99FF\u9BAE\u9BAB\u9BAA\u9BAD\u9D3B\u9D3F\u9E8B\u9ECF\u9EDE\u9EDC\u9EDD\u9EDB\u9F3E\u9F4B\u53E2\u5695\u56AE\u58D9\u58D8\u5B38\u5F5D\u61E3\u6233\u64F4\u64F2\u64FE\u6506\u64FA\u64FB\u64F7\u65B7\u66DC\u6726\u6AB3\u6AAC\u6AC3\u6ABB\u6AB8\u6AC2\u6AAE\u6AAF\u6B5F\u6B78\u6BAF\u7009\u700B\u6FFE\u7006\u6FFA\u7011\u700F\u71FB\u71FC\u71FE\u71F8\u7377\u7375\u74A7\u74BF\u7515\u7656\u7658',
      ],
      [
        'c2a1',
        '\u7652\u77BD\u77BF\u77BB\u77BC\u790E\u79AE\u7A61\u7A62\u7A60\u7AC4\u7AC5\u7C2B\u7C27\u7C2A\u7C1E\u7C23\u7C21\u7CE7\u7E54\u7E55\u7E5E\u7E5A\u7E61\u7E52\u7E59\u7F48\u7FF9\u7FFB\u8077\u8076\u81CD\u81CF\u820A\u85CF\u85A9\u85CD\u85D0\u85C9\u85B0\u85BA\u85B9\u85A6\u87EF\u87EC\u87F2\u87E0\u8986\u89B2\u89F4\u8B28\u8B39\u8B2C\u8B2B\u8C50\u8D05\u8E59\u8E63\u8E66\u8E64\u8E5F\u8E55\u8EC0\u8F49\u8F4D\u9087\u9083\u9088\u91AB\u91AC\u91D0\u9394\u938A\u9396\u93A2\u93B3\u93AE\u93AC\u93B0\u9398\u939A\u9397\u95D4\u95D6\u95D0\u95D5\u96E2\u96DC\u96D9\u96DB\u96DE\u9724\u97A3\u97A6',
      ],
      [
        'c340',
        '\u97AD\u97F9\u984D\u984F\u984C\u984E\u9853\u98BA\u993E\u993F\u993D\u992E\u99A5\u9A0E\u9AC1\u9B03\u9B06\u9B4F\u9B4E\u9B4D\u9BCA\u9BC9\u9BFD\u9BC8\u9BC0\u9D51\u9D5D\u9D60\u9EE0\u9F15\u9F2C\u5133\u56A5\u58DE\u58DF\u58E2\u5BF5\u9F90\u5EEC\u61F2\u61F7\u61F6\u61F5\u6500\u650F\u66E0\u66DD\u6AE5\u6ADD\u6ADA\u6AD3\u701B\u701F\u7028\u701A\u701D\u7015\u7018\u7206\u720D\u7258\u72A2\u7378',
      ],
      [
        'c3a1',
        '\u737A\u74BD\u74CA\u74E3\u7587\u7586\u765F\u7661\u77C7\u7919\u79B1\u7A6B\u7A69\u7C3E\u7C3F\u7C38\u7C3D\u7C37\u7C40\u7E6B\u7E6D\u7E79\u7E69\u7E6A\u7F85\u7E73\u7FB6\u7FB9\u7FB8\u81D8\u85E9\u85DD\u85EA\u85D5\u85E4\u85E5\u85F7\u87FB\u8805\u880D\u87F9\u87FE\u8960\u895F\u8956\u895E\u8B41\u8B5C\u8B58\u8B49\u8B5A\u8B4E\u8B4F\u8B46\u8B59\u8D08\u8D0A\u8E7C\u8E72\u8E87\u8E76\u8E6C\u8E7A\u8E74\u8F54\u8F4E\u8FAD\u908A\u908B\u91B1\u91AE\u93E1\u93D1\u93DF\u93C3\u93C8\u93DC\u93DD\u93D6\u93E2\u93CD\u93D8\u93E4\u93D7\u93E8\u95DC\u96B4\u96E3\u972A\u9727\u9761\u97DC\u97FB\u985E',
      ],
      [
        'c440',
        '\u9858\u985B\u98BC\u9945\u9949\u9A16\u9A19\u9B0D\u9BE8\u9BE7\u9BD6\u9BDB\u9D89\u9D61\u9D72\u9D6A\u9D6C\u9E92\u9E97\u9E93\u9EB4\u52F8\u56A8\u56B7\u56B6\u56B4\u56BC\u58E4\u5B40\u5B43\u5B7D\u5BF6\u5DC9\u61F8\u61FA\u6518\u6514\u6519\u66E6\u6727\u6AEC\u703E\u7030\u7032\u7210\u737B\u74CF\u7662\u7665\u7926\u792A\u792C\u792B\u7AC7\u7AF6\u7C4C\u7C43\u7C4D\u7CEF\u7CF0\u8FAE\u7E7D\u7E7C',
      ],
      [
        'c4a1',
        '\u7E82\u7F4C\u8000\u81DA\u8266\u85FB\u85F9\u8611\u85FA\u8606\u860B\u8607\u860A\u8814\u8815\u8964\u89BA\u89F8\u8B70\u8B6C\u8B66\u8B6F\u8B5F\u8B6B\u8D0F\u8D0D\u8E89\u8E81\u8E85\u8E82\u91B4\u91CB\u9418\u9403\u93FD\u95E1\u9730\u98C4\u9952\u9951\u99A8\u9A2B\u9A30\u9A37\u9A35\u9C13\u9C0D\u9E79\u9EB5\u9EE8\u9F2F\u9F5F\u9F63\u9F61\u5137\u5138\u56C1\u56C0\u56C2\u5914\u5C6C\u5DCD\u61FC\u61FE\u651D\u651C\u6595\u66E9\u6AFB\u6B04\u6AFA\u6BB2\u704C\u721B\u72A7\u74D6\u74D4\u7669\u77D3\u7C50\u7E8F\u7E8C\u7FBC\u8617\u862D\u861A\u8823\u8822\u8821\u881F\u896A\u896C\u89BD\u8B74',
      ],
      [
        'c540',
        '\u8B77\u8B7D\u8D13\u8E8A\u8E8D\u8E8B\u8F5F\u8FAF\u91BA\u942E\u9433\u9435\u943A\u9438\u9432\u942B\u95E2\u9738\u9739\u9732\u97FF\u9867\u9865\u9957\u9A45\u9A43\u9A40\u9A3E\u9ACF\u9B54\u9B51\u9C2D\u9C25\u9DAF\u9DB4\u9DC2\u9DB8\u9E9D\u9EEF\u9F19\u9F5C\u9F66\u9F67\u513C\u513B\u56C8\u56CA\u56C9\u5B7F\u5DD4\u5DD2\u5F4E\u61FF\u6524\u6B0A\u6B61\u7051\u7058\u7380\u74E4\u758A\u766E\u766C',
      ],
      [
        'c5a1',
        '\u79B3\u7C60\u7C5F\u807E\u807D\u81DF\u8972\u896F\u89FC\u8B80\u8D16\u8D17\u8E91\u8E93\u8F61\u9148\u9444\u9451\u9452\u973D\u973E\u97C3\u97C1\u986B\u9955\u9A55\u9A4D\u9AD2\u9B1A\u9C49\u9C31\u9C3E\u9C3B\u9DD3\u9DD7\u9F34\u9F6C\u9F6A\u9F94\u56CC\u5DD6\u6200\u6523\u652B\u652A\u66EC\u6B10\u74DA\u7ACA\u7C64\u7C63\u7C65\u7E93\u7E96\u7E94\u81E2\u8638\u863F\u8831\u8B8A\u9090\u908F\u9463\u9460\u9464\u9768\u986F\u995C\u9A5A\u9A5B\u9A57\u9AD3\u9AD4\u9AD1\u9C54\u9C57\u9C56\u9DE5\u9E9F\u9EF4\u56D1\u58E9\u652C\u705E\u7671\u7672\u77D7\u7F50\u7F88\u8836\u8839\u8862\u8B93\u8B92',
      ],
      [
        'c640',
        '\u8B96\u8277\u8D1B\u91C0\u946A\u9742\u9748\u9744\u97C6\u9870\u9A5F\u9B22\u9B58\u9C5F\u9DF9\u9DFA\u9E7C\u9E7D\u9F07\u9F77\u9F72\u5EF3\u6B16\u7063\u7C6C\u7C6E\u883B\u89C0\u8EA1\u91C1\u9472\u9470\u9871\u995E\u9AD6\u9B23\u9ECC\u7064\u77DA\u8B9A\u9477\u97C9\u9A62\u9A65\u7E9C\u8B9C\u8EAA\u91C5\u947D\u947E\u947C\u9C77\u9C78\u9EF7\u8C54\u947F\u9E1A\u7228\u9A6A\u9B31\u9E1B\u9E1E\u7C72',
      ],
      [
        'c940',
        '\u4E42\u4E5C\u51F5\u531A\u5382\u4E07\u4E0C\u4E47\u4E8D\u56D7\uFA0C\u5C6E\u5F73\u4E0F\u5187\u4E0E\u4E2E\u4E93\u4EC2\u4EC9\u4EC8\u5198\u52FC\u536C\u53B9\u5720\u5903\u592C\u5C10\u5DFF\u65E1\u6BB3\u6BCC\u6C14\u723F\u4E31\u4E3C\u4EE8\u4EDC\u4EE9\u4EE1\u4EDD\u4EDA\u520C\u531C\u534C\u5722\u5723\u5917\u592F\u5B81\u5B84\u5C12\u5C3B\u5C74\u5C73\u5E04\u5E80\u5E82\u5FC9\u6209\u6250\u6C15',
      ],
      [
        'c9a1',
        '\u6C36\u6C43\u6C3F\u6C3B\u72AE\u72B0\u738A\u79B8\u808A\u961E\u4F0E\u4F18\u4F2C\u4EF5\u4F14\u4EF1\u4F00\u4EF7\u4F08\u4F1D\u4F02\u4F05\u4F22\u4F13\u4F04\u4EF4\u4F12\u51B1\u5213\u5209\u5210\u52A6\u5322\u531F\u534D\u538A\u5407\u56E1\u56DF\u572E\u572A\u5734\u593C\u5980\u597C\u5985\u597B\u597E\u5977\u597F\u5B56\u5C15\u5C25\u5C7C\u5C7A\u5C7B\u5C7E\u5DDF\u5E75\u5E84\u5F02\u5F1A\u5F74\u5FD5\u5FD4\u5FCF\u625C\u625E\u6264\u6261\u6266\u6262\u6259\u6260\u625A\u6265\u65EF\u65EE\u673E\u6739\u6738\u673B\u673A\u673F\u673C\u6733\u6C18\u6C46\u6C52\u6C5C\u6C4F\u6C4A\u6C54\u6C4B',
      ],
      [
        'ca40',
        '\u6C4C\u7071\u725E\u72B4\u72B5\u738E\u752A\u767F\u7A75\u7F51\u8278\u827C\u8280\u827D\u827F\u864D\u897E\u9099\u9097\u9098\u909B\u9094\u9622\u9624\u9620\u9623\u4F56\u4F3B\u4F62\u4F49\u4F53\u4F64\u4F3E\u4F67\u4F52\u4F5F\u4F41\u4F58\u4F2D\u4F33\u4F3F\u4F61\u518F\u51B9\u521C\u521E\u5221\u52AD\u52AE\u5309\u5363\u5372\u538E\u538F\u5430\u5437\u542A\u5454\u5445\u5419\u541C\u5425\u5418',
      ],
      [
        'caa1',
        '\u543D\u544F\u5441\u5428\u5424\u5447\u56EE\u56E7\u56E5\u5741\u5745\u574C\u5749\u574B\u5752\u5906\u5940\u59A6\u5998\u59A0\u5997\u598E\u59A2\u5990\u598F\u59A7\u59A1\u5B8E\u5B92\u5C28\u5C2A\u5C8D\u5C8F\u5C88\u5C8B\u5C89\u5C92\u5C8A\u5C86\u5C93\u5C95\u5DE0\u5E0A\u5E0E\u5E8B\u5E89\u5E8C\u5E88\u5E8D\u5F05\u5F1D\u5F78\u5F76\u5FD2\u5FD1\u5FD0\u5FED\u5FE8\u5FEE\u5FF3\u5FE1\u5FE4\u5FE3\u5FFA\u5FEF\u5FF7\u5FFB\u6000\u5FF4\u623A\u6283\u628C\u628E\u628F\u6294\u6287\u6271\u627B\u627A\u6270\u6281\u6288\u6277\u627D\u6272\u6274\u6537\u65F0\u65F4\u65F3\u65F2\u65F5\u6745\u6747',
      ],
      [
        'cb40',
        '\u6759\u6755\u674C\u6748\u675D\u674D\u675A\u674B\u6BD0\u6C19\u6C1A\u6C78\u6C67\u6C6B\u6C84\u6C8B\u6C8F\u6C71\u6C6F\u6C69\u6C9A\u6C6D\u6C87\u6C95\u6C9C\u6C66\u6C73\u6C65\u6C7B\u6C8E\u7074\u707A\u7263\u72BF\u72BD\u72C3\u72C6\u72C1\u72BA\u72C5\u7395\u7397\u7393\u7394\u7392\u753A\u7539\u7594\u7595\u7681\u793D\u8034\u8095\u8099\u8090\u8092\u809C\u8290\u828F\u8285\u828E\u8291\u8293',
      ],
      [
        'cba1',
        '\u828A\u8283\u8284\u8C78\u8FC9\u8FBF\u909F\u90A1\u90A5\u909E\u90A7\u90A0\u9630\u9628\u962F\u962D\u4E33\u4F98\u4F7C\u4F85\u4F7D\u4F80\u4F87\u4F76\u4F74\u4F89\u4F84\u4F77\u4F4C\u4F97\u4F6A\u4F9A\u4F79\u4F81\u4F78\u4F90\u4F9C\u4F94\u4F9E\u4F92\u4F82\u4F95\u4F6B\u4F6E\u519E\u51BC\u51BE\u5235\u5232\u5233\u5246\u5231\u52BC\u530A\u530B\u533C\u5392\u5394\u5487\u547F\u5481\u5491\u5482\u5488\u546B\u547A\u547E\u5465\u546C\u5474\u5466\u548D\u546F\u5461\u5460\u5498\u5463\u5467\u5464\u56F7\u56F9\u576F\u5772\u576D\u576B\u5771\u5770\u5776\u5780\u5775\u577B\u5773\u5774\u5762',
      ],
      [
        'cc40',
        '\u5768\u577D\u590C\u5945\u59B5\u59BA\u59CF\u59CE\u59B2\u59CC\u59C1\u59B6\u59BC\u59C3\u59D6\u59B1\u59BD\u59C0\u59C8\u59B4\u59C7\u5B62\u5B65\u5B93\u5B95\u5C44\u5C47\u5CAE\u5CA4\u5CA0\u5CB5\u5CAF\u5CA8\u5CAC\u5C9F\u5CA3\u5CAD\u5CA2\u5CAA\u5CA7\u5C9D\u5CA5\u5CB6\u5CB0\u5CA6\u5E17\u5E14\u5E19\u5F28\u5F22\u5F23\u5F24\u5F54\u5F82\u5F7E\u5F7D\u5FDE\u5FE5\u602D\u6026\u6019\u6032\u600B',
      ],
      [
        'cca1',
        '\u6034\u600A\u6017\u6033\u601A\u601E\u602C\u6022\u600D\u6010\u602E\u6013\u6011\u600C\u6009\u601C\u6214\u623D\u62AD\u62B4\u62D1\u62BE\u62AA\u62B6\u62CA\u62AE\u62B3\u62AF\u62BB\u62A9\u62B0\u62B8\u653D\u65A8\u65BB\u6609\u65FC\u6604\u6612\u6608\u65FB\u6603\u660B\u660D\u6605\u65FD\u6611\u6610\u66F6\u670A\u6785\u676C\u678E\u6792\u6776\u677B\u6798\u6786\u6784\u6774\u678D\u678C\u677A\u679F\u6791\u6799\u6783\u677D\u6781\u6778\u6779\u6794\u6B25\u6B80\u6B7E\u6BDE\u6C1D\u6C93\u6CEC\u6CEB\u6CEE\u6CD9\u6CB6\u6CD4\u6CAD\u6CE7\u6CB7\u6CD0\u6CC2\u6CBA\u6CC3\u6CC6\u6CED\u6CF2',
      ],
      [
        'cd40',
        '\u6CD2\u6CDD\u6CB4\u6C8A\u6C9D\u6C80\u6CDE\u6CC0\u6D30\u6CCD\u6CC7\u6CB0\u6CF9\u6CCF\u6CE9\u6CD1\u7094\u7098\u7085\u7093\u7086\u7084\u7091\u7096\u7082\u709A\u7083\u726A\u72D6\u72CB\u72D8\u72C9\u72DC\u72D2\u72D4\u72DA\u72CC\u72D1\u73A4\u73A1\u73AD\u73A6\u73A2\u73A0\u73AC\u739D\u74DD\u74E8\u753F\u7540\u753E\u758C\u7598\u76AF\u76F3\u76F1\u76F0\u76F5\u77F8\u77FC\u77F9\u77FB\u77FA',
      ],
      [
        'cda1',
        '\u77F7\u7942\u793F\u79C5\u7A78\u7A7B\u7AFB\u7C75\u7CFD\u8035\u808F\u80AE\u80A3\u80B8\u80B5\u80AD\u8220\u82A0\u82C0\u82AB\u829A\u8298\u829B\u82B5\u82A7\u82AE\u82BC\u829E\u82BA\u82B4\u82A8\u82A1\u82A9\u82C2\u82A4\u82C3\u82B6\u82A2\u8670\u866F\u866D\u866E\u8C56\u8FD2\u8FCB\u8FD3\u8FCD\u8FD6\u8FD5\u8FD7\u90B2\u90B4\u90AF\u90B3\u90B0\u9639\u963D\u963C\u963A\u9643\u4FCD\u4FC5\u4FD3\u4FB2\u4FC9\u4FCB\u4FC1\u4FD4\u4FDC\u4FD9\u4FBB\u4FB3\u4FDB\u4FC7\u4FD6\u4FBA\u4FC0\u4FB9\u4FEC\u5244\u5249\u52C0\u52C2\u533D\u537C\u5397\u5396\u5399\u5398\u54BA\u54A1\u54AD\u54A5\u54CF',
      ],
      [
        'ce40',
        '\u54C3\u830D\u54B7\u54AE\u54D6\u54B6\u54C5\u54C6\u54A0\u5470\u54BC\u54A2\u54BE\u5472\u54DE\u54B0\u57B5\u579E\u579F\u57A4\u578C\u5797\u579D\u579B\u5794\u5798\u578F\u5799\u57A5\u579A\u5795\u58F4\u590D\u5953\u59E1\u59DE\u59EE\u5A00\u59F1\u59DD\u59FA\u59FD\u59FC\u59F6\u59E4\u59F2\u59F7\u59DB\u59E9\u59F3\u59F5\u59E0\u59FE\u59F4\u59ED\u5BA8\u5C4C\u5CD0\u5CD8\u5CCC\u5CD7\u5CCB\u5CDB',
      ],
      [
        'cea1',
        '\u5CDE\u5CDA\u5CC9\u5CC7\u5CCA\u5CD6\u5CD3\u5CD4\u5CCF\u5CC8\u5CC6\u5CCE\u5CDF\u5CF8\u5DF9\u5E21\u5E22\u5E23\u5E20\u5E24\u5EB0\u5EA4\u5EA2\u5E9B\u5EA3\u5EA5\u5F07\u5F2E\u5F56\u5F86\u6037\u6039\u6054\u6072\u605E\u6045\u6053\u6047\u6049\u605B\u604C\u6040\u6042\u605F\u6024\u6044\u6058\u6066\u606E\u6242\u6243\u62CF\u630D\u630B\u62F5\u630E\u6303\u62EB\u62F9\u630F\u630C\u62F8\u62F6\u6300\u6313\u6314\u62FA\u6315\u62FB\u62F0\u6541\u6543\u65AA\u65BF\u6636\u6621\u6632\u6635\u661C\u6626\u6622\u6633\u662B\u663A\u661D\u6634\u6639\u662E\u670F\u6710\u67C1\u67F2\u67C8\u67BA',
      ],
      [
        'cf40',
        '\u67DC\u67BB\u67F8\u67D8\u67C0\u67B7\u67C5\u67EB\u67E4\u67DF\u67B5\u67CD\u67B3\u67F7\u67F6\u67EE\u67E3\u67C2\u67B9\u67CE\u67E7\u67F0\u67B2\u67FC\u67C6\u67ED\u67CC\u67AE\u67E6\u67DB\u67FA\u67C9\u67CA\u67C3\u67EA\u67CB\u6B28\u6B82\u6B84\u6BB6\u6BD6\u6BD8\u6BE0\u6C20\u6C21\u6D28\u6D34\u6D2D\u6D1F\u6D3C\u6D3F\u6D12\u6D0A\u6CDA\u6D33\u6D04\u6D19\u6D3A\u6D1A\u6D11\u6D00\u6D1D\u6D42',
      ],
      [
        'cfa1',
        '\u6D01\u6D18\u6D37\u6D03\u6D0F\u6D40\u6D07\u6D20\u6D2C\u6D08\u6D22\u6D09\u6D10\u70B7\u709F\u70BE\u70B1\u70B0\u70A1\u70B4\u70B5\u70A9\u7241\u7249\u724A\u726C\u7270\u7273\u726E\u72CA\u72E4\u72E8\u72EB\u72DF\u72EA\u72E6\u72E3\u7385\u73CC\u73C2\u73C8\u73C5\u73B9\u73B6\u73B5\u73B4\u73EB\u73BF\u73C7\u73BE\u73C3\u73C6\u73B8\u73CB\u74EC\u74EE\u752E\u7547\u7548\u75A7\u75AA\u7679\u76C4\u7708\u7703\u7704\u7705\u770A\u76F7\u76FB\u76FA\u77E7\u77E8\u7806\u7811\u7812\u7805\u7810\u780F\u780E\u7809\u7803\u7813\u794A\u794C\u794B\u7945\u7944\u79D5\u79CD\u79CF\u79D6\u79CE\u7A80',
      ],
      [
        'd040',
        '\u7A7E\u7AD1\u7B00\u7B01\u7C7A\u7C78\u7C79\u7C7F\u7C80\u7C81\u7D03\u7D08\u7D01\u7F58\u7F91\u7F8D\u7FBE\u8007\u800E\u800F\u8014\u8037\u80D8\u80C7\u80E0\u80D1\u80C8\u80C2\u80D0\u80C5\u80E3\u80D9\u80DC\u80CA\u80D5\u80C9\u80CF\u80D7\u80E6\u80CD\u81FF\u8221\u8294\u82D9\u82FE\u82F9\u8307\u82E8\u8300\u82D5\u833A\u82EB\u82D6\u82F4\u82EC\u82E1\u82F2\u82F5\u830C\u82FB\u82F6\u82F0\u82EA',
      ],
      [
        'd0a1',
        '\u82E4\u82E0\u82FA\u82F3\u82ED\u8677\u8674\u867C\u8673\u8841\u884E\u8867\u886A\u8869\u89D3\u8A04\u8A07\u8D72\u8FE3\u8FE1\u8FEE\u8FE0\u90F1\u90BD\u90BF\u90D5\u90C5\u90BE\u90C7\u90CB\u90C8\u91D4\u91D3\u9654\u964F\u9651\u9653\u964A\u964E\u501E\u5005\u5007\u5013\u5022\u5030\u501B\u4FF5\u4FF4\u5033\u5037\u502C\u4FF6\u4FF7\u5017\u501C\u5020\u5027\u5035\u502F\u5031\u500E\u515A\u5194\u5193\u51CA\u51C4\u51C5\u51C8\u51CE\u5261\u525A\u5252\u525E\u525F\u5255\u5262\u52CD\u530E\u539E\u5526\u54E2\u5517\u5512\u54E7\u54F3\u54E4\u551A\u54FF\u5504\u5508\u54EB\u5511\u5505\u54F1',
      ],
      [
        'd140',
        '\u550A\u54FB\u54F7\u54F8\u54E0\u550E\u5503\u550B\u5701\u5702\u57CC\u5832\u57D5\u57D2\u57BA\u57C6\u57BD\u57BC\u57B8\u57B6\u57BF\u57C7\u57D0\u57B9\u57C1\u590E\u594A\u5A19\u5A16\u5A2D\u5A2E\u5A15\u5A0F\u5A17\u5A0A\u5A1E\u5A33\u5B6C\u5BA7\u5BAD\u5BAC\u5C03\u5C56\u5C54\u5CEC\u5CFF\u5CEE\u5CF1\u5CF7\u5D00\u5CF9\u5E29\u5E28\u5EA8\u5EAE\u5EAA\u5EAC\u5F33\u5F30\u5F67\u605D\u605A\u6067',
      ],
      [
        'd1a1',
        '\u6041\u60A2\u6088\u6080\u6092\u6081\u609D\u6083\u6095\u609B\u6097\u6087\u609C\u608E\u6219\u6246\u62F2\u6310\u6356\u632C\u6344\u6345\u6336\u6343\u63E4\u6339\u634B\u634A\u633C\u6329\u6341\u6334\u6358\u6354\u6359\u632D\u6347\u6333\u635A\u6351\u6338\u6357\u6340\u6348\u654A\u6546\u65C6\u65C3\u65C4\u65C2\u664A\u665F\u6647\u6651\u6712\u6713\u681F\u681A\u6849\u6832\u6833\u683B\u684B\u684F\u6816\u6831\u681C\u6835\u682B\u682D\u682F\u684E\u6844\u6834\u681D\u6812\u6814\u6826\u6828\u682E\u684D\u683A\u6825\u6820\u6B2C\u6B2F\u6B2D\u6B31\u6B34\u6B6D\u8082\u6B88\u6BE6\u6BE4',
      ],
      [
        'd240',
        '\u6BE8\u6BE3\u6BE2\u6BE7\u6C25\u6D7A\u6D63\u6D64\u6D76\u6D0D\u6D61\u6D92\u6D58\u6D62\u6D6D\u6D6F\u6D91\u6D8D\u6DEF\u6D7F\u6D86\u6D5E\u6D67\u6D60\u6D97\u6D70\u6D7C\u6D5F\u6D82\u6D98\u6D2F\u6D68\u6D8B\u6D7E\u6D80\u6D84\u6D16\u6D83\u6D7B\u6D7D\u6D75\u6D90\u70DC\u70D3\u70D1\u70DD\u70CB\u7F39\u70E2\u70D7\u70D2\u70DE\u70E0\u70D4\u70CD\u70C5\u70C6\u70C7\u70DA\u70CE\u70E1\u7242\u7278',
      ],
      [
        'd2a1',
        '\u7277\u7276\u7300\u72FA\u72F4\u72FE\u72F6\u72F3\u72FB\u7301\u73D3\u73D9\u73E5\u73D6\u73BC\u73E7\u73E3\u73E9\u73DC\u73D2\u73DB\u73D4\u73DD\u73DA\u73D7\u73D8\u73E8\u74DE\u74DF\u74F4\u74F5\u7521\u755B\u755F\u75B0\u75C1\u75BB\u75C4\u75C0\u75BF\u75B6\u75BA\u768A\u76C9\u771D\u771B\u7710\u7713\u7712\u7723\u7711\u7715\u7719\u771A\u7722\u7727\u7823\u782C\u7822\u7835\u782F\u7828\u782E\u782B\u7821\u7829\u7833\u782A\u7831\u7954\u795B\u794F\u795C\u7953\u7952\u7951\u79EB\u79EC\u79E0\u79EE\u79ED\u79EA\u79DC\u79DE\u79DD\u7A86\u7A89\u7A85\u7A8B\u7A8C\u7A8A\u7A87\u7AD8\u7B10',
      ],
      [
        'd340',
        '\u7B04\u7B13\u7B05\u7B0F\u7B08\u7B0A\u7B0E\u7B09\u7B12\u7C84\u7C91\u7C8A\u7C8C\u7C88\u7C8D\u7C85\u7D1E\u7D1D\u7D11\u7D0E\u7D18\u7D16\u7D13\u7D1F\u7D12\u7D0F\u7D0C\u7F5C\u7F61\u7F5E\u7F60\u7F5D\u7F5B\u7F96\u7F92\u7FC3\u7FC2\u7FC0\u8016\u803E\u8039\u80FA\u80F2\u80F9\u80F5\u8101\u80FB\u8100\u8201\u822F\u8225\u8333\u832D\u8344\u8319\u8351\u8325\u8356\u833F\u8341\u8326\u831C\u8322',
      ],
      [
        'd3a1',
        '\u8342\u834E\u831B\u832A\u8308\u833C\u834D\u8316\u8324\u8320\u8337\u832F\u8329\u8347\u8345\u834C\u8353\u831E\u832C\u834B\u8327\u8348\u8653\u8652\u86A2\u86A8\u8696\u868D\u8691\u869E\u8687\u8697\u8686\u868B\u869A\u8685\u86A5\u8699\u86A1\u86A7\u8695\u8698\u868E\u869D\u8690\u8694\u8843\u8844\u886D\u8875\u8876\u8872\u8880\u8871\u887F\u886F\u8883\u887E\u8874\u887C\u8A12\u8C47\u8C57\u8C7B\u8CA4\u8CA3\u8D76\u8D78\u8DB5\u8DB7\u8DB6\u8ED1\u8ED3\u8FFE\u8FF5\u9002\u8FFF\u8FFB\u9004\u8FFC\u8FF6\u90D6\u90E0\u90D9\u90DA\u90E3\u90DF\u90E5\u90D8\u90DB\u90D7\u90DC\u90E4\u9150',
      ],
      [
        'd440',
        '\u914E\u914F\u91D5\u91E2\u91DA\u965C\u965F\u96BC\u98E3\u9ADF\u9B2F\u4E7F\u5070\u506A\u5061\u505E\u5060\u5053\u504B\u505D\u5072\u5048\u504D\u5041\u505B\u504A\u5062\u5015\u5045\u505F\u5069\u506B\u5063\u5064\u5046\u5040\u506E\u5073\u5057\u5051\u51D0\u526B\u526D\u526C\u526E\u52D6\u52D3\u532D\u539C\u5575\u5576\u553C\u554D\u5550\u5534\u552A\u5551\u5562\u5536\u5535\u5530\u5552\u5545',
      ],
      [
        'd4a1',
        '\u550C\u5532\u5565\u554E\u5539\u5548\u552D\u553B\u5540\u554B\u570A\u5707\u57FB\u5814\u57E2\u57F6\u57DC\u57F4\u5800\u57ED\u57FD\u5808\u57F8\u580B\u57F3\u57CF\u5807\u57EE\u57E3\u57F2\u57E5\u57EC\u57E1\u580E\u57FC\u5810\u57E7\u5801\u580C\u57F1\u57E9\u57F0\u580D\u5804\u595C\u5A60\u5A58\u5A55\u5A67\u5A5E\u5A38\u5A35\u5A6D\u5A50\u5A5F\u5A65\u5A6C\u5A53\u5A64\u5A57\u5A43\u5A5D\u5A52\u5A44\u5A5B\u5A48\u5A8E\u5A3E\u5A4D\u5A39\u5A4C\u5A70\u5A69\u5A47\u5A51\u5A56\u5A42\u5A5C\u5B72\u5B6E\u5BC1\u5BC0\u5C59\u5D1E\u5D0B\u5D1D\u5D1A\u5D20\u5D0C\u5D28\u5D0D\u5D26\u5D25\u5D0F',
      ],
      [
        'd540',
        '\u5D30\u5D12\u5D23\u5D1F\u5D2E\u5E3E\u5E34\u5EB1\u5EB4\u5EB9\u5EB2\u5EB3\u5F36\u5F38\u5F9B\u5F96\u5F9F\u608A\u6090\u6086\u60BE\u60B0\u60BA\u60D3\u60D4\u60CF\u60E4\u60D9\u60DD\u60C8\u60B1\u60DB\u60B7\u60CA\u60BF\u60C3\u60CD\u60C0\u6332\u6365\u638A\u6382\u637D\u63BD\u639E\u63AD\u639D\u6397\u63AB\u638E\u636F\u6387\u6390\u636E\u63AF\u6375\u639C\u636D\u63AE\u637C\u63A4\u633B\u639F',
      ],
      [
        'd5a1',
        '\u6378\u6385\u6381\u6391\u638D\u6370\u6553\u65CD\u6665\u6661\u665B\u6659\u665C\u6662\u6718\u6879\u6887\u6890\u689C\u686D\u686E\u68AE\u68AB\u6956\u686F\u68A3\u68AC\u68A9\u6875\u6874\u68B2\u688F\u6877\u6892\u687C\u686B\u6872\u68AA\u6880\u6871\u687E\u689B\u6896\u688B\u68A0\u6889\u68A4\u6878\u687B\u6891\u688C\u688A\u687D\u6B36\u6B33\u6B37\u6B38\u6B91\u6B8F\u6B8D\u6B8E\u6B8C\u6C2A\u6DC0\u6DAB\u6DB4\u6DB3\u6E74\u6DAC\u6DE9\u6DE2\u6DB7\u6DF6\u6DD4\u6E00\u6DC8\u6DE0\u6DDF\u6DD6\u6DBE\u6DE5\u6DDC\u6DDD\u6DDB\u6DF4\u6DCA\u6DBD\u6DED\u6DF0\u6DBA\u6DD5\u6DC2\u6DCF\u6DC9',
      ],
      [
        'd640',
        '\u6DD0\u6DF2\u6DD3\u6DFD\u6DD7\u6DCD\u6DE3\u6DBB\u70FA\u710D\u70F7\u7117\u70F4\u710C\u70F0\u7104\u70F3\u7110\u70FC\u70FF\u7106\u7113\u7100\u70F8\u70F6\u710B\u7102\u710E\u727E\u727B\u727C\u727F\u731D\u7317\u7307\u7311\u7318\u730A\u7308\u72FF\u730F\u731E\u7388\u73F6\u73F8\u73F5\u7404\u7401\u73FD\u7407\u7400\u73FA\u73FC\u73FF\u740C\u740B\u73F4\u7408\u7564\u7563\u75CE\u75D2\u75CF',
      ],
      [
        'd6a1',
        '\u75CB\u75CC\u75D1\u75D0\u768F\u7689\u76D3\u7739\u772F\u772D\u7731\u7732\u7734\u7733\u773D\u7725\u773B\u7735\u7848\u7852\u7849\u784D\u784A\u784C\u7826\u7845\u7850\u7964\u7967\u7969\u796A\u7963\u796B\u7961\u79BB\u79FA\u79F8\u79F6\u79F7\u7A8F\u7A94\u7A90\u7B35\u7B47\u7B34\u7B25\u7B30\u7B22\u7B24\u7B33\u7B18\u7B2A\u7B1D\u7B31\u7B2B\u7B2D\u7B2F\u7B32\u7B38\u7B1A\u7B23\u7C94\u7C98\u7C96\u7CA3\u7D35\u7D3D\u7D38\u7D36\u7D3A\u7D45\u7D2C\u7D29\u7D41\u7D47\u7D3E\u7D3F\u7D4A\u7D3B\u7D28\u7F63\u7F95\u7F9C\u7F9D\u7F9B\u7FCA\u7FCB\u7FCD\u7FD0\u7FD1\u7FC7\u7FCF\u7FC9\u801F',
      ],
      [
        'd740',
        '\u801E\u801B\u8047\u8043\u8048\u8118\u8125\u8119\u811B\u812D\u811F\u812C\u811E\u8121\u8115\u8127\u811D\u8122\u8211\u8238\u8233\u823A\u8234\u8232\u8274\u8390\u83A3\u83A8\u838D\u837A\u8373\u83A4\u8374\u838F\u8381\u8395\u8399\u8375\u8394\u83A9\u837D\u8383\u838C\u839D\u839B\u83AA\u838B\u837E\u83A5\u83AF\u8388\u8397\u83B0\u837F\u83A6\u8387\u83AE\u8376\u839A\u8659\u8656\u86BF\u86B7',
      ],
      [
        'd7a1',
        '\u86C2\u86C1\u86C5\u86BA\u86B0\u86C8\u86B9\u86B3\u86B8\u86CC\u86B4\u86BB\u86BC\u86C3\u86BD\u86BE\u8852\u8889\u8895\u88A8\u88A2\u88AA\u889A\u8891\u88A1\u889F\u8898\u88A7\u8899\u889B\u8897\u88A4\u88AC\u888C\u8893\u888E\u8982\u89D6\u89D9\u89D5\u8A30\u8A27\u8A2C\u8A1E\u8C39\u8C3B\u8C5C\u8C5D\u8C7D\u8CA5\u8D7D\u8D7B\u8D79\u8DBC\u8DC2\u8DB9\u8DBF\u8DC1\u8ED8\u8EDE\u8EDD\u8EDC\u8ED7\u8EE0\u8EE1\u9024\u900B\u9011\u901C\u900C\u9021\u90EF\u90EA\u90F0\u90F4\u90F2\u90F3\u90D4\u90EB\u90EC\u90E9\u9156\u9158\u915A\u9153\u9155\u91EC\u91F4\u91F1\u91F3\u91F8\u91E4\u91F9\u91EA',
      ],
      [
        'd840',
        '\u91EB\u91F7\u91E8\u91EE\u957A\u9586\u9588\u967C\u966D\u966B\u9671\u966F\u96BF\u976A\u9804\u98E5\u9997\u509B\u5095\u5094\u509E\u508B\u50A3\u5083\u508C\u508E\u509D\u5068\u509C\u5092\u5082\u5087\u515F\u51D4\u5312\u5311\u53A4\u53A7\u5591\u55A8\u55A5\u55AD\u5577\u5645\u55A2\u5593\u5588\u558F\u55B5\u5581\u55A3\u5592\u55A4\u557D\u558C\u55A6\u557F\u5595\u55A1\u558E\u570C\u5829\u5837',
      ],
      [
        'd8a1',
        '\u5819\u581E\u5827\u5823\u5828\u57F5\u5848\u5825\u581C\u581B\u5833\u583F\u5836\u582E\u5839\u5838\u582D\u582C\u583B\u5961\u5AAF\u5A94\u5A9F\u5A7A\u5AA2\u5A9E\u5A78\u5AA6\u5A7C\u5AA5\u5AAC\u5A95\u5AAE\u5A37\u5A84\u5A8A\u5A97\u5A83\u5A8B\u5AA9\u5A7B\u5A7D\u5A8C\u5A9C\u5A8F\u5A93\u5A9D\u5BEA\u5BCD\u5BCB\u5BD4\u5BD1\u5BCA\u5BCE\u5C0C\u5C30\u5D37\u5D43\u5D6B\u5D41\u5D4B\u5D3F\u5D35\u5D51\u5D4E\u5D55\u5D33\u5D3A\u5D52\u5D3D\u5D31\u5D59\u5D42\u5D39\u5D49\u5D38\u5D3C\u5D32\u5D36\u5D40\u5D45\u5E44\u5E41\u5F58\u5FA6\u5FA5\u5FAB\u60C9\u60B9\u60CC\u60E2\u60CE\u60C4\u6114',
      ],
      [
        'd940',
        '\u60F2\u610A\u6116\u6105\u60F5\u6113\u60F8\u60FC\u60FE\u60C1\u6103\u6118\u611D\u6110\u60FF\u6104\u610B\u624A\u6394\u63B1\u63B0\u63CE\u63E5\u63E8\u63EF\u63C3\u649D\u63F3\u63CA\u63E0\u63F6\u63D5\u63F2\u63F5\u6461\u63DF\u63BE\u63DD\u63DC\u63C4\u63D8\u63D3\u63C2\u63C7\u63CC\u63CB\u63C8\u63F0\u63D7\u63D9\u6532\u6567\u656A\u6564\u655C\u6568\u6565\u658C\u659D\u659E\u65AE\u65D0\u65D2',
      ],
      [
        'd9a1',
        '\u667C\u666C\u667B\u6680\u6671\u6679\u666A\u6672\u6701\u690C\u68D3\u6904\u68DC\u692A\u68EC\u68EA\u68F1\u690F\u68D6\u68F7\u68EB\u68E4\u68F6\u6913\u6910\u68F3\u68E1\u6907\u68CC\u6908\u6970\u68B4\u6911\u68EF\u68C6\u6914\u68F8\u68D0\u68FD\u68FC\u68E8\u690B\u690A\u6917\u68CE\u68C8\u68DD\u68DE\u68E6\u68F4\u68D1\u6906\u68D4\u68E9\u6915\u6925\u68C7\u6B39\u6B3B\u6B3F\u6B3C\u6B94\u6B97\u6B99\u6B95\u6BBD\u6BF0\u6BF2\u6BF3\u6C30\u6DFC\u6E46\u6E47\u6E1F\u6E49\u6E88\u6E3C\u6E3D\u6E45\u6E62\u6E2B\u6E3F\u6E41\u6E5D\u6E73\u6E1C\u6E33\u6E4B\u6E40\u6E51\u6E3B\u6E03\u6E2E\u6E5E',
      ],
      [
        'da40',
        '\u6E68\u6E5C\u6E61\u6E31\u6E28\u6E60\u6E71\u6E6B\u6E39\u6E22\u6E30\u6E53\u6E65\u6E27\u6E78\u6E64\u6E77\u6E55\u6E79\u6E52\u6E66\u6E35\u6E36\u6E5A\u7120\u711E\u712F\u70FB\u712E\u7131\u7123\u7125\u7122\u7132\u711F\u7128\u713A\u711B\u724B\u725A\u7288\u7289\u7286\u7285\u728B\u7312\u730B\u7330\u7322\u7331\u7333\u7327\u7332\u732D\u7326\u7323\u7335\u730C\u742E\u742C\u7430\u742B\u7416',
      ],
      [
        'daa1',
        '\u741A\u7421\u742D\u7431\u7424\u7423\u741D\u7429\u7420\u7432\u74FB\u752F\u756F\u756C\u75E7\u75DA\u75E1\u75E6\u75DD\u75DF\u75E4\u75D7\u7695\u7692\u76DA\u7746\u7747\u7744\u774D\u7745\u774A\u774E\u774B\u774C\u77DE\u77EC\u7860\u7864\u7865\u785C\u786D\u7871\u786A\u786E\u7870\u7869\u7868\u785E\u7862\u7974\u7973\u7972\u7970\u7A02\u7A0A\u7A03\u7A0C\u7A04\u7A99\u7AE6\u7AE4\u7B4A\u7B3B\u7B44\u7B48\u7B4C\u7B4E\u7B40\u7B58\u7B45\u7CA2\u7C9E\u7CA8\u7CA1\u7D58\u7D6F\u7D63\u7D53\u7D56\u7D67\u7D6A\u7D4F\u7D6D\u7D5C\u7D6B\u7D52\u7D54\u7D69\u7D51\u7D5F\u7D4E\u7F3E\u7F3F\u7F65',
      ],
      [
        'db40',
        '\u7F66\u7FA2\u7FA0\u7FA1\u7FD7\u8051\u804F\u8050\u80FE\u80D4\u8143\u814A\u8152\u814F\u8147\u813D\u814D\u813A\u81E6\u81EE\u81F7\u81F8\u81F9\u8204\u823C\u823D\u823F\u8275\u833B\u83CF\u83F9\u8423\u83C0\u83E8\u8412\u83E7\u83E4\u83FC\u83F6\u8410\u83C6\u83C8\u83EB\u83E3\u83BF\u8401\u83DD\u83E5\u83D8\u83FF\u83E1\u83CB\u83CE\u83D6\u83F5\u83C9\u8409\u840F\u83DE\u8411\u8406\u83C2\u83F3',
      ],
      [
        'dba1',
        '\u83D5\u83FA\u83C7\u83D1\u83EA\u8413\u83C3\u83EC\u83EE\u83C4\u83FB\u83D7\u83E2\u841B\u83DB\u83FE\u86D8\u86E2\u86E6\u86D3\u86E3\u86DA\u86EA\u86DD\u86EB\u86DC\u86EC\u86E9\u86D7\u86E8\u86D1\u8848\u8856\u8855\u88BA\u88D7\u88B9\u88B8\u88C0\u88BE\u88B6\u88BC\u88B7\u88BD\u88B2\u8901\u88C9\u8995\u8998\u8997\u89DD\u89DA\u89DB\u8A4E\u8A4D\u8A39\u8A59\u8A40\u8A57\u8A58\u8A44\u8A45\u8A52\u8A48\u8A51\u8A4A\u8A4C\u8A4F\u8C5F\u8C81\u8C80\u8CBA\u8CBE\u8CB0\u8CB9\u8CB5\u8D84\u8D80\u8D89\u8DD8\u8DD3\u8DCD\u8DC7\u8DD6\u8DDC\u8DCF\u8DD5\u8DD9\u8DC8\u8DD7\u8DC5\u8EEF\u8EF7\u8EFA',
      ],
      [
        'dc40',
        '\u8EF9\u8EE6\u8EEE\u8EE5\u8EF5\u8EE7\u8EE8\u8EF6\u8EEB\u8EF1\u8EEC\u8EF4\u8EE9\u902D\u9034\u902F\u9106\u912C\u9104\u90FF\u90FC\u9108\u90F9\u90FB\u9101\u9100\u9107\u9105\u9103\u9161\u9164\u915F\u9162\u9160\u9201\u920A\u9225\u9203\u921A\u9226\u920F\u920C\u9200\u9212\u91FF\u91FD\u9206\u9204\u9227\u9202\u921C\u9224\u9219\u9217\u9205\u9216\u957B\u958D\u958C\u9590\u9687\u967E\u9688',
      ],
      [
        'dca1',
        '\u9689\u9683\u9680\u96C2\u96C8\u96C3\u96F1\u96F0\u976C\u9770\u976E\u9807\u98A9\u98EB\u9CE6\u9EF9\u4E83\u4E84\u4EB6\u50BD\u50BF\u50C6\u50AE\u50C4\u50CA\u50B4\u50C8\u50C2\u50B0\u50C1\u50BA\u50B1\u50CB\u50C9\u50B6\u50B8\u51D7\u527A\u5278\u527B\u527C\u55C3\u55DB\u55CC\u55D0\u55CB\u55CA\u55DD\u55C0\u55D4\u55C4\u55E9\u55BF\u55D2\u558D\u55CF\u55D5\u55E2\u55D6\u55C8\u55F2\u55CD\u55D9\u55C2\u5714\u5853\u5868\u5864\u584F\u584D\u5849\u586F\u5855\u584E\u585D\u5859\u5865\u585B\u583D\u5863\u5871\u58FC\u5AC7\u5AC4\u5ACB\u5ABA\u5AB8\u5AB1\u5AB5\u5AB0\u5ABF\u5AC8\u5ABB\u5AC6',
      ],
      [
        'dd40',
        '\u5AB7\u5AC0\u5ACA\u5AB4\u5AB6\u5ACD\u5AB9\u5A90\u5BD6\u5BD8\u5BD9\u5C1F\u5C33\u5D71\u5D63\u5D4A\u5D65\u5D72\u5D6C\u5D5E\u5D68\u5D67\u5D62\u5DF0\u5E4F\u5E4E\u5E4A\u5E4D\u5E4B\u5EC5\u5ECC\u5EC6\u5ECB\u5EC7\u5F40\u5FAF\u5FAD\u60F7\u6149\u614A\u612B\u6145\u6136\u6132\u612E\u6146\u612F\u614F\u6129\u6140\u6220\u9168\u6223\u6225\u6224\u63C5\u63F1\u63EB\u6410\u6412\u6409\u6420\u6424',
      ],
      [
        'dda1',
        '\u6433\u6443\u641F\u6415\u6418\u6439\u6437\u6422\u6423\u640C\u6426\u6430\u6428\u6441\u6435\u642F\u640A\u641A\u6440\u6425\u6427\u640B\u63E7\u641B\u642E\u6421\u640E\u656F\u6592\u65D3\u6686\u668C\u6695\u6690\u668B\u668A\u6699\u6694\u6678\u6720\u6966\u695F\u6938\u694E\u6962\u6971\u693F\u6945\u696A\u6939\u6942\u6957\u6959\u697A\u6948\u6949\u6935\u696C\u6933\u693D\u6965\u68F0\u6978\u6934\u6969\u6940\u696F\u6944\u6976\u6958\u6941\u6974\u694C\u693B\u694B\u6937\u695C\u694F\u6951\u6932\u6952\u692F\u697B\u693C\u6B46\u6B45\u6B43\u6B42\u6B48\u6B41\u6B9B\uFA0D\u6BFB\u6BFC',
      ],
      [
        'de40',
        '\u6BF9\u6BF7\u6BF8\u6E9B\u6ED6\u6EC8\u6E8F\u6EC0\u6E9F\u6E93\u6E94\u6EA0\u6EB1\u6EB9\u6EC6\u6ED2\u6EBD\u6EC1\u6E9E\u6EC9\u6EB7\u6EB0\u6ECD\u6EA6\u6ECF\u6EB2\u6EBE\u6EC3\u6EDC\u6ED8\u6E99\u6E92\u6E8E\u6E8D\u6EA4\u6EA1\u6EBF\u6EB3\u6ED0\u6ECA\u6E97\u6EAE\u6EA3\u7147\u7154\u7152\u7163\u7160\u7141\u715D\u7162\u7172\u7178\u716A\u7161\u7142\u7158\u7143\u714B\u7170\u715F\u7150\u7153',
      ],
      [
        'dea1',
        '\u7144\u714D\u715A\u724F\u728D\u728C\u7291\u7290\u728E\u733C\u7342\u733B\u733A\u7340\u734A\u7349\u7444\u744A\u744B\u7452\u7451\u7457\u7440\u744F\u7450\u744E\u7442\u7446\u744D\u7454\u74E1\u74FF\u74FE\u74FD\u751D\u7579\u7577\u6983\u75EF\u760F\u7603\u75F7\u75FE\u75FC\u75F9\u75F8\u7610\u75FB\u75F6\u75ED\u75F5\u75FD\u7699\u76B5\u76DD\u7755\u775F\u7760\u7752\u7756\u775A\u7769\u7767\u7754\u7759\u776D\u77E0\u7887\u789A\u7894\u788F\u7884\u7895\u7885\u7886\u78A1\u7883\u7879\u7899\u7880\u7896\u787B\u797C\u7982\u797D\u7979\u7A11\u7A18\u7A19\u7A12\u7A17\u7A15\u7A22\u7A13',
      ],
      [
        'df40',
        '\u7A1B\u7A10\u7AA3\u7AA2\u7A9E\u7AEB\u7B66\u7B64\u7B6D\u7B74\u7B69\u7B72\u7B65\u7B73\u7B71\u7B70\u7B61\u7B78\u7B76\u7B63\u7CB2\u7CB4\u7CAF\u7D88\u7D86\u7D80\u7D8D\u7D7F\u7D85\u7D7A\u7D8E\u7D7B\u7D83\u7D7C\u7D8C\u7D94\u7D84\u7D7D\u7D92\u7F6D\u7F6B\u7F67\u7F68\u7F6C\u7FA6\u7FA5\u7FA7\u7FDB\u7FDC\u8021\u8164\u8160\u8177\u815C\u8169\u815B\u8162\u8172\u6721\u815E\u8176\u8167\u816F',
      ],
      [
        'dfa1',
        '\u8144\u8161\u821D\u8249\u8244\u8240\u8242\u8245\u84F1\u843F\u8456\u8476\u8479\u848F\u848D\u8465\u8451\u8440\u8486\u8467\u8430\u844D\u847D\u845A\u8459\u8474\u8473\u845D\u8507\u845E\u8437\u843A\u8434\u847A\u8443\u8478\u8432\u8445\u8429\u83D9\u844B\u842F\u8442\u842D\u845F\u8470\u8439\u844E\u844C\u8452\u846F\u84C5\u848E\u843B\u8447\u8436\u8433\u8468\u847E\u8444\u842B\u8460\u8454\u846E\u8450\u870B\u8704\u86F7\u870C\u86FA\u86D6\u86F5\u874D\u86F8\u870E\u8709\u8701\u86F6\u870D\u8705\u88D6\u88CB\u88CD\u88CE\u88DE\u88DB\u88DA\u88CC\u88D0\u8985\u899B\u89DF\u89E5\u89E4',
      ],
      [
        'e040',
        '\u89E1\u89E0\u89E2\u89DC\u89E6\u8A76\u8A86\u8A7F\u8A61\u8A3F\u8A77\u8A82\u8A84\u8A75\u8A83\u8A81\u8A74\u8A7A\u8C3C\u8C4B\u8C4A\u8C65\u8C64\u8C66\u8C86\u8C84\u8C85\u8CCC\u8D68\u8D69\u8D91\u8D8C\u8D8E\u8D8F\u8D8D\u8D93\u8D94\u8D90\u8D92\u8DF0\u8DE0\u8DEC\u8DF1\u8DEE\u8DD0\u8DE9\u8DE3\u8DE2\u8DE7\u8DF2\u8DEB\u8DF4\u8F06\u8EFF\u8F01\u8F00\u8F05\u8F07\u8F08\u8F02\u8F0B\u9052\u903F',
      ],
      [
        'e0a1',
        '\u9044\u9049\u903D\u9110\u910D\u910F\u9111\u9116\u9114\u910B\u910E\u916E\u916F\u9248\u9252\u9230\u923A\u9266\u9233\u9265\u925E\u9283\u922E\u924A\u9246\u926D\u926C\u924F\u9260\u9267\u926F\u9236\u9261\u9270\u9231\u9254\u9263\u9250\u9272\u924E\u9253\u924C\u9256\u9232\u959F\u959C\u959E\u959B\u9692\u9693\u9691\u9697\u96CE\u96FA\u96FD\u96F8\u96F5\u9773\u9777\u9778\u9772\u980F\u980D\u980E\u98AC\u98F6\u98F9\u99AF\u99B2\u99B0\u99B5\u9AAD\u9AAB\u9B5B\u9CEA\u9CED\u9CE7\u9E80\u9EFD\u50E6\u50D4\u50D7\u50E8\u50F3\u50DB\u50EA\u50DD\u50E4\u50D3\u50EC\u50F0\u50EF\u50E3\u50E0',
      ],
      [
        'e140',
        '\u51D8\u5280\u5281\u52E9\u52EB\u5330\u53AC\u5627\u5615\u560C\u5612\u55FC\u560F\u561C\u5601\u5613\u5602\u55FA\u561D\u5604\u55FF\u55F9\u5889\u587C\u5890\u5898\u5886\u5881\u587F\u5874\u588B\u587A\u5887\u5891\u588E\u5876\u5882\u5888\u587B\u5894\u588F\u58FE\u596B\u5ADC\u5AEE\u5AE5\u5AD5\u5AEA\u5ADA\u5AED\u5AEB\u5AF3\u5AE2\u5AE0\u5ADB\u5AEC\u5ADE\u5ADD\u5AD9\u5AE8\u5ADF\u5B77\u5BE0',
      ],
      [
        'e1a1',
        '\u5BE3\u5C63\u5D82\u5D80\u5D7D\u5D86\u5D7A\u5D81\u5D77\u5D8A\u5D89\u5D88\u5D7E\u5D7C\u5D8D\u5D79\u5D7F\u5E58\u5E59\u5E53\u5ED8\u5ED1\u5ED7\u5ECE\u5EDC\u5ED5\u5ED9\u5ED2\u5ED4\u5F44\u5F43\u5F6F\u5FB6\u612C\u6128\u6141\u615E\u6171\u6173\u6152\u6153\u6172\u616C\u6180\u6174\u6154\u617A\u615B\u6165\u613B\u616A\u6161\u6156\u6229\u6227\u622B\u642B\u644D\u645B\u645D\u6474\u6476\u6472\u6473\u647D\u6475\u6466\u64A6\u644E\u6482\u645E\u645C\u644B\u6453\u6460\u6450\u647F\u643F\u646C\u646B\u6459\u6465\u6477\u6573\u65A0\u66A1\u66A0\u669F\u6705\u6704\u6722\u69B1\u69B6\u69C9',
      ],
      [
        'e240',
        '\u69A0\u69CE\u6996\u69B0\u69AC\u69BC\u6991\u6999\u698E\u69A7\u698D\u69A9\u69BE\u69AF\u69BF\u69C4\u69BD\u69A4\u69D4\u69B9\u69CA\u699A\u69CF\u69B3\u6993\u69AA\u69A1\u699E\u69D9\u6997\u6990\u69C2\u69B5\u69A5\u69C6\u6B4A\u6B4D\u6B4B\u6B9E\u6B9F\u6BA0\u6BC3\u6BC4\u6BFE\u6ECE\u6EF5\u6EF1\u6F03\u6F25\u6EF8\u6F37\u6EFB\u6F2E\u6F09\u6F4E\u6F19\u6F1A\u6F27\u6F18\u6F3B\u6F12\u6EED\u6F0A',
      ],
      [
        'e2a1',
        '\u6F36\u6F73\u6EF9\u6EEE\u6F2D\u6F40\u6F30\u6F3C\u6F35\u6EEB\u6F07\u6F0E\u6F43\u6F05\u6EFD\u6EF6\u6F39\u6F1C\u6EFC\u6F3A\u6F1F\u6F0D\u6F1E\u6F08\u6F21\u7187\u7190\u7189\u7180\u7185\u7182\u718F\u717B\u7186\u7181\u7197\u7244\u7253\u7297\u7295\u7293\u7343\u734D\u7351\u734C\u7462\u7473\u7471\u7475\u7472\u7467\u746E\u7500\u7502\u7503\u757D\u7590\u7616\u7608\u760C\u7615\u7611\u760A\u7614\u76B8\u7781\u777C\u7785\u7782\u776E\u7780\u776F\u777E\u7783\u78B2\u78AA\u78B4\u78AD\u78A8\u787E\u78AB\u789E\u78A5\u78A0\u78AC\u78A2\u78A4\u7998\u798A\u798B\u7996\u7995\u7994\u7993',
      ],
      [
        'e340',
        '\u7997\u7988\u7992\u7990\u7A2B\u7A4A\u7A30\u7A2F\u7A28\u7A26\u7AA8\u7AAB\u7AAC\u7AEE\u7B88\u7B9C\u7B8A\u7B91\u7B90\u7B96\u7B8D\u7B8C\u7B9B\u7B8E\u7B85\u7B98\u5284\u7B99\u7BA4\u7B82\u7CBB\u7CBF\u7CBC\u7CBA\u7DA7\u7DB7\u7DC2\u7DA3\u7DAA\u7DC1\u7DC0\u7DC5\u7D9D\u7DCE\u7DC4\u7DC6\u7DCB\u7DCC\u7DAF\u7DB9\u7D96\u7DBC\u7D9F\u7DA6\u7DAE\u7DA9\u7DA1\u7DC9\u7F73\u7FE2\u7FE3\u7FE5\u7FDE',
      ],
      [
        'e3a1',
        '\u8024\u805D\u805C\u8189\u8186\u8183\u8187\u818D\u818C\u818B\u8215\u8497\u84A4\u84A1\u849F\u84BA\u84CE\u84C2\u84AC\u84AE\u84AB\u84B9\u84B4\u84C1\u84CD\u84AA\u849A\u84B1\u84D0\u849D\u84A7\u84BB\u84A2\u8494\u84C7\u84CC\u849B\u84A9\u84AF\u84A8\u84D6\u8498\u84B6\u84CF\u84A0\u84D7\u84D4\u84D2\u84DB\u84B0\u8491\u8661\u8733\u8723\u8728\u876B\u8740\u872E\u871E\u8721\u8719\u871B\u8743\u872C\u8741\u873E\u8746\u8720\u8732\u872A\u872D\u873C\u8712\u873A\u8731\u8735\u8742\u8726\u8727\u8738\u8724\u871A\u8730\u8711\u88F7\u88E7\u88F1\u88F2\u88FA\u88FE\u88EE\u88FC\u88F6\u88FB',
      ],
      [
        'e440',
        '\u88F0\u88EC\u88EB\u899D\u89A1\u899F\u899E\u89E9\u89EB\u89E8\u8AAB\u8A99\u8A8B\u8A92\u8A8F\u8A96\u8C3D\u8C68\u8C69\u8CD5\u8CCF\u8CD7\u8D96\u8E09\u8E02\u8DFF\u8E0D\u8DFD\u8E0A\u8E03\u8E07\u8E06\u8E05\u8DFE\u8E00\u8E04\u8F10\u8F11\u8F0E\u8F0D\u9123\u911C\u9120\u9122\u911F\u911D\u911A\u9124\u9121\u911B\u917A\u9172\u9179\u9173\u92A5\u92A4\u9276\u929B\u927A\u92A0\u9294\u92AA\u928D',
      ],
      [
        'e4a1',
        '\u92A6\u929A\u92AB\u9279\u9297\u927F\u92A3\u92EE\u928E\u9282\u9295\u92A2\u927D\u9288\u92A1\u928A\u9286\u928C\u9299\u92A7\u927E\u9287\u92A9\u929D\u928B\u922D\u969E\u96A1\u96FF\u9758\u977D\u977A\u977E\u9783\u9780\u9782\u977B\u9784\u9781\u977F\u97CE\u97CD\u9816\u98AD\u98AE\u9902\u9900\u9907\u999D\u999C\u99C3\u99B9\u99BB\u99BA\u99C2\u99BD\u99C7\u9AB1\u9AE3\u9AE7\u9B3E\u9B3F\u9B60\u9B61\u9B5F\u9CF1\u9CF2\u9CF5\u9EA7\u50FF\u5103\u5130\u50F8\u5106\u5107\u50F6\u50FE\u510B\u510C\u50FD\u510A\u528B\u528C\u52F1\u52EF\u5648\u5642\u564C\u5635\u5641\u564A\u5649\u5646\u5658',
      ],
      [
        'e540',
        '\u565A\u5640\u5633\u563D\u562C\u563E\u5638\u562A\u563A\u571A\u58AB\u589D\u58B1\u58A0\u58A3\u58AF\u58AC\u58A5\u58A1\u58FF\u5AFF\u5AF4\u5AFD\u5AF7\u5AF6\u5B03\u5AF8\u5B02\u5AF9\u5B01\u5B07\u5B05\u5B0F\u5C67\u5D99\u5D97\u5D9F\u5D92\u5DA2\u5D93\u5D95\u5DA0\u5D9C\u5DA1\u5D9A\u5D9E\u5E69\u5E5D\u5E60\u5E5C\u7DF3\u5EDB\u5EDE\u5EE1\u5F49\u5FB2\u618B\u6183\u6179\u61B1\u61B0\u61A2\u6189',
      ],
      [
        'e5a1',
        '\u619B\u6193\u61AF\u61AD\u619F\u6192\u61AA\u61A1\u618D\u6166\u61B3\u622D\u646E\u6470\u6496\u64A0\u6485\u6497\u649C\u648F\u648B\u648A\u648C\u64A3\u649F\u6468\u64B1\u6498\u6576\u657A\u6579\u657B\u65B2\u65B3\u66B5\u66B0\u66A9\u66B2\u66B7\u66AA\u66AF\u6A00\u6A06\u6A17\u69E5\u69F8\u6A15\u69F1\u69E4\u6A20\u69FF\u69EC\u69E2\u6A1B\u6A1D\u69FE\u6A27\u69F2\u69EE\u6A14\u69F7\u69E7\u6A40\u6A08\u69E6\u69FB\u6A0D\u69FC\u69EB\u6A09\u6A04\u6A18\u6A25\u6A0F\u69F6\u6A26\u6A07\u69F4\u6A16\u6B51\u6BA5\u6BA3\u6BA2\u6BA6\u6C01\u6C00\u6BFF\u6C02\u6F41\u6F26\u6F7E\u6F87\u6FC6\u6F92',
      ],
      [
        'e640',
        '\u6F8D\u6F89\u6F8C\u6F62\u6F4F\u6F85\u6F5A\u6F96\u6F76\u6F6C\u6F82\u6F55\u6F72\u6F52\u6F50\u6F57\u6F94\u6F93\u6F5D\u6F00\u6F61\u6F6B\u6F7D\u6F67\u6F90\u6F53\u6F8B\u6F69\u6F7F\u6F95\u6F63\u6F77\u6F6A\u6F7B\u71B2\u71AF\u719B\u71B0\u71A0\u719A\u71A9\u71B5\u719D\u71A5\u719E\u71A4\u71A1\u71AA\u719C\u71A7\u71B3\u7298\u729A\u7358\u7352\u735E\u735F\u7360\u735D\u735B\u7361\u735A\u7359',
      ],
      [
        'e6a1',
        '\u7362\u7487\u7489\u748A\u7486\u7481\u747D\u7485\u7488\u747C\u7479\u7508\u7507\u757E\u7625\u761E\u7619\u761D\u761C\u7623\u761A\u7628\u761B\u769C\u769D\u769E\u769B\u778D\u778F\u7789\u7788\u78CD\u78BB\u78CF\u78CC\u78D1\u78CE\u78D4\u78C8\u78C3\u78C4\u78C9\u799A\u79A1\u79A0\u799C\u79A2\u799B\u6B76\u7A39\u7AB2\u7AB4\u7AB3\u7BB7\u7BCB\u7BBE\u7BAC\u7BCE\u7BAF\u7BB9\u7BCA\u7BB5\u7CC5\u7CC8\u7CCC\u7CCB\u7DF7\u7DDB\u7DEA\u7DE7\u7DD7\u7DE1\u7E03\u7DFA\u7DE6\u7DF6\u7DF1\u7DF0\u7DEE\u7DDF\u7F76\u7FAC\u7FB0\u7FAD\u7FED\u7FEB\u7FEA\u7FEC\u7FE6\u7FE8\u8064\u8067\u81A3\u819F',
      ],
      [
        'e740',
        '\u819E\u8195\u81A2\u8199\u8197\u8216\u824F\u8253\u8252\u8250\u824E\u8251\u8524\u853B\u850F\u8500\u8529\u850E\u8509\u850D\u851F\u850A\u8527\u851C\u84FB\u852B\u84FA\u8508\u850C\u84F4\u852A\u84F2\u8515\u84F7\u84EB\u84F3\u84FC\u8512\u84EA\u84E9\u8516\u84FE\u8528\u851D\u852E\u8502\u84FD\u851E\u84F6\u8531\u8526\u84E7\u84E8\u84F0\u84EF\u84F9\u8518\u8520\u8530\u850B\u8519\u852F\u8662',
      ],
      [
        'e7a1',
        '\u8756\u8763\u8764\u8777\u87E1\u8773\u8758\u8754\u875B\u8752\u8761\u875A\u8751\u875E\u876D\u876A\u8750\u874E\u875F\u875D\u876F\u876C\u877A\u876E\u875C\u8765\u874F\u877B\u8775\u8762\u8767\u8769\u885A\u8905\u890C\u8914\u890B\u8917\u8918\u8919\u8906\u8916\u8911\u890E\u8909\u89A2\u89A4\u89A3\u89ED\u89F0\u89EC\u8ACF\u8AC6\u8AB8\u8AD3\u8AD1\u8AD4\u8AD5\u8ABB\u8AD7\u8ABE\u8AC0\u8AC5\u8AD8\u8AC3\u8ABA\u8ABD\u8AD9\u8C3E\u8C4D\u8C8F\u8CE5\u8CDF\u8CD9\u8CE8\u8CDA\u8CDD\u8CE7\u8DA0\u8D9C\u8DA1\u8D9B\u8E20\u8E23\u8E25\u8E24\u8E2E\u8E15\u8E1B\u8E16\u8E11\u8E19\u8E26\u8E27',
      ],
      [
        'e840',
        '\u8E14\u8E12\u8E18\u8E13\u8E1C\u8E17\u8E1A\u8F2C\u8F24\u8F18\u8F1A\u8F20\u8F23\u8F16\u8F17\u9073\u9070\u906F\u9067\u906B\u912F\u912B\u9129\u912A\u9132\u9126\u912E\u9185\u9186\u918A\u9181\u9182\u9184\u9180\u92D0\u92C3\u92C4\u92C0\u92D9\u92B6\u92CF\u92F1\u92DF\u92D8\u92E9\u92D7\u92DD\u92CC\u92EF\u92C2\u92E8\u92CA\u92C8\u92CE\u92E6\u92CD\u92D5\u92C9\u92E0\u92DE\u92E7\u92D1\u92D3',
      ],
      [
        'e8a1',
        '\u92B5\u92E1\u92C6\u92B4\u957C\u95AC\u95AB\u95AE\u95B0\u96A4\u96A2\u96D3\u9705\u9708\u9702\u975A\u978A\u978E\u9788\u97D0\u97CF\u981E\u981D\u9826\u9829\u9828\u9820\u981B\u9827\u98B2\u9908\u98FA\u9911\u9914\u9916\u9917\u9915\u99DC\u99CD\u99CF\u99D3\u99D4\u99CE\u99C9\u99D6\u99D8\u99CB\u99D7\u99CC\u9AB3\u9AEC\u9AEB\u9AF3\u9AF2\u9AF1\u9B46\u9B43\u9B67\u9B74\u9B71\u9B66\u9B76\u9B75\u9B70\u9B68\u9B64\u9B6C\u9CFC\u9CFA\u9CFD\u9CFF\u9CF7\u9D07\u9D00\u9CF9\u9CFB\u9D08\u9D05\u9D04\u9E83\u9ED3\u9F0F\u9F10\u511C\u5113\u5117\u511A\u5111\u51DE\u5334\u53E1\u5670\u5660\u566E',
      ],
      [
        'e940',
        '\u5673\u5666\u5663\u566D\u5672\u565E\u5677\u571C\u571B\u58C8\u58BD\u58C9\u58BF\u58BA\u58C2\u58BC\u58C6\u5B17\u5B19\u5B1B\u5B21\u5B14\u5B13\u5B10\u5B16\u5B28\u5B1A\u5B20\u5B1E\u5BEF\u5DAC\u5DB1\u5DA9\u5DA7\u5DB5\u5DB0\u5DAE\u5DAA\u5DA8\u5DB2\u5DAD\u5DAF\u5DB4\u5E67\u5E68\u5E66\u5E6F\u5EE9\u5EE7\u5EE6\u5EE8\u5EE5\u5F4B\u5FBC\u619D\u61A8\u6196\u61C5\u61B4\u61C6\u61C1\u61CC\u61BA',
      ],
      [
        'e9a1',
        '\u61BF\u61B8\u618C\u64D7\u64D6\u64D0\u64CF\u64C9\u64BD\u6489\u64C3\u64DB\u64F3\u64D9\u6533\u657F\u657C\u65A2\u66C8\u66BE\u66C0\u66CA\u66CB\u66CF\u66BD\u66BB\u66BA\u66CC\u6723\u6A34\u6A66\u6A49\u6A67\u6A32\u6A68\u6A3E\u6A5D\u6A6D\u6A76\u6A5B\u6A51\u6A28\u6A5A\u6A3B\u6A3F\u6A41\u6A6A\u6A64\u6A50\u6A4F\u6A54\u6A6F\u6A69\u6A60\u6A3C\u6A5E\u6A56\u6A55\u6A4D\u6A4E\u6A46\u6B55\u6B54\u6B56\u6BA7\u6BAA\u6BAB\u6BC8\u6BC7\u6C04\u6C03\u6C06\u6FAD\u6FCB\u6FA3\u6FC7\u6FBC\u6FCE\u6FC8\u6F5E\u6FC4\u6FBD\u6F9E\u6FCA\u6FA8\u7004\u6FA5\u6FAE\u6FBA\u6FAC\u6FAA\u6FCF\u6FBF\u6FB8',
      ],
      [
        'ea40',
        '\u6FA2\u6FC9\u6FAB\u6FCD\u6FAF\u6FB2\u6FB0\u71C5\u71C2\u71BF\u71B8\u71D6\u71C0\u71C1\u71CB\u71D4\u71CA\u71C7\u71CF\u71BD\u71D8\u71BC\u71C6\u71DA\u71DB\u729D\u729E\u7369\u7366\u7367\u736C\u7365\u736B\u736A\u747F\u749A\u74A0\u7494\u7492\u7495\u74A1\u750B\u7580\u762F\u762D\u7631\u763D\u7633\u763C\u7635\u7632\u7630\u76BB\u76E6\u779A\u779D\u77A1\u779C\u779B\u77A2\u77A3\u7795\u7799',
      ],
      [
        'eaa1',
        '\u7797\u78DD\u78E9\u78E5\u78EA\u78DE\u78E3\u78DB\u78E1\u78E2\u78ED\u78DF\u78E0\u79A4\u7A44\u7A48\u7A47\u7AB6\u7AB8\u7AB5\u7AB1\u7AB7\u7BDE\u7BE3\u7BE7\u7BDD\u7BD5\u7BE5\u7BDA\u7BE8\u7BF9\u7BD4\u7BEA\u7BE2\u7BDC\u7BEB\u7BD8\u7BDF\u7CD2\u7CD4\u7CD7\u7CD0\u7CD1\u7E12\u7E21\u7E17\u7E0C\u7E1F\u7E20\u7E13\u7E0E\u7E1C\u7E15\u7E1A\u7E22\u7E0B\u7E0F\u7E16\u7E0D\u7E14\u7E25\u7E24\u7F43\u7F7B\u7F7C\u7F7A\u7FB1\u7FEF\u802A\u8029\u806C\u81B1\u81A6\u81AE\u81B9\u81B5\u81AB\u81B0\u81AC\u81B4\u81B2\u81B7\u81A7\u81F2\u8255\u8256\u8257\u8556\u8545\u856B\u854D\u8553\u8561\u8558',
      ],
      [
        'eb40',
        '\u8540\u8546\u8564\u8541\u8562\u8544\u8551\u8547\u8563\u853E\u855B\u8571\u854E\u856E\u8575\u8555\u8567\u8560\u858C\u8566\u855D\u8554\u8565\u856C\u8663\u8665\u8664\u879B\u878F\u8797\u8793\u8792\u8788\u8781\u8796\u8798\u8779\u8787\u87A3\u8785\u8790\u8791\u879D\u8784\u8794\u879C\u879A\u8789\u891E\u8926\u8930\u892D\u892E\u8927\u8931\u8922\u8929\u8923\u892F\u892C\u891F\u89F1\u8AE0',
      ],
      [
        'eba1',
        '\u8AE2\u8AF2\u8AF4\u8AF5\u8ADD\u8B14\u8AE4\u8ADF\u8AF0\u8AC8\u8ADE\u8AE1\u8AE8\u8AFF\u8AEF\u8AFB\u8C91\u8C92\u8C90\u8CF5\u8CEE\u8CF1\u8CF0\u8CF3\u8D6C\u8D6E\u8DA5\u8DA7\u8E33\u8E3E\u8E38\u8E40\u8E45\u8E36\u8E3C\u8E3D\u8E41\u8E30\u8E3F\u8EBD\u8F36\u8F2E\u8F35\u8F32\u8F39\u8F37\u8F34\u9076\u9079\u907B\u9086\u90FA\u9133\u9135\u9136\u9193\u9190\u9191\u918D\u918F\u9327\u931E\u9308\u931F\u9306\u930F\u937A\u9338\u933C\u931B\u9323\u9312\u9301\u9346\u932D\u930E\u930D\u92CB\u931D\u92FA\u9325\u9313\u92F9\u92F7\u9334\u9302\u9324\u92FF\u9329\u9339\u9335\u932A\u9314\u930C',
      ],
      [
        'ec40',
        '\u930B\u92FE\u9309\u9300\u92FB\u9316\u95BC\u95CD\u95BE\u95B9\u95BA\u95B6\u95BF\u95B5\u95BD\u96A9\u96D4\u970B\u9712\u9710\u9799\u9797\u9794\u97F0\u97F8\u9835\u982F\u9832\u9924\u991F\u9927\u9929\u999E\u99EE\u99EC\u99E5\u99E4\u99F0\u99E3\u99EA\u99E9\u99E7\u9AB9\u9ABF\u9AB4\u9ABB\u9AF6\u9AFA\u9AF9\u9AF7\u9B33\u9B80\u9B85\u9B87\u9B7C\u9B7E\u9B7B\u9B82\u9B93\u9B92\u9B90\u9B7A\u9B95',
      ],
      [
        'eca1',
        '\u9B7D\u9B88\u9D25\u9D17\u9D20\u9D1E\u9D14\u9D29\u9D1D\u9D18\u9D22\u9D10\u9D19\u9D1F\u9E88\u9E86\u9E87\u9EAE\u9EAD\u9ED5\u9ED6\u9EFA\u9F12\u9F3D\u5126\u5125\u5122\u5124\u5120\u5129\u52F4\u5693\u568C\u568D\u5686\u5684\u5683\u567E\u5682\u567F\u5681\u58D6\u58D4\u58CF\u58D2\u5B2D\u5B25\u5B32\u5B23\u5B2C\u5B27\u5B26\u5B2F\u5B2E\u5B7B\u5BF1\u5BF2\u5DB7\u5E6C\u5E6A\u5FBE\u5FBB\u61C3\u61B5\u61BC\u61E7\u61E0\u61E5\u61E4\u61E8\u61DE\u64EF\u64E9\u64E3\u64EB\u64E4\u64E8\u6581\u6580\u65B6\u65DA\u66D2\u6A8D\u6A96\u6A81\u6AA5\u6A89\u6A9F\u6A9B\u6AA1\u6A9E\u6A87\u6A93\u6A8E',
      ],
      [
        'ed40',
        '\u6A95\u6A83\u6AA8\u6AA4\u6A91\u6A7F\u6AA6\u6A9A\u6A85\u6A8C\u6A92\u6B5B\u6BAD\u6C09\u6FCC\u6FA9\u6FF4\u6FD4\u6FE3\u6FDC\u6FED\u6FE7\u6FE6\u6FDE\u6FF2\u6FDD\u6FE2\u6FE8\u71E1\u71F1\u71E8\u71F2\u71E4\u71F0\u71E2\u7373\u736E\u736F\u7497\u74B2\u74AB\u7490\u74AA\u74AD\u74B1\u74A5\u74AF\u7510\u7511\u7512\u750F\u7584\u7643\u7648\u7649\u7647\u76A4\u76E9\u77B5\u77AB\u77B2\u77B7\u77B6',
      ],
      [
        'eda1',
        '\u77B4\u77B1\u77A8\u77F0\u78F3\u78FD\u7902\u78FB\u78FC\u78F2\u7905\u78F9\u78FE\u7904\u79AB\u79A8\u7A5C\u7A5B\u7A56\u7A58\u7A54\u7A5A\u7ABE\u7AC0\u7AC1\u7C05\u7C0F\u7BF2\u7C00\u7BFF\u7BFB\u7C0E\u7BF4\u7C0B\u7BF3\u7C02\u7C09\u7C03\u7C01\u7BF8\u7BFD\u7C06\u7BF0\u7BF1\u7C10\u7C0A\u7CE8\u7E2D\u7E3C\u7E42\u7E33\u9848\u7E38\u7E2A\u7E49\u7E40\u7E47\u7E29\u7E4C\u7E30\u7E3B\u7E36\u7E44\u7E3A\u7F45\u7F7F\u7F7E\u7F7D\u7FF4\u7FF2\u802C\u81BB\u81C4\u81CC\u81CA\u81C5\u81C7\u81BC\u81E9\u825B\u825A\u825C\u8583\u8580\u858F\u85A7\u8595\u85A0\u858B\u85A3\u857B\u85A4\u859A\u859E',
      ],
      [
        'ee40',
        '\u8577\u857C\u8589\u85A1\u857A\u8578\u8557\u858E\u8596\u8586\u858D\u8599\u859D\u8581\u85A2\u8582\u8588\u8585\u8579\u8576\u8598\u8590\u859F\u8668\u87BE\u87AA\u87AD\u87C5\u87B0\u87AC\u87B9\u87B5\u87BC\u87AE\u87C9\u87C3\u87C2\u87CC\u87B7\u87AF\u87C4\u87CA\u87B4\u87B6\u87BF\u87B8\u87BD\u87DE\u87B2\u8935\u8933\u893C\u893E\u8941\u8952\u8937\u8942\u89AD\u89AF\u89AE\u89F2\u89F3\u8B1E',
      ],
      [
        'eea1',
        '\u8B18\u8B16\u8B11\u8B05\u8B0B\u8B22\u8B0F\u8B12\u8B15\u8B07\u8B0D\u8B08\u8B06\u8B1C\u8B13\u8B1A\u8C4F\u8C70\u8C72\u8C71\u8C6F\u8C95\u8C94\u8CF9\u8D6F\u8E4E\u8E4D\u8E53\u8E50\u8E4C\u8E47\u8F43\u8F40\u9085\u907E\u9138\u919A\u91A2\u919B\u9199\u919F\u91A1\u919D\u91A0\u93A1\u9383\u93AF\u9364\u9356\u9347\u937C\u9358\u935C\u9376\u9349\u9350\u9351\u9360\u936D\u938F\u934C\u936A\u9379\u9357\u9355\u9352\u934F\u9371\u9377\u937B\u9361\u935E\u9363\u9367\u9380\u934E\u9359\u95C7\u95C0\u95C9\u95C3\u95C5\u95B7\u96AE\u96B0\u96AC\u9720\u971F\u9718\u971D\u9719\u979A\u97A1\u979C',
      ],
      [
        'ef40',
        '\u979E\u979D\u97D5\u97D4\u97F1\u9841\u9844\u984A\u9849\u9845\u9843\u9925\u992B\u992C\u992A\u9933\u9932\u992F\u992D\u9931\u9930\u9998\u99A3\u99A1\u9A02\u99FA\u99F4\u99F7\u99F9\u99F8\u99F6\u99FB\u99FD\u99FE\u99FC\u9A03\u9ABE\u9AFE\u9AFD\u9B01\u9AFC\u9B48\u9B9A\u9BA8\u9B9E\u9B9B\u9BA6\u9BA1\u9BA5\u9BA4\u9B86\u9BA2\u9BA0\u9BAF\u9D33\u9D41\u9D67\u9D36\u9D2E\u9D2F\u9D31\u9D38\u9D30',
      ],
      [
        'efa1',
        '\u9D45\u9D42\u9D43\u9D3E\u9D37\u9D40\u9D3D\u7FF5\u9D2D\u9E8A\u9E89\u9E8D\u9EB0\u9EC8\u9EDA\u9EFB\u9EFF\u9F24\u9F23\u9F22\u9F54\u9FA0\u5131\u512D\u512E\u5698\u569C\u5697\u569A\u569D\u5699\u5970\u5B3C\u5C69\u5C6A\u5DC0\u5E6D\u5E6E\u61D8\u61DF\u61ED\u61EE\u61F1\u61EA\u61F0\u61EB\u61D6\u61E9\u64FF\u6504\u64FD\u64F8\u6501\u6503\u64FC\u6594\u65DB\u66DA\u66DB\u66D8\u6AC5\u6AB9\u6ABD\u6AE1\u6AC6\u6ABA\u6AB6\u6AB7\u6AC7\u6AB4\u6AAD\u6B5E\u6BC9\u6C0B\u7007\u700C\u700D\u7001\u7005\u7014\u700E\u6FFF\u7000\u6FFB\u7026\u6FFC\u6FF7\u700A\u7201\u71FF\u71F9\u7203\u71FD\u7376',
      ],
      [
        'f040',
        '\u74B8\u74C0\u74B5\u74C1\u74BE\u74B6\u74BB\u74C2\u7514\u7513\u765C\u7664\u7659\u7650\u7653\u7657\u765A\u76A6\u76BD\u76EC\u77C2\u77BA\u78FF\u790C\u7913\u7914\u7909\u7910\u7912\u7911\u79AD\u79AC\u7A5F\u7C1C\u7C29\u7C19\u7C20\u7C1F\u7C2D\u7C1D\u7C26\u7C28\u7C22\u7C25\u7C30\u7E5C\u7E50\u7E56\u7E63\u7E58\u7E62\u7E5F\u7E51\u7E60\u7E57\u7E53\u7FB5\u7FB3\u7FF7\u7FF8\u8075\u81D1\u81D2',
      ],
      [
        'f0a1',
        '\u81D0\u825F\u825E\u85B4\u85C6\u85C0\u85C3\u85C2\u85B3\u85B5\u85BD\u85C7\u85C4\u85BF\u85CB\u85CE\u85C8\u85C5\u85B1\u85B6\u85D2\u8624\u85B8\u85B7\u85BE\u8669\u87E7\u87E6\u87E2\u87DB\u87EB\u87EA\u87E5\u87DF\u87F3\u87E4\u87D4\u87DC\u87D3\u87ED\u87D8\u87E3\u87A4\u87D7\u87D9\u8801\u87F4\u87E8\u87DD\u8953\u894B\u894F\u894C\u8946\u8950\u8951\u8949\u8B2A\u8B27\u8B23\u8B33\u8B30\u8B35\u8B47\u8B2F\u8B3C\u8B3E\u8B31\u8B25\u8B37\u8B26\u8B36\u8B2E\u8B24\u8B3B\u8B3D\u8B3A\u8C42\u8C75\u8C99\u8C98\u8C97\u8CFE\u8D04\u8D02\u8D00\u8E5C\u8E62\u8E60\u8E57\u8E56\u8E5E\u8E65\u8E67',
      ],
      [
        'f140',
        '\u8E5B\u8E5A\u8E61\u8E5D\u8E69\u8E54\u8F46\u8F47\u8F48\u8F4B\u9128\u913A\u913B\u913E\u91A8\u91A5\u91A7\u91AF\u91AA\u93B5\u938C\u9392\u93B7\u939B\u939D\u9389\u93A7\u938E\u93AA\u939E\u93A6\u9395\u9388\u9399\u939F\u938D\u93B1\u9391\u93B2\u93A4\u93A8\u93B4\u93A3\u93A5\u95D2\u95D3\u95D1\u96B3\u96D7\u96DA\u5DC2\u96DF\u96D8\u96DD\u9723\u9722\u9725\u97AC\u97AE\u97A8\u97AB\u97A4\u97AA',
      ],
      [
        'f1a1',
        '\u97A2\u97A5\u97D7\u97D9\u97D6\u97D8\u97FA\u9850\u9851\u9852\u98B8\u9941\u993C\u993A\u9A0F\u9A0B\u9A09\u9A0D\u9A04\u9A11\u9A0A\u9A05\u9A07\u9A06\u9AC0\u9ADC\u9B08\u9B04\u9B05\u9B29\u9B35\u9B4A\u9B4C\u9B4B\u9BC7\u9BC6\u9BC3\u9BBF\u9BC1\u9BB5\u9BB8\u9BD3\u9BB6\u9BC4\u9BB9\u9BBD\u9D5C\u9D53\u9D4F\u9D4A\u9D5B\u9D4B\u9D59\u9D56\u9D4C\u9D57\u9D52\u9D54\u9D5F\u9D58\u9D5A\u9E8E\u9E8C\u9EDF\u9F01\u9F00\u9F16\u9F25\u9F2B\u9F2A\u9F29\u9F28\u9F4C\u9F55\u5134\u5135\u5296\u52F7\u53B4\u56AB\u56AD\u56A6\u56A7\u56AA\u56AC\u58DA\u58DD\u58DB\u5912\u5B3D\u5B3E\u5B3F\u5DC3\u5E70',
      ],
      [
        'f240',
        '\u5FBF\u61FB\u6507\u6510\u650D\u6509\u650C\u650E\u6584\u65DE\u65DD\u66DE\u6AE7\u6AE0\u6ACC\u6AD1\u6AD9\u6ACB\u6ADF\u6ADC\u6AD0\u6AEB\u6ACF\u6ACD\u6ADE\u6B60\u6BB0\u6C0C\u7019\u7027\u7020\u7016\u702B\u7021\u7022\u7023\u7029\u7017\u7024\u701C\u702A\u720C\u720A\u7207\u7202\u7205\u72A5\u72A6\u72A4\u72A3\u72A1\u74CB\u74C5\u74B7\u74C3\u7516\u7660\u77C9\u77CA\u77C4\u77F1\u791D\u791B',
      ],
      [
        'f2a1',
        '\u7921\u791C\u7917\u791E\u79B0\u7A67\u7A68\u7C33\u7C3C\u7C39\u7C2C\u7C3B\u7CEC\u7CEA\u7E76\u7E75\u7E78\u7E70\u7E77\u7E6F\u7E7A\u7E72\u7E74\u7E68\u7F4B\u7F4A\u7F83\u7F86\u7FB7\u7FFD\u7FFE\u8078\u81D7\u81D5\u8264\u8261\u8263\u85EB\u85F1\u85ED\u85D9\u85E1\u85E8\u85DA\u85D7\u85EC\u85F2\u85F8\u85D8\u85DF\u85E3\u85DC\u85D1\u85F0\u85E6\u85EF\u85DE\u85E2\u8800\u87FA\u8803\u87F6\u87F7\u8809\u880C\u880B\u8806\u87FC\u8808\u87FF\u880A\u8802\u8962\u895A\u895B\u8957\u8961\u895C\u8958\u895D\u8959\u8988\u89B7\u89B6\u89F6\u8B50\u8B48\u8B4A\u8B40\u8B53\u8B56\u8B54\u8B4B\u8B55',
      ],
      [
        'f340',
        '\u8B51\u8B42\u8B52\u8B57\u8C43\u8C77\u8C76\u8C9A\u8D06\u8D07\u8D09\u8DAC\u8DAA\u8DAD\u8DAB\u8E6D\u8E78\u8E73\u8E6A\u8E6F\u8E7B\u8EC2\u8F52\u8F51\u8F4F\u8F50\u8F53\u8FB4\u9140\u913F\u91B0\u91AD\u93DE\u93C7\u93CF\u93C2\u93DA\u93D0\u93F9\u93EC\u93CC\u93D9\u93A9\u93E6\u93CA\u93D4\u93EE\u93E3\u93D5\u93C4\u93CE\u93C0\u93D2\u93E7\u957D\u95DA\u95DB\u96E1\u9729\u972B\u972C\u9728\u9726',
      ],
      [
        'f3a1',
        '\u97B3\u97B7\u97B6\u97DD\u97DE\u97DF\u985C\u9859\u985D\u9857\u98BF\u98BD\u98BB\u98BE\u9948\u9947\u9943\u99A6\u99A7\u9A1A\u9A15\u9A25\u9A1D\u9A24\u9A1B\u9A22\u9A20\u9A27\u9A23\u9A1E\u9A1C\u9A14\u9AC2\u9B0B\u9B0A\u9B0E\u9B0C\u9B37\u9BEA\u9BEB\u9BE0\u9BDE\u9BE4\u9BE6\u9BE2\u9BF0\u9BD4\u9BD7\u9BEC\u9BDC\u9BD9\u9BE5\u9BD5\u9BE1\u9BDA\u9D77\u9D81\u9D8A\u9D84\u9D88\u9D71\u9D80\u9D78\u9D86\u9D8B\u9D8C\u9D7D\u9D6B\u9D74\u9D75\u9D70\u9D69\u9D85\u9D73\u9D7B\u9D82\u9D6F\u9D79\u9D7F\u9D87\u9D68\u9E94\u9E91\u9EC0\u9EFC\u9F2D\u9F40\u9F41\u9F4D\u9F56\u9F57\u9F58\u5337\u56B2',
      ],
      [
        'f440',
        '\u56B5\u56B3\u58E3\u5B45\u5DC6\u5DC7\u5EEE\u5EEF\u5FC0\u5FC1\u61F9\u6517\u6516\u6515\u6513\u65DF\u66E8\u66E3\u66E4\u6AF3\u6AF0\u6AEA\u6AE8\u6AF9\u6AF1\u6AEE\u6AEF\u703C\u7035\u702F\u7037\u7034\u7031\u7042\u7038\u703F\u703A\u7039\u7040\u703B\u7033\u7041\u7213\u7214\u72A8\u737D\u737C\u74BA\u76AB\u76AA\u76BE\u76ED\u77CC\u77CE\u77CF\u77CD\u77F2\u7925\u7923\u7927\u7928\u7924\u7929',
      ],
      [
        'f4a1',
        '\u79B2\u7A6E\u7A6C\u7A6D\u7AF7\u7C49\u7C48\u7C4A\u7C47\u7C45\u7CEE\u7E7B\u7E7E\u7E81\u7E80\u7FBA\u7FFF\u8079\u81DB\u81D9\u820B\u8268\u8269\u8622\u85FF\u8601\u85FE\u861B\u8600\u85F6\u8604\u8609\u8605\u860C\u85FD\u8819\u8810\u8811\u8817\u8813\u8816\u8963\u8966\u89B9\u89F7\u8B60\u8B6A\u8B5D\u8B68\u8B63\u8B65\u8B67\u8B6D\u8DAE\u8E86\u8E88\u8E84\u8F59\u8F56\u8F57\u8F55\u8F58\u8F5A\u908D\u9143\u9141\u91B7\u91B5\u91B2\u91B3\u940B\u9413\u93FB\u9420\u940F\u9414\u93FE\u9415\u9410\u9428\u9419\u940D\u93F5\u9400\u93F7\u9407\u940E\u9416\u9412\u93FA\u9409\u93F8\u940A\u93FF',
      ],
      [
        'f540',
        '\u93FC\u940C\u93F6\u9411\u9406\u95DE\u95E0\u95DF\u972E\u972F\u97B9\u97BB\u97FD\u97FE\u9860\u9862\u9863\u985F\u98C1\u98C2\u9950\u994E\u9959\u994C\u994B\u9953\u9A32\u9A34\u9A31\u9A2C\u9A2A\u9A36\u9A29\u9A2E\u9A38\u9A2D\u9AC7\u9ACA\u9AC6\u9B10\u9B12\u9B11\u9C0B\u9C08\u9BF7\u9C05\u9C12\u9BF8\u9C40\u9C07\u9C0E\u9C06\u9C17\u9C14\u9C09\u9D9F\u9D99\u9DA4\u9D9D\u9D92\u9D98\u9D90\u9D9B',
      ],
      [
        'f5a1',
        '\u9DA0\u9D94\u9D9C\u9DAA\u9D97\u9DA1\u9D9A\u9DA2\u9DA8\u9D9E\u9DA3\u9DBF\u9DA9\u9D96\u9DA6\u9DA7\u9E99\u9E9B\u9E9A\u9EE5\u9EE4\u9EE7\u9EE6\u9F30\u9F2E\u9F5B\u9F60\u9F5E\u9F5D\u9F59\u9F91\u513A\u5139\u5298\u5297\u56C3\u56BD\u56BE\u5B48\u5B47\u5DCB\u5DCF\u5EF1\u61FD\u651B\u6B02\u6AFC\u6B03\u6AF8\u6B00\u7043\u7044\u704A\u7048\u7049\u7045\u7046\u721D\u721A\u7219\u737E\u7517\u766A\u77D0\u792D\u7931\u792F\u7C54\u7C53\u7CF2\u7E8A\u7E87\u7E88\u7E8B\u7E86\u7E8D\u7F4D\u7FBB\u8030\u81DD\u8618\u862A\u8626\u861F\u8623\u861C\u8619\u8627\u862E\u8621\u8620\u8629\u861E\u8625',
      ],
      [
        'f640',
        '\u8829\u881D\u881B\u8820\u8824\u881C\u882B\u884A\u896D\u8969\u896E\u896B\u89FA\u8B79\u8B78\u8B45\u8B7A\u8B7B\u8D10\u8D14\u8DAF\u8E8E\u8E8C\u8F5E\u8F5B\u8F5D\u9146\u9144\u9145\u91B9\u943F\u943B\u9436\u9429\u943D\u943C\u9430\u9439\u942A\u9437\u942C\u9440\u9431\u95E5\u95E4\u95E3\u9735\u973A\u97BF\u97E1\u9864\u98C9\u98C6\u98C0\u9958\u9956\u9A39\u9A3D\u9A46\u9A44\u9A42\u9A41\u9A3A',
      ],
      [
        'f6a1',
        '\u9A3F\u9ACD\u9B15\u9B17\u9B18\u9B16\u9B3A\u9B52\u9C2B\u9C1D\u9C1C\u9C2C\u9C23\u9C28\u9C29\u9C24\u9C21\u9DB7\u9DB6\u9DBC\u9DC1\u9DC7\u9DCA\u9DCF\u9DBE\u9DC5\u9DC3\u9DBB\u9DB5\u9DCE\u9DB9\u9DBA\u9DAC\u9DC8\u9DB1\u9DAD\u9DCC\u9DB3\u9DCD\u9DB2\u9E7A\u9E9C\u9EEB\u9EEE\u9EED\u9F1B\u9F18\u9F1A\u9F31\u9F4E\u9F65\u9F64\u9F92\u4EB9\u56C6\u56C5\u56CB\u5971\u5B4B\u5B4C\u5DD5\u5DD1\u5EF2\u6521\u6520\u6526\u6522\u6B0B\u6B08\u6B09\u6C0D\u7055\u7056\u7057\u7052\u721E\u721F\u72A9\u737F\u74D8\u74D5\u74D9\u74D7\u766D\u76AD\u7935\u79B4\u7A70\u7A71\u7C57\u7C5C\u7C59\u7C5B\u7C5A',
      ],
      [
        'f740',
        '\u7CF4\u7CF1\u7E91\u7F4F\u7F87\u81DE\u826B\u8634\u8635\u8633\u862C\u8632\u8636\u882C\u8828\u8826\u882A\u8825\u8971\u89BF\u89BE\u89FB\u8B7E\u8B84\u8B82\u8B86\u8B85\u8B7F\u8D15\u8E95\u8E94\u8E9A\u8E92\u8E90\u8E96\u8E97\u8F60\u8F62\u9147\u944C\u9450\u944A\u944B\u944F\u9447\u9445\u9448\u9449\u9446\u973F\u97E3\u986A\u9869\u98CB\u9954\u995B\u9A4E\u9A53\u9A54\u9A4C\u9A4F\u9A48\u9A4A',
      ],
      [
        'f7a1',
        '\u9A49\u9A52\u9A50\u9AD0\u9B19\u9B2B\u9B3B\u9B56\u9B55\u9C46\u9C48\u9C3F\u9C44\u9C39\u9C33\u9C41\u9C3C\u9C37\u9C34\u9C32\u9C3D\u9C36\u9DDB\u9DD2\u9DDE\u9DDA\u9DCB\u9DD0\u9DDC\u9DD1\u9DDF\u9DE9\u9DD9\u9DD8\u9DD6\u9DF5\u9DD5\u9DDD\u9EB6\u9EF0\u9F35\u9F33\u9F32\u9F42\u9F6B\u9F95\u9FA2\u513D\u5299\u58E8\u58E7\u5972\u5B4D\u5DD8\u882F\u5F4F\u6201\u6203\u6204\u6529\u6525\u6596\u66EB\u6B11\u6B12\u6B0F\u6BCA\u705B\u705A\u7222\u7382\u7381\u7383\u7670\u77D4\u7C67\u7C66\u7E95\u826C\u863A\u8640\u8639\u863C\u8631\u863B\u863E\u8830\u8832\u882E\u8833\u8976\u8974\u8973\u89FE',
      ],
      [
        'f840',
        '\u8B8C\u8B8E\u8B8B\u8B88\u8C45\u8D19\u8E98\u8F64\u8F63\u91BC\u9462\u9455\u945D\u9457\u945E\u97C4\u97C5\u9800\u9A56\u9A59\u9B1E\u9B1F\u9B20\u9C52\u9C58\u9C50\u9C4A\u9C4D\u9C4B\u9C55\u9C59\u9C4C\u9C4E\u9DFB\u9DF7\u9DEF\u9DE3\u9DEB\u9DF8\u9DE4\u9DF6\u9DE1\u9DEE\u9DE6\u9DF2\u9DF0\u9DE2\u9DEC\u9DF4\u9DF3\u9DE8\u9DED\u9EC2\u9ED0\u9EF2\u9EF3\u9F06\u9F1C\u9F38\u9F37\u9F36\u9F43\u9F4F',
      ],
      [
        'f8a1',
        '\u9F71\u9F70\u9F6E\u9F6F\u56D3\u56CD\u5B4E\u5C6D\u652D\u66ED\u66EE\u6B13\u705F\u7061\u705D\u7060\u7223\u74DB\u74E5\u77D5\u7938\u79B7\u79B6\u7C6A\u7E97\u7F89\u826D\u8643\u8838\u8837\u8835\u884B\u8B94\u8B95\u8E9E\u8E9F\u8EA0\u8E9D\u91BE\u91BD\u91C2\u946B\u9468\u9469\u96E5\u9746\u9743\u9747\u97C7\u97E5\u9A5E\u9AD5\u9B59\u9C63\u9C67\u9C66\u9C62\u9C5E\u9C60\u9E02\u9DFE\u9E07\u9E03\u9E06\u9E05\u9E00\u9E01\u9E09\u9DFF\u9DFD\u9E04\u9EA0\u9F1E\u9F46\u9F74\u9F75\u9F76\u56D4\u652E\u65B8\u6B18\u6B19\u6B17\u6B1A\u7062\u7226\u72AA\u77D8\u77D9\u7939\u7C69\u7C6B\u7CF6\u7E9A',
      ],
      [
        'f940',
        '\u7E98\u7E9B\u7E99\u81E0\u81E1\u8646\u8647\u8648\u8979\u897A\u897C\u897B\u89FF\u8B98\u8B99\u8EA5\u8EA4\u8EA3\u946E\u946D\u946F\u9471\u9473\u9749\u9872\u995F\u9C68\u9C6E\u9C6D\u9E0B\u9E0D\u9E10\u9E0F\u9E12\u9E11\u9EA1\u9EF5\u9F09\u9F47\u9F78\u9F7B\u9F7A\u9F79\u571E\u7066\u7C6F\u883C\u8DB2\u8EA6\u91C3\u9474\u9478\u9476\u9475\u9A60\u9C74\u9C73\u9C71\u9C75\u9E14\u9E13\u9EF6\u9F0A',
      ],
      [
        'f9a1',
        '\u9FA4\u7068\u7065\u7CF7\u866A\u883E\u883D\u883F\u8B9E\u8C9C\u8EA9\u8EC9\u974B\u9873\u9874\u98CC\u9961\u99AB\u9A64\u9A66\u9A67\u9B24\u9E15\u9E17\u9F48\u6207\u6B1E\u7227\u864C\u8EA8\u9482\u9480\u9481\u9A69\u9A68\u9B2E\u9E19\u7229\u864B\u8B9F\u9483\u9C79\u9EB7\u7675\u9A6B\u9C7A\u9E1D\u7069\u706A\u9EA4\u9F7E\u9F49\u9F98\u7881\u92B9\u88CF\u58BB\u6052\u7CA7\u5AFA\u2554\u2566\u2557\u2560\u256C\u2563\u255A\u2569\u255D\u2552\u2564\u2555\u255E\u256A\u2561\u2558\u2567\u255B\u2553\u2565\u2556\u255F\u256B\u2562\u2559\u2568\u255C\u2551\u2550\u256D\u256E\u2570\u256F\u2593',
      ],
    ];
  },
});

// ../../node_modules/iconv-lite/encodings/tables/big5-added.json
var require_big5_added = __commonJS({
  '../../node_modules/iconv-lite/encodings/tables/big5-added.json'(
    exports2,
    module2
  ) {
    module2.exports = [
      [
        '8740',
        '\u43F0\u4C32\u4603\u45A6\u4578\u{27267}\u4D77\u45B3\u{27CB1}\u4CE2\u{27CC5}\u3B95\u4736\u4744\u4C47\u4C40\u{242BF}\u{23617}\u{27352}\u{26E8B}\u{270D2}\u4C57\u{2A351}\u474F\u45DA\u4C85\u{27C6C}\u4D07\u4AA4\u46A1\u{26B23}\u7225\u{25A54}\u{21A63}\u{23E06}\u{23F61}\u664D\u56FB',
      ],
      [
        '8767',
        '\u7D95\u591D\u{28BB9}\u3DF4\u9734\u{27BEF}\u5BDB\u{21D5E}\u5AA4\u3625\u{29EB0}\u5AD1\u5BB7\u5CFC\u676E\u8593\u{29945}\u7461\u749D\u3875\u{21D53}\u{2369E}\u{26021}\u3EEC',
      ],
      [
        '87a1',
        '\u{258DE}\u3AF5\u7AFC\u9F97\u{24161}\u{2890D}\u{231EA}\u{20A8A}\u{2325E}\u430A\u8484\u9F96\u942F\u4930\u8613\u5896\u974A\u9218\u79D0\u7A32\u6660\u6A29\u889D\u744C\u7BC5\u6782\u7A2C\u524F\u9046\u34E6\u73C4\u{25DB9}\u74C6\u9FC7\u57B3\u492F\u544C\u4131\u{2368E}\u5818\u7A72\u{27B65}\u8B8F\u46AE\u{26E88}\u4181\u{25D99}\u7BAE\u{224BC}\u9FC8\u{224C1}\u{224C9}\u{224CC}\u9FC9\u8504\u{235BB}\u40B4\u9FCA\u44E1\u{2ADFF}\u62C1\u706E\u9FCB',
      ],
      [
        '8840',
        '\u31C0',
        4,
        '\u{2010C}\u31C5\u{200D1}\u{200CD}\u31C6\u31C7\u{200CB}\u{21FE8}\u31C8\u{200CA}\u31C9\u31CA\u31CB\u31CC\u{2010E}\u31CD\u31CE\u0100\xC1\u01CD\xC0\u0112\xC9\u011A\xC8\u014C\xD3\u01D1\xD2\u0FFF\xCA\u0304\u1EBE\u0FFF\xCA\u030C\u1EC0\xCA\u0101\xE1\u01CE\xE0\u0251\u0113\xE9\u011B\xE8\u012B\xED\u01D0\xEC\u014D\xF3\u01D2\xF2\u016B\xFA\u01D4\xF9\u01D6\u01D8\u01DA',
      ],
      [
        '88a1',
        '\u01DC\xFC\u0FFF\xEA\u0304\u1EBF\u0FFF\xEA\u030C\u1EC1\xEA\u0261\u23DA\u23DB',
      ],
      ['8940', '\u{2A3A9}\u{21145}'],
      ['8943', '\u650A'],
      ['8946', '\u4E3D\u6EDD\u9D4E\u91DF'],
      [
        '894c',
        '\u{27735}\u6491\u4F1A\u4F28\u4FA8\u5156\u5174\u519C\u51E4\u52A1\u52A8\u533B\u534E\u53D1\u53D8\u56E2\u58F0\u5904\u5907\u5932\u5934\u5B66\u5B9E\u5B9F\u5C9A\u5E86\u603B\u6589\u67FE\u6804\u6865\u6D4E\u70BC\u7535\u7EA4\u7EAC\u7EBA\u7EC7\u7ECF\u7EDF\u7F06\u7F37\u827A\u82CF\u836F\u89C6\u8BBE\u8BE2\u8F66\u8F67\u8F6E',
      ],
      ['89a1', '\u7411\u7CFC\u7DCD\u6946\u7AC9\u5227'],
      ['89ab', '\u918C\u78B8\u915E\u80BC'],
      ['89b0', '\u8D0B\u80F6\u{209E7}'],
      [
        '89b5',
        '\u809F\u9EC7\u4CCD\u9DC9\u9E0C\u4C3E\u{29DF6}\u{2700E}\u9E0A\u{2A133}\u35C1',
      ],
      ['89c1', '\u6E9A\u823E\u7519'],
      [
        '89c5',
        '\u4911\u9A6C\u9A8F\u9F99\u7987\u{2846C}\u{21DCA}\u{205D0}\u{22AE6}\u4E24\u4E81\u4E80\u4E87\u4EBF\u4EEB\u4F37\u344C\u4FBD\u3E48\u5003\u5088\u347D\u3493\u34A5\u5186\u5905\u51DB\u51FC\u5205\u4E89\u5279\u5290\u5327\u35C7\u53A9\u3551\u53B0\u3553\u53C2\u5423\u356D\u3572\u3681\u5493\u54A3\u54B4\u54B9\u54D0\u54EF\u5518\u5523\u5528\u3598\u553F\u35A5\u35BF\u55D7\u35C5',
      ],
      ['8a40', '\u{27D84}\u5525'],
      [
        '8a43',
        '\u{20C42}\u{20D15}\u{2512B}\u5590\u{22CC6}\u39EC\u{20341}\u8E46\u{24DB8}\u{294E5}\u4053\u{280BE}\u777A\u{22C38}\u3A34\u47D5\u{2815D}\u{269F2}\u{24DEA}\u64DD\u{20D7C}\u{20FB4}\u{20CD5}\u{210F4}\u648D\u8E7E\u{20E96}\u{20C0B}\u{20F64}\u{22CA9}\u{28256}\u{244D3}',
      ],
      [
        '8a64',
        '\u{20D46}\u{29A4D}\u{280E9}\u47F4\u{24EA7}\u{22CC2}\u9AB2\u3A67\u{295F4}\u3FED\u3506\u{252C7}\u{297D4}\u{278C8}\u{22D44}\u9D6E\u9815',
      ],
      [
        '8a76',
        '\u43D9\u{260A5}\u64B4\u54E3\u{22D4C}\u{22BCA}\u{21077}\u39FB\u{2106F}',
      ],
      [
        '8aa1',
        '\u{266DA}\u{26716}\u{279A0}\u64EA\u{25052}\u{20C43}\u8E68\u{221A1}\u{28B4C}\u{20731}',
      ],
      ['8aac', '\u480B\u{201A9}\u3FFA\u5873\u{22D8D}'],
      [
        '8ab2',
        '\u{245C8}\u{204FC}\u{26097}\u{20F4C}\u{20D96}\u5579\u40BB\u43BA',
      ],
      [
        '8abb',
        '\u4AB4\u{22A66}\u{2109D}\u81AA\u98F5\u{20D9C}\u6379\u39FE\u{22775}\u8DC0\u56A1\u647C\u3E43',
      ],
      ['8ac9', '\u{2A601}\u{20E09}\u{22ACF}\u{22CC9}'],
      [
        '8ace',
        '\u{210C8}\u{239C2}\u3992\u3A06\u{2829B}\u3578\u{25E49}\u{220C7}\u5652\u{20F31}\u{22CB2}\u{29720}\u34BC\u6C3D\u{24E3B}',
      ],
      [
        '8adf',
        '\u{27574}\u{22E8B}\u{22208}\u{2A65B}\u{28CCD}\u{20E7A}\u{20C34}\u{2681C}\u7F93\u{210CF}\u{22803}\u{22939}\u35FB\u{251E3}\u{20E8C}\u{20F8D}\u{20EAA}\u3F93\u{20F30}\u{20D47}\u{2114F}\u{20E4C}',
      ],
      [
        '8af6',
        '\u{20EAB}\u{20BA9}\u{20D48}\u{210C0}\u{2113D}\u3FF9\u{22696}\u6432\u{20FAD}',
      ],
      [
        '8b40',
        '\u{233F4}\u{27639}\u{22BCE}\u{20D7E}\u{20D7F}\u{22C51}\u{22C55}\u3A18\u{20E98}\u{210C7}\u{20F2E}\u{2A632}\u{26B50}\u{28CD2}\u{28D99}\u{28CCA}\u95AA\u54CC\u82C4\u55B9',
      ],
      [
        '8b55',
        '\u{29EC3}\u9C26\u9AB6\u{2775E}\u{22DEE}\u7140\u816D\u80EC\u5C1C\u{26572}\u8134\u3797\u535F\u{280BD}\u91B6\u{20EFA}\u{20E0F}\u{20E77}\u{20EFB}\u35DD\u{24DEB}\u3609\u{20CD6}\u56AF\u{227B5}\u{210C9}\u{20E10}\u{20E78}\u{21078}\u{21148}\u{28207}\u{21455}\u{20E79}\u{24E50}\u{22DA4}\u5A54\u{2101D}\u{2101E}\u{210F5}\u{210F6}\u579C\u{20E11}',
      ],
      [
        '8ba1',
        '\u{27694}\u{282CD}\u{20FB5}\u{20E7B}\u{2517E}\u3703\u{20FB6}\u{21180}\u{252D8}\u{2A2BD}\u{249DA}\u{2183A}\u{24177}\u{2827C}\u5899\u5268\u361A\u{2573D}\u7BB2\u5B68\u4800\u4B2C\u9F27\u49E7\u9C1F\u9B8D\u{25B74}\u{2313D}\u55FB\u35F2\u5689\u4E28\u5902\u{21BC1}\u{2F878}\u9751\u{20086}\u4E5B\u4EBB\u353E\u5C23\u5F51\u5FC4\u38FA\u624C\u6535\u6B7A\u6C35\u6C3A\u706C\u722B\u4E2C\u72AD\u{248E9}\u7F52\u793B\u7CF9\u7F53\u{2626A}\u34C1',
      ],
      [
        '8bde',
        '\u{2634B}\u8002\u8080\u{26612}\u{26951}\u535D\u8864\u89C1\u{278B2}\u8BA0\u8D1D\u9485\u9578\u957F\u95E8\u{28E0F}\u97E6\u9875\u98CE\u98DE\u9963\u{29810}\u9C7C\u9E1F\u9EC4\u6B6F\uF907\u4E37\u{20087}\u961D\u6237\u94A2',
      ],
      [
        '8c40',
        '\u503B\u6DFE\u{29C73}\u9FA6\u3DC9\u888F\u{2414E}\u7077\u5CF5\u4B20\u{251CD}\u3559\u{25D30}\u6122\u{28A32}\u8FA7\u91F6\u7191\u6719\u73BA\u{23281}\u{2A107}\u3C8B\u{21980}\u4B10\u78E4\u7402\u51AE\u{2870F}\u4009\u6A63\u{2A2BA}\u4223\u860F\u{20A6F}\u7A2A\u{29947}\u{28AEA}\u9755\u704D\u5324\u{2207E}\u93F4\u76D9\u{289E3}\u9FA7\u77DD\u4EA3\u4FF0\u50BC\u4E2F\u4F17\u9FA8\u5434\u7D8B\u5892\u58D0\u{21DB6}\u5E92\u5E99\u5FC2\u{22712}\u658B',
      ],
      ['8ca1', '\u{233F9}\u6919\u6A43\u{23C63}\u6CFF'],
      [
        '8ca7',
        '\u7200\u{24505}\u738C\u3EDB\u{24A13}\u5B15\u74B9\u8B83\u{25CA4}\u{25695}\u7A93\u7BEC\u7CC3\u7E6C\u82F8\u8597\u9FA9\u8890\u9FAA\u8EB9\u9FAB\u8FCF\u855F\u99E0\u9221\u9FAC\u{28DB9}\u{2143F}\u4071\u42A2\u5A1A',
      ],
      ['8cc9', '\u9868\u676B\u4276\u573D'],
      [
        '8cce',
        '\u85D6\u{2497B}\u82BF\u{2710D}\u4C81\u{26D74}\u5D7B\u{26B15}\u{26FBE}\u9FAD\u9FAE\u5B96\u9FAF\u66E7\u7E5B\u6E57\u79CA\u3D88\u44C3\u{23256}\u{22796}\u439A\u4536',
      ],
      [
        '8ce6',
        '\u5CD5\u{23B1A}\u8AF9\u5C78\u3D12\u{23551}\u5D78\u9FB2\u7157\u4558\u{240EC}\u{21E23}\u4C77\u3978\u344A\u{201A4}\u{26C41}\u8ACC\u4FB4\u{20239}\u59BF\u816C\u9856\u{298FA}\u5F3B',
      ],
      ['8d40', '\u{20B9F}'],
      [
        '8d42',
        '\u{221C1}\u{2896D}\u4102\u46BB\u{29079}\u3F07\u9FB3\u{2A1B5}\u40F8\u37D6\u46F7\u{26C46}\u417C\u{286B2}\u{273FF}\u456D\u38D4\u{2549A}\u4561\u451B\u4D89\u4C7B\u4D76\u45EA\u3FC8\u{24B0F}\u3661\u44DE\u44BD\u41ED\u5D3E\u5D48\u5D56\u3DFC\u380F\u5DA4\u5DB9\u3820\u3838\u5E42\u5EBD\u5F25\u5F83\u3908\u3914\u393F\u394D\u60D7\u613D\u5CE5\u3989\u61B7\u61B9\u61CF\u39B8\u622C\u6290\u62E5\u6318\u39F8\u56B1',
      ],
      [
        '8da1',
        '\u3A03\u63E2\u63FB\u6407\u645A\u3A4B\u64C0\u5D15\u5621\u9F9F\u3A97\u6586\u3ABD\u65FF\u6653\u3AF2\u6692\u3B22\u6716\u3B42\u67A4\u6800\u3B58\u684A\u6884\u3B72\u3B71\u3B7B\u6909\u6943\u725C\u6964\u699F\u6985\u3BBC\u69D6\u3BDD\u6A65\u6A74\u6A71\u6A82\u3BEC\u6A99\u3BF2\u6AAB\u6AB5\u6AD4\u6AF6\u6B81\u6BC1\u6BEA\u6C75\u6CAA\u3CCB\u6D02\u6D06\u6D26\u6D81\u3CEF\u6DA4\u6DB1\u6E15\u6E18\u6E29\u6E86\u{289C0}\u6EBB\u6EE2\u6EDA\u9F7F\u6EE8\u6EE9\u6F24\u6F34\u3D46\u{23F41}\u6F81\u6FBE\u3D6A\u3D75\u71B7\u5C99\u3D8A\u702C\u3D91\u7050\u7054\u706F\u707F\u7089\u{20325}\u43C1\u35F1\u{20ED8}',
      ],
      [
        '8e40',
        '\u{23ED7}\u57BE\u{26ED3}\u713E\u{257E0}\u364E\u69A2\u{28BE9}\u5B74\u7A49\u{258E1}\u{294D9}\u7A65\u7A7D\u{259AC}\u7ABB\u7AB0\u7AC2\u7AC3\u71D1\u{2648D}\u41CA\u7ADA\u7ADD\u7AEA\u41EF\u54B2\u{25C01}\u7B0B\u7B55\u7B29\u{2530E}\u{25CFE}\u7BA2\u7B6F\u839C\u{25BB4}\u{26C7F}\u7BD0\u8421\u7B92\u7BB8\u{25D20}\u3DAD\u{25C65}\u8492\u7BFA\u7C06\u7C35\u{25CC1}\u7C44\u7C83\u{24882}\u7CA6\u667D\u{24578}\u7CC9\u7CC7\u7CE6\u7C74\u7CF3\u7CF5\u7CCE',
      ],
      [
        '8ea1',
        '\u7E67\u451D\u{26E44}\u7D5D\u{26ED6}\u748D\u7D89\u7DAB\u7135\u7DB3\u7DD2\u{24057}\u{26029}\u7DE4\u3D13\u7DF5\u{217F9}\u7DE5\u{2836D}\u7E1D\u{26121}\u{2615A}\u7E6E\u7E92\u432B\u946C\u7E27\u7F40\u7F41\u7F47\u7936\u{262D0}\u99E1\u7F97\u{26351}\u7FA3\u{21661}\u{20068}\u455C\u{23766}\u4503\u{2833A}\u7FFA\u{26489}\u8005\u8008\u801D\u8028\u802F\u{2A087}\u{26CC3}\u803B\u803C\u8061\u{22714}\u4989\u{26626}\u{23DE3}\u{266E8}\u6725\u80A7\u{28A48}\u8107\u811A\u58B0\u{226F6}\u6C7F\u{26498}\u{24FB8}\u64E7\u{2148A}\u8218\u{2185E}\u6A53\u{24A65}\u{24A95}\u447A\u8229\u{20B0D}\u{26A52}\u{23D7E}\u4FF9\u{214FD}\u84E2\u8362\u{26B0A}\u{249A7}\u{23530}\u{21773}\u{23DF8}\u82AA\u691B\u{2F994}\u41DB',
      ],
      [
        '8f40',
        '\u854B\u82D0\u831A\u{20E16}\u{217B4}\u36C1\u{2317D}\u{2355A}\u827B\u82E2\u8318\u{23E8B}\u{26DA3}\u{26B05}\u{26B97}\u{235CE}\u3DBF\u831D\u55EC\u8385\u450B\u{26DA5}\u83AC\u83C1\u83D3\u347E\u{26ED4}\u6A57\u855A\u3496\u{26E42}\u{22EEF}\u8458\u{25BE4}\u8471\u3DD3\u44E4\u6AA7\u844A\u{23CB5}\u7958\u84A8\u{26B96}\u{26E77}\u{26E43}\u84DE\u840F\u8391\u44A0\u8493\u84E4\u{25C91}\u4240\u{25CC0}\u4543\u8534\u5AF2\u{26E99}\u4527\u8573\u4516\u67BF\u8616',
      ],
      [
        '8fa1',
        '\u{28625}\u{2863B}\u85C1\u{27088}\u8602\u{21582}\u{270CD}\u{2F9B2}\u456A\u8628\u3648\u{218A2}\u53F7\u{2739A}\u867E\u8771\u{2A0F8}\u87EE\u{22C27}\u87B1\u87DA\u880F\u5661\u866C\u6856\u460F\u8845\u8846\u{275E0}\u{23DB9}\u{275E4}\u885E\u889C\u465B\u88B4\u88B5\u63C1\u88C5\u7777\u{2770F}\u8987\u898A\u89A6\u89A9\u89A7\u89BC\u{28A25}\u89E7\u{27924}\u{27ABD}\u8A9C\u7793\u91FE\u8A90\u{27A59}\u7AE9\u{27B3A}\u{23F8F}\u4713\u{27B38}\u717C\u8B0C\u8B1F\u{25430}\u{25565}\u8B3F\u8B4C\u8B4D\u8AA9\u{24A7A}\u8B90\u8B9B\u8AAF\u{216DF}\u4615\u884F\u8C9B\u{27D54}\u{27D8F}\u{2F9D4}\u3725\u{27D53}\u8CD6\u{27D98}\u{27DBD}\u8D12\u8D03\u{21910}\u8CDB\u705C\u8D11\u{24CC9}\u3ED0\u8D77',
      ],
      [
        '9040',
        '\u8DA9\u{28002}\u{21014}\u{2498A}\u3B7C\u{281BC}\u{2710C}\u7AE7\u8EAD\u8EB6\u8EC3\u92D4\u8F19\u8F2D\u{28365}\u{28412}\u8FA5\u9303\u{2A29F}\u{20A50}\u8FB3\u492A\u{289DE}\u{2853D}\u{23DBB}\u5EF8\u{23262}\u8FF9\u{2A014}\u{286BC}\u{28501}\u{22325}\u3980\u{26ED7}\u9037\u{2853C}\u{27ABE}\u9061\u{2856C}\u{2860B}\u90A8\u{28713}\u90C4\u{286E6}\u90AE\u90FD\u9167\u3AF0\u91A9\u91C4\u7CAC\u{28933}\u{21E89}\u920E\u6C9F\u9241\u9262\u{255B9}\u92B9\u{28AC6}\u{23C9B}\u{28B0C}\u{255DB}',
      ],
      [
        '90a1',
        '\u{20D31}\u932C\u936B\u{28AE1}\u{28BEB}\u708F\u5AC3\u{28AE2}\u{28AE5}\u4965\u9244\u{28BEC}\u{28C39}\u{28BFF}\u9373\u945B\u8EBC\u9585\u95A6\u9426\u95A0\u6FF6\u42B9\u{2267A}\u{286D8}\u{2127C}\u{23E2E}\u49DF\u6C1C\u967B\u9696\u416C\u96A3\u{26ED5}\u61DA\u96B6\u78F5\u{28AE0}\u96BD\u53CC\u49A1\u{26CB8}\u{20274}\u{26410}\u{290AF}\u{290E5}\u{24AD1}\u{21915}\u{2330A}\u9731\u8642\u9736\u4A0F\u453D\u4585\u{24AE9}\u7075\u5B41\u971B\u975C\u{291D5}\u9757\u5B4A\u{291EB}\u975F\u9425\u50D0\u{230B7}\u{230BC}\u9789\u979F\u97B1\u97BE\u97C0\u97D2\u97E0\u{2546C}\u97EE\u741C\u{29433}\u97FF\u97F5\u{2941D}\u{2797A}\u4AD1\u9834\u9833\u984B\u9866\u3B0E\u{27175}\u3D51\u{20630}\u{2415C}',
      ],
      [
        '9140',
        '\u{25706}\u98CA\u98B7\u98C8\u98C7\u4AFF\u{26D27}\u{216D3}\u55B0\u98E1\u98E6\u98EC\u9378\u9939\u{24A29}\u4B72\u{29857}\u{29905}\u99F5\u9A0C\u9A3B\u9A10\u9A58\u{25725}\u36C4\u{290B1}\u{29BD5}\u9AE0\u9AE2\u{29B05}\u9AF4\u4C0E\u9B14\u9B2D\u{28600}\u5034\u9B34\u{269A8}\u38C3\u{2307D}\u9B50\u9B40\u{29D3E}\u5A45\u{21863}\u9B8E\u{2424B}\u9C02\u9BFF\u9C0C\u{29E68}\u9DD4\u{29FB7}\u{2A192}\u{2A1AB}\u{2A0E1}\u{2A123}\u{2A1DF}\u9D7E\u9D83\u{2A134}\u9E0E\u6888',
      ],
      [
        '91a1',
        '\u9DC4\u{2215B}\u{2A193}\u{2A220}\u{2193B}\u{2A233}\u9D39\u{2A0B9}\u{2A2B4}\u9E90\u9E95\u9E9E\u9EA2\u4D34\u9EAA\u9EAF\u{24364}\u9EC1\u3B60\u39E5\u3D1D\u4F32\u37BE\u{28C2B}\u9F02\u9F08\u4B96\u9424\u{26DA2}\u9F17\u9F16\u9F39\u569F\u568A\u9F45\u99B8\u{2908B}\u97F2\u847F\u9F62\u9F69\u7ADC\u9F8E\u7216\u4BBE\u{24975}\u{249BB}\u7177\u{249F8}\u{24348}\u{24A51}\u739E\u{28BDA}\u{218FA}\u799F\u{2897E}\u{28E36}\u9369\u93F3\u{28A44}\u92EC\u9381\u93CB\u{2896C}\u{244B9}\u7217\u3EEB\u7772\u7A43\u70D0\u{24473}\u{243F8}\u717E\u{217EF}\u70A3\u{218BE}\u{23599}\u3EC7\u{21885}\u{2542F}\u{217F8}\u3722\u{216FB}\u{21839}\u36E1\u{21774}\u{218D1}\u{25F4B}\u3723\u{216C0}\u575B\u{24A25}\u{213FE}\u{212A8}',
      ],
      [
        '9240',
        '\u{213C6}\u{214B6}\u8503\u{236A6}\u8503\u8455\u{24994}\u{27165}\u{23E31}\u{2555C}\u{23EFB}\u{27052}\u44F4\u{236EE}\u{2999D}\u{26F26}\u67F9\u3733\u3C15\u3DE7\u586C\u{21922}\u6810\u4057\u{2373F}\u{240E1}\u{2408B}\u{2410F}\u{26C21}\u54CB\u569E\u{266B1}\u5692\u{20FDF}\u{20BA8}\u{20E0D}\u93C6\u{28B13}\u939C\u4EF8\u512B\u3819\u{24436}\u4EBC\u{20465}\u{2037F}\u4F4B\u4F8A\u{25651}\u5A68\u{201AB}\u{203CB}\u3999\u{2030A}\u{20414}\u3435\u4F29\u{202C0}\u{28EB3}\u{20275}\u8ADA\u{2020C}\u4E98',
      ],
      [
        '92a1',
        '\u50CD\u510D\u4FA2\u4F03\u{24A0E}\u{23E8A}\u4F42\u502E\u506C\u5081\u4FCC\u4FE5\u5058\u50FC\u5159\u515B\u515D\u515E\u6E76\u{23595}\u{23E39}\u{23EBF}\u6D72\u{21884}\u{23E89}\u51A8\u51C3\u{205E0}\u44DD\u{204A3}\u{20492}\u{20491}\u8D7A\u{28A9C}\u{2070E}\u5259\u52A4\u{20873}\u52E1\u936E\u467A\u718C\u{2438C}\u{20C20}\u{249AC}\u{210E4}\u69D1\u{20E1D}\u7479\u3EDE\u7499\u7414\u7456\u7398\u4B8E\u{24ABC}\u{2408D}\u53D0\u3584\u720F\u{240C9}\u55B4\u{20345}\u54CD\u{20BC6}\u571D\u925D\u96F4\u9366\u57DD\u578D\u577F\u363E\u58CB\u5A99\u{28A46}\u{216FA}\u{2176F}\u{21710}\u5A2C\u59B8\u928F\u5A7E\u5ACF\u5A12\u{25946}\u{219F3}\u{21861}\u{24295}\u36F5\u6D05\u7443\u5A21\u{25E83}',
      ],
      [
        '9340',
        '\u5A81\u{28BD7}\u{20413}\u93E0\u748C\u{21303}\u7105\u4972\u9408\u{289FB}\u93BD\u37A0\u5C1E\u5C9E\u5E5E\u5E48\u{21996}\u{2197C}\u{23AEE}\u5ECD\u5B4F\u{21903}\u{21904}\u3701\u{218A0}\u36DD\u{216FE}\u36D3\u812A\u{28A47}\u{21DBA}\u{23472}\u{289A8}\u5F0C\u5F0E\u{21927}\u{217AB}\u5A6B\u{2173B}\u5B44\u8614\u{275FD}\u8860\u607E\u{22860}\u{2262B}\u5FDB\u3EB8\u{225AF}\u{225BE}\u{29088}\u{26F73}\u61C0\u{2003E}\u{20046}\u{2261B}\u6199\u6198\u6075\u{22C9B}\u{22D07}\u{246D4}\u{2914D}',
      ],
      [
        '93a1',
        '\u6471\u{24665}\u{22B6A}\u3A29\u{22B22}\u{23450}\u{298EA}\u{22E78}\u6337\u{2A45B}\u64B6\u6331\u63D1\u{249E3}\u{22D67}\u62A4\u{22CA1}\u643B\u656B\u6972\u3BF4\u{2308E}\u{232AD}\u{24989}\u{232AB}\u550D\u{232E0}\u{218D9}\u{2943F}\u66CE\u{23289}\u{231B3}\u3AE0\u4190\u{25584}\u{28B22}\u{2558F}\u{216FC}\u{2555B}\u{25425}\u78EE\u{23103}\u{2182A}\u{23234}\u3464\u{2320F}\u{23182}\u{242C9}\u668E\u{26D24}\u666B\u4B93\u6630\u{27870}\u{21DEB}\u6663\u{232D2}\u{232E1}\u661E\u{25872}\u38D1\u{2383A}\u{237BC}\u3B99\u{237A2}\u{233FE}\u74D0\u3B96\u678F\u{2462A}\u68B6\u681E\u3BC4\u6ABE\u3863\u{237D5}\u{24487}\u6A33\u6A52\u6AC9\u6B05\u{21912}\u6511\u6898\u6A4C\u3BD7\u6A7A\u6B57\u{23FC0}\u{23C9A}\u93A0\u92F2\u{28BEA}\u{28ACB}',
      ],
      [
        '9440',
        '\u9289\u{2801E}\u{289DC}\u9467\u6DA5\u6F0B\u{249EC}\u6D67\u{23F7F}\u3D8F\u6E04\u{2403C}\u5A3D\u6E0A\u5847\u6D24\u7842\u713B\u{2431A}\u{24276}\u70F1\u7250\u7287\u7294\u{2478F}\u{24725}\u5179\u{24AA4}\u{205EB}\u747A\u{23EF8}\u{2365F}\u{24A4A}\u{24917}\u{25FE1}\u3F06\u3EB1\u{24ADF}\u{28C23}\u{23F35}\u60A7\u3EF3\u74CC\u743C\u9387\u7437\u449F\u{26DEA}\u4551\u7583\u3F63\u{24CD9}\u{24D06}\u3F58\u7555\u7673\u{2A5C6}\u3B19\u7468\u{28ACC}\u{249AB}\u{2498E}\u3AFB',
      ],
      [
        '94a1',
        '\u3DCD\u{24A4E}\u3EFF\u{249C5}\u{248F3}\u91FA\u5732\u9342\u{28AE3}\u{21864}\u50DF\u{25221}\u{251E7}\u7778\u{23232}\u770E\u770F\u777B\u{24697}\u{23781}\u3A5E\u{248F0}\u7438\u749B\u3EBF\u{24ABA}\u{24AC7}\u40C8\u{24A96}\u{261AE}\u9307\u{25581}\u781E\u788D\u7888\u78D2\u73D0\u7959\u{27741}\u{256E3}\u410E\u799B\u8496\u79A5\u6A2D\u{23EFA}\u7A3A\u79F4\u416E\u{216E6}\u4132\u9235\u79F1\u{20D4C}\u{2498C}\u{20299}\u{23DBA}\u{2176E}\u3597\u556B\u3570\u36AA\u{201D4}\u{20C0D}\u7AE2\u5A59\u{226F5}\u{25AAF}\u{25A9C}\u5A0D\u{2025B}\u78F0\u5A2A\u{25BC6}\u7AFE\u41F9\u7C5D\u7C6D\u4211\u{25BB3}\u{25EBC}\u{25EA6}\u7CCD\u{249F9}\u{217B0}\u7C8E\u7C7C\u7CAE\u6AB2\u7DDC\u7E07\u7DD3\u7F4E\u{26261}',
      ],
      [
        '9540',
        '\u{2615C}\u{27B48}\u7D97\u{25E82}\u426A\u{26B75}\u{20916}\u67D6\u{2004E}\u{235CF}\u57C4\u{26412}\u{263F8}\u{24962}\u7FDD\u7B27\u{2082C}\u{25AE9}\u{25D43}\u7B0C\u{25E0E}\u99E6\u8645\u9A63\u6A1C\u{2343F}\u39E2\u{249F7}\u{265AD}\u9A1F\u{265A0}\u8480\u{27127}\u{26CD1}\u44EA\u8137\u4402\u80C6\u8109\u8142\u{267B4}\u98C3\u{26A42}\u8262\u8265\u{26A51}\u8453\u{26DA7}\u8610\u{2721B}\u5A86\u417F\u{21840}\u5B2B\u{218A1}\u5AE4\u{218D8}\u86A0\u{2F9BC}\u{23D8F}\u882D\u{27422}\u5A02',
      ],
      [
        '95a1',
        '\u886E\u4F45\u8887\u88BF\u88E6\u8965\u894D\u{25683}\u8954\u{27785}\u{27784}\u{28BF5}\u{28BD9}\u{28B9C}\u{289F9}\u3EAD\u84A3\u46F5\u46CF\u37F2\u8A3D\u8A1C\u{29448}\u5F4D\u922B\u{24284}\u65D4\u7129\u70C4\u{21845}\u9D6D\u8C9F\u8CE9\u{27DDC}\u599A\u77C3\u59F0\u436E\u36D4\u8E2A\u8EA7\u{24C09}\u8F30\u8F4A\u42F4\u6C58\u6FBB\u{22321}\u489B\u6F79\u6E8B\u{217DA}\u9BE9\u36B5\u{2492F}\u90BB\u9097\u5571\u4906\u91BB\u9404\u{28A4B}\u4062\u{28AFC}\u9427\u{28C1D}\u{28C3B}\u84E5\u8A2B\u9599\u95A7\u9597\u9596\u{28D34}\u7445\u3EC2\u{248FF}\u{24A42}\u{243EA}\u3EE7\u{23225}\u968F\u{28EE7}\u{28E66}\u{28E65}\u3ECC\u{249ED}\u{24A78}\u{23FEE}\u7412\u746B\u3EFC\u9741\u{290B0}',
      ],
      [
        '9640',
        '\u6847\u4A1D\u{29093}\u{257DF}\u975D\u9368\u{28989}\u{28C26}\u{28B2F}\u{263BE}\u92BA\u5B11\u8B69\u493C\u73F9\u{2421B}\u979B\u9771\u9938\u{20F26}\u5DC1\u{28BC5}\u{24AB2}\u981F\u{294DA}\u92F6\u{295D7}\u91E5\u44C0\u{28B50}\u{24A67}\u{28B64}\u98DC\u{28A45}\u3F00\u922A\u4925\u8414\u993B\u994D\u{27B06}\u3DFD\u999B\u4B6F\u99AA\u9A5C\u{28B65}\u{258C8}\u6A8F\u9A21\u5AFE\u9A2F\u{298F1}\u4B90\u{29948}\u99BC\u4BBD\u4B97\u937D\u5872\u{21302}\u5822\u{249B8}',
      ],
      [
        '96a1',
        '\u{214E8}\u7844\u{2271F}\u{23DB8}\u68C5\u3D7D\u9458\u3927\u6150\u{22781}\u{2296B}\u6107\u9C4F\u9C53\u9C7B\u9C35\u9C10\u9B7F\u9BCF\u{29E2D}\u9B9F\u{2A1F5}\u{2A0FE}\u9D21\u4CAE\u{24104}\u9E18\u4CB0\u9D0C\u{2A1B4}\u{2A0ED}\u{2A0F3}\u{2992F}\u9DA5\u84BD\u{26E12}\u{26FDF}\u{26B82}\u85FC\u4533\u{26DA4}\u{26E84}\u{26DF0}\u8420\u85EE\u{26E00}\u{237D7}\u{26064}\u79E2\u{2359C}\u{23640}\u492D\u{249DE}\u3D62\u93DB\u92BE\u9348\u{202BF}\u78B9\u9277\u944D\u4FE4\u3440\u9064\u{2555D}\u783D\u7854\u78B6\u784B\u{21757}\u{231C9}\u{24941}\u369A\u4F72\u6FDA\u6FD9\u701E\u701E\u5414\u{241B5}\u57BB\u58F3\u578A\u9D16\u57D7\u7134\u34AF\u{241AC}\u71EB\u{26C40}\u{24F97}\u5B28\u{217B5}\u{28A49}',
      ],
      [
        '9740',
        '\u610C\u5ACE\u5A0B\u42BC\u{24488}\u372C\u4B7B\u{289FC}\u93BB\u93B8\u{218D6}\u{20F1D}\u8472\u{26CC0}\u{21413}\u{242FA}\u{22C26}\u{243C1}\u5994\u{23DB7}\u{26741}\u7DA8\u{2615B}\u{260A4}\u{249B9}\u{2498B}\u{289FA}\u92E5\u73E2\u3EE9\u74B4\u{28B63}\u{2189F}\u3EE1\u{24AB3}\u6AD8\u73F3\u73FB\u3ED6\u{24A3E}\u{24A94}\u{217D9}\u{24A66}\u{203A7}\u{21424}\u{249E5}\u7448\u{24916}\u70A5\u{24976}\u9284\u73E6\u935F\u{204FE}\u9331\u{28ACE}\u{28A16}\u9386\u{28BE7}\u{255D5}\u4935\u{28A82}\u716B',
      ],
      [
        '97a1',
        '\u{24943}\u{20CFF}\u56A4\u{2061A}\u{20BEB}\u{20CB8}\u5502\u79C4\u{217FA}\u7DFE\u{216C2}\u{24A50}\u{21852}\u452E\u9401\u370A\u{28AC0}\u{249AD}\u59B0\u{218BF}\u{21883}\u{27484}\u5AA1\u36E2\u{23D5B}\u36B0\u925F\u5A79\u{28A81}\u{21862}\u9374\u3CCD\u{20AB4}\u4A96\u398A\u50F4\u3D69\u3D4C\u{2139C}\u7175\u42FB\u{28218}\u6E0F\u{290E4}\u44EB\u6D57\u{27E4F}\u7067\u6CAF\u3CD6\u{23FED}\u{23E2D}\u6E02\u6F0C\u3D6F\u{203F5}\u7551\u36BC\u34C8\u4680\u3EDA\u4871\u59C4\u926E\u493E\u8F41\u{28C1C}\u{26BC0}\u5812\u57C8\u36D6\u{21452}\u70FE\u{24362}\u{24A71}\u{22FE3}\u{212B0}\u{223BD}\u68B9\u6967\u{21398}\u{234E5}\u{27BF4}\u{236DF}\u{28A83}\u{237D6}\u{233FA}\u{24C9F}\u6A1A\u{236AD}\u{26CB7}\u843E\u44DF\u44CE',
      ],
      [
        '9840',
        '\u{26D26}\u{26D51}\u{26C82}\u{26FDE}\u6F17\u{27109}\u833D\u{2173A}\u83ED\u{26C80}\u{27053}\u{217DB}\u5989\u5A82\u{217B3}\u5A61\u5A71\u{21905}\u{241FC}\u372D\u59EF\u{2173C}\u36C7\u718E\u9390\u669A\u{242A5}\u5A6E\u5A2B\u{24293}\u6A2B\u{23EF9}\u{27736}\u{2445B}\u{242CA}\u711D\u{24259}\u{289E1}\u4FB0\u{26D28}\u5CC2\u{244CE}\u{27E4D}\u{243BD}\u6A0C\u{24256}\u{21304}\u70A6\u7133\u{243E9}\u3DA5\u6CDF\u{2F825}\u{24A4F}\u7E65\u59EB\u5D2F\u3DF3\u5F5C\u{24A5D}\u{217DF}\u7DA4\u8426',
      ],
      [
        '98a1',
        '\u5485\u{23AFA}\u{23300}\u{20214}\u577E\u{208D5}\u{20619}\u3FE5\u{21F9E}\u{2A2B6}\u7003\u{2915B}\u5D70\u738F\u7CD3\u{28A59}\u{29420}\u4FC8\u7FE7\u72CD\u7310\u{27AF4}\u7338\u7339\u{256F6}\u7341\u7348\u3EA9\u{27B18}\u906C\u71F5\u{248F2}\u73E1\u81F6\u3ECA\u770C\u3ED1\u6CA2\u56FD\u7419\u741E\u741F\u3EE2\u3EF0\u3EF4\u3EFA\u74D3\u3F0E\u3F53\u7542\u756D\u7572\u758D\u3F7C\u75C8\u75DC\u3FC0\u764D\u3FD7\u7674\u3FDC\u767A\u{24F5C}\u7188\u5623\u8980\u5869\u401D\u7743\u4039\u6761\u4045\u35DB\u7798\u406A\u406F\u5C5E\u77BE\u77CB\u58F2\u7818\u70B9\u781C\u40A8\u7839\u7847\u7851\u7866\u8448\u{25535}\u7933\u6803\u7932\u4103',
      ],
      [
        '9940',
        '\u4109\u7991\u7999\u8FBB\u7A06\u8FBC\u4167\u7A91\u41B2\u7ABC\u8279\u41C4\u7ACF\u7ADB\u41CF\u4E21\u7B62\u7B6C\u7B7B\u7C12\u7C1B\u4260\u427A\u7C7B\u7C9C\u428C\u7CB8\u4294\u7CED\u8F93\u70C0\u{20CCF}\u7DCF\u7DD4\u7DD0\u7DFD\u7FAE\u7FB4\u729F\u4397\u8020\u8025\u7B39\u802E\u8031\u8054\u3DCC\u57B4\u70A0\u80B7\u80E9\u43ED\u810C\u732A\u810E\u8112\u7560\u8114\u4401\u3B39\u8156\u8159\u815A',
      ],
      [
        '99a1',
        '\u4413\u583A\u817C\u8184\u4425\u8193\u442D\u81A5\u57EF\u81C1\u81E4\u8254\u448F\u82A6\u8276\u82CA\u82D8\u82FF\u44B0\u8357\u9669\u698A\u8405\u70F5\u8464\u60E3\u8488\u4504\u84BE\u84E1\u84F8\u8510\u8538\u8552\u453B\u856F\u8570\u85E0\u4577\u8672\u8692\u86B2\u86EF\u9645\u878B\u4606\u4617\u88AE\u88FF\u8924\u8947\u8991\u{27967}\u8A29\u8A38\u8A94\u8AB4\u8C51\u8CD4\u8CF2\u8D1C\u4798\u585F\u8DC3\u47ED\u4EEE\u8E3A\u55D8\u5754\u8E71\u55F5\u8EB0\u4837\u8ECE\u8EE2\u8EE4\u8EED\u8EF2\u8FB7\u8FC1\u8FCA\u8FCC\u9033\u99C4\u48AD\u98E0\u9213\u491E\u9228\u9258\u926B\u92B1\u92AE\u92BF',
      ],
      [
        '9a40',
        '\u92E3\u92EB\u92F3\u92F4\u92FD\u9343\u9384\u93AD\u4945\u4951\u9EBF\u9417\u5301\u941D\u942D\u943E\u496A\u9454\u9479\u952D\u95A2\u49A7\u95F4\u9633\u49E5\u67A0\u4A24\u9740\u4A35\u97B2\u97C2\u5654\u4AE4\u60E8\u98B9\u4B19\u98F1\u5844\u990E\u9919\u51B4\u991C\u9937\u9942\u995D\u9962\u4B70\u99C5\u4B9D\u9A3C\u9B0F\u7A83\u9B69\u9B81\u9BDD\u9BF1\u9BF4\u4C6D\u9C20\u376F\u{21BC2}\u9D49\u9C3A',
      ],
      [
        '9aa1',
        '\u9EFE\u5650\u9D93\u9DBD\u9DC0\u9DFC\u94F6\u8FB6\u9E7B\u9EAC\u9EB1\u9EBD\u9EC6\u94DC\u9EE2\u9EF1\u9EF8\u7AC8\u9F44\u{20094}\u{202B7}\u{203A0}\u691A\u94C3\u59AC\u{204D7}\u5840\u94C1\u37B9\u{205D5}\u{20615}\u{20676}\u{216BA}\u5757\u7173\u{20AC2}\u{20ACD}\u{20BBF}\u546A\u{2F83B}\u{20BCB}\u549E\u{20BFB}\u{20C3B}\u{20C53}\u{20C65}\u{20C7C}\u60E7\u{20C8D}\u567A\u{20CB5}\u{20CDD}\u{20CED}\u{20D6F}\u{20DB2}\u{20DC8}\u6955\u9C2F\u87A5\u{20E04}\u{20E0E}\u{20ED7}\u{20F90}\u{20F2D}\u{20E73}\u5C20\u{20FBC}\u5E0B\u{2105C}\u{2104F}\u{21076}\u671E\u{2107B}\u{21088}\u{21096}\u3647\u{210BF}\u{210D3}\u{2112F}\u{2113B}\u5364\u84AD\u{212E3}\u{21375}\u{21336}\u8B81\u{21577}\u{21619}\u{217C3}\u{217C7}\u4E78\u70BB\u{2182D}\u{2196A}',
      ],
      [
        '9b40',
        '\u{21A2D}\u{21A45}\u{21C2A}\u{21C70}\u{21CAC}\u{21EC8}\u62C3\u{21ED5}\u{21F15}\u7198\u6855\u{22045}\u69E9\u36C8\u{2227C}\u{223D7}\u{223FA}\u{2272A}\u{22871}\u{2294F}\u82FD\u{22967}\u{22993}\u{22AD5}\u89A5\u{22AE8}\u8FA0\u{22B0E}\u97B8\u{22B3F}\u9847\u9ABD\u{22C4C}',
      ],
      [
        '9b62',
        '\u{22C88}\u{22CB7}\u{25BE8}\u{22D08}\u{22D12}\u{22DB7}\u{22D95}\u{22E42}\u{22F74}\u{22FCC}\u{23033}\u{23066}\u{2331F}\u{233DE}\u5FB1\u6648\u66BF\u{27A79}\u{23567}\u{235F3}\u7201\u{249BA}\u77D7\u{2361A}\u{23716}\u7E87\u{20346}\u58B5\u670E',
      ],
      [
        '9ba1',
        '\u6918\u{23AA7}\u{27657}\u{25FE2}\u{23E11}\u{23EB9}\u{275FE}\u{2209A}\u48D0\u4AB8\u{24119}\u{28A9A}\u{242EE}\u{2430D}\u{2403B}\u{24334}\u{24396}\u{24A45}\u{205CA}\u51D2\u{20611}\u599F\u{21EA8}\u3BBE\u{23CFF}\u{24404}\u{244D6}\u5788\u{24674}\u399B\u{2472F}\u{285E8}\u{299C9}\u3762\u{221C3}\u8B5E\u{28B4E}\u99D6\u{24812}\u{248FB}\u{24A15}\u7209\u{24AC0}\u{20C78}\u5965\u{24EA5}\u{24F86}\u{20779}\u8EDA\u{2502C}\u528F\u573F\u7171\u{25299}\u{25419}\u{23F4A}\u{24AA7}\u55BC\u{25446}\u{2546E}\u{26B52}\u91D4\u3473\u{2553F}\u{27632}\u{2555E}\u4718\u{25562}\u{25566}\u{257C7}\u{2493F}\u{2585D}\u5066\u34FB\u{233CC}\u60DE\u{25903}\u477C\u{28948}\u{25AAE}\u{25B89}\u{25C06}\u{21D90}\u57A1\u7151\u6FB6\u{26102}\u{27C12}\u9056\u{261B2}\u{24F9A}\u8B62\u{26402}\u{2644A}',
      ],
      [
        '9c40',
        '\u5D5B\u{26BF7}\u8F36\u{26484}\u{2191C}\u8AEA\u{249F6}\u{26488}\u{23FEF}\u{26512}\u4BC0\u{265BF}\u{266B5}\u{2271B}\u9465\u{257E1}\u6195\u5A27\u{2F8CD}\u4FBB\u56B9\u{24521}\u{266FC}\u4E6A\u{24934}\u9656\u6D8F\u{26CBD}\u3618\u8977\u{26799}\u{2686E}\u{26411}\u{2685E}\u71DF\u{268C7}\u7B42\u{290C0}\u{20A11}\u{26926}\u9104\u{26939}\u7A45\u9DF0\u{269FA}\u9A26\u{26A2D}\u365F\u{26469}\u{20021}\u7983\u{26A34}\u{26B5B}\u5D2C\u{23519}\u83CF\u{26B9D}\u46D0\u{26CA4}\u753B\u8865\u{26DAE}\u58B6',
      ],
      [
        '9ca1',
        '\u371C\u{2258D}\u{2704B}\u{271CD}\u3C54\u{27280}\u{27285}\u9281\u{2217A}\u{2728B}\u9330\u{272E6}\u{249D0}\u6C39\u949F\u{27450}\u{20EF8}\u8827\u88F5\u{22926}\u{28473}\u{217B1}\u6EB8\u{24A2A}\u{21820}\u39A4\u36B9\u5C10\u79E3\u453F\u66B6\u{29CAD}\u{298A4}\u8943\u{277CC}\u{27858}\u56D6\u40DF\u{2160A}\u39A1\u{2372F}\u{280E8}\u{213C5}\u71AD\u8366\u{279DD}\u{291A8}\u5A67\u4CB7\u{270AF}\u{289AB}\u{279FD}\u{27A0A}\u{27B0B}\u{27D66}\u{2417A}\u7B43\u797E\u{28009}\u6FB5\u{2A2DF}\u6A03\u{28318}\u53A2\u{26E07}\u93BF\u6836\u975D\u{2816F}\u{28023}\u{269B5}\u{213ED}\u{2322F}\u{28048}\u5D85\u{28C30}\u{28083}\u5715\u9823\u{28949}\u5DAB\u{24988}\u65BE\u69D5\u53D2\u{24AA5}\u{23F81}\u3C11\u6736\u{28090}\u{280F4}\u{2812E}\u{21FA1}\u{2814F}',
      ],
      [
        '9d40',
        '\u{28189}\u{281AF}\u{2821A}\u{28306}\u{2832F}\u{2838A}\u35CA\u{28468}\u{286AA}\u48FA\u63E6\u{28956}\u7808\u9255\u{289B8}\u43F2\u{289E7}\u43DF\u{289E8}\u{28B46}\u{28BD4}\u59F8\u{28C09}\u8F0B\u{28FC5}\u{290EC}\u7B51\u{29110}\u{2913C}\u3DF7\u{2915E}\u{24ACA}\u8FD0\u728F\u568B\u{294E7}\u{295E9}\u{295B0}\u{295B8}\u{29732}\u{298D1}\u{29949}\u{2996A}\u{299C3}\u{29A28}\u{29B0E}\u{29D5A}\u{29D9B}\u7E9F\u{29EF8}\u{29F23}\u4CA4\u9547\u{2A293}\u71A2\u{2A2FF}\u4D91\u9012\u{2A5CB}\u4D9C\u{20C9C}\u8FBE\u55C1',
      ],
      [
        '9da1',
        '\u8FBA\u{224B0}\u8FB9\u{24A93}\u4509\u7E7F\u6F56\u6AB1\u4EEA\u34E4\u{28B2C}\u{2789D}\u373A\u8E80\u{217F5}\u{28024}\u{28B6C}\u{28B99}\u{27A3E}\u{266AF}\u3DEB\u{27655}\u{23CB7}\u{25635}\u{25956}\u4E9A\u{25E81}\u{26258}\u56BF\u{20E6D}\u8E0E\u5B6D\u{23E88}\u{24C9E}\u63DE\u62D0\u{217F6}\u{2187B}\u6530\u562D\u{25C4A}\u541A\u{25311}\u3DC6\u{29D98}\u4C7D\u5622\u561E\u7F49\u{25ED8}\u5975\u{23D40}\u8770\u4E1C\u{20FEA}\u{20D49}\u{236BA}\u8117\u9D5E\u8D18\u763B\u9C45\u764E\u77B9\u9345\u5432\u8148\u82F7\u5625\u8132\u8418\u80BD\u55EA\u7962\u5643\u5416\u{20E9D}\u35CE\u5605\u55F1\u66F1\u{282E2}\u362D\u7534\u55F0\u55BA\u5497\u5572\u{20C41}\u{20C96}\u5ED0\u{25148}\u{20E76}\u{22C62}',
      ],
      [
        '9e40',
        '\u{20EA2}\u9EAB\u7D5A\u55DE\u{21075}\u629D\u976D\u5494\u8CCD\u71F6\u9176\u63FC\u63B9\u63FE\u5569\u{22B43}\u9C72\u{22EB3}\u519A\u34DF\u{20DA7}\u51A7\u544D\u551E\u5513\u7666\u8E2D\u{2688A}\u75B1\u80B6\u8804\u8786\u88C7\u81B6\u841C\u{210C1}\u44EC\u7304\u{24706}\u5B90\u830B\u{26893}\u567B\u{226F4}\u{27D2F}\u{241A3}\u{27D73}\u{26ED0}\u{272B6}\u9170\u{211D9}\u9208\u{23CFC}\u{2A6A9}\u{20EAC}\u{20EF9}\u7266\u{21CA2}\u474E\u{24FC2}\u{27FF9}\u{20FEB}\u40FA',
      ],
      [
        '9ea1',
        '\u9C5D\u651F\u{22DA0}\u48F3\u{247E0}\u{29D7C}\u{20FEC}\u{20E0A}\u6062\u{275A3}\u{20FED}',
      ],
      [
        '9ead',
        '\u{26048}\u{21187}\u71A3\u7E8E\u9D50\u4E1A\u4E04\u3577\u5B0D\u6CB2\u5367\u36AC\u39DC\u537D\u36A5\u{24618}\u589A\u{24B6E}\u822D\u544B\u57AA\u{25A95}\u{20979}',
      ],
      [
        '9ec5',
        '\u3A52\u{22465}\u7374\u{29EAC}\u4D09\u9BED\u{23CFE}\u{29F30}\u4C5B\u{24FA9}\u{2959E}\u{29FDE}\u845C\u{23DB6}\u{272B2}\u{267B3}\u{23720}\u632E\u7D25\u{23EF7}\u{23E2C}\u3A2A\u9008\u52CC\u3E74\u367A\u45E9\u{2048E}\u7640\u5AF0\u{20EB6}\u787A\u{27F2E}\u58A7\u40BF\u567C\u9B8B\u5D74\u7654\u{2A434}\u9E85\u4CE1\u75F9\u37FB\u6119\u{230DA}\u{243F2}',
      ],
      [
        '9ef5',
        '\u565D\u{212A9}\u57A7\u{24963}\u{29E06}\u5234\u{270AE}\u35AD\u6C4A\u9D7C',
      ],
      [
        '9f40',
        '\u7C56\u9B39\u57DE\u{2176C}\u5C53\u64D3\u{294D0}\u{26335}\u{27164}\u86AD\u{20D28}\u{26D22}\u{24AE2}\u{20D71}',
      ],
      [
        '9f4f',
        '\u51FE\u{21F0F}\u5D8E\u9703\u{21DD1}\u9E81\u904C\u7B1F\u9B02\u5CD1\u7BA3\u6268\u6335\u9AFF\u7BCF\u9B2A\u7C7E\u9B2E\u7C42\u7C86\u9C15\u7BFC\u9B09\u9F17\u9C1B\u{2493E}\u9F5A\u5573\u5BC3\u4FFD\u9E98\u4FF2\u5260\u3E06\u52D1\u5767\u5056\u59B7\u5E12\u97C8\u9DAB\u8F5C\u5469\u97B4\u9940\u97BA\u532C\u6130',
      ],
      [
        '9fa1',
        '\u692C\u53DA\u9C0A\u9D02\u4C3B\u9641\u6980\u50A6\u7546\u{2176D}\u99DA\u5273',
      ],
      ['9fae', '\u9159\u9681\u915C'],
      [
        '9fb2',
        '\u9151\u{28E97}\u637F\u{26D23}\u6ACA\u5611\u918E\u757A\u6285\u{203FC}\u734F\u7C70\u{25C21}\u{23CFD}',
      ],
      ['9fc1', '\u{24919}\u76D6\u9B9D\u4E2A\u{20CD4}\u83BE\u8842'],
      [
        '9fc9',
        '\u5C4A\u69C0\u50ED\u577A\u521F\u5DF5\u4ECE\u6C31\u{201F2}\u4F39\u549C\u54DA\u529A\u8D82\u35FE\u5F0C\u35F3',
      ],
      [
        '9fdb',
        '\u6B52\u917C\u9FA5\u9B97\u982E\u98B4\u9ABA\u9EA8\u9E84\u717A\u7B14',
      ],
      ['9fe7', '\u6BFA\u8818\u7F78'],
      ['9feb', '\u5620\u{2A64A}\u8E77\u9F53'],
      [
        '9ff0',
        '\u8DD4\u8E4F\u9E1C\u8E01\u6282\u{2837D}\u8E28\u8E75\u7AD3\u{24A77}\u7A3E\u78D8\u6CEA\u8A67\u7607',
      ],
      [
        'a040',
        '\u{28A5A}\u9F26\u6CCE\u87D6\u75C3\u{2A2B2}\u7853\u{2F840}\u8D0C\u72E2\u7371\u8B2D\u7302\u74F1\u8CEB\u{24ABB}\u862F\u5FBA\u88A0\u44B7',
      ],
      ['a055', '\u{2183B}\u{26E05}'],
      ['a058', '\u8A7E\u{2251B}'],
      ['a05b', '\u60FD\u7667\u9AD7\u9D44\u936E\u9B8F\u87F5'],
      [
        'a063',
        '\u880F\u8CF7\u732C\u9721\u9BB0\u35D6\u72B2\u4C07\u7C51\u994A\u{26159}\u6159\u4C04\u9E96\u617D',
      ],
      [
        'a073',
        '\u575F\u616F\u62A6\u6239\u62CE\u3A5C\u61E2\u53AA\u{233F5}\u6364\u6802\u35D2',
      ],
      ['a0a1', '\u5D57\u{28BC2}\u8FDA\u{28E39}'],
      ['a0a6', '\u50D9\u{21D46}\u7906\u5332\u9638\u{20F3B}\u4065'],
      ['a0ae', '\u77FE'],
      [
        'a0b0',
        '\u7CC2\u{25F1A}\u7CDA\u7A2D\u8066\u8063\u7D4D\u7505\u74F2\u8994\u821A\u670C\u8062\u{27486}\u805B\u74F0\u8103\u7724\u8989\u{267CC}\u7553\u{26ED1}\u87A9\u87CE\u81C8\u878C\u8A49\u8CAD\u8B43\u772B\u74F8\u84DA\u3635\u69B2\u8DA6',
      ],
      [
        'a0d4',
        '\u89A9\u7468\u6DB9\u87C1\u{24011}\u74E7\u3DDB\u7176\u60A4\u619C\u3CD1\u7162\u6077',
      ],
      [
        'a0e2',
        '\u7F71\u{28B2D}\u7250\u60E9\u4B7E\u5220\u3C18\u{23CC7}\u{25ED7}\u{27656}\u{25531}\u{21944}\u{212FE}\u{29903}\u{26DDC}\u{270AD}\u5CC1\u{261AD}\u{28A0F}\u{23677}\u{200EE}\u{26846}\u{24F0E}\u4562\u5B1F\u{2634C}\u9F50\u9EA6\u{2626B}',
      ],
      ['a3c0', '\u2400', 31, '\u2421'],
      [
        'c6a1',
        '\u2460',
        9,
        '\u2474',
        9,
        '\u2170',
        9,
        '\u4E36\u4E3F\u4E85\u4EA0\u5182\u5196\u51AB\u52F9\u5338\u5369\u53B6\u590A\u5B80\u5DDB\u2F33\u5E7F\u5EF4\u5F50\u5F61\u6534\u65E0\u7592\u7676\u8FB5\u96B6\xA8\u02C6\u30FD\u30FE\u309D\u309E\u3003\u4EDD\u3005\u3006\u3007\u30FC\uFF3B\uFF3D\u273D\u3041',
        23,
      ],
      ['c740', '\u3059', 58, '\u30A1\u30A2\u30A3\u30A4'],
      ['c7a1', '\u30A5', 81, '\u0410', 5, '\u0401\u0416', 4],
      [
        'c840',
        '\u041B',
        26,
        '\u0451\u0436',
        25,
        '\u21E7\u21B8\u21B9\u31CF\u{200CC}\u4E5A\u{2008A}\u5202\u4491',
      ],
      ['c8a1', '\u9FB0\u5188\u9FB1\u{27607}'],
      [
        'c8cd',
        '\uFFE2\uFFE4\uFF07\uFF02\u3231\u2116\u2121\u309B\u309C\u2E80\u2E84\u2E86\u2E87\u2E88\u2E8A\u2E8C\u2E8D\u2E95\u2E9C\u2E9D\u2EA5\u2EA7\u2EAA\u2EAC\u2EAE\u2EB6\u2EBC\u2EBE\u2EC6\u2ECA\u2ECC\u2ECD\u2ECF\u2ED6\u2ED7\u2EDE\u2EE3',
      ],
      ['c8f5', '\u0283\u0250\u025B\u0254\u0275\u0153\xF8\u014B\u028A\u026A'],
      ['f9fe', '\uFFED'],
      [
        'fa40',
        '\u{20547}\u92DB\u{205DF}\u{23FC5}\u854C\u42B5\u73EF\u51B5\u3649\u{24942}\u{289E4}\u9344\u{219DB}\u82EE\u{23CC8}\u783C\u6744\u62DF\u{24933}\u{289AA}\u{202A0}\u{26BB3}\u{21305}\u4FAB\u{224ED}\u5008\u{26D29}\u{27A84}\u{23600}\u{24AB1}\u{22513}\u5029\u{2037E}\u5FA4\u{20380}\u{20347}\u6EDB\u{2041F}\u507D\u5101\u347A\u510E\u986C\u3743\u8416\u{249A4}\u{20487}\u5160\u{233B4}\u516A\u{20BFF}\u{220FC}\u{202E5}\u{22530}\u{2058E}\u{23233}\u{21983}\u5B82\u877D\u{205B3}\u{23C99}\u51B2\u51B8',
      ],
      [
        'faa1',
        '\u9D34\u51C9\u51CF\u51D1\u3CDC\u51D3\u{24AA6}\u51B3\u51E2\u5342\u51ED\u83CD\u693E\u{2372D}\u5F7B\u520B\u5226\u523C\u52B5\u5257\u5294\u52B9\u52C5\u7C15\u8542\u52E0\u860D\u{26B13}\u5305\u{28ADE}\u5549\u6ED9\u{23F80}\u{20954}\u{23FEC}\u5333\u5344\u{20BE2}\u6CCB\u{21726}\u681B\u73D5\u604A\u3EAA\u38CC\u{216E8}\u71DD\u44A2\u536D\u5374\u{286AB}\u537E\u537F\u{21596}\u{21613}\u77E6\u5393\u{28A9B}\u53A0\u53AB\u53AE\u73A7\u{25772}\u3F59\u739C\u53C1\u53C5\u6C49\u4E49\u57FE\u53D9\u3AAB\u{20B8F}\u53E0\u{23FEB}\u{22DA3}\u53F6\u{20C77}\u5413\u7079\u552B\u6657\u6D5B\u546D\u{26B53}\u{20D74}\u555D\u548F\u54A4\u47A6\u{2170D}\u{20EDD}\u3DB4\u{20D4D}',
      ],
      [
        'fb40',
        '\u{289BC}\u{22698}\u5547\u4CED\u542F\u7417\u5586\u55A9\u5605\u{218D7}\u{2403A}\u4552\u{24435}\u66B3\u{210B4}\u5637\u66CD\u{2328A}\u66A4\u66AD\u564D\u564F\u78F1\u56F1\u9787\u53FE\u5700\u56EF\u56ED\u{28B66}\u3623\u{2124F}\u5746\u{241A5}\u6C6E\u708B\u5742\u36B1\u{26C7E}\u57E6\u{21416}\u5803\u{21454}\u{24363}\u5826\u{24BF5}\u585C\u58AA\u3561\u58E0\u58DC\u{2123C}\u58FB\u5BFF\u5743\u{2A150}\u{24278}\u93D3\u35A1\u591F\u68A6\u36C3\u6E59',
      ],
      [
        'fba1',
        '\u{2163E}\u5A24\u5553\u{21692}\u8505\u59C9\u{20D4E}\u{26C81}\u{26D2A}\u{217DC}\u59D9\u{217FB}\u{217B2}\u{26DA6}\u6D71\u{21828}\u{216D5}\u59F9\u{26E45}\u5AAB\u5A63\u36E6\u{249A9}\u5A77\u3708\u5A96\u7465\u5AD3\u{26FA1}\u{22554}\u3D85\u{21911}\u3732\u{216B8}\u5E83\u52D0\u5B76\u6588\u5B7C\u{27A0E}\u4004\u485D\u{20204}\u5BD5\u6160\u{21A34}\u{259CC}\u{205A5}\u5BF3\u5B9D\u4D10\u5C05\u{21B44}\u5C13\u73CE\u5C14\u{21CA5}\u{26B28}\u5C49\u48DD\u5C85\u5CE9\u5CEF\u5D8B\u{21DF9}\u{21E37}\u5D10\u5D18\u5D46\u{21EA4}\u5CBA\u5DD7\u82FC\u382D\u{24901}\u{22049}\u{22173}\u8287\u3836\u3BC2\u5E2E\u6A8A\u5E75\u5E7A\u{244BC}\u{20CD3}\u53A6\u4EB7\u5ED0\u53A8\u{21771}\u5E09\u5EF4\u{28482}',
      ],
      [
        'fc40',
        '\u5EF9\u5EFB\u38A0\u5EFC\u683E\u941B\u5F0D\u{201C1}\u{2F894}\u3ADE\u48AE\u{2133A}\u5F3A\u{26888}\u{223D0}\u5F58\u{22471}\u5F63\u97BD\u{26E6E}\u5F72\u9340\u{28A36}\u5FA7\u5DB6\u3D5F\u{25250}\u{21F6A}\u{270F8}\u{22668}\u91D6\u{2029E}\u{28A29}\u6031\u6685\u{21877}\u3963\u3DC7\u3639\u5790\u{227B4}\u7971\u3E40\u609E\u60A4\u60B3\u{24982}\u{2498F}\u{27A53}\u74A4\u50E1\u5AA0\u6164\u8424\u6142\u{2F8A6}\u{26ED2}\u6181\u51F4\u{20656}\u6187\u5BAA\u{23FB7}',
      ],
      [
        'fca1',
        '\u{2285F}\u61D3\u{28B9D}\u{2995D}\u61D0\u3932\u{22980}\u{228C1}\u6023\u615C\u651E\u638B\u{20118}\u62C5\u{21770}\u62D5\u{22E0D}\u636C\u{249DF}\u3A17\u6438\u63F8\u{2138E}\u{217FC}\u6490\u6F8A\u{22E36}\u9814\u{2408C}\u{2571D}\u64E1\u64E5\u947B\u3A66\u643A\u3A57\u654D\u6F16\u{24A28}\u{24A23}\u6585\u656D\u655F\u{2307E}\u65B5\u{24940}\u4B37\u65D1\u40D8\u{21829}\u65E0\u65E3\u5FDF\u{23400}\u6618\u{231F7}\u{231F8}\u6644\u{231A4}\u{231A5}\u664B\u{20E75}\u6667\u{251E6}\u6673\u6674\u{21E3D}\u{23231}\u{285F4}\u{231C8}\u{25313}\u77C5\u{228F7}\u99A4\u6702\u{2439C}\u{24A21}\u3B2B\u69FA\u{237C2}\u675E\u6767\u6762\u{241CD}\u{290ED}\u67D7\u44E9\u6822\u6E50\u923C\u6801\u{233E6}\u{26DA0}\u685D',
      ],
      [
        'fd40',
        '\u{2346F}\u69E1\u6A0B\u{28ADF}\u6973\u68C3\u{235CD}\u6901\u6900\u3D32\u3A01\u{2363C}\u3B80\u67AC\u6961\u{28A4A}\u42FC\u6936\u6998\u3BA1\u{203C9}\u8363\u5090\u69F9\u{23659}\u{2212A}\u6A45\u{23703}\u6A9D\u3BF3\u67B1\u6AC8\u{2919C}\u3C0D\u6B1D\u{20923}\u60DE\u6B35\u6B74\u{227CD}\u6EB5\u{23ADB}\u{203B5}\u{21958}\u3740\u5421\u{23B5A}\u6BE1\u{23EFC}\u6BDC\u6C37\u{2248B}\u{248F1}\u{26B51}\u6C5A\u8226\u6C79\u{23DBC}\u44C5\u{23DBD}\u{241A4}\u{2490C}\u{24900}',
      ],
      [
        'fda1',
        '\u{23CC9}\u36E5\u3CEB\u{20D32}\u9B83\u{231F9}\u{22491}\u7F8F\u6837\u{26D25}\u{26DA1}\u{26DEB}\u6D96\u6D5C\u6E7C\u6F04\u{2497F}\u{24085}\u{26E72}\u8533\u{26F74}\u51C7\u6C9C\u6E1D\u842E\u{28B21}\u6E2F\u{23E2F}\u7453\u{23F82}\u79CC\u6E4F\u5A91\u{2304B}\u6FF8\u370D\u6F9D\u{23E30}\u6EFA\u{21497}\u{2403D}\u4555\u93F0\u6F44\u6F5C\u3D4E\u6F74\u{29170}\u3D3B\u6F9F\u{24144}\u6FD3\u{24091}\u{24155}\u{24039}\u{23FF0}\u{23FB4}\u{2413F}\u51DF\u{24156}\u{24157}\u{24140}\u{261DD}\u704B\u707E\u70A7\u7081\u70CC\u70D5\u70D6\u70DF\u4104\u3DE8\u71B4\u7196\u{24277}\u712B\u7145\u5A88\u714A\u716E\u5C9C\u{24365}\u714F\u9362\u{242C1}\u712C\u{2445A}\u{24A27}\u{24A22}\u71BA\u{28BE8}\u70BD\u720E',
      ],
      [
        'fe40',
        '\u9442\u7215\u5911\u9443\u7224\u9341\u{25605}\u722E\u7240\u{24974}\u68BD\u7255\u7257\u3E55\u{23044}\u680D\u6F3D\u7282\u732A\u732B\u{24823}\u{2882B}\u48ED\u{28804}\u7328\u732E\u73CF\u73AA\u{20C3A}\u{26A2E}\u73C9\u7449\u{241E2}\u{216E7}\u{24A24}\u6623\u36C5\u{249B7}\u{2498D}\u{249FB}\u73F7\u7415\u6903\u{24A26}\u7439\u{205C3}\u3ED7\u745C\u{228AD}\u7460\u{28EB2}\u7447\u73E4\u7476\u83B9\u746C\u3730\u7474\u93F1\u6A2C\u7482\u4953\u{24A8C}',
      ],
      [
        'fea1',
        '\u{2415F}\u{24A79}\u{28B8F}\u5B46\u{28C03}\u{2189E}\u74C8\u{21988}\u750E\u74E9\u751E\u{28ED9}\u{21A4B}\u5BD7\u{28EAC}\u9385\u754D\u754A\u7567\u756E\u{24F82}\u3F04\u{24D13}\u758E\u745D\u759E\u75B4\u7602\u762C\u7651\u764F\u766F\u7676\u{263F5}\u7690\u81EF\u37F8\u{26911}\u{2690E}\u76A1\u76A5\u76B7\u76CC\u{26F9F}\u8462\u{2509D}\u{2517D}\u{21E1C}\u771E\u7726\u7740\u64AF\u{25220}\u7758\u{232AC}\u77AF\u{28964}\u{28968}\u{216C1}\u77F4\u7809\u{21376}\u{24A12}\u68CA\u78AF\u78C7\u78D3\u96A5\u792E\u{255E0}\u78D7\u7934\u78B1\u{2760C}\u8FB8\u8884\u{28B2B}\u{26083}\u{2261C}\u7986\u8900\u6902\u7980\u{25857}\u799D\u{27B39}\u793C\u79A9\u6E2A\u{27126}\u3EA8\u79C6\u{2910D}\u79D4',
      ],
    ];
  },
});

// ../../node_modules/iconv-lite/encodings/dbcs-data.js
var require_dbcs_data = __commonJS({
  '../../node_modules/iconv-lite/encodings/dbcs-data.js'(exports2, module2) {
    'use strict';
    module2.exports = {
      // == Japanese/ShiftJIS ====================================================
      // All japanese encodings are based on JIS X set of standards:
      // JIS X 0201 - Single-byte encoding of ASCII + ¥ + Kana chars at 0xA1-0xDF.
      // JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes.
      //              Has several variations in 1978, 1983, 1990 and 1997.
      // JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.
      // JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.
      //              2 planes, first is superset of 0208, second - revised 0212.
      //              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)
      // Byte encodings are:
      //  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte
      //               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.
      //               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.
      //  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.
      //               0x00-0x7F       - lower part of 0201
      //               0x8E, 0xA1-0xDF - upper part of 0201
      //               (0xA1-0xFE)x2   - 0208 plane (94x94).
      //               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).
      //  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.
      //               Used as-is in ISO2022 family.
      //  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII,
      //                0201-1976 Roman, 0208-1978, 0208-1983.
      //  * ISO2022-JP-1: Adds esc seq for 0212-1990.
      //  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.
      //  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.
      //  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.
      //
      // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.
      //
      // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html
      shiftjis: {
        type: '_dbcs',
        table: function () {
          return require_shiftjis();
        },
        encodeAdd: { '\xA5': 92, '\u203E': 126 },
        encodeSkipVals: [{ from: 60736, to: 63808 }],
      },
      csshiftjis: 'shiftjis',
      mskanji: 'shiftjis',
      sjis: 'shiftjis',
      windows31j: 'shiftjis',
      ms31j: 'shiftjis',
      xsjis: 'shiftjis',
      windows932: 'shiftjis',
      ms932: 'shiftjis',
      932: 'shiftjis',
      cp932: 'shiftjis',
      eucjp: {
        type: '_dbcs',
        table: function () {
          return require_eucjp();
        },
        encodeAdd: { '\xA5': 92, '\u203E': 126 },
      },
      // TODO: KDDI extension to Shift_JIS
      // TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.
      // TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.
      // == Chinese/GBK ==========================================================
      // http://en.wikipedia.org/wiki/GBK
      // We mostly implement W3C recommendation: https://www.w3.org/TR/encoding/#gbk-encoder
      // Oldest GB2312 (1981, ~7600 chars) is a subset of CP936
      gb2312: 'cp936',
      gb231280: 'cp936',
      gb23121980: 'cp936',
      csgb2312: 'cp936',
      csiso58gb231280: 'cp936',
      euccn: 'cp936',
      // Microsoft's CP936 is a subset and approximation of GBK.
      windows936: 'cp936',
      ms936: 'cp936',
      936: 'cp936',
      cp936: {
        type: '_dbcs',
        table: function () {
          return require_cp936();
        },
      },
      // GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.
      gbk: {
        type: '_dbcs',
        table: function () {
          return require_cp936().concat(require_gbk_added());
        },
      },
      xgbk: 'gbk',
      isoir58: 'gbk',
      // GB18030 is an algorithmic extension of GBK.
      // Main source: https://www.w3.org/TR/encoding/#gbk-encoder
      // http://icu-project.org/docs/papers/gb18030.html
      // http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml
      // http://www.khngai.com/chinese/charmap/tblgbk.php?page=0
      gb18030: {
        type: '_dbcs',
        table: function () {
          return require_cp936().concat(require_gbk_added());
        },
        gb18030: function () {
          return require_gb18030_ranges();
        },
        encodeSkipVals: [128],
        encodeAdd: { '\u20AC': 41699 },
      },
      chinese: 'gb18030',
      // == Korean ===============================================================
      // EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.
      windows949: 'cp949',
      ms949: 'cp949',
      949: 'cp949',
      cp949: {
        type: '_dbcs',
        table: function () {
          return require_cp949();
        },
      },
      cseuckr: 'cp949',
      csksc56011987: 'cp949',
      euckr: 'cp949',
      isoir149: 'cp949',
      korean: 'cp949',
      ksc56011987: 'cp949',
      ksc56011989: 'cp949',
      ksc5601: 'cp949',
      // == Big5/Taiwan/Hong Kong ================================================
      // There are lots of tables for Big5 and cp950. Please see the following links for history:
      // http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html
      // Variations, in roughly number of defined chars:
      //  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT
      //  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/
      //  * Big5-2003 (Taiwan standard) almost superset of cp950.
      //  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.
      //  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard.
      //    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.
      //    Plus, it has 4 combining sequences.
      //    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299
      //    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.
      //    Implementations are not consistent within browsers; sometimes labeled as just big5.
      //    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.
      //    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31
      //    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.
      //    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt
      //                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt
      //
      // Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder
      // Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.
      windows950: 'cp950',
      ms950: 'cp950',
      950: 'cp950',
      cp950: {
        type: '_dbcs',
        table: function () {
          return require_cp950();
        },
      },
      // Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.
      big5: 'big5hkscs',
      big5hkscs: {
        type: '_dbcs',
        table: function () {
          return require_cp950().concat(require_big5_added());
        },
        encodeSkipVals: [41676],
      },
      cnbig5: 'big5hkscs',
      csbig5: 'big5hkscs',
      xxbig5: 'big5hkscs',
    };
  },
});

// ../../node_modules/iconv-lite/encodings/index.js
var require_encodings = __commonJS({
  '../../node_modules/iconv-lite/encodings/index.js'(exports2, module2) {
    'use strict';
    var modules = [
      require_internal(),
      require_utf16(),
      require_utf7(),
      require_sbcs_codec(),
      require_sbcs_data(),
      require_sbcs_data_generated(),
      require_dbcs_codec(),
      require_dbcs_data(),
    ];
    for (i = 0; i < modules.length; i++) {
      module2 = modules[i];
      for (enc in module2)
        if (Object.prototype.hasOwnProperty.call(module2, enc))
          exports2[enc] = module2[enc];
    }
    var module2;
    var enc;
    var i;
  },
});

// ../../node_modules/iconv-lite/lib/streams.js
var require_streams = __commonJS({
  '../../node_modules/iconv-lite/lib/streams.js'(exports2, module2) {
    'use strict';
    var Buffer2 = require('buffer').Buffer;
    var Transform = require('stream').Transform;
    module2.exports = function (iconv) {
      iconv.encodeStream = function encodeStream(encoding, options) {
        return new IconvLiteEncoderStream(
          iconv.getEncoder(encoding, options),
          options
        );
      };
      iconv.decodeStream = function decodeStream(encoding, options) {
        return new IconvLiteDecoderStream(
          iconv.getDecoder(encoding, options),
          options
        );
      };
      iconv.supportsStreams = true;
      iconv.IconvLiteEncoderStream = IconvLiteEncoderStream;
      iconv.IconvLiteDecoderStream = IconvLiteDecoderStream;
      iconv._collect = IconvLiteDecoderStream.prototype.collect;
    };
    function IconvLiteEncoderStream(conv, options) {
      this.conv = conv;
      options = options || {};
      options.decodeStrings = false;
      Transform.call(this, options);
    }
    IconvLiteEncoderStream.prototype = Object.create(Transform.prototype, {
      constructor: { value: IconvLiteEncoderStream },
    });
    IconvLiteEncoderStream.prototype._transform = function (
      chunk,
      encoding,
      done
    ) {
      if (typeof chunk != 'string')
        return done(
          new Error('Iconv encoding stream needs strings as its input.')
        );
      try {
        var res = this.conv.write(chunk);
        if (res && res.length) this.push(res);
        done();
      } catch (e2) {
        done(e2);
      }
    };
    IconvLiteEncoderStream.prototype._flush = function (done) {
      try {
        var res = this.conv.end();
        if (res && res.length) this.push(res);
        done();
      } catch (e2) {
        done(e2);
      }
    };
    IconvLiteEncoderStream.prototype.collect = function (cb) {
      var chunks = [];
      this.on('error', cb);
      this.on('data', function (chunk) {
        chunks.push(chunk);
      });
      this.on('end', function () {
        cb(null, Buffer2.concat(chunks));
      });
      return this;
    };
    function IconvLiteDecoderStream(conv, options) {
      this.conv = conv;
      options = options || {};
      options.encoding = this.encoding = 'utf8';
      Transform.call(this, options);
    }
    IconvLiteDecoderStream.prototype = Object.create(Transform.prototype, {
      constructor: { value: IconvLiteDecoderStream },
    });
    IconvLiteDecoderStream.prototype._transform = function (
      chunk,
      encoding,
      done
    ) {
      if (!Buffer2.isBuffer(chunk))
        return done(
          new Error('Iconv decoding stream needs buffers as its input.')
        );
      try {
        var res = this.conv.write(chunk);
        if (res && res.length) this.push(res, this.encoding);
        done();
      } catch (e2) {
        done(e2);
      }
    };
    IconvLiteDecoderStream.prototype._flush = function (done) {
      try {
        var res = this.conv.end();
        if (res && res.length) this.push(res, this.encoding);
        done();
      } catch (e2) {
        done(e2);
      }
    };
    IconvLiteDecoderStream.prototype.collect = function (cb) {
      var res = '';
      this.on('error', cb);
      this.on('data', function (chunk) {
        res += chunk;
      });
      this.on('end', function () {
        cb(null, res);
      });
      return this;
    };
  },
});

// ../../node_modules/iconv-lite/lib/extend-node.js
var require_extend_node = __commonJS({
  '../../node_modules/iconv-lite/lib/extend-node.js'(exports2, module2) {
    'use strict';
    var Buffer2 = require('buffer').Buffer;
    module2.exports = function (iconv) {
      var original = void 0;
      iconv.supportsNodeEncodingsExtension = !(
        Buffer2.from || new Buffer2(0) instanceof Uint8Array
      );
      iconv.extendNodeEncodings = function extendNodeEncodings() {
        if (original) return;
        original = {};
        if (!iconv.supportsNodeEncodingsExtension) {
          console.error(
            "ACTION NEEDED: require('iconv-lite').extendNodeEncodings() is not supported in your version of Node"
          );
          console.error(
            'See more info at https://github.com/ashtuchkin/iconv-lite/wiki/Node-v4-compatibility'
          );
          return;
        }
        var nodeNativeEncodings = {
          hex: true,
          utf8: true,
          'utf-8': true,
          ascii: true,
          binary: true,
          base64: true,
          ucs2: true,
          'ucs-2': true,
          utf16le: true,
          'utf-16le': true,
        };
        Buffer2.isNativeEncoding = function (enc) {
          return enc && nodeNativeEncodings[enc.toLowerCase()];
        };
        var SlowBuffer = require('buffer').SlowBuffer;
        original.SlowBufferToString = SlowBuffer.prototype.toString;
        SlowBuffer.prototype.toString = function (encoding, start, end) {
          encoding = String(encoding || 'utf8').toLowerCase();
          if (Buffer2.isNativeEncoding(encoding))
            return original.SlowBufferToString.call(this, encoding, start, end);
          if (typeof start == 'undefined') start = 0;
          if (typeof end == 'undefined') end = this.length;
          return iconv.decode(this.slice(start, end), encoding);
        };
        original.SlowBufferWrite = SlowBuffer.prototype.write;
        SlowBuffer.prototype.write = function (
          string,
          offset,
          length,
          encoding
        ) {
          if (isFinite(offset)) {
            if (!isFinite(length)) {
              encoding = length;
              length = void 0;
            }
          } else {
            var swap = encoding;
            encoding = offset;
            offset = length;
            length = swap;
          }
          offset = +offset || 0;
          var remaining = this.length - offset;
          if (!length) {
            length = remaining;
          } else {
            length = +length;
            if (length > remaining) {
              length = remaining;
            }
          }
          encoding = String(encoding || 'utf8').toLowerCase();
          if (Buffer2.isNativeEncoding(encoding))
            return original.SlowBufferWrite.call(
              this,
              string,
              offset,
              length,
              encoding
            );
          if (string.length > 0 && (length < 0 || offset < 0))
            throw new RangeError('attempt to write beyond buffer bounds');
          var buf = iconv.encode(string, encoding);
          if (buf.length < length) length = buf.length;
          buf.copy(this, offset, 0, length);
          return length;
        };
        original.BufferIsEncoding = Buffer2.isEncoding;
        Buffer2.isEncoding = function (encoding) {
          return (
            Buffer2.isNativeEncoding(encoding) || iconv.encodingExists(encoding)
          );
        };
        original.BufferByteLength = Buffer2.byteLength;
        Buffer2.byteLength = SlowBuffer.byteLength = function (str, encoding) {
          encoding = String(encoding || 'utf8').toLowerCase();
          if (Buffer2.isNativeEncoding(encoding))
            return original.BufferByteLength.call(this, str, encoding);
          return iconv.encode(str, encoding).length;
        };
        original.BufferToString = Buffer2.prototype.toString;
        Buffer2.prototype.toString = function (encoding, start, end) {
          encoding = String(encoding || 'utf8').toLowerCase();
          if (Buffer2.isNativeEncoding(encoding))
            return original.BufferToString.call(this, encoding, start, end);
          if (typeof start == 'undefined') start = 0;
          if (typeof end == 'undefined') end = this.length;
          return iconv.decode(this.slice(start, end), encoding);
        };
        original.BufferWrite = Buffer2.prototype.write;
        Buffer2.prototype.write = function (string, offset, length, encoding) {
          var _offset = offset,
            _length = length,
            _encoding = encoding;
          if (isFinite(offset)) {
            if (!isFinite(length)) {
              encoding = length;
              length = void 0;
            }
          } else {
            var swap = encoding;
            encoding = offset;
            offset = length;
            length = swap;
          }
          encoding = String(encoding || 'utf8').toLowerCase();
          if (Buffer2.isNativeEncoding(encoding))
            return original.BufferWrite.call(
              this,
              string,
              _offset,
              _length,
              _encoding
            );
          offset = +offset || 0;
          var remaining = this.length - offset;
          if (!length) {
            length = remaining;
          } else {
            length = +length;
            if (length > remaining) {
              length = remaining;
            }
          }
          if (string.length > 0 && (length < 0 || offset < 0))
            throw new RangeError('attempt to write beyond buffer bounds');
          var buf = iconv.encode(string, encoding);
          if (buf.length < length) length = buf.length;
          buf.copy(this, offset, 0, length);
          return length;
        };
        if (iconv.supportsStreams) {
          var Readable = require('stream').Readable;
          original.ReadableSetEncoding = Readable.prototype.setEncoding;
          Readable.prototype.setEncoding = function setEncoding(enc, options) {
            this._readableState.decoder = iconv.getDecoder(enc, options);
            this._readableState.encoding = enc;
          };
          Readable.prototype.collect = iconv._collect;
        }
      };
      iconv.undoExtendNodeEncodings = function undoExtendNodeEncodings() {
        if (!iconv.supportsNodeEncodingsExtension) return;
        if (!original)
          throw new Error(
            "require('iconv-lite').undoExtendNodeEncodings(): Nothing to undo; extendNodeEncodings() is not called."
          );
        delete Buffer2.isNativeEncoding;
        var SlowBuffer = require('buffer').SlowBuffer;
        SlowBuffer.prototype.toString = original.SlowBufferToString;
        SlowBuffer.prototype.write = original.SlowBufferWrite;
        Buffer2.isEncoding = original.BufferIsEncoding;
        Buffer2.byteLength = original.BufferByteLength;
        Buffer2.prototype.toString = original.BufferToString;
        Buffer2.prototype.write = original.BufferWrite;
        if (iconv.supportsStreams) {
          var Readable = require('stream').Readable;
          Readable.prototype.setEncoding = original.ReadableSetEncoding;
          delete Readable.prototype.collect;
        }
        original = void 0;
      };
    };
  },
});

// ../../node_modules/iconv-lite/lib/index.js
var require_lib = __commonJS({
  '../../node_modules/iconv-lite/lib/index.js'(exports2, module2) {
    'use strict';
    var Buffer2 = require_safer().Buffer;
    var bomHandling = require_bom_handling();
    var iconv = module2.exports;
    iconv.encodings = null;
    iconv.defaultCharUnicode = '\uFFFD';
    iconv.defaultCharSingleByte = '?';
    iconv.encode = function encode(str, encoding, options) {
      str = '' + (str || '');
      var encoder = iconv.getEncoder(encoding, options);
      var res = encoder.write(str);
      var trail = encoder.end();
      return trail && trail.length > 0 ? Buffer2.concat([res, trail]) : res;
    };
    iconv.decode = function decode(buf, encoding, options) {
      if (typeof buf === 'string') {
        if (!iconv.skipDecodeWarning) {
          console.error(
            'Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding'
          );
          iconv.skipDecodeWarning = true;
        }
        buf = Buffer2.from('' + (buf || ''), 'binary');
      }
      var decoder = iconv.getDecoder(encoding, options);
      var res = decoder.write(buf);
      var trail = decoder.end();
      return trail ? res + trail : res;
    };
    iconv.encodingExists = function encodingExists(enc) {
      try {
        iconv.getCodec(enc);
        return true;
      } catch (e2) {
        return false;
      }
    };
    iconv.toEncoding = iconv.encode;
    iconv.fromEncoding = iconv.decode;
    iconv._codecDataCache = {};
    iconv.getCodec = function getCodec(encoding) {
      if (!iconv.encodings) iconv.encodings = require_encodings();
      var enc = iconv._canonicalizeEncoding(encoding);
      var codecOptions = {};
      while (true) {
        var codec = iconv._codecDataCache[enc];
        if (codec) return codec;
        var codecDef = iconv.encodings[enc];
        switch (typeof codecDef) {
          case 'string':
            enc = codecDef;
            break;
          case 'object':
            for (var key in codecDef) codecOptions[key] = codecDef[key];
            if (!codecOptions.encodingName) codecOptions.encodingName = enc;
            enc = codecDef.type;
            break;
          case 'function':
            if (!codecOptions.encodingName) codecOptions.encodingName = enc;
            codec = new codecDef(codecOptions, iconv);
            iconv._codecDataCache[codecOptions.encodingName] = codec;
            return codec;
          default:
            throw new Error(
              "Encoding not recognized: '" +
                encoding +
                "' (searched as: '" +
                enc +
                "')"
            );
        }
      }
    };
    iconv._canonicalizeEncoding = function (encoding) {
      return ('' + encoding).toLowerCase().replace(/:\d{4}$|[^0-9a-z]/g, '');
    };
    iconv.getEncoder = function getEncoder(encoding, options) {
      var codec = iconv.getCodec(encoding),
        encoder = new codec.encoder(options, codec);
      if (codec.bomAware && options && options.addBOM)
        encoder = new bomHandling.PrependBOM(encoder, options);
      return encoder;
    };
    iconv.getDecoder = function getDecoder3(encoding, options) {
      var codec = iconv.getCodec(encoding),
        decoder = new codec.decoder(options, codec);
      if (codec.bomAware && !(options && options.stripBOM === false))
        decoder = new bomHandling.StripBOM(decoder, options);
      return decoder;
    };
    var nodeVer =
      typeof process !== 'undefined' &&
      process.versions &&
      process.versions.node;
    if (nodeVer) {
      nodeVerArr = nodeVer.split('.').map(Number);
      if (nodeVerArr[0] > 0 || nodeVerArr[1] >= 10) {
        require_streams()(iconv);
      }
      require_extend_node()(iconv);
    }
    var nodeVerArr;
    if (false) {
      console.error(
        'iconv-lite warning: javascript files use encoding different from utf-8. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.'
      );
    }
  },
});

// ../../node_modules/unpipe/index.js
var require_unpipe = __commonJS({
  '../../node_modules/unpipe/index.js'(exports2, module2) {
    'use strict';
    module2.exports = unpipe;
    function hasPipeDataListeners(stream) {
      var listeners = stream.listeners('data');
      for (var i = 0; i < listeners.length; i++) {
        if (listeners[i].name === 'ondata') {
          return true;
        }
      }
      return false;
    }
    function unpipe(stream) {
      if (!stream) {
        throw new TypeError('argument stream is required');
      }
      if (typeof stream.unpipe === 'function') {
        stream.unpipe();
        return;
      }
      if (!hasPipeDataListeners(stream)) {
        return;
      }
      var listener;
      var listeners = stream.listeners('close');
      for (var i = 0; i < listeners.length; i++) {
        listener = listeners[i];
        if (listener.name !== 'cleanup' && listener.name !== 'onclose') {
          continue;
        }
        listener.call(stream);
      }
    }
  },
});

// ../../node_modules/raw-body/index.js
var require_raw_body = __commonJS({
  '../../node_modules/raw-body/index.js'(exports2, module2) {
    'use strict';
    var asyncHooks = tryRequireAsyncHooks();
    var bytes = require_bytes();
    var createError = require_http_errors();
    var iconv = require_lib();
    var unpipe = require_unpipe();
    module2.exports = getRawBody;
    var ICONV_ENCODING_MESSAGE_REGEXP = /^Encoding not recognized: /;
    function getDecoder3(encoding) {
      if (!encoding) return null;
      try {
        return iconv.getDecoder(encoding);
      } catch (e2) {
        if (!ICONV_ENCODING_MESSAGE_REGEXP.test(e2.message)) throw e2;
        throw createError(415, 'specified encoding unsupported', {
          encoding,
          type: 'encoding.unsupported',
        });
      }
    }
    function getRawBody(stream, options, callback) {
      var done = callback;
      var opts = options || {};
      if (options === true || typeof options === 'string') {
        opts = {
          encoding: options,
        };
      }
      if (typeof options === 'function') {
        done = options;
        opts = {};
      }
      if (done !== void 0 && typeof done !== 'function') {
        throw new TypeError('argument callback must be a function');
      }
      if (!done && !global.Promise) {
        throw new TypeError('argument callback is required');
      }
      var encoding = opts.encoding !== true ? opts.encoding : 'utf-8';
      var limit = bytes.parse(opts.limit);
      var length =
        opts.length != null && !isNaN(opts.length)
          ? parseInt(opts.length, 10)
          : null;
      if (done) {
        return readStream(stream, encoding, length, limit, wrap(done));
      }
      return new Promise(function executor(resolve, reject) {
        readStream(stream, encoding, length, limit, function onRead(err, buf) {
          if (err) return reject(err);
          resolve(buf);
        });
      });
    }
    function halt(stream) {
      unpipe(stream);
      if (typeof stream.pause === 'function') {
        stream.pause();
      }
    }
    function readStream(stream, encoding, length, limit, callback) {
      var complete = false;
      var sync = true;
      if (limit !== null && length !== null && length > limit) {
        return done(
          createError(413, 'request entity too large', {
            expected: length,
            length,
            limit,
            type: 'entity.too.large',
          })
        );
      }
      var state = stream._readableState;
      if (stream._decoder || (state && (state.encoding || state.decoder))) {
        return done(
          createError(500, 'stream encoding should not be set', {
            type: 'stream.encoding.set',
          })
        );
      }
      if (typeof stream.readable !== 'undefined' && !stream.readable) {
        return done(
          createError(500, 'stream is not readable', {
            type: 'stream.not.readable',
          })
        );
      }
      var received = 0;
      var decoder;
      try {
        decoder = getDecoder3(encoding);
      } catch (err) {
        return done(err);
      }
      var buffer = decoder ? '' : [];
      stream.on('aborted', onAborted);
      stream.on('close', cleanup);
      stream.on('data', onData);
      stream.on('end', onEnd);
      stream.on('error', onEnd);
      sync = false;
      function done() {
        var args = new Array(arguments.length);
        for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i];
        }
        complete = true;
        if (sync) {
          process.nextTick(invokeCallback);
        } else {
          invokeCallback();
        }
        function invokeCallback() {
          cleanup();
          if (args[0]) {
            halt(stream);
          }
          callback.apply(null, args);
        }
      }
      function onAborted() {
        if (complete) return;
        done(
          createError(400, 'request aborted', {
            code: 'ECONNABORTED',
            expected: length,
            length,
            received,
            type: 'request.aborted',
          })
        );
      }
      function onData(chunk) {
        if (complete) return;
        received += chunk.length;
        if (limit !== null && received > limit) {
          done(
            createError(413, 'request entity too large', {
              limit,
              received,
              type: 'entity.too.large',
            })
          );
        } else if (decoder) {
          buffer += decoder.write(chunk);
        } else {
          buffer.push(chunk);
        }
      }
      function onEnd(err) {
        if (complete) return;
        if (err) return done(err);
        if (length !== null && received !== length) {
          done(
            createError(400, 'request size did not match content length', {
              expected: length,
              length,
              received,
              type: 'request.size.invalid',
            })
          );
        } else {
          var string = decoder
            ? buffer + (decoder.end() || '')
            : Buffer.concat(buffer);
          done(null, string);
        }
      }
      function cleanup() {
        buffer = null;
        stream.removeListener('aborted', onAborted);
        stream.removeListener('data', onData);
        stream.removeListener('end', onEnd);
        stream.removeListener('error', onEnd);
        stream.removeListener('close', cleanup);
      }
    }
    function tryRequireAsyncHooks() {
      try {
        return require('async_hooks');
      } catch (e2) {
        return {};
      }
    }
    function wrap(fn) {
      var res;
      if (asyncHooks.AsyncResource) {
        res = new asyncHooks.AsyncResource(fn.name || 'bound-anonymous-fn');
      }
      if (!res || !res.runInAsyncScope) {
        return fn;
      }
      return res.runInAsyncScope.bind(res, fn, null);
    }
  },
});

// ../../node_modules/ee-first/index.js
var require_ee_first = __commonJS({
  '../../node_modules/ee-first/index.js'(exports2, module2) {
    'use strict';
    module2.exports = first;
    function first(stuff, done) {
      if (!Array.isArray(stuff))
        throw new TypeError('arg must be an array of [ee, events...] arrays');
      var cleanups = [];
      for (var i = 0; i < stuff.length; i++) {
        var arr = stuff[i];
        if (!Array.isArray(arr) || arr.length < 2)
          throw new TypeError('each array member must be [ee, events...]');
        var ee2 = arr[0];
        for (var j2 = 1; j2 < arr.length; j2++) {
          var event = arr[j2];
          var fn = listener(event, callback);
          ee2.on(event, fn);
          cleanups.push({
            ee: ee2,
            event,
            fn,
          });
        }
      }
      function callback() {
        cleanup();
        done.apply(null, arguments);
      }
      function cleanup() {
        var x;
        for (var i2 = 0; i2 < cleanups.length; i2++) {
          x = cleanups[i2];
          x.ee.removeListener(x.event, x.fn);
        }
      }
      function thunk(fn2) {
        done = fn2;
      }
      thunk.cancel = cleanup;
      return thunk;
    }
    function listener(event, done) {
      return function onevent(arg1) {
        var args = new Array(arguments.length);
        var ee2 = this;
        var err = event === 'error' ? arg1 : null;
        for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i];
        }
        done(err, ee2, event, args);
      };
    }
  },
});

// ../../node_modules/on-finished/index.js
var require_on_finished = __commonJS({
  '../../node_modules/on-finished/index.js'(exports2, module2) {
    'use strict';
    module2.exports = onFinished;
    module2.exports.isFinished = isFinished;
    var asyncHooks = tryRequireAsyncHooks();
    var first = require_ee_first();
    var defer =
      typeof setImmediate === 'function'
        ? setImmediate
        : function (fn) {
            process.nextTick(fn.bind.apply(fn, arguments));
          };
    function onFinished(msg, listener) {
      if (isFinished(msg) !== false) {
        defer(listener, null, msg);
        return msg;
      }
      attachListener(msg, wrap(listener));
      return msg;
    }
    function isFinished(msg) {
      var socket = msg.socket;
      if (typeof msg.finished === 'boolean') {
        return Boolean(msg.finished || (socket && !socket.writable));
      }
      if (typeof msg.complete === 'boolean') {
        return Boolean(
          msg.upgrade ||
            !socket ||
            !socket.readable ||
            (msg.complete && !msg.readable)
        );
      }
      return void 0;
    }
    function attachFinishedListener(msg, callback) {
      var eeMsg;
      var eeSocket;
      var finished = false;
      function onFinish(error) {
        eeMsg.cancel();
        eeSocket.cancel();
        finished = true;
        callback(error);
      }
      eeMsg = eeSocket = first([[msg, 'end', 'finish']], onFinish);
      function onSocket(socket) {
        msg.removeListener('socket', onSocket);
        if (finished) return;
        if (eeMsg !== eeSocket) return;
        eeSocket = first([[socket, 'error', 'close']], onFinish);
      }
      if (msg.socket) {
        onSocket(msg.socket);
        return;
      }
      msg.on('socket', onSocket);
      if (msg.socket === void 0) {
        patchAssignSocket(msg, onSocket);
      }
    }
    function attachListener(msg, listener) {
      var attached = msg.__onFinished;
      if (!attached || !attached.queue) {
        attached = msg.__onFinished = createListener(msg);
        attachFinishedListener(msg, attached);
      }
      attached.queue.push(listener);
    }
    function createListener(msg) {
      function listener(err) {
        if (msg.__onFinished === listener) msg.__onFinished = null;
        if (!listener.queue) return;
        var queue = listener.queue;
        listener.queue = null;
        for (var i = 0; i < queue.length; i++) {
          queue[i](err, msg);
        }
      }
      listener.queue = [];
      return listener;
    }
    function patchAssignSocket(res, callback) {
      var assignSocket = res.assignSocket;
      if (typeof assignSocket !== 'function') return;
      res.assignSocket = function _assignSocket(socket) {
        assignSocket.call(this, socket);
        callback(socket);
      };
    }
    function tryRequireAsyncHooks() {
      try {
        return require('async_hooks');
      } catch (e2) {
        return {};
      }
    }
    function wrap(fn) {
      var res;
      if (asyncHooks.AsyncResource) {
        res = new asyncHooks.AsyncResource(fn.name || 'bound-anonymous-fn');
      }
      if (!res || !res.runInAsyncScope) {
        return fn;
      }
      return res.runInAsyncScope.bind(res, fn, null);
    }
  },
});

// ../../node_modules/body-parser/lib/read.js
var require_read = __commonJS({
  '../../node_modules/body-parser/lib/read.js'(exports2, module2) {
    'use strict';
    var createError = require_http_errors();
    var destroy = require_destroy();
    var getBody = require_raw_body();
    var iconv = require_lib();
    var onFinished = require_on_finished();
    var unpipe = require_unpipe();
    var zlib = require('zlib');
    module2.exports = read;
    function read(req, res, next, parse, debug2, options) {
      var length;
      var opts = options;
      var stream;
      req._body = true;
      var encoding = opts.encoding !== null ? opts.encoding : null;
      var verify = opts.verify;
      try {
        stream = contentstream(req, debug2, opts.inflate);
        length = stream.length;
        stream.length = void 0;
      } catch (err) {
        return next(err);
      }
      opts.length = length;
      opts.encoding = verify ? null : encoding;
      if (
        opts.encoding === null &&
        encoding !== null &&
        !iconv.encodingExists(encoding)
      ) {
        return next(
          createError(
            415,
            'unsupported charset "' + encoding.toUpperCase() + '"',
            {
              charset: encoding.toLowerCase(),
              type: 'charset.unsupported',
            }
          )
        );
      }
      debug2('read body');
      getBody(stream, opts, function (error, body) {
        if (error) {
          var _error;
          if (error.type === 'encoding.unsupported') {
            _error = createError(
              415,
              'unsupported charset "' + encoding.toUpperCase() + '"',
              {
                charset: encoding.toLowerCase(),
                type: 'charset.unsupported',
              }
            );
          } else {
            _error = createError(400, error);
          }
          if (stream !== req) {
            unpipe(req);
            destroy(stream, true);
          }
          dump(req, function onfinished() {
            next(createError(400, _error));
          });
          return;
        }
        if (verify) {
          try {
            debug2('verify body');
            verify(req, res, body, encoding);
          } catch (err) {
            next(
              createError(403, err, {
                body,
                type: err.type || 'entity.verify.failed',
              })
            );
            return;
          }
        }
        var str = body;
        try {
          debug2('parse body');
          str =
            typeof body !== 'string' && encoding !== null
              ? iconv.decode(body, encoding)
              : body;
          req.body = parse(str);
        } catch (err) {
          next(
            createError(400, err, {
              body: str,
              type: err.type || 'entity.parse.failed',
            })
          );
          return;
        }
        next();
      });
    }
    function contentstream(req, debug2, inflate) {
      var encoding = (
        req.headers['content-encoding'] || 'identity'
      ).toLowerCase();
      var length = req.headers['content-length'];
      var stream;
      debug2('content-encoding "%s"', encoding);
      if (inflate === false && encoding !== 'identity') {
        throw createError(415, 'content encoding unsupported', {
          encoding,
          type: 'encoding.unsupported',
        });
      }
      switch (encoding) {
        case 'deflate':
          stream = zlib.createInflate();
          debug2('inflate body');
          req.pipe(stream);
          break;
        case 'gzip':
          stream = zlib.createGunzip();
          debug2('gunzip body');
          req.pipe(stream);
          break;
        case 'identity':
          stream = req;
          stream.length = length;
          break;
        default:
          throw createError(
            415,
            'unsupported content encoding "' + encoding + '"',
            {
              encoding,
              type: 'encoding.unsupported',
            }
          );
      }
      return stream;
    }
    function dump(req, callback) {
      if (onFinished.isFinished(req)) {
        callback(null);
      } else {
        onFinished(req, callback);
        req.resume();
      }
    }
  },
});

// ../../node_modules/media-typer/index.js
var require_media_typer = __commonJS({
  '../../node_modules/media-typer/index.js'(exports2) {
    'use strict';
    var paramRegExp =
      /; *([!#$%&'\*\+\-\.0-9A-Z\^_`a-z\|~]+) *= *("(?:[ !\u0023-\u005b\u005d-\u007e\u0080-\u00ff]|\\[\u0020-\u007e])*"|[!#$%&'\*\+\-\.0-9A-Z\^_`a-z\|~]+) */g;
    var textRegExp = /^[\u0020-\u007e\u0080-\u00ff]+$/;
    var tokenRegExp = /^[!#$%&'\*\+\-\.0-9A-Z\^_`a-z\|~]+$/;
    var qescRegExp = /\\([\u0000-\u007f])/g;
    var quoteRegExp = /([\\"])/g;
    var subtypeNameRegExp = /^[A-Za-z0-9][A-Za-z0-9!#$&^_.-]{0,126}$/;
    var typeNameRegExp = /^[A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126}$/;
    var typeRegExp =
      /^ *([A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126})\/([A-Za-z0-9][A-Za-z0-9!#$&^_.+-]{0,126}) *$/;
    exports2.format = format2;
    exports2.parse = parse;
    function format2(obj) {
      if (!obj || typeof obj !== 'object') {
        throw new TypeError('argument obj is required');
      }
      var parameters = obj.parameters;
      var subtype = obj.subtype;
      var suffix = obj.suffix;
      var type = obj.type;
      if (!type || !typeNameRegExp.test(type)) {
        throw new TypeError('invalid type');
      }
      if (!subtype || !subtypeNameRegExp.test(subtype)) {
        throw new TypeError('invalid subtype');
      }
      var string = type + '/' + subtype;
      if (suffix) {
        if (!typeNameRegExp.test(suffix)) {
          throw new TypeError('invalid suffix');
        }
        string += '+' + suffix;
      }
      if (parameters && typeof parameters === 'object') {
        var param;
        var params = Object.keys(parameters).sort();
        for (var i = 0; i < params.length; i++) {
          param = params[i];
          if (!tokenRegExp.test(param)) {
            throw new TypeError('invalid parameter name');
          }
          string += '; ' + param + '=' + qstring(parameters[param]);
        }
      }
      return string;
    }
    function parse(string) {
      if (!string) {
        throw new TypeError('argument string is required');
      }
      if (typeof string === 'object') {
        string = getcontenttype(string);
      }
      if (typeof string !== 'string') {
        throw new TypeError('argument string is required to be a string');
      }
      var index = string.indexOf(';');
      var type = index !== -1 ? string.substr(0, index) : string;
      var key;
      var match;
      var obj = splitType(type);
      var params = {};
      var value;
      paramRegExp.lastIndex = index;
      while ((match = paramRegExp.exec(string))) {
        if (match.index !== index) {
          throw new TypeError('invalid parameter format');
        }
        index += match[0].length;
        key = match[1].toLowerCase();
        value = match[2];
        if (value[0] === '"') {
          value = value.substr(1, value.length - 2).replace(qescRegExp, '$1');
        }
        params[key] = value;
      }
      if (index !== -1 && index !== string.length) {
        throw new TypeError('invalid parameter format');
      }
      obj.parameters = params;
      return obj;
    }
    function getcontenttype(obj) {
      if (typeof obj.getHeader === 'function') {
        return obj.getHeader('content-type');
      }
      if (typeof obj.headers === 'object') {
        return obj.headers && obj.headers['content-type'];
      }
    }
    function qstring(val) {
      var str = String(val);
      if (tokenRegExp.test(str)) {
        return str;
      }
      if (str.length > 0 && !textRegExp.test(str)) {
        throw new TypeError('invalid parameter value');
      }
      return '"' + str.replace(quoteRegExp, '\\$1') + '"';
    }
    function splitType(string) {
      var match = typeRegExp.exec(string.toLowerCase());
      if (!match) {
        throw new TypeError('invalid media type');
      }
      var type = match[1];
      var subtype = match[2];
      var suffix;
      var index = subtype.lastIndexOf('+');
      if (index !== -1) {
        suffix = subtype.substr(index + 1);
        subtype = subtype.substr(0, index);
      }
      var obj = {
        type,
        subtype,
        suffix,
      };
      return obj;
    }
  },
});

// ../../node_modules/mime-db/db.json
var require_db = __commonJS({
  '../../node_modules/mime-db/db.json'(exports2, module2) {
    module2.exports = {
      'application/1d-interleaved-parityfec': {
        source: 'iana',
      },
      'application/3gpdash-qoe-report+xml': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
      },
      'application/3gpp-ims+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/3gpphal+json': {
        source: 'iana',
        compressible: true,
      },
      'application/3gpphalforms+json': {
        source: 'iana',
        compressible: true,
      },
      'application/a2l': {
        source: 'iana',
      },
      'application/ace+cbor': {
        source: 'iana',
      },
      'application/activemessage': {
        source: 'iana',
      },
      'application/activity+json': {
        source: 'iana',
        compressible: true,
      },
      'application/alto-costmap+json': {
        source: 'iana',
        compressible: true,
      },
      'application/alto-costmapfilter+json': {
        source: 'iana',
        compressible: true,
      },
      'application/alto-directory+json': {
        source: 'iana',
        compressible: true,
      },
      'application/alto-endpointcost+json': {
        source: 'iana',
        compressible: true,
      },
      'application/alto-endpointcostparams+json': {
        source: 'iana',
        compressible: true,
      },
      'application/alto-endpointprop+json': {
        source: 'iana',
        compressible: true,
      },
      'application/alto-endpointpropparams+json': {
        source: 'iana',
        compressible: true,
      },
      'application/alto-error+json': {
        source: 'iana',
        compressible: true,
      },
      'application/alto-networkmap+json': {
        source: 'iana',
        compressible: true,
      },
      'application/alto-networkmapfilter+json': {
        source: 'iana',
        compressible: true,
      },
      'application/alto-updatestreamcontrol+json': {
        source: 'iana',
        compressible: true,
      },
      'application/alto-updatestreamparams+json': {
        source: 'iana',
        compressible: true,
      },
      'application/aml': {
        source: 'iana',
      },
      'application/andrew-inset': {
        source: 'iana',
        extensions: ['ez'],
      },
      'application/applefile': {
        source: 'iana',
      },
      'application/applixware': {
        source: 'apache',
        extensions: ['aw'],
      },
      'application/at+jwt': {
        source: 'iana',
      },
      'application/atf': {
        source: 'iana',
      },
      'application/atfx': {
        source: 'iana',
      },
      'application/atom+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['atom'],
      },
      'application/atomcat+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['atomcat'],
      },
      'application/atomdeleted+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['atomdeleted'],
      },
      'application/atomicmail': {
        source: 'iana',
      },
      'application/atomsvc+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['atomsvc'],
      },
      'application/atsc-dwd+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['dwd'],
      },
      'application/atsc-dynamic-event-message': {
        source: 'iana',
      },
      'application/atsc-held+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['held'],
      },
      'application/atsc-rdt+json': {
        source: 'iana',
        compressible: true,
      },
      'application/atsc-rsat+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['rsat'],
      },
      'application/atxml': {
        source: 'iana',
      },
      'application/auth-policy+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/bacnet-xdd+zip': {
        source: 'iana',
        compressible: false,
      },
      'application/batch-smtp': {
        source: 'iana',
      },
      'application/bdoc': {
        compressible: false,
        extensions: ['bdoc'],
      },
      'application/beep+xml': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
      },
      'application/calendar+json': {
        source: 'iana',
        compressible: true,
      },
      'application/calendar+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['xcs'],
      },
      'application/call-completion': {
        source: 'iana',
      },
      'application/cals-1840': {
        source: 'iana',
      },
      'application/captive+json': {
        source: 'iana',
        compressible: true,
      },
      'application/cbor': {
        source: 'iana',
      },
      'application/cbor-seq': {
        source: 'iana',
      },
      'application/cccex': {
        source: 'iana',
      },
      'application/ccmp+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/ccxml+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['ccxml'],
      },
      'application/cdfx+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['cdfx'],
      },
      'application/cdmi-capability': {
        source: 'iana',
        extensions: ['cdmia'],
      },
      'application/cdmi-container': {
        source: 'iana',
        extensions: ['cdmic'],
      },
      'application/cdmi-domain': {
        source: 'iana',
        extensions: ['cdmid'],
      },
      'application/cdmi-object': {
        source: 'iana',
        extensions: ['cdmio'],
      },
      'application/cdmi-queue': {
        source: 'iana',
        extensions: ['cdmiq'],
      },
      'application/cdni': {
        source: 'iana',
      },
      'application/cea': {
        source: 'iana',
      },
      'application/cea-2018+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/cellml+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/cfw': {
        source: 'iana',
      },
      'application/city+json': {
        source: 'iana',
        compressible: true,
      },
      'application/clr': {
        source: 'iana',
      },
      'application/clue+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/clue_info+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/cms': {
        source: 'iana',
      },
      'application/cnrp+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/coap-group+json': {
        source: 'iana',
        compressible: true,
      },
      'application/coap-payload': {
        source: 'iana',
      },
      'application/commonground': {
        source: 'iana',
      },
      'application/conference-info+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/cose': {
        source: 'iana',
      },
      'application/cose-key': {
        source: 'iana',
      },
      'application/cose-key-set': {
        source: 'iana',
      },
      'application/cpl+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['cpl'],
      },
      'application/csrattrs': {
        source: 'iana',
      },
      'application/csta+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/cstadata+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/csvm+json': {
        source: 'iana',
        compressible: true,
      },
      'application/cu-seeme': {
        source: 'apache',
        extensions: ['cu'],
      },
      'application/cwt': {
        source: 'iana',
      },
      'application/cybercash': {
        source: 'iana',
      },
      'application/dart': {
        compressible: true,
      },
      'application/dash+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['mpd'],
      },
      'application/dash-patch+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['mpp'],
      },
      'application/dashdelta': {
        source: 'iana',
      },
      'application/davmount+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['davmount'],
      },
      'application/dca-rft': {
        source: 'iana',
      },
      'application/dcd': {
        source: 'iana',
      },
      'application/dec-dx': {
        source: 'iana',
      },
      'application/dialog-info+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/dicom': {
        source: 'iana',
      },
      'application/dicom+json': {
        source: 'iana',
        compressible: true,
      },
      'application/dicom+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/dii': {
        source: 'iana',
      },
      'application/dit': {
        source: 'iana',
      },
      'application/dns': {
        source: 'iana',
      },
      'application/dns+json': {
        source: 'iana',
        compressible: true,
      },
      'application/dns-message': {
        source: 'iana',
      },
      'application/docbook+xml': {
        source: 'apache',
        compressible: true,
        extensions: ['dbk'],
      },
      'application/dots+cbor': {
        source: 'iana',
      },
      'application/dskpp+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/dssc+der': {
        source: 'iana',
        extensions: ['dssc'],
      },
      'application/dssc+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['xdssc'],
      },
      'application/dvcs': {
        source: 'iana',
      },
      'application/ecmascript': {
        source: 'iana',
        compressible: true,
        extensions: ['es', 'ecma'],
      },
      'application/edi-consent': {
        source: 'iana',
      },
      'application/edi-x12': {
        source: 'iana',
        compressible: false,
      },
      'application/edifact': {
        source: 'iana',
        compressible: false,
      },
      'application/efi': {
        source: 'iana',
      },
      'application/elm+json': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
      },
      'application/elm+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/emergencycalldata.cap+xml': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
      },
      'application/emergencycalldata.comment+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/emergencycalldata.control+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/emergencycalldata.deviceinfo+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/emergencycalldata.ecall.msd': {
        source: 'iana',
      },
      'application/emergencycalldata.providerinfo+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/emergencycalldata.serviceinfo+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/emergencycalldata.subscriberinfo+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/emergencycalldata.veds+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/emma+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['emma'],
      },
      'application/emotionml+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['emotionml'],
      },
      'application/encaprtp': {
        source: 'iana',
      },
      'application/epp+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/epub+zip': {
        source: 'iana',
        compressible: false,
        extensions: ['epub'],
      },
      'application/eshop': {
        source: 'iana',
      },
      'application/exi': {
        source: 'iana',
        extensions: ['exi'],
      },
      'application/expect-ct-report+json': {
        source: 'iana',
        compressible: true,
      },
      'application/express': {
        source: 'iana',
        extensions: ['exp'],
      },
      'application/fastinfoset': {
        source: 'iana',
      },
      'application/fastsoap': {
        source: 'iana',
      },
      'application/fdt+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['fdt'],
      },
      'application/fhir+json': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
      },
      'application/fhir+xml': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
      },
      'application/fido.trusted-apps+json': {
        compressible: true,
      },
      'application/fits': {
        source: 'iana',
      },
      'application/flexfec': {
        source: 'iana',
      },
      'application/font-sfnt': {
        source: 'iana',
      },
      'application/font-tdpfr': {
        source: 'iana',
        extensions: ['pfr'],
      },
      'application/font-woff': {
        source: 'iana',
        compressible: false,
      },
      'application/framework-attributes+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/geo+json': {
        source: 'iana',
        compressible: true,
        extensions: ['geojson'],
      },
      'application/geo+json-seq': {
        source: 'iana',
      },
      'application/geopackage+sqlite3': {
        source: 'iana',
      },
      'application/geoxacml+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/gltf-buffer': {
        source: 'iana',
      },
      'application/gml+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['gml'],
      },
      'application/gpx+xml': {
        source: 'apache',
        compressible: true,
        extensions: ['gpx'],
      },
      'application/gxf': {
        source: 'apache',
        extensions: ['gxf'],
      },
      'application/gzip': {
        source: 'iana',
        compressible: false,
        extensions: ['gz'],
      },
      'application/h224': {
        source: 'iana',
      },
      'application/held+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/hjson': {
        extensions: ['hjson'],
      },
      'application/http': {
        source: 'iana',
      },
      'application/hyperstudio': {
        source: 'iana',
        extensions: ['stk'],
      },
      'application/ibe-key-request+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/ibe-pkg-reply+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/ibe-pp-data': {
        source: 'iana',
      },
      'application/iges': {
        source: 'iana',
      },
      'application/im-iscomposing+xml': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
      },
      'application/index': {
        source: 'iana',
      },
      'application/index.cmd': {
        source: 'iana',
      },
      'application/index.obj': {
        source: 'iana',
      },
      'application/index.response': {
        source: 'iana',
      },
      'application/index.vnd': {
        source: 'iana',
      },
      'application/inkml+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['ink', 'inkml'],
      },
      'application/iotp': {
        source: 'iana',
      },
      'application/ipfix': {
        source: 'iana',
        extensions: ['ipfix'],
      },
      'application/ipp': {
        source: 'iana',
      },
      'application/isup': {
        source: 'iana',
      },
      'application/its+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['its'],
      },
      'application/java-archive': {
        source: 'apache',
        compressible: false,
        extensions: ['jar', 'war', 'ear'],
      },
      'application/java-serialized-object': {
        source: 'apache',
        compressible: false,
        extensions: ['ser'],
      },
      'application/java-vm': {
        source: 'apache',
        compressible: false,
        extensions: ['class'],
      },
      'application/javascript': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
        extensions: ['js', 'mjs'],
      },
      'application/jf2feed+json': {
        source: 'iana',
        compressible: true,
      },
      'application/jose': {
        source: 'iana',
      },
      'application/jose+json': {
        source: 'iana',
        compressible: true,
      },
      'application/jrd+json': {
        source: 'iana',
        compressible: true,
      },
      'application/jscalendar+json': {
        source: 'iana',
        compressible: true,
      },
      'application/json': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
        extensions: ['json', 'map'],
      },
      'application/json-patch+json': {
        source: 'iana',
        compressible: true,
      },
      'application/json-seq': {
        source: 'iana',
      },
      'application/json5': {
        extensions: ['json5'],
      },
      'application/jsonml+json': {
        source: 'apache',
        compressible: true,
        extensions: ['jsonml'],
      },
      'application/jwk+json': {
        source: 'iana',
        compressible: true,
      },
      'application/jwk-set+json': {
        source: 'iana',
        compressible: true,
      },
      'application/jwt': {
        source: 'iana',
      },
      'application/kpml-request+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/kpml-response+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/ld+json': {
        source: 'iana',
        compressible: true,
        extensions: ['jsonld'],
      },
      'application/lgr+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['lgr'],
      },
      'application/link-format': {
        source: 'iana',
      },
      'application/load-control+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/lost+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['lostxml'],
      },
      'application/lostsync+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/lpf+zip': {
        source: 'iana',
        compressible: false,
      },
      'application/lxf': {
        source: 'iana',
      },
      'application/mac-binhex40': {
        source: 'iana',
        extensions: ['hqx'],
      },
      'application/mac-compactpro': {
        source: 'apache',
        extensions: ['cpt'],
      },
      'application/macwriteii': {
        source: 'iana',
      },
      'application/mads+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['mads'],
      },
      'application/manifest+json': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
        extensions: ['webmanifest'],
      },
      'application/marc': {
        source: 'iana',
        extensions: ['mrc'],
      },
      'application/marcxml+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['mrcx'],
      },
      'application/mathematica': {
        source: 'iana',
        extensions: ['ma', 'nb', 'mb'],
      },
      'application/mathml+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['mathml'],
      },
      'application/mathml-content+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/mathml-presentation+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/mbms-associated-procedure-description+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/mbms-deregister+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/mbms-envelope+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/mbms-msk+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/mbms-msk-response+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/mbms-protection-description+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/mbms-reception-report+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/mbms-register+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/mbms-register-response+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/mbms-schedule+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/mbms-user-service-description+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/mbox': {
        source: 'iana',
        extensions: ['mbox'],
      },
      'application/media-policy-dataset+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['mpf'],
      },
      'application/media_control+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/mediaservercontrol+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['mscml'],
      },
      'application/merge-patch+json': {
        source: 'iana',
        compressible: true,
      },
      'application/metalink+xml': {
        source: 'apache',
        compressible: true,
        extensions: ['metalink'],
      },
      'application/metalink4+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['meta4'],
      },
      'application/mets+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['mets'],
      },
      'application/mf4': {
        source: 'iana',
      },
      'application/mikey': {
        source: 'iana',
      },
      'application/mipc': {
        source: 'iana',
      },
      'application/missing-blocks+cbor-seq': {
        source: 'iana',
      },
      'application/mmt-aei+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['maei'],
      },
      'application/mmt-usd+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['musd'],
      },
      'application/mods+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['mods'],
      },
      'application/moss-keys': {
        source: 'iana',
      },
      'application/moss-signature': {
        source: 'iana',
      },
      'application/mosskey-data': {
        source: 'iana',
      },
      'application/mosskey-request': {
        source: 'iana',
      },
      'application/mp21': {
        source: 'iana',
        extensions: ['m21', 'mp21'],
      },
      'application/mp4': {
        source: 'iana',
        extensions: ['mp4s', 'm4p'],
      },
      'application/mpeg4-generic': {
        source: 'iana',
      },
      'application/mpeg4-iod': {
        source: 'iana',
      },
      'application/mpeg4-iod-xmt': {
        source: 'iana',
      },
      'application/mrb-consumer+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/mrb-publish+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/msc-ivr+xml': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
      },
      'application/msc-mixer+xml': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
      },
      'application/msword': {
        source: 'iana',
        compressible: false,
        extensions: ['doc', 'dot'],
      },
      'application/mud+json': {
        source: 'iana',
        compressible: true,
      },
      'application/multipart-core': {
        source: 'iana',
      },
      'application/mxf': {
        source: 'iana',
        extensions: ['mxf'],
      },
      'application/n-quads': {
        source: 'iana',
        extensions: ['nq'],
      },
      'application/n-triples': {
        source: 'iana',
        extensions: ['nt'],
      },
      'application/nasdata': {
        source: 'iana',
      },
      'application/news-checkgroups': {
        source: 'iana',
        charset: 'US-ASCII',
      },
      'application/news-groupinfo': {
        source: 'iana',
        charset: 'US-ASCII',
      },
      'application/news-transmission': {
        source: 'iana',
      },
      'application/nlsml+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/node': {
        source: 'iana',
        extensions: ['cjs'],
      },
      'application/nss': {
        source: 'iana',
      },
      'application/oauth-authz-req+jwt': {
        source: 'iana',
      },
      'application/oblivious-dns-message': {
        source: 'iana',
      },
      'application/ocsp-request': {
        source: 'iana',
      },
      'application/ocsp-response': {
        source: 'iana',
      },
      'application/octet-stream': {
        source: 'iana',
        compressible: false,
        extensions: [
          'bin',
          'dms',
          'lrf',
          'mar',
          'so',
          'dist',
          'distz',
          'pkg',
          'bpk',
          'dump',
          'elc',
          'deploy',
          'exe',
          'dll',
          'deb',
          'dmg',
          'iso',
          'img',
          'msi',
          'msp',
          'msm',
          'buffer',
        ],
      },
      'application/oda': {
        source: 'iana',
        extensions: ['oda'],
      },
      'application/odm+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/odx': {
        source: 'iana',
      },
      'application/oebps-package+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['opf'],
      },
      'application/ogg': {
        source: 'iana',
        compressible: false,
        extensions: ['ogx'],
      },
      'application/omdoc+xml': {
        source: 'apache',
        compressible: true,
        extensions: ['omdoc'],
      },
      'application/onenote': {
        source: 'apache',
        extensions: ['onetoc', 'onetoc2', 'onetmp', 'onepkg'],
      },
      'application/opc-nodeset+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/oscore': {
        source: 'iana',
      },
      'application/oxps': {
        source: 'iana',
        extensions: ['oxps'],
      },
      'application/p21': {
        source: 'iana',
      },
      'application/p21+zip': {
        source: 'iana',
        compressible: false,
      },
      'application/p2p-overlay+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['relo'],
      },
      'application/parityfec': {
        source: 'iana',
      },
      'application/passport': {
        source: 'iana',
      },
      'application/patch-ops-error+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['xer'],
      },
      'application/pdf': {
        source: 'iana',
        compressible: false,
        extensions: ['pdf'],
      },
      'application/pdx': {
        source: 'iana',
      },
      'application/pem-certificate-chain': {
        source: 'iana',
      },
      'application/pgp-encrypted': {
        source: 'iana',
        compressible: false,
        extensions: ['pgp'],
      },
      'application/pgp-keys': {
        source: 'iana',
        extensions: ['asc'],
      },
      'application/pgp-signature': {
        source: 'iana',
        extensions: ['asc', 'sig'],
      },
      'application/pics-rules': {
        source: 'apache',
        extensions: ['prf'],
      },
      'application/pidf+xml': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
      },
      'application/pidf-diff+xml': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
      },
      'application/pkcs10': {
        source: 'iana',
        extensions: ['p10'],
      },
      'application/pkcs12': {
        source: 'iana',
      },
      'application/pkcs7-mime': {
        source: 'iana',
        extensions: ['p7m', 'p7c'],
      },
      'application/pkcs7-signature': {
        source: 'iana',
        extensions: ['p7s'],
      },
      'application/pkcs8': {
        source: 'iana',
        extensions: ['p8'],
      },
      'application/pkcs8-encrypted': {
        source: 'iana',
      },
      'application/pkix-attr-cert': {
        source: 'iana',
        extensions: ['ac'],
      },
      'application/pkix-cert': {
        source: 'iana',
        extensions: ['cer'],
      },
      'application/pkix-crl': {
        source: 'iana',
        extensions: ['crl'],
      },
      'application/pkix-pkipath': {
        source: 'iana',
        extensions: ['pkipath'],
      },
      'application/pkixcmp': {
        source: 'iana',
        extensions: ['pki'],
      },
      'application/pls+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['pls'],
      },
      'application/poc-settings+xml': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
      },
      'application/postscript': {
        source: 'iana',
        compressible: true,
        extensions: ['ai', 'eps', 'ps'],
      },
      'application/ppsp-tracker+json': {
        source: 'iana',
        compressible: true,
      },
      'application/problem+json': {
        source: 'iana',
        compressible: true,
      },
      'application/problem+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/provenance+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['provx'],
      },
      'application/prs.alvestrand.titrax-sheet': {
        source: 'iana',
      },
      'application/prs.cww': {
        source: 'iana',
        extensions: ['cww'],
      },
      'application/prs.cyn': {
        source: 'iana',
        charset: '7-BIT',
      },
      'application/prs.hpub+zip': {
        source: 'iana',
        compressible: false,
      },
      'application/prs.nprend': {
        source: 'iana',
      },
      'application/prs.plucker': {
        source: 'iana',
      },
      'application/prs.rdf-xml-crypt': {
        source: 'iana',
      },
      'application/prs.xsf+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/pskc+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['pskcxml'],
      },
      'application/pvd+json': {
        source: 'iana',
        compressible: true,
      },
      'application/qsig': {
        source: 'iana',
      },
      'application/raml+yaml': {
        compressible: true,
        extensions: ['raml'],
      },
      'application/raptorfec': {
        source: 'iana',
      },
      'application/rdap+json': {
        source: 'iana',
        compressible: true,
      },
      'application/rdf+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['rdf', 'owl'],
      },
      'application/reginfo+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['rif'],
      },
      'application/relax-ng-compact-syntax': {
        source: 'iana',
        extensions: ['rnc'],
      },
      'application/remote-printing': {
        source: 'iana',
      },
      'application/reputon+json': {
        source: 'iana',
        compressible: true,
      },
      'application/resource-lists+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['rl'],
      },
      'application/resource-lists-diff+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['rld'],
      },
      'application/rfc+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/riscos': {
        source: 'iana',
      },
      'application/rlmi+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/rls-services+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['rs'],
      },
      'application/route-apd+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['rapd'],
      },
      'application/route-s-tsid+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['sls'],
      },
      'application/route-usd+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['rusd'],
      },
      'application/rpki-ghostbusters': {
        source: 'iana',
        extensions: ['gbr'],
      },
      'application/rpki-manifest': {
        source: 'iana',
        extensions: ['mft'],
      },
      'application/rpki-publication': {
        source: 'iana',
      },
      'application/rpki-roa': {
        source: 'iana',
        extensions: ['roa'],
      },
      'application/rpki-updown': {
        source: 'iana',
      },
      'application/rsd+xml': {
        source: 'apache',
        compressible: true,
        extensions: ['rsd'],
      },
      'application/rss+xml': {
        source: 'apache',
        compressible: true,
        extensions: ['rss'],
      },
      'application/rtf': {
        source: 'iana',
        compressible: true,
        extensions: ['rtf'],
      },
      'application/rtploopback': {
        source: 'iana',
      },
      'application/rtx': {
        source: 'iana',
      },
      'application/samlassertion+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/samlmetadata+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/sarif+json': {
        source: 'iana',
        compressible: true,
      },
      'application/sarif-external-properties+json': {
        source: 'iana',
        compressible: true,
      },
      'application/sbe': {
        source: 'iana',
      },
      'application/sbml+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['sbml'],
      },
      'application/scaip+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/scim+json': {
        source: 'iana',
        compressible: true,
      },
      'application/scvp-cv-request': {
        source: 'iana',
        extensions: ['scq'],
      },
      'application/scvp-cv-response': {
        source: 'iana',
        extensions: ['scs'],
      },
      'application/scvp-vp-request': {
        source: 'iana',
        extensions: ['spq'],
      },
      'application/scvp-vp-response': {
        source: 'iana',
        extensions: ['spp'],
      },
      'application/sdp': {
        source: 'iana',
        extensions: ['sdp'],
      },
      'application/secevent+jwt': {
        source: 'iana',
      },
      'application/senml+cbor': {
        source: 'iana',
      },
      'application/senml+json': {
        source: 'iana',
        compressible: true,
      },
      'application/senml+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['senmlx'],
      },
      'application/senml-etch+cbor': {
        source: 'iana',
      },
      'application/senml-etch+json': {
        source: 'iana',
        compressible: true,
      },
      'application/senml-exi': {
        source: 'iana',
      },
      'application/sensml+cbor': {
        source: 'iana',
      },
      'application/sensml+json': {
        source: 'iana',
        compressible: true,
      },
      'application/sensml+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['sensmlx'],
      },
      'application/sensml-exi': {
        source: 'iana',
      },
      'application/sep+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/sep-exi': {
        source: 'iana',
      },
      'application/session-info': {
        source: 'iana',
      },
      'application/set-payment': {
        source: 'iana',
      },
      'application/set-payment-initiation': {
        source: 'iana',
        extensions: ['setpay'],
      },
      'application/set-registration': {
        source: 'iana',
      },
      'application/set-registration-initiation': {
        source: 'iana',
        extensions: ['setreg'],
      },
      'application/sgml': {
        source: 'iana',
      },
      'application/sgml-open-catalog': {
        source: 'iana',
      },
      'application/shf+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['shf'],
      },
      'application/sieve': {
        source: 'iana',
        extensions: ['siv', 'sieve'],
      },
      'application/simple-filter+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/simple-message-summary': {
        source: 'iana',
      },
      'application/simplesymbolcontainer': {
        source: 'iana',
      },
      'application/sipc': {
        source: 'iana',
      },
      'application/slate': {
        source: 'iana',
      },
      'application/smil': {
        source: 'iana',
      },
      'application/smil+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['smi', 'smil'],
      },
      'application/smpte336m': {
        source: 'iana',
      },
      'application/soap+fastinfoset': {
        source: 'iana',
      },
      'application/soap+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/sparql-query': {
        source: 'iana',
        extensions: ['rq'],
      },
      'application/sparql-results+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['srx'],
      },
      'application/spdx+json': {
        source: 'iana',
        compressible: true,
      },
      'application/spirits-event+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/sql': {
        source: 'iana',
      },
      'application/srgs': {
        source: 'iana',
        extensions: ['gram'],
      },
      'application/srgs+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['grxml'],
      },
      'application/sru+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['sru'],
      },
      'application/ssdl+xml': {
        source: 'apache',
        compressible: true,
        extensions: ['ssdl'],
      },
      'application/ssml+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['ssml'],
      },
      'application/stix+json': {
        source: 'iana',
        compressible: true,
      },
      'application/swid+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['swidtag'],
      },
      'application/tamp-apex-update': {
        source: 'iana',
      },
      'application/tamp-apex-update-confirm': {
        source: 'iana',
      },
      'application/tamp-community-update': {
        source: 'iana',
      },
      'application/tamp-community-update-confirm': {
        source: 'iana',
      },
      'application/tamp-error': {
        source: 'iana',
      },
      'application/tamp-sequence-adjust': {
        source: 'iana',
      },
      'application/tamp-sequence-adjust-confirm': {
        source: 'iana',
      },
      'application/tamp-status-query': {
        source: 'iana',
      },
      'application/tamp-status-response': {
        source: 'iana',
      },
      'application/tamp-update': {
        source: 'iana',
      },
      'application/tamp-update-confirm': {
        source: 'iana',
      },
      'application/tar': {
        compressible: true,
      },
      'application/taxii+json': {
        source: 'iana',
        compressible: true,
      },
      'application/td+json': {
        source: 'iana',
        compressible: true,
      },
      'application/tei+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['tei', 'teicorpus'],
      },
      'application/tetra_isi': {
        source: 'iana',
      },
      'application/thraud+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['tfi'],
      },
      'application/timestamp-query': {
        source: 'iana',
      },
      'application/timestamp-reply': {
        source: 'iana',
      },
      'application/timestamped-data': {
        source: 'iana',
        extensions: ['tsd'],
      },
      'application/tlsrpt+gzip': {
        source: 'iana',
      },
      'application/tlsrpt+json': {
        source: 'iana',
        compressible: true,
      },
      'application/tnauthlist': {
        source: 'iana',
      },
      'application/token-introspection+jwt': {
        source: 'iana',
      },
      'application/toml': {
        compressible: true,
        extensions: ['toml'],
      },
      'application/trickle-ice-sdpfrag': {
        source: 'iana',
      },
      'application/trig': {
        source: 'iana',
        extensions: ['trig'],
      },
      'application/ttml+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['ttml'],
      },
      'application/tve-trigger': {
        source: 'iana',
      },
      'application/tzif': {
        source: 'iana',
      },
      'application/tzif-leap': {
        source: 'iana',
      },
      'application/ubjson': {
        compressible: false,
        extensions: ['ubj'],
      },
      'application/ulpfec': {
        source: 'iana',
      },
      'application/urc-grpsheet+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/urc-ressheet+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['rsheet'],
      },
      'application/urc-targetdesc+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['td'],
      },
      'application/urc-uisocketdesc+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vcard+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vcard+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vemmi': {
        source: 'iana',
      },
      'application/vividence.scriptfile': {
        source: 'apache',
      },
      'application/vnd.1000minds.decision-model+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['1km'],
      },
      'application/vnd.3gpp-prose+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp-prose-pc3ch+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp-v2x-local-service-information': {
        source: 'iana',
      },
      'application/vnd.3gpp.5gnas': {
        source: 'iana',
      },
      'application/vnd.3gpp.access-transfer-events+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.bsf+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.gmop+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.gtpc': {
        source: 'iana',
      },
      'application/vnd.3gpp.interworking-data': {
        source: 'iana',
      },
      'application/vnd.3gpp.lpp': {
        source: 'iana',
      },
      'application/vnd.3gpp.mc-signalling-ear': {
        source: 'iana',
      },
      'application/vnd.3gpp.mcdata-affiliation-command+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mcdata-info+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mcdata-payload': {
        source: 'iana',
      },
      'application/vnd.3gpp.mcdata-service-config+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mcdata-signalling': {
        source: 'iana',
      },
      'application/vnd.3gpp.mcdata-ue-config+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mcdata-user-profile+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mcptt-affiliation-command+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mcptt-floor-request+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mcptt-info+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mcptt-location-info+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mcptt-mbms-usage-info+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mcptt-service-config+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mcptt-signed+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mcptt-ue-config+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mcptt-ue-init-config+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mcptt-user-profile+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mcvideo-affiliation-command+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mcvideo-affiliation-info+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mcvideo-info+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mcvideo-location-info+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mcvideo-mbms-usage-info+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mcvideo-service-config+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mcvideo-transmission-request+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mcvideo-ue-config+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mcvideo-user-profile+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mid-call+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.ngap': {
        source: 'iana',
      },
      'application/vnd.3gpp.pfcp': {
        source: 'iana',
      },
      'application/vnd.3gpp.pic-bw-large': {
        source: 'iana',
        extensions: ['plb'],
      },
      'application/vnd.3gpp.pic-bw-small': {
        source: 'iana',
        extensions: ['psb'],
      },
      'application/vnd.3gpp.pic-bw-var': {
        source: 'iana',
        extensions: ['pvb'],
      },
      'application/vnd.3gpp.s1ap': {
        source: 'iana',
      },
      'application/vnd.3gpp.sms': {
        source: 'iana',
      },
      'application/vnd.3gpp.sms+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.srvcc-ext+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.srvcc-info+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.state-and-event-info+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.ussd+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp2.bcmcsinfo+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp2.sms': {
        source: 'iana',
      },
      'application/vnd.3gpp2.tcap': {
        source: 'iana',
        extensions: ['tcap'],
      },
      'application/vnd.3lightssoftware.imagescal': {
        source: 'iana',
      },
      'application/vnd.3m.post-it-notes': {
        source: 'iana',
        extensions: ['pwn'],
      },
      'application/vnd.accpac.simply.aso': {
        source: 'iana',
        extensions: ['aso'],
      },
      'application/vnd.accpac.simply.imp': {
        source: 'iana',
        extensions: ['imp'],
      },
      'application/vnd.acucobol': {
        source: 'iana',
        extensions: ['acu'],
      },
      'application/vnd.acucorp': {
        source: 'iana',
        extensions: ['atc', 'acutc'],
      },
      'application/vnd.adobe.air-application-installer-package+zip': {
        source: 'apache',
        compressible: false,
        extensions: ['air'],
      },
      'application/vnd.adobe.flash.movie': {
        source: 'iana',
      },
      'application/vnd.adobe.formscentral.fcdt': {
        source: 'iana',
        extensions: ['fcdt'],
      },
      'application/vnd.adobe.fxp': {
        source: 'iana',
        extensions: ['fxp', 'fxpl'],
      },
      'application/vnd.adobe.partial-upload': {
        source: 'iana',
      },
      'application/vnd.adobe.xdp+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['xdp'],
      },
      'application/vnd.adobe.xfdf': {
        source: 'iana',
        extensions: ['xfdf'],
      },
      'application/vnd.aether.imp': {
        source: 'iana',
      },
      'application/vnd.afpc.afplinedata': {
        source: 'iana',
      },
      'application/vnd.afpc.afplinedata-pagedef': {
        source: 'iana',
      },
      'application/vnd.afpc.cmoca-cmresource': {
        source: 'iana',
      },
      'application/vnd.afpc.foca-charset': {
        source: 'iana',
      },
      'application/vnd.afpc.foca-codedfont': {
        source: 'iana',
      },
      'application/vnd.afpc.foca-codepage': {
        source: 'iana',
      },
      'application/vnd.afpc.modca': {
        source: 'iana',
      },
      'application/vnd.afpc.modca-cmtable': {
        source: 'iana',
      },
      'application/vnd.afpc.modca-formdef': {
        source: 'iana',
      },
      'application/vnd.afpc.modca-mediummap': {
        source: 'iana',
      },
      'application/vnd.afpc.modca-objectcontainer': {
        source: 'iana',
      },
      'application/vnd.afpc.modca-overlay': {
        source: 'iana',
      },
      'application/vnd.afpc.modca-pagesegment': {
        source: 'iana',
      },
      'application/vnd.age': {
        source: 'iana',
        extensions: ['age'],
      },
      'application/vnd.ah-barcode': {
        source: 'iana',
      },
      'application/vnd.ahead.space': {
        source: 'iana',
        extensions: ['ahead'],
      },
      'application/vnd.airzip.filesecure.azf': {
        source: 'iana',
        extensions: ['azf'],
      },
      'application/vnd.airzip.filesecure.azs': {
        source: 'iana',
        extensions: ['azs'],
      },
      'application/vnd.amadeus+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.amazon.ebook': {
        source: 'apache',
        extensions: ['azw'],
      },
      'application/vnd.amazon.mobi8-ebook': {
        source: 'iana',
      },
      'application/vnd.americandynamics.acc': {
        source: 'iana',
        extensions: ['acc'],
      },
      'application/vnd.amiga.ami': {
        source: 'iana',
        extensions: ['ami'],
      },
      'application/vnd.amundsen.maze+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.android.ota': {
        source: 'iana',
      },
      'application/vnd.android.package-archive': {
        source: 'apache',
        compressible: false,
        extensions: ['apk'],
      },
      'application/vnd.anki': {
        source: 'iana',
      },
      'application/vnd.anser-web-certificate-issue-initiation': {
        source: 'iana',
        extensions: ['cii'],
      },
      'application/vnd.anser-web-funds-transfer-initiation': {
        source: 'apache',
        extensions: ['fti'],
      },
      'application/vnd.antix.game-component': {
        source: 'iana',
        extensions: ['atx'],
      },
      'application/vnd.apache.arrow.file': {
        source: 'iana',
      },
      'application/vnd.apache.arrow.stream': {
        source: 'iana',
      },
      'application/vnd.apache.thrift.binary': {
        source: 'iana',
      },
      'application/vnd.apache.thrift.compact': {
        source: 'iana',
      },
      'application/vnd.apache.thrift.json': {
        source: 'iana',
      },
      'application/vnd.api+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.aplextor.warrp+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.apothekende.reservation+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.apple.installer+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['mpkg'],
      },
      'application/vnd.apple.keynote': {
        source: 'iana',
        extensions: ['key'],
      },
      'application/vnd.apple.mpegurl': {
        source: 'iana',
        extensions: ['m3u8'],
      },
      'application/vnd.apple.numbers': {
        source: 'iana',
        extensions: ['numbers'],
      },
      'application/vnd.apple.pages': {
        source: 'iana',
        extensions: ['pages'],
      },
      'application/vnd.apple.pkpass': {
        compressible: false,
        extensions: ['pkpass'],
      },
      'application/vnd.arastra.swi': {
        source: 'iana',
      },
      'application/vnd.aristanetworks.swi': {
        source: 'iana',
        extensions: ['swi'],
      },
      'application/vnd.artisan+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.artsquare': {
        source: 'iana',
      },
      'application/vnd.astraea-software.iota': {
        source: 'iana',
        extensions: ['iota'],
      },
      'application/vnd.audiograph': {
        source: 'iana',
        extensions: ['aep'],
      },
      'application/vnd.autopackage': {
        source: 'iana',
      },
      'application/vnd.avalon+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.avistar+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.balsamiq.bmml+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['bmml'],
      },
      'application/vnd.balsamiq.bmpr': {
        source: 'iana',
      },
      'application/vnd.banana-accounting': {
        source: 'iana',
      },
      'application/vnd.bbf.usp.error': {
        source: 'iana',
      },
      'application/vnd.bbf.usp.msg': {
        source: 'iana',
      },
      'application/vnd.bbf.usp.msg+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.bekitzur-stech+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.bint.med-content': {
        source: 'iana',
      },
      'application/vnd.biopax.rdf+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.blink-idb-value-wrapper': {
        source: 'iana',
      },
      'application/vnd.blueice.multipass': {
        source: 'iana',
        extensions: ['mpm'],
      },
      'application/vnd.bluetooth.ep.oob': {
        source: 'iana',
      },
      'application/vnd.bluetooth.le.oob': {
        source: 'iana',
      },
      'application/vnd.bmi': {
        source: 'iana',
        extensions: ['bmi'],
      },
      'application/vnd.bpf': {
        source: 'iana',
      },
      'application/vnd.bpf3': {
        source: 'iana',
      },
      'application/vnd.businessobjects': {
        source: 'iana',
        extensions: ['rep'],
      },
      'application/vnd.byu.uapi+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.cab-jscript': {
        source: 'iana',
      },
      'application/vnd.canon-cpdl': {
        source: 'iana',
      },
      'application/vnd.canon-lips': {
        source: 'iana',
      },
      'application/vnd.capasystems-pg+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.cendio.thinlinc.clientconf': {
        source: 'iana',
      },
      'application/vnd.century-systems.tcp_stream': {
        source: 'iana',
      },
      'application/vnd.chemdraw+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['cdxml'],
      },
      'application/vnd.chess-pgn': {
        source: 'iana',
      },
      'application/vnd.chipnuts.karaoke-mmd': {
        source: 'iana',
        extensions: ['mmd'],
      },
      'application/vnd.ciedi': {
        source: 'iana',
      },
      'application/vnd.cinderella': {
        source: 'iana',
        extensions: ['cdy'],
      },
      'application/vnd.cirpack.isdn-ext': {
        source: 'iana',
      },
      'application/vnd.citationstyles.style+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['csl'],
      },
      'application/vnd.claymore': {
        source: 'iana',
        extensions: ['cla'],
      },
      'application/vnd.cloanto.rp9': {
        source: 'iana',
        extensions: ['rp9'],
      },
      'application/vnd.clonk.c4group': {
        source: 'iana',
        extensions: ['c4g', 'c4d', 'c4f', 'c4p', 'c4u'],
      },
      'application/vnd.cluetrust.cartomobile-config': {
        source: 'iana',
        extensions: ['c11amc'],
      },
      'application/vnd.cluetrust.cartomobile-config-pkg': {
        source: 'iana',
        extensions: ['c11amz'],
      },
      'application/vnd.coffeescript': {
        source: 'iana',
      },
      'application/vnd.collabio.xodocuments.document': {
        source: 'iana',
      },
      'application/vnd.collabio.xodocuments.document-template': {
        source: 'iana',
      },
      'application/vnd.collabio.xodocuments.presentation': {
        source: 'iana',
      },
      'application/vnd.collabio.xodocuments.presentation-template': {
        source: 'iana',
      },
      'application/vnd.collabio.xodocuments.spreadsheet': {
        source: 'iana',
      },
      'application/vnd.collabio.xodocuments.spreadsheet-template': {
        source: 'iana',
      },
      'application/vnd.collection+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.collection.doc+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.collection.next+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.comicbook+zip': {
        source: 'iana',
        compressible: false,
      },
      'application/vnd.comicbook-rar': {
        source: 'iana',
      },
      'application/vnd.commerce-battelle': {
        source: 'iana',
      },
      'application/vnd.commonspace': {
        source: 'iana',
        extensions: ['csp'],
      },
      'application/vnd.contact.cmsg': {
        source: 'iana',
        extensions: ['cdbcmsg'],
      },
      'application/vnd.coreos.ignition+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.cosmocaller': {
        source: 'iana',
        extensions: ['cmc'],
      },
      'application/vnd.crick.clicker': {
        source: 'iana',
        extensions: ['clkx'],
      },
      'application/vnd.crick.clicker.keyboard': {
        source: 'iana',
        extensions: ['clkk'],
      },
      'application/vnd.crick.clicker.palette': {
        source: 'iana',
        extensions: ['clkp'],
      },
      'application/vnd.crick.clicker.template': {
        source: 'iana',
        extensions: ['clkt'],
      },
      'application/vnd.crick.clicker.wordbank': {
        source: 'iana',
        extensions: ['clkw'],
      },
      'application/vnd.criticaltools.wbs+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['wbs'],
      },
      'application/vnd.cryptii.pipe+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.crypto-shade-file': {
        source: 'iana',
      },
      'application/vnd.cryptomator.encrypted': {
        source: 'iana',
      },
      'application/vnd.cryptomator.vault': {
        source: 'iana',
      },
      'application/vnd.ctc-posml': {
        source: 'iana',
        extensions: ['pml'],
      },
      'application/vnd.ctct.ws+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.cups-pdf': {
        source: 'iana',
      },
      'application/vnd.cups-postscript': {
        source: 'iana',
      },
      'application/vnd.cups-ppd': {
        source: 'iana',
        extensions: ['ppd'],
      },
      'application/vnd.cups-raster': {
        source: 'iana',
      },
      'application/vnd.cups-raw': {
        source: 'iana',
      },
      'application/vnd.curl': {
        source: 'iana',
      },
      'application/vnd.curl.car': {
        source: 'apache',
        extensions: ['car'],
      },
      'application/vnd.curl.pcurl': {
        source: 'apache',
        extensions: ['pcurl'],
      },
      'application/vnd.cyan.dean.root+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.cybank': {
        source: 'iana',
      },
      'application/vnd.cyclonedx+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.cyclonedx+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.d2l.coursepackage1p0+zip': {
        source: 'iana',
        compressible: false,
      },
      'application/vnd.d3m-dataset': {
        source: 'iana',
      },
      'application/vnd.d3m-problem': {
        source: 'iana',
      },
      'application/vnd.dart': {
        source: 'iana',
        compressible: true,
        extensions: ['dart'],
      },
      'application/vnd.data-vision.rdz': {
        source: 'iana',
        extensions: ['rdz'],
      },
      'application/vnd.datapackage+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.dataresource+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.dbf': {
        source: 'iana',
        extensions: ['dbf'],
      },
      'application/vnd.debian.binary-package': {
        source: 'iana',
      },
      'application/vnd.dece.data': {
        source: 'iana',
        extensions: ['uvf', 'uvvf', 'uvd', 'uvvd'],
      },
      'application/vnd.dece.ttml+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['uvt', 'uvvt'],
      },
      'application/vnd.dece.unspecified': {
        source: 'iana',
        extensions: ['uvx', 'uvvx'],
      },
      'application/vnd.dece.zip': {
        source: 'iana',
        extensions: ['uvz', 'uvvz'],
      },
      'application/vnd.denovo.fcselayout-link': {
        source: 'iana',
        extensions: ['fe_launch'],
      },
      'application/vnd.desmume.movie': {
        source: 'iana',
      },
      'application/vnd.dir-bi.plate-dl-nosuffix': {
        source: 'iana',
      },
      'application/vnd.dm.delegation+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.dna': {
        source: 'iana',
        extensions: ['dna'],
      },
      'application/vnd.document+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.dolby.mlp': {
        source: 'apache',
        extensions: ['mlp'],
      },
      'application/vnd.dolby.mobile.1': {
        source: 'iana',
      },
      'application/vnd.dolby.mobile.2': {
        source: 'iana',
      },
      'application/vnd.doremir.scorecloud-binary-document': {
        source: 'iana',
      },
      'application/vnd.dpgraph': {
        source: 'iana',
        extensions: ['dpg'],
      },
      'application/vnd.dreamfactory': {
        source: 'iana',
        extensions: ['dfac'],
      },
      'application/vnd.drive+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.ds-keypoint': {
        source: 'apache',
        extensions: ['kpxx'],
      },
      'application/vnd.dtg.local': {
        source: 'iana',
      },
      'application/vnd.dtg.local.flash': {
        source: 'iana',
      },
      'application/vnd.dtg.local.html': {
        source: 'iana',
      },
      'application/vnd.dvb.ait': {
        source: 'iana',
        extensions: ['ait'],
      },
      'application/vnd.dvb.dvbisl+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.dvb.dvbj': {
        source: 'iana',
      },
      'application/vnd.dvb.esgcontainer': {
        source: 'iana',
      },
      'application/vnd.dvb.ipdcdftnotifaccess': {
        source: 'iana',
      },
      'application/vnd.dvb.ipdcesgaccess': {
        source: 'iana',
      },
      'application/vnd.dvb.ipdcesgaccess2': {
        source: 'iana',
      },
      'application/vnd.dvb.ipdcesgpdd': {
        source: 'iana',
      },
      'application/vnd.dvb.ipdcroaming': {
        source: 'iana',
      },
      'application/vnd.dvb.iptv.alfec-base': {
        source: 'iana',
      },
      'application/vnd.dvb.iptv.alfec-enhancement': {
        source: 'iana',
      },
      'application/vnd.dvb.notif-aggregate-root+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.dvb.notif-container+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.dvb.notif-generic+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.dvb.notif-ia-msglist+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.dvb.notif-ia-registration-request+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.dvb.notif-ia-registration-response+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.dvb.notif-init+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.dvb.pfr': {
        source: 'iana',
      },
      'application/vnd.dvb.service': {
        source: 'iana',
        extensions: ['svc'],
      },
      'application/vnd.dxr': {
        source: 'iana',
      },
      'application/vnd.dynageo': {
        source: 'iana',
        extensions: ['geo'],
      },
      'application/vnd.dzr': {
        source: 'iana',
      },
      'application/vnd.easykaraoke.cdgdownload': {
        source: 'iana',
      },
      'application/vnd.ecdis-update': {
        source: 'iana',
      },
      'application/vnd.ecip.rlp': {
        source: 'iana',
      },
      'application/vnd.eclipse.ditto+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.ecowin.chart': {
        source: 'iana',
        extensions: ['mag'],
      },
      'application/vnd.ecowin.filerequest': {
        source: 'iana',
      },
      'application/vnd.ecowin.fileupdate': {
        source: 'iana',
      },
      'application/vnd.ecowin.series': {
        source: 'iana',
      },
      'application/vnd.ecowin.seriesrequest': {
        source: 'iana',
      },
      'application/vnd.ecowin.seriesupdate': {
        source: 'iana',
      },
      'application/vnd.efi.img': {
        source: 'iana',
      },
      'application/vnd.efi.iso': {
        source: 'iana',
      },
      'application/vnd.emclient.accessrequest+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.enliven': {
        source: 'iana',
        extensions: ['nml'],
      },
      'application/vnd.enphase.envoy': {
        source: 'iana',
      },
      'application/vnd.eprints.data+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.epson.esf': {
        source: 'iana',
        extensions: ['esf'],
      },
      'application/vnd.epson.msf': {
        source: 'iana',
        extensions: ['msf'],
      },
      'application/vnd.epson.quickanime': {
        source: 'iana',
        extensions: ['qam'],
      },
      'application/vnd.epson.salt': {
        source: 'iana',
        extensions: ['slt'],
      },
      'application/vnd.epson.ssf': {
        source: 'iana',
        extensions: ['ssf'],
      },
      'application/vnd.ericsson.quickcall': {
        source: 'iana',
      },
      'application/vnd.espass-espass+zip': {
        source: 'iana',
        compressible: false,
      },
      'application/vnd.eszigno3+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['es3', 'et3'],
      },
      'application/vnd.etsi.aoc+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.etsi.asic-e+zip': {
        source: 'iana',
        compressible: false,
      },
      'application/vnd.etsi.asic-s+zip': {
        source: 'iana',
        compressible: false,
      },
      'application/vnd.etsi.cug+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.etsi.iptvcommand+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.etsi.iptvdiscovery+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.etsi.iptvprofile+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.etsi.iptvsad-bc+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.etsi.iptvsad-cod+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.etsi.iptvsad-npvr+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.etsi.iptvservice+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.etsi.iptvsync+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.etsi.iptvueprofile+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.etsi.mcid+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.etsi.mheg5': {
        source: 'iana',
      },
      'application/vnd.etsi.overload-control-policy-dataset+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.etsi.pstn+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.etsi.sci+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.etsi.simservs+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.etsi.timestamp-token': {
        source: 'iana',
      },
      'application/vnd.etsi.tsl+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.etsi.tsl.der': {
        source: 'iana',
      },
      'application/vnd.eu.kasparian.car+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.eudora.data': {
        source: 'iana',
      },
      'application/vnd.evolv.ecig.profile': {
        source: 'iana',
      },
      'application/vnd.evolv.ecig.settings': {
        source: 'iana',
      },
      'application/vnd.evolv.ecig.theme': {
        source: 'iana',
      },
      'application/vnd.exstream-empower+zip': {
        source: 'iana',
        compressible: false,
      },
      'application/vnd.exstream-package': {
        source: 'iana',
      },
      'application/vnd.ezpix-album': {
        source: 'iana',
        extensions: ['ez2'],
      },
      'application/vnd.ezpix-package': {
        source: 'iana',
        extensions: ['ez3'],
      },
      'application/vnd.f-secure.mobile': {
        source: 'iana',
      },
      'application/vnd.familysearch.gedcom+zip': {
        source: 'iana',
        compressible: false,
      },
      'application/vnd.fastcopy-disk-image': {
        source: 'iana',
      },
      'application/vnd.fdf': {
        source: 'iana',
        extensions: ['fdf'],
      },
      'application/vnd.fdsn.mseed': {
        source: 'iana',
        extensions: ['mseed'],
      },
      'application/vnd.fdsn.seed': {
        source: 'iana',
        extensions: ['seed', 'dataless'],
      },
      'application/vnd.ffsns': {
        source: 'iana',
      },
      'application/vnd.ficlab.flb+zip': {
        source: 'iana',
        compressible: false,
      },
      'application/vnd.filmit.zfc': {
        source: 'iana',
      },
      'application/vnd.fints': {
        source: 'iana',
      },
      'application/vnd.firemonkeys.cloudcell': {
        source: 'iana',
      },
      'application/vnd.flographit': {
        source: 'iana',
        extensions: ['gph'],
      },
      'application/vnd.fluxtime.clip': {
        source: 'iana',
        extensions: ['ftc'],
      },
      'application/vnd.font-fontforge-sfd': {
        source: 'iana',
      },
      'application/vnd.framemaker': {
        source: 'iana',
        extensions: ['fm', 'frame', 'maker', 'book'],
      },
      'application/vnd.frogans.fnc': {
        source: 'iana',
        extensions: ['fnc'],
      },
      'application/vnd.frogans.ltf': {
        source: 'iana',
        extensions: ['ltf'],
      },
      'application/vnd.fsc.weblaunch': {
        source: 'iana',
        extensions: ['fsc'],
      },
      'application/vnd.fujifilm.fb.docuworks': {
        source: 'iana',
      },
      'application/vnd.fujifilm.fb.docuworks.binder': {
        source: 'iana',
      },
      'application/vnd.fujifilm.fb.docuworks.container': {
        source: 'iana',
      },
      'application/vnd.fujifilm.fb.jfi+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.fujitsu.oasys': {
        source: 'iana',
        extensions: ['oas'],
      },
      'application/vnd.fujitsu.oasys2': {
        source: 'iana',
        extensions: ['oa2'],
      },
      'application/vnd.fujitsu.oasys3': {
        source: 'iana',
        extensions: ['oa3'],
      },
      'application/vnd.fujitsu.oasysgp': {
        source: 'iana',
        extensions: ['fg5'],
      },
      'application/vnd.fujitsu.oasysprs': {
        source: 'iana',
        extensions: ['bh2'],
      },
      'application/vnd.fujixerox.art-ex': {
        source: 'iana',
      },
      'application/vnd.fujixerox.art4': {
        source: 'iana',
      },
      'application/vnd.fujixerox.ddd': {
        source: 'iana',
        extensions: ['ddd'],
      },
      'application/vnd.fujixerox.docuworks': {
        source: 'iana',
        extensions: ['xdw'],
      },
      'application/vnd.fujixerox.docuworks.binder': {
        source: 'iana',
        extensions: ['xbd'],
      },
      'application/vnd.fujixerox.docuworks.container': {
        source: 'iana',
      },
      'application/vnd.fujixerox.hbpl': {
        source: 'iana',
      },
      'application/vnd.fut-misnet': {
        source: 'iana',
      },
      'application/vnd.futoin+cbor': {
        source: 'iana',
      },
      'application/vnd.futoin+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.fuzzysheet': {
        source: 'iana',
        extensions: ['fzs'],
      },
      'application/vnd.genomatix.tuxedo': {
        source: 'iana',
        extensions: ['txd'],
      },
      'application/vnd.gentics.grd+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.geo+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.geocube+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.geogebra.file': {
        source: 'iana',
        extensions: ['ggb'],
      },
      'application/vnd.geogebra.slides': {
        source: 'iana',
      },
      'application/vnd.geogebra.tool': {
        source: 'iana',
        extensions: ['ggt'],
      },
      'application/vnd.geometry-explorer': {
        source: 'iana',
        extensions: ['gex', 'gre'],
      },
      'application/vnd.geonext': {
        source: 'iana',
        extensions: ['gxt'],
      },
      'application/vnd.geoplan': {
        source: 'iana',
        extensions: ['g2w'],
      },
      'application/vnd.geospace': {
        source: 'iana',
        extensions: ['g3w'],
      },
      'application/vnd.gerber': {
        source: 'iana',
      },
      'application/vnd.globalplatform.card-content-mgt': {
        source: 'iana',
      },
      'application/vnd.globalplatform.card-content-mgt-response': {
        source: 'iana',
      },
      'application/vnd.gmx': {
        source: 'iana',
        extensions: ['gmx'],
      },
      'application/vnd.google-apps.document': {
        compressible: false,
        extensions: ['gdoc'],
      },
      'application/vnd.google-apps.presentation': {
        compressible: false,
        extensions: ['gslides'],
      },
      'application/vnd.google-apps.spreadsheet': {
        compressible: false,
        extensions: ['gsheet'],
      },
      'application/vnd.google-earth.kml+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['kml'],
      },
      'application/vnd.google-earth.kmz': {
        source: 'iana',
        compressible: false,
        extensions: ['kmz'],
      },
      'application/vnd.gov.sk.e-form+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.gov.sk.e-form+zip': {
        source: 'iana',
        compressible: false,
      },
      'application/vnd.gov.sk.xmldatacontainer+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.grafeq': {
        source: 'iana',
        extensions: ['gqf', 'gqs'],
      },
      'application/vnd.gridmp': {
        source: 'iana',
      },
      'application/vnd.groove-account': {
        source: 'iana',
        extensions: ['gac'],
      },
      'application/vnd.groove-help': {
        source: 'iana',
        extensions: ['ghf'],
      },
      'application/vnd.groove-identity-message': {
        source: 'iana',
        extensions: ['gim'],
      },
      'application/vnd.groove-injector': {
        source: 'iana',
        extensions: ['grv'],
      },
      'application/vnd.groove-tool-message': {
        source: 'iana',
        extensions: ['gtm'],
      },
      'application/vnd.groove-tool-template': {
        source: 'iana',
        extensions: ['tpl'],
      },
      'application/vnd.groove-vcard': {
        source: 'iana',
        extensions: ['vcg'],
      },
      'application/vnd.hal+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.hal+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['hal'],
      },
      'application/vnd.handheld-entertainment+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['zmm'],
      },
      'application/vnd.hbci': {
        source: 'iana',
        extensions: ['hbci'],
      },
      'application/vnd.hc+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.hcl-bireports': {
        source: 'iana',
      },
      'application/vnd.hdt': {
        source: 'iana',
      },
      'application/vnd.heroku+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.hhe.lesson-player': {
        source: 'iana',
        extensions: ['les'],
      },
      'application/vnd.hl7cda+xml': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
      },
      'application/vnd.hl7v2+xml': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
      },
      'application/vnd.hp-hpgl': {
        source: 'iana',
        extensions: ['hpgl'],
      },
      'application/vnd.hp-hpid': {
        source: 'iana',
        extensions: ['hpid'],
      },
      'application/vnd.hp-hps': {
        source: 'iana',
        extensions: ['hps'],
      },
      'application/vnd.hp-jlyt': {
        source: 'iana',
        extensions: ['jlt'],
      },
      'application/vnd.hp-pcl': {
        source: 'iana',
        extensions: ['pcl'],
      },
      'application/vnd.hp-pclxl': {
        source: 'iana',
        extensions: ['pclxl'],
      },
      'application/vnd.httphone': {
        source: 'iana',
      },
      'application/vnd.hydrostatix.sof-data': {
        source: 'iana',
        extensions: ['sfd-hdstx'],
      },
      'application/vnd.hyper+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.hyper-item+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.hyperdrive+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.hzn-3d-crossword': {
        source: 'iana',
      },
      'application/vnd.ibm.afplinedata': {
        source: 'iana',
      },
      'application/vnd.ibm.electronic-media': {
        source: 'iana',
      },
      'application/vnd.ibm.minipay': {
        source: 'iana',
        extensions: ['mpy'],
      },
      'application/vnd.ibm.modcap': {
        source: 'iana',
        extensions: ['afp', 'listafp', 'list3820'],
      },
      'application/vnd.ibm.rights-management': {
        source: 'iana',
        extensions: ['irm'],
      },
      'application/vnd.ibm.secure-container': {
        source: 'iana',
        extensions: ['sc'],
      },
      'application/vnd.iccprofile': {
        source: 'iana',
        extensions: ['icc', 'icm'],
      },
      'application/vnd.ieee.1905': {
        source: 'iana',
      },
      'application/vnd.igloader': {
        source: 'iana',
        extensions: ['igl'],
      },
      'application/vnd.imagemeter.folder+zip': {
        source: 'iana',
        compressible: false,
      },
      'application/vnd.imagemeter.image+zip': {
        source: 'iana',
        compressible: false,
      },
      'application/vnd.immervision-ivp': {
        source: 'iana',
        extensions: ['ivp'],
      },
      'application/vnd.immervision-ivu': {
        source: 'iana',
        extensions: ['ivu'],
      },
      'application/vnd.ims.imsccv1p1': {
        source: 'iana',
      },
      'application/vnd.ims.imsccv1p2': {
        source: 'iana',
      },
      'application/vnd.ims.imsccv1p3': {
        source: 'iana',
      },
      'application/vnd.ims.lis.v2.result+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.ims.lti.v2.toolconsumerprofile+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.ims.lti.v2.toolproxy+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.ims.lti.v2.toolproxy.id+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.ims.lti.v2.toolsettings+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.ims.lti.v2.toolsettings.simple+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.informedcontrol.rms+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.informix-visionary': {
        source: 'iana',
      },
      'application/vnd.infotech.project': {
        source: 'iana',
      },
      'application/vnd.infotech.project+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.innopath.wamp.notification': {
        source: 'iana',
      },
      'application/vnd.insors.igm': {
        source: 'iana',
        extensions: ['igm'],
      },
      'application/vnd.intercon.formnet': {
        source: 'iana',
        extensions: ['xpw', 'xpx'],
      },
      'application/vnd.intergeo': {
        source: 'iana',
        extensions: ['i2g'],
      },
      'application/vnd.intertrust.digibox': {
        source: 'iana',
      },
      'application/vnd.intertrust.nncp': {
        source: 'iana',
      },
      'application/vnd.intu.qbo': {
        source: 'iana',
        extensions: ['qbo'],
      },
      'application/vnd.intu.qfx': {
        source: 'iana',
        extensions: ['qfx'],
      },
      'application/vnd.iptc.g2.catalogitem+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.iptc.g2.conceptitem+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.iptc.g2.knowledgeitem+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.iptc.g2.newsitem+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.iptc.g2.newsmessage+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.iptc.g2.packageitem+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.iptc.g2.planningitem+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.ipunplugged.rcprofile': {
        source: 'iana',
        extensions: ['rcprofile'],
      },
      'application/vnd.irepository.package+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['irp'],
      },
      'application/vnd.is-xpr': {
        source: 'iana',
        extensions: ['xpr'],
      },
      'application/vnd.isac.fcs': {
        source: 'iana',
        extensions: ['fcs'],
      },
      'application/vnd.iso11783-10+zip': {
        source: 'iana',
        compressible: false,
      },
      'application/vnd.jam': {
        source: 'iana',
        extensions: ['jam'],
      },
      'application/vnd.japannet-directory-service': {
        source: 'iana',
      },
      'application/vnd.japannet-jpnstore-wakeup': {
        source: 'iana',
      },
      'application/vnd.japannet-payment-wakeup': {
        source: 'iana',
      },
      'application/vnd.japannet-registration': {
        source: 'iana',
      },
      'application/vnd.japannet-registration-wakeup': {
        source: 'iana',
      },
      'application/vnd.japannet-setstore-wakeup': {
        source: 'iana',
      },
      'application/vnd.japannet-verification': {
        source: 'iana',
      },
      'application/vnd.japannet-verification-wakeup': {
        source: 'iana',
      },
      'application/vnd.jcp.javame.midlet-rms': {
        source: 'iana',
        extensions: ['rms'],
      },
      'application/vnd.jisp': {
        source: 'iana',
        extensions: ['jisp'],
      },
      'application/vnd.joost.joda-archive': {
        source: 'iana',
        extensions: ['joda'],
      },
      'application/vnd.jsk.isdn-ngn': {
        source: 'iana',
      },
      'application/vnd.kahootz': {
        source: 'iana',
        extensions: ['ktz', 'ktr'],
      },
      'application/vnd.kde.karbon': {
        source: 'iana',
        extensions: ['karbon'],
      },
      'application/vnd.kde.kchart': {
        source: 'iana',
        extensions: ['chrt'],
      },
      'application/vnd.kde.kformula': {
        source: 'iana',
        extensions: ['kfo'],
      },
      'application/vnd.kde.kivio': {
        source: 'iana',
        extensions: ['flw'],
      },
      'application/vnd.kde.kontour': {
        source: 'iana',
        extensions: ['kon'],
      },
      'application/vnd.kde.kpresenter': {
        source: 'iana',
        extensions: ['kpr', 'kpt'],
      },
      'application/vnd.kde.kspread': {
        source: 'iana',
        extensions: ['ksp'],
      },
      'application/vnd.kde.kword': {
        source: 'iana',
        extensions: ['kwd', 'kwt'],
      },
      'application/vnd.kenameaapp': {
        source: 'iana',
        extensions: ['htke'],
      },
      'application/vnd.kidspiration': {
        source: 'iana',
        extensions: ['kia'],
      },
      'application/vnd.kinar': {
        source: 'iana',
        extensions: ['kne', 'knp'],
      },
      'application/vnd.koan': {
        source: 'iana',
        extensions: ['skp', 'skd', 'skt', 'skm'],
      },
      'application/vnd.kodak-descriptor': {
        source: 'iana',
        extensions: ['sse'],
      },
      'application/vnd.las': {
        source: 'iana',
      },
      'application/vnd.las.las+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.las.las+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['lasxml'],
      },
      'application/vnd.laszip': {
        source: 'iana',
      },
      'application/vnd.leap+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.liberty-request+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.llamagraphics.life-balance.desktop': {
        source: 'iana',
        extensions: ['lbd'],
      },
      'application/vnd.llamagraphics.life-balance.exchange+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['lbe'],
      },
      'application/vnd.logipipe.circuit+zip': {
        source: 'iana',
        compressible: false,
      },
      'application/vnd.loom': {
        source: 'iana',
      },
      'application/vnd.lotus-1-2-3': {
        source: 'iana',
        extensions: ['123'],
      },
      'application/vnd.lotus-approach': {
        source: 'iana',
        extensions: ['apr'],
      },
      'application/vnd.lotus-freelance': {
        source: 'iana',
        extensions: ['pre'],
      },
      'application/vnd.lotus-notes': {
        source: 'iana',
        extensions: ['nsf'],
      },
      'application/vnd.lotus-organizer': {
        source: 'iana',
        extensions: ['org'],
      },
      'application/vnd.lotus-screencam': {
        source: 'iana',
        extensions: ['scm'],
      },
      'application/vnd.lotus-wordpro': {
        source: 'iana',
        extensions: ['lwp'],
      },
      'application/vnd.macports.portpkg': {
        source: 'iana',
        extensions: ['portpkg'],
      },
      'application/vnd.mapbox-vector-tile': {
        source: 'iana',
        extensions: ['mvt'],
      },
      'application/vnd.marlin.drm.actiontoken+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.marlin.drm.conftoken+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.marlin.drm.license+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.marlin.drm.mdcf': {
        source: 'iana',
      },
      'application/vnd.mason+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.maxar.archive.3tz+zip': {
        source: 'iana',
        compressible: false,
      },
      'application/vnd.maxmind.maxmind-db': {
        source: 'iana',
      },
      'application/vnd.mcd': {
        source: 'iana',
        extensions: ['mcd'],
      },
      'application/vnd.medcalcdata': {
        source: 'iana',
        extensions: ['mc1'],
      },
      'application/vnd.mediastation.cdkey': {
        source: 'iana',
        extensions: ['cdkey'],
      },
      'application/vnd.meridian-slingshot': {
        source: 'iana',
      },
      'application/vnd.mfer': {
        source: 'iana',
        extensions: ['mwf'],
      },
      'application/vnd.mfmp': {
        source: 'iana',
        extensions: ['mfm'],
      },
      'application/vnd.micro+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.micrografx.flo': {
        source: 'iana',
        extensions: ['flo'],
      },
      'application/vnd.micrografx.igx': {
        source: 'iana',
        extensions: ['igx'],
      },
      'application/vnd.microsoft.portable-executable': {
        source: 'iana',
      },
      'application/vnd.microsoft.windows.thumbnail-cache': {
        source: 'iana',
      },
      'application/vnd.miele+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.mif': {
        source: 'iana',
        extensions: ['mif'],
      },
      'application/vnd.minisoft-hp3000-save': {
        source: 'iana',
      },
      'application/vnd.mitsubishi.misty-guard.trustweb': {
        source: 'iana',
      },
      'application/vnd.mobius.daf': {
        source: 'iana',
        extensions: ['daf'],
      },
      'application/vnd.mobius.dis': {
        source: 'iana',
        extensions: ['dis'],
      },
      'application/vnd.mobius.mbk': {
        source: 'iana',
        extensions: ['mbk'],
      },
      'application/vnd.mobius.mqy': {
        source: 'iana',
        extensions: ['mqy'],
      },
      'application/vnd.mobius.msl': {
        source: 'iana',
        extensions: ['msl'],
      },
      'application/vnd.mobius.plc': {
        source: 'iana',
        extensions: ['plc'],
      },
      'application/vnd.mobius.txf': {
        source: 'iana',
        extensions: ['txf'],
      },
      'application/vnd.mophun.application': {
        source: 'iana',
        extensions: ['mpn'],
      },
      'application/vnd.mophun.certificate': {
        source: 'iana',
        extensions: ['mpc'],
      },
      'application/vnd.motorola.flexsuite': {
        source: 'iana',
      },
      'application/vnd.motorola.flexsuite.adsi': {
        source: 'iana',
      },
      'application/vnd.motorola.flexsuite.fis': {
        source: 'iana',
      },
      'application/vnd.motorola.flexsuite.gotap': {
        source: 'iana',
      },
      'application/vnd.motorola.flexsuite.kmr': {
        source: 'iana',
      },
      'application/vnd.motorola.flexsuite.ttc': {
        source: 'iana',
      },
      'application/vnd.motorola.flexsuite.wem': {
        source: 'iana',
      },
      'application/vnd.motorola.iprm': {
        source: 'iana',
      },
      'application/vnd.mozilla.xul+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['xul'],
      },
      'application/vnd.ms-3mfdocument': {
        source: 'iana',
      },
      'application/vnd.ms-artgalry': {
        source: 'iana',
        extensions: ['cil'],
      },
      'application/vnd.ms-asf': {
        source: 'iana',
      },
      'application/vnd.ms-cab-compressed': {
        source: 'iana',
        extensions: ['cab'],
      },
      'application/vnd.ms-color.iccprofile': {
        source: 'apache',
      },
      'application/vnd.ms-excel': {
        source: 'iana',
        compressible: false,
        extensions: ['xls', 'xlm', 'xla', 'xlc', 'xlt', 'xlw'],
      },
      'application/vnd.ms-excel.addin.macroenabled.12': {
        source: 'iana',
        extensions: ['xlam'],
      },
      'application/vnd.ms-excel.sheet.binary.macroenabled.12': {
        source: 'iana',
        extensions: ['xlsb'],
      },
      'application/vnd.ms-excel.sheet.macroenabled.12': {
        source: 'iana',
        extensions: ['xlsm'],
      },
      'application/vnd.ms-excel.template.macroenabled.12': {
        source: 'iana',
        extensions: ['xltm'],
      },
      'application/vnd.ms-fontobject': {
        source: 'iana',
        compressible: true,
        extensions: ['eot'],
      },
      'application/vnd.ms-htmlhelp': {
        source: 'iana',
        extensions: ['chm'],
      },
      'application/vnd.ms-ims': {
        source: 'iana',
        extensions: ['ims'],
      },
      'application/vnd.ms-lrm': {
        source: 'iana',
        extensions: ['lrm'],
      },
      'application/vnd.ms-office.activex+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.ms-officetheme': {
        source: 'iana',
        extensions: ['thmx'],
      },
      'application/vnd.ms-opentype': {
        source: 'apache',
        compressible: true,
      },
      'application/vnd.ms-outlook': {
        compressible: false,
        extensions: ['msg'],
      },
      'application/vnd.ms-package.obfuscated-opentype': {
        source: 'apache',
      },
      'application/vnd.ms-pki.seccat': {
        source: 'apache',
        extensions: ['cat'],
      },
      'application/vnd.ms-pki.stl': {
        source: 'apache',
        extensions: ['stl'],
      },
      'application/vnd.ms-playready.initiator+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.ms-powerpoint': {
        source: 'iana',
        compressible: false,
        extensions: ['ppt', 'pps', 'pot'],
      },
      'application/vnd.ms-powerpoint.addin.macroenabled.12': {
        source: 'iana',
        extensions: ['ppam'],
      },
      'application/vnd.ms-powerpoint.presentation.macroenabled.12': {
        source: 'iana',
        extensions: ['pptm'],
      },
      'application/vnd.ms-powerpoint.slide.macroenabled.12': {
        source: 'iana',
        extensions: ['sldm'],
      },
      'application/vnd.ms-powerpoint.slideshow.macroenabled.12': {
        source: 'iana',
        extensions: ['ppsm'],
      },
      'application/vnd.ms-powerpoint.template.macroenabled.12': {
        source: 'iana',
        extensions: ['potm'],
      },
      'application/vnd.ms-printdevicecapabilities+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.ms-printing.printticket+xml': {
        source: 'apache',
        compressible: true,
      },
      'application/vnd.ms-printschematicket+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.ms-project': {
        source: 'iana',
        extensions: ['mpp', 'mpt'],
      },
      'application/vnd.ms-tnef': {
        source: 'iana',
      },
      'application/vnd.ms-windows.devicepairing': {
        source: 'iana',
      },
      'application/vnd.ms-windows.nwprinting.oob': {
        source: 'iana',
      },
      'application/vnd.ms-windows.printerpairing': {
        source: 'iana',
      },
      'application/vnd.ms-windows.wsd.oob': {
        source: 'iana',
      },
      'application/vnd.ms-wmdrm.lic-chlg-req': {
        source: 'iana',
      },
      'application/vnd.ms-wmdrm.lic-resp': {
        source: 'iana',
      },
      'application/vnd.ms-wmdrm.meter-chlg-req': {
        source: 'iana',
      },
      'application/vnd.ms-wmdrm.meter-resp': {
        source: 'iana',
      },
      'application/vnd.ms-word.document.macroenabled.12': {
        source: 'iana',
        extensions: ['docm'],
      },
      'application/vnd.ms-word.template.macroenabled.12': {
        source: 'iana',
        extensions: ['dotm'],
      },
      'application/vnd.ms-works': {
        source: 'iana',
        extensions: ['wps', 'wks', 'wcm', 'wdb'],
      },
      'application/vnd.ms-wpl': {
        source: 'iana',
        extensions: ['wpl'],
      },
      'application/vnd.ms-xpsdocument': {
        source: 'iana',
        compressible: false,
        extensions: ['xps'],
      },
      'application/vnd.msa-disk-image': {
        source: 'iana',
      },
      'application/vnd.mseq': {
        source: 'iana',
        extensions: ['mseq'],
      },
      'application/vnd.msign': {
        source: 'iana',
      },
      'application/vnd.multiad.creator': {
        source: 'iana',
      },
      'application/vnd.multiad.creator.cif': {
        source: 'iana',
      },
      'application/vnd.music-niff': {
        source: 'iana',
      },
      'application/vnd.musician': {
        source: 'iana',
        extensions: ['mus'],
      },
      'application/vnd.muvee.style': {
        source: 'iana',
        extensions: ['msty'],
      },
      'application/vnd.mynfc': {
        source: 'iana',
        extensions: ['taglet'],
      },
      'application/vnd.nacamar.ybrid+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.ncd.control': {
        source: 'iana',
      },
      'application/vnd.ncd.reference': {
        source: 'iana',
      },
      'application/vnd.nearst.inv+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.nebumind.line': {
        source: 'iana',
      },
      'application/vnd.nervana': {
        source: 'iana',
      },
      'application/vnd.netfpx': {
        source: 'iana',
      },
      'application/vnd.neurolanguage.nlu': {
        source: 'iana',
        extensions: ['nlu'],
      },
      'application/vnd.nimn': {
        source: 'iana',
      },
      'application/vnd.nintendo.nitro.rom': {
        source: 'iana',
      },
      'application/vnd.nintendo.snes.rom': {
        source: 'iana',
      },
      'application/vnd.nitf': {
        source: 'iana',
        extensions: ['ntf', 'nitf'],
      },
      'application/vnd.noblenet-directory': {
        source: 'iana',
        extensions: ['nnd'],
      },
      'application/vnd.noblenet-sealer': {
        source: 'iana',
        extensions: ['nns'],
      },
      'application/vnd.noblenet-web': {
        source: 'iana',
        extensions: ['nnw'],
      },
      'application/vnd.nokia.catalogs': {
        source: 'iana',
      },
      'application/vnd.nokia.conml+wbxml': {
        source: 'iana',
      },
      'application/vnd.nokia.conml+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.nokia.iptv.config+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.nokia.isds-radio-presets': {
        source: 'iana',
      },
      'application/vnd.nokia.landmark+wbxml': {
        source: 'iana',
      },
      'application/vnd.nokia.landmark+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.nokia.landmarkcollection+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.nokia.n-gage.ac+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['ac'],
      },
      'application/vnd.nokia.n-gage.data': {
        source: 'iana',
        extensions: ['ngdat'],
      },
      'application/vnd.nokia.n-gage.symbian.install': {
        source: 'iana',
        extensions: ['n-gage'],
      },
      'application/vnd.nokia.ncd': {
        source: 'iana',
      },
      'application/vnd.nokia.pcd+wbxml': {
        source: 'iana',
      },
      'application/vnd.nokia.pcd+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.nokia.radio-preset': {
        source: 'iana',
        extensions: ['rpst'],
      },
      'application/vnd.nokia.radio-presets': {
        source: 'iana',
        extensions: ['rpss'],
      },
      'application/vnd.novadigm.edm': {
        source: 'iana',
        extensions: ['edm'],
      },
      'application/vnd.novadigm.edx': {
        source: 'iana',
        extensions: ['edx'],
      },
      'application/vnd.novadigm.ext': {
        source: 'iana',
        extensions: ['ext'],
      },
      'application/vnd.ntt-local.content-share': {
        source: 'iana',
      },
      'application/vnd.ntt-local.file-transfer': {
        source: 'iana',
      },
      'application/vnd.ntt-local.ogw_remote-access': {
        source: 'iana',
      },
      'application/vnd.ntt-local.sip-ta_remote': {
        source: 'iana',
      },
      'application/vnd.ntt-local.sip-ta_tcp_stream': {
        source: 'iana',
      },
      'application/vnd.oasis.opendocument.chart': {
        source: 'iana',
        extensions: ['odc'],
      },
      'application/vnd.oasis.opendocument.chart-template': {
        source: 'iana',
        extensions: ['otc'],
      },
      'application/vnd.oasis.opendocument.database': {
        source: 'iana',
        extensions: ['odb'],
      },
      'application/vnd.oasis.opendocument.formula': {
        source: 'iana',
        extensions: ['odf'],
      },
      'application/vnd.oasis.opendocument.formula-template': {
        source: 'iana',
        extensions: ['odft'],
      },
      'application/vnd.oasis.opendocument.graphics': {
        source: 'iana',
        compressible: false,
        extensions: ['odg'],
      },
      'application/vnd.oasis.opendocument.graphics-template': {
        source: 'iana',
        extensions: ['otg'],
      },
      'application/vnd.oasis.opendocument.image': {
        source: 'iana',
        extensions: ['odi'],
      },
      'application/vnd.oasis.opendocument.image-template': {
        source: 'iana',
        extensions: ['oti'],
      },
      'application/vnd.oasis.opendocument.presentation': {
        source: 'iana',
        compressible: false,
        extensions: ['odp'],
      },
      'application/vnd.oasis.opendocument.presentation-template': {
        source: 'iana',
        extensions: ['otp'],
      },
      'application/vnd.oasis.opendocument.spreadsheet': {
        source: 'iana',
        compressible: false,
        extensions: ['ods'],
      },
      'application/vnd.oasis.opendocument.spreadsheet-template': {
        source: 'iana',
        extensions: ['ots'],
      },
      'application/vnd.oasis.opendocument.text': {
        source: 'iana',
        compressible: false,
        extensions: ['odt'],
      },
      'application/vnd.oasis.opendocument.text-master': {
        source: 'iana',
        extensions: ['odm'],
      },
      'application/vnd.oasis.opendocument.text-template': {
        source: 'iana',
        extensions: ['ott'],
      },
      'application/vnd.oasis.opendocument.text-web': {
        source: 'iana',
        extensions: ['oth'],
      },
      'application/vnd.obn': {
        source: 'iana',
      },
      'application/vnd.ocf+cbor': {
        source: 'iana',
      },
      'application/vnd.oci.image.manifest.v1+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oftn.l10n+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oipf.contentaccessdownload+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oipf.contentaccessstreaming+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oipf.cspg-hexbinary': {
        source: 'iana',
      },
      'application/vnd.oipf.dae.svg+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oipf.dae.xhtml+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oipf.mippvcontrolmessage+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oipf.pae.gem': {
        source: 'iana',
      },
      'application/vnd.oipf.spdiscovery+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oipf.spdlist+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oipf.ueprofile+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oipf.userprofile+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.olpc-sugar': {
        source: 'iana',
        extensions: ['xo'],
      },
      'application/vnd.oma-scws-config': {
        source: 'iana',
      },
      'application/vnd.oma-scws-http-request': {
        source: 'iana',
      },
      'application/vnd.oma-scws-http-response': {
        source: 'iana',
      },
      'application/vnd.oma.bcast.associated-procedure-parameter+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oma.bcast.drm-trigger+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oma.bcast.imd+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oma.bcast.ltkm': {
        source: 'iana',
      },
      'application/vnd.oma.bcast.notification+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oma.bcast.provisioningtrigger': {
        source: 'iana',
      },
      'application/vnd.oma.bcast.sgboot': {
        source: 'iana',
      },
      'application/vnd.oma.bcast.sgdd+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oma.bcast.sgdu': {
        source: 'iana',
      },
      'application/vnd.oma.bcast.simple-symbol-container': {
        source: 'iana',
      },
      'application/vnd.oma.bcast.smartcard-trigger+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oma.bcast.sprov+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oma.bcast.stkm': {
        source: 'iana',
      },
      'application/vnd.oma.cab-address-book+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oma.cab-feature-handler+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oma.cab-pcc+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oma.cab-subs-invite+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oma.cab-user-prefs+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oma.dcd': {
        source: 'iana',
      },
      'application/vnd.oma.dcdc': {
        source: 'iana',
      },
      'application/vnd.oma.dd2+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['dd2'],
      },
      'application/vnd.oma.drm.risd+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oma.group-usage-list+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oma.lwm2m+cbor': {
        source: 'iana',
      },
      'application/vnd.oma.lwm2m+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oma.lwm2m+tlv': {
        source: 'iana',
      },
      'application/vnd.oma.pal+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oma.poc.detailed-progress-report+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oma.poc.final-report+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oma.poc.groups+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oma.poc.invocation-descriptor+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oma.poc.optimized-progress-report+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oma.push': {
        source: 'iana',
      },
      'application/vnd.oma.scidm.messages+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oma.xcap-directory+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.omads-email+xml': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
      },
      'application/vnd.omads-file+xml': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
      },
      'application/vnd.omads-folder+xml': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
      },
      'application/vnd.omaloc-supl-init': {
        source: 'iana',
      },
      'application/vnd.onepager': {
        source: 'iana',
      },
      'application/vnd.onepagertamp': {
        source: 'iana',
      },
      'application/vnd.onepagertamx': {
        source: 'iana',
      },
      'application/vnd.onepagertat': {
        source: 'iana',
      },
      'application/vnd.onepagertatp': {
        source: 'iana',
      },
      'application/vnd.onepagertatx': {
        source: 'iana',
      },
      'application/vnd.openblox.game+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['obgx'],
      },
      'application/vnd.openblox.game-binary': {
        source: 'iana',
      },
      'application/vnd.openeye.oeb': {
        source: 'iana',
      },
      'application/vnd.openofficeorg.extension': {
        source: 'apache',
        extensions: ['oxt'],
      },
      'application/vnd.openstreetmap.data+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['osm'],
      },
      'application/vnd.opentimestamps.ots': {
        source: 'iana',
      },
      'application/vnd.openxmlformats-officedocument.custom-properties+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.openxmlformats-officedocument.customxmlproperties+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.openxmlformats-officedocument.drawing+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.openxmlformats-officedocument.drawingml.chart+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.extended-properties+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.presentationml.comments+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.presentationml.presentation':
        {
          source: 'iana',
          compressible: false,
          extensions: ['pptx'],
        },
      'application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.presentationml.presprops+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.presentationml.slide': {
        source: 'iana',
        extensions: ['sldx'],
      },
      'application/vnd.openxmlformats-officedocument.presentationml.slide+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.presentationml.slideshow':
        {
          source: 'iana',
          extensions: ['ppsx'],
        },
      'application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.presentationml.tags+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.openxmlformats-officedocument.presentationml.template': {
        source: 'iana',
        extensions: ['potx'],
      },
      'application/vnd.openxmlformats-officedocument.presentationml.template.main+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': {
        source: 'iana',
        compressible: false,
        extensions: ['xlsx'],
      },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.template': {
        source: 'iana',
        extensions: ['xltx'],
      },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.theme+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.openxmlformats-officedocument.themeoverride+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.openxmlformats-officedocument.vmldrawing': {
        source: 'iana',
      },
      'application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.wordprocessingml.document':
        {
          source: 'iana',
          compressible: false,
          extensions: ['docx'],
        },
      'application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.wordprocessingml.template':
        {
          source: 'iana',
          extensions: ['dotx'],
        },
      'application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-package.core-properties+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-package.relationships+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oracle.resource+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.orange.indata': {
        source: 'iana',
      },
      'application/vnd.osa.netdeploy': {
        source: 'iana',
      },
      'application/vnd.osgeo.mapguide.package': {
        source: 'iana',
        extensions: ['mgp'],
      },
      'application/vnd.osgi.bundle': {
        source: 'iana',
      },
      'application/vnd.osgi.dp': {
        source: 'iana',
        extensions: ['dp'],
      },
      'application/vnd.osgi.subsystem': {
        source: 'iana',
        extensions: ['esa'],
      },
      'application/vnd.otps.ct-kip+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oxli.countgraph': {
        source: 'iana',
      },
      'application/vnd.pagerduty+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.palm': {
        source: 'iana',
        extensions: ['pdb', 'pqa', 'oprc'],
      },
      'application/vnd.panoply': {
        source: 'iana',
      },
      'application/vnd.paos.xml': {
        source: 'iana',
      },
      'application/vnd.patentdive': {
        source: 'iana',
      },
      'application/vnd.patientecommsdoc': {
        source: 'iana',
      },
      'application/vnd.pawaafile': {
        source: 'iana',
        extensions: ['paw'],
      },
      'application/vnd.pcos': {
        source: 'iana',
      },
      'application/vnd.pg.format': {
        source: 'iana',
        extensions: ['str'],
      },
      'application/vnd.pg.osasli': {
        source: 'iana',
        extensions: ['ei6'],
      },
      'application/vnd.piaccess.application-licence': {
        source: 'iana',
      },
      'application/vnd.picsel': {
        source: 'iana',
        extensions: ['efif'],
      },
      'application/vnd.pmi.widget': {
        source: 'iana',
        extensions: ['wg'],
      },
      'application/vnd.poc.group-advertisement+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.pocketlearn': {
        source: 'iana',
        extensions: ['plf'],
      },
      'application/vnd.powerbuilder6': {
        source: 'iana',
        extensions: ['pbd'],
      },
      'application/vnd.powerbuilder6-s': {
        source: 'iana',
      },
      'application/vnd.powerbuilder7': {
        source: 'iana',
      },
      'application/vnd.powerbuilder7-s': {
        source: 'iana',
      },
      'application/vnd.powerbuilder75': {
        source: 'iana',
      },
      'application/vnd.powerbuilder75-s': {
        source: 'iana',
      },
      'application/vnd.preminet': {
        source: 'iana',
      },
      'application/vnd.previewsystems.box': {
        source: 'iana',
        extensions: ['box'],
      },
      'application/vnd.proteus.magazine': {
        source: 'iana',
        extensions: ['mgz'],
      },
      'application/vnd.psfs': {
        source: 'iana',
      },
      'application/vnd.publishare-delta-tree': {
        source: 'iana',
        extensions: ['qps'],
      },
      'application/vnd.pvi.ptid1': {
        source: 'iana',
        extensions: ['ptid'],
      },
      'application/vnd.pwg-multiplexed': {
        source: 'iana',
      },
      'application/vnd.pwg-xhtml-print+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.qualcomm.brew-app-res': {
        source: 'iana',
      },
      'application/vnd.quarantainenet': {
        source: 'iana',
      },
      'application/vnd.quark.quarkxpress': {
        source: 'iana',
        extensions: ['qxd', 'qxt', 'qwd', 'qwt', 'qxl', 'qxb'],
      },
      'application/vnd.quobject-quoxdocument': {
        source: 'iana',
      },
      'application/vnd.radisys.moml+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.radisys.msml+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.radisys.msml-audit+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.radisys.msml-audit-conf+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.radisys.msml-audit-conn+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.radisys.msml-audit-dialog+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.radisys.msml-audit-stream+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.radisys.msml-conf+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.radisys.msml-dialog+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.radisys.msml-dialog-base+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.radisys.msml-dialog-fax-detect+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.radisys.msml-dialog-fax-sendrecv+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.radisys.msml-dialog-group+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.radisys.msml-dialog-speech+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.radisys.msml-dialog-transform+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.rainstor.data': {
        source: 'iana',
      },
      'application/vnd.rapid': {
        source: 'iana',
      },
      'application/vnd.rar': {
        source: 'iana',
        extensions: ['rar'],
      },
      'application/vnd.realvnc.bed': {
        source: 'iana',
        extensions: ['bed'],
      },
      'application/vnd.recordare.musicxml': {
        source: 'iana',
        extensions: ['mxl'],
      },
      'application/vnd.recordare.musicxml+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['musicxml'],
      },
      'application/vnd.renlearn.rlprint': {
        source: 'iana',
      },
      'application/vnd.resilient.logic': {
        source: 'iana',
      },
      'application/vnd.restful+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.rig.cryptonote': {
        source: 'iana',
        extensions: ['cryptonote'],
      },
      'application/vnd.rim.cod': {
        source: 'apache',
        extensions: ['cod'],
      },
      'application/vnd.rn-realmedia': {
        source: 'apache',
        extensions: ['rm'],
      },
      'application/vnd.rn-realmedia-vbr': {
        source: 'apache',
        extensions: ['rmvb'],
      },
      'application/vnd.route66.link66+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['link66'],
      },
      'application/vnd.rs-274x': {
        source: 'iana',
      },
      'application/vnd.ruckus.download': {
        source: 'iana',
      },
      'application/vnd.s3sms': {
        source: 'iana',
      },
      'application/vnd.sailingtracker.track': {
        source: 'iana',
        extensions: ['st'],
      },
      'application/vnd.sar': {
        source: 'iana',
      },
      'application/vnd.sbm.cid': {
        source: 'iana',
      },
      'application/vnd.sbm.mid2': {
        source: 'iana',
      },
      'application/vnd.scribus': {
        source: 'iana',
      },
      'application/vnd.sealed.3df': {
        source: 'iana',
      },
      'application/vnd.sealed.csf': {
        source: 'iana',
      },
      'application/vnd.sealed.doc': {
        source: 'iana',
      },
      'application/vnd.sealed.eml': {
        source: 'iana',
      },
      'application/vnd.sealed.mht': {
        source: 'iana',
      },
      'application/vnd.sealed.net': {
        source: 'iana',
      },
      'application/vnd.sealed.ppt': {
        source: 'iana',
      },
      'application/vnd.sealed.tiff': {
        source: 'iana',
      },
      'application/vnd.sealed.xls': {
        source: 'iana',
      },
      'application/vnd.sealedmedia.softseal.html': {
        source: 'iana',
      },
      'application/vnd.sealedmedia.softseal.pdf': {
        source: 'iana',
      },
      'application/vnd.seemail': {
        source: 'iana',
        extensions: ['see'],
      },
      'application/vnd.seis+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.sema': {
        source: 'iana',
        extensions: ['sema'],
      },
      'application/vnd.semd': {
        source: 'iana',
        extensions: ['semd'],
      },
      'application/vnd.semf': {
        source: 'iana',
        extensions: ['semf'],
      },
      'application/vnd.shade-save-file': {
        source: 'iana',
      },
      'application/vnd.shana.informed.formdata': {
        source: 'iana',
        extensions: ['ifm'],
      },
      'application/vnd.shana.informed.formtemplate': {
        source: 'iana',
        extensions: ['itp'],
      },
      'application/vnd.shana.informed.interchange': {
        source: 'iana',
        extensions: ['iif'],
      },
      'application/vnd.shana.informed.package': {
        source: 'iana',
        extensions: ['ipk'],
      },
      'application/vnd.shootproof+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.shopkick+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.shp': {
        source: 'iana',
      },
      'application/vnd.shx': {
        source: 'iana',
      },
      'application/vnd.sigrok.session': {
        source: 'iana',
      },
      'application/vnd.simtech-mindmapper': {
        source: 'iana',
        extensions: ['twd', 'twds'],
      },
      'application/vnd.siren+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.smaf': {
        source: 'iana',
        extensions: ['mmf'],
      },
      'application/vnd.smart.notebook': {
        source: 'iana',
      },
      'application/vnd.smart.teacher': {
        source: 'iana',
        extensions: ['teacher'],
      },
      'application/vnd.snesdev-page-table': {
        source: 'iana',
      },
      'application/vnd.software602.filler.form+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['fo'],
      },
      'application/vnd.software602.filler.form-xml-zip': {
        source: 'iana',
      },
      'application/vnd.solent.sdkm+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['sdkm', 'sdkd'],
      },
      'application/vnd.spotfire.dxp': {
        source: 'iana',
        extensions: ['dxp'],
      },
      'application/vnd.spotfire.sfs': {
        source: 'iana',
        extensions: ['sfs'],
      },
      'application/vnd.sqlite3': {
        source: 'iana',
      },
      'application/vnd.sss-cod': {
        source: 'iana',
      },
      'application/vnd.sss-dtf': {
        source: 'iana',
      },
      'application/vnd.sss-ntf': {
        source: 'iana',
      },
      'application/vnd.stardivision.calc': {
        source: 'apache',
        extensions: ['sdc'],
      },
      'application/vnd.stardivision.draw': {
        source: 'apache',
        extensions: ['sda'],
      },
      'application/vnd.stardivision.impress': {
        source: 'apache',
        extensions: ['sdd'],
      },
      'application/vnd.stardivision.math': {
        source: 'apache',
        extensions: ['smf'],
      },
      'application/vnd.stardivision.writer': {
        source: 'apache',
        extensions: ['sdw', 'vor'],
      },
      'application/vnd.stardivision.writer-global': {
        source: 'apache',
        extensions: ['sgl'],
      },
      'application/vnd.stepmania.package': {
        source: 'iana',
        extensions: ['smzip'],
      },
      'application/vnd.stepmania.stepchart': {
        source: 'iana',
        extensions: ['sm'],
      },
      'application/vnd.street-stream': {
        source: 'iana',
      },
      'application/vnd.sun.wadl+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['wadl'],
      },
      'application/vnd.sun.xml.calc': {
        source: 'apache',
        extensions: ['sxc'],
      },
      'application/vnd.sun.xml.calc.template': {
        source: 'apache',
        extensions: ['stc'],
      },
      'application/vnd.sun.xml.draw': {
        source: 'apache',
        extensions: ['sxd'],
      },
      'application/vnd.sun.xml.draw.template': {
        source: 'apache',
        extensions: ['std'],
      },
      'application/vnd.sun.xml.impress': {
        source: 'apache',
        extensions: ['sxi'],
      },
      'application/vnd.sun.xml.impress.template': {
        source: 'apache',
        extensions: ['sti'],
      },
      'application/vnd.sun.xml.math': {
        source: 'apache',
        extensions: ['sxm'],
      },
      'application/vnd.sun.xml.writer': {
        source: 'apache',
        extensions: ['sxw'],
      },
      'application/vnd.sun.xml.writer.global': {
        source: 'apache',
        extensions: ['sxg'],
      },
      'application/vnd.sun.xml.writer.template': {
        source: 'apache',
        extensions: ['stw'],
      },
      'application/vnd.sus-calendar': {
        source: 'iana',
        extensions: ['sus', 'susp'],
      },
      'application/vnd.svd': {
        source: 'iana',
        extensions: ['svd'],
      },
      'application/vnd.swiftview-ics': {
        source: 'iana',
      },
      'application/vnd.sycle+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.syft+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.symbian.install': {
        source: 'apache',
        extensions: ['sis', 'sisx'],
      },
      'application/vnd.syncml+xml': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
        extensions: ['xsm'],
      },
      'application/vnd.syncml.dm+wbxml': {
        source: 'iana',
        charset: 'UTF-8',
        extensions: ['bdm'],
      },
      'application/vnd.syncml.dm+xml': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
        extensions: ['xdm'],
      },
      'application/vnd.syncml.dm.notification': {
        source: 'iana',
      },
      'application/vnd.syncml.dmddf+wbxml': {
        source: 'iana',
      },
      'application/vnd.syncml.dmddf+xml': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
        extensions: ['ddf'],
      },
      'application/vnd.syncml.dmtnds+wbxml': {
        source: 'iana',
      },
      'application/vnd.syncml.dmtnds+xml': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
      },
      'application/vnd.syncml.ds.notification': {
        source: 'iana',
      },
      'application/vnd.tableschema+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.tao.intent-module-archive': {
        source: 'iana',
        extensions: ['tao'],
      },
      'application/vnd.tcpdump.pcap': {
        source: 'iana',
        extensions: ['pcap', 'cap', 'dmp'],
      },
      'application/vnd.think-cell.ppttc+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.tmd.mediaflex.api+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.tml': {
        source: 'iana',
      },
      'application/vnd.tmobile-livetv': {
        source: 'iana',
        extensions: ['tmo'],
      },
      'application/vnd.tri.onesource': {
        source: 'iana',
      },
      'application/vnd.trid.tpt': {
        source: 'iana',
        extensions: ['tpt'],
      },
      'application/vnd.triscape.mxs': {
        source: 'iana',
        extensions: ['mxs'],
      },
      'application/vnd.trueapp': {
        source: 'iana',
        extensions: ['tra'],
      },
      'application/vnd.truedoc': {
        source: 'iana',
      },
      'application/vnd.ubisoft.webplayer': {
        source: 'iana',
      },
      'application/vnd.ufdl': {
        source: 'iana',
        extensions: ['ufd', 'ufdl'],
      },
      'application/vnd.uiq.theme': {
        source: 'iana',
        extensions: ['utz'],
      },
      'application/vnd.umajin': {
        source: 'iana',
        extensions: ['umj'],
      },
      'application/vnd.unity': {
        source: 'iana',
        extensions: ['unityweb'],
      },
      'application/vnd.uoml+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['uoml'],
      },
      'application/vnd.uplanet.alert': {
        source: 'iana',
      },
      'application/vnd.uplanet.alert-wbxml': {
        source: 'iana',
      },
      'application/vnd.uplanet.bearer-choice': {
        source: 'iana',
      },
      'application/vnd.uplanet.bearer-choice-wbxml': {
        source: 'iana',
      },
      'application/vnd.uplanet.cacheop': {
        source: 'iana',
      },
      'application/vnd.uplanet.cacheop-wbxml': {
        source: 'iana',
      },
      'application/vnd.uplanet.channel': {
        source: 'iana',
      },
      'application/vnd.uplanet.channel-wbxml': {
        source: 'iana',
      },
      'application/vnd.uplanet.list': {
        source: 'iana',
      },
      'application/vnd.uplanet.list-wbxml': {
        source: 'iana',
      },
      'application/vnd.uplanet.listcmd': {
        source: 'iana',
      },
      'application/vnd.uplanet.listcmd-wbxml': {
        source: 'iana',
      },
      'application/vnd.uplanet.signal': {
        source: 'iana',
      },
      'application/vnd.uri-map': {
        source: 'iana',
      },
      'application/vnd.valve.source.material': {
        source: 'iana',
      },
      'application/vnd.vcx': {
        source: 'iana',
        extensions: ['vcx'],
      },
      'application/vnd.vd-study': {
        source: 'iana',
      },
      'application/vnd.vectorworks': {
        source: 'iana',
      },
      'application/vnd.vel+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.verimatrix.vcas': {
        source: 'iana',
      },
      'application/vnd.veritone.aion+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.veryant.thin': {
        source: 'iana',
      },
      'application/vnd.ves.encrypted': {
        source: 'iana',
      },
      'application/vnd.vidsoft.vidconference': {
        source: 'iana',
      },
      'application/vnd.visio': {
        source: 'iana',
        extensions: ['vsd', 'vst', 'vss', 'vsw'],
      },
      'application/vnd.visionary': {
        source: 'iana',
        extensions: ['vis'],
      },
      'application/vnd.vividence.scriptfile': {
        source: 'iana',
      },
      'application/vnd.vsf': {
        source: 'iana',
        extensions: ['vsf'],
      },
      'application/vnd.wap.sic': {
        source: 'iana',
      },
      'application/vnd.wap.slc': {
        source: 'iana',
      },
      'application/vnd.wap.wbxml': {
        source: 'iana',
        charset: 'UTF-8',
        extensions: ['wbxml'],
      },
      'application/vnd.wap.wmlc': {
        source: 'iana',
        extensions: ['wmlc'],
      },
      'application/vnd.wap.wmlscriptc': {
        source: 'iana',
        extensions: ['wmlsc'],
      },
      'application/vnd.webturbo': {
        source: 'iana',
        extensions: ['wtb'],
      },
      'application/vnd.wfa.dpp': {
        source: 'iana',
      },
      'application/vnd.wfa.p2p': {
        source: 'iana',
      },
      'application/vnd.wfa.wsc': {
        source: 'iana',
      },
      'application/vnd.windows.devicepairing': {
        source: 'iana',
      },
      'application/vnd.wmc': {
        source: 'iana',
      },
      'application/vnd.wmf.bootstrap': {
        source: 'iana',
      },
      'application/vnd.wolfram.mathematica': {
        source: 'iana',
      },
      'application/vnd.wolfram.mathematica.package': {
        source: 'iana',
      },
      'application/vnd.wolfram.player': {
        source: 'iana',
        extensions: ['nbp'],
      },
      'application/vnd.wordperfect': {
        source: 'iana',
        extensions: ['wpd'],
      },
      'application/vnd.wqd': {
        source: 'iana',
        extensions: ['wqd'],
      },
      'application/vnd.wrq-hp3000-labelled': {
        source: 'iana',
      },
      'application/vnd.wt.stf': {
        source: 'iana',
        extensions: ['stf'],
      },
      'application/vnd.wv.csp+wbxml': {
        source: 'iana',
      },
      'application/vnd.wv.csp+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.wv.ssp+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.xacml+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.xara': {
        source: 'iana',
        extensions: ['xar'],
      },
      'application/vnd.xfdl': {
        source: 'iana',
        extensions: ['xfdl'],
      },
      'application/vnd.xfdl.webform': {
        source: 'iana',
      },
      'application/vnd.xmi+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.xmpie.cpkg': {
        source: 'iana',
      },
      'application/vnd.xmpie.dpkg': {
        source: 'iana',
      },
      'application/vnd.xmpie.plan': {
        source: 'iana',
      },
      'application/vnd.xmpie.ppkg': {
        source: 'iana',
      },
      'application/vnd.xmpie.xlim': {
        source: 'iana',
      },
      'application/vnd.yamaha.hv-dic': {
        source: 'iana',
        extensions: ['hvd'],
      },
      'application/vnd.yamaha.hv-script': {
        source: 'iana',
        extensions: ['hvs'],
      },
      'application/vnd.yamaha.hv-voice': {
        source: 'iana',
        extensions: ['hvp'],
      },
      'application/vnd.yamaha.openscoreformat': {
        source: 'iana',
        extensions: ['osf'],
      },
      'application/vnd.yamaha.openscoreformat.osfpvg+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['osfpvg'],
      },
      'application/vnd.yamaha.remote-setup': {
        source: 'iana',
      },
      'application/vnd.yamaha.smaf-audio': {
        source: 'iana',
        extensions: ['saf'],
      },
      'application/vnd.yamaha.smaf-phrase': {
        source: 'iana',
        extensions: ['spf'],
      },
      'application/vnd.yamaha.through-ngn': {
        source: 'iana',
      },
      'application/vnd.yamaha.tunnel-udpencap': {
        source: 'iana',
      },
      'application/vnd.yaoweme': {
        source: 'iana',
      },
      'application/vnd.yellowriver-custom-menu': {
        source: 'iana',
        extensions: ['cmp'],
      },
      'application/vnd.youtube.yt': {
        source: 'iana',
      },
      'application/vnd.zul': {
        source: 'iana',
        extensions: ['zir', 'zirz'],
      },
      'application/vnd.zzazz.deck+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['zaz'],
      },
      'application/voicexml+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['vxml'],
      },
      'application/voucher-cms+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vq-rtcpxr': {
        source: 'iana',
      },
      'application/wasm': {
        source: 'iana',
        compressible: true,
        extensions: ['wasm'],
      },
      'application/watcherinfo+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['wif'],
      },
      'application/webpush-options+json': {
        source: 'iana',
        compressible: true,
      },
      'application/whoispp-query': {
        source: 'iana',
      },
      'application/whoispp-response': {
        source: 'iana',
      },
      'application/widget': {
        source: 'iana',
        extensions: ['wgt'],
      },
      'application/winhlp': {
        source: 'apache',
        extensions: ['hlp'],
      },
      'application/wita': {
        source: 'iana',
      },
      'application/wordperfect5.1': {
        source: 'iana',
      },
      'application/wsdl+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['wsdl'],
      },
      'application/wspolicy+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['wspolicy'],
      },
      'application/x-7z-compressed': {
        source: 'apache',
        compressible: false,
        extensions: ['7z'],
      },
      'application/x-abiword': {
        source: 'apache',
        extensions: ['abw'],
      },
      'application/x-ace-compressed': {
        source: 'apache',
        extensions: ['ace'],
      },
      'application/x-amf': {
        source: 'apache',
      },
      'application/x-apple-diskimage': {
        source: 'apache',
        extensions: ['dmg'],
      },
      'application/x-arj': {
        compressible: false,
        extensions: ['arj'],
      },
      'application/x-authorware-bin': {
        source: 'apache',
        extensions: ['aab', 'x32', 'u32', 'vox'],
      },
      'application/x-authorware-map': {
        source: 'apache',
        extensions: ['aam'],
      },
      'application/x-authorware-seg': {
        source: 'apache',
        extensions: ['aas'],
      },
      'application/x-bcpio': {
        source: 'apache',
        extensions: ['bcpio'],
      },
      'application/x-bdoc': {
        compressible: false,
        extensions: ['bdoc'],
      },
      'application/x-bittorrent': {
        source: 'apache',
        extensions: ['torrent'],
      },
      'application/x-blorb': {
        source: 'apache',
        extensions: ['blb', 'blorb'],
      },
      'application/x-bzip': {
        source: 'apache',
        compressible: false,
        extensions: ['bz'],
      },
      'application/x-bzip2': {
        source: 'apache',
        compressible: false,
        extensions: ['bz2', 'boz'],
      },
      'application/x-cbr': {
        source: 'apache',
        extensions: ['cbr', 'cba', 'cbt', 'cbz', 'cb7'],
      },
      'application/x-cdlink': {
        source: 'apache',
        extensions: ['vcd'],
      },
      'application/x-cfs-compressed': {
        source: 'apache',
        extensions: ['cfs'],
      },
      'application/x-chat': {
        source: 'apache',
        extensions: ['chat'],
      },
      'application/x-chess-pgn': {
        source: 'apache',
        extensions: ['pgn'],
      },
      'application/x-chrome-extension': {
        extensions: ['crx'],
      },
      'application/x-cocoa': {
        source: 'nginx',
        extensions: ['cco'],
      },
      'application/x-compress': {
        source: 'apache',
      },
      'application/x-conference': {
        source: 'apache',
        extensions: ['nsc'],
      },
      'application/x-cpio': {
        source: 'apache',
        extensions: ['cpio'],
      },
      'application/x-csh': {
        source: 'apache',
        extensions: ['csh'],
      },
      'application/x-deb': {
        compressible: false,
      },
      'application/x-debian-package': {
        source: 'apache',
        extensions: ['deb', 'udeb'],
      },
      'application/x-dgc-compressed': {
        source: 'apache',
        extensions: ['dgc'],
      },
      'application/x-director': {
        source: 'apache',
        extensions: [
          'dir',
          'dcr',
          'dxr',
          'cst',
          'cct',
          'cxt',
          'w3d',
          'fgd',
          'swa',
        ],
      },
      'application/x-doom': {
        source: 'apache',
        extensions: ['wad'],
      },
      'application/x-dtbncx+xml': {
        source: 'apache',
        compressible: true,
        extensions: ['ncx'],
      },
      'application/x-dtbook+xml': {
        source: 'apache',
        compressible: true,
        extensions: ['dtb'],
      },
      'application/x-dtbresource+xml': {
        source: 'apache',
        compressible: true,
        extensions: ['res'],
      },
      'application/x-dvi': {
        source: 'apache',
        compressible: false,
        extensions: ['dvi'],
      },
      'application/x-envoy': {
        source: 'apache',
        extensions: ['evy'],
      },
      'application/x-eva': {
        source: 'apache',
        extensions: ['eva'],
      },
      'application/x-font-bdf': {
        source: 'apache',
        extensions: ['bdf'],
      },
      'application/x-font-dos': {
        source: 'apache',
      },
      'application/x-font-framemaker': {
        source: 'apache',
      },
      'application/x-font-ghostscript': {
        source: 'apache',
        extensions: ['gsf'],
      },
      'application/x-font-libgrx': {
        source: 'apache',
      },
      'application/x-font-linux-psf': {
        source: 'apache',
        extensions: ['psf'],
      },
      'application/x-font-pcf': {
        source: 'apache',
        extensions: ['pcf'],
      },
      'application/x-font-snf': {
        source: 'apache',
        extensions: ['snf'],
      },
      'application/x-font-speedo': {
        source: 'apache',
      },
      'application/x-font-sunos-news': {
        source: 'apache',
      },
      'application/x-font-type1': {
        source: 'apache',
        extensions: ['pfa', 'pfb', 'pfm', 'afm'],
      },
      'application/x-font-vfont': {
        source: 'apache',
      },
      'application/x-freearc': {
        source: 'apache',
        extensions: ['arc'],
      },
      'application/x-futuresplash': {
        source: 'apache',
        extensions: ['spl'],
      },
      'application/x-gca-compressed': {
        source: 'apache',
        extensions: ['gca'],
      },
      'application/x-glulx': {
        source: 'apache',
        extensions: ['ulx'],
      },
      'application/x-gnumeric': {
        source: 'apache',
        extensions: ['gnumeric'],
      },
      'application/x-gramps-xml': {
        source: 'apache',
        extensions: ['gramps'],
      },
      'application/x-gtar': {
        source: 'apache',
        extensions: ['gtar'],
      },
      'application/x-gzip': {
        source: 'apache',
      },
      'application/x-hdf': {
        source: 'apache',
        extensions: ['hdf'],
      },
      'application/x-httpd-php': {
        compressible: true,
        extensions: ['php'],
      },
      'application/x-install-instructions': {
        source: 'apache',
        extensions: ['install'],
      },
      'application/x-iso9660-image': {
        source: 'apache',
        extensions: ['iso'],
      },
      'application/x-iwork-keynote-sffkey': {
        extensions: ['key'],
      },
      'application/x-iwork-numbers-sffnumbers': {
        extensions: ['numbers'],
      },
      'application/x-iwork-pages-sffpages': {
        extensions: ['pages'],
      },
      'application/x-java-archive-diff': {
        source: 'nginx',
        extensions: ['jardiff'],
      },
      'application/x-java-jnlp-file': {
        source: 'apache',
        compressible: false,
        extensions: ['jnlp'],
      },
      'application/x-javascript': {
        compressible: true,
      },
      'application/x-keepass2': {
        extensions: ['kdbx'],
      },
      'application/x-latex': {
        source: 'apache',
        compressible: false,
        extensions: ['latex'],
      },
      'application/x-lua-bytecode': {
        extensions: ['luac'],
      },
      'application/x-lzh-compressed': {
        source: 'apache',
        extensions: ['lzh', 'lha'],
      },
      'application/x-makeself': {
        source: 'nginx',
        extensions: ['run'],
      },
      'application/x-mie': {
        source: 'apache',
        extensions: ['mie'],
      },
      'application/x-mobipocket-ebook': {
        source: 'apache',
        extensions: ['prc', 'mobi'],
      },
      'application/x-mpegurl': {
        compressible: false,
      },
      'application/x-ms-application': {
        source: 'apache',
        extensions: ['application'],
      },
      'application/x-ms-shortcut': {
        source: 'apache',
        extensions: ['lnk'],
      },
      'application/x-ms-wmd': {
        source: 'apache',
        extensions: ['wmd'],
      },
      'application/x-ms-wmz': {
        source: 'apache',
        extensions: ['wmz'],
      },
      'application/x-ms-xbap': {
        source: 'apache',
        extensions: ['xbap'],
      },
      'application/x-msaccess': {
        source: 'apache',
        extensions: ['mdb'],
      },
      'application/x-msbinder': {
        source: 'apache',
        extensions: ['obd'],
      },
      'application/x-mscardfile': {
        source: 'apache',
        extensions: ['crd'],
      },
      'application/x-msclip': {
        source: 'apache',
        extensions: ['clp'],
      },
      'application/x-msdos-program': {
        extensions: ['exe'],
      },
      'application/x-msdownload': {
        source: 'apache',
        extensions: ['exe', 'dll', 'com', 'bat', 'msi'],
      },
      'application/x-msmediaview': {
        source: 'apache',
        extensions: ['mvb', 'm13', 'm14'],
      },
      'application/x-msmetafile': {
        source: 'apache',
        extensions: ['wmf', 'wmz', 'emf', 'emz'],
      },
      'application/x-msmoney': {
        source: 'apache',
        extensions: ['mny'],
      },
      'application/x-mspublisher': {
        source: 'apache',
        extensions: ['pub'],
      },
      'application/x-msschedule': {
        source: 'apache',
        extensions: ['scd'],
      },
      'application/x-msterminal': {
        source: 'apache',
        extensions: ['trm'],
      },
      'application/x-mswrite': {
        source: 'apache',
        extensions: ['wri'],
      },
      'application/x-netcdf': {
        source: 'apache',
        extensions: ['nc', 'cdf'],
      },
      'application/x-ns-proxy-autoconfig': {
        compressible: true,
        extensions: ['pac'],
      },
      'application/x-nzb': {
        source: 'apache',
        extensions: ['nzb'],
      },
      'application/x-perl': {
        source: 'nginx',
        extensions: ['pl', 'pm'],
      },
      'application/x-pilot': {
        source: 'nginx',
        extensions: ['prc', 'pdb'],
      },
      'application/x-pkcs12': {
        source: 'apache',
        compressible: false,
        extensions: ['p12', 'pfx'],
      },
      'application/x-pkcs7-certificates': {
        source: 'apache',
        extensions: ['p7b', 'spc'],
      },
      'application/x-pkcs7-certreqresp': {
        source: 'apache',
        extensions: ['p7r'],
      },
      'application/x-pki-message': {
        source: 'iana',
      },
      'application/x-rar-compressed': {
        source: 'apache',
        compressible: false,
        extensions: ['rar'],
      },
      'application/x-redhat-package-manager': {
        source: 'nginx',
        extensions: ['rpm'],
      },
      'application/x-research-info-systems': {
        source: 'apache',
        extensions: ['ris'],
      },
      'application/x-sea': {
        source: 'nginx',
        extensions: ['sea'],
      },
      'application/x-sh': {
        source: 'apache',
        compressible: true,
        extensions: ['sh'],
      },
      'application/x-shar': {
        source: 'apache',
        extensions: ['shar'],
      },
      'application/x-shockwave-flash': {
        source: 'apache',
        compressible: false,
        extensions: ['swf'],
      },
      'application/x-silverlight-app': {
        source: 'apache',
        extensions: ['xap'],
      },
      'application/x-sql': {
        source: 'apache',
        extensions: ['sql'],
      },
      'application/x-stuffit': {
        source: 'apache',
        compressible: false,
        extensions: ['sit'],
      },
      'application/x-stuffitx': {
        source: 'apache',
        extensions: ['sitx'],
      },
      'application/x-subrip': {
        source: 'apache',
        extensions: ['srt'],
      },
      'application/x-sv4cpio': {
        source: 'apache',
        extensions: ['sv4cpio'],
      },
      'application/x-sv4crc': {
        source: 'apache',
        extensions: ['sv4crc'],
      },
      'application/x-t3vm-image': {
        source: 'apache',
        extensions: ['t3'],
      },
      'application/x-tads': {
        source: 'apache',
        extensions: ['gam'],
      },
      'application/x-tar': {
        source: 'apache',
        compressible: true,
        extensions: ['tar'],
      },
      'application/x-tcl': {
        source: 'apache',
        extensions: ['tcl', 'tk'],
      },
      'application/x-tex': {
        source: 'apache',
        extensions: ['tex'],
      },
      'application/x-tex-tfm': {
        source: 'apache',
        extensions: ['tfm'],
      },
      'application/x-texinfo': {
        source: 'apache',
        extensions: ['texinfo', 'texi'],
      },
      'application/x-tgif': {
        source: 'apache',
        extensions: ['obj'],
      },
      'application/x-ustar': {
        source: 'apache',
        extensions: ['ustar'],
      },
      'application/x-virtualbox-hdd': {
        compressible: true,
        extensions: ['hdd'],
      },
      'application/x-virtualbox-ova': {
        compressible: true,
        extensions: ['ova'],
      },
      'application/x-virtualbox-ovf': {
        compressible: true,
        extensions: ['ovf'],
      },
      'application/x-virtualbox-vbox': {
        compressible: true,
        extensions: ['vbox'],
      },
      'application/x-virtualbox-vbox-extpack': {
        compressible: false,
        extensions: ['vbox-extpack'],
      },
      'application/x-virtualbox-vdi': {
        compressible: true,
        extensions: ['vdi'],
      },
      'application/x-virtualbox-vhd': {
        compressible: true,
        extensions: ['vhd'],
      },
      'application/x-virtualbox-vmdk': {
        compressible: true,
        extensions: ['vmdk'],
      },
      'application/x-wais-source': {
        source: 'apache',
        extensions: ['src'],
      },
      'application/x-web-app-manifest+json': {
        compressible: true,
        extensions: ['webapp'],
      },
      'application/x-www-form-urlencoded': {
        source: 'iana',
        compressible: true,
      },
      'application/x-x509-ca-cert': {
        source: 'iana',
        extensions: ['der', 'crt', 'pem'],
      },
      'application/x-x509-ca-ra-cert': {
        source: 'iana',
      },
      'application/x-x509-next-ca-cert': {
        source: 'iana',
      },
      'application/x-xfig': {
        source: 'apache',
        extensions: ['fig'],
      },
      'application/x-xliff+xml': {
        source: 'apache',
        compressible: true,
        extensions: ['xlf'],
      },
      'application/x-xpinstall': {
        source: 'apache',
        compressible: false,
        extensions: ['xpi'],
      },
      'application/x-xz': {
        source: 'apache',
        extensions: ['xz'],
      },
      'application/x-zmachine': {
        source: 'apache',
        extensions: ['z1', 'z2', 'z3', 'z4', 'z5', 'z6', 'z7', 'z8'],
      },
      'application/x400-bp': {
        source: 'iana',
      },
      'application/xacml+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/xaml+xml': {
        source: 'apache',
        compressible: true,
        extensions: ['xaml'],
      },
      'application/xcap-att+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['xav'],
      },
      'application/xcap-caps+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['xca'],
      },
      'application/xcap-diff+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['xdf'],
      },
      'application/xcap-el+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['xel'],
      },
      'application/xcap-error+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/xcap-ns+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['xns'],
      },
      'application/xcon-conference-info+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/xcon-conference-info-diff+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/xenc+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['xenc'],
      },
      'application/xhtml+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['xhtml', 'xht'],
      },
      'application/xhtml-voice+xml': {
        source: 'apache',
        compressible: true,
      },
      'application/xliff+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['xlf'],
      },
      'application/xml': {
        source: 'iana',
        compressible: true,
        extensions: ['xml', 'xsl', 'xsd', 'rng'],
      },
      'application/xml-dtd': {
        source: 'iana',
        compressible: true,
        extensions: ['dtd'],
      },
      'application/xml-external-parsed-entity': {
        source: 'iana',
      },
      'application/xml-patch+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/xmpp+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/xop+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['xop'],
      },
      'application/xproc+xml': {
        source: 'apache',
        compressible: true,
        extensions: ['xpl'],
      },
      'application/xslt+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['xsl', 'xslt'],
      },
      'application/xspf+xml': {
        source: 'apache',
        compressible: true,
        extensions: ['xspf'],
      },
      'application/xv+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['mxml', 'xhvml', 'xvml', 'xvm'],
      },
      'application/yang': {
        source: 'iana',
        extensions: ['yang'],
      },
      'application/yang-data+json': {
        source: 'iana',
        compressible: true,
      },
      'application/yang-data+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/yang-patch+json': {
        source: 'iana',
        compressible: true,
      },
      'application/yang-patch+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/yin+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['yin'],
      },
      'application/zip': {
        source: 'iana',
        compressible: false,
        extensions: ['zip'],
      },
      'application/zlib': {
        source: 'iana',
      },
      'application/zstd': {
        source: 'iana',
      },
      'audio/1d-interleaved-parityfec': {
        source: 'iana',
      },
      'audio/32kadpcm': {
        source: 'iana',
      },
      'audio/3gpp': {
        source: 'iana',
        compressible: false,
        extensions: ['3gpp'],
      },
      'audio/3gpp2': {
        source: 'iana',
      },
      'audio/aac': {
        source: 'iana',
      },
      'audio/ac3': {
        source: 'iana',
      },
      'audio/adpcm': {
        source: 'apache',
        extensions: ['adp'],
      },
      'audio/amr': {
        source: 'iana',
        extensions: ['amr'],
      },
      'audio/amr-wb': {
        source: 'iana',
      },
      'audio/amr-wb+': {
        source: 'iana',
      },
      'audio/aptx': {
        source: 'iana',
      },
      'audio/asc': {
        source: 'iana',
      },
      'audio/atrac-advanced-lossless': {
        source: 'iana',
      },
      'audio/atrac-x': {
        source: 'iana',
      },
      'audio/atrac3': {
        source: 'iana',
      },
      'audio/basic': {
        source: 'iana',
        compressible: false,
        extensions: ['au', 'snd'],
      },
      'audio/bv16': {
        source: 'iana',
      },
      'audio/bv32': {
        source: 'iana',
      },
      'audio/clearmode': {
        source: 'iana',
      },
      'audio/cn': {
        source: 'iana',
      },
      'audio/dat12': {
        source: 'iana',
      },
      'audio/dls': {
        source: 'iana',
      },
      'audio/dsr-es201108': {
        source: 'iana',
      },
      'audio/dsr-es202050': {
        source: 'iana',
      },
      'audio/dsr-es202211': {
        source: 'iana',
      },
      'audio/dsr-es202212': {
        source: 'iana',
      },
      'audio/dv': {
        source: 'iana',
      },
      'audio/dvi4': {
        source: 'iana',
      },
      'audio/eac3': {
        source: 'iana',
      },
      'audio/encaprtp': {
        source: 'iana',
      },
      'audio/evrc': {
        source: 'iana',
      },
      'audio/evrc-qcp': {
        source: 'iana',
      },
      'audio/evrc0': {
        source: 'iana',
      },
      'audio/evrc1': {
        source: 'iana',
      },
      'audio/evrcb': {
        source: 'iana',
      },
      'audio/evrcb0': {
        source: 'iana',
      },
      'audio/evrcb1': {
        source: 'iana',
      },
      'audio/evrcnw': {
        source: 'iana',
      },
      'audio/evrcnw0': {
        source: 'iana',
      },
      'audio/evrcnw1': {
        source: 'iana',
      },
      'audio/evrcwb': {
        source: 'iana',
      },
      'audio/evrcwb0': {
        source: 'iana',
      },
      'audio/evrcwb1': {
        source: 'iana',
      },
      'audio/evs': {
        source: 'iana',
      },
      'audio/flexfec': {
        source: 'iana',
      },
      'audio/fwdred': {
        source: 'iana',
      },
      'audio/g711-0': {
        source: 'iana',
      },
      'audio/g719': {
        source: 'iana',
      },
      'audio/g722': {
        source: 'iana',
      },
      'audio/g7221': {
        source: 'iana',
      },
      'audio/g723': {
        source: 'iana',
      },
      'audio/g726-16': {
        source: 'iana',
      },
      'audio/g726-24': {
        source: 'iana',
      },
      'audio/g726-32': {
        source: 'iana',
      },
      'audio/g726-40': {
        source: 'iana',
      },
      'audio/g728': {
        source: 'iana',
      },
      'audio/g729': {
        source: 'iana',
      },
      'audio/g7291': {
        source: 'iana',
      },
      'audio/g729d': {
        source: 'iana',
      },
      'audio/g729e': {
        source: 'iana',
      },
      'audio/gsm': {
        source: 'iana',
      },
      'audio/gsm-efr': {
        source: 'iana',
      },
      'audio/gsm-hr-08': {
        source: 'iana',
      },
      'audio/ilbc': {
        source: 'iana',
      },
      'audio/ip-mr_v2.5': {
        source: 'iana',
      },
      'audio/isac': {
        source: 'apache',
      },
      'audio/l16': {
        source: 'iana',
      },
      'audio/l20': {
        source: 'iana',
      },
      'audio/l24': {
        source: 'iana',
        compressible: false,
      },
      'audio/l8': {
        source: 'iana',
      },
      'audio/lpc': {
        source: 'iana',
      },
      'audio/melp': {
        source: 'iana',
      },
      'audio/melp1200': {
        source: 'iana',
      },
      'audio/melp2400': {
        source: 'iana',
      },
      'audio/melp600': {
        source: 'iana',
      },
      'audio/mhas': {
        source: 'iana',
      },
      'audio/midi': {
        source: 'apache',
        extensions: ['mid', 'midi', 'kar', 'rmi'],
      },
      'audio/mobile-xmf': {
        source: 'iana',
        extensions: ['mxmf'],
      },
      'audio/mp3': {
        compressible: false,
        extensions: ['mp3'],
      },
      'audio/mp4': {
        source: 'iana',
        compressible: false,
        extensions: ['m4a', 'mp4a'],
      },
      'audio/mp4a-latm': {
        source: 'iana',
      },
      'audio/mpa': {
        source: 'iana',
      },
      'audio/mpa-robust': {
        source: 'iana',
      },
      'audio/mpeg': {
        source: 'iana',
        compressible: false,
        extensions: ['mpga', 'mp2', 'mp2a', 'mp3', 'm2a', 'm3a'],
      },
      'audio/mpeg4-generic': {
        source: 'iana',
      },
      'audio/musepack': {
        source: 'apache',
      },
      'audio/ogg': {
        source: 'iana',
        compressible: false,
        extensions: ['oga', 'ogg', 'spx', 'opus'],
      },
      'audio/opus': {
        source: 'iana',
      },
      'audio/parityfec': {
        source: 'iana',
      },
      'audio/pcma': {
        source: 'iana',
      },
      'audio/pcma-wb': {
        source: 'iana',
      },
      'audio/pcmu': {
        source: 'iana',
      },
      'audio/pcmu-wb': {
        source: 'iana',
      },
      'audio/prs.sid': {
        source: 'iana',
      },
      'audio/qcelp': {
        source: 'iana',
      },
      'audio/raptorfec': {
        source: 'iana',
      },
      'audio/red': {
        source: 'iana',
      },
      'audio/rtp-enc-aescm128': {
        source: 'iana',
      },
      'audio/rtp-midi': {
        source: 'iana',
      },
      'audio/rtploopback': {
        source: 'iana',
      },
      'audio/rtx': {
        source: 'iana',
      },
      'audio/s3m': {
        source: 'apache',
        extensions: ['s3m'],
      },
      'audio/scip': {
        source: 'iana',
      },
      'audio/silk': {
        source: 'apache',
        extensions: ['sil'],
      },
      'audio/smv': {
        source: 'iana',
      },
      'audio/smv-qcp': {
        source: 'iana',
      },
      'audio/smv0': {
        source: 'iana',
      },
      'audio/sofa': {
        source: 'iana',
      },
      'audio/sp-midi': {
        source: 'iana',
      },
      'audio/speex': {
        source: 'iana',
      },
      'audio/t140c': {
        source: 'iana',
      },
      'audio/t38': {
        source: 'iana',
      },
      'audio/telephone-event': {
        source: 'iana',
      },
      'audio/tetra_acelp': {
        source: 'iana',
      },
      'audio/tetra_acelp_bb': {
        source: 'iana',
      },
      'audio/tone': {
        source: 'iana',
      },
      'audio/tsvcis': {
        source: 'iana',
      },
      'audio/uemclip': {
        source: 'iana',
      },
      'audio/ulpfec': {
        source: 'iana',
      },
      'audio/usac': {
        source: 'iana',
      },
      'audio/vdvi': {
        source: 'iana',
      },
      'audio/vmr-wb': {
        source: 'iana',
      },
      'audio/vnd.3gpp.iufp': {
        source: 'iana',
      },
      'audio/vnd.4sb': {
        source: 'iana',
      },
      'audio/vnd.audiokoz': {
        source: 'iana',
      },
      'audio/vnd.celp': {
        source: 'iana',
      },
      'audio/vnd.cisco.nse': {
        source: 'iana',
      },
      'audio/vnd.cmles.radio-events': {
        source: 'iana',
      },
      'audio/vnd.cns.anp1': {
        source: 'iana',
      },
      'audio/vnd.cns.inf1': {
        source: 'iana',
      },
      'audio/vnd.dece.audio': {
        source: 'iana',
        extensions: ['uva', 'uvva'],
      },
      'audio/vnd.digital-winds': {
        source: 'iana',
        extensions: ['eol'],
      },
      'audio/vnd.dlna.adts': {
        source: 'iana',
      },
      'audio/vnd.dolby.heaac.1': {
        source: 'iana',
      },
      'audio/vnd.dolby.heaac.2': {
        source: 'iana',
      },
      'audio/vnd.dolby.mlp': {
        source: 'iana',
      },
      'audio/vnd.dolby.mps': {
        source: 'iana',
      },
      'audio/vnd.dolby.pl2': {
        source: 'iana',
      },
      'audio/vnd.dolby.pl2x': {
        source: 'iana',
      },
      'audio/vnd.dolby.pl2z': {
        source: 'iana',
      },
      'audio/vnd.dolby.pulse.1': {
        source: 'iana',
      },
      'audio/vnd.dra': {
        source: 'iana',
        extensions: ['dra'],
      },
      'audio/vnd.dts': {
        source: 'iana',
        extensions: ['dts'],
      },
      'audio/vnd.dts.hd': {
        source: 'iana',
        extensions: ['dtshd'],
      },
      'audio/vnd.dts.uhd': {
        source: 'iana',
      },
      'audio/vnd.dvb.file': {
        source: 'iana',
      },
      'audio/vnd.everad.plj': {
        source: 'iana',
      },
      'audio/vnd.hns.audio': {
        source: 'iana',
      },
      'audio/vnd.lucent.voice': {
        source: 'iana',
        extensions: ['lvp'],
      },
      'audio/vnd.ms-playready.media.pya': {
        source: 'iana',
        extensions: ['pya'],
      },
      'audio/vnd.nokia.mobile-xmf': {
        source: 'iana',
      },
      'audio/vnd.nortel.vbk': {
        source: 'iana',
      },
      'audio/vnd.nuera.ecelp4800': {
        source: 'iana',
        extensions: ['ecelp4800'],
      },
      'audio/vnd.nuera.ecelp7470': {
        source: 'iana',
        extensions: ['ecelp7470'],
      },
      'audio/vnd.nuera.ecelp9600': {
        source: 'iana',
        extensions: ['ecelp9600'],
      },
      'audio/vnd.octel.sbc': {
        source: 'iana',
      },
      'audio/vnd.presonus.multitrack': {
        source: 'iana',
      },
      'audio/vnd.qcelp': {
        source: 'iana',
      },
      'audio/vnd.rhetorex.32kadpcm': {
        source: 'iana',
      },
      'audio/vnd.rip': {
        source: 'iana',
        extensions: ['rip'],
      },
      'audio/vnd.rn-realaudio': {
        compressible: false,
      },
      'audio/vnd.sealedmedia.softseal.mpeg': {
        source: 'iana',
      },
      'audio/vnd.vmx.cvsd': {
        source: 'iana',
      },
      'audio/vnd.wave': {
        compressible: false,
      },
      'audio/vorbis': {
        source: 'iana',
        compressible: false,
      },
      'audio/vorbis-config': {
        source: 'iana',
      },
      'audio/wav': {
        compressible: false,
        extensions: ['wav'],
      },
      'audio/wave': {
        compressible: false,
        extensions: ['wav'],
      },
      'audio/webm': {
        source: 'apache',
        compressible: false,
        extensions: ['weba'],
      },
      'audio/x-aac': {
        source: 'apache',
        compressible: false,
        extensions: ['aac'],
      },
      'audio/x-aiff': {
        source: 'apache',
        extensions: ['aif', 'aiff', 'aifc'],
      },
      'audio/x-caf': {
        source: 'apache',
        compressible: false,
        extensions: ['caf'],
      },
      'audio/x-flac': {
        source: 'apache',
        extensions: ['flac'],
      },
      'audio/x-m4a': {
        source: 'nginx',
        extensions: ['m4a'],
      },
      'audio/x-matroska': {
        source: 'apache',
        extensions: ['mka'],
      },
      'audio/x-mpegurl': {
        source: 'apache',
        extensions: ['m3u'],
      },
      'audio/x-ms-wax': {
        source: 'apache',
        extensions: ['wax'],
      },
      'audio/x-ms-wma': {
        source: 'apache',
        extensions: ['wma'],
      },
      'audio/x-pn-realaudio': {
        source: 'apache',
        extensions: ['ram', 'ra'],
      },
      'audio/x-pn-realaudio-plugin': {
        source: 'apache',
        extensions: ['rmp'],
      },
      'audio/x-realaudio': {
        source: 'nginx',
        extensions: ['ra'],
      },
      'audio/x-tta': {
        source: 'apache',
      },
      'audio/x-wav': {
        source: 'apache',
        extensions: ['wav'],
      },
      'audio/xm': {
        source: 'apache',
        extensions: ['xm'],
      },
      'chemical/x-cdx': {
        source: 'apache',
        extensions: ['cdx'],
      },
      'chemical/x-cif': {
        source: 'apache',
        extensions: ['cif'],
      },
      'chemical/x-cmdf': {
        source: 'apache',
        extensions: ['cmdf'],
      },
      'chemical/x-cml': {
        source: 'apache',
        extensions: ['cml'],
      },
      'chemical/x-csml': {
        source: 'apache',
        extensions: ['csml'],
      },
      'chemical/x-pdb': {
        source: 'apache',
      },
      'chemical/x-xyz': {
        source: 'apache',
        extensions: ['xyz'],
      },
      'font/collection': {
        source: 'iana',
        extensions: ['ttc'],
      },
      'font/otf': {
        source: 'iana',
        compressible: true,
        extensions: ['otf'],
      },
      'font/sfnt': {
        source: 'iana',
      },
      'font/ttf': {
        source: 'iana',
        compressible: true,
        extensions: ['ttf'],
      },
      'font/woff': {
        source: 'iana',
        extensions: ['woff'],
      },
      'font/woff2': {
        source: 'iana',
        extensions: ['woff2'],
      },
      'image/aces': {
        source: 'iana',
        extensions: ['exr'],
      },
      'image/apng': {
        compressible: false,
        extensions: ['apng'],
      },
      'image/avci': {
        source: 'iana',
        extensions: ['avci'],
      },
      'image/avcs': {
        source: 'iana',
        extensions: ['avcs'],
      },
      'image/avif': {
        source: 'iana',
        compressible: false,
        extensions: ['avif'],
      },
      'image/bmp': {
        source: 'iana',
        compressible: true,
        extensions: ['bmp'],
      },
      'image/cgm': {
        source: 'iana',
        extensions: ['cgm'],
      },
      'image/dicom-rle': {
        source: 'iana',
        extensions: ['drle'],
      },
      'image/emf': {
        source: 'iana',
        extensions: ['emf'],
      },
      'image/fits': {
        source: 'iana',
        extensions: ['fits'],
      },
      'image/g3fax': {
        source: 'iana',
        extensions: ['g3'],
      },
      'image/gif': {
        source: 'iana',
        compressible: false,
        extensions: ['gif'],
      },
      'image/heic': {
        source: 'iana',
        extensions: ['heic'],
      },
      'image/heic-sequence': {
        source: 'iana',
        extensions: ['heics'],
      },
      'image/heif': {
        source: 'iana',
        extensions: ['heif'],
      },
      'image/heif-sequence': {
        source: 'iana',
        extensions: ['heifs'],
      },
      'image/hej2k': {
        source: 'iana',
        extensions: ['hej2'],
      },
      'image/hsj2': {
        source: 'iana',
        extensions: ['hsj2'],
      },
      'image/ief': {
        source: 'iana',
        extensions: ['ief'],
      },
      'image/jls': {
        source: 'iana',
        extensions: ['jls'],
      },
      'image/jp2': {
        source: 'iana',
        compressible: false,
        extensions: ['jp2', 'jpg2'],
      },
      'image/jpeg': {
        source: 'iana',
        compressible: false,
        extensions: ['jpeg', 'jpg', 'jpe'],
      },
      'image/jph': {
        source: 'iana',
        extensions: ['jph'],
      },
      'image/jphc': {
        source: 'iana',
        extensions: ['jhc'],
      },
      'image/jpm': {
        source: 'iana',
        compressible: false,
        extensions: ['jpm'],
      },
      'image/jpx': {
        source: 'iana',
        compressible: false,
        extensions: ['jpx', 'jpf'],
      },
      'image/jxr': {
        source: 'iana',
        extensions: ['jxr'],
      },
      'image/jxra': {
        source: 'iana',
        extensions: ['jxra'],
      },
      'image/jxrs': {
        source: 'iana',
        extensions: ['jxrs'],
      },
      'image/jxs': {
        source: 'iana',
        extensions: ['jxs'],
      },
      'image/jxsc': {
        source: 'iana',
        extensions: ['jxsc'],
      },
      'image/jxsi': {
        source: 'iana',
        extensions: ['jxsi'],
      },
      'image/jxss': {
        source: 'iana',
        extensions: ['jxss'],
      },
      'image/ktx': {
        source: 'iana',
        extensions: ['ktx'],
      },
      'image/ktx2': {
        source: 'iana',
        extensions: ['ktx2'],
      },
      'image/naplps': {
        source: 'iana',
      },
      'image/pjpeg': {
        compressible: false,
      },
      'image/png': {
        source: 'iana',
        compressible: false,
        extensions: ['png'],
      },
      'image/prs.btif': {
        source: 'iana',
        extensions: ['btif'],
      },
      'image/prs.pti': {
        source: 'iana',
        extensions: ['pti'],
      },
      'image/pwg-raster': {
        source: 'iana',
      },
      'image/sgi': {
        source: 'apache',
        extensions: ['sgi'],
      },
      'image/svg+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['svg', 'svgz'],
      },
      'image/t38': {
        source: 'iana',
        extensions: ['t38'],
      },
      'image/tiff': {
        source: 'iana',
        compressible: false,
        extensions: ['tif', 'tiff'],
      },
      'image/tiff-fx': {
        source: 'iana',
        extensions: ['tfx'],
      },
      'image/vnd.adobe.photoshop': {
        source: 'iana',
        compressible: true,
        extensions: ['psd'],
      },
      'image/vnd.airzip.accelerator.azv': {
        source: 'iana',
        extensions: ['azv'],
      },
      'image/vnd.cns.inf2': {
        source: 'iana',
      },
      'image/vnd.dece.graphic': {
        source: 'iana',
        extensions: ['uvi', 'uvvi', 'uvg', 'uvvg'],
      },
      'image/vnd.djvu': {
        source: 'iana',
        extensions: ['djvu', 'djv'],
      },
      'image/vnd.dvb.subtitle': {
        source: 'iana',
        extensions: ['sub'],
      },
      'image/vnd.dwg': {
        source: 'iana',
        extensions: ['dwg'],
      },
      'image/vnd.dxf': {
        source: 'iana',
        extensions: ['dxf'],
      },
      'image/vnd.fastbidsheet': {
        source: 'iana',
        extensions: ['fbs'],
      },
      'image/vnd.fpx': {
        source: 'iana',
        extensions: ['fpx'],
      },
      'image/vnd.fst': {
        source: 'iana',
        extensions: ['fst'],
      },
      'image/vnd.fujixerox.edmics-mmr': {
        source: 'iana',
        extensions: ['mmr'],
      },
      'image/vnd.fujixerox.edmics-rlc': {
        source: 'iana',
        extensions: ['rlc'],
      },
      'image/vnd.globalgraphics.pgb': {
        source: 'iana',
      },
      'image/vnd.microsoft.icon': {
        source: 'iana',
        compressible: true,
        extensions: ['ico'],
      },
      'image/vnd.mix': {
        source: 'iana',
      },
      'image/vnd.mozilla.apng': {
        source: 'iana',
      },
      'image/vnd.ms-dds': {
        compressible: true,
        extensions: ['dds'],
      },
      'image/vnd.ms-modi': {
        source: 'iana',
        extensions: ['mdi'],
      },
      'image/vnd.ms-photo': {
        source: 'apache',
        extensions: ['wdp'],
      },
      'image/vnd.net-fpx': {
        source: 'iana',
        extensions: ['npx'],
      },
      'image/vnd.pco.b16': {
        source: 'iana',
        extensions: ['b16'],
      },
      'image/vnd.radiance': {
        source: 'iana',
      },
      'image/vnd.sealed.png': {
        source: 'iana',
      },
      'image/vnd.sealedmedia.softseal.gif': {
        source: 'iana',
      },
      'image/vnd.sealedmedia.softseal.jpg': {
        source: 'iana',
      },
      'image/vnd.svf': {
        source: 'iana',
      },
      'image/vnd.tencent.tap': {
        source: 'iana',
        extensions: ['tap'],
      },
      'image/vnd.valve.source.texture': {
        source: 'iana',
        extensions: ['vtf'],
      },
      'image/vnd.wap.wbmp': {
        source: 'iana',
        extensions: ['wbmp'],
      },
      'image/vnd.xiff': {
        source: 'iana',
        extensions: ['xif'],
      },
      'image/vnd.zbrush.pcx': {
        source: 'iana',
        extensions: ['pcx'],
      },
      'image/webp': {
        source: 'apache',
        extensions: ['webp'],
      },
      'image/wmf': {
        source: 'iana',
        extensions: ['wmf'],
      },
      'image/x-3ds': {
        source: 'apache',
        extensions: ['3ds'],
      },
      'image/x-cmu-raster': {
        source: 'apache',
        extensions: ['ras'],
      },
      'image/x-cmx': {
        source: 'apache',
        extensions: ['cmx'],
      },
      'image/x-freehand': {
        source: 'apache',
        extensions: ['fh', 'fhc', 'fh4', 'fh5', 'fh7'],
      },
      'image/x-icon': {
        source: 'apache',
        compressible: true,
        extensions: ['ico'],
      },
      'image/x-jng': {
        source: 'nginx',
        extensions: ['jng'],
      },
      'image/x-mrsid-image': {
        source: 'apache',
        extensions: ['sid'],
      },
      'image/x-ms-bmp': {
        source: 'nginx',
        compressible: true,
        extensions: ['bmp'],
      },
      'image/x-pcx': {
        source: 'apache',
        extensions: ['pcx'],
      },
      'image/x-pict': {
        source: 'apache',
        extensions: ['pic', 'pct'],
      },
      'image/x-portable-anymap': {
        source: 'apache',
        extensions: ['pnm'],
      },
      'image/x-portable-bitmap': {
        source: 'apache',
        extensions: ['pbm'],
      },
      'image/x-portable-graymap': {
        source: 'apache',
        extensions: ['pgm'],
      },
      'image/x-portable-pixmap': {
        source: 'apache',
        extensions: ['ppm'],
      },
      'image/x-rgb': {
        source: 'apache',
        extensions: ['rgb'],
      },
      'image/x-tga': {
        source: 'apache',
        extensions: ['tga'],
      },
      'image/x-xbitmap': {
        source: 'apache',
        extensions: ['xbm'],
      },
      'image/x-xcf': {
        compressible: false,
      },
      'image/x-xpixmap': {
        source: 'apache',
        extensions: ['xpm'],
      },
      'image/x-xwindowdump': {
        source: 'apache',
        extensions: ['xwd'],
      },
      'message/cpim': {
        source: 'iana',
      },
      'message/delivery-status': {
        source: 'iana',
      },
      'message/disposition-notification': {
        source: 'iana',
        extensions: ['disposition-notification'],
      },
      'message/external-body': {
        source: 'iana',
      },
      'message/feedback-report': {
        source: 'iana',
      },
      'message/global': {
        source: 'iana',
        extensions: ['u8msg'],
      },
      'message/global-delivery-status': {
        source: 'iana',
        extensions: ['u8dsn'],
      },
      'message/global-disposition-notification': {
        source: 'iana',
        extensions: ['u8mdn'],
      },
      'message/global-headers': {
        source: 'iana',
        extensions: ['u8hdr'],
      },
      'message/http': {
        source: 'iana',
        compressible: false,
      },
      'message/imdn+xml': {
        source: 'iana',
        compressible: true,
      },
      'message/news': {
        source: 'iana',
      },
      'message/partial': {
        source: 'iana',
        compressible: false,
      },
      'message/rfc822': {
        source: 'iana',
        compressible: true,
        extensions: ['eml', 'mime'],
      },
      'message/s-http': {
        source: 'iana',
      },
      'message/sip': {
        source: 'iana',
      },
      'message/sipfrag': {
        source: 'iana',
      },
      'message/tracking-status': {
        source: 'iana',
      },
      'message/vnd.si.simp': {
        source: 'iana',
      },
      'message/vnd.wfa.wsc': {
        source: 'iana',
        extensions: ['wsc'],
      },
      'model/3mf': {
        source: 'iana',
        extensions: ['3mf'],
      },
      'model/e57': {
        source: 'iana',
      },
      'model/gltf+json': {
        source: 'iana',
        compressible: true,
        extensions: ['gltf'],
      },
      'model/gltf-binary': {
        source: 'iana',
        compressible: true,
        extensions: ['glb'],
      },
      'model/iges': {
        source: 'iana',
        compressible: false,
        extensions: ['igs', 'iges'],
      },
      'model/mesh': {
        source: 'iana',
        compressible: false,
        extensions: ['msh', 'mesh', 'silo'],
      },
      'model/mtl': {
        source: 'iana',
        extensions: ['mtl'],
      },
      'model/obj': {
        source: 'iana',
        extensions: ['obj'],
      },
      'model/step': {
        source: 'iana',
      },
      'model/step+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['stpx'],
      },
      'model/step+zip': {
        source: 'iana',
        compressible: false,
        extensions: ['stpz'],
      },
      'model/step-xml+zip': {
        source: 'iana',
        compressible: false,
        extensions: ['stpxz'],
      },
      'model/stl': {
        source: 'iana',
        extensions: ['stl'],
      },
      'model/vnd.collada+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['dae'],
      },
      'model/vnd.dwf': {
        source: 'iana',
        extensions: ['dwf'],
      },
      'model/vnd.flatland.3dml': {
        source: 'iana',
      },
      'model/vnd.gdl': {
        source: 'iana',
        extensions: ['gdl'],
      },
      'model/vnd.gs-gdl': {
        source: 'apache',
      },
      'model/vnd.gs.gdl': {
        source: 'iana',
      },
      'model/vnd.gtw': {
        source: 'iana',
        extensions: ['gtw'],
      },
      'model/vnd.moml+xml': {
        source: 'iana',
        compressible: true,
      },
      'model/vnd.mts': {
        source: 'iana',
        extensions: ['mts'],
      },
      'model/vnd.opengex': {
        source: 'iana',
        extensions: ['ogex'],
      },
      'model/vnd.parasolid.transmit.binary': {
        source: 'iana',
        extensions: ['x_b'],
      },
      'model/vnd.parasolid.transmit.text': {
        source: 'iana',
        extensions: ['x_t'],
      },
      'model/vnd.pytha.pyox': {
        source: 'iana',
      },
      'model/vnd.rosette.annotated-data-model': {
        source: 'iana',
      },
      'model/vnd.sap.vds': {
        source: 'iana',
        extensions: ['vds'],
      },
      'model/vnd.usdz+zip': {
        source: 'iana',
        compressible: false,
        extensions: ['usdz'],
      },
      'model/vnd.valve.source.compiled-map': {
        source: 'iana',
        extensions: ['bsp'],
      },
      'model/vnd.vtu': {
        source: 'iana',
        extensions: ['vtu'],
      },
      'model/vrml': {
        source: 'iana',
        compressible: false,
        extensions: ['wrl', 'vrml'],
      },
      'model/x3d+binary': {
        source: 'apache',
        compressible: false,
        extensions: ['x3db', 'x3dbz'],
      },
      'model/x3d+fastinfoset': {
        source: 'iana',
        extensions: ['x3db'],
      },
      'model/x3d+vrml': {
        source: 'apache',
        compressible: false,
        extensions: ['x3dv', 'x3dvz'],
      },
      'model/x3d+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['x3d', 'x3dz'],
      },
      'model/x3d-vrml': {
        source: 'iana',
        extensions: ['x3dv'],
      },
      'multipart/alternative': {
        source: 'iana',
        compressible: false,
      },
      'multipart/appledouble': {
        source: 'iana',
      },
      'multipart/byteranges': {
        source: 'iana',
      },
      'multipart/digest': {
        source: 'iana',
      },
      'multipart/encrypted': {
        source: 'iana',
        compressible: false,
      },
      'multipart/form-data': {
        source: 'iana',
        compressible: false,
      },
      'multipart/header-set': {
        source: 'iana',
      },
      'multipart/mixed': {
        source: 'iana',
      },
      'multipart/multilingual': {
        source: 'iana',
      },
      'multipart/parallel': {
        source: 'iana',
      },
      'multipart/related': {
        source: 'iana',
        compressible: false,
      },
      'multipart/report': {
        source: 'iana',
      },
      'multipart/signed': {
        source: 'iana',
        compressible: false,
      },
      'multipart/vnd.bint.med-plus': {
        source: 'iana',
      },
      'multipart/voice-message': {
        source: 'iana',
      },
      'multipart/x-mixed-replace': {
        source: 'iana',
      },
      'text/1d-interleaved-parityfec': {
        source: 'iana',
      },
      'text/cache-manifest': {
        source: 'iana',
        compressible: true,
        extensions: ['appcache', 'manifest'],
      },
      'text/calendar': {
        source: 'iana',
        extensions: ['ics', 'ifb'],
      },
      'text/calender': {
        compressible: true,
      },
      'text/cmd': {
        compressible: true,
      },
      'text/coffeescript': {
        extensions: ['coffee', 'litcoffee'],
      },
      'text/cql': {
        source: 'iana',
      },
      'text/cql-expression': {
        source: 'iana',
      },
      'text/cql-identifier': {
        source: 'iana',
      },
      'text/css': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
        extensions: ['css'],
      },
      'text/csv': {
        source: 'iana',
        compressible: true,
        extensions: ['csv'],
      },
      'text/csv-schema': {
        source: 'iana',
      },
      'text/directory': {
        source: 'iana',
      },
      'text/dns': {
        source: 'iana',
      },
      'text/ecmascript': {
        source: 'iana',
      },
      'text/encaprtp': {
        source: 'iana',
      },
      'text/enriched': {
        source: 'iana',
      },
      'text/fhirpath': {
        source: 'iana',
      },
      'text/flexfec': {
        source: 'iana',
      },
      'text/fwdred': {
        source: 'iana',
      },
      'text/gff3': {
        source: 'iana',
      },
      'text/grammar-ref-list': {
        source: 'iana',
      },
      'text/html': {
        source: 'iana',
        compressible: true,
        extensions: ['html', 'htm', 'shtml'],
      },
      'text/jade': {
        extensions: ['jade'],
      },
      'text/javascript': {
        source: 'iana',
        compressible: true,
      },
      'text/jcr-cnd': {
        source: 'iana',
      },
      'text/jsx': {
        compressible: true,
        extensions: ['jsx'],
      },
      'text/less': {
        compressible: true,
        extensions: ['less'],
      },
      'text/markdown': {
        source: 'iana',
        compressible: true,
        extensions: ['markdown', 'md'],
      },
      'text/mathml': {
        source: 'nginx',
        extensions: ['mml'],
      },
      'text/mdx': {
        compressible: true,
        extensions: ['mdx'],
      },
      'text/mizar': {
        source: 'iana',
      },
      'text/n3': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
        extensions: ['n3'],
      },
      'text/parameters': {
        source: 'iana',
        charset: 'UTF-8',
      },
      'text/parityfec': {
        source: 'iana',
      },
      'text/plain': {
        source: 'iana',
        compressible: true,
        extensions: ['txt', 'text', 'conf', 'def', 'list', 'log', 'in', 'ini'],
      },
      'text/provenance-notation': {
        source: 'iana',
        charset: 'UTF-8',
      },
      'text/prs.fallenstein.rst': {
        source: 'iana',
      },
      'text/prs.lines.tag': {
        source: 'iana',
        extensions: ['dsc'],
      },
      'text/prs.prop.logic': {
        source: 'iana',
      },
      'text/raptorfec': {
        source: 'iana',
      },
      'text/red': {
        source: 'iana',
      },
      'text/rfc822-headers': {
        source: 'iana',
      },
      'text/richtext': {
        source: 'iana',
        compressible: true,
        extensions: ['rtx'],
      },
      'text/rtf': {
        source: 'iana',
        compressible: true,
        extensions: ['rtf'],
      },
      'text/rtp-enc-aescm128': {
        source: 'iana',
      },
      'text/rtploopback': {
        source: 'iana',
      },
      'text/rtx': {
        source: 'iana',
      },
      'text/sgml': {
        source: 'iana',
        extensions: ['sgml', 'sgm'],
      },
      'text/shaclc': {
        source: 'iana',
      },
      'text/shex': {
        source: 'iana',
        extensions: ['shex'],
      },
      'text/slim': {
        extensions: ['slim', 'slm'],
      },
      'text/spdx': {
        source: 'iana',
        extensions: ['spdx'],
      },
      'text/strings': {
        source: 'iana',
      },
      'text/stylus': {
        extensions: ['stylus', 'styl'],
      },
      'text/t140': {
        source: 'iana',
      },
      'text/tab-separated-values': {
        source: 'iana',
        compressible: true,
        extensions: ['tsv'],
      },
      'text/troff': {
        source: 'iana',
        extensions: ['t', 'tr', 'roff', 'man', 'me', 'ms'],
      },
      'text/turtle': {
        source: 'iana',
        charset: 'UTF-8',
        extensions: ['ttl'],
      },
      'text/ulpfec': {
        source: 'iana',
      },
      'text/uri-list': {
        source: 'iana',
        compressible: true,
        extensions: ['uri', 'uris', 'urls'],
      },
      'text/vcard': {
        source: 'iana',
        compressible: true,
        extensions: ['vcard'],
      },
      'text/vnd.a': {
        source: 'iana',
      },
      'text/vnd.abc': {
        source: 'iana',
      },
      'text/vnd.ascii-art': {
        source: 'iana',
      },
      'text/vnd.curl': {
        source: 'iana',
        extensions: ['curl'],
      },
      'text/vnd.curl.dcurl': {
        source: 'apache',
        extensions: ['dcurl'],
      },
      'text/vnd.curl.mcurl': {
        source: 'apache',
        extensions: ['mcurl'],
      },
      'text/vnd.curl.scurl': {
        source: 'apache',
        extensions: ['scurl'],
      },
      'text/vnd.debian.copyright': {
        source: 'iana',
        charset: 'UTF-8',
      },
      'text/vnd.dmclientscript': {
        source: 'iana',
      },
      'text/vnd.dvb.subtitle': {
        source: 'iana',
        extensions: ['sub'],
      },
      'text/vnd.esmertec.theme-descriptor': {
        source: 'iana',
        charset: 'UTF-8',
      },
      'text/vnd.familysearch.gedcom': {
        source: 'iana',
        extensions: ['ged'],
      },
      'text/vnd.ficlab.flt': {
        source: 'iana',
      },
      'text/vnd.fly': {
        source: 'iana',
        extensions: ['fly'],
      },
      'text/vnd.fmi.flexstor': {
        source: 'iana',
        extensions: ['flx'],
      },
      'text/vnd.gml': {
        source: 'iana',
      },
      'text/vnd.graphviz': {
        source: 'iana',
        extensions: ['gv'],
      },
      'text/vnd.hans': {
        source: 'iana',
      },
      'text/vnd.hgl': {
        source: 'iana',
      },
      'text/vnd.in3d.3dml': {
        source: 'iana',
        extensions: ['3dml'],
      },
      'text/vnd.in3d.spot': {
        source: 'iana',
        extensions: ['spot'],
      },
      'text/vnd.iptc.newsml': {
        source: 'iana',
      },
      'text/vnd.iptc.nitf': {
        source: 'iana',
      },
      'text/vnd.latex-z': {
        source: 'iana',
      },
      'text/vnd.motorola.reflex': {
        source: 'iana',
      },
      'text/vnd.ms-mediapackage': {
        source: 'iana',
      },
      'text/vnd.net2phone.commcenter.command': {
        source: 'iana',
      },
      'text/vnd.radisys.msml-basic-layout': {
        source: 'iana',
      },
      'text/vnd.senx.warpscript': {
        source: 'iana',
      },
      'text/vnd.si.uricatalogue': {
        source: 'iana',
      },
      'text/vnd.sosi': {
        source: 'iana',
      },
      'text/vnd.sun.j2me.app-descriptor': {
        source: 'iana',
        charset: 'UTF-8',
        extensions: ['jad'],
      },
      'text/vnd.trolltech.linguist': {
        source: 'iana',
        charset: 'UTF-8',
      },
      'text/vnd.wap.si': {
        source: 'iana',
      },
      'text/vnd.wap.sl': {
        source: 'iana',
      },
      'text/vnd.wap.wml': {
        source: 'iana',
        extensions: ['wml'],
      },
      'text/vnd.wap.wmlscript': {
        source: 'iana',
        extensions: ['wmls'],
      },
      'text/vtt': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
        extensions: ['vtt'],
      },
      'text/x-asm': {
        source: 'apache',
        extensions: ['s', 'asm'],
      },
      'text/x-c': {
        source: 'apache',
        extensions: ['c', 'cc', 'cxx', 'cpp', 'h', 'hh', 'dic'],
      },
      'text/x-component': {
        source: 'nginx',
        extensions: ['htc'],
      },
      'text/x-fortran': {
        source: 'apache',
        extensions: ['f', 'for', 'f77', 'f90'],
      },
      'text/x-gwt-rpc': {
        compressible: true,
      },
      'text/x-handlebars-template': {
        extensions: ['hbs'],
      },
      'text/x-java-source': {
        source: 'apache',
        extensions: ['java'],
      },
      'text/x-jquery-tmpl': {
        compressible: true,
      },
      'text/x-lua': {
        extensions: ['lua'],
      },
      'text/x-markdown': {
        compressible: true,
        extensions: ['mkd'],
      },
      'text/x-nfo': {
        source: 'apache',
        extensions: ['nfo'],
      },
      'text/x-opml': {
        source: 'apache',
        extensions: ['opml'],
      },
      'text/x-org': {
        compressible: true,
        extensions: ['org'],
      },
      'text/x-pascal': {
        source: 'apache',
        extensions: ['p', 'pas'],
      },
      'text/x-processing': {
        compressible: true,
        extensions: ['pde'],
      },
      'text/x-sass': {
        extensions: ['sass'],
      },
      'text/x-scss': {
        extensions: ['scss'],
      },
      'text/x-setext': {
        source: 'apache',
        extensions: ['etx'],
      },
      'text/x-sfv': {
        source: 'apache',
        extensions: ['sfv'],
      },
      'text/x-suse-ymp': {
        compressible: true,
        extensions: ['ymp'],
      },
      'text/x-uuencode': {
        source: 'apache',
        extensions: ['uu'],
      },
      'text/x-vcalendar': {
        source: 'apache',
        extensions: ['vcs'],
      },
      'text/x-vcard': {
        source: 'apache',
        extensions: ['vcf'],
      },
      'text/xml': {
        source: 'iana',
        compressible: true,
        extensions: ['xml'],
      },
      'text/xml-external-parsed-entity': {
        source: 'iana',
      },
      'text/yaml': {
        compressible: true,
        extensions: ['yaml', 'yml'],
      },
      'video/1d-interleaved-parityfec': {
        source: 'iana',
      },
      'video/3gpp': {
        source: 'iana',
        extensions: ['3gp', '3gpp'],
      },
      'video/3gpp-tt': {
        source: 'iana',
      },
      'video/3gpp2': {
        source: 'iana',
        extensions: ['3g2'],
      },
      'video/av1': {
        source: 'iana',
      },
      'video/bmpeg': {
        source: 'iana',
      },
      'video/bt656': {
        source: 'iana',
      },
      'video/celb': {
        source: 'iana',
      },
      'video/dv': {
        source: 'iana',
      },
      'video/encaprtp': {
        source: 'iana',
      },
      'video/ffv1': {
        source: 'iana',
      },
      'video/flexfec': {
        source: 'iana',
      },
      'video/h261': {
        source: 'iana',
        extensions: ['h261'],
      },
      'video/h263': {
        source: 'iana',
        extensions: ['h263'],
      },
      'video/h263-1998': {
        source: 'iana',
      },
      'video/h263-2000': {
        source: 'iana',
      },
      'video/h264': {
        source: 'iana',
        extensions: ['h264'],
      },
      'video/h264-rcdo': {
        source: 'iana',
      },
      'video/h264-svc': {
        source: 'iana',
      },
      'video/h265': {
        source: 'iana',
      },
      'video/iso.segment': {
        source: 'iana',
        extensions: ['m4s'],
      },
      'video/jpeg': {
        source: 'iana',
        extensions: ['jpgv'],
      },
      'video/jpeg2000': {
        source: 'iana',
      },
      'video/jpm': {
        source: 'apache',
        extensions: ['jpm', 'jpgm'],
      },
      'video/jxsv': {
        source: 'iana',
      },
      'video/mj2': {
        source: 'iana',
        extensions: ['mj2', 'mjp2'],
      },
      'video/mp1s': {
        source: 'iana',
      },
      'video/mp2p': {
        source: 'iana',
      },
      'video/mp2t': {
        source: 'iana',
        extensions: ['ts'],
      },
      'video/mp4': {
        source: 'iana',
        compressible: false,
        extensions: ['mp4', 'mp4v', 'mpg4'],
      },
      'video/mp4v-es': {
        source: 'iana',
      },
      'video/mpeg': {
        source: 'iana',
        compressible: false,
        extensions: ['mpeg', 'mpg', 'mpe', 'm1v', 'm2v'],
      },
      'video/mpeg4-generic': {
        source: 'iana',
      },
      'video/mpv': {
        source: 'iana',
      },
      'video/nv': {
        source: 'iana',
      },
      'video/ogg': {
        source: 'iana',
        compressible: false,
        extensions: ['ogv'],
      },
      'video/parityfec': {
        source: 'iana',
      },
      'video/pointer': {
        source: 'iana',
      },
      'video/quicktime': {
        source: 'iana',
        compressible: false,
        extensions: ['qt', 'mov'],
      },
      'video/raptorfec': {
        source: 'iana',
      },
      'video/raw': {
        source: 'iana',
      },
      'video/rtp-enc-aescm128': {
        source: 'iana',
      },
      'video/rtploopback': {
        source: 'iana',
      },
      'video/rtx': {
        source: 'iana',
      },
      'video/scip': {
        source: 'iana',
      },
      'video/smpte291': {
        source: 'iana',
      },
      'video/smpte292m': {
        source: 'iana',
      },
      'video/ulpfec': {
        source: 'iana',
      },
      'video/vc1': {
        source: 'iana',
      },
      'video/vc2': {
        source: 'iana',
      },
      'video/vnd.cctv': {
        source: 'iana',
      },
      'video/vnd.dece.hd': {
        source: 'iana',
        extensions: ['uvh', 'uvvh'],
      },
      'video/vnd.dece.mobile': {
        source: 'iana',
        extensions: ['uvm', 'uvvm'],
      },
      'video/vnd.dece.mp4': {
        source: 'iana',
      },
      'video/vnd.dece.pd': {
        source: 'iana',
        extensions: ['uvp', 'uvvp'],
      },
      'video/vnd.dece.sd': {
        source: 'iana',
        extensions: ['uvs', 'uvvs'],
      },
      'video/vnd.dece.video': {
        source: 'iana',
        extensions: ['uvv', 'uvvv'],
      },
      'video/vnd.directv.mpeg': {
        source: 'iana',
      },
      'video/vnd.directv.mpeg-tts': {
        source: 'iana',
      },
      'video/vnd.dlna.mpeg-tts': {
        source: 'iana',
      },
      'video/vnd.dvb.file': {
        source: 'iana',
        extensions: ['dvb'],
      },
      'video/vnd.fvt': {
        source: 'iana',
        extensions: ['fvt'],
      },
      'video/vnd.hns.video': {
        source: 'iana',
      },
      'video/vnd.iptvforum.1dparityfec-1010': {
        source: 'iana',
      },
      'video/vnd.iptvforum.1dparityfec-2005': {
        source: 'iana',
      },
      'video/vnd.iptvforum.2dparityfec-1010': {
        source: 'iana',
      },
      'video/vnd.iptvforum.2dparityfec-2005': {
        source: 'iana',
      },
      'video/vnd.iptvforum.ttsavc': {
        source: 'iana',
      },
      'video/vnd.iptvforum.ttsmpeg2': {
        source: 'iana',
      },
      'video/vnd.motorola.video': {
        source: 'iana',
      },
      'video/vnd.motorola.videop': {
        source: 'iana',
      },
      'video/vnd.mpegurl': {
        source: 'iana',
        extensions: ['mxu', 'm4u'],
      },
      'video/vnd.ms-playready.media.pyv': {
        source: 'iana',
        extensions: ['pyv'],
      },
      'video/vnd.nokia.interleaved-multimedia': {
        source: 'iana',
      },
      'video/vnd.nokia.mp4vr': {
        source: 'iana',
      },
      'video/vnd.nokia.videovoip': {
        source: 'iana',
      },
      'video/vnd.objectvideo': {
        source: 'iana',
      },
      'video/vnd.radgamettools.bink': {
        source: 'iana',
      },
      'video/vnd.radgamettools.smacker': {
        source: 'iana',
      },
      'video/vnd.sealed.mpeg1': {
        source: 'iana',
      },
      'video/vnd.sealed.mpeg4': {
        source: 'iana',
      },
      'video/vnd.sealed.swf': {
        source: 'iana',
      },
      'video/vnd.sealedmedia.softseal.mov': {
        source: 'iana',
      },
      'video/vnd.uvvu.mp4': {
        source: 'iana',
        extensions: ['uvu', 'uvvu'],
      },
      'video/vnd.vivo': {
        source: 'iana',
        extensions: ['viv'],
      },
      'video/vnd.youtube.yt': {
        source: 'iana',
      },
      'video/vp8': {
        source: 'iana',
      },
      'video/vp9': {
        source: 'iana',
      },
      'video/webm': {
        source: 'apache',
        compressible: false,
        extensions: ['webm'],
      },
      'video/x-f4v': {
        source: 'apache',
        extensions: ['f4v'],
      },
      'video/x-fli': {
        source: 'apache',
        extensions: ['fli'],
      },
      'video/x-flv': {
        source: 'apache',
        compressible: false,
        extensions: ['flv'],
      },
      'video/x-m4v': {
        source: 'apache',
        extensions: ['m4v'],
      },
      'video/x-matroska': {
        source: 'apache',
        compressible: false,
        extensions: ['mkv', 'mk3d', 'mks'],
      },
      'video/x-mng': {
        source: 'apache',
        extensions: ['mng'],
      },
      'video/x-ms-asf': {
        source: 'apache',
        extensions: ['asf', 'asx'],
      },
      'video/x-ms-vob': {
        source: 'apache',
        extensions: ['vob'],
      },
      'video/x-ms-wm': {
        source: 'apache',
        extensions: ['wm'],
      },
      'video/x-ms-wmv': {
        source: 'apache',
        compressible: false,
        extensions: ['wmv'],
      },
      'video/x-ms-wmx': {
        source: 'apache',
        extensions: ['wmx'],
      },
      'video/x-ms-wvx': {
        source: 'apache',
        extensions: ['wvx'],
      },
      'video/x-msvideo': {
        source: 'apache',
        extensions: ['avi'],
      },
      'video/x-sgi-movie': {
        source: 'apache',
        extensions: ['movie'],
      },
      'video/x-smv': {
        source: 'apache',
        extensions: ['smv'],
      },
      'x-conference/x-cooltalk': {
        source: 'apache',
        extensions: ['ice'],
      },
      'x-shader/x-fragment': {
        compressible: true,
      },
      'x-shader/x-vertex': {
        compressible: true,
      },
    };
  },
});

// ../../node_modules/mime-db/index.js
var require_mime_db = __commonJS({
  '../../node_modules/mime-db/index.js'(exports2, module2) {
    'use strict';
    module2.exports = require_db();
  },
});

// ../../node_modules/mime-types/index.js
var require_mime_types = __commonJS({
  '../../node_modules/mime-types/index.js'(exports2) {
    'use strict';
    var db = require_mime_db();
    var extname = require('path').extname;
    var EXTRACT_TYPE_REGEXP = /^\s*([^;\s]*)(?:;|\s|$)/;
    var TEXT_TYPE_REGEXP = /^text\//i;
    exports2.charset = charset;
    exports2.charsets = { lookup: charset };
    exports2.contentType = contentType;
    exports2.extension = extension;
    exports2.extensions = /* @__PURE__ */ Object.create(null);
    exports2.lookup = lookup;
    exports2.types = /* @__PURE__ */ Object.create(null);
    populateMaps(exports2.extensions, exports2.types);
    function charset(type) {
      if (!type || typeof type !== 'string') {
        return false;
      }
      var match = EXTRACT_TYPE_REGEXP.exec(type);
      var mime = match && db[match[1].toLowerCase()];
      if (mime && mime.charset) {
        return mime.charset;
      }
      if (match && TEXT_TYPE_REGEXP.test(match[1])) {
        return 'UTF-8';
      }
      return false;
    }
    function contentType(str) {
      if (!str || typeof str !== 'string') {
        return false;
      }
      var mime = str.indexOf('/') === -1 ? exports2.lookup(str) : str;
      if (!mime) {
        return false;
      }
      if (mime.indexOf('charset') === -1) {
        var charset2 = exports2.charset(mime);
        if (charset2) mime += '; charset=' + charset2.toLowerCase();
      }
      return mime;
    }
    function extension(type) {
      if (!type || typeof type !== 'string') {
        return false;
      }
      var match = EXTRACT_TYPE_REGEXP.exec(type);
      var exts = match && exports2.extensions[match[1].toLowerCase()];
      if (!exts || !exts.length) {
        return false;
      }
      return exts[0];
    }
    function lookup(path) {
      if (!path || typeof path !== 'string') {
        return false;
      }
      var extension2 = extname('x.' + path)
        .toLowerCase()
        .substr(1);
      if (!extension2) {
        return false;
      }
      return exports2.types[extension2] || false;
    }
    function populateMaps(extensions, types) {
      var preference = ['nginx', 'apache', void 0, 'iana'];
      Object.keys(db).forEach(function forEachMimeType(type) {
        var mime = db[type];
        var exts = mime.extensions;
        if (!exts || !exts.length) {
          return;
        }
        extensions[type] = exts;
        for (var i = 0; i < exts.length; i++) {
          var extension2 = exts[i];
          if (types[extension2]) {
            var from = preference.indexOf(db[types[extension2]].source);
            var to2 = preference.indexOf(mime.source);
            if (
              types[extension2] !== 'application/octet-stream' &&
              (from > to2 ||
                (from === to2 &&
                  types[extension2].substr(0, 12) === 'application/'))
            ) {
              continue;
            }
          }
          types[extension2] = type;
        }
      });
    }
  },
});

// ../../node_modules/type-is/index.js
var require_type_is = __commonJS({
  '../../node_modules/type-is/index.js'(exports2, module2) {
    'use strict';
    var typer = require_media_typer();
    var mime = require_mime_types();
    module2.exports = typeofrequest;
    module2.exports.is = typeis;
    module2.exports.hasBody = hasbody;
    module2.exports.normalize = normalize2;
    module2.exports.match = mimeMatch;
    function typeis(value, types_) {
      var i;
      var types = types_;
      var val = tryNormalizeType(value);
      if (!val) {
        return false;
      }
      if (types && !Array.isArray(types)) {
        types = new Array(arguments.length - 1);
        for (i = 0; i < types.length; i++) {
          types[i] = arguments[i + 1];
        }
      }
      if (!types || !types.length) {
        return val;
      }
      var type;
      for (i = 0; i < types.length; i++) {
        if (mimeMatch(normalize2((type = types[i])), val)) {
          return type[0] === '+' || type.indexOf('*') !== -1 ? val : type;
        }
      }
      return false;
    }
    function hasbody(req) {
      return (
        req.headers['transfer-encoding'] !== void 0 ||
        !isNaN(req.headers['content-length'])
      );
    }
    function typeofrequest(req, types_) {
      var types = types_;
      if (!hasbody(req)) {
        return null;
      }
      if (arguments.length > 2) {
        types = new Array(arguments.length - 1);
        for (var i = 0; i < types.length; i++) {
          types[i] = arguments[i + 1];
        }
      }
      var value = req.headers['content-type'];
      return typeis(value, types);
    }
    function normalize2(type) {
      if (typeof type !== 'string') {
        return false;
      }
      switch (type) {
        case 'urlencoded':
          return 'application/x-www-form-urlencoded';
        case 'multipart':
          return 'multipart/*';
      }
      if (type[0] === '+') {
        return '*/*' + type;
      }
      return type.indexOf('/') === -1 ? mime.lookup(type) : type;
    }
    function mimeMatch(expected, actual) {
      if (expected === false) {
        return false;
      }
      var actualParts = actual.split('/');
      var expectedParts = expected.split('/');
      if (actualParts.length !== 2 || expectedParts.length !== 2) {
        return false;
      }
      if (expectedParts[0] !== '*' && expectedParts[0] !== actualParts[0]) {
        return false;
      }
      if (expectedParts[1].substr(0, 2) === '*+') {
        return (
          expectedParts[1].length <= actualParts[1].length + 1 &&
          expectedParts[1].substr(1) ===
            actualParts[1].substr(1 - expectedParts[1].length)
        );
      }
      if (expectedParts[1] !== '*' && expectedParts[1] !== actualParts[1]) {
        return false;
      }
      return true;
    }
    function normalizeType(value) {
      var type = typer.parse(value);
      type.parameters = void 0;
      return typer.format(type);
    }
    function tryNormalizeType(value) {
      if (!value) {
        return null;
      }
      try {
        return normalizeType(value);
      } catch (err) {
        return null;
      }
    }
  },
});

// ../../node_modules/body-parser/lib/types/json.js
var require_json = __commonJS({
  '../../node_modules/body-parser/lib/types/json.js'(exports2, module2) {
    'use strict';
    var bytes = require_bytes();
    var contentType = require_content_type();
    var createError = require_http_errors();
    var debug2 = require_src()('body-parser:json');
    var read = require_read();
    var typeis = require_type_is();
    module2.exports = json;
    var FIRST_CHAR_REGEXP = /^[\x20\x09\x0a\x0d]*([^\x20\x09\x0a\x0d])/;
    function json(options) {
      var opts = options || {};
      var limit =
        typeof opts.limit !== 'number'
          ? bytes.parse(opts.limit || '100kb')
          : opts.limit;
      var inflate = opts.inflate !== false;
      var reviver = opts.reviver;
      var strict = opts.strict !== false;
      var type = opts.type || 'application/json';
      var verify = opts.verify || false;
      if (verify !== false && typeof verify !== 'function') {
        throw new TypeError('option verify must be function');
      }
      var shouldParse = typeof type !== 'function' ? typeChecker(type) : type;
      function parse(body) {
        if (body.length === 0) {
          return {};
        }
        if (strict) {
          var first = firstchar(body);
          if (first !== '{' && first !== '[') {
            debug2('strict violation');
            throw createStrictSyntaxError(body, first);
          }
        }
        try {
          debug2('parse json');
          return JSON.parse(body, reviver);
        } catch (e2) {
          throw normalizeJsonSyntaxError(e2, {
            message: e2.message,
            stack: e2.stack,
          });
        }
      }
      return function jsonParser(req, res, next) {
        if (req._body) {
          debug2('body already parsed');
          next();
          return;
        }
        req.body = req.body || {};
        if (!typeis.hasBody(req)) {
          debug2('skip empty body');
          next();
          return;
        }
        debug2('content-type %j', req.headers['content-type']);
        if (!shouldParse(req)) {
          debug2('skip parsing');
          next();
          return;
        }
        var charset = getCharset(req) || 'utf-8';
        if (charset.slice(0, 4) !== 'utf-') {
          debug2('invalid charset');
          next(
            createError(
              415,
              'unsupported charset "' + charset.toUpperCase() + '"',
              {
                charset,
                type: 'charset.unsupported',
              }
            )
          );
          return;
        }
        read(req, res, next, parse, debug2, {
          encoding: charset,
          inflate,
          limit,
          verify,
        });
      };
    }
    function createStrictSyntaxError(str, char) {
      var index = str.indexOf(char);
      var partial = index !== -1 ? str.substring(0, index) + '#' : '';
      try {
        JSON.parse(partial);
        throw new SyntaxError('strict violation');
      } catch (e2) {
        return normalizeJsonSyntaxError(e2, {
          message: e2.message.replace('#', char),
          stack: e2.stack,
        });
      }
    }
    function firstchar(str) {
      var match = FIRST_CHAR_REGEXP.exec(str);
      return match ? match[1] : void 0;
    }
    function getCharset(req) {
      try {
        return (contentType.parse(req).parameters.charset || '').toLowerCase();
      } catch (e2) {
        return void 0;
      }
    }
    function normalizeJsonSyntaxError(error, obj) {
      var keys = Object.getOwnPropertyNames(error);
      for (var i = 0; i < keys.length; i++) {
        var key = keys[i];
        if (key !== 'stack' && key !== 'message') {
          delete error[key];
        }
      }
      error.stack = obj.stack.replace(error.message, obj.message);
      error.message = obj.message;
      return error;
    }
    function typeChecker(type) {
      return function checkType(req) {
        return Boolean(typeis(req, type));
      };
    }
  },
});

// ../../node_modules/body-parser/lib/types/raw.js
var require_raw = __commonJS({
  '../../node_modules/body-parser/lib/types/raw.js'(exports2, module2) {
    'use strict';
    var bytes = require_bytes();
    var debug2 = require_src()('body-parser:raw');
    var read = require_read();
    var typeis = require_type_is();
    module2.exports = raw2;
    function raw2(options) {
      var opts = options || {};
      var inflate = opts.inflate !== false;
      var limit =
        typeof opts.limit !== 'number'
          ? bytes.parse(opts.limit || '100kb')
          : opts.limit;
      var type = opts.type || 'application/octet-stream';
      var verify = opts.verify || false;
      if (verify !== false && typeof verify !== 'function') {
        throw new TypeError('option verify must be function');
      }
      var shouldParse = typeof type !== 'function' ? typeChecker(type) : type;
      function parse(buf) {
        return buf;
      }
      return function rawParser(req, res, next) {
        if (req._body) {
          debug2('body already parsed');
          next();
          return;
        }
        req.body = req.body || {};
        if (!typeis.hasBody(req)) {
          debug2('skip empty body');
          next();
          return;
        }
        debug2('content-type %j', req.headers['content-type']);
        if (!shouldParse(req)) {
          debug2('skip parsing');
          next();
          return;
        }
        read(req, res, next, parse, debug2, {
          encoding: null,
          inflate,
          limit,
          verify,
        });
      };
    }
    function typeChecker(type) {
      return function checkType(req) {
        return Boolean(typeis(req, type));
      };
    }
  },
});

// ../../node_modules/body-parser/lib/types/text.js
var require_text = __commonJS({
  '../../node_modules/body-parser/lib/types/text.js'(exports2, module2) {
    'use strict';
    var bytes = require_bytes();
    var contentType = require_content_type();
    var debug2 = require_src()('body-parser:text');
    var read = require_read();
    var typeis = require_type_is();
    module2.exports = text;
    function text(options) {
      var opts = options || {};
      var defaultCharset = opts.defaultCharset || 'utf-8';
      var inflate = opts.inflate !== false;
      var limit =
        typeof opts.limit !== 'number'
          ? bytes.parse(opts.limit || '100kb')
          : opts.limit;
      var type = opts.type || 'text/plain';
      var verify = opts.verify || false;
      if (verify !== false && typeof verify !== 'function') {
        throw new TypeError('option verify must be function');
      }
      var shouldParse = typeof type !== 'function' ? typeChecker(type) : type;
      function parse(buf) {
        return buf;
      }
      return function textParser(req, res, next) {
        if (req._body) {
          debug2('body already parsed');
          next();
          return;
        }
        req.body = req.body || {};
        if (!typeis.hasBody(req)) {
          debug2('skip empty body');
          next();
          return;
        }
        debug2('content-type %j', req.headers['content-type']);
        if (!shouldParse(req)) {
          debug2('skip parsing');
          next();
          return;
        }
        var charset = getCharset(req) || defaultCharset;
        read(req, res, next, parse, debug2, {
          encoding: charset,
          inflate,
          limit,
          verify,
        });
      };
    }
    function getCharset(req) {
      try {
        return (contentType.parse(req).parameters.charset || '').toLowerCase();
      } catch (e2) {
        return void 0;
      }
    }
    function typeChecker(type) {
      return function checkType(req) {
        return Boolean(typeis(req, type));
      };
    }
  },
});

// ../../node_modules/has-symbols/shams.js
var require_shams = __commonJS({
  '../../node_modules/has-symbols/shams.js'(exports2, module2) {
    'use strict';
    module2.exports = function hasSymbols() {
      if (
        typeof Symbol !== 'function' ||
        typeof Object.getOwnPropertySymbols !== 'function'
      ) {
        return false;
      }
      if (typeof Symbol.iterator === 'symbol') {
        return true;
      }
      var obj = {};
      var sym = Symbol('test');
      var symObj = Object(sym);
      if (typeof sym === 'string') {
        return false;
      }
      if (Object.prototype.toString.call(sym) !== '[object Symbol]') {
        return false;
      }
      if (Object.prototype.toString.call(symObj) !== '[object Symbol]') {
        return false;
      }
      var symVal = 42;
      obj[sym] = symVal;
      for (sym in obj) {
        return false;
      }
      if (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) {
        return false;
      }
      if (
        typeof Object.getOwnPropertyNames === 'function' &&
        Object.getOwnPropertyNames(obj).length !== 0
      ) {
        return false;
      }
      var syms = Object.getOwnPropertySymbols(obj);
      if (syms.length !== 1 || syms[0] !== sym) {
        return false;
      }
      if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) {
        return false;
      }
      if (typeof Object.getOwnPropertyDescriptor === 'function') {
        var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
        if (descriptor.value !== symVal || descriptor.enumerable !== true) {
          return false;
        }
      }
      return true;
    };
  },
});

// ../../node_modules/has-symbols/index.js
var require_has_symbols = __commonJS({
  '../../node_modules/has-symbols/index.js'(exports2, module2) {
    'use strict';
    var origSymbol = typeof Symbol !== 'undefined' && Symbol;
    var hasSymbolSham = require_shams();
    module2.exports = function hasNativeSymbols() {
      if (typeof origSymbol !== 'function') {
        return false;
      }
      if (typeof Symbol !== 'function') {
        return false;
      }
      if (typeof origSymbol('foo') !== 'symbol') {
        return false;
      }
      if (typeof Symbol('bar') !== 'symbol') {
        return false;
      }
      return hasSymbolSham();
    };
  },
});

// ../../node_modules/function-bind/implementation.js
var require_implementation = __commonJS({
  '../../node_modules/function-bind/implementation.js'(exports2, module2) {
    'use strict';
    var ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';
    var slice = Array.prototype.slice;
    var toStr = Object.prototype.toString;
    var funcType = '[object Function]';
    module2.exports = function bind(that) {
      var target = this;
      if (typeof target !== 'function' || toStr.call(target) !== funcType) {
        throw new TypeError(ERROR_MESSAGE + target);
      }
      var args = slice.call(arguments, 1);
      var bound;
      var binder = function () {
        if (this instanceof bound) {
          var result = target.apply(this, args.concat(slice.call(arguments)));
          if (Object(result) === result) {
            return result;
          }
          return this;
        } else {
          return target.apply(that, args.concat(slice.call(arguments)));
        }
      };
      var boundLength = Math.max(0, target.length - args.length);
      var boundArgs = [];
      for (var i = 0; i < boundLength; i++) {
        boundArgs.push('$' + i);
      }
      bound = Function(
        'binder',
        'return function (' +
          boundArgs.join(',') +
          '){ return binder.apply(this,arguments); }'
      )(binder);
      if (target.prototype) {
        var Empty = function Empty2() {};
        Empty.prototype = target.prototype;
        bound.prototype = new Empty();
        Empty.prototype = null;
      }
      return bound;
    };
  },
});

// ../../node_modules/function-bind/index.js
var require_function_bind = __commonJS({
  '../../node_modules/function-bind/index.js'(exports2, module2) {
    'use strict';
    var implementation = require_implementation();
    module2.exports = Function.prototype.bind || implementation;
  },
});

// ../../node_modules/has/src/index.js
var require_src2 = __commonJS({
  '../../node_modules/has/src/index.js'(exports2, module2) {
    'use strict';
    var bind = require_function_bind();
    module2.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);
  },
});

// ../../node_modules/get-intrinsic/index.js
var require_get_intrinsic = __commonJS({
  '../../node_modules/get-intrinsic/index.js'(exports2, module2) {
    'use strict';
    var undefined2;
    var $SyntaxError = SyntaxError;
    var $Function = Function;
    var $TypeError = TypeError;
    var getEvalledConstructor = function (expressionSyntax) {
      try {
        return $Function(
          '"use strict"; return (' + expressionSyntax + ').constructor;'
        )();
      } catch (e2) {}
    };
    var $gOPD = Object.getOwnPropertyDescriptor;
    if ($gOPD) {
      try {
        $gOPD({}, '');
      } catch (e2) {
        $gOPD = null;
      }
    }
    var throwTypeError = function () {
      throw new $TypeError();
    };
    var ThrowTypeError = $gOPD
      ? (function () {
          try {
            arguments.callee;
            return throwTypeError;
          } catch (calleeThrows) {
            try {
              return $gOPD(arguments, 'callee').get;
            } catch (gOPDthrows) {
              return throwTypeError;
            }
          }
        })()
      : throwTypeError;
    var hasSymbols = require_has_symbols()();
    var getProto =
      Object.getPrototypeOf ||
      function (x) {
        return x.__proto__;
      };
    var needsEval = {};
    var TypedArray =
      typeof Uint8Array === 'undefined' ? undefined2 : getProto(Uint8Array);
    var INTRINSICS = {
      '%AggregateError%':
        typeof AggregateError === 'undefined' ? undefined2 : AggregateError,
      '%Array%': Array,
      '%ArrayBuffer%':
        typeof ArrayBuffer === 'undefined' ? undefined2 : ArrayBuffer,
      '%ArrayIteratorPrototype%': hasSymbols
        ? getProto([][Symbol.iterator]())
        : undefined2,
      '%AsyncFromSyncIteratorPrototype%': undefined2,
      '%AsyncFunction%': needsEval,
      '%AsyncGenerator%': needsEval,
      '%AsyncGeneratorFunction%': needsEval,
      '%AsyncIteratorPrototype%': needsEval,
      '%Atomics%': typeof Atomics === 'undefined' ? undefined2 : Atomics,
      '%BigInt%': typeof BigInt === 'undefined' ? undefined2 : BigInt,
      '%BigInt64Array%':
        typeof BigInt64Array === 'undefined' ? undefined2 : BigInt64Array,
      '%BigUint64Array%':
        typeof BigUint64Array === 'undefined' ? undefined2 : BigUint64Array,
      '%Boolean%': Boolean,
      '%DataView%': typeof DataView === 'undefined' ? undefined2 : DataView,
      '%Date%': Date,
      '%decodeURI%': decodeURI,
      '%decodeURIComponent%': decodeURIComponent,
      '%encodeURI%': encodeURI,
      '%encodeURIComponent%': encodeURIComponent,
      '%Error%': Error,
      '%eval%': eval,
      // eslint-disable-line no-eval
      '%EvalError%': EvalError,
      '%Float32Array%':
        typeof Float32Array === 'undefined' ? undefined2 : Float32Array,
      '%Float64Array%':
        typeof Float64Array === 'undefined' ? undefined2 : Float64Array,
      '%FinalizationRegistry%':
        typeof FinalizationRegistry === 'undefined'
          ? undefined2
          : FinalizationRegistry,
      '%Function%': $Function,
      '%GeneratorFunction%': needsEval,
      '%Int8Array%': typeof Int8Array === 'undefined' ? undefined2 : Int8Array,
      '%Int16Array%':
        typeof Int16Array === 'undefined' ? undefined2 : Int16Array,
      '%Int32Array%':
        typeof Int32Array === 'undefined' ? undefined2 : Int32Array,
      '%isFinite%': isFinite,
      '%isNaN%': isNaN,
      '%IteratorPrototype%': hasSymbols
        ? getProto(getProto([][Symbol.iterator]()))
        : undefined2,
      '%JSON%': typeof JSON === 'object' ? JSON : undefined2,
      '%Map%': typeof Map === 'undefined' ? undefined2 : Map,
      '%MapIteratorPrototype%':
        typeof Map === 'undefined' || !hasSymbols
          ? undefined2
          : getProto(/* @__PURE__ */ new Map()[Symbol.iterator]()),
      '%Math%': Math,
      '%Number%': Number,
      '%Object%': Object,
      '%parseFloat%': parseFloat,
      '%parseInt%': parseInt,
      '%Promise%': typeof Promise === 'undefined' ? undefined2 : Promise,
      '%Proxy%': typeof Proxy === 'undefined' ? undefined2 : Proxy,
      '%RangeError%': RangeError,
      '%ReferenceError%': ReferenceError,
      '%Reflect%': typeof Reflect === 'undefined' ? undefined2 : Reflect,
      '%RegExp%': RegExp,
      '%Set%': typeof Set === 'undefined' ? undefined2 : Set,
      '%SetIteratorPrototype%':
        typeof Set === 'undefined' || !hasSymbols
          ? undefined2
          : getProto(/* @__PURE__ */ new Set()[Symbol.iterator]()),
      '%SharedArrayBuffer%':
        typeof SharedArrayBuffer === 'undefined'
          ? undefined2
          : SharedArrayBuffer,
      '%String%': String,
      '%StringIteratorPrototype%': hasSymbols
        ? getProto(''[Symbol.iterator]())
        : undefined2,
      '%Symbol%': hasSymbols ? Symbol : undefined2,
      '%SyntaxError%': $SyntaxError,
      '%ThrowTypeError%': ThrowTypeError,
      '%TypedArray%': TypedArray,
      '%TypeError%': $TypeError,
      '%Uint8Array%':
        typeof Uint8Array === 'undefined' ? undefined2 : Uint8Array,
      '%Uint8ClampedArray%':
        typeof Uint8ClampedArray === 'undefined'
          ? undefined2
          : Uint8ClampedArray,
      '%Uint16Array%':
        typeof Uint16Array === 'undefined' ? undefined2 : Uint16Array,
      '%Uint32Array%':
        typeof Uint32Array === 'undefined' ? undefined2 : Uint32Array,
      '%URIError%': URIError,
      '%WeakMap%': typeof WeakMap === 'undefined' ? undefined2 : WeakMap,
      '%WeakRef%': typeof WeakRef === 'undefined' ? undefined2 : WeakRef,
      '%WeakSet%': typeof WeakSet === 'undefined' ? undefined2 : WeakSet,
    };
    try {
      null.error;
    } catch (e2) {
      errorProto = getProto(getProto(e2));
      INTRINSICS['%Error.prototype%'] = errorProto;
    }
    var errorProto;
    var doEval = function doEval2(name) {
      var value;
      if (name === '%AsyncFunction%') {
        value = getEvalledConstructor('async function () {}');
      } else if (name === '%GeneratorFunction%') {
        value = getEvalledConstructor('function* () {}');
      } else if (name === '%AsyncGeneratorFunction%') {
        value = getEvalledConstructor('async function* () {}');
      } else if (name === '%AsyncGenerator%') {
        var fn = doEval2('%AsyncGeneratorFunction%');
        if (fn) {
          value = fn.prototype;
        }
      } else if (name === '%AsyncIteratorPrototype%') {
        var gen = doEval2('%AsyncGenerator%');
        if (gen) {
          value = getProto(gen.prototype);
        }
      }
      INTRINSICS[name] = value;
      return value;
    };
    var LEGACY_ALIASES = {
      '%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],
      '%ArrayPrototype%': ['Array', 'prototype'],
      '%ArrayProto_entries%': ['Array', 'prototype', 'entries'],
      '%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],
      '%ArrayProto_keys%': ['Array', 'prototype', 'keys'],
      '%ArrayProto_values%': ['Array', 'prototype', 'values'],
      '%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],
      '%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],
      '%AsyncGeneratorPrototype%': [
        'AsyncGeneratorFunction',
        'prototype',
        'prototype',
      ],
      '%BooleanPrototype%': ['Boolean', 'prototype'],
      '%DataViewPrototype%': ['DataView', 'prototype'],
      '%DatePrototype%': ['Date', 'prototype'],
      '%ErrorPrototype%': ['Error', 'prototype'],
      '%EvalErrorPrototype%': ['EvalError', 'prototype'],
      '%Float32ArrayPrototype%': ['Float32Array', 'prototype'],
      '%Float64ArrayPrototype%': ['Float64Array', 'prototype'],
      '%FunctionPrototype%': ['Function', 'prototype'],
      '%Generator%': ['GeneratorFunction', 'prototype'],
      '%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],
      '%Int8ArrayPrototype%': ['Int8Array', 'prototype'],
      '%Int16ArrayPrototype%': ['Int16Array', 'prototype'],
      '%Int32ArrayPrototype%': ['Int32Array', 'prototype'],
      '%JSONParse%': ['JSON', 'parse'],
      '%JSONStringify%': ['JSON', 'stringify'],
      '%MapPrototype%': ['Map', 'prototype'],
      '%NumberPrototype%': ['Number', 'prototype'],
      '%ObjectPrototype%': ['Object', 'prototype'],
      '%ObjProto_toString%': ['Object', 'prototype', 'toString'],
      '%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],
      '%PromisePrototype%': ['Promise', 'prototype'],
      '%PromiseProto_then%': ['Promise', 'prototype', 'then'],
      '%Promise_all%': ['Promise', 'all'],
      '%Promise_reject%': ['Promise', 'reject'],
      '%Promise_resolve%': ['Promise', 'resolve'],
      '%RangeErrorPrototype%': ['RangeError', 'prototype'],
      '%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],
      '%RegExpPrototype%': ['RegExp', 'prototype'],
      '%SetPrototype%': ['Set', 'prototype'],
      '%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],
      '%StringPrototype%': ['String', 'prototype'],
      '%SymbolPrototype%': ['Symbol', 'prototype'],
      '%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],
      '%TypedArrayPrototype%': ['TypedArray', 'prototype'],
      '%TypeErrorPrototype%': ['TypeError', 'prototype'],
      '%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],
      '%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],
      '%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],
      '%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],
      '%URIErrorPrototype%': ['URIError', 'prototype'],
      '%WeakMapPrototype%': ['WeakMap', 'prototype'],
      '%WeakSetPrototype%': ['WeakSet', 'prototype'],
    };
    var bind = require_function_bind();
    var hasOwn = require_src2();
    var $concat = bind.call(Function.call, Array.prototype.concat);
    var $spliceApply = bind.call(Function.apply, Array.prototype.splice);
    var $replace = bind.call(Function.call, String.prototype.replace);
    var $strSlice = bind.call(Function.call, String.prototype.slice);
    var $exec = bind.call(Function.call, RegExp.prototype.exec);
    var rePropName =
      /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
    var reEscapeChar = /\\(\\)?/g;
    var stringToPath = function stringToPath2(string) {
      var first = $strSlice(string, 0, 1);
      var last = $strSlice(string, -1);
      if (first === '%' && last !== '%') {
        throw new $SyntaxError(
          'invalid intrinsic syntax, expected closing `%`'
        );
      } else if (last === '%' && first !== '%') {
        throw new $SyntaxError(
          'invalid intrinsic syntax, expected opening `%`'
        );
      }
      var result = [];
      $replace(string, rePropName, function (match, number, quote, subString) {
        result[result.length] = quote
          ? $replace(subString, reEscapeChar, '$1')
          : number || match;
      });
      return result;
    };
    var getBaseIntrinsic = function getBaseIntrinsic2(name, allowMissing) {
      var intrinsicName = name;
      var alias;
      if (hasOwn(LEGACY_ALIASES, intrinsicName)) {
        alias = LEGACY_ALIASES[intrinsicName];
        intrinsicName = '%' + alias[0] + '%';
      }
      if (hasOwn(INTRINSICS, intrinsicName)) {
        var value = INTRINSICS[intrinsicName];
        if (value === needsEval) {
          value = doEval(intrinsicName);
        }
        if (typeof value === 'undefined' && !allowMissing) {
          throw new $TypeError(
            'intrinsic ' +
              name +
              ' exists, but is not available. Please file an issue!'
          );
        }
        return {
          alias,
          name: intrinsicName,
          value,
        };
      }
      throw new $SyntaxError('intrinsic ' + name + ' does not exist!');
    };
    module2.exports = function GetIntrinsic(name, allowMissing) {
      if (typeof name !== 'string' || name.length === 0) {
        throw new $TypeError('intrinsic name must be a non-empty string');
      }
      if (arguments.length > 1 && typeof allowMissing !== 'boolean') {
        throw new $TypeError('"allowMissing" argument must be a boolean');
      }
      if ($exec(/^%?[^%]*%?$/, name) === null) {
        throw new $SyntaxError(
          '`%` may not be present anywhere but at the beginning and end of the intrinsic name'
        );
      }
      var parts = stringToPath(name);
      var intrinsicBaseName = parts.length > 0 ? parts[0] : '';
      var intrinsic = getBaseIntrinsic(
        '%' + intrinsicBaseName + '%',
        allowMissing
      );
      var intrinsicRealName = intrinsic.name;
      var value = intrinsic.value;
      var skipFurtherCaching = false;
      var alias = intrinsic.alias;
      if (alias) {
        intrinsicBaseName = alias[0];
        $spliceApply(parts, $concat([0, 1], alias));
      }
      for (var i = 1, isOwn = true; i < parts.length; i += 1) {
        var part = parts[i];
        var first = $strSlice(part, 0, 1);
        var last = $strSlice(part, -1);
        if (
          (first === '"' ||
            first === "'" ||
            first === '`' ||
            last === '"' ||
            last === "'" ||
            last === '`') &&
          first !== last
        ) {
          throw new $SyntaxError(
            'property names with quotes must have matching quotes'
          );
        }
        if (part === 'constructor' || !isOwn) {
          skipFurtherCaching = true;
        }
        intrinsicBaseName += '.' + part;
        intrinsicRealName = '%' + intrinsicBaseName + '%';
        if (hasOwn(INTRINSICS, intrinsicRealName)) {
          value = INTRINSICS[intrinsicRealName];
        } else if (value != null) {
          if (!(part in value)) {
            if (!allowMissing) {
              throw new $TypeError(
                'base intrinsic for ' +
                  name +
                  ' exists, but the property is not available.'
              );
            }
            return void 0;
          }
          if ($gOPD && i + 1 >= parts.length) {
            var desc = $gOPD(value, part);
            isOwn = !!desc;
            if (isOwn && 'get' in desc && !('originalValue' in desc.get)) {
              value = desc.get;
            } else {
              value = value[part];
            }
          } else {
            isOwn = hasOwn(value, part);
            value = value[part];
          }
          if (isOwn && !skipFurtherCaching) {
            INTRINSICS[intrinsicRealName] = value;
          }
        }
      }
      return value;
    };
  },
});

// ../../node_modules/call-bind/index.js
var require_call_bind = __commonJS({
  '../../node_modules/call-bind/index.js'(exports2, module2) {
    'use strict';
    var bind = require_function_bind();
    var GetIntrinsic = require_get_intrinsic();
    var $apply = GetIntrinsic('%Function.prototype.apply%');
    var $call = GetIntrinsic('%Function.prototype.call%');
    var $reflectApply =
      GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);
    var $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);
    var $defineProperty = GetIntrinsic('%Object.defineProperty%', true);
    var $max = GetIntrinsic('%Math.max%');
    if ($defineProperty) {
      try {
        $defineProperty({}, 'a', { value: 1 });
      } catch (e2) {
        $defineProperty = null;
      }
    }
    module2.exports = function callBind(originalFunction) {
      var func = $reflectApply(bind, $call, arguments);
      if ($gOPD && $defineProperty) {
        var desc = $gOPD(func, 'length');
        if (desc.configurable) {
          $defineProperty(func, 'length', {
            value:
              1 + $max(0, originalFunction.length - (arguments.length - 1)),
          });
        }
      }
      return func;
    };
    var applyBind = function applyBind2() {
      return $reflectApply(bind, $apply, arguments);
    };
    if ($defineProperty) {
      $defineProperty(module2.exports, 'apply', { value: applyBind });
    } else {
      module2.exports.apply = applyBind;
    }
  },
});

// ../../node_modules/call-bind/callBound.js
var require_callBound = __commonJS({
  '../../node_modules/call-bind/callBound.js'(exports2, module2) {
    'use strict';
    var GetIntrinsic = require_get_intrinsic();
    var callBind = require_call_bind();
    var $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));
    module2.exports = function callBoundIntrinsic(name, allowMissing) {
      var intrinsic = GetIntrinsic(name, !!allowMissing);
      if (
        typeof intrinsic === 'function' &&
        $indexOf(name, '.prototype.') > -1
      ) {
        return callBind(intrinsic);
      }
      return intrinsic;
    };
  },
});

// ../../node_modules/object-inspect/util.inspect.js
var require_util_inspect = __commonJS({
  '../../node_modules/object-inspect/util.inspect.js'(exports2, module2) {
    'use strict';
    module2.exports = require('util').inspect;
  },
});

// ../../node_modules/object-inspect/index.js
var require_object_inspect = __commonJS({
  '../../node_modules/object-inspect/index.js'(exports2, module2) {
    'use strict';
    var hasMap = typeof Map === 'function' && Map.prototype;
    var mapSizeDescriptor =
      Object.getOwnPropertyDescriptor && hasMap
        ? Object.getOwnPropertyDescriptor(Map.prototype, 'size')
        : null;
    var mapSize =
      hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function'
        ? mapSizeDescriptor.get
        : null;
    var mapForEach = hasMap && Map.prototype.forEach;
    var hasSet = typeof Set === 'function' && Set.prototype;
    var setSizeDescriptor =
      Object.getOwnPropertyDescriptor && hasSet
        ? Object.getOwnPropertyDescriptor(Set.prototype, 'size')
        : null;
    var setSize =
      hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function'
        ? setSizeDescriptor.get
        : null;
    var setForEach = hasSet && Set.prototype.forEach;
    var hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;
    var weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;
    var hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;
    var weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;
    var hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;
    var weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;
    var booleanValueOf = Boolean.prototype.valueOf;
    var objectToString = Object.prototype.toString;
    var functionToString = Function.prototype.toString;
    var $match = String.prototype.match;
    var $slice = String.prototype.slice;
    var $replace = String.prototype.replace;
    var $toUpperCase = String.prototype.toUpperCase;
    var $toLowerCase = String.prototype.toLowerCase;
    var $test = RegExp.prototype.test;
    var $concat = Array.prototype.concat;
    var $join = Array.prototype.join;
    var $arrSlice = Array.prototype.slice;
    var $floor = Math.floor;
    var bigIntValueOf =
      typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;
    var gOPS = Object.getOwnPropertySymbols;
    var symToString =
      typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
        ? Symbol.prototype.toString
        : null;
    var hasShammedSymbols =
      typeof Symbol === 'function' && typeof Symbol.iterator === 'object';
    var toStringTag =
      typeof Symbol === 'function' &&
      Symbol.toStringTag &&
      (typeof Symbol.toStringTag === hasShammedSymbols ? 'object' : 'symbol')
        ? Symbol.toStringTag
        : null;
    var isEnumerable = Object.prototype.propertyIsEnumerable;
    var gPO =
      (typeof Reflect === 'function'
        ? Reflect.getPrototypeOf
        : Object.getPrototypeOf) ||
      ([].__proto__ === Array.prototype
        ? function (O2) {
            return O2.__proto__;
          }
        : null);
    function addNumericSeparator(num, str) {
      if (
        num === Infinity ||
        num === -Infinity ||
        num !== num ||
        (num && num > -1e3 && num < 1e3) ||
        $test.call(/e/, str)
      ) {
        return str;
      }
      var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;
      if (typeof num === 'number') {
        var int = num < 0 ? -$floor(-num) : $floor(num);
        if (int !== num) {
          var intStr = String(int);
          var dec = $slice.call(str, intStr.length + 1);
          return (
            $replace.call(intStr, sepRegex, '$&_') +
            '.' +
            $replace.call($replace.call(dec, /([0-9]{3})/g, '$&_'), /_$/, '')
          );
        }
      }
      return $replace.call(str, sepRegex, '$&_');
    }
    var utilInspect = require_util_inspect();
    var inspectCustom = utilInspect.custom;
    var inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;
    module2.exports = function inspect_(obj, options, depth, seen) {
      var opts = options || {};
      if (
        has(opts, 'quoteStyle') &&
        opts.quoteStyle !== 'single' &&
        opts.quoteStyle !== 'double'
      ) {
        throw new TypeError('option "quoteStyle" must be "single" or "double"');
      }
      if (
        has(opts, 'maxStringLength') &&
        (typeof opts.maxStringLength === 'number'
          ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity
          : opts.maxStringLength !== null)
      ) {
        throw new TypeError(
          'option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`'
        );
      }
      var customInspect = has(opts, 'customInspect')
        ? opts.customInspect
        : true;
      if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {
        throw new TypeError(
          'option "customInspect", if provided, must be `true`, `false`, or `\'symbol\'`'
        );
      }
      if (
        has(opts, 'indent') &&
        opts.indent !== null &&
        opts.indent !== '	' &&
        !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)
      ) {
        throw new TypeError(
          'option "indent" must be "\\t", an integer > 0, or `null`'
        );
      }
      if (
        has(opts, 'numericSeparator') &&
        typeof opts.numericSeparator !== 'boolean'
      ) {
        throw new TypeError(
          'option "numericSeparator", if provided, must be `true` or `false`'
        );
      }
      var numericSeparator = opts.numericSeparator;
      if (typeof obj === 'undefined') {
        return 'undefined';
      }
      if (obj === null) {
        return 'null';
      }
      if (typeof obj === 'boolean') {
        return obj ? 'true' : 'false';
      }
      if (typeof obj === 'string') {
        return inspectString(obj, opts);
      }
      if (typeof obj === 'number') {
        if (obj === 0) {
          return Infinity / obj > 0 ? '0' : '-0';
        }
        var str = String(obj);
        return numericSeparator ? addNumericSeparator(obj, str) : str;
      }
      if (typeof obj === 'bigint') {
        var bigIntStr = String(obj) + 'n';
        return numericSeparator
          ? addNumericSeparator(obj, bigIntStr)
          : bigIntStr;
      }
      var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;
      if (typeof depth === 'undefined') {
        depth = 0;
      }
      if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {
        return isArray(obj) ? '[Array]' : '[Object]';
      }
      var indent = getIndent(opts, depth);
      if (typeof seen === 'undefined') {
        seen = [];
      } else if (indexOf(seen, obj) >= 0) {
        return '[Circular]';
      }
      function inspect(value, from, noIndent) {
        if (from) {
          seen = $arrSlice.call(seen);
          seen.push(from);
        }
        if (noIndent) {
          var newOpts = {
            depth: opts.depth,
          };
          if (has(opts, 'quoteStyle')) {
            newOpts.quoteStyle = opts.quoteStyle;
          }
          return inspect_(value, newOpts, depth + 1, seen);
        }
        return inspect_(value, opts, depth + 1, seen);
      }
      if (typeof obj === 'function' && !isRegExp(obj)) {
        var name = nameOf(obj);
        var keys = arrObjKeys(obj, inspect);
        return (
          '[Function' +
          (name ? ': ' + name : ' (anonymous)') +
          ']' +
          (keys.length > 0 ? ' { ' + $join.call(keys, ', ') + ' }' : '')
        );
      }
      if (isSymbol(obj)) {
        var symString = hasShammedSymbols
          ? $replace.call(String(obj), /^(Symbol\(.*\))_[^)]*$/, '$1')
          : symToString.call(obj);
        return typeof obj === 'object' && !hasShammedSymbols
          ? markBoxed(symString)
          : symString;
      }
      if (isElement(obj)) {
        var s2 = '<' + $toLowerCase.call(String(obj.nodeName));
        var attrs = obj.attributes || [];
        for (var i = 0; i < attrs.length; i++) {
          s2 +=
            ' ' +
            attrs[i].name +
            '=' +
            wrapQuotes(quote(attrs[i].value), 'double', opts);
        }
        s2 += '>';
        if (obj.childNodes && obj.childNodes.length) {
          s2 += '...';
        }
        s2 += '</' + $toLowerCase.call(String(obj.nodeName)) + '>';
        return s2;
      }
      if (isArray(obj)) {
        if (obj.length === 0) {
          return '[]';
        }
        var xs2 = arrObjKeys(obj, inspect);
        if (indent && !singleLineValues(xs2)) {
          return '[' + indentedJoin(xs2, indent) + ']';
        }
        return '[ ' + $join.call(xs2, ', ') + ' ]';
      }
      if (isError(obj)) {
        var parts = arrObjKeys(obj, inspect);
        if (
          !('cause' in Error.prototype) &&
          'cause' in obj &&
          !isEnumerable.call(obj, 'cause')
        ) {
          return (
            '{ [' +
            String(obj) +
            '] ' +
            $join.call(
              $concat.call('[cause]: ' + inspect(obj.cause), parts),
              ', '
            ) +
            ' }'
          );
        }
        if (parts.length === 0) {
          return '[' + String(obj) + ']';
        }
        return '{ [' + String(obj) + '] ' + $join.call(parts, ', ') + ' }';
      }
      if (typeof obj === 'object' && customInspect) {
        if (
          inspectSymbol &&
          typeof obj[inspectSymbol] === 'function' &&
          utilInspect
        ) {
          return utilInspect(obj, { depth: maxDepth - depth });
        } else if (
          customInspect !== 'symbol' &&
          typeof obj.inspect === 'function'
        ) {
          return obj.inspect();
        }
      }
      if (isMap(obj)) {
        var mapParts = [];
        if (mapForEach) {
          mapForEach.call(obj, function (value, key) {
            mapParts.push(
              inspect(key, obj, true) + ' => ' + inspect(value, obj)
            );
          });
        }
        return collectionOf('Map', mapSize.call(obj), mapParts, indent);
      }
      if (isSet(obj)) {
        var setParts = [];
        if (setForEach) {
          setForEach.call(obj, function (value) {
            setParts.push(inspect(value, obj));
          });
        }
        return collectionOf('Set', setSize.call(obj), setParts, indent);
      }
      if (isWeakMap(obj)) {
        return weakCollectionOf('WeakMap');
      }
      if (isWeakSet(obj)) {
        return weakCollectionOf('WeakSet');
      }
      if (isWeakRef(obj)) {
        return weakCollectionOf('WeakRef');
      }
      if (isNumber3(obj)) {
        return markBoxed(inspect(Number(obj)));
      }
      if (isBigInt(obj)) {
        return markBoxed(inspect(bigIntValueOf.call(obj)));
      }
      if (isBoolean(obj)) {
        return markBoxed(booleanValueOf.call(obj));
      }
      if (isString(obj)) {
        return markBoxed(inspect(String(obj)));
      }
      if (!isDate(obj) && !isRegExp(obj)) {
        var ys2 = arrObjKeys(obj, inspect);
        var isPlainObject = gPO
          ? gPO(obj) === Object.prototype
          : obj instanceof Object || obj.constructor === Object;
        var protoTag = obj instanceof Object ? '' : 'null prototype';
        var stringTag =
          !isPlainObject &&
          toStringTag &&
          Object(obj) === obj &&
          toStringTag in obj
            ? $slice.call(toStr(obj), 8, -1)
            : protoTag
            ? 'Object'
            : '';
        var constructorTag =
          isPlainObject || typeof obj.constructor !== 'function'
            ? ''
            : obj.constructor.name
            ? obj.constructor.name + ' '
            : '';
        var tag =
          constructorTag +
          (stringTag || protoTag
            ? '[' +
              $join.call(
                $concat.call([], stringTag || [], protoTag || []),
                ': '
              ) +
              '] '
            : '');
        if (ys2.length === 0) {
          return tag + '{}';
        }
        if (indent) {
          return tag + '{' + indentedJoin(ys2, indent) + '}';
        }
        return tag + '{ ' + $join.call(ys2, ', ') + ' }';
      }
      return String(obj);
    };
    function wrapQuotes(s2, defaultStyle, opts) {
      var quoteChar =
        (opts.quoteStyle || defaultStyle) === 'double' ? '"' : "'";
      return quoteChar + s2 + quoteChar;
    }
    function quote(s2) {
      return $replace.call(String(s2), /"/g, '&quot;');
    }
    function isArray(obj) {
      return (
        toStr(obj) === '[object Array]' &&
        (!toStringTag || !(typeof obj === 'object' && toStringTag in obj))
      );
    }
    function isDate(obj) {
      return (
        toStr(obj) === '[object Date]' &&
        (!toStringTag || !(typeof obj === 'object' && toStringTag in obj))
      );
    }
    function isRegExp(obj) {
      return (
        toStr(obj) === '[object RegExp]' &&
        (!toStringTag || !(typeof obj === 'object' && toStringTag in obj))
      );
    }
    function isError(obj) {
      return (
        toStr(obj) === '[object Error]' &&
        (!toStringTag || !(typeof obj === 'object' && toStringTag in obj))
      );
    }
    function isString(obj) {
      return (
        toStr(obj) === '[object String]' &&
        (!toStringTag || !(typeof obj === 'object' && toStringTag in obj))
      );
    }
    function isNumber3(obj) {
      return (
        toStr(obj) === '[object Number]' &&
        (!toStringTag || !(typeof obj === 'object' && toStringTag in obj))
      );
    }
    function isBoolean(obj) {
      return (
        toStr(obj) === '[object Boolean]' &&
        (!toStringTag || !(typeof obj === 'object' && toStringTag in obj))
      );
    }
    function isSymbol(obj) {
      if (hasShammedSymbols) {
        return obj && typeof obj === 'object' && obj instanceof Symbol;
      }
      if (typeof obj === 'symbol') {
        return true;
      }
      if (!obj || typeof obj !== 'object' || !symToString) {
        return false;
      }
      try {
        symToString.call(obj);
        return true;
      } catch (e2) {}
      return false;
    }
    function isBigInt(obj) {
      if (!obj || typeof obj !== 'object' || !bigIntValueOf) {
        return false;
      }
      try {
        bigIntValueOf.call(obj);
        return true;
      } catch (e2) {}
      return false;
    }
    var hasOwn =
      Object.prototype.hasOwnProperty ||
      function (key) {
        return key in this;
      };
    function has(obj, key) {
      return hasOwn.call(obj, key);
    }
    function toStr(obj) {
      return objectToString.call(obj);
    }
    function nameOf(f) {
      if (f.name) {
        return f.name;
      }
      var m2 = $match.call(functionToString.call(f), /^function\s*([\w$]+)/);
      if (m2) {
        return m2[1];
      }
      return null;
    }
    function indexOf(xs2, x) {
      if (xs2.indexOf) {
        return xs2.indexOf(x);
      }
      for (var i = 0, l2 = xs2.length; i < l2; i++) {
        if (xs2[i] === x) {
          return i;
        }
      }
      return -1;
    }
    function isMap(x) {
      if (!mapSize || !x || typeof x !== 'object') {
        return false;
      }
      try {
        mapSize.call(x);
        try {
          setSize.call(x);
        } catch (s2) {
          return true;
        }
        return x instanceof Map;
      } catch (e2) {}
      return false;
    }
    function isWeakMap(x) {
      if (!weakMapHas || !x || typeof x !== 'object') {
        return false;
      }
      try {
        weakMapHas.call(x, weakMapHas);
        try {
          weakSetHas.call(x, weakSetHas);
        } catch (s2) {
          return true;
        }
        return x instanceof WeakMap;
      } catch (e2) {}
      return false;
    }
    function isWeakRef(x) {
      if (!weakRefDeref || !x || typeof x !== 'object') {
        return false;
      }
      try {
        weakRefDeref.call(x);
        return true;
      } catch (e2) {}
      return false;
    }
    function isSet(x) {
      if (!setSize || !x || typeof x !== 'object') {
        return false;
      }
      try {
        setSize.call(x);
        try {
          mapSize.call(x);
        } catch (m2) {
          return true;
        }
        return x instanceof Set;
      } catch (e2) {}
      return false;
    }
    function isWeakSet(x) {
      if (!weakSetHas || !x || typeof x !== 'object') {
        return false;
      }
      try {
        weakSetHas.call(x, weakSetHas);
        try {
          weakMapHas.call(x, weakMapHas);
        } catch (s2) {
          return true;
        }
        return x instanceof WeakSet;
      } catch (e2) {}
      return false;
    }
    function isElement(x) {
      if (!x || typeof x !== 'object') {
        return false;
      }
      if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {
        return true;
      }
      return (
        typeof x.nodeName === 'string' && typeof x.getAttribute === 'function'
      );
    }
    function inspectString(str, opts) {
      if (str.length > opts.maxStringLength) {
        var remaining = str.length - opts.maxStringLength;
        var trailer =
          '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');
        return (
          inspectString($slice.call(str, 0, opts.maxStringLength), opts) +
          trailer
        );
      }
      var s2 = $replace.call(
        $replace.call(str, /(['\\])/g, '\\$1'),
        /[\x00-\x1f]/g,
        lowbyte
      );
      return wrapQuotes(s2, 'single', opts);
    }
    function lowbyte(c2) {
      var n2 = c2.charCodeAt(0);
      var x = {
        8: 'b',
        9: 't',
        10: 'n',
        12: 'f',
        13: 'r',
      }[n2];
      if (x) {
        return '\\' + x;
      }
      return '\\x' + (n2 < 16 ? '0' : '') + $toUpperCase.call(n2.toString(16));
    }
    function markBoxed(str) {
      return 'Object(' + str + ')';
    }
    function weakCollectionOf(type) {
      return type + ' { ? }';
    }
    function collectionOf(type, size, entries, indent) {
      var joinedEntries = indent
        ? indentedJoin(entries, indent)
        : $join.call(entries, ', ');
      return type + ' (' + size + ') {' + joinedEntries + '}';
    }
    function singleLineValues(xs2) {
      for (var i = 0; i < xs2.length; i++) {
        if (indexOf(xs2[i], '\n') >= 0) {
          return false;
        }
      }
      return true;
    }
    function getIndent(opts, depth) {
      var baseIndent;
      if (opts.indent === '	') {
        baseIndent = '	';
      } else if (typeof opts.indent === 'number' && opts.indent > 0) {
        baseIndent = $join.call(Array(opts.indent + 1), ' ');
      } else {
        return null;
      }
      return {
        base: baseIndent,
        prev: $join.call(Array(depth + 1), baseIndent),
      };
    }
    function indentedJoin(xs2, indent) {
      if (xs2.length === 0) {
        return '';
      }
      var lineJoiner = '\n' + indent.prev + indent.base;
      return (
        lineJoiner + $join.call(xs2, ',' + lineJoiner) + '\n' + indent.prev
      );
    }
    function arrObjKeys(obj, inspect) {
      var isArr = isArray(obj);
      var xs2 = [];
      if (isArr) {
        xs2.length = obj.length;
        for (var i = 0; i < obj.length; i++) {
          xs2[i] = has(obj, i) ? inspect(obj[i], obj) : '';
        }
      }
      var syms = typeof gOPS === 'function' ? gOPS(obj) : [];
      var symMap;
      if (hasShammedSymbols) {
        symMap = {};
        for (var k2 = 0; k2 < syms.length; k2++) {
          symMap['$' + syms[k2]] = syms[k2];
        }
      }
      for (var key in obj) {
        if (!has(obj, key)) {
          continue;
        }
        if (isArr && String(Number(key)) === key && key < obj.length) {
          continue;
        }
        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {
          continue;
        } else if ($test.call(/[^\w$]/, key)) {
          xs2.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));
        } else {
          xs2.push(key + ': ' + inspect(obj[key], obj));
        }
      }
      if (typeof gOPS === 'function') {
        for (var j2 = 0; j2 < syms.length; j2++) {
          if (isEnumerable.call(obj, syms[j2])) {
            xs2.push(
              '[' + inspect(syms[j2]) + ']: ' + inspect(obj[syms[j2]], obj)
            );
          }
        }
      }
      return xs2;
    }
  },
});

// ../../node_modules/side-channel/index.js
var require_side_channel = __commonJS({
  '../../node_modules/side-channel/index.js'(exports2, module2) {
    'use strict';
    var GetIntrinsic = require_get_intrinsic();
    var callBound = require_callBound();
    var inspect = require_object_inspect();
    var $TypeError = GetIntrinsic('%TypeError%');
    var $WeakMap = GetIntrinsic('%WeakMap%', true);
    var $Map = GetIntrinsic('%Map%', true);
    var $weakMapGet = callBound('WeakMap.prototype.get', true);
    var $weakMapSet = callBound('WeakMap.prototype.set', true);
    var $weakMapHas = callBound('WeakMap.prototype.has', true);
    var $mapGet = callBound('Map.prototype.get', true);
    var $mapSet = callBound('Map.prototype.set', true);
    var $mapHas = callBound('Map.prototype.has', true);
    var listGetNode = function (list, key) {
      for (var prev = list, curr; (curr = prev.next) !== null; prev = curr) {
        if (curr.key === key) {
          prev.next = curr.next;
          curr.next = list.next;
          list.next = curr;
          return curr;
        }
      }
    };
    var listGet = function (objects, key) {
      var node = listGetNode(objects, key);
      return node && node.value;
    };
    var listSet = function (objects, key, value) {
      var node = listGetNode(objects, key);
      if (node) {
        node.value = value;
      } else {
        objects.next = {
          // eslint-disable-line no-param-reassign
          key,
          next: objects.next,
          value,
        };
      }
    };
    var listHas = function (objects, key) {
      return !!listGetNode(objects, key);
    };
    module2.exports = function getSideChannel() {
      var $wm;
      var $m;
      var $o2;
      var channel = {
        assert: function (key) {
          if (!channel.has(key)) {
            throw new $TypeError(
              'Side channel does not contain ' + inspect(key)
            );
          }
        },
        get: function (key) {
          if (
            $WeakMap &&
            key &&
            (typeof key === 'object' || typeof key === 'function')
          ) {
            if ($wm) {
              return $weakMapGet($wm, key);
            }
          } else if ($Map) {
            if ($m) {
              return $mapGet($m, key);
            }
          } else {
            if ($o2) {
              return listGet($o2, key);
            }
          }
        },
        has: function (key) {
          if (
            $WeakMap &&
            key &&
            (typeof key === 'object' || typeof key === 'function')
          ) {
            if ($wm) {
              return $weakMapHas($wm, key);
            }
          } else if ($Map) {
            if ($m) {
              return $mapHas($m, key);
            }
          } else {
            if ($o2) {
              return listHas($o2, key);
            }
          }
          return false;
        },
        set: function (key, value) {
          if (
            $WeakMap &&
            key &&
            (typeof key === 'object' || typeof key === 'function')
          ) {
            if (!$wm) {
              $wm = new $WeakMap();
            }
            $weakMapSet($wm, key, value);
          } else if ($Map) {
            if (!$m) {
              $m = new $Map();
            }
            $mapSet($m, key, value);
          } else {
            if (!$o2) {
              $o2 = { key: {}, next: null };
            }
            listSet($o2, key, value);
          }
        },
      };
      return channel;
    };
  },
});

// ../../node_modules/qs/lib/formats.js
var require_formats = __commonJS({
  '../../node_modules/qs/lib/formats.js'(exports2, module2) {
    'use strict';
    var replace = String.prototype.replace;
    var percentTwenties = /%20/g;
    var Format = {
      RFC1738: 'RFC1738',
      RFC3986: 'RFC3986',
    };
    module2.exports = {
      default: Format.RFC3986,
      formatters: {
        RFC1738: function (value) {
          return replace.call(value, percentTwenties, '+');
        },
        RFC3986: function (value) {
          return String(value);
        },
      },
      RFC1738: Format.RFC1738,
      RFC3986: Format.RFC3986,
    };
  },
});

// ../../node_modules/qs/lib/utils.js
var require_utils = __commonJS({
  '../../node_modules/qs/lib/utils.js'(exports2, module2) {
    'use strict';
    var formats = require_formats();
    var has = Object.prototype.hasOwnProperty;
    var isArray = Array.isArray;
    var hexTable = (function () {
      var array = [];
      for (var i = 0; i < 256; ++i) {
        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());
      }
      return array;
    })();
    var compactQueue = function compactQueue2(queue) {
      while (queue.length > 1) {
        var item = queue.pop();
        var obj = item.obj[item.prop];
        if (isArray(obj)) {
          var compacted = [];
          for (var j2 = 0; j2 < obj.length; ++j2) {
            if (typeof obj[j2] !== 'undefined') {
              compacted.push(obj[j2]);
            }
          }
          item.obj[item.prop] = compacted;
        }
      }
    };
    var arrayToObject = function arrayToObject2(source, options) {
      var obj =
        options && options.plainObjects
          ? /* @__PURE__ */ Object.create(null)
          : {};
      for (var i = 0; i < source.length; ++i) {
        if (typeof source[i] !== 'undefined') {
          obj[i] = source[i];
        }
      }
      return obj;
    };
    var merge2 = function merge3(target, source, options) {
      if (!source) {
        return target;
      }
      if (typeof source !== 'object') {
        if (isArray(target)) {
          target.push(source);
        } else if (target && typeof target === 'object') {
          if (
            (options && (options.plainObjects || options.allowPrototypes)) ||
            !has.call(Object.prototype, source)
          ) {
            target[source] = true;
          }
        } else {
          return [target, source];
        }
        return target;
      }
      if (!target || typeof target !== 'object') {
        return [target].concat(source);
      }
      var mergeTarget = target;
      if (isArray(target) && !isArray(source)) {
        mergeTarget = arrayToObject(target, options);
      }
      if (isArray(target) && isArray(source)) {
        source.forEach(function (item, i) {
          if (has.call(target, i)) {
            var targetItem = target[i];
            if (
              targetItem &&
              typeof targetItem === 'object' &&
              item &&
              typeof item === 'object'
            ) {
              target[i] = merge3(targetItem, item, options);
            } else {
              target.push(item);
            }
          } else {
            target[i] = item;
          }
        });
        return target;
      }
      return Object.keys(source).reduce(function (acc, key) {
        var value = source[key];
        if (has.call(acc, key)) {
          acc[key] = merge3(acc[key], value, options);
        } else {
          acc[key] = value;
        }
        return acc;
      }, mergeTarget);
    };
    var assign = function assignSingleSource(target, source) {
      return Object.keys(source).reduce(function (acc, key) {
        acc[key] = source[key];
        return acc;
      }, target);
    };
    var decode = function (str, decoder, charset) {
      var strWithoutPlus = str.replace(/\+/g, ' ');
      if (charset === 'iso-8859-1') {
        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);
      }
      try {
        return decodeURIComponent(strWithoutPlus);
      } catch (e2) {
        return strWithoutPlus;
      }
    };
    var encode = function encode2(str, defaultEncoder, charset, kind, format2) {
      if (str.length === 0) {
        return str;
      }
      var string = str;
      if (typeof str === 'symbol') {
        string = Symbol.prototype.toString.call(str);
      } else if (typeof str !== 'string') {
        string = String(str);
      }
      if (charset === 'iso-8859-1') {
        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {
          return '%26%23' + parseInt($0.slice(2), 16) + '%3B';
        });
      }
      var out = '';
      for (var i = 0; i < string.length; ++i) {
        var c2 = string.charCodeAt(i);
        if (
          c2 === 45 ||
          c2 === 46 ||
          c2 === 95 ||
          c2 === 126 ||
          (c2 >= 48 && c2 <= 57) ||
          (c2 >= 65 && c2 <= 90) ||
          (c2 >= 97 && c2 <= 122) ||
          (format2 === formats.RFC1738 && (c2 === 40 || c2 === 41))
        ) {
          out += string.charAt(i);
          continue;
        }
        if (c2 < 128) {
          out = out + hexTable[c2];
          continue;
        }
        if (c2 < 2048) {
          out = out + (hexTable[192 | (c2 >> 6)] + hexTable[128 | (c2 & 63)]);
          continue;
        }
        if (c2 < 55296 || c2 >= 57344) {
          out =
            out +
            (hexTable[224 | (c2 >> 12)] +
              hexTable[128 | ((c2 >> 6) & 63)] +
              hexTable[128 | (c2 & 63)]);
          continue;
        }
        i += 1;
        c2 = 65536 + (((c2 & 1023) << 10) | (string.charCodeAt(i) & 1023));
        out +=
          hexTable[240 | (c2 >> 18)] +
          hexTable[128 | ((c2 >> 12) & 63)] +
          hexTable[128 | ((c2 >> 6) & 63)] +
          hexTable[128 | (c2 & 63)];
      }
      return out;
    };
    var compact = function compact2(value) {
      var queue = [{ obj: { o: value }, prop: 'o' }];
      var refs = [];
      for (var i = 0; i < queue.length; ++i) {
        var item = queue[i];
        var obj = item.obj[item.prop];
        var keys = Object.keys(obj);
        for (var j2 = 0; j2 < keys.length; ++j2) {
          var key = keys[j2];
          var val = obj[key];
          if (
            typeof val === 'object' &&
            val !== null &&
            refs.indexOf(val) === -1
          ) {
            queue.push({ obj, prop: key });
            refs.push(val);
          }
        }
      }
      compactQueue(queue);
      return value;
    };
    var isRegExp = function isRegExp2(obj) {
      return Object.prototype.toString.call(obj) === '[object RegExp]';
    };
    var isBuffer = function isBuffer2(obj) {
      if (!obj || typeof obj !== 'object') {
        return false;
      }
      return !!(
        obj.constructor &&
        obj.constructor.isBuffer &&
        obj.constructor.isBuffer(obj)
      );
    };
    var combine = function combine2(a, b) {
      return [].concat(a, b);
    };
    var maybeMap = function maybeMap2(val, fn) {
      if (isArray(val)) {
        var mapped = [];
        for (var i = 0; i < val.length; i += 1) {
          mapped.push(fn(val[i]));
        }
        return mapped;
      }
      return fn(val);
    };
    module2.exports = {
      arrayToObject,
      assign,
      combine,
      compact,
      decode,
      encode,
      isBuffer,
      isRegExp,
      maybeMap,
      merge: merge2,
    };
  },
});

// ../../node_modules/qs/lib/stringify.js
var require_stringify = __commonJS({
  '../../node_modules/qs/lib/stringify.js'(exports2, module2) {
    'use strict';
    var getSideChannel = require_side_channel();
    var utils = require_utils();
    var formats = require_formats();
    var has = Object.prototype.hasOwnProperty;
    var arrayPrefixGenerators = {
      brackets: function brackets(prefix) {
        return prefix + '[]';
      },
      comma: 'comma',
      indices: function indices(prefix, key) {
        return prefix + '[' + key + ']';
      },
      repeat: function repeat(prefix) {
        return prefix;
      },
    };
    var isArray = Array.isArray;
    var split = String.prototype.split;
    var push = Array.prototype.push;
    var pushToArray = function (arr, valueOrArray) {
      push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);
    };
    var toISO = Date.prototype.toISOString;
    var defaultFormat = formats['default'];
    var defaults = {
      addQueryPrefix: false,
      allowDots: false,
      charset: 'utf-8',
      charsetSentinel: false,
      delimiter: '&',
      encode: true,
      encoder: utils.encode,
      encodeValuesOnly: false,
      format: defaultFormat,
      formatter: formats.formatters[defaultFormat],
      // deprecated
      indices: false,
      serializeDate: function serializeDate(date) {
        return toISO.call(date);
      },
      skipNulls: false,
      strictNullHandling: false,
    };
    var isNonNullishPrimitive = function isNonNullishPrimitive2(v) {
      return (
        typeof v === 'string' ||
        typeof v === 'number' ||
        typeof v === 'boolean' ||
        typeof v === 'symbol' ||
        typeof v === 'bigint'
      );
    };
    var sentinel = {};
    var stringify = function stringify2(
      object,
      prefix,
      generateArrayPrefix,
      commaRoundTrip,
      strictNullHandling,
      skipNulls,
      encoder,
      filter2,
      sort,
      allowDots,
      serializeDate,
      format2,
      formatter,
      encodeValuesOnly,
      charset,
      sideChannel
    ) {
      var obj = object;
      var tmpSc = sideChannel;
      var step = 0;
      var findFlag = false;
      while ((tmpSc = tmpSc.get(sentinel)) !== void 0 && !findFlag) {
        var pos = tmpSc.get(object);
        step += 1;
        if (typeof pos !== 'undefined') {
          if (pos === step) {
            throw new RangeError('Cyclic object value');
          } else {
            findFlag = true;
          }
        }
        if (typeof tmpSc.get(sentinel) === 'undefined') {
          step = 0;
        }
      }
      if (typeof filter2 === 'function') {
        obj = filter2(prefix, obj);
      } else if (obj instanceof Date) {
        obj = serializeDate(obj);
      } else if (generateArrayPrefix === 'comma' && isArray(obj)) {
        obj = utils.maybeMap(obj, function (value2) {
          if (value2 instanceof Date) {
            return serializeDate(value2);
          }
          return value2;
        });
      }
      if (obj === null) {
        if (strictNullHandling) {
          return encoder && !encodeValuesOnly
            ? encoder(prefix, defaults.encoder, charset, 'key', format2)
            : prefix;
        }
        obj = '';
      }
      if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {
        if (encoder) {
          var keyValue = encodeValuesOnly
            ? prefix
            : encoder(prefix, defaults.encoder, charset, 'key', format2);
          if (generateArrayPrefix === 'comma' && encodeValuesOnly) {
            var valuesArray = split.call(String(obj), ',');
            var valuesJoined = '';
            for (var i = 0; i < valuesArray.length; ++i) {
              valuesJoined +=
                (i === 0 ? '' : ',') +
                formatter(
                  encoder(
                    valuesArray[i],
                    defaults.encoder,
                    charset,
                    'value',
                    format2
                  )
                );
            }
            return [
              formatter(keyValue) +
                (commaRoundTrip && isArray(obj) && valuesArray.length === 1
                  ? '[]'
                  : '') +
                '=' +
                valuesJoined,
            ];
          }
          return [
            formatter(keyValue) +
              '=' +
              formatter(
                encoder(obj, defaults.encoder, charset, 'value', format2)
              ),
          ];
        }
        return [formatter(prefix) + '=' + formatter(String(obj))];
      }
      var values = [];
      if (typeof obj === 'undefined') {
        return values;
      }
      var objKeys;
      if (generateArrayPrefix === 'comma' && isArray(obj)) {
        objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : void 0 }];
      } else if (isArray(filter2)) {
        objKeys = filter2;
      } else {
        var keys = Object.keys(obj);
        objKeys = sort ? keys.sort(sort) : keys;
      }
      var adjustedPrefix =
        commaRoundTrip && isArray(obj) && obj.length === 1
          ? prefix + '[]'
          : prefix;
      for (var j2 = 0; j2 < objKeys.length; ++j2) {
        var key = objKeys[j2];
        var value =
          typeof key === 'object' && typeof key.value !== 'undefined'
            ? key.value
            : obj[key];
        if (skipNulls && value === null) {
          continue;
        }
        var keyPrefix = isArray(obj)
          ? typeof generateArrayPrefix === 'function'
            ? generateArrayPrefix(adjustedPrefix, key)
            : adjustedPrefix
          : adjustedPrefix + (allowDots ? '.' + key : '[' + key + ']');
        sideChannel.set(object, step);
        var valueSideChannel = getSideChannel();
        valueSideChannel.set(sentinel, sideChannel);
        pushToArray(
          values,
          stringify2(
            value,
            keyPrefix,
            generateArrayPrefix,
            commaRoundTrip,
            strictNullHandling,
            skipNulls,
            encoder,
            filter2,
            sort,
            allowDots,
            serializeDate,
            format2,
            formatter,
            encodeValuesOnly,
            charset,
            valueSideChannel
          )
        );
      }
      return values;
    };
    var normalizeStringifyOptions = function normalizeStringifyOptions2(opts) {
      if (!opts) {
        return defaults;
      }
      if (
        opts.encoder !== null &&
        typeof opts.encoder !== 'undefined' &&
        typeof opts.encoder !== 'function'
      ) {
        throw new TypeError('Encoder has to be a function.');
      }
      var charset = opts.charset || defaults.charset;
      if (
        typeof opts.charset !== 'undefined' &&
        opts.charset !== 'utf-8' &&
        opts.charset !== 'iso-8859-1'
      ) {
        throw new TypeError(
          'The charset option must be either utf-8, iso-8859-1, or undefined'
        );
      }
      var format2 = formats['default'];
      if (typeof opts.format !== 'undefined') {
        if (!has.call(formats.formatters, opts.format)) {
          throw new TypeError('Unknown format option provided.');
        }
        format2 = opts.format;
      }
      var formatter = formats.formatters[format2];
      var filter2 = defaults.filter;
      if (typeof opts.filter === 'function' || isArray(opts.filter)) {
        filter2 = opts.filter;
      }
      return {
        addQueryPrefix:
          typeof opts.addQueryPrefix === 'boolean'
            ? opts.addQueryPrefix
            : defaults.addQueryPrefix,
        allowDots:
          typeof opts.allowDots === 'undefined'
            ? defaults.allowDots
            : !!opts.allowDots,
        charset,
        charsetSentinel:
          typeof opts.charsetSentinel === 'boolean'
            ? opts.charsetSentinel
            : defaults.charsetSentinel,
        delimiter:
          typeof opts.delimiter === 'undefined'
            ? defaults.delimiter
            : opts.delimiter,
        encode:
          typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,
        encoder:
          typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,
        encodeValuesOnly:
          typeof opts.encodeValuesOnly === 'boolean'
            ? opts.encodeValuesOnly
            : defaults.encodeValuesOnly,
        filter: filter2,
        format: format2,
        formatter,
        serializeDate:
          typeof opts.serializeDate === 'function'
            ? opts.serializeDate
            : defaults.serializeDate,
        skipNulls:
          typeof opts.skipNulls === 'boolean'
            ? opts.skipNulls
            : defaults.skipNulls,
        sort: typeof opts.sort === 'function' ? opts.sort : null,
        strictNullHandling:
          typeof opts.strictNullHandling === 'boolean'
            ? opts.strictNullHandling
            : defaults.strictNullHandling,
      };
    };
    module2.exports = function (object, opts) {
      var obj = object;
      var options = normalizeStringifyOptions(opts);
      var objKeys;
      var filter2;
      if (typeof options.filter === 'function') {
        filter2 = options.filter;
        obj = filter2('', obj);
      } else if (isArray(options.filter)) {
        filter2 = options.filter;
        objKeys = filter2;
      }
      var keys = [];
      if (typeof obj !== 'object' || obj === null) {
        return '';
      }
      var arrayFormat;
      if (opts && opts.arrayFormat in arrayPrefixGenerators) {
        arrayFormat = opts.arrayFormat;
      } else if (opts && 'indices' in opts) {
        arrayFormat = opts.indices ? 'indices' : 'repeat';
      } else {
        arrayFormat = 'indices';
      }
      var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];
      if (
        opts &&
        'commaRoundTrip' in opts &&
        typeof opts.commaRoundTrip !== 'boolean'
      ) {
        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');
      }
      var commaRoundTrip =
        generateArrayPrefix === 'comma' && opts && opts.commaRoundTrip;
      if (!objKeys) {
        objKeys = Object.keys(obj);
      }
      if (options.sort) {
        objKeys.sort(options.sort);
      }
      var sideChannel = getSideChannel();
      for (var i = 0; i < objKeys.length; ++i) {
        var key = objKeys[i];
        if (options.skipNulls && obj[key] === null) {
          continue;
        }
        pushToArray(
          keys,
          stringify(
            obj[key],
            key,
            generateArrayPrefix,
            commaRoundTrip,
            options.strictNullHandling,
            options.skipNulls,
            options.encode ? options.encoder : null,
            options.filter,
            options.sort,
            options.allowDots,
            options.serializeDate,
            options.format,
            options.formatter,
            options.encodeValuesOnly,
            options.charset,
            sideChannel
          )
        );
      }
      var joined = keys.join(options.delimiter);
      var prefix = options.addQueryPrefix === true ? '?' : '';
      if (options.charsetSentinel) {
        if (options.charset === 'iso-8859-1') {
          prefix += 'utf8=%26%2310003%3B&';
        } else {
          prefix += 'utf8=%E2%9C%93&';
        }
      }
      return joined.length > 0 ? prefix + joined : '';
    };
  },
});

// ../../node_modules/qs/lib/parse.js
var require_parse = __commonJS({
  '../../node_modules/qs/lib/parse.js'(exports2, module2) {
    'use strict';
    var utils = require_utils();
    var has = Object.prototype.hasOwnProperty;
    var isArray = Array.isArray;
    var defaults = {
      allowDots: false,
      allowPrototypes: false,
      allowSparse: false,
      arrayLimit: 20,
      charset: 'utf-8',
      charsetSentinel: false,
      comma: false,
      decoder: utils.decode,
      delimiter: '&',
      depth: 5,
      ignoreQueryPrefix: false,
      interpretNumericEntities: false,
      parameterLimit: 1e3,
      parseArrays: true,
      plainObjects: false,
      strictNullHandling: false,
    };
    var interpretNumericEntities = function (str) {
      return str.replace(/&#(\d+);/g, function ($0, numberStr) {
        return String.fromCharCode(parseInt(numberStr, 10));
      });
    };
    var parseArrayValue = function (val, options) {
      if (
        val &&
        typeof val === 'string' &&
        options.comma &&
        val.indexOf(',') > -1
      ) {
        return val.split(',');
      }
      return val;
    };
    var isoSentinel = 'utf8=%26%2310003%3B';
    var charsetSentinel = 'utf8=%E2%9C%93';
    var parseValues = function parseQueryStringValues(str, options) {
      var obj = {};
      var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\?/, '') : str;
      var limit =
        options.parameterLimit === Infinity ? void 0 : options.parameterLimit;
      var parts = cleanStr.split(options.delimiter, limit);
      var skipIndex = -1;
      var i;
      var charset = options.charset;
      if (options.charsetSentinel) {
        for (i = 0; i < parts.length; ++i) {
          if (parts[i].indexOf('utf8=') === 0) {
            if (parts[i] === charsetSentinel) {
              charset = 'utf-8';
            } else if (parts[i] === isoSentinel) {
              charset = 'iso-8859-1';
            }
            skipIndex = i;
            i = parts.length;
          }
        }
      }
      for (i = 0; i < parts.length; ++i) {
        if (i === skipIndex) {
          continue;
        }
        var part = parts[i];
        var bracketEqualsPos = part.indexOf(']=');
        var pos =
          bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;
        var key, val;
        if (pos === -1) {
          key = options.decoder(part, defaults.decoder, charset, 'key');
          val = options.strictNullHandling ? null : '';
        } else {
          key = options.decoder(
            part.slice(0, pos),
            defaults.decoder,
            charset,
            'key'
          );
          val = utils.maybeMap(
            parseArrayValue(part.slice(pos + 1), options),
            function (encodedVal) {
              return options.decoder(
                encodedVal,
                defaults.decoder,
                charset,
                'value'
              );
            }
          );
        }
        if (
          val &&
          options.interpretNumericEntities &&
          charset === 'iso-8859-1'
        ) {
          val = interpretNumericEntities(val);
        }
        if (part.indexOf('[]=') > -1) {
          val = isArray(val) ? [val] : val;
        }
        if (has.call(obj, key)) {
          obj[key] = utils.combine(obj[key], val);
        } else {
          obj[key] = val;
        }
      }
      return obj;
    };
    var parseObject = function (chain2, val, options, valuesParsed) {
      var leaf = valuesParsed ? val : parseArrayValue(val, options);
      for (var i = chain2.length - 1; i >= 0; --i) {
        var obj;
        var root = chain2[i];
        if (root === '[]' && options.parseArrays) {
          obj = [].concat(leaf);
        } else {
          obj = options.plainObjects ? /* @__PURE__ */ Object.create(null) : {};
          var cleanRoot =
            root.charAt(0) === '[' && root.charAt(root.length - 1) === ']'
              ? root.slice(1, -1)
              : root;
          var index = parseInt(cleanRoot, 10);
          if (!options.parseArrays && cleanRoot === '') {
            obj = { 0: leaf };
          } else if (
            !isNaN(index) &&
            root !== cleanRoot &&
            String(index) === cleanRoot &&
            index >= 0 &&
            options.parseArrays &&
            index <= options.arrayLimit
          ) {
            obj = [];
            obj[index] = leaf;
          } else if (cleanRoot !== '__proto__') {
            obj[cleanRoot] = leaf;
          }
        }
        leaf = obj;
      }
      return leaf;
    };
    var parseKeys = function parseQueryStringKeys(
      givenKey,
      val,
      options,
      valuesParsed
    ) {
      if (!givenKey) {
        return;
      }
      var key = options.allowDots
        ? givenKey.replace(/\.([^.[]+)/g, '[$1]')
        : givenKey;
      var brackets = /(\[[^[\]]*])/;
      var child = /(\[[^[\]]*])/g;
      var segment = options.depth > 0 && brackets.exec(key);
      var parent = segment ? key.slice(0, segment.index) : key;
      var keys = [];
      if (parent) {
        if (!options.plainObjects && has.call(Object.prototype, parent)) {
          if (!options.allowPrototypes) {
            return;
          }
        }
        keys.push(parent);
      }
      var i = 0;
      while (
        options.depth > 0 &&
        (segment = child.exec(key)) !== null &&
        i < options.depth
      ) {
        i += 1;
        if (
          !options.plainObjects &&
          has.call(Object.prototype, segment[1].slice(1, -1))
        ) {
          if (!options.allowPrototypes) {
            return;
          }
        }
        keys.push(segment[1]);
      }
      if (segment) {
        keys.push('[' + key.slice(segment.index) + ']');
      }
      return parseObject(keys, val, options, valuesParsed);
    };
    var normalizeParseOptions = function normalizeParseOptions2(opts) {
      if (!opts) {
        return defaults;
      }
      if (
        opts.decoder !== null &&
        opts.decoder !== void 0 &&
        typeof opts.decoder !== 'function'
      ) {
        throw new TypeError('Decoder has to be a function.');
      }
      if (
        typeof opts.charset !== 'undefined' &&
        opts.charset !== 'utf-8' &&
        opts.charset !== 'iso-8859-1'
      ) {
        throw new TypeError(
          'The charset option must be either utf-8, iso-8859-1, or undefined'
        );
      }
      var charset =
        typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;
      return {
        allowDots:
          typeof opts.allowDots === 'undefined'
            ? defaults.allowDots
            : !!opts.allowDots,
        allowPrototypes:
          typeof opts.allowPrototypes === 'boolean'
            ? opts.allowPrototypes
            : defaults.allowPrototypes,
        allowSparse:
          typeof opts.allowSparse === 'boolean'
            ? opts.allowSparse
            : defaults.allowSparse,
        arrayLimit:
          typeof opts.arrayLimit === 'number'
            ? opts.arrayLimit
            : defaults.arrayLimit,
        charset,
        charsetSentinel:
          typeof opts.charsetSentinel === 'boolean'
            ? opts.charsetSentinel
            : defaults.charsetSentinel,
        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,
        decoder:
          typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,
        delimiter:
          typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter)
            ? opts.delimiter
            : defaults.delimiter,
        // eslint-disable-next-line no-implicit-coercion, no-extra-parens
        depth:
          typeof opts.depth === 'number' || opts.depth === false
            ? +opts.depth
            : defaults.depth,
        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,
        interpretNumericEntities:
          typeof opts.interpretNumericEntities === 'boolean'
            ? opts.interpretNumericEntities
            : defaults.interpretNumericEntities,
        parameterLimit:
          typeof opts.parameterLimit === 'number'
            ? opts.parameterLimit
            : defaults.parameterLimit,
        parseArrays: opts.parseArrays !== false,
        plainObjects:
          typeof opts.plainObjects === 'boolean'
            ? opts.plainObjects
            : defaults.plainObjects,
        strictNullHandling:
          typeof opts.strictNullHandling === 'boolean'
            ? opts.strictNullHandling
            : defaults.strictNullHandling,
      };
    };
    module2.exports = function (str, opts) {
      var options = normalizeParseOptions(opts);
      if (str === '' || str === null || typeof str === 'undefined') {
        return options.plainObjects ? /* @__PURE__ */ Object.create(null) : {};
      }
      var tempObj = typeof str === 'string' ? parseValues(str, options) : str;
      var obj = options.plainObjects ? /* @__PURE__ */ Object.create(null) : {};
      var keys = Object.keys(tempObj);
      for (var i = 0; i < keys.length; ++i) {
        var key = keys[i];
        var newObj = parseKeys(
          key,
          tempObj[key],
          options,
          typeof str === 'string'
        );
        obj = utils.merge(obj, newObj, options);
      }
      if (options.allowSparse === true) {
        return obj;
      }
      return utils.compact(obj);
    };
  },
});

// ../../node_modules/qs/lib/index.js
var require_lib2 = __commonJS({
  '../../node_modules/qs/lib/index.js'(exports2, module2) {
    'use strict';
    var stringify = require_stringify();
    var parse = require_parse();
    var formats = require_formats();
    module2.exports = {
      formats,
      parse,
      stringify,
    };
  },
});

// ../../node_modules/body-parser/lib/types/urlencoded.js
var require_urlencoded = __commonJS({
  '../../node_modules/body-parser/lib/types/urlencoded.js'(exports2, module2) {
    'use strict';
    var bytes = require_bytes();
    var contentType = require_content_type();
    var createError = require_http_errors();
    var debug2 = require_src()('body-parser:urlencoded');
    var deprecate = require_depd()('body-parser');
    var read = require_read();
    var typeis = require_type_is();
    module2.exports = urlencoded;
    var parsers = /* @__PURE__ */ Object.create(null);
    function urlencoded(options) {
      var opts = options || {};
      if (opts.extended === void 0) {
        deprecate('undefined extended: provide extended option');
      }
      var extended = opts.extended !== false;
      var inflate = opts.inflate !== false;
      var limit =
        typeof opts.limit !== 'number'
          ? bytes.parse(opts.limit || '100kb')
          : opts.limit;
      var type = opts.type || 'application/x-www-form-urlencoded';
      var verify = opts.verify || false;
      if (verify !== false && typeof verify !== 'function') {
        throw new TypeError('option verify must be function');
      }
      var queryparse = extended ? extendedparser(opts) : simpleparser(opts);
      var shouldParse = typeof type !== 'function' ? typeChecker(type) : type;
      function parse(body) {
        return body.length ? queryparse(body) : {};
      }
      return function urlencodedParser(req, res, next) {
        if (req._body) {
          debug2('body already parsed');
          next();
          return;
        }
        req.body = req.body || {};
        if (!typeis.hasBody(req)) {
          debug2('skip empty body');
          next();
          return;
        }
        debug2('content-type %j', req.headers['content-type']);
        if (!shouldParse(req)) {
          debug2('skip parsing');
          next();
          return;
        }
        var charset = getCharset(req) || 'utf-8';
        if (charset !== 'utf-8') {
          debug2('invalid charset');
          next(
            createError(
              415,
              'unsupported charset "' + charset.toUpperCase() + '"',
              {
                charset,
                type: 'charset.unsupported',
              }
            )
          );
          return;
        }
        read(req, res, next, parse, debug2, {
          debug: debug2,
          encoding: charset,
          inflate,
          limit,
          verify,
        });
      };
    }
    function extendedparser(options) {
      var parameterLimit =
        options.parameterLimit !== void 0 ? options.parameterLimit : 1e3;
      var parse = parser('qs');
      if (isNaN(parameterLimit) || parameterLimit < 1) {
        throw new TypeError('option parameterLimit must be a positive number');
      }
      if (isFinite(parameterLimit)) {
        parameterLimit = parameterLimit | 0;
      }
      return function queryparse(body) {
        var paramCount = parameterCount(body, parameterLimit);
        if (paramCount === void 0) {
          debug2('too many parameters');
          throw createError(413, 'too many parameters', {
            type: 'parameters.too.many',
          });
        }
        var arrayLimit = Math.max(100, paramCount);
        debug2('parse extended urlencoding');
        return parse(body, {
          allowPrototypes: true,
          arrayLimit,
          depth: Infinity,
          parameterLimit,
        });
      };
    }
    function getCharset(req) {
      try {
        return (contentType.parse(req).parameters.charset || '').toLowerCase();
      } catch (e2) {
        return void 0;
      }
    }
    function parameterCount(body, limit) {
      var count = 0;
      var index = 0;
      while ((index = body.indexOf('&', index)) !== -1) {
        count++;
        index++;
        if (count === limit) {
          return void 0;
        }
      }
      return count;
    }
    function parser(name) {
      var mod = parsers[name];
      if (mod !== void 0) {
        return mod.parse;
      }
      switch (name) {
        case 'qs':
          mod = require_lib2();
          break;
        case 'querystring':
          mod = require('querystring');
          break;
      }
      parsers[name] = mod;
      return mod.parse;
    }
    function simpleparser(options) {
      var parameterLimit =
        options.parameterLimit !== void 0 ? options.parameterLimit : 1e3;
      var parse = parser('querystring');
      if (isNaN(parameterLimit) || parameterLimit < 1) {
        throw new TypeError('option parameterLimit must be a positive number');
      }
      if (isFinite(parameterLimit)) {
        parameterLimit = parameterLimit | 0;
      }
      return function queryparse(body) {
        var paramCount = parameterCount(body, parameterLimit);
        if (paramCount === void 0) {
          debug2('too many parameters');
          throw createError(413, 'too many parameters', {
            type: 'parameters.too.many',
          });
        }
        debug2('parse urlencoding');
        return parse(body, void 0, void 0, { maxKeys: parameterLimit });
      };
    }
    function typeChecker(type) {
      return function checkType(req) {
        return Boolean(typeis(req, type));
      };
    }
  },
});

// ../../node_modules/body-parser/index.js
var require_body_parser = __commonJS({
  '../../node_modules/body-parser/index.js'(exports2, module2) {
    'use strict';
    var deprecate = require_depd()('body-parser');
    var parsers = /* @__PURE__ */ Object.create(null);
    exports2 = module2.exports = deprecate.function(
      bodyParser,
      'bodyParser: use individual json/urlencoded middlewares'
    );
    Object.defineProperty(exports2, 'json', {
      configurable: true,
      enumerable: true,
      get: createParserGetter('json'),
    });
    Object.defineProperty(exports2, 'raw', {
      configurable: true,
      enumerable: true,
      get: createParserGetter('raw'),
    });
    Object.defineProperty(exports2, 'text', {
      configurable: true,
      enumerable: true,
      get: createParserGetter('text'),
    });
    Object.defineProperty(exports2, 'urlencoded', {
      configurable: true,
      enumerable: true,
      get: createParserGetter('urlencoded'),
    });
    function bodyParser(options) {
      var opts = Object.create(options || null, {
        type: {
          configurable: true,
          enumerable: true,
          value: void 0,
          writable: true,
        },
      });
      var _urlencoded = exports2.urlencoded(opts);
      var _json = exports2.json(opts);
      return function bodyParser2(req, res, next) {
        _json(req, res, function (err) {
          if (err) return next(err);
          _urlencoded(req, res, next);
        });
      };
    }
    function createParserGetter(name) {
      return function get2() {
        return loadParser(name);
      };
    }
    function loadParser(parserName) {
      var parser = parsers[parserName];
      if (parser !== void 0) {
        return parser;
      }
      switch (parserName) {
        case 'json':
          parser = require_json();
          break;
        case 'raw':
          parser = require_raw();
          break;
        case 'text':
          parser = require_text();
          break;
        case 'urlencoded':
          parser = require_urlencoded();
          break;
      }
      return (parsers[parserName] = parser);
    }
  },
});

// ../../node_modules/merge-descriptors/index.js
var require_merge_descriptors = __commonJS({
  '../../node_modules/merge-descriptors/index.js'(exports2, module2) {
    'use strict';
    module2.exports = merge2;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    function merge2(dest, src, redefine) {
      if (!dest) {
        throw new TypeError('argument dest is required');
      }
      if (!src) {
        throw new TypeError('argument src is required');
      }
      if (redefine === void 0) {
        redefine = true;
      }
      Object.getOwnPropertyNames(src).forEach(function forEachOwnPropertyName(
        name
      ) {
        if (!redefine && hasOwnProperty.call(dest, name)) {
          return;
        }
        var descriptor = Object.getOwnPropertyDescriptor(src, name);
        Object.defineProperty(dest, name, descriptor);
      });
      return dest;
    }
  },
});

// ../../node_modules/finalhandler/node_modules/ms/index.js
var require_ms2 = __commonJS({
  '../../node_modules/finalhandler/node_modules/ms/index.js'(
    exports2,
    module2
  ) {
    'use strict';
    var s2 = 1e3;
    var m2 = s2 * 60;
    var h2 = m2 * 60;
    var d = h2 * 24;
    var y = d * 365.25;
    module2.exports = function (val, options) {
      options = options || {};
      var type = typeof val;
      if (type === 'string' && val.length > 0) {
        return parse(val);
      } else if (type === 'number' && isNaN(val) === false) {
        return options.long ? fmtLong(val) : fmtShort(val);
      }
      throw new Error(
        'val is not a non-empty string or a valid number. val=' +
          JSON.stringify(val)
      );
    };
    function parse(str) {
      str = String(str);
      if (str.length > 100) {
        return;
      }
      var match =
        /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(
          str
        );
      if (!match) {
        return;
      }
      var n2 = parseFloat(match[1]);
      var type = (match[2] || 'ms').toLowerCase();
      switch (type) {
        case 'years':
        case 'year':
        case 'yrs':
        case 'yr':
        case 'y':
          return n2 * y;
        case 'days':
        case 'day':
        case 'd':
          return n2 * d;
        case 'hours':
        case 'hour':
        case 'hrs':
        case 'hr':
        case 'h':
          return n2 * h2;
        case 'minutes':
        case 'minute':
        case 'mins':
        case 'min':
        case 'm':
          return n2 * m2;
        case 'seconds':
        case 'second':
        case 'secs':
        case 'sec':
        case 's':
          return n2 * s2;
        case 'milliseconds':
        case 'millisecond':
        case 'msecs':
        case 'msec':
        case 'ms':
          return n2;
        default:
          return void 0;
      }
    }
    function fmtShort(ms2) {
      if (ms2 >= d) {
        return Math.round(ms2 / d) + 'd';
      }
      if (ms2 >= h2) {
        return Math.round(ms2 / h2) + 'h';
      }
      if (ms2 >= m2) {
        return Math.round(ms2 / m2) + 'm';
      }
      if (ms2 >= s2) {
        return Math.round(ms2 / s2) + 's';
      }
      return ms2 + 'ms';
    }
    function fmtLong(ms2) {
      return (
        plural(ms2, d, 'day') ||
        plural(ms2, h2, 'hour') ||
        plural(ms2, m2, 'minute') ||
        plural(ms2, s2, 'second') ||
        ms2 + ' ms'
      );
    }
    function plural(ms2, n2, name) {
      if (ms2 < n2) {
        return;
      }
      if (ms2 < n2 * 1.5) {
        return Math.floor(ms2 / n2) + ' ' + name;
      }
      return Math.ceil(ms2 / n2) + ' ' + name + 's';
    }
  },
});

// ../../node_modules/finalhandler/node_modules/debug/src/debug.js
var require_debug2 = __commonJS({
  '../../node_modules/finalhandler/node_modules/debug/src/debug.js'(
    exports2,
    module2
  ) {
    'use strict';
    exports2 =
      module2.exports =
      createDebug.debug =
      createDebug['default'] =
        createDebug;
    exports2.coerce = coerce;
    exports2.disable = disable;
    exports2.enable = enable;
    exports2.enabled = enabled;
    exports2.humanize = require_ms2();
    exports2.names = [];
    exports2.skips = [];
    exports2.formatters = {};
    var prevTime;
    function selectColor(namespace) {
      var hash = 0,
        i;
      for (i in namespace) {
        hash = (hash << 5) - hash + namespace.charCodeAt(i);
        hash |= 0;
      }
      return exports2.colors[Math.abs(hash) % exports2.colors.length];
    }
    function createDebug(namespace) {
      function debug2() {
        if (!debug2.enabled) return;
        var self2 = debug2;
        var curr = +(/* @__PURE__ */ new Date());
        var ms2 = curr - (prevTime || curr);
        self2.diff = ms2;
        self2.prev = prevTime;
        self2.curr = curr;
        prevTime = curr;
        var args = new Array(arguments.length);
        for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i];
        }
        args[0] = exports2.coerce(args[0]);
        if ('string' !== typeof args[0]) {
          args.unshift('%O');
        }
        var index = 0;
        args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format2) {
          if (match === '%%') return match;
          index++;
          var formatter = exports2.formatters[format2];
          if ('function' === typeof formatter) {
            var val = args[index];
            match = formatter.call(self2, val);
            args.splice(index, 1);
            index--;
          }
          return match;
        });
        exports2.formatArgs.call(self2, args);
        var logFn = debug2.log || exports2.log || console.log.bind(console);
        logFn.apply(self2, args);
      }
      debug2.namespace = namespace;
      debug2.enabled = exports2.enabled(namespace);
      debug2.useColors = exports2.useColors();
      debug2.color = selectColor(namespace);
      if ('function' === typeof exports2.init) {
        exports2.init(debug2);
      }
      return debug2;
    }
    function enable(namespaces) {
      exports2.save(namespaces);
      exports2.names = [];
      exports2.skips = [];
      var split = (typeof namespaces === 'string' ? namespaces : '').split(
        /[\s,]+/
      );
      var len = split.length;
      for (var i = 0; i < len; i++) {
        if (!split[i]) continue;
        namespaces = split[i].replace(/\*/g, '.*?');
        if (namespaces[0] === '-') {
          exports2.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
        } else {
          exports2.names.push(new RegExp('^' + namespaces + '$'));
        }
      }
    }
    function disable() {
      exports2.enable('');
    }
    function enabled(name) {
      var i, len;
      for (i = 0, len = exports2.skips.length; i < len; i++) {
        if (exports2.skips[i].test(name)) {
          return false;
        }
      }
      for (i = 0, len = exports2.names.length; i < len; i++) {
        if (exports2.names[i].test(name)) {
          return true;
        }
      }
      return false;
    }
    function coerce(val) {
      if (val instanceof Error) return val.stack || val.message;
      return val;
    }
  },
});

// ../../node_modules/finalhandler/node_modules/debug/src/browser.js
var require_browser2 = __commonJS({
  '../../node_modules/finalhandler/node_modules/debug/src/browser.js'(
    exports2,
    module2
  ) {
    'use strict';
    exports2 = module2.exports = require_debug2();
    exports2.log = log2;
    exports2.formatArgs = formatArgs;
    exports2.save = save;
    exports2.load = load;
    exports2.useColors = useColors;
    exports2.storage =
      'undefined' != typeof chrome && 'undefined' != typeof chrome.storage
        ? chrome.storage.local
        : localstorage();
    exports2.colors = [
      'lightseagreen',
      'forestgreen',
      'goldenrod',
      'dodgerblue',
      'darkorchid',
      'crimson',
    ];
    function useColors() {
      if (
        typeof window !== 'undefined' &&
        window.process &&
        window.process.type === 'renderer'
      ) {
        return true;
      }
      return (
        (typeof document !== 'undefined' &&
          document.documentElement &&
          document.documentElement.style &&
          document.documentElement.style.WebkitAppearance) || // is firebug? http://stackoverflow.com/a/398120/376773
        (typeof window !== 'undefined' &&
          window.console &&
          (window.console.firebug ||
            (window.console.exception && window.console.table))) || // is firefox >= v31?
        // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
        (typeof navigator !== 'undefined' &&
          navigator.userAgent &&
          navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) &&
          parseInt(RegExp.$1, 10) >= 31) || // double check webkit in userAgent just in case we are in a worker
        (typeof navigator !== 'undefined' &&
          navigator.userAgent &&
          navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/))
      );
    }
    exports2.formatters.j = function (v) {
      try {
        return JSON.stringify(v);
      } catch (err) {
        return '[UnexpectedJSONParseError]: ' + err.message;
      }
    };
    function formatArgs(args) {
      var useColors2 = this.useColors;
      args[0] =
        (useColors2 ? '%c' : '') +
        this.namespace +
        (useColors2 ? ' %c' : ' ') +
        args[0] +
        (useColors2 ? '%c ' : ' ') +
        '+' +
        exports2.humanize(this.diff);
      if (!useColors2) return;
      var c2 = 'color: ' + this.color;
      args.splice(1, 0, c2, 'color: inherit');
      var index = 0;
      var lastC = 0;
      args[0].replace(/%[a-zA-Z%]/g, function (match) {
        if ('%%' === match) return;
        index++;
        if ('%c' === match) {
          lastC = index;
        }
      });
      args.splice(lastC, 0, c2);
    }
    function log2() {
      return (
        'object' === typeof console &&
        console.log &&
        Function.prototype.apply.call(console.log, console, arguments)
      );
    }
    function save(namespaces) {
      try {
        if (null == namespaces) {
          exports2.storage.removeItem('debug');
        } else {
          exports2.storage.debug = namespaces;
        }
      } catch (e2) {}
    }
    function load() {
      var r2;
      try {
        r2 = exports2.storage.debug;
      } catch (e2) {}
      if (!r2 && typeof process !== 'undefined' && 'env' in process) {
        r2 = process.env.DEBUG;
      }
      return r2;
    }
    exports2.enable(load());
    function localstorage() {
      try {
        return window.localStorage;
      } catch (e2) {}
    }
  },
});

// ../../node_modules/finalhandler/node_modules/debug/src/node.js
var require_node2 = __commonJS({
  '../../node_modules/finalhandler/node_modules/debug/src/node.js'(
    exports2,
    module2
  ) {
    'use strict';
    var tty = require('tty');
    var util = require('util');
    exports2 = module2.exports = require_debug2();
    exports2.init = init;
    exports2.log = log2;
    exports2.formatArgs = formatArgs;
    exports2.save = save;
    exports2.load = load;
    exports2.useColors = useColors;
    exports2.colors = [6, 2, 3, 4, 5, 1];
    exports2.inspectOpts = Object.keys(process.env)
      .filter(function (key) {
        return /^debug_/i.test(key);
      })
      .reduce(function (obj, key) {
        var prop = key
          .substring(6)
          .toLowerCase()
          .replace(/_([a-z])/g, function (_2, k2) {
            return k2.toUpperCase();
          });
        var val = process.env[key];
        if (/^(yes|on|true|enabled)$/i.test(val)) val = true;
        else if (/^(no|off|false|disabled)$/i.test(val)) val = false;
        else if (val === 'null') val = null;
        else val = Number(val);
        obj[prop] = val;
        return obj;
      }, {});
    var fd = parseInt(process.env.DEBUG_FD, 10) || 2;
    if (1 !== fd && 2 !== fd) {
      util.deprecate(function () {},
      'except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)')();
    }
    var stream =
      1 === fd
        ? process.stdout
        : 2 === fd
        ? process.stderr
        : createWritableStdioStream(fd);
    function useColors() {
      return 'colors' in exports2.inspectOpts
        ? Boolean(exports2.inspectOpts.colors)
        : tty.isatty(fd);
    }
    exports2.formatters.o = function (v) {
      this.inspectOpts.colors = this.useColors;
      return util
        .inspect(v, this.inspectOpts)
        .split('\n')
        .map(function (str) {
          return str.trim();
        })
        .join(' ');
    };
    exports2.formatters.O = function (v) {
      this.inspectOpts.colors = this.useColors;
      return util.inspect(v, this.inspectOpts);
    };
    function formatArgs(args) {
      var name = this.namespace;
      var useColors2 = this.useColors;
      if (useColors2) {
        var c2 = this.color;
        var prefix = '  \x1B[3' + c2 + ';1m' + name + ' \x1B[0m';
        args[0] = prefix + args[0].split('\n').join('\n' + prefix);
        args.push(
          '\x1B[3' + c2 + 'm+' + exports2.humanize(this.diff) + '\x1B[0m'
        );
      } else {
        args[0] =
          /* @__PURE__ */ new Date().toUTCString() + ' ' + name + ' ' + args[0];
      }
    }
    function log2() {
      return stream.write(util.format.apply(util, arguments) + '\n');
    }
    function save(namespaces) {
      if (null == namespaces) {
        delete process.env.DEBUG;
      } else {
        process.env.DEBUG = namespaces;
      }
    }
    function load() {
      return process.env.DEBUG;
    }
    function createWritableStdioStream(fd2) {
      var stream2;
      var tty_wrap = process.binding('tty_wrap');
      switch (tty_wrap.guessHandleType(fd2)) {
        case 'TTY':
          stream2 = new tty.WriteStream(fd2);
          stream2._type = 'tty';
          if (stream2._handle && stream2._handle.unref) {
            stream2._handle.unref();
          }
          break;
        case 'FILE':
          var fs2 = require('fs');
          stream2 = new fs2.SyncWriteStream(fd2, { autoClose: false });
          stream2._type = 'fs';
          break;
        case 'PIPE':
        case 'TCP':
          var net = require('net');
          stream2 = new net.Socket({
            fd: fd2,
            readable: false,
            writable: true,
          });
          stream2.readable = false;
          stream2.read = null;
          stream2._type = 'pipe';
          if (stream2._handle && stream2._handle.unref) {
            stream2._handle.unref();
          }
          break;
        default:
          throw new Error('Implement me. Unknown stream file type!');
      }
      stream2.fd = fd2;
      stream2._isStdio = true;
      return stream2;
    }
    function init(debug2) {
      debug2.inspectOpts = {};
      var keys = Object.keys(exports2.inspectOpts);
      for (var i = 0; i < keys.length; i++) {
        debug2.inspectOpts[keys[i]] = exports2.inspectOpts[keys[i]];
      }
    }
    exports2.enable(load());
  },
});

// ../../node_modules/finalhandler/node_modules/debug/src/index.js
var require_src3 = __commonJS({
  '../../node_modules/finalhandler/node_modules/debug/src/index.js'(
    exports2,
    module2
  ) {
    'use strict';
    if (typeof process !== 'undefined' && process.type === 'renderer') {
      module2.exports = require_browser2();
    } else {
      module2.exports = require_node2();
    }
  },
});

// ../../node_modules/encodeurl/index.js
var require_encodeurl = __commonJS({
  '../../node_modules/encodeurl/index.js'(exports2, module2) {
    'use strict';
    module2.exports = encodeUrl;
    var ENCODE_CHARS_REGEXP =
      /(?:[^\x21\x25\x26-\x3B\x3D\x3F-\x5B\x5D\x5F\x61-\x7A\x7E]|%(?:[^0-9A-Fa-f]|[0-9A-Fa-f][^0-9A-Fa-f]|$))+/g;
    var UNMATCHED_SURROGATE_PAIR_REGEXP =
      /(^|[^\uD800-\uDBFF])[\uDC00-\uDFFF]|[\uD800-\uDBFF]([^\uDC00-\uDFFF]|$)/g;
    var UNMATCHED_SURROGATE_PAIR_REPLACE = '$1\uFFFD$2';
    function encodeUrl(url) {
      return String(url)
        .replace(
          UNMATCHED_SURROGATE_PAIR_REGEXP,
          UNMATCHED_SURROGATE_PAIR_REPLACE
        )
        .replace(ENCODE_CHARS_REGEXP, encodeURI);
    }
  },
});

// ../../node_modules/escape-html/index.js
var require_escape_html = __commonJS({
  '../../node_modules/escape-html/index.js'(exports2, module2) {
    'use strict';
    var matchHtmlRegExp = /["'&<>]/;
    module2.exports = escapeHtml;
    function escapeHtml(string) {
      var str = '' + string;
      var match = matchHtmlRegExp.exec(str);
      if (!match) {
        return str;
      }
      var escape3;
      var html = '';
      var index = 0;
      var lastIndex = 0;
      for (index = match.index; index < str.length; index++) {
        switch (str.charCodeAt(index)) {
          case 34:
            escape3 = '&quot;';
            break;
          case 38:
            escape3 = '&amp;';
            break;
          case 39:
            escape3 = '&#39;';
            break;
          case 60:
            escape3 = '&lt;';
            break;
          case 62:
            escape3 = '&gt;';
            break;
          default:
            continue;
        }
        if (lastIndex !== index) {
          html += str.substring(lastIndex, index);
        }
        lastIndex = index + 1;
        html += escape3;
      }
      return lastIndex !== index
        ? html + str.substring(lastIndex, index)
        : html;
    }
  },
});

// ../../node_modules/parseurl/index.js
var require_parseurl = __commonJS({
  '../../node_modules/parseurl/index.js'(exports2, module2) {
    'use strict';
    var url = require('url');
    var parse = url.parse;
    var Url = url.Url;
    module2.exports = parseurl;
    module2.exports.original = originalurl;
    function parseurl(req) {
      var url2 = req.url;
      if (url2 === void 0) {
        return void 0;
      }
      var parsed = req._parsedUrl;
      if (fresh(url2, parsed)) {
        return parsed;
      }
      parsed = fastparse(url2);
      parsed._raw = url2;
      return (req._parsedUrl = parsed);
    }
    function originalurl(req) {
      var url2 = req.originalUrl;
      if (typeof url2 !== 'string') {
        return parseurl(req);
      }
      var parsed = req._parsedOriginalUrl;
      if (fresh(url2, parsed)) {
        return parsed;
      }
      parsed = fastparse(url2);
      parsed._raw = url2;
      return (req._parsedOriginalUrl = parsed);
    }
    function fastparse(str) {
      if (typeof str !== 'string' || str.charCodeAt(0) !== 47) {
        return parse(str);
      }
      var pathname = str;
      var query = null;
      var search = null;
      for (var i = 1; i < str.length; i++) {
        switch (str.charCodeAt(i)) {
          case 63:
            if (search === null) {
              pathname = str.substring(0, i);
              query = str.substring(i + 1);
              search = str.substring(i);
            }
            break;
          case 9:
          case 10:
          case 12:
          case 13:
          case 32:
          case 35:
          case 160:
          case 65279:
            return parse(str);
        }
      }
      var url2 = Url !== void 0 ? new Url() : {};
      url2.path = str;
      url2.href = str;
      url2.pathname = pathname;
      if (search !== null) {
        url2.query = query;
        url2.search = search;
      }
      return url2;
    }
    function fresh(url2, parsedUrl) {
      return (
        typeof parsedUrl === 'object' &&
        parsedUrl !== null &&
        (Url === void 0 || parsedUrl instanceof Url) &&
        parsedUrl._raw === url2
      );
    }
  },
});

// ../../node_modules/finalhandler/index.js
var require_finalhandler = __commonJS({
  '../../node_modules/finalhandler/index.js'(exports2, module2) {
    'use strict';
    var debug2 = require_src3()('finalhandler');
    var encodeUrl = require_encodeurl();
    var escapeHtml = require_escape_html();
    var onFinished = require_on_finished();
    var parseUrl = require_parseurl();
    var statuses = require_statuses();
    var unpipe = require_unpipe();
    var DOUBLE_SPACE_REGEXP = /\x20{2}/g;
    var NEWLINE_REGEXP = /\n/g;
    var defer =
      typeof setImmediate === 'function'
        ? setImmediate
        : function (fn) {
            process.nextTick(fn.bind.apply(fn, arguments));
          };
    var isFinished = onFinished.isFinished;
    function createHtmlDocument(message) {
      var body = escapeHtml(message)
        .replace(NEWLINE_REGEXP, '<br>')
        .replace(DOUBLE_SPACE_REGEXP, ' &nbsp;');
      return (
        '<!DOCTYPE html>\n<html lang="en">\n<head>\n<meta charset="utf-8">\n<title>Error</title>\n</head>\n<body>\n<pre>' +
        body +
        '</pre>\n</body>\n</html>\n'
      );
    }
    module2.exports = finalhandler;
    function finalhandler(req, res, options) {
      var opts = options || {};
      var env2 = opts.env || process.env.NODE_ENV || 'development';
      var onerror = opts.onerror;
      return function (err) {
        var headers;
        var msg;
        var status;
        if (!err && headersSent(res)) {
          debug2('cannot 404 after headers sent');
          return;
        }
        if (err) {
          status = getErrorStatusCode(err);
          if (status === void 0) {
            status = getResponseStatusCode(res);
          } else {
            headers = getErrorHeaders(err);
          }
          msg = getErrorMessage(err, status, env2);
        } else {
          status = 404;
          msg = 'Cannot ' + req.method + ' ' + encodeUrl(getResourceName(req));
        }
        debug2('default %s', status);
        if (err && onerror) {
          defer(onerror, err, req, res);
        }
        if (headersSent(res)) {
          debug2('cannot %d after headers sent', status);
          req.socket.destroy();
          return;
        }
        send(req, res, status, headers, msg);
      };
    }
    function getErrorHeaders(err) {
      if (!err.headers || typeof err.headers !== 'object') {
        return void 0;
      }
      var headers = /* @__PURE__ */ Object.create(null);
      var keys = Object.keys(err.headers);
      for (var i = 0; i < keys.length; i++) {
        var key = keys[i];
        headers[key] = err.headers[key];
      }
      return headers;
    }
    function getErrorMessage(err, status, env2) {
      var msg;
      if (env2 !== 'production') {
        msg = err.stack;
        if (!msg && typeof err.toString === 'function') {
          msg = err.toString();
        }
      }
      return msg || statuses.message[status];
    }
    function getErrorStatusCode(err) {
      if (
        typeof err.status === 'number' &&
        err.status >= 400 &&
        err.status < 600
      ) {
        return err.status;
      }
      if (
        typeof err.statusCode === 'number' &&
        err.statusCode >= 400 &&
        err.statusCode < 600
      ) {
        return err.statusCode;
      }
      return void 0;
    }
    function getResourceName(req) {
      try {
        return parseUrl.original(req).pathname;
      } catch (e2) {
        return 'resource';
      }
    }
    function getResponseStatusCode(res) {
      var status = res.statusCode;
      if (typeof status !== 'number' || status < 400 || status > 599) {
        status = 500;
      }
      return status;
    }
    function headersSent(res) {
      return typeof res.headersSent !== 'boolean'
        ? Boolean(res._header)
        : res.headersSent;
    }
    function send(req, res, status, headers, message) {
      function write() {
        var body = createHtmlDocument(message);
        res.statusCode = status;
        res.statusMessage = statuses.message[status];
        res.removeHeader('Content-Encoding');
        res.removeHeader('Content-Language');
        res.removeHeader('Content-Range');
        setHeaders(res, headers);
        res.setHeader('Content-Security-Policy', "default-src 'none'");
        res.setHeader('X-Content-Type-Options', 'nosniff');
        res.setHeader('Content-Type', 'text/html; charset=utf-8');
        res.setHeader('Content-Length', Buffer.byteLength(body, 'utf8'));
        if (req.method === 'HEAD') {
          res.end();
          return;
        }
        res.end(body, 'utf8');
      }
      if (isFinished(req)) {
        write();
        return;
      }
      unpipe(req);
      onFinished(req, write);
      req.resume();
    }
    function setHeaders(res, headers) {
      if (!headers) {
        return;
      }
      var keys = Object.keys(headers);
      for (var i = 0; i < keys.length; i++) {
        var key = keys[i];
        res.setHeader(key, headers[key]);
      }
    }
  },
});

// ../../node_modules/express/node_modules/ms/index.js
var require_ms3 = __commonJS({
  '../../node_modules/express/node_modules/ms/index.js'(exports2, module2) {
    'use strict';
    var s2 = 1e3;
    var m2 = s2 * 60;
    var h2 = m2 * 60;
    var d = h2 * 24;
    var y = d * 365.25;
    module2.exports = function (val, options) {
      options = options || {};
      var type = typeof val;
      if (type === 'string' && val.length > 0) {
        return parse(val);
      } else if (type === 'number' && isNaN(val) === false) {
        return options.long ? fmtLong(val) : fmtShort(val);
      }
      throw new Error(
        'val is not a non-empty string or a valid number. val=' +
          JSON.stringify(val)
      );
    };
    function parse(str) {
      str = String(str);
      if (str.length > 100) {
        return;
      }
      var match =
        /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(
          str
        );
      if (!match) {
        return;
      }
      var n2 = parseFloat(match[1]);
      var type = (match[2] || 'ms').toLowerCase();
      switch (type) {
        case 'years':
        case 'year':
        case 'yrs':
        case 'yr':
        case 'y':
          return n2 * y;
        case 'days':
        case 'day':
        case 'd':
          return n2 * d;
        case 'hours':
        case 'hour':
        case 'hrs':
        case 'hr':
        case 'h':
          return n2 * h2;
        case 'minutes':
        case 'minute':
        case 'mins':
        case 'min':
        case 'm':
          return n2 * m2;
        case 'seconds':
        case 'second':
        case 'secs':
        case 'sec':
        case 's':
          return n2 * s2;
        case 'milliseconds':
        case 'millisecond':
        case 'msecs':
        case 'msec':
        case 'ms':
          return n2;
        default:
          return void 0;
      }
    }
    function fmtShort(ms2) {
      if (ms2 >= d) {
        return Math.round(ms2 / d) + 'd';
      }
      if (ms2 >= h2) {
        return Math.round(ms2 / h2) + 'h';
      }
      if (ms2 >= m2) {
        return Math.round(ms2 / m2) + 'm';
      }
      if (ms2 >= s2) {
        return Math.round(ms2 / s2) + 's';
      }
      return ms2 + 'ms';
    }
    function fmtLong(ms2) {
      return (
        plural(ms2, d, 'day') ||
        plural(ms2, h2, 'hour') ||
        plural(ms2, m2, 'minute') ||
        plural(ms2, s2, 'second') ||
        ms2 + ' ms'
      );
    }
    function plural(ms2, n2, name) {
      if (ms2 < n2) {
        return;
      }
      if (ms2 < n2 * 1.5) {
        return Math.floor(ms2 / n2) + ' ' + name;
      }
      return Math.ceil(ms2 / n2) + ' ' + name + 's';
    }
  },
});

// ../../node_modules/express/node_modules/debug/src/debug.js
var require_debug3 = __commonJS({
  '../../node_modules/express/node_modules/debug/src/debug.js'(
    exports2,
    module2
  ) {
    'use strict';
    exports2 =
      module2.exports =
      createDebug.debug =
      createDebug['default'] =
        createDebug;
    exports2.coerce = coerce;
    exports2.disable = disable;
    exports2.enable = enable;
    exports2.enabled = enabled;
    exports2.humanize = require_ms3();
    exports2.names = [];
    exports2.skips = [];
    exports2.formatters = {};
    var prevTime;
    function selectColor(namespace) {
      var hash = 0,
        i;
      for (i in namespace) {
        hash = (hash << 5) - hash + namespace.charCodeAt(i);
        hash |= 0;
      }
      return exports2.colors[Math.abs(hash) % exports2.colors.length];
    }
    function createDebug(namespace) {
      function debug2() {
        if (!debug2.enabled) return;
        var self2 = debug2;
        var curr = +(/* @__PURE__ */ new Date());
        var ms2 = curr - (prevTime || curr);
        self2.diff = ms2;
        self2.prev = prevTime;
        self2.curr = curr;
        prevTime = curr;
        var args = new Array(arguments.length);
        for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i];
        }
        args[0] = exports2.coerce(args[0]);
        if ('string' !== typeof args[0]) {
          args.unshift('%O');
        }
        var index = 0;
        args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format2) {
          if (match === '%%') return match;
          index++;
          var formatter = exports2.formatters[format2];
          if ('function' === typeof formatter) {
            var val = args[index];
            match = formatter.call(self2, val);
            args.splice(index, 1);
            index--;
          }
          return match;
        });
        exports2.formatArgs.call(self2, args);
        var logFn = debug2.log || exports2.log || console.log.bind(console);
        logFn.apply(self2, args);
      }
      debug2.namespace = namespace;
      debug2.enabled = exports2.enabled(namespace);
      debug2.useColors = exports2.useColors();
      debug2.color = selectColor(namespace);
      if ('function' === typeof exports2.init) {
        exports2.init(debug2);
      }
      return debug2;
    }
    function enable(namespaces) {
      exports2.save(namespaces);
      exports2.names = [];
      exports2.skips = [];
      var split = (typeof namespaces === 'string' ? namespaces : '').split(
        /[\s,]+/
      );
      var len = split.length;
      for (var i = 0; i < len; i++) {
        if (!split[i]) continue;
        namespaces = split[i].replace(/\*/g, '.*?');
        if (namespaces[0] === '-') {
          exports2.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
        } else {
          exports2.names.push(new RegExp('^' + namespaces + '$'));
        }
      }
    }
    function disable() {
      exports2.enable('');
    }
    function enabled(name) {
      var i, len;
      for (i = 0, len = exports2.skips.length; i < len; i++) {
        if (exports2.skips[i].test(name)) {
          return false;
        }
      }
      for (i = 0, len = exports2.names.length; i < len; i++) {
        if (exports2.names[i].test(name)) {
          return true;
        }
      }
      return false;
    }
    function coerce(val) {
      if (val instanceof Error) return val.stack || val.message;
      return val;
    }
  },
});

// ../../node_modules/express/node_modules/debug/src/browser.js
var require_browser3 = __commonJS({
  '../../node_modules/express/node_modules/debug/src/browser.js'(
    exports2,
    module2
  ) {
    'use strict';
    exports2 = module2.exports = require_debug3();
    exports2.log = log2;
    exports2.formatArgs = formatArgs;
    exports2.save = save;
    exports2.load = load;
    exports2.useColors = useColors;
    exports2.storage =
      'undefined' != typeof chrome && 'undefined' != typeof chrome.storage
        ? chrome.storage.local
        : localstorage();
    exports2.colors = [
      'lightseagreen',
      'forestgreen',
      'goldenrod',
      'dodgerblue',
      'darkorchid',
      'crimson',
    ];
    function useColors() {
      if (
        typeof window !== 'undefined' &&
        window.process &&
        window.process.type === 'renderer'
      ) {
        return true;
      }
      return (
        (typeof document !== 'undefined' &&
          document.documentElement &&
          document.documentElement.style &&
          document.documentElement.style.WebkitAppearance) || // is firebug? http://stackoverflow.com/a/398120/376773
        (typeof window !== 'undefined' &&
          window.console &&
          (window.console.firebug ||
            (window.console.exception && window.console.table))) || // is firefox >= v31?
        // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
        (typeof navigator !== 'undefined' &&
          navigator.userAgent &&
          navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) &&
          parseInt(RegExp.$1, 10) >= 31) || // double check webkit in userAgent just in case we are in a worker
        (typeof navigator !== 'undefined' &&
          navigator.userAgent &&
          navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/))
      );
    }
    exports2.formatters.j = function (v) {
      try {
        return JSON.stringify(v);
      } catch (err) {
        return '[UnexpectedJSONParseError]: ' + err.message;
      }
    };
    function formatArgs(args) {
      var useColors2 = this.useColors;
      args[0] =
        (useColors2 ? '%c' : '') +
        this.namespace +
        (useColors2 ? ' %c' : ' ') +
        args[0] +
        (useColors2 ? '%c ' : ' ') +
        '+' +
        exports2.humanize(this.diff);
      if (!useColors2) return;
      var c2 = 'color: ' + this.color;
      args.splice(1, 0, c2, 'color: inherit');
      var index = 0;
      var lastC = 0;
      args[0].replace(/%[a-zA-Z%]/g, function (match) {
        if ('%%' === match) return;
        index++;
        if ('%c' === match) {
          lastC = index;
        }
      });
      args.splice(lastC, 0, c2);
    }
    function log2() {
      return (
        'object' === typeof console &&
        console.log &&
        Function.prototype.apply.call(console.log, console, arguments)
      );
    }
    function save(namespaces) {
      try {
        if (null == namespaces) {
          exports2.storage.removeItem('debug');
        } else {
          exports2.storage.debug = namespaces;
        }
      } catch (e2) {}
    }
    function load() {
      var r2;
      try {
        r2 = exports2.storage.debug;
      } catch (e2) {}
      if (!r2 && typeof process !== 'undefined' && 'env' in process) {
        r2 = process.env.DEBUG;
      }
      return r2;
    }
    exports2.enable(load());
    function localstorage() {
      try {
        return window.localStorage;
      } catch (e2) {}
    }
  },
});

// ../../node_modules/express/node_modules/debug/src/node.js
var require_node3 = __commonJS({
  '../../node_modules/express/node_modules/debug/src/node.js'(
    exports2,
    module2
  ) {
    'use strict';
    var tty = require('tty');
    var util = require('util');
    exports2 = module2.exports = require_debug3();
    exports2.init = init;
    exports2.log = log2;
    exports2.formatArgs = formatArgs;
    exports2.save = save;
    exports2.load = load;
    exports2.useColors = useColors;
    exports2.colors = [6, 2, 3, 4, 5, 1];
    exports2.inspectOpts = Object.keys(process.env)
      .filter(function (key) {
        return /^debug_/i.test(key);
      })
      .reduce(function (obj, key) {
        var prop = key
          .substring(6)
          .toLowerCase()
          .replace(/_([a-z])/g, function (_2, k2) {
            return k2.toUpperCase();
          });
        var val = process.env[key];
        if (/^(yes|on|true|enabled)$/i.test(val)) val = true;
        else if (/^(no|off|false|disabled)$/i.test(val)) val = false;
        else if (val === 'null') val = null;
        else val = Number(val);
        obj[prop] = val;
        return obj;
      }, {});
    var fd = parseInt(process.env.DEBUG_FD, 10) || 2;
    if (1 !== fd && 2 !== fd) {
      util.deprecate(function () {},
      'except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)')();
    }
    var stream =
      1 === fd
        ? process.stdout
        : 2 === fd
        ? process.stderr
        : createWritableStdioStream(fd);
    function useColors() {
      return 'colors' in exports2.inspectOpts
        ? Boolean(exports2.inspectOpts.colors)
        : tty.isatty(fd);
    }
    exports2.formatters.o = function (v) {
      this.inspectOpts.colors = this.useColors;
      return util
        .inspect(v, this.inspectOpts)
        .split('\n')
        .map(function (str) {
          return str.trim();
        })
        .join(' ');
    };
    exports2.formatters.O = function (v) {
      this.inspectOpts.colors = this.useColors;
      return util.inspect(v, this.inspectOpts);
    };
    function formatArgs(args) {
      var name = this.namespace;
      var useColors2 = this.useColors;
      if (useColors2) {
        var c2 = this.color;
        var prefix = '  \x1B[3' + c2 + ';1m' + name + ' \x1B[0m';
        args[0] = prefix + args[0].split('\n').join('\n' + prefix);
        args.push(
          '\x1B[3' + c2 + 'm+' + exports2.humanize(this.diff) + '\x1B[0m'
        );
      } else {
        args[0] =
          /* @__PURE__ */ new Date().toUTCString() + ' ' + name + ' ' + args[0];
      }
    }
    function log2() {
      return stream.write(util.format.apply(util, arguments) + '\n');
    }
    function save(namespaces) {
      if (null == namespaces) {
        delete process.env.DEBUG;
      } else {
        process.env.DEBUG = namespaces;
      }
    }
    function load() {
      return process.env.DEBUG;
    }
    function createWritableStdioStream(fd2) {
      var stream2;
      var tty_wrap = process.binding('tty_wrap');
      switch (tty_wrap.guessHandleType(fd2)) {
        case 'TTY':
          stream2 = new tty.WriteStream(fd2);
          stream2._type = 'tty';
          if (stream2._handle && stream2._handle.unref) {
            stream2._handle.unref();
          }
          break;
        case 'FILE':
          var fs2 = require('fs');
          stream2 = new fs2.SyncWriteStream(fd2, { autoClose: false });
          stream2._type = 'fs';
          break;
        case 'PIPE':
        case 'TCP':
          var net = require('net');
          stream2 = new net.Socket({
            fd: fd2,
            readable: false,
            writable: true,
          });
          stream2.readable = false;
          stream2.read = null;
          stream2._type = 'pipe';
          if (stream2._handle && stream2._handle.unref) {
            stream2._handle.unref();
          }
          break;
        default:
          throw new Error('Implement me. Unknown stream file type!');
      }
      stream2.fd = fd2;
      stream2._isStdio = true;
      return stream2;
    }
    function init(debug2) {
      debug2.inspectOpts = {};
      var keys = Object.keys(exports2.inspectOpts);
      for (var i = 0; i < keys.length; i++) {
        debug2.inspectOpts[keys[i]] = exports2.inspectOpts[keys[i]];
      }
    }
    exports2.enable(load());
  },
});

// ../../node_modules/express/node_modules/debug/src/index.js
var require_src4 = __commonJS({
  '../../node_modules/express/node_modules/debug/src/index.js'(
    exports2,
    module2
  ) {
    'use strict';
    if (typeof process !== 'undefined' && process.type === 'renderer') {
      module2.exports = require_browser3();
    } else {
      module2.exports = require_node3();
    }
  },
});

// ../../node_modules/express/node_modules/array-flatten/array-flatten.js
var require_array_flatten = __commonJS({
  '../../node_modules/express/node_modules/array-flatten/array-flatten.js'(
    exports2,
    module2
  ) {
    'use strict';
    module2.exports = arrayFlatten;
    function flattenWithDepth(array, result, depth) {
      for (var i = 0; i < array.length; i++) {
        var value = array[i];
        if (depth > 0 && Array.isArray(value)) {
          flattenWithDepth(value, result, depth - 1);
        } else {
          result.push(value);
        }
      }
      return result;
    }
    function flattenForever(array, result) {
      for (var i = 0; i < array.length; i++) {
        var value = array[i];
        if (Array.isArray(value)) {
          flattenForever(value, result);
        } else {
          result.push(value);
        }
      }
      return result;
    }
    function arrayFlatten(array, depth) {
      if (depth == null) {
        return flattenForever(array, []);
      }
      return flattenWithDepth(array, [], depth);
    }
  },
});

// ../../node_modules/path-to-regexp/index.js
var require_path_to_regexp = __commonJS({
  '../../node_modules/path-to-regexp/index.js'(exports2, module2) {
    'use strict';
    module2.exports = pathtoRegexp;
    var MATCHING_GROUP_REGEXP = /\((?!\?)/g;
    function pathtoRegexp(path, keys, options) {
      options = options || {};
      keys = keys || [];
      var strict = options.strict;
      var end = options.end !== false;
      var flags = options.sensitive ? '' : 'i';
      var extraOffset = 0;
      var keysOffset = keys.length;
      var i = 0;
      var name = 0;
      var m2;
      if (path instanceof RegExp) {
        while ((m2 = MATCHING_GROUP_REGEXP.exec(path.source))) {
          keys.push({
            name: name++,
            optional: false,
            offset: m2.index,
          });
        }
        return path;
      }
      if (Array.isArray(path)) {
        path = path.map(function (value) {
          return pathtoRegexp(value, keys, options).source;
        });
        return new RegExp('(?:' + path.join('|') + ')', flags);
      }
      path = (
        '^' +
        path +
        (strict ? '' : path[path.length - 1] === '/' ? '?' : '/?')
      )
        .replace(/\/\(/g, '/(?:')
        .replace(/([\/\.])/g, '\\$1')
        .replace(
          /(\\\/)?(\\\.)?:(\w+)(\(.*?\))?(\*)?(\?)?/g,
          function (
            match,
            slash,
            format2,
            key,
            capture,
            star,
            optional,
            offset
          ) {
            slash = slash || '';
            format2 = format2 || '';
            capture = capture || '([^\\/' + format2 + ']+?)';
            optional = optional || '';
            keys.push({
              name: key,
              optional: !!optional,
              offset: offset + extraOffset,
            });
            var result =
              '' +
              (optional ? '' : slash) +
              '(?:' +
              format2 +
              (optional ? slash : '') +
              capture +
              (star ? '((?:[\\/' + format2 + '].+?)?)' : '') +
              ')' +
              optional;
            extraOffset += result.length - match.length;
            return result;
          }
        )
        .replace(/\*/g, function (star, index2) {
          var len = keys.length;
          while (len-- > keysOffset && keys[len].offset > index2) {
            keys[len].offset += 3;
          }
          return '(.*)';
        });
      while ((m2 = MATCHING_GROUP_REGEXP.exec(path))) {
        var escapeCount = 0;
        var index = m2.index;
        while (path.charAt(--index) === '\\') {
          escapeCount++;
        }
        if (escapeCount % 2 === 1) {
          continue;
        }
        if (
          keysOffset + i === keys.length ||
          keys[keysOffset + i].offset > m2.index
        ) {
          keys.splice(keysOffset + i, 0, {
            name: name++,
            // Unnamed matching groups must be consistently linear.
            optional: false,
            offset: m2.index,
          });
        }
        i++;
      }
      path += end ? '$' : path[path.length - 1] === '/' ? '' : '(?=\\/|$)';
      return new RegExp(path, flags);
    }
  },
});

// ../../node_modules/express/lib/router/layer.js
var require_layer = __commonJS({
  '../../node_modules/express/lib/router/layer.js'(exports2, module2) {
    'use strict';
    var pathRegexp = require_path_to_regexp();
    var debug2 = require_src4()('express:router:layer');
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    module2.exports = Layer;
    function Layer(path, options, fn) {
      if (!(this instanceof Layer)) {
        return new Layer(path, options, fn);
      }
      debug2('new %o', path);
      var opts = options || {};
      this.handle = fn;
      this.name = fn.name || '<anonymous>';
      this.params = void 0;
      this.path = void 0;
      this.regexp = pathRegexp(path, (this.keys = []), opts);
      this.regexp.fast_star = path === '*';
      this.regexp.fast_slash = path === '/' && opts.end === false;
    }
    Layer.prototype.handle_error = function handle_error(
      error,
      req,
      res,
      next
    ) {
      var fn = this.handle;
      if (fn.length !== 4) {
        return next(error);
      }
      try {
        fn(error, req, res, next);
      } catch (err) {
        next(err);
      }
    };
    Layer.prototype.handle_request = function handle(req, res, next) {
      var fn = this.handle;
      if (fn.length > 3) {
        return next();
      }
      try {
        fn(req, res, next);
      } catch (err) {
        next(err);
      }
    };
    Layer.prototype.match = function match(path) {
      var match2;
      if (path != null) {
        if (this.regexp.fast_slash) {
          this.params = {};
          this.path = '';
          return true;
        }
        if (this.regexp.fast_star) {
          this.params = { 0: decode_param(path) };
          this.path = path;
          return true;
        }
        match2 = this.regexp.exec(path);
      }
      if (!match2) {
        this.params = void 0;
        this.path = void 0;
        return false;
      }
      this.params = {};
      this.path = match2[0];
      var keys = this.keys;
      var params = this.params;
      for (var i = 1; i < match2.length; i++) {
        var key = keys[i - 1];
        var prop = key.name;
        var val = decode_param(match2[i]);
        if (val !== void 0 || !hasOwnProperty.call(params, prop)) {
          params[prop] = val;
        }
      }
      return true;
    };
    function decode_param(val) {
      if (typeof val !== 'string' || val.length === 0) {
        return val;
      }
      try {
        return decodeURIComponent(val);
      } catch (err) {
        if (err instanceof URIError) {
          err.message = "Failed to decode param '" + val + "'";
          err.status = err.statusCode = 400;
        }
        throw err;
      }
    }
  },
});

// ../../node_modules/methods/index.js
var require_methods = __commonJS({
  '../../node_modules/methods/index.js'(exports2, module2) {
    'use strict';
    var http = require('http');
    module2.exports = getCurrentNodeMethods() || getBasicNodeMethods();
    function getCurrentNodeMethods() {
      return (
        http.METHODS &&
        http.METHODS.map(function lowerCaseMethod(method) {
          return method.toLowerCase();
        })
      );
    }
    function getBasicNodeMethods() {
      return [
        'get',
        'post',
        'put',
        'head',
        'delete',
        'options',
        'trace',
        'copy',
        'lock',
        'mkcol',
        'move',
        'purge',
        'propfind',
        'proppatch',
        'unlock',
        'report',
        'mkactivity',
        'checkout',
        'merge',
        'm-search',
        'notify',
        'subscribe',
        'unsubscribe',
        'patch',
        'search',
        'connect',
      ];
    }
  },
});

// ../../node_modules/express/lib/router/route.js
var require_route = __commonJS({
  '../../node_modules/express/lib/router/route.js'(exports2, module2) {
    'use strict';
    var debug2 = require_src4()('express:router:route');
    var flatten2 = require_array_flatten();
    var Layer = require_layer();
    var methods = require_methods();
    var slice = Array.prototype.slice;
    var toString = Object.prototype.toString;
    module2.exports = Route;
    function Route(path) {
      this.path = path;
      this.stack = [];
      debug2('new %o', path);
      this.methods = {};
    }
    Route.prototype._handles_method = function _handles_method(method) {
      if (this.methods._all) {
        return true;
      }
      var name = method.toLowerCase();
      if (name === 'head' && !this.methods['head']) {
        name = 'get';
      }
      return Boolean(this.methods[name]);
    };
    Route.prototype._options = function _options() {
      var methods2 = Object.keys(this.methods);
      if (this.methods.get && !this.methods.head) {
        methods2.push('head');
      }
      for (var i = 0; i < methods2.length; i++) {
        methods2[i] = methods2[i].toUpperCase();
      }
      return methods2;
    };
    Route.prototype.dispatch = function dispatch(req, res, done) {
      var idx = 0;
      var stack = this.stack;
      var sync = 0;
      if (stack.length === 0) {
        return done();
      }
      var method = req.method.toLowerCase();
      if (method === 'head' && !this.methods['head']) {
        method = 'get';
      }
      req.route = this;
      next();
      function next(err) {
        if (err && err === 'route') {
          return done();
        }
        if (err && err === 'router') {
          return done(err);
        }
        if (++sync > 100) {
          return setImmediate(next, err);
        }
        var layer = stack[idx++];
        if (!layer) {
          return done(err);
        }
        if (layer.method && layer.method !== method) {
          next(err);
        } else if (err) {
          layer.handle_error(err, req, res, next);
        } else {
          layer.handle_request(req, res, next);
        }
        sync = 0;
      }
    };
    Route.prototype.all = function all2() {
      var handles = flatten2(slice.call(arguments));
      for (var i = 0; i < handles.length; i++) {
        var handle = handles[i];
        if (typeof handle !== 'function') {
          var type = toString.call(handle);
          var msg =
            'Route.all() requires a callback function but got a ' + type;
          throw new TypeError(msg);
        }
        var layer = Layer('/', {}, handle);
        layer.method = void 0;
        this.methods._all = true;
        this.stack.push(layer);
      }
      return this;
    };
    methods.forEach(function (method) {
      Route.prototype[method] = function () {
        var handles = flatten2(slice.call(arguments));
        for (var i = 0; i < handles.length; i++) {
          var handle = handles[i];
          if (typeof handle !== 'function') {
            var type = toString.call(handle);
            var msg =
              'Route.' +
              method +
              '() requires a callback function but got a ' +
              type;
            throw new Error(msg);
          }
          debug2('%s %o', method, this.path);
          var layer = Layer('/', {}, handle);
          layer.method = method;
          this.methods[method] = true;
          this.stack.push(layer);
        }
        return this;
      };
    });
  },
});

// ../../node_modules/utils-merge/index.js
var require_utils_merge = __commonJS({
  '../../node_modules/utils-merge/index.js'(exports2, module2) {
    'use strict';
    exports2 = module2.exports = function (a, b) {
      if (a && b) {
        for (var key in b) {
          a[key] = b[key];
        }
      }
      return a;
    };
  },
});

// ../../node_modules/express/lib/router/index.js
var require_router = __commonJS({
  '../../node_modules/express/lib/router/index.js'(exports2, module2) {
    'use strict';
    var Route = require_route();
    var Layer = require_layer();
    var methods = require_methods();
    var mixin = require_utils_merge();
    var debug2 = require_src4()('express:router');
    var deprecate = require_depd()('express');
    var flatten2 = require_array_flatten();
    var parseUrl = require_parseurl();
    var setPrototypeOf = require_setprototypeof();
    var objectRegExp = /^\[object (\S+)\]$/;
    var slice = Array.prototype.slice;
    var toString = Object.prototype.toString;
    var proto = (module2.exports = function (options) {
      var opts = options || {};
      function router(req, res, next) {
        router.handle(req, res, next);
      }
      setPrototypeOf(router, proto);
      router.params = {};
      router._params = [];
      router.caseSensitive = opts.caseSensitive;
      router.mergeParams = opts.mergeParams;
      router.strict = opts.strict;
      router.stack = [];
      return router;
    });
    proto.param = function param(name, fn) {
      if (typeof name === 'function') {
        deprecate('router.param(fn): Refactor to use path params');
        this._params.push(name);
        return;
      }
      var params = this._params;
      var len = params.length;
      var ret;
      if (name[0] === ':') {
        deprecate(
          'router.param(' +
            JSON.stringify(name) +
            ', fn): Use router.param(' +
            JSON.stringify(name.slice(1)) +
            ', fn) instead'
        );
        name = name.slice(1);
      }
      for (var i = 0; i < len; ++i) {
        if ((ret = params[i](name, fn))) {
          fn = ret;
        }
      }
      if ('function' !== typeof fn) {
        throw new Error('invalid param() call for ' + name + ', got ' + fn);
      }
      (this.params[name] = this.params[name] || []).push(fn);
      return this;
    };
    proto.handle = function handle(req, res, out) {
      var self2 = this;
      debug2('dispatching %s %s', req.method, req.url);
      var idx = 0;
      var protohost = getProtohost(req.url) || '';
      var removed = '';
      var slashAdded = false;
      var sync = 0;
      var paramcalled = {};
      var options = [];
      var stack = self2.stack;
      var parentParams = req.params;
      var parentUrl = req.baseUrl || '';
      var done = restore(out, req, 'baseUrl', 'next', 'params');
      req.next = next;
      if (req.method === 'OPTIONS') {
        done = wrap(done, function (old, err) {
          if (err || options.length === 0) return old(err);
          sendOptionsResponse(res, options, old);
        });
      }
      req.baseUrl = parentUrl;
      req.originalUrl = req.originalUrl || req.url;
      next();
      function next(err) {
        var layerError = err === 'route' ? null : err;
        if (slashAdded) {
          req.url = req.url.slice(1);
          slashAdded = false;
        }
        if (removed.length !== 0) {
          req.baseUrl = parentUrl;
          req.url = protohost + removed + req.url.slice(protohost.length);
          removed = '';
        }
        if (layerError === 'router') {
          setImmediate(done, null);
          return;
        }
        if (idx >= stack.length) {
          setImmediate(done, layerError);
          return;
        }
        if (++sync > 100) {
          return setImmediate(next, err);
        }
        var path = getPathname(req);
        if (path == null) {
          return done(layerError);
        }
        var layer;
        var match;
        var route;
        while (match !== true && idx < stack.length) {
          layer = stack[idx++];
          match = matchLayer(layer, path);
          route = layer.route;
          if (typeof match !== 'boolean') {
            layerError = layerError || match;
          }
          if (match !== true) {
            continue;
          }
          if (!route) {
            continue;
          }
          if (layerError) {
            match = false;
            continue;
          }
          var method = req.method;
          var has_method = route._handles_method(method);
          if (!has_method && method === 'OPTIONS') {
            appendMethods(options, route._options());
          }
          if (!has_method && method !== 'HEAD') {
            match = false;
          }
        }
        if (match !== true) {
          return done(layerError);
        }
        if (route) {
          req.route = route;
        }
        req.params = self2.mergeParams
          ? mergeParams(layer.params, parentParams)
          : layer.params;
        var layerPath = layer.path;
        self2.process_params(layer, paramcalled, req, res, function (err2) {
          if (err2) {
            next(layerError || err2);
          } else if (route) {
            layer.handle_request(req, res, next);
          } else {
            trim_prefix(layer, layerError, layerPath, path);
          }
          sync = 0;
        });
      }
      function trim_prefix(layer, layerError, layerPath, path) {
        if (layerPath.length !== 0) {
          if (layerPath !== path.slice(0, layerPath.length)) {
            next(layerError);
            return;
          }
          var c2 = path[layerPath.length];
          if (c2 && c2 !== '/' && c2 !== '.') return next(layerError);
          debug2('trim prefix (%s) from url %s', layerPath, req.url);
          removed = layerPath;
          req.url =
            protohost + req.url.slice(protohost.length + removed.length);
          if (!protohost && req.url[0] !== '/') {
            req.url = '/' + req.url;
            slashAdded = true;
          }
          req.baseUrl =
            parentUrl +
            (removed[removed.length - 1] === '/'
              ? removed.substring(0, removed.length - 1)
              : removed);
        }
        debug2('%s %s : %s', layer.name, layerPath, req.originalUrl);
        if (layerError) {
          layer.handle_error(layerError, req, res, next);
        } else {
          layer.handle_request(req, res, next);
        }
      }
    };
    proto.process_params = function process_params(
      layer,
      called,
      req,
      res,
      done
    ) {
      var params = this.params;
      var keys = layer.keys;
      if (!keys || keys.length === 0) {
        return done();
      }
      var i = 0;
      var name;
      var paramIndex = 0;
      var key;
      var paramVal;
      var paramCallbacks;
      var paramCalled;
      function param(err) {
        if (err) {
          return done(err);
        }
        if (i >= keys.length) {
          return done();
        }
        paramIndex = 0;
        key = keys[i++];
        name = key.name;
        paramVal = req.params[name];
        paramCallbacks = params[name];
        paramCalled = called[name];
        if (paramVal === void 0 || !paramCallbacks) {
          return param();
        }
        if (
          paramCalled &&
          (paramCalled.match === paramVal ||
            (paramCalled.error && paramCalled.error !== 'route'))
        ) {
          req.params[name] = paramCalled.value;
          return param(paramCalled.error);
        }
        called[name] = paramCalled = {
          error: null,
          match: paramVal,
          value: paramVal,
        };
        paramCallback();
      }
      function paramCallback(err) {
        var fn = paramCallbacks[paramIndex++];
        paramCalled.value = req.params[key.name];
        if (err) {
          paramCalled.error = err;
          param(err);
          return;
        }
        if (!fn) return param();
        try {
          fn(req, res, paramCallback, paramVal, key.name);
        } catch (e2) {
          paramCallback(e2);
        }
      }
      param();
    };
    proto.use = function use(fn) {
      var offset = 0;
      var path = '/';
      if (typeof fn !== 'function') {
        var arg = fn;
        while (Array.isArray(arg) && arg.length !== 0) {
          arg = arg[0];
        }
        if (typeof arg !== 'function') {
          offset = 1;
          path = fn;
        }
      }
      var callbacks = flatten2(slice.call(arguments, offset));
      if (callbacks.length === 0) {
        throw new TypeError('Router.use() requires a middleware function');
      }
      for (var i = 0; i < callbacks.length; i++) {
        var fn = callbacks[i];
        if (typeof fn !== 'function') {
          throw new TypeError(
            'Router.use() requires a middleware function but got a ' +
              gettype(fn)
          );
        }
        debug2('use %o %s', path, fn.name || '<anonymous>');
        var layer = new Layer(
          path,
          {
            sensitive: this.caseSensitive,
            strict: false,
            end: false,
          },
          fn
        );
        layer.route = void 0;
        this.stack.push(layer);
      }
      return this;
    };
    proto.route = function route(path) {
      var route2 = new Route(path);
      var layer = new Layer(
        path,
        {
          sensitive: this.caseSensitive,
          strict: this.strict,
          end: true,
        },
        route2.dispatch.bind(route2)
      );
      layer.route = route2;
      this.stack.push(layer);
      return route2;
    };
    methods.concat('all').forEach(function (method) {
      proto[method] = function (path) {
        var route = this.route(path);
        route[method].apply(route, slice.call(arguments, 1));
        return this;
      };
    });
    function appendMethods(list, addition) {
      for (var i = 0; i < addition.length; i++) {
        var method = addition[i];
        if (list.indexOf(method) === -1) {
          list.push(method);
        }
      }
    }
    function getPathname(req) {
      try {
        return parseUrl(req).pathname;
      } catch (err) {
        return void 0;
      }
    }
    function getProtohost(url) {
      if (typeof url !== 'string' || url.length === 0 || url[0] === '/') {
        return void 0;
      }
      var searchIndex = url.indexOf('?');
      var pathLength = searchIndex !== -1 ? searchIndex : url.length;
      var fqdnIndex = url.slice(0, pathLength).indexOf('://');
      return fqdnIndex !== -1
        ? url.substring(0, url.indexOf('/', 3 + fqdnIndex))
        : void 0;
    }
    function gettype(obj) {
      var type = typeof obj;
      if (type !== 'object') {
        return type;
      }
      return toString.call(obj).replace(objectRegExp, '$1');
    }
    function matchLayer(layer, path) {
      try {
        return layer.match(path);
      } catch (err) {
        return err;
      }
    }
    function mergeParams(params, parent) {
      if (typeof parent !== 'object' || !parent) {
        return params;
      }
      var obj = mixin({}, parent);
      if (!(0 in params) || !(0 in parent)) {
        return mixin(obj, params);
      }
      var i = 0;
      var o2 = 0;
      while (i in params) {
        i++;
      }
      while (o2 in parent) {
        o2++;
      }
      for (i--; i >= 0; i--) {
        params[i + o2] = params[i];
        if (i < o2) {
          delete params[i];
        }
      }
      return mixin(obj, params);
    }
    function restore(fn, obj) {
      var props = new Array(arguments.length - 2);
      var vals = new Array(arguments.length - 2);
      for (var i = 0; i < props.length; i++) {
        props[i] = arguments[i + 2];
        vals[i] = obj[props[i]];
      }
      return function () {
        for (var i2 = 0; i2 < props.length; i2++) {
          obj[props[i2]] = vals[i2];
        }
        return fn.apply(this, arguments);
      };
    }
    function sendOptionsResponse(res, options, next) {
      try {
        var body = options.join(',');
        res.set('Allow', body);
        res.send(body);
      } catch (err) {
        next(err);
      }
    }
    function wrap(old, fn) {
      return function proxy() {
        var args = new Array(arguments.length + 1);
        args[0] = old;
        for (var i = 0, len = arguments.length; i < len; i++) {
          args[i + 1] = arguments[i];
        }
        fn.apply(this, args);
      };
    }
  },
});

// ../../node_modules/express/lib/middleware/init.js
var require_init = __commonJS({
  '../../node_modules/express/lib/middleware/init.js'(exports2) {
    'use strict';
    var setPrototypeOf = require_setprototypeof();
    exports2.init = function (app2) {
      return function expressInit(req, res, next) {
        if (app2.enabled('x-powered-by'))
          res.setHeader('X-Powered-By', 'Express');
        req.res = res;
        res.req = req;
        req.next = next;
        setPrototypeOf(req, app2.request);
        setPrototypeOf(res, app2.response);
        res.locals = res.locals || /* @__PURE__ */ Object.create(null);
        next();
      };
    };
  },
});

// ../../node_modules/express/lib/middleware/query.js
var require_query = __commonJS({
  '../../node_modules/express/lib/middleware/query.js'(exports2, module2) {
    'use strict';
    var merge2 = require_utils_merge();
    var parseUrl = require_parseurl();
    var qs2 = require_lib2();
    module2.exports = function query(options) {
      var opts = merge2({}, options);
      var queryparse = qs2.parse;
      if (typeof options === 'function') {
        queryparse = options;
        opts = void 0;
      }
      if (opts !== void 0 && opts.allowPrototypes === void 0) {
        opts.allowPrototypes = true;
      }
      return function query2(req, res, next) {
        if (!req.query) {
          var val = parseUrl(req).query;
          req.query = queryparse(val, opts);
        }
        next();
      };
    };
  },
});

// ../../node_modules/express/lib/view.js
var require_view = __commonJS({
  '../../node_modules/express/lib/view.js'(exports2, module2) {
    'use strict';
    var debug2 = require_src4()('express:view');
    var path = require('path');
    var fs2 = require('fs');
    var dirname2 = path.dirname;
    var basename = path.basename;
    var extname = path.extname;
    var join2 = path.join;
    var resolve = path.resolve;
    module2.exports = View;
    function View(name, options) {
      var opts = options || {};
      this.defaultEngine = opts.defaultEngine;
      this.ext = extname(name);
      this.name = name;
      this.root = opts.root;
      if (!this.ext && !this.defaultEngine) {
        throw new Error(
          'No default engine was specified and no extension was provided.'
        );
      }
      var fileName = name;
      if (!this.ext) {
        this.ext =
          this.defaultEngine[0] !== '.'
            ? '.' + this.defaultEngine
            : this.defaultEngine;
        fileName += this.ext;
      }
      if (!opts.engines[this.ext]) {
        var mod = this.ext.slice(1);
        debug2('require "%s"', mod);
        var fn = require(mod).__express;
        if (typeof fn !== 'function') {
          throw new Error(
            'Module "' + mod + '" does not provide a view engine.'
          );
        }
        opts.engines[this.ext] = fn;
      }
      this.engine = opts.engines[this.ext];
      this.path = this.lookup(fileName);
    }
    View.prototype.lookup = function lookup(name) {
      var path2;
      var roots = [].concat(this.root);
      debug2('lookup "%s"', name);
      for (var i = 0; i < roots.length && !path2; i++) {
        var root = roots[i];
        var loc = resolve(root, name);
        var dir = dirname2(loc);
        var file = basename(loc);
        path2 = this.resolve(dir, file);
      }
      return path2;
    };
    View.prototype.render = function render3(options, callback) {
      debug2('render "%s"', this.path);
      this.engine(this.path, options, callback);
    };
    View.prototype.resolve = function resolve2(dir, file) {
      var ext = this.ext;
      var path2 = join2(dir, file);
      var stat = tryStat(path2);
      if (stat && stat.isFile()) {
        return path2;
      }
      path2 = join2(dir, basename(file, ext), 'index' + ext);
      stat = tryStat(path2);
      if (stat && stat.isFile()) {
        return path2;
      }
    };
    function tryStat(path2) {
      debug2('stat "%s"', path2);
      try {
        return fs2.statSync(path2);
      } catch (e2) {
        return void 0;
      }
    }
  },
});

// ../../node_modules/safe-buffer/index.js
var require_safe_buffer = __commonJS({
  '../../node_modules/safe-buffer/index.js'(exports2, module2) {
    'use strict';
    var buffer = require('buffer');
    var Buffer2 = buffer.Buffer;
    function copyProps(src, dst) {
      for (var key in src) {
        dst[key] = src[key];
      }
    }
    if (
      Buffer2.from &&
      Buffer2.alloc &&
      Buffer2.allocUnsafe &&
      Buffer2.allocUnsafeSlow
    ) {
      module2.exports = buffer;
    } else {
      copyProps(buffer, exports2);
      exports2.Buffer = SafeBuffer;
    }
    function SafeBuffer(arg, encodingOrOffset, length) {
      return Buffer2(arg, encodingOrOffset, length);
    }
    SafeBuffer.prototype = Object.create(Buffer2.prototype);
    copyProps(Buffer2, SafeBuffer);
    SafeBuffer.from = function (arg, encodingOrOffset, length) {
      if (typeof arg === 'number') {
        throw new TypeError('Argument must not be a number');
      }
      return Buffer2(arg, encodingOrOffset, length);
    };
    SafeBuffer.alloc = function (size, fill, encoding) {
      if (typeof size !== 'number') {
        throw new TypeError('Argument must be a number');
      }
      var buf = Buffer2(size);
      if (fill !== void 0) {
        if (typeof encoding === 'string') {
          buf.fill(fill, encoding);
        } else {
          buf.fill(fill);
        }
      } else {
        buf.fill(0);
      }
      return buf;
    };
    SafeBuffer.allocUnsafe = function (size) {
      if (typeof size !== 'number') {
        throw new TypeError('Argument must be a number');
      }
      return Buffer2(size);
    };
    SafeBuffer.allocUnsafeSlow = function (size) {
      if (typeof size !== 'number') {
        throw new TypeError('Argument must be a number');
      }
      return buffer.SlowBuffer(size);
    };
  },
});

// ../../node_modules/content-disposition/index.js
var require_content_disposition = __commonJS({
  '../../node_modules/content-disposition/index.js'(exports2, module2) {
    'use strict';
    module2.exports = contentDisposition;
    module2.exports.parse = parse;
    var basename = require('path').basename;
    var Buffer2 = require_safe_buffer().Buffer;
    var ENCODE_URL_ATTR_CHAR_REGEXP = /[\x00-\x20"'()*,/:;<=>?@[\\\]{}\x7f]/g;
    var HEX_ESCAPE_REGEXP = /%[0-9A-Fa-f]{2}/;
    var HEX_ESCAPE_REPLACE_REGEXP = /%([0-9A-Fa-f]{2})/g;
    var NON_LATIN1_REGEXP = /[^\x20-\x7e\xa0-\xff]/g;
    var QESC_REGEXP = /\\([\u0000-\u007f])/g;
    var QUOTE_REGEXP = /([\\"])/g;
    var PARAM_REGEXP =
      /;[\x09\x20]*([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\x09\x20]*=[\x09\x20]*("(?:[\x20!\x23-\x5b\x5d-\x7e\x80-\xff]|\\[\x20-\x7e])*"|[!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\x09\x20]*/g;
    var TEXT_REGEXP = /^[\x20-\x7e\x80-\xff]+$/;
    var TOKEN_REGEXP = /^[!#$%&'*+.0-9A-Z^_`a-z|~-]+$/;
    var EXT_VALUE_REGEXP =
      /^([A-Za-z0-9!#$%&+\-^_`{}~]+)'(?:[A-Za-z]{2,3}(?:-[A-Za-z]{3}){0,3}|[A-Za-z]{4,8}|)'((?:%[0-9A-Fa-f]{2}|[A-Za-z0-9!#$&+.^_`|~-])+)$/;
    var DISPOSITION_TYPE_REGEXP =
      /^([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\x09\x20]*(?:$|;)/;
    function contentDisposition(filename, options) {
      var opts = options || {};
      var type = opts.type || 'attachment';
      var params = createparams(filename, opts.fallback);
      return format2(new ContentDisposition(type, params));
    }
    function createparams(filename, fallback) {
      if (filename === void 0) {
        return;
      }
      var params = {};
      if (typeof filename !== 'string') {
        throw new TypeError('filename must be a string');
      }
      if (fallback === void 0) {
        fallback = true;
      }
      if (typeof fallback !== 'string' && typeof fallback !== 'boolean') {
        throw new TypeError('fallback must be a string or boolean');
      }
      if (typeof fallback === 'string' && NON_LATIN1_REGEXP.test(fallback)) {
        throw new TypeError('fallback must be ISO-8859-1 string');
      }
      var name = basename(filename);
      var isQuotedString = TEXT_REGEXP.test(name);
      var fallbackName =
        typeof fallback !== 'string'
          ? fallback && getlatin1(name)
          : basename(fallback);
      var hasFallback =
        typeof fallbackName === 'string' && fallbackName !== name;
      if (hasFallback || !isQuotedString || HEX_ESCAPE_REGEXP.test(name)) {
        params['filename*'] = name;
      }
      if (isQuotedString || hasFallback) {
        params.filename = hasFallback ? fallbackName : name;
      }
      return params;
    }
    function format2(obj) {
      var parameters = obj.parameters;
      var type = obj.type;
      if (!type || typeof type !== 'string' || !TOKEN_REGEXP.test(type)) {
        throw new TypeError('invalid type');
      }
      var string = String(type).toLowerCase();
      if (parameters && typeof parameters === 'object') {
        var param;
        var params = Object.keys(parameters).sort();
        for (var i = 0; i < params.length; i++) {
          param = params[i];
          var val =
            param.substr(-1) === '*'
              ? ustring(parameters[param])
              : qstring(parameters[param]);
          string += '; ' + param + '=' + val;
        }
      }
      return string;
    }
    function decodefield(str) {
      var match = EXT_VALUE_REGEXP.exec(str);
      if (!match) {
        throw new TypeError('invalid extended field value');
      }
      var charset = match[1].toLowerCase();
      var encoded = match[2];
      var value;
      var binary = encoded.replace(HEX_ESCAPE_REPLACE_REGEXP, pdecode);
      switch (charset) {
        case 'iso-8859-1':
          value = getlatin1(binary);
          break;
        case 'utf-8':
          value = Buffer2.from(binary, 'binary').toString('utf8');
          break;
        default:
          throw new TypeError('unsupported charset in extended field');
      }
      return value;
    }
    function getlatin1(val) {
      return String(val).replace(NON_LATIN1_REGEXP, '?');
    }
    function parse(string) {
      if (!string || typeof string !== 'string') {
        throw new TypeError('argument string is required');
      }
      var match = DISPOSITION_TYPE_REGEXP.exec(string);
      if (!match) {
        throw new TypeError('invalid type format');
      }
      var index = match[0].length;
      var type = match[1].toLowerCase();
      var key;
      var names = [];
      var params = {};
      var value;
      index = PARAM_REGEXP.lastIndex =
        match[0].substr(-1) === ';' ? index - 1 : index;
      while ((match = PARAM_REGEXP.exec(string))) {
        if (match.index !== index) {
          throw new TypeError('invalid parameter format');
        }
        index += match[0].length;
        key = match[1].toLowerCase();
        value = match[2];
        if (names.indexOf(key) !== -1) {
          throw new TypeError('invalid duplicate parameter');
        }
        names.push(key);
        if (key.indexOf('*') + 1 === key.length) {
          key = key.slice(0, -1);
          value = decodefield(value);
          params[key] = value;
          continue;
        }
        if (typeof params[key] === 'string') {
          continue;
        }
        if (value[0] === '"') {
          value = value.substr(1, value.length - 2).replace(QESC_REGEXP, '$1');
        }
        params[key] = value;
      }
      if (index !== -1 && index !== string.length) {
        throw new TypeError('invalid parameter format');
      }
      return new ContentDisposition(type, params);
    }
    function pdecode(str, hex) {
      return String.fromCharCode(parseInt(hex, 16));
    }
    function pencode(char) {
      return '%' + String(char).charCodeAt(0).toString(16).toUpperCase();
    }
    function qstring(val) {
      var str = String(val);
      return '"' + str.replace(QUOTE_REGEXP, '\\$1') + '"';
    }
    function ustring(val) {
      var str = String(val);
      var encoded = encodeURIComponent(str).replace(
        ENCODE_URL_ATTR_CHAR_REGEXP,
        pencode
      );
      return "UTF-8''" + encoded;
    }
    function ContentDisposition(type, parameters) {
      this.type = type;
      this.parameters = parameters;
    }
  },
});

// ../../node_modules/send/node_modules/debug/node_modules/ms/index.js
var require_ms4 = __commonJS({
  '../../node_modules/send/node_modules/debug/node_modules/ms/index.js'(
    exports2,
    module2
  ) {
    'use strict';
    var s2 = 1e3;
    var m2 = s2 * 60;
    var h2 = m2 * 60;
    var d = h2 * 24;
    var y = d * 365.25;
    module2.exports = function (val, options) {
      options = options || {};
      var type = typeof val;
      if (type === 'string' && val.length > 0) {
        return parse(val);
      } else if (type === 'number' && isNaN(val) === false) {
        return options.long ? fmtLong(val) : fmtShort(val);
      }
      throw new Error(
        'val is not a non-empty string or a valid number. val=' +
          JSON.stringify(val)
      );
    };
    function parse(str) {
      str = String(str);
      if (str.length > 100) {
        return;
      }
      var match =
        /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(
          str
        );
      if (!match) {
        return;
      }
      var n2 = parseFloat(match[1]);
      var type = (match[2] || 'ms').toLowerCase();
      switch (type) {
        case 'years':
        case 'year':
        case 'yrs':
        case 'yr':
        case 'y':
          return n2 * y;
        case 'days':
        case 'day':
        case 'd':
          return n2 * d;
        case 'hours':
        case 'hour':
        case 'hrs':
        case 'hr':
        case 'h':
          return n2 * h2;
        case 'minutes':
        case 'minute':
        case 'mins':
        case 'min':
        case 'm':
          return n2 * m2;
        case 'seconds':
        case 'second':
        case 'secs':
        case 'sec':
        case 's':
          return n2 * s2;
        case 'milliseconds':
        case 'millisecond':
        case 'msecs':
        case 'msec':
        case 'ms':
          return n2;
        default:
          return void 0;
      }
    }
    function fmtShort(ms2) {
      if (ms2 >= d) {
        return Math.round(ms2 / d) + 'd';
      }
      if (ms2 >= h2) {
        return Math.round(ms2 / h2) + 'h';
      }
      if (ms2 >= m2) {
        return Math.round(ms2 / m2) + 'm';
      }
      if (ms2 >= s2) {
        return Math.round(ms2 / s2) + 's';
      }
      return ms2 + 'ms';
    }
    function fmtLong(ms2) {
      return (
        plural(ms2, d, 'day') ||
        plural(ms2, h2, 'hour') ||
        plural(ms2, m2, 'minute') ||
        plural(ms2, s2, 'second') ||
        ms2 + ' ms'
      );
    }
    function plural(ms2, n2, name) {
      if (ms2 < n2) {
        return;
      }
      if (ms2 < n2 * 1.5) {
        return Math.floor(ms2 / n2) + ' ' + name;
      }
      return Math.ceil(ms2 / n2) + ' ' + name + 's';
    }
  },
});

// ../../node_modules/send/node_modules/debug/src/debug.js
var require_debug4 = __commonJS({
  '../../node_modules/send/node_modules/debug/src/debug.js'(exports2, module2) {
    'use strict';
    exports2 =
      module2.exports =
      createDebug.debug =
      createDebug['default'] =
        createDebug;
    exports2.coerce = coerce;
    exports2.disable = disable;
    exports2.enable = enable;
    exports2.enabled = enabled;
    exports2.humanize = require_ms4();
    exports2.names = [];
    exports2.skips = [];
    exports2.formatters = {};
    var prevTime;
    function selectColor(namespace) {
      var hash = 0,
        i;
      for (i in namespace) {
        hash = (hash << 5) - hash + namespace.charCodeAt(i);
        hash |= 0;
      }
      return exports2.colors[Math.abs(hash) % exports2.colors.length];
    }
    function createDebug(namespace) {
      function debug2() {
        if (!debug2.enabled) return;
        var self2 = debug2;
        var curr = +(/* @__PURE__ */ new Date());
        var ms2 = curr - (prevTime || curr);
        self2.diff = ms2;
        self2.prev = prevTime;
        self2.curr = curr;
        prevTime = curr;
        var args = new Array(arguments.length);
        for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i];
        }
        args[0] = exports2.coerce(args[0]);
        if ('string' !== typeof args[0]) {
          args.unshift('%O');
        }
        var index = 0;
        args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format2) {
          if (match === '%%') return match;
          index++;
          var formatter = exports2.formatters[format2];
          if ('function' === typeof formatter) {
            var val = args[index];
            match = formatter.call(self2, val);
            args.splice(index, 1);
            index--;
          }
          return match;
        });
        exports2.formatArgs.call(self2, args);
        var logFn = debug2.log || exports2.log || console.log.bind(console);
        logFn.apply(self2, args);
      }
      debug2.namespace = namespace;
      debug2.enabled = exports2.enabled(namespace);
      debug2.useColors = exports2.useColors();
      debug2.color = selectColor(namespace);
      if ('function' === typeof exports2.init) {
        exports2.init(debug2);
      }
      return debug2;
    }
    function enable(namespaces) {
      exports2.save(namespaces);
      exports2.names = [];
      exports2.skips = [];
      var split = (typeof namespaces === 'string' ? namespaces : '').split(
        /[\s,]+/
      );
      var len = split.length;
      for (var i = 0; i < len; i++) {
        if (!split[i]) continue;
        namespaces = split[i].replace(/\*/g, '.*?');
        if (namespaces[0] === '-') {
          exports2.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
        } else {
          exports2.names.push(new RegExp('^' + namespaces + '$'));
        }
      }
    }
    function disable() {
      exports2.enable('');
    }
    function enabled(name) {
      var i, len;
      for (i = 0, len = exports2.skips.length; i < len; i++) {
        if (exports2.skips[i].test(name)) {
          return false;
        }
      }
      for (i = 0, len = exports2.names.length; i < len; i++) {
        if (exports2.names[i].test(name)) {
          return true;
        }
      }
      return false;
    }
    function coerce(val) {
      if (val instanceof Error) return val.stack || val.message;
      return val;
    }
  },
});

// ../../node_modules/send/node_modules/debug/src/browser.js
var require_browser4 = __commonJS({
  '../../node_modules/send/node_modules/debug/src/browser.js'(
    exports2,
    module2
  ) {
    'use strict';
    exports2 = module2.exports = require_debug4();
    exports2.log = log2;
    exports2.formatArgs = formatArgs;
    exports2.save = save;
    exports2.load = load;
    exports2.useColors = useColors;
    exports2.storage =
      'undefined' != typeof chrome && 'undefined' != typeof chrome.storage
        ? chrome.storage.local
        : localstorage();
    exports2.colors = [
      'lightseagreen',
      'forestgreen',
      'goldenrod',
      'dodgerblue',
      'darkorchid',
      'crimson',
    ];
    function useColors() {
      if (
        typeof window !== 'undefined' &&
        window.process &&
        window.process.type === 'renderer'
      ) {
        return true;
      }
      return (
        (typeof document !== 'undefined' &&
          document.documentElement &&
          document.documentElement.style &&
          document.documentElement.style.WebkitAppearance) || // is firebug? http://stackoverflow.com/a/398120/376773
        (typeof window !== 'undefined' &&
          window.console &&
          (window.console.firebug ||
            (window.console.exception && window.console.table))) || // is firefox >= v31?
        // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
        (typeof navigator !== 'undefined' &&
          navigator.userAgent &&
          navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) &&
          parseInt(RegExp.$1, 10) >= 31) || // double check webkit in userAgent just in case we are in a worker
        (typeof navigator !== 'undefined' &&
          navigator.userAgent &&
          navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/))
      );
    }
    exports2.formatters.j = function (v) {
      try {
        return JSON.stringify(v);
      } catch (err) {
        return '[UnexpectedJSONParseError]: ' + err.message;
      }
    };
    function formatArgs(args) {
      var useColors2 = this.useColors;
      args[0] =
        (useColors2 ? '%c' : '') +
        this.namespace +
        (useColors2 ? ' %c' : ' ') +
        args[0] +
        (useColors2 ? '%c ' : ' ') +
        '+' +
        exports2.humanize(this.diff);
      if (!useColors2) return;
      var c2 = 'color: ' + this.color;
      args.splice(1, 0, c2, 'color: inherit');
      var index = 0;
      var lastC = 0;
      args[0].replace(/%[a-zA-Z%]/g, function (match) {
        if ('%%' === match) return;
        index++;
        if ('%c' === match) {
          lastC = index;
        }
      });
      args.splice(lastC, 0, c2);
    }
    function log2() {
      return (
        'object' === typeof console &&
        console.log &&
        Function.prototype.apply.call(console.log, console, arguments)
      );
    }
    function save(namespaces) {
      try {
        if (null == namespaces) {
          exports2.storage.removeItem('debug');
        } else {
          exports2.storage.debug = namespaces;
        }
      } catch (e2) {}
    }
    function load() {
      var r2;
      try {
        r2 = exports2.storage.debug;
      } catch (e2) {}
      if (!r2 && typeof process !== 'undefined' && 'env' in process) {
        r2 = process.env.DEBUG;
      }
      return r2;
    }
    exports2.enable(load());
    function localstorage() {
      try {
        return window.localStorage;
      } catch (e2) {}
    }
  },
});

// ../../node_modules/send/node_modules/debug/src/node.js
var require_node4 = __commonJS({
  '../../node_modules/send/node_modules/debug/src/node.js'(exports2, module2) {
    'use strict';
    var tty = require('tty');
    var util = require('util');
    exports2 = module2.exports = require_debug4();
    exports2.init = init;
    exports2.log = log2;
    exports2.formatArgs = formatArgs;
    exports2.save = save;
    exports2.load = load;
    exports2.useColors = useColors;
    exports2.colors = [6, 2, 3, 4, 5, 1];
    exports2.inspectOpts = Object.keys(process.env)
      .filter(function (key) {
        return /^debug_/i.test(key);
      })
      .reduce(function (obj, key) {
        var prop = key
          .substring(6)
          .toLowerCase()
          .replace(/_([a-z])/g, function (_2, k2) {
            return k2.toUpperCase();
          });
        var val = process.env[key];
        if (/^(yes|on|true|enabled)$/i.test(val)) val = true;
        else if (/^(no|off|false|disabled)$/i.test(val)) val = false;
        else if (val === 'null') val = null;
        else val = Number(val);
        obj[prop] = val;
        return obj;
      }, {});
    var fd = parseInt(process.env.DEBUG_FD, 10) || 2;
    if (1 !== fd && 2 !== fd) {
      util.deprecate(function () {},
      'except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)')();
    }
    var stream =
      1 === fd
        ? process.stdout
        : 2 === fd
        ? process.stderr
        : createWritableStdioStream(fd);
    function useColors() {
      return 'colors' in exports2.inspectOpts
        ? Boolean(exports2.inspectOpts.colors)
        : tty.isatty(fd);
    }
    exports2.formatters.o = function (v) {
      this.inspectOpts.colors = this.useColors;
      return util
        .inspect(v, this.inspectOpts)
        .split('\n')
        .map(function (str) {
          return str.trim();
        })
        .join(' ');
    };
    exports2.formatters.O = function (v) {
      this.inspectOpts.colors = this.useColors;
      return util.inspect(v, this.inspectOpts);
    };
    function formatArgs(args) {
      var name = this.namespace;
      var useColors2 = this.useColors;
      if (useColors2) {
        var c2 = this.color;
        var prefix = '  \x1B[3' + c2 + ';1m' + name + ' \x1B[0m';
        args[0] = prefix + args[0].split('\n').join('\n' + prefix);
        args.push(
          '\x1B[3' + c2 + 'm+' + exports2.humanize(this.diff) + '\x1B[0m'
        );
      } else {
        args[0] =
          /* @__PURE__ */ new Date().toUTCString() + ' ' + name + ' ' + args[0];
      }
    }
    function log2() {
      return stream.write(util.format.apply(util, arguments) + '\n');
    }
    function save(namespaces) {
      if (null == namespaces) {
        delete process.env.DEBUG;
      } else {
        process.env.DEBUG = namespaces;
      }
    }
    function load() {
      return process.env.DEBUG;
    }
    function createWritableStdioStream(fd2) {
      var stream2;
      var tty_wrap = process.binding('tty_wrap');
      switch (tty_wrap.guessHandleType(fd2)) {
        case 'TTY':
          stream2 = new tty.WriteStream(fd2);
          stream2._type = 'tty';
          if (stream2._handle && stream2._handle.unref) {
            stream2._handle.unref();
          }
          break;
        case 'FILE':
          var fs2 = require('fs');
          stream2 = new fs2.SyncWriteStream(fd2, { autoClose: false });
          stream2._type = 'fs';
          break;
        case 'PIPE':
        case 'TCP':
          var net = require('net');
          stream2 = new net.Socket({
            fd: fd2,
            readable: false,
            writable: true,
          });
          stream2.readable = false;
          stream2.read = null;
          stream2._type = 'pipe';
          if (stream2._handle && stream2._handle.unref) {
            stream2._handle.unref();
          }
          break;
        default:
          throw new Error('Implement me. Unknown stream file type!');
      }
      stream2.fd = fd2;
      stream2._isStdio = true;
      return stream2;
    }
    function init(debug2) {
      debug2.inspectOpts = {};
      var keys = Object.keys(exports2.inspectOpts);
      for (var i = 0; i < keys.length; i++) {
        debug2.inspectOpts[keys[i]] = exports2.inspectOpts[keys[i]];
      }
    }
    exports2.enable(load());
  },
});

// ../../node_modules/send/node_modules/debug/src/index.js
var require_src5 = __commonJS({
  '../../node_modules/send/node_modules/debug/src/index.js'(exports2, module2) {
    'use strict';
    if (typeof process !== 'undefined' && process.type === 'renderer') {
      module2.exports = require_browser4();
    } else {
      module2.exports = require_node4();
    }
  },
});

// ../../node_modules/etag/index.js
var require_etag = __commonJS({
  '../../node_modules/etag/index.js'(exports2, module2) {
    'use strict';
    module2.exports = etag;
    var crypto2 = require('crypto');
    var Stats = require('fs').Stats;
    var toString = Object.prototype.toString;
    function entitytag(entity) {
      if (entity.length === 0) {
        return '"0-2jmj7l5rSw0yVb/vlWAYkK/YBwk"';
      }
      var hash = crypto2
        .createHash('sha1')
        .update(entity, 'utf8')
        .digest('base64')
        .substring(0, 27);
      var len =
        typeof entity === 'string'
          ? Buffer.byteLength(entity, 'utf8')
          : entity.length;
      return '"' + len.toString(16) + '-' + hash + '"';
    }
    function etag(entity, options) {
      if (entity == null) {
        throw new TypeError('argument entity is required');
      }
      var isStats = isstats(entity);
      var weak =
        options && typeof options.weak === 'boolean' ? options.weak : isStats;
      if (!isStats && typeof entity !== 'string' && !Buffer.isBuffer(entity)) {
        throw new TypeError(
          'argument entity must be string, Buffer, or fs.Stats'
        );
      }
      var tag = isStats ? stattag(entity) : entitytag(entity);
      return weak ? 'W/' + tag : tag;
    }
    function isstats(obj) {
      if (typeof Stats === 'function' && obj instanceof Stats) {
        return true;
      }
      return (
        obj &&
        typeof obj === 'object' &&
        'ctime' in obj &&
        toString.call(obj.ctime) === '[object Date]' &&
        'mtime' in obj &&
        toString.call(obj.mtime) === '[object Date]' &&
        'ino' in obj &&
        typeof obj.ino === 'number' &&
        'size' in obj &&
        typeof obj.size === 'number'
      );
    }
    function stattag(stat) {
      var mtime = stat.mtime.getTime().toString(16);
      var size = stat.size.toString(16);
      return '"' + size + '-' + mtime + '"';
    }
  },
});

// ../../node_modules/fresh/index.js
var require_fresh = __commonJS({
  '../../node_modules/fresh/index.js'(exports2, module2) {
    'use strict';
    var CACHE_CONTROL_NO_CACHE_REGEXP = /(?:^|,)\s*?no-cache\s*?(?:,|$)/;
    module2.exports = fresh;
    function fresh(reqHeaders, resHeaders) {
      var modifiedSince = reqHeaders['if-modified-since'];
      var noneMatch = reqHeaders['if-none-match'];
      if (!modifiedSince && !noneMatch) {
        return false;
      }
      var cacheControl = reqHeaders['cache-control'];
      if (cacheControl && CACHE_CONTROL_NO_CACHE_REGEXP.test(cacheControl)) {
        return false;
      }
      if (noneMatch && noneMatch !== '*') {
        var etag = resHeaders['etag'];
        if (!etag) {
          return false;
        }
        var etagStale = true;
        var matches = parseTokenList(noneMatch);
        for (var i = 0; i < matches.length; i++) {
          var match = matches[i];
          if (
            match === etag ||
            match === 'W/' + etag ||
            'W/' + match === etag
          ) {
            etagStale = false;
            break;
          }
        }
        if (etagStale) {
          return false;
        }
      }
      if (modifiedSince) {
        var lastModified = resHeaders['last-modified'];
        var modifiedStale =
          !lastModified ||
          !(parseHttpDate(lastModified) <= parseHttpDate(modifiedSince));
        if (modifiedStale) {
          return false;
        }
      }
      return true;
    }
    function parseHttpDate(date) {
      var timestamp = date && Date.parse(date);
      return typeof timestamp === 'number' ? timestamp : NaN;
    }
    function parseTokenList(str) {
      var end = 0;
      var list = [];
      var start = 0;
      for (var i = 0, len = str.length; i < len; i++) {
        switch (str.charCodeAt(i)) {
          case 32:
            if (start === end) {
              start = end = i + 1;
            }
            break;
          case 44:
            list.push(str.substring(start, end));
            start = end = i + 1;
            break;
          default:
            end = i + 1;
            break;
        }
      }
      list.push(str.substring(start, end));
      return list;
    }
  },
});

// ../../node_modules/mime/types.json
var require_types = __commonJS({
  '../../node_modules/mime/types.json'(exports2, module2) {
    module2.exports = {
      'application/andrew-inset': ['ez'],
      'application/applixware': ['aw'],
      'application/atom+xml': ['atom'],
      'application/atomcat+xml': ['atomcat'],
      'application/atomsvc+xml': ['atomsvc'],
      'application/bdoc': ['bdoc'],
      'application/ccxml+xml': ['ccxml'],
      'application/cdmi-capability': ['cdmia'],
      'application/cdmi-container': ['cdmic'],
      'application/cdmi-domain': ['cdmid'],
      'application/cdmi-object': ['cdmio'],
      'application/cdmi-queue': ['cdmiq'],
      'application/cu-seeme': ['cu'],
      'application/dash+xml': ['mpd'],
      'application/davmount+xml': ['davmount'],
      'application/docbook+xml': ['dbk'],
      'application/dssc+der': ['dssc'],
      'application/dssc+xml': ['xdssc'],
      'application/ecmascript': ['ecma'],
      'application/emma+xml': ['emma'],
      'application/epub+zip': ['epub'],
      'application/exi': ['exi'],
      'application/font-tdpfr': ['pfr'],
      'application/font-woff': [],
      'application/font-woff2': [],
      'application/geo+json': ['geojson'],
      'application/gml+xml': ['gml'],
      'application/gpx+xml': ['gpx'],
      'application/gxf': ['gxf'],
      'application/gzip': ['gz'],
      'application/hyperstudio': ['stk'],
      'application/inkml+xml': ['ink', 'inkml'],
      'application/ipfix': ['ipfix'],
      'application/java-archive': ['jar', 'war', 'ear'],
      'application/java-serialized-object': ['ser'],
      'application/java-vm': ['class'],
      'application/javascript': ['js', 'mjs'],
      'application/json': ['json', 'map'],
      'application/json5': ['json5'],
      'application/jsonml+json': ['jsonml'],
      'application/ld+json': ['jsonld'],
      'application/lost+xml': ['lostxml'],
      'application/mac-binhex40': ['hqx'],
      'application/mac-compactpro': ['cpt'],
      'application/mads+xml': ['mads'],
      'application/manifest+json': ['webmanifest'],
      'application/marc': ['mrc'],
      'application/marcxml+xml': ['mrcx'],
      'application/mathematica': ['ma', 'nb', 'mb'],
      'application/mathml+xml': ['mathml'],
      'application/mbox': ['mbox'],
      'application/mediaservercontrol+xml': ['mscml'],
      'application/metalink+xml': ['metalink'],
      'application/metalink4+xml': ['meta4'],
      'application/mets+xml': ['mets'],
      'application/mods+xml': ['mods'],
      'application/mp21': ['m21', 'mp21'],
      'application/mp4': ['mp4s', 'm4p'],
      'application/msword': ['doc', 'dot'],
      'application/mxf': ['mxf'],
      'application/octet-stream': [
        'bin',
        'dms',
        'lrf',
        'mar',
        'so',
        'dist',
        'distz',
        'pkg',
        'bpk',
        'dump',
        'elc',
        'deploy',
        'exe',
        'dll',
        'deb',
        'dmg',
        'iso',
        'img',
        'msi',
        'msp',
        'msm',
        'buffer',
      ],
      'application/oda': ['oda'],
      'application/oebps-package+xml': ['opf'],
      'application/ogg': ['ogx'],
      'application/omdoc+xml': ['omdoc'],
      'application/onenote': ['onetoc', 'onetoc2', 'onetmp', 'onepkg'],
      'application/oxps': ['oxps'],
      'application/patch-ops-error+xml': ['xer'],
      'application/pdf': ['pdf'],
      'application/pgp-encrypted': ['pgp'],
      'application/pgp-signature': ['asc', 'sig'],
      'application/pics-rules': ['prf'],
      'application/pkcs10': ['p10'],
      'application/pkcs7-mime': ['p7m', 'p7c'],
      'application/pkcs7-signature': ['p7s'],
      'application/pkcs8': ['p8'],
      'application/pkix-attr-cert': ['ac'],
      'application/pkix-cert': ['cer'],
      'application/pkix-crl': ['crl'],
      'application/pkix-pkipath': ['pkipath'],
      'application/pkixcmp': ['pki'],
      'application/pls+xml': ['pls'],
      'application/postscript': ['ai', 'eps', 'ps'],
      'application/prs.cww': ['cww'],
      'application/pskc+xml': ['pskcxml'],
      'application/raml+yaml': ['raml'],
      'application/rdf+xml': ['rdf'],
      'application/reginfo+xml': ['rif'],
      'application/relax-ng-compact-syntax': ['rnc'],
      'application/resource-lists+xml': ['rl'],
      'application/resource-lists-diff+xml': ['rld'],
      'application/rls-services+xml': ['rs'],
      'application/rpki-ghostbusters': ['gbr'],
      'application/rpki-manifest': ['mft'],
      'application/rpki-roa': ['roa'],
      'application/rsd+xml': ['rsd'],
      'application/rss+xml': ['rss'],
      'application/rtf': ['rtf'],
      'application/sbml+xml': ['sbml'],
      'application/scvp-cv-request': ['scq'],
      'application/scvp-cv-response': ['scs'],
      'application/scvp-vp-request': ['spq'],
      'application/scvp-vp-response': ['spp'],
      'application/sdp': ['sdp'],
      'application/set-payment-initiation': ['setpay'],
      'application/set-registration-initiation': ['setreg'],
      'application/shf+xml': ['shf'],
      'application/smil+xml': ['smi', 'smil'],
      'application/sparql-query': ['rq'],
      'application/sparql-results+xml': ['srx'],
      'application/srgs': ['gram'],
      'application/srgs+xml': ['grxml'],
      'application/sru+xml': ['sru'],
      'application/ssdl+xml': ['ssdl'],
      'application/ssml+xml': ['ssml'],
      'application/tei+xml': ['tei', 'teicorpus'],
      'application/thraud+xml': ['tfi'],
      'application/timestamped-data': ['tsd'],
      'application/vnd.3gpp.pic-bw-large': ['plb'],
      'application/vnd.3gpp.pic-bw-small': ['psb'],
      'application/vnd.3gpp.pic-bw-var': ['pvb'],
      'application/vnd.3gpp2.tcap': ['tcap'],
      'application/vnd.3m.post-it-notes': ['pwn'],
      'application/vnd.accpac.simply.aso': ['aso'],
      'application/vnd.accpac.simply.imp': ['imp'],
      'application/vnd.acucobol': ['acu'],
      'application/vnd.acucorp': ['atc', 'acutc'],
      'application/vnd.adobe.air-application-installer-package+zip': ['air'],
      'application/vnd.adobe.formscentral.fcdt': ['fcdt'],
      'application/vnd.adobe.fxp': ['fxp', 'fxpl'],
      'application/vnd.adobe.xdp+xml': ['xdp'],
      'application/vnd.adobe.xfdf': ['xfdf'],
      'application/vnd.ahead.space': ['ahead'],
      'application/vnd.airzip.filesecure.azf': ['azf'],
      'application/vnd.airzip.filesecure.azs': ['azs'],
      'application/vnd.amazon.ebook': ['azw'],
      'application/vnd.americandynamics.acc': ['acc'],
      'application/vnd.amiga.ami': ['ami'],
      'application/vnd.android.package-archive': ['apk'],
      'application/vnd.anser-web-certificate-issue-initiation': ['cii'],
      'application/vnd.anser-web-funds-transfer-initiation': ['fti'],
      'application/vnd.antix.game-component': ['atx'],
      'application/vnd.apple.installer+xml': ['mpkg'],
      'application/vnd.apple.mpegurl': ['m3u8'],
      'application/vnd.apple.pkpass': ['pkpass'],
      'application/vnd.aristanetworks.swi': ['swi'],
      'application/vnd.astraea-software.iota': ['iota'],
      'application/vnd.audiograph': ['aep'],
      'application/vnd.blueice.multipass': ['mpm'],
      'application/vnd.bmi': ['bmi'],
      'application/vnd.businessobjects': ['rep'],
      'application/vnd.chemdraw+xml': ['cdxml'],
      'application/vnd.chipnuts.karaoke-mmd': ['mmd'],
      'application/vnd.cinderella': ['cdy'],
      'application/vnd.claymore': ['cla'],
      'application/vnd.cloanto.rp9': ['rp9'],
      'application/vnd.clonk.c4group': ['c4g', 'c4d', 'c4f', 'c4p', 'c4u'],
      'application/vnd.cluetrust.cartomobile-config': ['c11amc'],
      'application/vnd.cluetrust.cartomobile-config-pkg': ['c11amz'],
      'application/vnd.commonspace': ['csp'],
      'application/vnd.contact.cmsg': ['cdbcmsg'],
      'application/vnd.cosmocaller': ['cmc'],
      'application/vnd.crick.clicker': ['clkx'],
      'application/vnd.crick.clicker.keyboard': ['clkk'],
      'application/vnd.crick.clicker.palette': ['clkp'],
      'application/vnd.crick.clicker.template': ['clkt'],
      'application/vnd.crick.clicker.wordbank': ['clkw'],
      'application/vnd.criticaltools.wbs+xml': ['wbs'],
      'application/vnd.ctc-posml': ['pml'],
      'application/vnd.cups-ppd': ['ppd'],
      'application/vnd.curl.car': ['car'],
      'application/vnd.curl.pcurl': ['pcurl'],
      'application/vnd.dart': ['dart'],
      'application/vnd.data-vision.rdz': ['rdz'],
      'application/vnd.dece.data': ['uvf', 'uvvf', 'uvd', 'uvvd'],
      'application/vnd.dece.ttml+xml': ['uvt', 'uvvt'],
      'application/vnd.dece.unspecified': ['uvx', 'uvvx'],
      'application/vnd.dece.zip': ['uvz', 'uvvz'],
      'application/vnd.denovo.fcselayout-link': ['fe_launch'],
      'application/vnd.dna': ['dna'],
      'application/vnd.dolby.mlp': ['mlp'],
      'application/vnd.dpgraph': ['dpg'],
      'application/vnd.dreamfactory': ['dfac'],
      'application/vnd.ds-keypoint': ['kpxx'],
      'application/vnd.dvb.ait': ['ait'],
      'application/vnd.dvb.service': ['svc'],
      'application/vnd.dynageo': ['geo'],
      'application/vnd.ecowin.chart': ['mag'],
      'application/vnd.enliven': ['nml'],
      'application/vnd.epson.esf': ['esf'],
      'application/vnd.epson.msf': ['msf'],
      'application/vnd.epson.quickanime': ['qam'],
      'application/vnd.epson.salt': ['slt'],
      'application/vnd.epson.ssf': ['ssf'],
      'application/vnd.eszigno3+xml': ['es3', 'et3'],
      'application/vnd.ezpix-album': ['ez2'],
      'application/vnd.ezpix-package': ['ez3'],
      'application/vnd.fdf': ['fdf'],
      'application/vnd.fdsn.mseed': ['mseed'],
      'application/vnd.fdsn.seed': ['seed', 'dataless'],
      'application/vnd.flographit': ['gph'],
      'application/vnd.fluxtime.clip': ['ftc'],
      'application/vnd.framemaker': ['fm', 'frame', 'maker', 'book'],
      'application/vnd.frogans.fnc': ['fnc'],
      'application/vnd.frogans.ltf': ['ltf'],
      'application/vnd.fsc.weblaunch': ['fsc'],
      'application/vnd.fujitsu.oasys': ['oas'],
      'application/vnd.fujitsu.oasys2': ['oa2'],
      'application/vnd.fujitsu.oasys3': ['oa3'],
      'application/vnd.fujitsu.oasysgp': ['fg5'],
      'application/vnd.fujitsu.oasysprs': ['bh2'],
      'application/vnd.fujixerox.ddd': ['ddd'],
      'application/vnd.fujixerox.docuworks': ['xdw'],
      'application/vnd.fujixerox.docuworks.binder': ['xbd'],
      'application/vnd.fuzzysheet': ['fzs'],
      'application/vnd.genomatix.tuxedo': ['txd'],
      'application/vnd.geogebra.file': ['ggb'],
      'application/vnd.geogebra.tool': ['ggt'],
      'application/vnd.geometry-explorer': ['gex', 'gre'],
      'application/vnd.geonext': ['gxt'],
      'application/vnd.geoplan': ['g2w'],
      'application/vnd.geospace': ['g3w'],
      'application/vnd.gmx': ['gmx'],
      'application/vnd.google-apps.document': ['gdoc'],
      'application/vnd.google-apps.presentation': ['gslides'],
      'application/vnd.google-apps.spreadsheet': ['gsheet'],
      'application/vnd.google-earth.kml+xml': ['kml'],
      'application/vnd.google-earth.kmz': ['kmz'],
      'application/vnd.grafeq': ['gqf', 'gqs'],
      'application/vnd.groove-account': ['gac'],
      'application/vnd.groove-help': ['ghf'],
      'application/vnd.groove-identity-message': ['gim'],
      'application/vnd.groove-injector': ['grv'],
      'application/vnd.groove-tool-message': ['gtm'],
      'application/vnd.groove-tool-template': ['tpl'],
      'application/vnd.groove-vcard': ['vcg'],
      'application/vnd.hal+xml': ['hal'],
      'application/vnd.handheld-entertainment+xml': ['zmm'],
      'application/vnd.hbci': ['hbci'],
      'application/vnd.hhe.lesson-player': ['les'],
      'application/vnd.hp-hpgl': ['hpgl'],
      'application/vnd.hp-hpid': ['hpid'],
      'application/vnd.hp-hps': ['hps'],
      'application/vnd.hp-jlyt': ['jlt'],
      'application/vnd.hp-pcl': ['pcl'],
      'application/vnd.hp-pclxl': ['pclxl'],
      'application/vnd.hydrostatix.sof-data': ['sfd-hdstx'],
      'application/vnd.ibm.minipay': ['mpy'],
      'application/vnd.ibm.modcap': ['afp', 'listafp', 'list3820'],
      'application/vnd.ibm.rights-management': ['irm'],
      'application/vnd.ibm.secure-container': ['sc'],
      'application/vnd.iccprofile': ['icc', 'icm'],
      'application/vnd.igloader': ['igl'],
      'application/vnd.immervision-ivp': ['ivp'],
      'application/vnd.immervision-ivu': ['ivu'],
      'application/vnd.insors.igm': ['igm'],
      'application/vnd.intercon.formnet': ['xpw', 'xpx'],
      'application/vnd.intergeo': ['i2g'],
      'application/vnd.intu.qbo': ['qbo'],
      'application/vnd.intu.qfx': ['qfx'],
      'application/vnd.ipunplugged.rcprofile': ['rcprofile'],
      'application/vnd.irepository.package+xml': ['irp'],
      'application/vnd.is-xpr': ['xpr'],
      'application/vnd.isac.fcs': ['fcs'],
      'application/vnd.jam': ['jam'],
      'application/vnd.jcp.javame.midlet-rms': ['rms'],
      'application/vnd.jisp': ['jisp'],
      'application/vnd.joost.joda-archive': ['joda'],
      'application/vnd.kahootz': ['ktz', 'ktr'],
      'application/vnd.kde.karbon': ['karbon'],
      'application/vnd.kde.kchart': ['chrt'],
      'application/vnd.kde.kformula': ['kfo'],
      'application/vnd.kde.kivio': ['flw'],
      'application/vnd.kde.kontour': ['kon'],
      'application/vnd.kde.kpresenter': ['kpr', 'kpt'],
      'application/vnd.kde.kspread': ['ksp'],
      'application/vnd.kde.kword': ['kwd', 'kwt'],
      'application/vnd.kenameaapp': ['htke'],
      'application/vnd.kidspiration': ['kia'],
      'application/vnd.kinar': ['kne', 'knp'],
      'application/vnd.koan': ['skp', 'skd', 'skt', 'skm'],
      'application/vnd.kodak-descriptor': ['sse'],
      'application/vnd.las.las+xml': ['lasxml'],
      'application/vnd.llamagraphics.life-balance.desktop': ['lbd'],
      'application/vnd.llamagraphics.life-balance.exchange+xml': ['lbe'],
      'application/vnd.lotus-1-2-3': ['123'],
      'application/vnd.lotus-approach': ['apr'],
      'application/vnd.lotus-freelance': ['pre'],
      'application/vnd.lotus-notes': ['nsf'],
      'application/vnd.lotus-organizer': ['org'],
      'application/vnd.lotus-screencam': ['scm'],
      'application/vnd.lotus-wordpro': ['lwp'],
      'application/vnd.macports.portpkg': ['portpkg'],
      'application/vnd.mcd': ['mcd'],
      'application/vnd.medcalcdata': ['mc1'],
      'application/vnd.mediastation.cdkey': ['cdkey'],
      'application/vnd.mfer': ['mwf'],
      'application/vnd.mfmp': ['mfm'],
      'application/vnd.micrografx.flo': ['flo'],
      'application/vnd.micrografx.igx': ['igx'],
      'application/vnd.mif': ['mif'],
      'application/vnd.mobius.daf': ['daf'],
      'application/vnd.mobius.dis': ['dis'],
      'application/vnd.mobius.mbk': ['mbk'],
      'application/vnd.mobius.mqy': ['mqy'],
      'application/vnd.mobius.msl': ['msl'],
      'application/vnd.mobius.plc': ['plc'],
      'application/vnd.mobius.txf': ['txf'],
      'application/vnd.mophun.application': ['mpn'],
      'application/vnd.mophun.certificate': ['mpc'],
      'application/vnd.mozilla.xul+xml': ['xul'],
      'application/vnd.ms-artgalry': ['cil'],
      'application/vnd.ms-cab-compressed': ['cab'],
      'application/vnd.ms-excel': ['xls', 'xlm', 'xla', 'xlc', 'xlt', 'xlw'],
      'application/vnd.ms-excel.addin.macroenabled.12': ['xlam'],
      'application/vnd.ms-excel.sheet.binary.macroenabled.12': ['xlsb'],
      'application/vnd.ms-excel.sheet.macroenabled.12': ['xlsm'],
      'application/vnd.ms-excel.template.macroenabled.12': ['xltm'],
      'application/vnd.ms-fontobject': ['eot'],
      'application/vnd.ms-htmlhelp': ['chm'],
      'application/vnd.ms-ims': ['ims'],
      'application/vnd.ms-lrm': ['lrm'],
      'application/vnd.ms-officetheme': ['thmx'],
      'application/vnd.ms-outlook': ['msg'],
      'application/vnd.ms-pki.seccat': ['cat'],
      'application/vnd.ms-pki.stl': ['stl'],
      'application/vnd.ms-powerpoint': ['ppt', 'pps', 'pot'],
      'application/vnd.ms-powerpoint.addin.macroenabled.12': ['ppam'],
      'application/vnd.ms-powerpoint.presentation.macroenabled.12': ['pptm'],
      'application/vnd.ms-powerpoint.slide.macroenabled.12': ['sldm'],
      'application/vnd.ms-powerpoint.slideshow.macroenabled.12': ['ppsm'],
      'application/vnd.ms-powerpoint.template.macroenabled.12': ['potm'],
      'application/vnd.ms-project': ['mpp', 'mpt'],
      'application/vnd.ms-word.document.macroenabled.12': ['docm'],
      'application/vnd.ms-word.template.macroenabled.12': ['dotm'],
      'application/vnd.ms-works': ['wps', 'wks', 'wcm', 'wdb'],
      'application/vnd.ms-wpl': ['wpl'],
      'application/vnd.ms-xpsdocument': ['xps'],
      'application/vnd.mseq': ['mseq'],
      'application/vnd.musician': ['mus'],
      'application/vnd.muvee.style': ['msty'],
      'application/vnd.mynfc': ['taglet'],
      'application/vnd.neurolanguage.nlu': ['nlu'],
      'application/vnd.nitf': ['ntf', 'nitf'],
      'application/vnd.noblenet-directory': ['nnd'],
      'application/vnd.noblenet-sealer': ['nns'],
      'application/vnd.noblenet-web': ['nnw'],
      'application/vnd.nokia.n-gage.data': ['ngdat'],
      'application/vnd.nokia.n-gage.symbian.install': ['n-gage'],
      'application/vnd.nokia.radio-preset': ['rpst'],
      'application/vnd.nokia.radio-presets': ['rpss'],
      'application/vnd.novadigm.edm': ['edm'],
      'application/vnd.novadigm.edx': ['edx'],
      'application/vnd.novadigm.ext': ['ext'],
      'application/vnd.oasis.opendocument.chart': ['odc'],
      'application/vnd.oasis.opendocument.chart-template': ['otc'],
      'application/vnd.oasis.opendocument.database': ['odb'],
      'application/vnd.oasis.opendocument.formula': ['odf'],
      'application/vnd.oasis.opendocument.formula-template': ['odft'],
      'application/vnd.oasis.opendocument.graphics': ['odg'],
      'application/vnd.oasis.opendocument.graphics-template': ['otg'],
      'application/vnd.oasis.opendocument.image': ['odi'],
      'application/vnd.oasis.opendocument.image-template': ['oti'],
      'application/vnd.oasis.opendocument.presentation': ['odp'],
      'application/vnd.oasis.opendocument.presentation-template': ['otp'],
      'application/vnd.oasis.opendocument.spreadsheet': ['ods'],
      'application/vnd.oasis.opendocument.spreadsheet-template': ['ots'],
      'application/vnd.oasis.opendocument.text': ['odt'],
      'application/vnd.oasis.opendocument.text-master': ['odm'],
      'application/vnd.oasis.opendocument.text-template': ['ott'],
      'application/vnd.oasis.opendocument.text-web': ['oth'],
      'application/vnd.olpc-sugar': ['xo'],
      'application/vnd.oma.dd2+xml': ['dd2'],
      'application/vnd.openofficeorg.extension': ['oxt'],
      'application/vnd.openxmlformats-officedocument.presentationml.presentation':
        ['pptx'],
      'application/vnd.openxmlformats-officedocument.presentationml.slide': [
        'sldx',
      ],
      'application/vnd.openxmlformats-officedocument.presentationml.slideshow':
        ['ppsx'],
      'application/vnd.openxmlformats-officedocument.presentationml.template': [
        'potx',
      ],
      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': [
        'xlsx',
      ],
      'application/vnd.openxmlformats-officedocument.spreadsheetml.template': [
        'xltx',
      ],
      'application/vnd.openxmlformats-officedocument.wordprocessingml.document':
        ['docx'],
      'application/vnd.openxmlformats-officedocument.wordprocessingml.template':
        ['dotx'],
      'application/vnd.osgeo.mapguide.package': ['mgp'],
      'application/vnd.osgi.dp': ['dp'],
      'application/vnd.osgi.subsystem': ['esa'],
      'application/vnd.palm': ['pdb', 'pqa', 'oprc'],
      'application/vnd.pawaafile': ['paw'],
      'application/vnd.pg.format': ['str'],
      'application/vnd.pg.osasli': ['ei6'],
      'application/vnd.picsel': ['efif'],
      'application/vnd.pmi.widget': ['wg'],
      'application/vnd.pocketlearn': ['plf'],
      'application/vnd.powerbuilder6': ['pbd'],
      'application/vnd.previewsystems.box': ['box'],
      'application/vnd.proteus.magazine': ['mgz'],
      'application/vnd.publishare-delta-tree': ['qps'],
      'application/vnd.pvi.ptid1': ['ptid'],
      'application/vnd.quark.quarkxpress': [
        'qxd',
        'qxt',
        'qwd',
        'qwt',
        'qxl',
        'qxb',
      ],
      'application/vnd.realvnc.bed': ['bed'],
      'application/vnd.recordare.musicxml': ['mxl'],
      'application/vnd.recordare.musicxml+xml': ['musicxml'],
      'application/vnd.rig.cryptonote': ['cryptonote'],
      'application/vnd.rim.cod': ['cod'],
      'application/vnd.rn-realmedia': ['rm'],
      'application/vnd.rn-realmedia-vbr': ['rmvb'],
      'application/vnd.route66.link66+xml': ['link66'],
      'application/vnd.sailingtracker.track': ['st'],
      'application/vnd.seemail': ['see'],
      'application/vnd.sema': ['sema'],
      'application/vnd.semd': ['semd'],
      'application/vnd.semf': ['semf'],
      'application/vnd.shana.informed.formdata': ['ifm'],
      'application/vnd.shana.informed.formtemplate': ['itp'],
      'application/vnd.shana.informed.interchange': ['iif'],
      'application/vnd.shana.informed.package': ['ipk'],
      'application/vnd.simtech-mindmapper': ['twd', 'twds'],
      'application/vnd.smaf': ['mmf'],
      'application/vnd.smart.teacher': ['teacher'],
      'application/vnd.solent.sdkm+xml': ['sdkm', 'sdkd'],
      'application/vnd.spotfire.dxp': ['dxp'],
      'application/vnd.spotfire.sfs': ['sfs'],
      'application/vnd.stardivision.calc': ['sdc'],
      'application/vnd.stardivision.draw': ['sda'],
      'application/vnd.stardivision.impress': ['sdd'],
      'application/vnd.stardivision.math': ['smf'],
      'application/vnd.stardivision.writer': ['sdw', 'vor'],
      'application/vnd.stardivision.writer-global': ['sgl'],
      'application/vnd.stepmania.package': ['smzip'],
      'application/vnd.stepmania.stepchart': ['sm'],
      'application/vnd.sun.wadl+xml': ['wadl'],
      'application/vnd.sun.xml.calc': ['sxc'],
      'application/vnd.sun.xml.calc.template': ['stc'],
      'application/vnd.sun.xml.draw': ['sxd'],
      'application/vnd.sun.xml.draw.template': ['std'],
      'application/vnd.sun.xml.impress': ['sxi'],
      'application/vnd.sun.xml.impress.template': ['sti'],
      'application/vnd.sun.xml.math': ['sxm'],
      'application/vnd.sun.xml.writer': ['sxw'],
      'application/vnd.sun.xml.writer.global': ['sxg'],
      'application/vnd.sun.xml.writer.template': ['stw'],
      'application/vnd.sus-calendar': ['sus', 'susp'],
      'application/vnd.svd': ['svd'],
      'application/vnd.symbian.install': ['sis', 'sisx'],
      'application/vnd.syncml+xml': ['xsm'],
      'application/vnd.syncml.dm+wbxml': ['bdm'],
      'application/vnd.syncml.dm+xml': ['xdm'],
      'application/vnd.tao.intent-module-archive': ['tao'],
      'application/vnd.tcpdump.pcap': ['pcap', 'cap', 'dmp'],
      'application/vnd.tmobile-livetv': ['tmo'],
      'application/vnd.trid.tpt': ['tpt'],
      'application/vnd.triscape.mxs': ['mxs'],
      'application/vnd.trueapp': ['tra'],
      'application/vnd.ufdl': ['ufd', 'ufdl'],
      'application/vnd.uiq.theme': ['utz'],
      'application/vnd.umajin': ['umj'],
      'application/vnd.unity': ['unityweb'],
      'application/vnd.uoml+xml': ['uoml'],
      'application/vnd.vcx': ['vcx'],
      'application/vnd.visio': ['vsd', 'vst', 'vss', 'vsw'],
      'application/vnd.visionary': ['vis'],
      'application/vnd.vsf': ['vsf'],
      'application/vnd.wap.wbxml': ['wbxml'],
      'application/vnd.wap.wmlc': ['wmlc'],
      'application/vnd.wap.wmlscriptc': ['wmlsc'],
      'application/vnd.webturbo': ['wtb'],
      'application/vnd.wolfram.player': ['nbp'],
      'application/vnd.wordperfect': ['wpd'],
      'application/vnd.wqd': ['wqd'],
      'application/vnd.wt.stf': ['stf'],
      'application/vnd.xara': ['xar'],
      'application/vnd.xfdl': ['xfdl'],
      'application/vnd.yamaha.hv-dic': ['hvd'],
      'application/vnd.yamaha.hv-script': ['hvs'],
      'application/vnd.yamaha.hv-voice': ['hvp'],
      'application/vnd.yamaha.openscoreformat': ['osf'],
      'application/vnd.yamaha.openscoreformat.osfpvg+xml': ['osfpvg'],
      'application/vnd.yamaha.smaf-audio': ['saf'],
      'application/vnd.yamaha.smaf-phrase': ['spf'],
      'application/vnd.yellowriver-custom-menu': ['cmp'],
      'application/vnd.zul': ['zir', 'zirz'],
      'application/vnd.zzazz.deck+xml': ['zaz'],
      'application/voicexml+xml': ['vxml'],
      'application/wasm': ['wasm'],
      'application/widget': ['wgt'],
      'application/winhlp': ['hlp'],
      'application/wsdl+xml': ['wsdl'],
      'application/wspolicy+xml': ['wspolicy'],
      'application/x-7z-compressed': ['7z'],
      'application/x-abiword': ['abw'],
      'application/x-ace-compressed': ['ace'],
      'application/x-apple-diskimage': [],
      'application/x-arj': ['arj'],
      'application/x-authorware-bin': ['aab', 'x32', 'u32', 'vox'],
      'application/x-authorware-map': ['aam'],
      'application/x-authorware-seg': ['aas'],
      'application/x-bcpio': ['bcpio'],
      'application/x-bdoc': [],
      'application/x-bittorrent': ['torrent'],
      'application/x-blorb': ['blb', 'blorb'],
      'application/x-bzip': ['bz'],
      'application/x-bzip2': ['bz2', 'boz'],
      'application/x-cbr': ['cbr', 'cba', 'cbt', 'cbz', 'cb7'],
      'application/x-cdlink': ['vcd'],
      'application/x-cfs-compressed': ['cfs'],
      'application/x-chat': ['chat'],
      'application/x-chess-pgn': ['pgn'],
      'application/x-chrome-extension': ['crx'],
      'application/x-cocoa': ['cco'],
      'application/x-conference': ['nsc'],
      'application/x-cpio': ['cpio'],
      'application/x-csh': ['csh'],
      'application/x-debian-package': ['udeb'],
      'application/x-dgc-compressed': ['dgc'],
      'application/x-director': [
        'dir',
        'dcr',
        'dxr',
        'cst',
        'cct',
        'cxt',
        'w3d',
        'fgd',
        'swa',
      ],
      'application/x-doom': ['wad'],
      'application/x-dtbncx+xml': ['ncx'],
      'application/x-dtbook+xml': ['dtb'],
      'application/x-dtbresource+xml': ['res'],
      'application/x-dvi': ['dvi'],
      'application/x-envoy': ['evy'],
      'application/x-eva': ['eva'],
      'application/x-font-bdf': ['bdf'],
      'application/x-font-ghostscript': ['gsf'],
      'application/x-font-linux-psf': ['psf'],
      'application/x-font-pcf': ['pcf'],
      'application/x-font-snf': ['snf'],
      'application/x-font-type1': ['pfa', 'pfb', 'pfm', 'afm'],
      'application/x-freearc': ['arc'],
      'application/x-futuresplash': ['spl'],
      'application/x-gca-compressed': ['gca'],
      'application/x-glulx': ['ulx'],
      'application/x-gnumeric': ['gnumeric'],
      'application/x-gramps-xml': ['gramps'],
      'application/x-gtar': ['gtar'],
      'application/x-hdf': ['hdf'],
      'application/x-httpd-php': ['php'],
      'application/x-install-instructions': ['install'],
      'application/x-iso9660-image': [],
      'application/x-java-archive-diff': ['jardiff'],
      'application/x-java-jnlp-file': ['jnlp'],
      'application/x-latex': ['latex'],
      'application/x-lua-bytecode': ['luac'],
      'application/x-lzh-compressed': ['lzh', 'lha'],
      'application/x-makeself': ['run'],
      'application/x-mie': ['mie'],
      'application/x-mobipocket-ebook': ['prc', 'mobi'],
      'application/x-ms-application': ['application'],
      'application/x-ms-shortcut': ['lnk'],
      'application/x-ms-wmd': ['wmd'],
      'application/x-ms-wmz': ['wmz'],
      'application/x-ms-xbap': ['xbap'],
      'application/x-msaccess': ['mdb'],
      'application/x-msbinder': ['obd'],
      'application/x-mscardfile': ['crd'],
      'application/x-msclip': ['clp'],
      'application/x-msdos-program': [],
      'application/x-msdownload': ['com', 'bat'],
      'application/x-msmediaview': ['mvb', 'm13', 'm14'],
      'application/x-msmetafile': ['wmf', 'emf', 'emz'],
      'application/x-msmoney': ['mny'],
      'application/x-mspublisher': ['pub'],
      'application/x-msschedule': ['scd'],
      'application/x-msterminal': ['trm'],
      'application/x-mswrite': ['wri'],
      'application/x-netcdf': ['nc', 'cdf'],
      'application/x-ns-proxy-autoconfig': ['pac'],
      'application/x-nzb': ['nzb'],
      'application/x-perl': ['pl', 'pm'],
      'application/x-pilot': [],
      'application/x-pkcs12': ['p12', 'pfx'],
      'application/x-pkcs7-certificates': ['p7b', 'spc'],
      'application/x-pkcs7-certreqresp': ['p7r'],
      'application/x-rar-compressed': ['rar'],
      'application/x-redhat-package-manager': ['rpm'],
      'application/x-research-info-systems': ['ris'],
      'application/x-sea': ['sea'],
      'application/x-sh': ['sh'],
      'application/x-shar': ['shar'],
      'application/x-shockwave-flash': ['swf'],
      'application/x-silverlight-app': ['xap'],
      'application/x-sql': ['sql'],
      'application/x-stuffit': ['sit'],
      'application/x-stuffitx': ['sitx'],
      'application/x-subrip': ['srt'],
      'application/x-sv4cpio': ['sv4cpio'],
      'application/x-sv4crc': ['sv4crc'],
      'application/x-t3vm-image': ['t3'],
      'application/x-tads': ['gam'],
      'application/x-tar': ['tar'],
      'application/x-tcl': ['tcl', 'tk'],
      'application/x-tex': ['tex'],
      'application/x-tex-tfm': ['tfm'],
      'application/x-texinfo': ['texinfo', 'texi'],
      'application/x-tgif': ['obj'],
      'application/x-ustar': ['ustar'],
      'application/x-virtualbox-hdd': ['hdd'],
      'application/x-virtualbox-ova': ['ova'],
      'application/x-virtualbox-ovf': ['ovf'],
      'application/x-virtualbox-vbox': ['vbox'],
      'application/x-virtualbox-vbox-extpack': ['vbox-extpack'],
      'application/x-virtualbox-vdi': ['vdi'],
      'application/x-virtualbox-vhd': ['vhd'],
      'application/x-virtualbox-vmdk': ['vmdk'],
      'application/x-wais-source': ['src'],
      'application/x-web-app-manifest+json': ['webapp'],
      'application/x-x509-ca-cert': ['der', 'crt', 'pem'],
      'application/x-xfig': ['fig'],
      'application/x-xliff+xml': ['xlf'],
      'application/x-xpinstall': ['xpi'],
      'application/x-xz': ['xz'],
      'application/x-zmachine': [
        'z1',
        'z2',
        'z3',
        'z4',
        'z5',
        'z6',
        'z7',
        'z8',
      ],
      'application/xaml+xml': ['xaml'],
      'application/xcap-diff+xml': ['xdf'],
      'application/xenc+xml': ['xenc'],
      'application/xhtml+xml': ['xhtml', 'xht'],
      'application/xml': ['xml', 'xsl', 'xsd', 'rng'],
      'application/xml-dtd': ['dtd'],
      'application/xop+xml': ['xop'],
      'application/xproc+xml': ['xpl'],
      'application/xslt+xml': ['xslt'],
      'application/xspf+xml': ['xspf'],
      'application/xv+xml': ['mxml', 'xhvml', 'xvml', 'xvm'],
      'application/yang': ['yang'],
      'application/yin+xml': ['yin'],
      'application/zip': ['zip'],
      'audio/3gpp': [],
      'audio/adpcm': ['adp'],
      'audio/basic': ['au', 'snd'],
      'audio/midi': ['mid', 'midi', 'kar', 'rmi'],
      'audio/mp3': [],
      'audio/mp4': ['m4a', 'mp4a'],
      'audio/mpeg': ['mpga', 'mp2', 'mp2a', 'mp3', 'm2a', 'm3a'],
      'audio/ogg': ['oga', 'ogg', 'spx'],
      'audio/s3m': ['s3m'],
      'audio/silk': ['sil'],
      'audio/vnd.dece.audio': ['uva', 'uvva'],
      'audio/vnd.digital-winds': ['eol'],
      'audio/vnd.dra': ['dra'],
      'audio/vnd.dts': ['dts'],
      'audio/vnd.dts.hd': ['dtshd'],
      'audio/vnd.lucent.voice': ['lvp'],
      'audio/vnd.ms-playready.media.pya': ['pya'],
      'audio/vnd.nuera.ecelp4800': ['ecelp4800'],
      'audio/vnd.nuera.ecelp7470': ['ecelp7470'],
      'audio/vnd.nuera.ecelp9600': ['ecelp9600'],
      'audio/vnd.rip': ['rip'],
      'audio/wav': ['wav'],
      'audio/wave': [],
      'audio/webm': ['weba'],
      'audio/x-aac': ['aac'],
      'audio/x-aiff': ['aif', 'aiff', 'aifc'],
      'audio/x-caf': ['caf'],
      'audio/x-flac': ['flac'],
      'audio/x-m4a': [],
      'audio/x-matroska': ['mka'],
      'audio/x-mpegurl': ['m3u'],
      'audio/x-ms-wax': ['wax'],
      'audio/x-ms-wma': ['wma'],
      'audio/x-pn-realaudio': ['ram', 'ra'],
      'audio/x-pn-realaudio-plugin': ['rmp'],
      'audio/x-realaudio': [],
      'audio/x-wav': [],
      'audio/xm': ['xm'],
      'chemical/x-cdx': ['cdx'],
      'chemical/x-cif': ['cif'],
      'chemical/x-cmdf': ['cmdf'],
      'chemical/x-cml': ['cml'],
      'chemical/x-csml': ['csml'],
      'chemical/x-xyz': ['xyz'],
      'font/collection': ['ttc'],
      'font/otf': ['otf'],
      'font/ttf': ['ttf'],
      'font/woff': ['woff'],
      'font/woff2': ['woff2'],
      'image/apng': ['apng'],
      'image/bmp': ['bmp'],
      'image/cgm': ['cgm'],
      'image/g3fax': ['g3'],
      'image/gif': ['gif'],
      'image/ief': ['ief'],
      'image/jp2': ['jp2', 'jpg2'],
      'image/jpeg': ['jpeg', 'jpg', 'jpe'],
      'image/jpm': ['jpm'],
      'image/jpx': ['jpx', 'jpf'],
      'image/ktx': ['ktx'],
      'image/png': ['png'],
      'image/prs.btif': ['btif'],
      'image/sgi': ['sgi'],
      'image/svg+xml': ['svg', 'svgz'],
      'image/tiff': ['tiff', 'tif'],
      'image/vnd.adobe.photoshop': ['psd'],
      'image/vnd.dece.graphic': ['uvi', 'uvvi', 'uvg', 'uvvg'],
      'image/vnd.djvu': ['djvu', 'djv'],
      'image/vnd.dvb.subtitle': [],
      'image/vnd.dwg': ['dwg'],
      'image/vnd.dxf': ['dxf'],
      'image/vnd.fastbidsheet': ['fbs'],
      'image/vnd.fpx': ['fpx'],
      'image/vnd.fst': ['fst'],
      'image/vnd.fujixerox.edmics-mmr': ['mmr'],
      'image/vnd.fujixerox.edmics-rlc': ['rlc'],
      'image/vnd.ms-modi': ['mdi'],
      'image/vnd.ms-photo': ['wdp'],
      'image/vnd.net-fpx': ['npx'],
      'image/vnd.wap.wbmp': ['wbmp'],
      'image/vnd.xiff': ['xif'],
      'image/webp': ['webp'],
      'image/x-3ds': ['3ds'],
      'image/x-cmu-raster': ['ras'],
      'image/x-cmx': ['cmx'],
      'image/x-freehand': ['fh', 'fhc', 'fh4', 'fh5', 'fh7'],
      'image/x-icon': ['ico'],
      'image/x-jng': ['jng'],
      'image/x-mrsid-image': ['sid'],
      'image/x-ms-bmp': [],
      'image/x-pcx': ['pcx'],
      'image/x-pict': ['pic', 'pct'],
      'image/x-portable-anymap': ['pnm'],
      'image/x-portable-bitmap': ['pbm'],
      'image/x-portable-graymap': ['pgm'],
      'image/x-portable-pixmap': ['ppm'],
      'image/x-rgb': ['rgb'],
      'image/x-tga': ['tga'],
      'image/x-xbitmap': ['xbm'],
      'image/x-xpixmap': ['xpm'],
      'image/x-xwindowdump': ['xwd'],
      'message/rfc822': ['eml', 'mime'],
      'model/gltf+json': ['gltf'],
      'model/gltf-binary': ['glb'],
      'model/iges': ['igs', 'iges'],
      'model/mesh': ['msh', 'mesh', 'silo'],
      'model/vnd.collada+xml': ['dae'],
      'model/vnd.dwf': ['dwf'],
      'model/vnd.gdl': ['gdl'],
      'model/vnd.gtw': ['gtw'],
      'model/vnd.mts': ['mts'],
      'model/vnd.vtu': ['vtu'],
      'model/vrml': ['wrl', 'vrml'],
      'model/x3d+binary': ['x3db', 'x3dbz'],
      'model/x3d+vrml': ['x3dv', 'x3dvz'],
      'model/x3d+xml': ['x3d', 'x3dz'],
      'text/cache-manifest': ['appcache', 'manifest'],
      'text/calendar': ['ics', 'ifb'],
      'text/coffeescript': ['coffee', 'litcoffee'],
      'text/css': ['css'],
      'text/csv': ['csv'],
      'text/hjson': ['hjson'],
      'text/html': ['html', 'htm', 'shtml'],
      'text/jade': ['jade'],
      'text/jsx': ['jsx'],
      'text/less': ['less'],
      'text/markdown': ['markdown', 'md'],
      'text/mathml': ['mml'],
      'text/n3': ['n3'],
      'text/plain': ['txt', 'text', 'conf', 'def', 'list', 'log', 'in', 'ini'],
      'text/prs.lines.tag': ['dsc'],
      'text/richtext': ['rtx'],
      'text/rtf': [],
      'text/sgml': ['sgml', 'sgm'],
      'text/slim': ['slim', 'slm'],
      'text/stylus': ['stylus', 'styl'],
      'text/tab-separated-values': ['tsv'],
      'text/troff': ['t', 'tr', 'roff', 'man', 'me', 'ms'],
      'text/turtle': ['ttl'],
      'text/uri-list': ['uri', 'uris', 'urls'],
      'text/vcard': ['vcard'],
      'text/vnd.curl': ['curl'],
      'text/vnd.curl.dcurl': ['dcurl'],
      'text/vnd.curl.mcurl': ['mcurl'],
      'text/vnd.curl.scurl': ['scurl'],
      'text/vnd.dvb.subtitle': ['sub'],
      'text/vnd.fly': ['fly'],
      'text/vnd.fmi.flexstor': ['flx'],
      'text/vnd.graphviz': ['gv'],
      'text/vnd.in3d.3dml': ['3dml'],
      'text/vnd.in3d.spot': ['spot'],
      'text/vnd.sun.j2me.app-descriptor': ['jad'],
      'text/vnd.wap.wml': ['wml'],
      'text/vnd.wap.wmlscript': ['wmls'],
      'text/vtt': ['vtt'],
      'text/x-asm': ['s', 'asm'],
      'text/x-c': ['c', 'cc', 'cxx', 'cpp', 'h', 'hh', 'dic'],
      'text/x-component': ['htc'],
      'text/x-fortran': ['f', 'for', 'f77', 'f90'],
      'text/x-handlebars-template': ['hbs'],
      'text/x-java-source': ['java'],
      'text/x-lua': ['lua'],
      'text/x-markdown': ['mkd'],
      'text/x-nfo': ['nfo'],
      'text/x-opml': ['opml'],
      'text/x-org': [],
      'text/x-pascal': ['p', 'pas'],
      'text/x-processing': ['pde'],
      'text/x-sass': ['sass'],
      'text/x-scss': ['scss'],
      'text/x-setext': ['etx'],
      'text/x-sfv': ['sfv'],
      'text/x-suse-ymp': ['ymp'],
      'text/x-uuencode': ['uu'],
      'text/x-vcalendar': ['vcs'],
      'text/x-vcard': ['vcf'],
      'text/xml': [],
      'text/yaml': ['yaml', 'yml'],
      'video/3gpp': ['3gp', '3gpp'],
      'video/3gpp2': ['3g2'],
      'video/h261': ['h261'],
      'video/h263': ['h263'],
      'video/h264': ['h264'],
      'video/jpeg': ['jpgv'],
      'video/jpm': ['jpgm'],
      'video/mj2': ['mj2', 'mjp2'],
      'video/mp2t': ['ts'],
      'video/mp4': ['mp4', 'mp4v', 'mpg4'],
      'video/mpeg': ['mpeg', 'mpg', 'mpe', 'm1v', 'm2v'],
      'video/ogg': ['ogv'],
      'video/quicktime': ['qt', 'mov'],
      'video/vnd.dece.hd': ['uvh', 'uvvh'],
      'video/vnd.dece.mobile': ['uvm', 'uvvm'],
      'video/vnd.dece.pd': ['uvp', 'uvvp'],
      'video/vnd.dece.sd': ['uvs', 'uvvs'],
      'video/vnd.dece.video': ['uvv', 'uvvv'],
      'video/vnd.dvb.file': ['dvb'],
      'video/vnd.fvt': ['fvt'],
      'video/vnd.mpegurl': ['mxu', 'm4u'],
      'video/vnd.ms-playready.media.pyv': ['pyv'],
      'video/vnd.uvvu.mp4': ['uvu', 'uvvu'],
      'video/vnd.vivo': ['viv'],
      'video/webm': ['webm'],
      'video/x-f4v': ['f4v'],
      'video/x-fli': ['fli'],
      'video/x-flv': ['flv'],
      'video/x-m4v': ['m4v'],
      'video/x-matroska': ['mkv', 'mk3d', 'mks'],
      'video/x-mng': ['mng'],
      'video/x-ms-asf': ['asf', 'asx'],
      'video/x-ms-vob': ['vob'],
      'video/x-ms-wm': ['wm'],
      'video/x-ms-wmv': ['wmv'],
      'video/x-ms-wmx': ['wmx'],
      'video/x-ms-wvx': ['wvx'],
      'video/x-msvideo': ['avi'],
      'video/x-sgi-movie': ['movie'],
      'video/x-smv': ['smv'],
      'x-conference/x-cooltalk': ['ice'],
    };
  },
});

// ../../node_modules/mime/mime.js
var require_mime = __commonJS({
  '../../node_modules/mime/mime.js'(exports2, module2) {
    'use strict';
    var path = require('path');
    var fs2 = require('fs');
    function Mime() {
      this.types = /* @__PURE__ */ Object.create(null);
      this.extensions = /* @__PURE__ */ Object.create(null);
    }
    Mime.prototype.define = function (map2) {
      for (var type in map2) {
        var exts = map2[type];
        for (var i = 0; i < exts.length; i++) {
          if (process.env.DEBUG_MIME && this.types[exts[i]]) {
            console.warn(
              (this._loading || 'define()').replace(/.*\//, ''),
              'changes "' +
                exts[i] +
                '" extension type from ' +
                this.types[exts[i]] +
                ' to ' +
                type
            );
          }
          this.types[exts[i]] = type;
        }
        if (!this.extensions[type]) {
          this.extensions[type] = exts[0];
        }
      }
    };
    Mime.prototype.load = function (file) {
      this._loading = file;
      var map2 = {},
        content = fs2.readFileSync(file, 'ascii'),
        lines = content.split(/[\r\n]+/);
      lines.forEach(function (line) {
        var fields = line.replace(/\s*#.*|^\s*|\s*$/g, '').split(/\s+/);
        map2[fields.shift()] = fields;
      });
      this.define(map2);
      this._loading = null;
    };
    Mime.prototype.lookup = function (path2, fallback) {
      var ext = path2.replace(/^.*[\.\/\\]/, '').toLowerCase();
      return this.types[ext] || fallback || this.default_type;
    };
    Mime.prototype.extension = function (mimeType) {
      var type = mimeType.match(/^\s*([^;\s]*)(?:;|\s|$)/)[1].toLowerCase();
      return this.extensions[type];
    };
    var mime = new Mime();
    mime.define(require_types());
    mime.default_type = mime.lookup('bin');
    mime.Mime = Mime;
    mime.charsets = {
      lookup: function (mimeType, fallback) {
        return /^text\/|^application\/(javascript|json)/.test(mimeType)
          ? 'UTF-8'
          : fallback;
      },
    };
    module2.exports = mime;
  },
});

// ../../node_modules/ms/index.js
var require_ms5 = __commonJS({
  '../../node_modules/ms/index.js'(exports2, module2) {
    'use strict';
    var s2 = 1e3;
    var m2 = s2 * 60;
    var h2 = m2 * 60;
    var d = h2 * 24;
    var w2 = d * 7;
    var y = d * 365.25;
    module2.exports = function (val, options) {
      options = options || {};
      var type = typeof val;
      if (type === 'string' && val.length > 0) {
        return parse(val);
      } else if (type === 'number' && isFinite(val)) {
        return options.long ? fmtLong(val) : fmtShort(val);
      }
      throw new Error(
        'val is not a non-empty string or a valid number. val=' +
          JSON.stringify(val)
      );
    };
    function parse(str) {
      str = String(str);
      if (str.length > 100) {
        return;
      }
      var match =
        /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(
          str
        );
      if (!match) {
        return;
      }
      var n2 = parseFloat(match[1]);
      var type = (match[2] || 'ms').toLowerCase();
      switch (type) {
        case 'years':
        case 'year':
        case 'yrs':
        case 'yr':
        case 'y':
          return n2 * y;
        case 'weeks':
        case 'week':
        case 'w':
          return n2 * w2;
        case 'days':
        case 'day':
        case 'd':
          return n2 * d;
        case 'hours':
        case 'hour':
        case 'hrs':
        case 'hr':
        case 'h':
          return n2 * h2;
        case 'minutes':
        case 'minute':
        case 'mins':
        case 'min':
        case 'm':
          return n2 * m2;
        case 'seconds':
        case 'second':
        case 'secs':
        case 'sec':
        case 's':
          return n2 * s2;
        case 'milliseconds':
        case 'millisecond':
        case 'msecs':
        case 'msec':
        case 'ms':
          return n2;
        default:
          return void 0;
      }
    }
    function fmtShort(ms2) {
      var msAbs = Math.abs(ms2);
      if (msAbs >= d) {
        return Math.round(ms2 / d) + 'd';
      }
      if (msAbs >= h2) {
        return Math.round(ms2 / h2) + 'h';
      }
      if (msAbs >= m2) {
        return Math.round(ms2 / m2) + 'm';
      }
      if (msAbs >= s2) {
        return Math.round(ms2 / s2) + 's';
      }
      return ms2 + 'ms';
    }
    function fmtLong(ms2) {
      var msAbs = Math.abs(ms2);
      if (msAbs >= d) {
        return plural(ms2, msAbs, d, 'day');
      }
      if (msAbs >= h2) {
        return plural(ms2, msAbs, h2, 'hour');
      }
      if (msAbs >= m2) {
        return plural(ms2, msAbs, m2, 'minute');
      }
      if (msAbs >= s2) {
        return plural(ms2, msAbs, s2, 'second');
      }
      return ms2 + ' ms';
    }
    function plural(ms2, msAbs, n2, name) {
      var isPlural = msAbs >= n2 * 1.5;
      return Math.round(ms2 / n2) + ' ' + name + (isPlural ? 's' : '');
    }
  },
});

// ../../node_modules/range-parser/index.js
var require_range_parser = __commonJS({
  '../../node_modules/range-parser/index.js'(exports2, module2) {
    'use strict';
    module2.exports = rangeParser;
    function rangeParser(size, str, options) {
      if (typeof str !== 'string') {
        throw new TypeError('argument str must be a string');
      }
      var index = str.indexOf('=');
      if (index === -1) {
        return -2;
      }
      var arr = str.slice(index + 1).split(',');
      var ranges = [];
      ranges.type = str.slice(0, index);
      for (var i = 0; i < arr.length; i++) {
        var range = arr[i].split('-');
        var start = parseInt(range[0], 10);
        var end = parseInt(range[1], 10);
        if (isNaN(start)) {
          start = size - end;
          end = size - 1;
        } else if (isNaN(end)) {
          end = size - 1;
        }
        if (end > size - 1) {
          end = size - 1;
        }
        if (isNaN(start) || isNaN(end) || start > end || start < 0) {
          continue;
        }
        ranges.push({
          start,
          end,
        });
      }
      if (ranges.length < 1) {
        return -1;
      }
      return options && options.combine ? combineRanges(ranges) : ranges;
    }
    function combineRanges(ranges) {
      var ordered = ranges.map(mapWithIndex).sort(sortByRangeStart);
      for (var j2 = 0, i = 1; i < ordered.length; i++) {
        var range = ordered[i];
        var current = ordered[j2];
        if (range.start > current.end + 1) {
          ordered[++j2] = range;
        } else if (range.end > current.end) {
          current.end = range.end;
          current.index = Math.min(current.index, range.index);
        }
      }
      ordered.length = j2 + 1;
      var combined = ordered.sort(sortByRangeIndex).map(mapWithoutIndex);
      combined.type = ranges.type;
      return combined;
    }
    function mapWithIndex(range, index) {
      return {
        start: range.start,
        end: range.end,
        index,
      };
    }
    function mapWithoutIndex(range) {
      return {
        start: range.start,
        end: range.end,
      };
    }
    function sortByRangeIndex(a, b) {
      return a.index - b.index;
    }
    function sortByRangeStart(a, b) {
      return a.start - b.start;
    }
  },
});

// ../../node_modules/send/index.js
var require_send = __commonJS({
  '../../node_modules/send/index.js'(exports2, module2) {
    'use strict';
    var createError = require_http_errors();
    var debug2 = require_src5()('send');
    var deprecate = require_depd()('send');
    var destroy = require_destroy();
    var encodeUrl = require_encodeurl();
    var escapeHtml = require_escape_html();
    var etag = require_etag();
    var fresh = require_fresh();
    var fs2 = require('fs');
    var mime = require_mime();
    var ms2 = require_ms5();
    var onFinished = require_on_finished();
    var parseRange = require_range_parser();
    var path = require('path');
    var statuses = require_statuses();
    var Stream = require('stream');
    var util = require('util');
    var extname = path.extname;
    var join2 = path.join;
    var normalize2 = path.normalize;
    var resolve = path.resolve;
    var sep = path.sep;
    var BYTES_RANGE_REGEXP = /^ *bytes=/;
    var MAX_MAXAGE = 60 * 60 * 24 * 365 * 1e3;
    var UP_PATH_REGEXP = /(?:^|[\\/])\.\.(?:[\\/]|$)/;
    module2.exports = send;
    module2.exports.mime = mime;
    function send(req, path2, options) {
      return new SendStream(req, path2, options);
    }
    function SendStream(req, path2, options) {
      Stream.call(this);
      var opts = options || {};
      this.options = opts;
      this.path = path2;
      this.req = req;
      this._acceptRanges =
        opts.acceptRanges !== void 0 ? Boolean(opts.acceptRanges) : true;
      this._cacheControl =
        opts.cacheControl !== void 0 ? Boolean(opts.cacheControl) : true;
      this._etag = opts.etag !== void 0 ? Boolean(opts.etag) : true;
      this._dotfiles = opts.dotfiles !== void 0 ? opts.dotfiles : 'ignore';
      if (
        this._dotfiles !== 'ignore' &&
        this._dotfiles !== 'allow' &&
        this._dotfiles !== 'deny'
      ) {
        throw new TypeError(
          'dotfiles option must be "allow", "deny", or "ignore"'
        );
      }
      this._hidden = Boolean(opts.hidden);
      if (opts.hidden !== void 0) {
        deprecate(
          "hidden: use dotfiles: '" +
            (this._hidden ? 'allow' : 'ignore') +
            "' instead"
        );
      }
      if (opts.dotfiles === void 0) {
        this._dotfiles = void 0;
      }
      this._extensions =
        opts.extensions !== void 0
          ? normalizeList(opts.extensions, 'extensions option')
          : [];
      this._immutable =
        opts.immutable !== void 0 ? Boolean(opts.immutable) : false;
      this._index =
        opts.index !== void 0
          ? normalizeList(opts.index, 'index option')
          : ['index.html'];
      this._lastModified =
        opts.lastModified !== void 0 ? Boolean(opts.lastModified) : true;
      this._maxage = opts.maxAge || opts.maxage;
      this._maxage =
        typeof this._maxage === 'string'
          ? ms2(this._maxage)
          : Number(this._maxage);
      this._maxage = !isNaN(this._maxage)
        ? Math.min(Math.max(0, this._maxage), MAX_MAXAGE)
        : 0;
      this._root = opts.root ? resolve(opts.root) : null;
      if (!this._root && opts.from) {
        this.from(opts.from);
      }
    }
    util.inherits(SendStream, Stream);
    SendStream.prototype.etag = deprecate.function(function etag2(val) {
      this._etag = Boolean(val);
      debug2('etag %s', this._etag);
      return this;
    }, 'send.etag: pass etag as option');
    SendStream.prototype.hidden = deprecate.function(function hidden(val) {
      this._hidden = Boolean(val);
      this._dotfiles = void 0;
      debug2('hidden %s', this._hidden);
      return this;
    }, 'send.hidden: use dotfiles option');
    SendStream.prototype.index = deprecate.function(function index(paths) {
      var index2 = !paths ? [] : normalizeList(paths, 'paths argument');
      debug2('index %o', paths);
      this._index = index2;
      return this;
    }, 'send.index: pass index as option');
    SendStream.prototype.root = function root(path2) {
      this._root = resolve(String(path2));
      debug2('root %s', this._root);
      return this;
    };
    SendStream.prototype.from = deprecate.function(
      SendStream.prototype.root,
      'send.from: pass root as option'
    );
    SendStream.prototype.root = deprecate.function(
      SendStream.prototype.root,
      'send.root: pass root as option'
    );
    SendStream.prototype.maxage = deprecate.function(function maxage(maxAge) {
      this._maxage = typeof maxAge === 'string' ? ms2(maxAge) : Number(maxAge);
      this._maxage = !isNaN(this._maxage)
        ? Math.min(Math.max(0, this._maxage), MAX_MAXAGE)
        : 0;
      debug2('max-age %d', this._maxage);
      return this;
    }, 'send.maxage: pass maxAge as option');
    SendStream.prototype.error = function error(status, err) {
      if (hasListeners(this, 'error')) {
        return this.emit('error', createHttpError(status, err));
      }
      var res = this.res;
      var msg = statuses.message[status] || String(status);
      var doc = createHtmlDocument('Error', escapeHtml(msg));
      clearHeaders(res);
      if (err && err.headers) {
        setHeaders(res, err.headers);
      }
      res.statusCode = status;
      res.setHeader('Content-Type', 'text/html; charset=UTF-8');
      res.setHeader('Content-Length', Buffer.byteLength(doc));
      res.setHeader('Content-Security-Policy', "default-src 'none'");
      res.setHeader('X-Content-Type-Options', 'nosniff');
      res.end(doc);
    };
    SendStream.prototype.hasTrailingSlash = function hasTrailingSlash() {
      return this.path[this.path.length - 1] === '/';
    };
    SendStream.prototype.isConditionalGET = function isConditionalGET() {
      return (
        this.req.headers['if-match'] ||
        this.req.headers['if-unmodified-since'] ||
        this.req.headers['if-none-match'] ||
        this.req.headers['if-modified-since']
      );
    };
    SendStream.prototype.isPreconditionFailure =
      function isPreconditionFailure() {
        var req = this.req;
        var res = this.res;
        var match = req.headers['if-match'];
        if (match) {
          var etag2 = res.getHeader('ETag');
          return (
            !etag2 ||
            (match !== '*' &&
              parseTokenList(match).every(function (match2) {
                return (
                  match2 !== etag2 &&
                  match2 !== 'W/' + etag2 &&
                  'W/' + match2 !== etag2
                );
              }))
          );
        }
        var unmodifiedSince = parseHttpDate(req.headers['if-unmodified-since']);
        if (!isNaN(unmodifiedSince)) {
          var lastModified = parseHttpDate(res.getHeader('Last-Modified'));
          return isNaN(lastModified) || lastModified > unmodifiedSince;
        }
        return false;
      };
    SendStream.prototype.removeContentHeaderFields =
      function removeContentHeaderFields() {
        var res = this.res;
        res.removeHeader('Content-Encoding');
        res.removeHeader('Content-Language');
        res.removeHeader('Content-Length');
        res.removeHeader('Content-Range');
        res.removeHeader('Content-Type');
      };
    SendStream.prototype.notModified = function notModified() {
      var res = this.res;
      debug2('not modified');
      this.removeContentHeaderFields();
      res.statusCode = 304;
      res.end();
    };
    SendStream.prototype.headersAlreadySent = function headersAlreadySent() {
      var err = new Error("Can't set headers after they are sent.");
      debug2('headers already sent');
      this.error(500, err);
    };
    SendStream.prototype.isCachable = function isCachable() {
      var statusCode = this.res.statusCode;
      return (statusCode >= 200 && statusCode < 300) || statusCode === 304;
    };
    SendStream.prototype.onStatError = function onStatError(error) {
      switch (error.code) {
        case 'ENAMETOOLONG':
        case 'ENOENT':
        case 'ENOTDIR':
          this.error(404, error);
          break;
        default:
          this.error(500, error);
          break;
      }
    };
    SendStream.prototype.isFresh = function isFresh() {
      return fresh(this.req.headers, {
        etag: this.res.getHeader('ETag'),
        'last-modified': this.res.getHeader('Last-Modified'),
      });
    };
    SendStream.prototype.isRangeFresh = function isRangeFresh() {
      var ifRange = this.req.headers['if-range'];
      if (!ifRange) {
        return true;
      }
      if (ifRange.indexOf('"') !== -1) {
        var etag2 = this.res.getHeader('ETag');
        return Boolean(etag2 && ifRange.indexOf(etag2) !== -1);
      }
      var lastModified = this.res.getHeader('Last-Modified');
      return parseHttpDate(lastModified) <= parseHttpDate(ifRange);
    };
    SendStream.prototype.redirect = function redirect(path2) {
      var res = this.res;
      if (hasListeners(this, 'directory')) {
        this.emit('directory', res, path2);
        return;
      }
      if (this.hasTrailingSlash()) {
        this.error(403);
        return;
      }
      var loc = encodeUrl(collapseLeadingSlashes(this.path + '/'));
      var doc = createHtmlDocument(
        'Redirecting',
        'Redirecting to <a href="' +
          escapeHtml(loc) +
          '">' +
          escapeHtml(loc) +
          '</a>'
      );
      res.statusCode = 301;
      res.setHeader('Content-Type', 'text/html; charset=UTF-8');
      res.setHeader('Content-Length', Buffer.byteLength(doc));
      res.setHeader('Content-Security-Policy', "default-src 'none'");
      res.setHeader('X-Content-Type-Options', 'nosniff');
      res.setHeader('Location', loc);
      res.end(doc);
    };
    SendStream.prototype.pipe = function pipe(res) {
      var root = this._root;
      this.res = res;
      var path2 = decode(this.path);
      if (path2 === -1) {
        this.error(400);
        return res;
      }
      if (~path2.indexOf('\0')) {
        this.error(400);
        return res;
      }
      var parts;
      if (root !== null) {
        if (path2) {
          path2 = normalize2('.' + sep + path2);
        }
        if (UP_PATH_REGEXP.test(path2)) {
          debug2('malicious path "%s"', path2);
          this.error(403);
          return res;
        }
        parts = path2.split(sep);
        path2 = normalize2(join2(root, path2));
      } else {
        if (UP_PATH_REGEXP.test(path2)) {
          debug2('malicious path "%s"', path2);
          this.error(403);
          return res;
        }
        parts = normalize2(path2).split(sep);
        path2 = resolve(path2);
      }
      if (containsDotFile(parts)) {
        var access = this._dotfiles;
        if (access === void 0) {
          access =
            parts[parts.length - 1][0] === '.'
              ? this._hidden
                ? 'allow'
                : 'ignore'
              : 'allow';
        }
        debug2('%s dotfile "%s"', access, path2);
        switch (access) {
          case 'allow':
            break;
          case 'deny':
            this.error(403);
            return res;
          case 'ignore':
          default:
            this.error(404);
            return res;
        }
      }
      if (this._index.length && this.hasTrailingSlash()) {
        this.sendIndex(path2);
        return res;
      }
      this.sendFile(path2);
      return res;
    };
    SendStream.prototype.send = function send2(path2, stat) {
      var len = stat.size;
      var options = this.options;
      var opts = {};
      var res = this.res;
      var req = this.req;
      var ranges = req.headers.range;
      var offset = options.start || 0;
      if (headersSent(res)) {
        this.headersAlreadySent();
        return;
      }
      debug2('pipe "%s"', path2);
      this.setHeader(path2, stat);
      this.type(path2);
      if (this.isConditionalGET()) {
        if (this.isPreconditionFailure()) {
          this.error(412);
          return;
        }
        if (this.isCachable() && this.isFresh()) {
          this.notModified();
          return;
        }
      }
      len = Math.max(0, len - offset);
      if (options.end !== void 0) {
        var bytes = options.end - offset + 1;
        if (len > bytes) len = bytes;
      }
      if (this._acceptRanges && BYTES_RANGE_REGEXP.test(ranges)) {
        ranges = parseRange(len, ranges, {
          combine: true,
        });
        if (!this.isRangeFresh()) {
          debug2('range stale');
          ranges = -2;
        }
        if (ranges === -1) {
          debug2('range unsatisfiable');
          res.setHeader('Content-Range', contentRange('bytes', len));
          return this.error(416, {
            headers: { 'Content-Range': res.getHeader('Content-Range') },
          });
        }
        if (ranges !== -2 && ranges.length === 1) {
          debug2('range %j', ranges);
          res.statusCode = 206;
          res.setHeader('Content-Range', contentRange('bytes', len, ranges[0]));
          offset += ranges[0].start;
          len = ranges[0].end - ranges[0].start + 1;
        }
      }
      for (var prop in options) {
        opts[prop] = options[prop];
      }
      opts.start = offset;
      opts.end = Math.max(offset, offset + len - 1);
      res.setHeader('Content-Length', len);
      if (req.method === 'HEAD') {
        res.end();
        return;
      }
      this.stream(path2, opts);
    };
    SendStream.prototype.sendFile = function sendFile(path2) {
      var i = 0;
      var self2 = this;
      debug2('stat "%s"', path2);
      fs2.stat(path2, function onstat(err, stat) {
        if (
          err &&
          err.code === 'ENOENT' &&
          !extname(path2) &&
          path2[path2.length - 1] !== sep
        ) {
          return next(err);
        }
        if (err) return self2.onStatError(err);
        if (stat.isDirectory()) return self2.redirect(path2);
        self2.emit('file', path2, stat);
        self2.send(path2, stat);
      });
      function next(err) {
        if (self2._extensions.length <= i) {
          return err ? self2.onStatError(err) : self2.error(404);
        }
        var p = path2 + '.' + self2._extensions[i++];
        debug2('stat "%s"', p);
        fs2.stat(p, function (err2, stat) {
          if (err2) return next(err2);
          if (stat.isDirectory()) return next();
          self2.emit('file', p, stat);
          self2.send(p, stat);
        });
      }
    };
    SendStream.prototype.sendIndex = function sendIndex(path2) {
      var i = -1;
      var self2 = this;
      function next(err) {
        if (++i >= self2._index.length) {
          if (err) return self2.onStatError(err);
          return self2.error(404);
        }
        var p = join2(path2, self2._index[i]);
        debug2('stat "%s"', p);
        fs2.stat(p, function (err2, stat) {
          if (err2) return next(err2);
          if (stat.isDirectory()) return next();
          self2.emit('file', p, stat);
          self2.send(p, stat);
        });
      }
      next();
    };
    SendStream.prototype.stream = function stream(path2, options) {
      var self2 = this;
      var res = this.res;
      var stream2 = fs2.createReadStream(path2, options);
      this.emit('stream', stream2);
      stream2.pipe(res);
      function cleanup() {
        destroy(stream2, true);
      }
      onFinished(res, cleanup);
      stream2.on('error', function onerror(err) {
        cleanup();
        self2.onStatError(err);
      });
      stream2.on('end', function onend() {
        self2.emit('end');
      });
    };
    SendStream.prototype.type = function type(path2) {
      var res = this.res;
      if (res.getHeader('Content-Type')) return;
      var type2 = mime.lookup(path2);
      if (!type2) {
        debug2('no content-type');
        return;
      }
      var charset = mime.charsets.lookup(type2);
      debug2('content-type %s', type2);
      res.setHeader(
        'Content-Type',
        type2 + (charset ? '; charset=' + charset : '')
      );
    };
    SendStream.prototype.setHeader = function setHeader(path2, stat) {
      var res = this.res;
      this.emit('headers', res, path2, stat);
      if (this._acceptRanges && !res.getHeader('Accept-Ranges')) {
        debug2('accept ranges');
        res.setHeader('Accept-Ranges', 'bytes');
      }
      if (this._cacheControl && !res.getHeader('Cache-Control')) {
        var cacheControl = 'public, max-age=' + Math.floor(this._maxage / 1e3);
        if (this._immutable) {
          cacheControl += ', immutable';
        }
        debug2('cache-control %s', cacheControl);
        res.setHeader('Cache-Control', cacheControl);
      }
      if (this._lastModified && !res.getHeader('Last-Modified')) {
        var modified = stat.mtime.toUTCString();
        debug2('modified %s', modified);
        res.setHeader('Last-Modified', modified);
      }
      if (this._etag && !res.getHeader('ETag')) {
        var val = etag(stat);
        debug2('etag %s', val);
        res.setHeader('ETag', val);
      }
    };
    function clearHeaders(res) {
      var headers = getHeaderNames(res);
      for (var i = 0; i < headers.length; i++) {
        res.removeHeader(headers[i]);
      }
    }
    function collapseLeadingSlashes(str) {
      for (var i = 0; i < str.length; i++) {
        if (str[i] !== '/') {
          break;
        }
      }
      return i > 1 ? '/' + str.substr(i) : str;
    }
    function containsDotFile(parts) {
      for (var i = 0; i < parts.length; i++) {
        var part = parts[i];
        if (part.length > 1 && part[0] === '.') {
          return true;
        }
      }
      return false;
    }
    function contentRange(type, size, range) {
      return (
        type + ' ' + (range ? range.start + '-' + range.end : '*') + '/' + size
      );
    }
    function createHtmlDocument(title, body) {
      return (
        '<!DOCTYPE html>\n<html lang="en">\n<head>\n<meta charset="utf-8">\n<title>' +
        title +
        '</title>\n</head>\n<body>\n<pre>' +
        body +
        '</pre>\n</body>\n</html>\n'
      );
    }
    function createHttpError(status, err) {
      if (!err) {
        return createError(status);
      }
      return err instanceof Error
        ? createError(status, err, { expose: false })
        : createError(status, err);
    }
    function decode(path2) {
      try {
        return decodeURIComponent(path2);
      } catch (err) {
        return -1;
      }
    }
    function getHeaderNames(res) {
      return typeof res.getHeaderNames !== 'function'
        ? Object.keys(res._headers || {})
        : res.getHeaderNames();
    }
    function hasListeners(emitter, type) {
      var count =
        typeof emitter.listenerCount !== 'function'
          ? emitter.listeners(type).length
          : emitter.listenerCount(type);
      return count > 0;
    }
    function headersSent(res) {
      return typeof res.headersSent !== 'boolean'
        ? Boolean(res._header)
        : res.headersSent;
    }
    function normalizeList(val, name) {
      var list = [].concat(val || []);
      for (var i = 0; i < list.length; i++) {
        if (typeof list[i] !== 'string') {
          throw new TypeError(name + ' must be array of strings or false');
        }
      }
      return list;
    }
    function parseHttpDate(date) {
      var timestamp = date && Date.parse(date);
      return typeof timestamp === 'number' ? timestamp : NaN;
    }
    function parseTokenList(str) {
      var end = 0;
      var list = [];
      var start = 0;
      for (var i = 0, len = str.length; i < len; i++) {
        switch (str.charCodeAt(i)) {
          case 32:
            if (start === end) {
              start = end = i + 1;
            }
            break;
          case 44:
            if (start !== end) {
              list.push(str.substring(start, end));
            }
            start = end = i + 1;
            break;
          default:
            end = i + 1;
            break;
        }
      }
      if (start !== end) {
        list.push(str.substring(start, end));
      }
      return list;
    }
    function setHeaders(res, headers) {
      var keys = Object.keys(headers);
      for (var i = 0; i < keys.length; i++) {
        var key = keys[i];
        res.setHeader(key, headers[key]);
      }
    }
  },
});

// ../../node_modules/forwarded/index.js
var require_forwarded = __commonJS({
  '../../node_modules/forwarded/index.js'(exports2, module2) {
    'use strict';
    module2.exports = forwarded;
    function forwarded(req) {
      if (!req) {
        throw new TypeError('argument req is required');
      }
      var proxyAddrs = parse(req.headers['x-forwarded-for'] || '');
      var socketAddr = getSocketAddr(req);
      var addrs = [socketAddr].concat(proxyAddrs);
      return addrs;
    }
    function getSocketAddr(req) {
      return req.socket
        ? req.socket.remoteAddress
        : req.connection.remoteAddress;
    }
    function parse(header) {
      var end = header.length;
      var list = [];
      var start = header.length;
      for (var i = header.length - 1; i >= 0; i--) {
        switch (header.charCodeAt(i)) {
          case 32:
            if (start === end) {
              start = end = i;
            }
            break;
          case 44:
            if (start !== end) {
              list.push(header.substring(start, end));
            }
            start = end = i;
            break;
          default:
            start = i;
            break;
        }
      }
      if (start !== end) {
        list.push(header.substring(start, end));
      }
      return list;
    }
  },
});

// ../../node_modules/proxy-addr/node_modules/ipaddr.js/lib/ipaddr.js
var require_ipaddr = __commonJS({
  '../../node_modules/proxy-addr/node_modules/ipaddr.js/lib/ipaddr.js'(
    exports2,
    module2
  ) {
    'use strict';
    (function () {
      var expandIPv6,
        ipaddr,
        ipv4Part,
        ipv4Regexes,
        ipv6Part,
        ipv6Regexes,
        matchCIDR,
        root,
        zoneIndex;
      ipaddr = {};
      root = this;
      if (
        typeof module2 !== 'undefined' &&
        module2 !== null &&
        module2.exports
      ) {
        module2.exports = ipaddr;
      } else {
        root['ipaddr'] = ipaddr;
      }
      matchCIDR = function (first, second, partSize, cidrBits) {
        var part, shift;
        if (first.length !== second.length) {
          throw new Error(
            'ipaddr: cannot match CIDR for objects with different lengths'
          );
        }
        part = 0;
        while (cidrBits > 0) {
          shift = partSize - cidrBits;
          if (shift < 0) {
            shift = 0;
          }
          if (first[part] >> shift !== second[part] >> shift) {
            return false;
          }
          cidrBits -= partSize;
          part += 1;
        }
        return true;
      };
      ipaddr.subnetMatch = function (address, rangeList, defaultName) {
        var k2, len, rangeName, rangeSubnets, subnet;
        if (defaultName == null) {
          defaultName = 'unicast';
        }
        for (rangeName in rangeList) {
          rangeSubnets = rangeList[rangeName];
          if (rangeSubnets[0] && !(rangeSubnets[0] instanceof Array)) {
            rangeSubnets = [rangeSubnets];
          }
          for (k2 = 0, len = rangeSubnets.length; k2 < len; k2++) {
            subnet = rangeSubnets[k2];
            if (address.kind() === subnet[0].kind()) {
              if (address.match.apply(address, subnet)) {
                return rangeName;
              }
            }
          }
        }
        return defaultName;
      };
      ipaddr.IPv4 = (function () {
        function IPv4(octets) {
          var k2, len, octet;
          if (octets.length !== 4) {
            throw new Error('ipaddr: ipv4 octet count should be 4');
          }
          for (k2 = 0, len = octets.length; k2 < len; k2++) {
            octet = octets[k2];
            if (!(0 <= octet && octet <= 255)) {
              throw new Error('ipaddr: ipv4 octet should fit in 8 bits');
            }
          }
          this.octets = octets;
        }
        IPv4.prototype.kind = function () {
          return 'ipv4';
        };
        IPv4.prototype.toString = function () {
          return this.octets.join('.');
        };
        IPv4.prototype.toNormalizedString = function () {
          return this.toString();
        };
        IPv4.prototype.toByteArray = function () {
          return this.octets.slice(0);
        };
        IPv4.prototype.match = function (other, cidrRange) {
          var ref;
          if (cidrRange === void 0) {
            (ref = other), (other = ref[0]), (cidrRange = ref[1]);
          }
          if (other.kind() !== 'ipv4') {
            throw new Error(
              'ipaddr: cannot match ipv4 address with non-ipv4 one'
            );
          }
          return matchCIDR(this.octets, other.octets, 8, cidrRange);
        };
        IPv4.prototype.SpecialRanges = {
          unspecified: [[new IPv4([0, 0, 0, 0]), 8]],
          broadcast: [[new IPv4([255, 255, 255, 255]), 32]],
          multicast: [[new IPv4([224, 0, 0, 0]), 4]],
          linkLocal: [[new IPv4([169, 254, 0, 0]), 16]],
          loopback: [[new IPv4([127, 0, 0, 0]), 8]],
          carrierGradeNat: [[new IPv4([100, 64, 0, 0]), 10]],
          private: [
            [new IPv4([10, 0, 0, 0]), 8],
            [new IPv4([172, 16, 0, 0]), 12],
            [new IPv4([192, 168, 0, 0]), 16],
          ],
          reserved: [
            [new IPv4([192, 0, 0, 0]), 24],
            [new IPv4([192, 0, 2, 0]), 24],
            [new IPv4([192, 88, 99, 0]), 24],
            [new IPv4([198, 51, 100, 0]), 24],
            [new IPv4([203, 0, 113, 0]), 24],
            [new IPv4([240, 0, 0, 0]), 4],
          ],
        };
        IPv4.prototype.range = function () {
          return ipaddr.subnetMatch(this, this.SpecialRanges);
        };
        IPv4.prototype.toIPv4MappedAddress = function () {
          return ipaddr.IPv6.parse('::ffff:' + this.toString());
        };
        IPv4.prototype.prefixLengthFromSubnetMask = function () {
          var cidr, i, k2, octet, stop, zeros, zerotable;
          zerotable = {
            0: 8,
            128: 7,
            192: 6,
            224: 5,
            240: 4,
            248: 3,
            252: 2,
            254: 1,
            255: 0,
          };
          cidr = 0;
          stop = false;
          for (i = k2 = 3; k2 >= 0; i = k2 += -1) {
            octet = this.octets[i];
            if (octet in zerotable) {
              zeros = zerotable[octet];
              if (stop && zeros !== 0) {
                return null;
              }
              if (zeros !== 8) {
                stop = true;
              }
              cidr += zeros;
            } else {
              return null;
            }
          }
          return 32 - cidr;
        };
        return IPv4;
      })();
      ipv4Part = '(0?\\d+|0x[a-f0-9]+)';
      ipv4Regexes = {
        fourOctet: new RegExp(
          '^' +
            ipv4Part +
            '\\.' +
            ipv4Part +
            '\\.' +
            ipv4Part +
            '\\.' +
            ipv4Part +
            '$',
          'i'
        ),
        longValue: new RegExp('^' + ipv4Part + '$', 'i'),
      };
      ipaddr.IPv4.parser = function (string) {
        var match, parseIntAuto, part, shift, value;
        parseIntAuto = function (string2) {
          if (string2[0] === '0' && string2[1] !== 'x') {
            return parseInt(string2, 8);
          } else {
            return parseInt(string2);
          }
        };
        if ((match = string.match(ipv4Regexes.fourOctet))) {
          return (function () {
            var k2, len, ref, results;
            ref = match.slice(1, 6);
            results = [];
            for (k2 = 0, len = ref.length; k2 < len; k2++) {
              part = ref[k2];
              results.push(parseIntAuto(part));
            }
            return results;
          })();
        } else if ((match = string.match(ipv4Regexes.longValue))) {
          value = parseIntAuto(match[1]);
          if (value > 4294967295 || value < 0) {
            throw new Error('ipaddr: address outside defined range');
          }
          return (function () {
            var k2, results;
            results = [];
            for (shift = k2 = 0; k2 <= 24; shift = k2 += 8) {
              results.push((value >> shift) & 255);
            }
            return results;
          })().reverse();
        } else {
          return null;
        }
      };
      ipaddr.IPv6 = (function () {
        function IPv6(parts, zoneId) {
          var i, k2, l2, len, part, ref;
          if (parts.length === 16) {
            this.parts = [];
            for (i = k2 = 0; k2 <= 14; i = k2 += 2) {
              this.parts.push((parts[i] << 8) | parts[i + 1]);
            }
          } else if (parts.length === 8) {
            this.parts = parts;
          } else {
            throw new Error('ipaddr: ipv6 part count should be 8 or 16');
          }
          ref = this.parts;
          for (l2 = 0, len = ref.length; l2 < len; l2++) {
            part = ref[l2];
            if (!(0 <= part && part <= 65535)) {
              throw new Error('ipaddr: ipv6 part should fit in 16 bits');
            }
          }
          if (zoneId) {
            this.zoneId = zoneId;
          }
        }
        IPv6.prototype.kind = function () {
          return 'ipv6';
        };
        IPv6.prototype.toString = function () {
          return this.toNormalizedString().replace(/((^|:)(0(:|$))+)/, '::');
        };
        IPv6.prototype.toRFC5952String = function () {
          var bestMatchIndex, bestMatchLength, match, regex, string;
          regex = /((^|:)(0(:|$)){2,})/g;
          string = this.toNormalizedString();
          bestMatchIndex = 0;
          bestMatchLength = -1;
          while ((match = regex.exec(string))) {
            if (match[0].length > bestMatchLength) {
              bestMatchIndex = match.index;
              bestMatchLength = match[0].length;
            }
          }
          if (bestMatchLength < 0) {
            return string;
          }
          return (
            string.substring(0, bestMatchIndex) +
            '::' +
            string.substring(bestMatchIndex + bestMatchLength)
          );
        };
        IPv6.prototype.toByteArray = function () {
          var bytes, k2, len, part, ref;
          bytes = [];
          ref = this.parts;
          for (k2 = 0, len = ref.length; k2 < len; k2++) {
            part = ref[k2];
            bytes.push(part >> 8);
            bytes.push(part & 255);
          }
          return bytes;
        };
        IPv6.prototype.toNormalizedString = function () {
          var addr, part, suffix;
          addr = function () {
            var k2, len, ref, results;
            ref = this.parts;
            results = [];
            for (k2 = 0, len = ref.length; k2 < len; k2++) {
              part = ref[k2];
              results.push(part.toString(16));
            }
            return results;
          }
            .call(this)
            .join(':');
          suffix = '';
          if (this.zoneId) {
            suffix = '%' + this.zoneId;
          }
          return addr + suffix;
        };
        IPv6.prototype.toFixedLengthString = function () {
          var addr, part, suffix;
          addr = function () {
            var k2, len, ref, results;
            ref = this.parts;
            results = [];
            for (k2 = 0, len = ref.length; k2 < len; k2++) {
              part = ref[k2];
              results.push(part.toString(16).padStart(4, '0'));
            }
            return results;
          }
            .call(this)
            .join(':');
          suffix = '';
          if (this.zoneId) {
            suffix = '%' + this.zoneId;
          }
          return addr + suffix;
        };
        IPv6.prototype.match = function (other, cidrRange) {
          var ref;
          if (cidrRange === void 0) {
            (ref = other), (other = ref[0]), (cidrRange = ref[1]);
          }
          if (other.kind() !== 'ipv6') {
            throw new Error(
              'ipaddr: cannot match ipv6 address with non-ipv6 one'
            );
          }
          return matchCIDR(this.parts, other.parts, 16, cidrRange);
        };
        IPv6.prototype.SpecialRanges = {
          unspecified: [new IPv6([0, 0, 0, 0, 0, 0, 0, 0]), 128],
          linkLocal: [new IPv6([65152, 0, 0, 0, 0, 0, 0, 0]), 10],
          multicast: [new IPv6([65280, 0, 0, 0, 0, 0, 0, 0]), 8],
          loopback: [new IPv6([0, 0, 0, 0, 0, 0, 0, 1]), 128],
          uniqueLocal: [new IPv6([64512, 0, 0, 0, 0, 0, 0, 0]), 7],
          ipv4Mapped: [new IPv6([0, 0, 0, 0, 0, 65535, 0, 0]), 96],
          rfc6145: [new IPv6([0, 0, 0, 0, 65535, 0, 0, 0]), 96],
          rfc6052: [new IPv6([100, 65435, 0, 0, 0, 0, 0, 0]), 96],
          '6to4': [new IPv6([8194, 0, 0, 0, 0, 0, 0, 0]), 16],
          teredo: [new IPv6([8193, 0, 0, 0, 0, 0, 0, 0]), 32],
          reserved: [[new IPv6([8193, 3512, 0, 0, 0, 0, 0, 0]), 32]],
        };
        IPv6.prototype.range = function () {
          return ipaddr.subnetMatch(this, this.SpecialRanges);
        };
        IPv6.prototype.isIPv4MappedAddress = function () {
          return this.range() === 'ipv4Mapped';
        };
        IPv6.prototype.toIPv4Address = function () {
          var high, low, ref;
          if (!this.isIPv4MappedAddress()) {
            throw new Error(
              'ipaddr: trying to convert a generic ipv6 address to ipv4'
            );
          }
          (ref = this.parts.slice(-2)), (high = ref[0]), (low = ref[1]);
          return new ipaddr.IPv4([high >> 8, high & 255, low >> 8, low & 255]);
        };
        IPv6.prototype.prefixLengthFromSubnetMask = function () {
          var cidr, i, k2, part, stop, zeros, zerotable;
          zerotable = {
            0: 16,
            32768: 15,
            49152: 14,
            57344: 13,
            61440: 12,
            63488: 11,
            64512: 10,
            65024: 9,
            65280: 8,
            65408: 7,
            65472: 6,
            65504: 5,
            65520: 4,
            65528: 3,
            65532: 2,
            65534: 1,
            65535: 0,
          };
          cidr = 0;
          stop = false;
          for (i = k2 = 7; k2 >= 0; i = k2 += -1) {
            part = this.parts[i];
            if (part in zerotable) {
              zeros = zerotable[part];
              if (stop && zeros !== 0) {
                return null;
              }
              if (zeros !== 16) {
                stop = true;
              }
              cidr += zeros;
            } else {
              return null;
            }
          }
          return 128 - cidr;
        };
        return IPv6;
      })();
      ipv6Part = '(?:[0-9a-f]+::?)+';
      zoneIndex = '%[0-9a-z]{1,}';
      ipv6Regexes = {
        zoneIndex: new RegExp(zoneIndex, 'i'),
        native: new RegExp(
          '^(::)?(' + ipv6Part + ')?([0-9a-f]+)?(::)?(' + zoneIndex + ')?$',
          'i'
        ),
        transitional: new RegExp(
          '^((?:' +
            ipv6Part +
            ')|(?:::)(?:' +
            ipv6Part +
            ')?)' +
            (ipv4Part +
              '\\.' +
              ipv4Part +
              '\\.' +
              ipv4Part +
              '\\.' +
              ipv4Part) +
            ('(' + zoneIndex + ')?$'),
          'i'
        ),
      };
      expandIPv6 = function (string, parts) {
        var colonCount, lastColon, part, replacement, replacementCount, zoneId;
        if (string.indexOf('::') !== string.lastIndexOf('::')) {
          return null;
        }
        zoneId = (string.match(ipv6Regexes['zoneIndex']) || [])[0];
        if (zoneId) {
          zoneId = zoneId.substring(1);
          string = string.replace(/%.+$/, '');
        }
        colonCount = 0;
        lastColon = -1;
        while ((lastColon = string.indexOf(':', lastColon + 1)) >= 0) {
          colonCount++;
        }
        if (string.substr(0, 2) === '::') {
          colonCount--;
        }
        if (string.substr(-2, 2) === '::') {
          colonCount--;
        }
        if (colonCount > parts) {
          return null;
        }
        replacementCount = parts - colonCount;
        replacement = ':';
        while (replacementCount--) {
          replacement += '0:';
        }
        string = string.replace('::', replacement);
        if (string[0] === ':') {
          string = string.slice(1);
        }
        if (string[string.length - 1] === ':') {
          string = string.slice(0, -1);
        }
        parts = (function () {
          var k2, len, ref, results;
          ref = string.split(':');
          results = [];
          for (k2 = 0, len = ref.length; k2 < len; k2++) {
            part = ref[k2];
            results.push(parseInt(part, 16));
          }
          return results;
        })();
        return {
          parts,
          zoneId,
        };
      };
      ipaddr.IPv6.parser = function (string) {
        var addr, k2, len, match, octet, octets, zoneId;
        if (ipv6Regexes['native'].test(string)) {
          return expandIPv6(string, 8);
        } else if ((match = string.match(ipv6Regexes['transitional']))) {
          zoneId = match[6] || '';
          addr = expandIPv6(match[1].slice(0, -1) + zoneId, 6);
          if (addr.parts) {
            octets = [
              parseInt(match[2]),
              parseInt(match[3]),
              parseInt(match[4]),
              parseInt(match[5]),
            ];
            for (k2 = 0, len = octets.length; k2 < len; k2++) {
              octet = octets[k2];
              if (!(0 <= octet && octet <= 255)) {
                return null;
              }
            }
            addr.parts.push((octets[0] << 8) | octets[1]);
            addr.parts.push((octets[2] << 8) | octets[3]);
            return {
              parts: addr.parts,
              zoneId: addr.zoneId,
            };
          }
        }
        return null;
      };
      ipaddr.IPv4.isIPv4 = ipaddr.IPv6.isIPv6 = function (string) {
        return this.parser(string) !== null;
      };
      ipaddr.IPv4.isValid = function (string) {
        var e2;
        try {
          new this(this.parser(string));
          return true;
        } catch (error1) {
          e2 = error1;
          return false;
        }
      };
      ipaddr.IPv4.isValidFourPartDecimal = function (string) {
        if (
          ipaddr.IPv4.isValid(string) &&
          string.match(/^(0|[1-9]\d*)(\.(0|[1-9]\d*)){3}$/)
        ) {
          return true;
        } else {
          return false;
        }
      };
      ipaddr.IPv6.isValid = function (string) {
        var addr, e2;
        if (typeof string === 'string' && string.indexOf(':') === -1) {
          return false;
        }
        try {
          addr = this.parser(string);
          new this(addr.parts, addr.zoneId);
          return true;
        } catch (error1) {
          e2 = error1;
          return false;
        }
      };
      ipaddr.IPv4.parse = function (string) {
        var parts;
        parts = this.parser(string);
        if (parts === null) {
          throw new Error('ipaddr: string is not formatted like ip address');
        }
        return new this(parts);
      };
      ipaddr.IPv6.parse = function (string) {
        var addr;
        addr = this.parser(string);
        if (addr.parts === null) {
          throw new Error('ipaddr: string is not formatted like ip address');
        }
        return new this(addr.parts, addr.zoneId);
      };
      ipaddr.IPv4.parseCIDR = function (string) {
        var maskLength, match, parsed;
        if ((match = string.match(/^(.+)\/(\d+)$/))) {
          maskLength = parseInt(match[2]);
          if (maskLength >= 0 && maskLength <= 32) {
            parsed = [this.parse(match[1]), maskLength];
            Object.defineProperty(parsed, 'toString', {
              value: function () {
                return this.join('/');
              },
            });
            return parsed;
          }
        }
        throw new Error(
          'ipaddr: string is not formatted like an IPv4 CIDR range'
        );
      };
      ipaddr.IPv4.subnetMaskFromPrefixLength = function (prefix) {
        var filledOctetCount, j2, octets;
        prefix = parseInt(prefix);
        if (prefix < 0 || prefix > 32) {
          throw new Error('ipaddr: invalid IPv4 prefix length');
        }
        octets = [0, 0, 0, 0];
        j2 = 0;
        filledOctetCount = Math.floor(prefix / 8);
        while (j2 < filledOctetCount) {
          octets[j2] = 255;
          j2++;
        }
        if (filledOctetCount < 4) {
          octets[filledOctetCount] =
            (Math.pow(2, prefix % 8) - 1) << (8 - (prefix % 8));
        }
        return new this(octets);
      };
      ipaddr.IPv4.broadcastAddressFromCIDR = function (string) {
        var cidr, error, i, ipInterfaceOctets, octets, subnetMaskOctets;
        try {
          cidr = this.parseCIDR(string);
          ipInterfaceOctets = cidr[0].toByteArray();
          subnetMaskOctets = this.subnetMaskFromPrefixLength(
            cidr[1]
          ).toByteArray();
          octets = [];
          i = 0;
          while (i < 4) {
            octets.push(
              parseInt(ipInterfaceOctets[i], 10) |
                (parseInt(subnetMaskOctets[i], 10) ^ 255)
            );
            i++;
          }
          return new this(octets);
        } catch (error1) {
          error = error1;
          throw new Error('ipaddr: the address does not have IPv4 CIDR format');
        }
      };
      ipaddr.IPv4.networkAddressFromCIDR = function (string) {
        var cidr, error, i, ipInterfaceOctets, octets, subnetMaskOctets;
        try {
          cidr = this.parseCIDR(string);
          ipInterfaceOctets = cidr[0].toByteArray();
          subnetMaskOctets = this.subnetMaskFromPrefixLength(
            cidr[1]
          ).toByteArray();
          octets = [];
          i = 0;
          while (i < 4) {
            octets.push(
              parseInt(ipInterfaceOctets[i], 10) &
                parseInt(subnetMaskOctets[i], 10)
            );
            i++;
          }
          return new this(octets);
        } catch (error1) {
          error = error1;
          throw new Error('ipaddr: the address does not have IPv4 CIDR format');
        }
      };
      ipaddr.IPv6.parseCIDR = function (string) {
        var maskLength, match, parsed;
        if ((match = string.match(/^(.+)\/(\d+)$/))) {
          maskLength = parseInt(match[2]);
          if (maskLength >= 0 && maskLength <= 128) {
            parsed = [this.parse(match[1]), maskLength];
            Object.defineProperty(parsed, 'toString', {
              value: function () {
                return this.join('/');
              },
            });
            return parsed;
          }
        }
        throw new Error(
          'ipaddr: string is not formatted like an IPv6 CIDR range'
        );
      };
      ipaddr.isValid = function (string) {
        return ipaddr.IPv6.isValid(string) || ipaddr.IPv4.isValid(string);
      };
      ipaddr.parse = function (string) {
        if (ipaddr.IPv6.isValid(string)) {
          return ipaddr.IPv6.parse(string);
        } else if (ipaddr.IPv4.isValid(string)) {
          return ipaddr.IPv4.parse(string);
        } else {
          throw new Error(
            'ipaddr: the address has neither IPv6 nor IPv4 format'
          );
        }
      };
      ipaddr.parseCIDR = function (string) {
        var e2;
        try {
          return ipaddr.IPv6.parseCIDR(string);
        } catch (error1) {
          e2 = error1;
          try {
            return ipaddr.IPv4.parseCIDR(string);
          } catch (error12) {
            e2 = error12;
            throw new Error(
              'ipaddr: the address has neither IPv6 nor IPv4 CIDR format'
            );
          }
        }
      };
      ipaddr.fromByteArray = function (bytes) {
        var length;
        length = bytes.length;
        if (length === 4) {
          return new ipaddr.IPv4(bytes);
        } else if (length === 16) {
          return new ipaddr.IPv6(bytes);
        } else {
          throw new Error(
            'ipaddr: the binary input is neither an IPv6 nor IPv4 address'
          );
        }
      };
      ipaddr.process = function (string) {
        var addr;
        addr = this.parse(string);
        if (addr.kind() === 'ipv6' && addr.isIPv4MappedAddress()) {
          return addr.toIPv4Address();
        } else {
          return addr;
        }
      };
    }).call(exports2);
  },
});

// ../../node_modules/proxy-addr/index.js
var require_proxy_addr = __commonJS({
  '../../node_modules/proxy-addr/index.js'(exports2, module2) {
    'use strict';
    module2.exports = proxyaddr;
    module2.exports.all = alladdrs;
    module2.exports.compile = compile2;
    var forwarded = require_forwarded();
    var ipaddr = require_ipaddr();
    var DIGIT_REGEXP = /^[0-9]+$/;
    var isip = ipaddr.isValid;
    var parseip = ipaddr.parse;
    var IP_RANGES = {
      linklocal: ['169.254.0.0/16', 'fe80::/10'],
      loopback: ['127.0.0.1/8', '::1/128'],
      uniquelocal: [
        '10.0.0.0/8',
        '172.16.0.0/12',
        '192.168.0.0/16',
        'fc00::/7',
      ],
    };
    function alladdrs(req, trust) {
      var addrs = forwarded(req);
      if (!trust) {
        return addrs;
      }
      if (typeof trust !== 'function') {
        trust = compile2(trust);
      }
      for (var i = 0; i < addrs.length - 1; i++) {
        if (trust(addrs[i], i)) continue;
        addrs.length = i + 1;
      }
      return addrs;
    }
    function compile2(val) {
      if (!val) {
        throw new TypeError('argument is required');
      }
      var trust;
      if (typeof val === 'string') {
        trust = [val];
      } else if (Array.isArray(val)) {
        trust = val.slice();
      } else {
        throw new TypeError('unsupported trust argument');
      }
      for (var i = 0; i < trust.length; i++) {
        val = trust[i];
        if (!Object.prototype.hasOwnProperty.call(IP_RANGES, val)) {
          continue;
        }
        val = IP_RANGES[val];
        trust.splice.apply(trust, [i, 1].concat(val));
        i += val.length - 1;
      }
      return compileTrust(compileRangeSubnets(trust));
    }
    function compileRangeSubnets(arr) {
      var rangeSubnets = new Array(arr.length);
      for (var i = 0; i < arr.length; i++) {
        rangeSubnets[i] = parseipNotation(arr[i]);
      }
      return rangeSubnets;
    }
    function compileTrust(rangeSubnets) {
      var len = rangeSubnets.length;
      return len === 0
        ? trustNone
        : len === 1
        ? trustSingle(rangeSubnets[0])
        : trustMulti(rangeSubnets);
    }
    function parseipNotation(note) {
      var pos = note.lastIndexOf('/');
      var str = pos !== -1 ? note.substring(0, pos) : note;
      if (!isip(str)) {
        throw new TypeError('invalid IP address: ' + str);
      }
      var ip2 = parseip(str);
      if (pos === -1 && ip2.kind() === 'ipv6' && ip2.isIPv4MappedAddress()) {
        ip2 = ip2.toIPv4Address();
      }
      var max = ip2.kind() === 'ipv6' ? 128 : 32;
      var range = pos !== -1 ? note.substring(pos + 1, note.length) : null;
      if (range === null) {
        range = max;
      } else if (DIGIT_REGEXP.test(range)) {
        range = parseInt(range, 10);
      } else if (ip2.kind() === 'ipv4' && isip(range)) {
        range = parseNetmask(range);
      } else {
        range = null;
      }
      if (range <= 0 || range > max) {
        throw new TypeError('invalid range on address: ' + note);
      }
      return [ip2, range];
    }
    function parseNetmask(netmask) {
      var ip2 = parseip(netmask);
      var kind = ip2.kind();
      return kind === 'ipv4' ? ip2.prefixLengthFromSubnetMask() : null;
    }
    function proxyaddr(req, trust) {
      if (!req) {
        throw new TypeError('req argument is required');
      }
      if (!trust) {
        throw new TypeError('trust argument is required');
      }
      var addrs = alladdrs(req, trust);
      var addr = addrs[addrs.length - 1];
      return addr;
    }
    function trustNone() {
      return false;
    }
    function trustMulti(subnets) {
      return function trust(addr) {
        if (!isip(addr)) return false;
        var ip2 = parseip(addr);
        var ipconv;
        var kind = ip2.kind();
        for (var i = 0; i < subnets.length; i++) {
          var subnet = subnets[i];
          var subnetip = subnet[0];
          var subnetkind = subnetip.kind();
          var subnetrange = subnet[1];
          var trusted = ip2;
          if (kind !== subnetkind) {
            if (subnetkind === 'ipv4' && !ip2.isIPv4MappedAddress()) {
              continue;
            }
            if (!ipconv) {
              ipconv =
                subnetkind === 'ipv4'
                  ? ip2.toIPv4Address()
                  : ip2.toIPv4MappedAddress();
            }
            trusted = ipconv;
          }
          if (trusted.match(subnetip, subnetrange)) {
            return true;
          }
        }
        return false;
      };
    }
    function trustSingle(subnet) {
      var subnetip = subnet[0];
      var subnetkind = subnetip.kind();
      var subnetisipv4 = subnetkind === 'ipv4';
      var subnetrange = subnet[1];
      return function trust(addr) {
        if (!isip(addr)) return false;
        var ip2 = parseip(addr);
        var kind = ip2.kind();
        if (kind !== subnetkind) {
          if (subnetisipv4 && !ip2.isIPv4MappedAddress()) {
            return false;
          }
          ip2 = subnetisipv4 ? ip2.toIPv4Address() : ip2.toIPv4MappedAddress();
        }
        return ip2.match(subnetip, subnetrange);
      };
    }
  },
});

// ../../node_modules/express/lib/utils.js
var require_utils2 = __commonJS({
  '../../node_modules/express/lib/utils.js'(exports2) {
    'use strict';
    var Buffer2 = require_safe_buffer().Buffer;
    var contentDisposition = require_content_disposition();
    var contentType = require_content_type();
    var deprecate = require_depd()('express');
    var flatten2 = require_array_flatten();
    var mime = require_send().mime;
    var etag = require_etag();
    var proxyaddr = require_proxy_addr();
    var qs2 = require_lib2();
    var querystring = require('querystring');
    exports2.etag = createETagGenerator({ weak: false });
    exports2.wetag = createETagGenerator({ weak: true });
    exports2.isAbsolute = function (path) {
      if ('/' === path[0]) return true;
      if (':' === path[1] && ('\\' === path[2] || '/' === path[2])) return true;
      if ('\\\\' === path.substring(0, 2)) return true;
    };
    exports2.flatten = deprecate.function(
      flatten2,
      'utils.flatten: use array-flatten npm module instead'
    );
    exports2.normalizeType = function (type) {
      return ~type.indexOf('/')
        ? acceptParams(type)
        : { value: mime.lookup(type), params: {} };
    };
    exports2.normalizeTypes = function (types) {
      var ret = [];
      for (var i = 0; i < types.length; ++i) {
        ret.push(exports2.normalizeType(types[i]));
      }
      return ret;
    };
    exports2.contentDisposition = deprecate.function(
      contentDisposition,
      'utils.contentDisposition: use content-disposition npm module instead'
    );
    function acceptParams(str, index) {
      var parts = str.split(/ *; */);
      var ret = {
        value: parts[0],
        quality: 1,
        params: {},
        originalIndex: index,
      };
      for (var i = 1; i < parts.length; ++i) {
        var pms = parts[i].split(/ *= */);
        if ('q' === pms[0]) {
          ret.quality = parseFloat(pms[1]);
        } else {
          ret.params[pms[0]] = pms[1];
        }
      }
      return ret;
    }
    exports2.compileETag = function (val) {
      var fn;
      if (typeof val === 'function') {
        return val;
      }
      switch (val) {
        case true:
        case 'weak':
          fn = exports2.wetag;
          break;
        case false:
          break;
        case 'strong':
          fn = exports2.etag;
          break;
        default:
          throw new TypeError('unknown value for etag function: ' + val);
      }
      return fn;
    };
    exports2.compileQueryParser = function compileQueryParser(val) {
      var fn;
      if (typeof val === 'function') {
        return val;
      }
      switch (val) {
        case true:
        case 'simple':
          fn = querystring.parse;
          break;
        case false:
          fn = newObject;
          break;
        case 'extended':
          fn = parseExtendedQueryString;
          break;
        default:
          throw new TypeError(
            'unknown value for query parser function: ' + val
          );
      }
      return fn;
    };
    exports2.compileTrust = function (val) {
      if (typeof val === 'function') return val;
      if (val === true) {
        return function () {
          return true;
        };
      }
      if (typeof val === 'number') {
        return function (a, i) {
          return i < val;
        };
      }
      if (typeof val === 'string') {
        val = val.split(',').map(function (v) {
          return v.trim();
        });
      }
      return proxyaddr.compile(val || []);
    };
    exports2.setCharset = function setCharset(type, charset) {
      if (!type || !charset) {
        return type;
      }
      var parsed = contentType.parse(type);
      parsed.parameters.charset = charset;
      return contentType.format(parsed);
    };
    function createETagGenerator(options) {
      return function generateETag(body, encoding) {
        var buf = !Buffer2.isBuffer(body) ? Buffer2.from(body, encoding) : body;
        return etag(buf, options);
      };
    }
    function parseExtendedQueryString(str) {
      return qs2.parse(str, {
        allowPrototypes: true,
      });
    }
    function newObject() {
      return {};
    }
  },
});

// ../../node_modules/express/lib/application.js
var require_application = __commonJS({
  '../../node_modules/express/lib/application.js'(exports2, module2) {
    'use strict';
    var finalhandler = require_finalhandler();
    var Router = require_router();
    var methods = require_methods();
    var middleware = require_init();
    var query = require_query();
    var debug2 = require_src4()('express:application');
    var View = require_view();
    var http = require('http');
    var compileETag = require_utils2().compileETag;
    var compileQueryParser = require_utils2().compileQueryParser;
    var compileTrust = require_utils2().compileTrust;
    var deprecate = require_depd()('express');
    var flatten2 = require_array_flatten();
    var merge2 = require_utils_merge();
    var resolve = require('path').resolve;
    var setPrototypeOf = require_setprototypeof();
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var slice = Array.prototype.slice;
    var app2 = (exports2 = module2.exports = {});
    var trustProxyDefaultSymbol = '@@symbol:trust_proxy_default';
    app2.init = function init() {
      this.cache = {};
      this.engines = {};
      this.settings = {};
      this.defaultConfiguration();
    };
    app2.defaultConfiguration = function defaultConfiguration() {
      var env2 = process.env.NODE_ENV || 'development';
      this.enable('x-powered-by');
      this.set('etag', 'weak');
      this.set('env', env2);
      this.set('query parser', 'extended');
      this.set('subdomain offset', 2);
      this.set('trust proxy', false);
      Object.defineProperty(this.settings, trustProxyDefaultSymbol, {
        configurable: true,
        value: true,
      });
      debug2('booting in %s mode', env2);
      this.on('mount', function onmount(parent) {
        if (
          this.settings[trustProxyDefaultSymbol] === true &&
          typeof parent.settings['trust proxy fn'] === 'function'
        ) {
          delete this.settings['trust proxy'];
          delete this.settings['trust proxy fn'];
        }
        setPrototypeOf(this.request, parent.request);
        setPrototypeOf(this.response, parent.response);
        setPrototypeOf(this.engines, parent.engines);
        setPrototypeOf(this.settings, parent.settings);
      });
      this.locals = /* @__PURE__ */ Object.create(null);
      this.mountpath = '/';
      this.locals.settings = this.settings;
      this.set('view', View);
      this.set('views', resolve('views'));
      this.set('jsonp callback name', 'callback');
      if (env2 === 'production') {
        this.enable('view cache');
      }
      Object.defineProperty(this, 'router', {
        get: function () {
          throw new Error(
            "'app.router' is deprecated!\nPlease see the 3.x to 4.x migration guide for details on how to update your app."
          );
        },
      });
    };
    app2.lazyrouter = function lazyrouter() {
      if (!this._router) {
        this._router = new Router({
          caseSensitive: this.enabled('case sensitive routing'),
          strict: this.enabled('strict routing'),
        });
        this._router.use(query(this.get('query parser fn')));
        this._router.use(middleware.init(this));
      }
    };
    app2.handle = function handle(req, res, callback) {
      var router = this._router;
      var done =
        callback ||
        finalhandler(req, res, {
          env: this.get('env'),
          onerror: logerror.bind(this),
        });
      if (!router) {
        debug2('no routes defined on app');
        done();
        return;
      }
      router.handle(req, res, done);
    };
    app2.use = function use(fn) {
      var offset = 0;
      var path = '/';
      if (typeof fn !== 'function') {
        var arg = fn;
        while (Array.isArray(arg) && arg.length !== 0) {
          arg = arg[0];
        }
        if (typeof arg !== 'function') {
          offset = 1;
          path = fn;
        }
      }
      var fns = flatten2(slice.call(arguments, offset));
      if (fns.length === 0) {
        throw new TypeError('app.use() requires a middleware function');
      }
      this.lazyrouter();
      var router = this._router;
      fns.forEach(function (fn2) {
        if (!fn2 || !fn2.handle || !fn2.set) {
          return router.use(path, fn2);
        }
        debug2('.use app under %s', path);
        fn2.mountpath = path;
        fn2.parent = this;
        router.use(path, function mounted_app(req, res, next) {
          var orig = req.app;
          fn2.handle(req, res, function (err) {
            setPrototypeOf(req, orig.request);
            setPrototypeOf(res, orig.response);
            next(err);
          });
        });
        fn2.emit('mount', this);
      }, this);
      return this;
    };
    app2.route = function route(path) {
      this.lazyrouter();
      return this._router.route(path);
    };
    app2.engine = function engine(ext, fn) {
      if (typeof fn !== 'function') {
        throw new Error('callback function required');
      }
      var extension = ext[0] !== '.' ? '.' + ext : ext;
      this.engines[extension] = fn;
      return this;
    };
    app2.param = function param(name, fn) {
      this.lazyrouter();
      if (Array.isArray(name)) {
        for (var i = 0; i < name.length; i++) {
          this.param(name[i], fn);
        }
        return this;
      }
      this._router.param(name, fn);
      return this;
    };
    app2.set = function set(setting, val) {
      if (arguments.length === 1) {
        var settings = this.settings;
        while (settings && settings !== Object.prototype) {
          if (hasOwnProperty.call(settings, setting)) {
            return settings[setting];
          }
          settings = Object.getPrototypeOf(settings);
        }
        return void 0;
      }
      debug2('set "%s" to %o', setting, val);
      this.settings[setting] = val;
      switch (setting) {
        case 'etag':
          this.set('etag fn', compileETag(val));
          break;
        case 'query parser':
          this.set('query parser fn', compileQueryParser(val));
          break;
        case 'trust proxy':
          this.set('trust proxy fn', compileTrust(val));
          Object.defineProperty(this.settings, trustProxyDefaultSymbol, {
            configurable: true,
            value: false,
          });
          break;
      }
      return this;
    };
    app2.path = function path() {
      return this.parent ? this.parent.path() + this.mountpath : '';
    };
    app2.enabled = function enabled(setting) {
      return Boolean(this.set(setting));
    };
    app2.disabled = function disabled(setting) {
      return !this.set(setting);
    };
    app2.enable = function enable(setting) {
      return this.set(setting, true);
    };
    app2.disable = function disable(setting) {
      return this.set(setting, false);
    };
    methods.forEach(function (method) {
      app2[method] = function (path) {
        if (method === 'get' && arguments.length === 1) {
          return this.set(path);
        }
        this.lazyrouter();
        var route = this._router.route(path);
        route[method].apply(route, slice.call(arguments, 1));
        return this;
      };
    });
    app2.all = function all2(path) {
      this.lazyrouter();
      var route = this._router.route(path);
      var args = slice.call(arguments, 1);
      for (var i = 0; i < methods.length; i++) {
        route[methods[i]].apply(route, args);
      }
      return this;
    };
    app2.del = deprecate.function(
      app2.delete,
      'app.del: Use app.delete instead'
    );
    app2.render = function render3(name, options, callback) {
      var cache = this.cache;
      var done = callback;
      var engines = this.engines;
      var opts = options;
      var renderOptions = {};
      var view;
      if (typeof options === 'function') {
        done = options;
        opts = {};
      }
      merge2(renderOptions, this.locals);
      if (opts._locals) {
        merge2(renderOptions, opts._locals);
      }
      merge2(renderOptions, opts);
      if (renderOptions.cache == null) {
        renderOptions.cache = this.enabled('view cache');
      }
      if (renderOptions.cache) {
        view = cache[name];
      }
      if (!view) {
        var View2 = this.get('view');
        view = new View2(name, {
          defaultEngine: this.get('view engine'),
          root: this.get('views'),
          engines,
        });
        if (!view.path) {
          var dirs =
            Array.isArray(view.root) && view.root.length > 1
              ? 'directories "' +
                view.root.slice(0, -1).join('", "') +
                '" or "' +
                view.root[view.root.length - 1] +
                '"'
              : 'directory "' + view.root + '"';
          var err = new Error(
            'Failed to lookup view "' + name + '" in views ' + dirs
          );
          err.view = view;
          return done(err);
        }
        if (renderOptions.cache) {
          cache[name] = view;
        }
      }
      tryRender(view, renderOptions, done);
    };
    app2.listen = function listen() {
      var server = http.createServer(this);
      return server.listen.apply(server, arguments);
    };
    function logerror(err) {
      if (this.get('env') !== 'test')
        console.error(err.stack || err.toString());
    }
    function tryRender(view, options, callback) {
      try {
        view.render(options, callback);
      } catch (err) {
        callback(err);
      }
    }
  },
});

// ../../node_modules/negotiator/lib/charset.js
var require_charset = __commonJS({
  '../../node_modules/negotiator/lib/charset.js'(exports2, module2) {
    'use strict';
    module2.exports = preferredCharsets;
    module2.exports.preferredCharsets = preferredCharsets;
    var simpleCharsetRegExp = /^\s*([^\s;]+)\s*(?:;(.*))?$/;
    function parseAcceptCharset(accept) {
      var accepts = accept.split(',');
      for (var i = 0, j2 = 0; i < accepts.length; i++) {
        var charset = parseCharset(accepts[i].trim(), i);
        if (charset) {
          accepts[j2++] = charset;
        }
      }
      accepts.length = j2;
      return accepts;
    }
    function parseCharset(str, i) {
      var match = simpleCharsetRegExp.exec(str);
      if (!match) return null;
      var charset = match[1];
      var q = 1;
      if (match[2]) {
        var params = match[2].split(';');
        for (var j2 = 0; j2 < params.length; j2++) {
          var p = params[j2].trim().split('=');
          if (p[0] === 'q') {
            q = parseFloat(p[1]);
            break;
          }
        }
      }
      return {
        charset,
        q,
        i,
      };
    }
    function getCharsetPriority(charset, accepted, index) {
      var priority = { o: -1, q: 0, s: 0 };
      for (var i = 0; i < accepted.length; i++) {
        var spec = specify(charset, accepted[i], index);
        if (
          spec &&
          (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) <
            0
        ) {
          priority = spec;
        }
      }
      return priority;
    }
    function specify(charset, spec, index) {
      var s2 = 0;
      if (spec.charset.toLowerCase() === charset.toLowerCase()) {
        s2 |= 1;
      } else if (spec.charset !== '*') {
        return null;
      }
      return {
        i: index,
        o: spec.i,
        q: spec.q,
        s: s2,
      };
    }
    function preferredCharsets(accept, provided) {
      var accepts = parseAcceptCharset(accept === void 0 ? '*' : accept || '');
      if (!provided) {
        return accepts.filter(isQuality).sort(compareSpecs).map(getFullCharset);
      }
      var priorities = provided.map(function getPriority(type, index) {
        return getCharsetPriority(type, accepts, index);
      });
      return priorities
        .filter(isQuality)
        .sort(compareSpecs)
        .map(function getCharset(priority) {
          return provided[priorities.indexOf(priority)];
        });
    }
    function compareSpecs(a, b) {
      return b.q - a.q || b.s - a.s || a.o - b.o || a.i - b.i || 0;
    }
    function getFullCharset(spec) {
      return spec.charset;
    }
    function isQuality(spec) {
      return spec.q > 0;
    }
  },
});

// ../../node_modules/negotiator/lib/encoding.js
var require_encoding = __commonJS({
  '../../node_modules/negotiator/lib/encoding.js'(exports2, module2) {
    'use strict';
    module2.exports = preferredEncodings;
    module2.exports.preferredEncodings = preferredEncodings;
    var simpleEncodingRegExp = /^\s*([^\s;]+)\s*(?:;(.*))?$/;
    function parseAcceptEncoding(accept) {
      var accepts = accept.split(',');
      var hasIdentity = false;
      var minQuality = 1;
      for (var i = 0, j2 = 0; i < accepts.length; i++) {
        var encoding = parseEncoding(accepts[i].trim(), i);
        if (encoding) {
          accepts[j2++] = encoding;
          hasIdentity = hasIdentity || specify('identity', encoding);
          minQuality = Math.min(minQuality, encoding.q || 1);
        }
      }
      if (!hasIdentity) {
        accepts[j2++] = {
          encoding: 'identity',
          q: minQuality,
          i,
        };
      }
      accepts.length = j2;
      return accepts;
    }
    function parseEncoding(str, i) {
      var match = simpleEncodingRegExp.exec(str);
      if (!match) return null;
      var encoding = match[1];
      var q = 1;
      if (match[2]) {
        var params = match[2].split(';');
        for (var j2 = 0; j2 < params.length; j2++) {
          var p = params[j2].trim().split('=');
          if (p[0] === 'q') {
            q = parseFloat(p[1]);
            break;
          }
        }
      }
      return {
        encoding,
        q,
        i,
      };
    }
    function getEncodingPriority(encoding, accepted, index) {
      var priority = { o: -1, q: 0, s: 0 };
      for (var i = 0; i < accepted.length; i++) {
        var spec = specify(encoding, accepted[i], index);
        if (
          spec &&
          (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) <
            0
        ) {
          priority = spec;
        }
      }
      return priority;
    }
    function specify(encoding, spec, index) {
      var s2 = 0;
      if (spec.encoding.toLowerCase() === encoding.toLowerCase()) {
        s2 |= 1;
      } else if (spec.encoding !== '*') {
        return null;
      }
      return {
        i: index,
        o: spec.i,
        q: spec.q,
        s: s2,
      };
    }
    function preferredEncodings(accept, provided) {
      var accepts = parseAcceptEncoding(accept || '');
      if (!provided) {
        return accepts
          .filter(isQuality)
          .sort(compareSpecs)
          .map(getFullEncoding);
      }
      var priorities = provided.map(function getPriority(type, index) {
        return getEncodingPriority(type, accepts, index);
      });
      return priorities
        .filter(isQuality)
        .sort(compareSpecs)
        .map(function getEncoding(priority) {
          return provided[priorities.indexOf(priority)];
        });
    }
    function compareSpecs(a, b) {
      return b.q - a.q || b.s - a.s || a.o - b.o || a.i - b.i || 0;
    }
    function getFullEncoding(spec) {
      return spec.encoding;
    }
    function isQuality(spec) {
      return spec.q > 0;
    }
  },
});

// ../../node_modules/negotiator/lib/language.js
var require_language = __commonJS({
  '../../node_modules/negotiator/lib/language.js'(exports2, module2) {
    'use strict';
    module2.exports = preferredLanguages;
    module2.exports.preferredLanguages = preferredLanguages;
    var simpleLanguageRegExp = /^\s*([^\s\-;]+)(?:-([^\s;]+))?\s*(?:;(.*))?$/;
    function parseAcceptLanguage(accept) {
      var accepts = accept.split(',');
      for (var i = 0, j2 = 0; i < accepts.length; i++) {
        var language = parseLanguage(accepts[i].trim(), i);
        if (language) {
          accepts[j2++] = language;
        }
      }
      accepts.length = j2;
      return accepts;
    }
    function parseLanguage(str, i) {
      var match = simpleLanguageRegExp.exec(str);
      if (!match) return null;
      var prefix = match[1];
      var suffix = match[2];
      var full = prefix;
      if (suffix) full += '-' + suffix;
      var q = 1;
      if (match[3]) {
        var params = match[3].split(';');
        for (var j2 = 0; j2 < params.length; j2++) {
          var p = params[j2].split('=');
          if (p[0] === 'q') q = parseFloat(p[1]);
        }
      }
      return {
        prefix,
        suffix,
        q,
        i,
        full,
      };
    }
    function getLanguagePriority(language, accepted, index) {
      var priority = { o: -1, q: 0, s: 0 };
      for (var i = 0; i < accepted.length; i++) {
        var spec = specify(language, accepted[i], index);
        if (
          spec &&
          (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) <
            0
        ) {
          priority = spec;
        }
      }
      return priority;
    }
    function specify(language, spec, index) {
      var p = parseLanguage(language);
      if (!p) return null;
      var s2 = 0;
      if (spec.full.toLowerCase() === p.full.toLowerCase()) {
        s2 |= 4;
      } else if (spec.prefix.toLowerCase() === p.full.toLowerCase()) {
        s2 |= 2;
      } else if (spec.full.toLowerCase() === p.prefix.toLowerCase()) {
        s2 |= 1;
      } else if (spec.full !== '*') {
        return null;
      }
      return {
        i: index,
        o: spec.i,
        q: spec.q,
        s: s2,
      };
    }
    function preferredLanguages(accept, provided) {
      var accepts = parseAcceptLanguage(accept === void 0 ? '*' : accept || '');
      if (!provided) {
        return accepts
          .filter(isQuality)
          .sort(compareSpecs)
          .map(getFullLanguage);
      }
      var priorities = provided.map(function getPriority(type, index) {
        return getLanguagePriority(type, accepts, index);
      });
      return priorities
        .filter(isQuality)
        .sort(compareSpecs)
        .map(function getLanguage(priority) {
          return provided[priorities.indexOf(priority)];
        });
    }
    function compareSpecs(a, b) {
      return b.q - a.q || b.s - a.s || a.o - b.o || a.i - b.i || 0;
    }
    function getFullLanguage(spec) {
      return spec.full;
    }
    function isQuality(spec) {
      return spec.q > 0;
    }
  },
});

// ../../node_modules/negotiator/lib/mediaType.js
var require_mediaType = __commonJS({
  '../../node_modules/negotiator/lib/mediaType.js'(exports2, module2) {
    'use strict';
    module2.exports = preferredMediaTypes;
    module2.exports.preferredMediaTypes = preferredMediaTypes;
    var simpleMediaTypeRegExp = /^\s*([^\s\/;]+)\/([^;\s]+)\s*(?:;(.*))?$/;
    function parseAccept(accept) {
      var accepts = splitMediaTypes(accept);
      for (var i = 0, j2 = 0; i < accepts.length; i++) {
        var mediaType = parseMediaType(accepts[i].trim(), i);
        if (mediaType) {
          accepts[j2++] = mediaType;
        }
      }
      accepts.length = j2;
      return accepts;
    }
    function parseMediaType(str, i) {
      var match = simpleMediaTypeRegExp.exec(str);
      if (!match) return null;
      var params = /* @__PURE__ */ Object.create(null);
      var q = 1;
      var subtype = match[2];
      var type = match[1];
      if (match[3]) {
        var kvps = splitParameters(match[3]).map(splitKeyValuePair);
        for (var j2 = 0; j2 < kvps.length; j2++) {
          var pair = kvps[j2];
          var key = pair[0].toLowerCase();
          var val = pair[1];
          var value =
            val && val[0] === '"' && val[val.length - 1] === '"'
              ? val.substr(1, val.length - 2)
              : val;
          if (key === 'q') {
            q = parseFloat(value);
            break;
          }
          params[key] = value;
        }
      }
      return {
        type,
        subtype,
        params,
        q,
        i,
      };
    }
    function getMediaTypePriority(type, accepted, index) {
      var priority = { o: -1, q: 0, s: 0 };
      for (var i = 0; i < accepted.length; i++) {
        var spec = specify(type, accepted[i], index);
        if (
          spec &&
          (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) <
            0
        ) {
          priority = spec;
        }
      }
      return priority;
    }
    function specify(type, spec, index) {
      var p = parseMediaType(type);
      var s2 = 0;
      if (!p) {
        return null;
      }
      if (spec.type.toLowerCase() == p.type.toLowerCase()) {
        s2 |= 4;
      } else if (spec.type != '*') {
        return null;
      }
      if (spec.subtype.toLowerCase() == p.subtype.toLowerCase()) {
        s2 |= 2;
      } else if (spec.subtype != '*') {
        return null;
      }
      var keys = Object.keys(spec.params);
      if (keys.length > 0) {
        if (
          keys.every(function (k2) {
            return (
              spec.params[k2] == '*' ||
              (spec.params[k2] || '').toLowerCase() ==
                (p.params[k2] || '').toLowerCase()
            );
          })
        ) {
          s2 |= 1;
        } else {
          return null;
        }
      }
      return {
        i: index,
        o: spec.i,
        q: spec.q,
        s: s2,
      };
    }
    function preferredMediaTypes(accept, provided) {
      var accepts = parseAccept(accept === void 0 ? '*/*' : accept || '');
      if (!provided) {
        return accepts.filter(isQuality).sort(compareSpecs).map(getFullType);
      }
      var priorities = provided.map(function getPriority(type, index) {
        return getMediaTypePriority(type, accepts, index);
      });
      return priorities
        .filter(isQuality)
        .sort(compareSpecs)
        .map(function getType(priority) {
          return provided[priorities.indexOf(priority)];
        });
    }
    function compareSpecs(a, b) {
      return b.q - a.q || b.s - a.s || a.o - b.o || a.i - b.i || 0;
    }
    function getFullType(spec) {
      return spec.type + '/' + spec.subtype;
    }
    function isQuality(spec) {
      return spec.q > 0;
    }
    function quoteCount(string) {
      var count = 0;
      var index = 0;
      while ((index = string.indexOf('"', index)) !== -1) {
        count++;
        index++;
      }
      return count;
    }
    function splitKeyValuePair(str) {
      var index = str.indexOf('=');
      var key;
      var val;
      if (index === -1) {
        key = str;
      } else {
        key = str.substr(0, index);
        val = str.substr(index + 1);
      }
      return [key, val];
    }
    function splitMediaTypes(accept) {
      var accepts = accept.split(',');
      for (var i = 1, j2 = 0; i < accepts.length; i++) {
        if (quoteCount(accepts[j2]) % 2 == 0) {
          accepts[++j2] = accepts[i];
        } else {
          accepts[j2] += ',' + accepts[i];
        }
      }
      accepts.length = j2 + 1;
      return accepts;
    }
    function splitParameters(str) {
      var parameters = str.split(';');
      for (var i = 1, j2 = 0; i < parameters.length; i++) {
        if (quoteCount(parameters[j2]) % 2 == 0) {
          parameters[++j2] = parameters[i];
        } else {
          parameters[j2] += ';' + parameters[i];
        }
      }
      parameters.length = j2 + 1;
      for (var i = 0; i < parameters.length; i++) {
        parameters[i] = parameters[i].trim();
      }
      return parameters;
    }
  },
});

// ../../node_modules/negotiator/index.js
var require_negotiator = __commonJS({
  '../../node_modules/negotiator/index.js'(exports2, module2) {
    'use strict';
    var preferredCharsets = require_charset();
    var preferredEncodings = require_encoding();
    var preferredLanguages = require_language();
    var preferredMediaTypes = require_mediaType();
    module2.exports = Negotiator;
    module2.exports.Negotiator = Negotiator;
    function Negotiator(request2) {
      if (!(this instanceof Negotiator)) {
        return new Negotiator(request2);
      }
      this.request = request2;
    }
    Negotiator.prototype.charset = function charset(available) {
      var set = this.charsets(available);
      return set && set[0];
    };
    Negotiator.prototype.charsets = function charsets(available) {
      return preferredCharsets(
        this.request.headers['accept-charset'],
        available
      );
    };
    Negotiator.prototype.encoding = function encoding(available) {
      var set = this.encodings(available);
      return set && set[0];
    };
    Negotiator.prototype.encodings = function encodings(available) {
      return preferredEncodings(
        this.request.headers['accept-encoding'],
        available
      );
    };
    Negotiator.prototype.language = function language(available) {
      var set = this.languages(available);
      return set && set[0];
    };
    Negotiator.prototype.languages = function languages(available) {
      return preferredLanguages(
        this.request.headers['accept-language'],
        available
      );
    };
    Negotiator.prototype.mediaType = function mediaType(available) {
      var set = this.mediaTypes(available);
      return set && set[0];
    };
    Negotiator.prototype.mediaTypes = function mediaTypes(available) {
      return preferredMediaTypes(this.request.headers.accept, available);
    };
    Negotiator.prototype.preferredCharset = Negotiator.prototype.charset;
    Negotiator.prototype.preferredCharsets = Negotiator.prototype.charsets;
    Negotiator.prototype.preferredEncoding = Negotiator.prototype.encoding;
    Negotiator.prototype.preferredEncodings = Negotiator.prototype.encodings;
    Negotiator.prototype.preferredLanguage = Negotiator.prototype.language;
    Negotiator.prototype.preferredLanguages = Negotiator.prototype.languages;
    Negotiator.prototype.preferredMediaType = Negotiator.prototype.mediaType;
    Negotiator.prototype.preferredMediaTypes = Negotiator.prototype.mediaTypes;
  },
});

// ../../node_modules/accepts/index.js
var require_accepts = __commonJS({
  '../../node_modules/accepts/index.js'(exports2, module2) {
    'use strict';
    var Negotiator = require_negotiator();
    var mime = require_mime_types();
    module2.exports = Accepts;
    function Accepts(req) {
      if (!(this instanceof Accepts)) {
        return new Accepts(req);
      }
      this.headers = req.headers;
      this.negotiator = new Negotiator(req);
    }
    Accepts.prototype.type = Accepts.prototype.types = function (types_) {
      var types = types_;
      if (types && !Array.isArray(types)) {
        types = new Array(arguments.length);
        for (var i = 0; i < types.length; i++) {
          types[i] = arguments[i];
        }
      }
      if (!types || types.length === 0) {
        return this.negotiator.mediaTypes();
      }
      if (!this.headers.accept) {
        return types[0];
      }
      var mimes = types.map(extToMime);
      var accepts = this.negotiator.mediaTypes(mimes.filter(validMime));
      var first = accepts[0];
      return first ? types[mimes.indexOf(first)] : false;
    };
    Accepts.prototype.encoding = Accepts.prototype.encodings = function (
      encodings_
    ) {
      var encodings = encodings_;
      if (encodings && !Array.isArray(encodings)) {
        encodings = new Array(arguments.length);
        for (var i = 0; i < encodings.length; i++) {
          encodings[i] = arguments[i];
        }
      }
      if (!encodings || encodings.length === 0) {
        return this.negotiator.encodings();
      }
      return this.negotiator.encodings(encodings)[0] || false;
    };
    Accepts.prototype.charset = Accepts.prototype.charsets = function (
      charsets_
    ) {
      var charsets = charsets_;
      if (charsets && !Array.isArray(charsets)) {
        charsets = new Array(arguments.length);
        for (var i = 0; i < charsets.length; i++) {
          charsets[i] = arguments[i];
        }
      }
      if (!charsets || charsets.length === 0) {
        return this.negotiator.charsets();
      }
      return this.negotiator.charsets(charsets)[0] || false;
    };
    Accepts.prototype.lang =
      Accepts.prototype.langs =
      Accepts.prototype.language =
      Accepts.prototype.languages =
        function (languages_) {
          var languages = languages_;
          if (languages && !Array.isArray(languages)) {
            languages = new Array(arguments.length);
            for (var i = 0; i < languages.length; i++) {
              languages[i] = arguments[i];
            }
          }
          if (!languages || languages.length === 0) {
            return this.negotiator.languages();
          }
          return this.negotiator.languages(languages)[0] || false;
        };
    function extToMime(type) {
      return type.indexOf('/') === -1 ? mime.lookup(type) : type;
    }
    function validMime(type) {
      return typeof type === 'string';
    }
  },
});

// ../../node_modules/express/lib/request.js
var require_request = __commonJS({
  '../../node_modules/express/lib/request.js'(exports2, module2) {
    'use strict';
    var accepts = require_accepts();
    var deprecate = require_depd()('express');
    var isIP = require('net').isIP;
    var typeis = require_type_is();
    var http = require('http');
    var fresh = require_fresh();
    var parseRange = require_range_parser();
    var parse = require_parseurl();
    var proxyaddr = require_proxy_addr();
    var req = Object.create(http.IncomingMessage.prototype);
    module2.exports = req;
    req.get = req.header = function header(name) {
      if (!name) {
        throw new TypeError('name argument is required to req.get');
      }
      if (typeof name !== 'string') {
        throw new TypeError('name must be a string to req.get');
      }
      var lc2 = name.toLowerCase();
      switch (lc2) {
        case 'referer':
        case 'referrer':
          return this.headers.referrer || this.headers.referer;
        default:
          return this.headers[lc2];
      }
    };
    req.accepts = function () {
      var accept = accepts(this);
      return accept.types.apply(accept, arguments);
    };
    req.acceptsEncodings = function () {
      var accept = accepts(this);
      return accept.encodings.apply(accept, arguments);
    };
    req.acceptsEncoding = deprecate.function(
      req.acceptsEncodings,
      'req.acceptsEncoding: Use acceptsEncodings instead'
    );
    req.acceptsCharsets = function () {
      var accept = accepts(this);
      return accept.charsets.apply(accept, arguments);
    };
    req.acceptsCharset = deprecate.function(
      req.acceptsCharsets,
      'req.acceptsCharset: Use acceptsCharsets instead'
    );
    req.acceptsLanguages = function () {
      var accept = accepts(this);
      return accept.languages.apply(accept, arguments);
    };
    req.acceptsLanguage = deprecate.function(
      req.acceptsLanguages,
      'req.acceptsLanguage: Use acceptsLanguages instead'
    );
    req.range = function range(size, options) {
      var range2 = this.get('Range');
      if (!range2) return;
      return parseRange(size, range2, options);
    };
    req.param = function param(name, defaultValue) {
      var params = this.params || {};
      var body = this.body || {};
      var query = this.query || {};
      var args = arguments.length === 1 ? 'name' : 'name, default';
      deprecate(
        'req.param(' +
          args +
          '): Use req.params, req.body, or req.query instead'
      );
      if (null != params[name] && params.hasOwnProperty(name))
        return params[name];
      if (null != body[name]) return body[name];
      if (null != query[name]) return query[name];
      return defaultValue;
    };
    req.is = function is2(types) {
      var arr = types;
      if (!Array.isArray(types)) {
        arr = new Array(arguments.length);
        for (var i = 0; i < arr.length; i++) {
          arr[i] = arguments[i];
        }
      }
      return typeis(this, arr);
    };
    defineGetter(req, 'protocol', function protocol() {
      var proto = this.connection.encrypted ? 'https' : 'http';
      var trust = this.app.get('trust proxy fn');
      if (!trust(this.connection.remoteAddress, 0)) {
        return proto;
      }
      var header = this.get('X-Forwarded-Proto') || proto;
      var index = header.indexOf(',');
      return index !== -1 ? header.substring(0, index).trim() : header.trim();
    });
    defineGetter(req, 'secure', function secure() {
      return this.protocol === 'https';
    });
    defineGetter(req, 'ip', function ip2() {
      var trust = this.app.get('trust proxy fn');
      return proxyaddr(this, trust);
    });
    defineGetter(req, 'ips', function ips() {
      var trust = this.app.get('trust proxy fn');
      var addrs = proxyaddr.all(this, trust);
      addrs.reverse().pop();
      return addrs;
    });
    defineGetter(req, 'subdomains', function subdomains() {
      var hostname = this.hostname;
      if (!hostname) return [];
      var offset = this.app.get('subdomain offset');
      var subdomains2 = !isIP(hostname)
        ? hostname.split('.').reverse()
        : [hostname];
      return subdomains2.slice(offset);
    });
    defineGetter(req, 'path', function path() {
      return parse(this).pathname;
    });
    defineGetter(req, 'hostname', function hostname() {
      var trust = this.app.get('trust proxy fn');
      var host = this.get('X-Forwarded-Host');
      if (!host || !trust(this.connection.remoteAddress, 0)) {
        host = this.get('Host');
      } else if (host.indexOf(',') !== -1) {
        host = host.substring(0, host.indexOf(',')).trimRight();
      }
      if (!host) return;
      var offset = host[0] === '[' ? host.indexOf(']') + 1 : 0;
      var index = host.indexOf(':', offset);
      return index !== -1 ? host.substring(0, index) : host;
    });
    defineGetter(
      req,
      'host',
      deprecate.function(function host() {
        return this.hostname;
      }, 'req.host: Use req.hostname instead')
    );
    defineGetter(req, 'fresh', function () {
      var method = this.method;
      var res = this.res;
      var status = res.statusCode;
      if ('GET' !== method && 'HEAD' !== method) return false;
      if ((status >= 200 && status < 300) || 304 === status) {
        return fresh(this.headers, {
          etag: res.get('ETag'),
          'last-modified': res.get('Last-Modified'),
        });
      }
      return false;
    });
    defineGetter(req, 'stale', function stale() {
      return !this.fresh;
    });
    defineGetter(req, 'xhr', function xhr() {
      var val = this.get('X-Requested-With') || '';
      return val.toLowerCase() === 'xmlhttprequest';
    });
    function defineGetter(obj, name, getter) {
      Object.defineProperty(obj, name, {
        configurable: true,
        enumerable: true,
        get: getter,
      });
    }
  },
});

// ../../node_modules/cookie-signature/index.js
var require_cookie_signature = __commonJS({
  '../../node_modules/cookie-signature/index.js'(exports2) {
    'use strict';
    var crypto2 = require('crypto');
    exports2.sign = function (val, secret) {
      if ('string' != typeof val)
        throw new TypeError('Cookie value must be provided as a string.');
      if ('string' != typeof secret)
        throw new TypeError('Secret string must be provided.');
      return (
        val +
        '.' +
        crypto2
          .createHmac('sha256', secret)
          .update(val)
          .digest('base64')
          .replace(/\=+$/, '')
      );
    };
    exports2.unsign = function (val, secret) {
      if ('string' != typeof val)
        throw new TypeError('Signed cookie string must be provided.');
      if ('string' != typeof secret)
        throw new TypeError('Secret string must be provided.');
      var str = val.slice(0, val.lastIndexOf('.')),
        mac = exports2.sign(str, secret);
      return sha1(mac) == sha1(val) ? str : false;
    };
    function sha1(str) {
      return crypto2.createHash('sha1').update(str).digest('hex');
    }
  },
});

// ../../node_modules/express/node_modules/cookie/index.js
var require_cookie = __commonJS({
  '../../node_modules/express/node_modules/cookie/index.js'(exports2) {
    'use strict';
    exports2.parse = parse;
    exports2.serialize = serialize2;
    var __toString = Object.prototype.toString;
    var fieldContentRegExp = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;
    function parse(str, options) {
      if (typeof str !== 'string') {
        throw new TypeError('argument str must be a string');
      }
      var obj = {};
      var opt = options || {};
      var dec = opt.decode || decode;
      var index = 0;
      while (index < str.length) {
        var eqIdx = str.indexOf('=', index);
        if (eqIdx === -1) {
          break;
        }
        var endIdx = str.indexOf(';', index);
        if (endIdx === -1) {
          endIdx = str.length;
        } else if (endIdx < eqIdx) {
          index = str.lastIndexOf(';', eqIdx - 1) + 1;
          continue;
        }
        var key = str.slice(index, eqIdx).trim();
        if (void 0 === obj[key]) {
          var val = str.slice(eqIdx + 1, endIdx).trim();
          if (val.charCodeAt(0) === 34) {
            val = val.slice(1, -1);
          }
          obj[key] = tryDecode2(val, dec);
        }
        index = endIdx + 1;
      }
      return obj;
    }
    function serialize2(name, val, options) {
      var opt = options || {};
      var enc = opt.encode || encode;
      if (typeof enc !== 'function') {
        throw new TypeError('option encode is invalid');
      }
      if (!fieldContentRegExp.test(name)) {
        throw new TypeError('argument name is invalid');
      }
      var value = enc(val);
      if (value && !fieldContentRegExp.test(value)) {
        throw new TypeError('argument val is invalid');
      }
      var str = name + '=' + value;
      if (null != opt.maxAge) {
        var maxAge = opt.maxAge - 0;
        if (isNaN(maxAge) || !isFinite(maxAge)) {
          throw new TypeError('option maxAge is invalid');
        }
        str += '; Max-Age=' + Math.floor(maxAge);
      }
      if (opt.domain) {
        if (!fieldContentRegExp.test(opt.domain)) {
          throw new TypeError('option domain is invalid');
        }
        str += '; Domain=' + opt.domain;
      }
      if (opt.path) {
        if (!fieldContentRegExp.test(opt.path)) {
          throw new TypeError('option path is invalid');
        }
        str += '; Path=' + opt.path;
      }
      if (opt.expires) {
        var expires = opt.expires;
        if (!isDate(expires) || isNaN(expires.valueOf())) {
          throw new TypeError('option expires is invalid');
        }
        str += '; Expires=' + expires.toUTCString();
      }
      if (opt.httpOnly) {
        str += '; HttpOnly';
      }
      if (opt.secure) {
        str += '; Secure';
      }
      if (opt.priority) {
        var priority =
          typeof opt.priority === 'string'
            ? opt.priority.toLowerCase()
            : opt.priority;
        switch (priority) {
          case 'low':
            str += '; Priority=Low';
            break;
          case 'medium':
            str += '; Priority=Medium';
            break;
          case 'high':
            str += '; Priority=High';
            break;
          default:
            throw new TypeError('option priority is invalid');
        }
      }
      if (opt.sameSite) {
        var sameSite =
          typeof opt.sameSite === 'string'
            ? opt.sameSite.toLowerCase()
            : opt.sameSite;
        switch (sameSite) {
          case true:
            str += '; SameSite=Strict';
            break;
          case 'lax':
            str += '; SameSite=Lax';
            break;
          case 'strict':
            str += '; SameSite=Strict';
            break;
          case 'none':
            str += '; SameSite=None';
            break;
          default:
            throw new TypeError('option sameSite is invalid');
        }
      }
      return str;
    }
    function decode(str) {
      return str.indexOf('%') !== -1 ? decodeURIComponent(str) : str;
    }
    function encode(val) {
      return encodeURIComponent(val);
    }
    function isDate(val) {
      return __toString.call(val) === '[object Date]' || val instanceof Date;
    }
    function tryDecode2(str, decode2) {
      try {
        return decode2(str);
      } catch (e2) {
        return str;
      }
    }
  },
});

// ../../node_modules/vary/index.js
var require_vary = __commonJS({
  '../../node_modules/vary/index.js'(exports2, module2) {
    'use strict';
    module2.exports = vary;
    module2.exports.append = append;
    var FIELD_NAME_REGEXP = /^[!#$%&'*+\-.^_`|~0-9A-Za-z]+$/;
    function append(header, field) {
      if (typeof header !== 'string') {
        throw new TypeError('header argument is required');
      }
      if (!field) {
        throw new TypeError('field argument is required');
      }
      var fields = !Array.isArray(field) ? parse(String(field)) : field;
      for (var j2 = 0; j2 < fields.length; j2++) {
        if (!FIELD_NAME_REGEXP.test(fields[j2])) {
          throw new TypeError('field argument contains an invalid header name');
        }
      }
      if (header === '*') {
        return header;
      }
      var val = header;
      var vals = parse(header.toLowerCase());
      if (fields.indexOf('*') !== -1 || vals.indexOf('*') !== -1) {
        return '*';
      }
      for (var i = 0; i < fields.length; i++) {
        var fld = fields[i].toLowerCase();
        if (vals.indexOf(fld) === -1) {
          vals.push(fld);
          val = val ? val + ', ' + fields[i] : fields[i];
        }
      }
      return val;
    }
    function parse(header) {
      var end = 0;
      var list = [];
      var start = 0;
      for (var i = 0, len = header.length; i < len; i++) {
        switch (header.charCodeAt(i)) {
          case 32:
            if (start === end) {
              start = end = i + 1;
            }
            break;
          case 44:
            list.push(header.substring(start, end));
            start = end = i + 1;
            break;
          default:
            end = i + 1;
            break;
        }
      }
      list.push(header.substring(start, end));
      return list;
    }
    function vary(res, field) {
      if (!res || !res.getHeader || !res.setHeader) {
        throw new TypeError('res argument is required');
      }
      var val = res.getHeader('Vary') || '';
      var header = Array.isArray(val) ? val.join(', ') : String(val);
      if ((val = append(header, field))) {
        res.setHeader('Vary', val);
      }
    }
  },
});

// ../../node_modules/express/lib/response.js
var require_response = __commonJS({
  '../../node_modules/express/lib/response.js'(exports2, module2) {
    'use strict';
    var Buffer2 = require_safe_buffer().Buffer;
    var contentDisposition = require_content_disposition();
    var createError = require_http_errors();
    var deprecate = require_depd()('express');
    var encodeUrl = require_encodeurl();
    var escapeHtml = require_escape_html();
    var http = require('http');
    var isAbsolute = require_utils2().isAbsolute;
    var onFinished = require_on_finished();
    var path = require('path');
    var statuses = require_statuses();
    var merge2 = require_utils_merge();
    var sign = require_cookie_signature().sign;
    var normalizeType = require_utils2().normalizeType;
    var normalizeTypes = require_utils2().normalizeTypes;
    var setCharset = require_utils2().setCharset;
    var cookie = require_cookie();
    var send = require_send();
    var extname = path.extname;
    var mime = send.mime;
    var resolve = path.resolve;
    var vary = require_vary();
    var res = Object.create(http.ServerResponse.prototype);
    module2.exports = res;
    var charsetRegExp = /;\s*charset\s*=/;
    res.status = function status(code) {
      if (
        (typeof code === 'string' || Math.floor(code) !== code) &&
        code > 99 &&
        code < 1e3
      ) {
        deprecate(
          'res.status(' +
            JSON.stringify(code) +
            '): use res.status(' +
            Math.floor(code) +
            ') instead'
        );
      }
      this.statusCode = code;
      return this;
    };
    res.links = function (links) {
      var link = this.get('Link') || '';
      if (link) link += ', ';
      return this.set(
        'Link',
        link +
          Object.keys(links)
            .map(function (rel) {
              return '<' + links[rel] + '>; rel="' + rel + '"';
            })
            .join(', ')
      );
    };
    res.send = function send2(body) {
      var chunk = body;
      var encoding;
      var req = this.req;
      var type;
      var app2 = this.app;
      if (arguments.length === 2) {
        if (
          typeof arguments[0] !== 'number' &&
          typeof arguments[1] === 'number'
        ) {
          deprecate(
            'res.send(body, status): Use res.status(status).send(body) instead'
          );
          this.statusCode = arguments[1];
        } else {
          deprecate(
            'res.send(status, body): Use res.status(status).send(body) instead'
          );
          this.statusCode = arguments[0];
          chunk = arguments[1];
        }
      }
      if (typeof chunk === 'number' && arguments.length === 1) {
        if (!this.get('Content-Type')) {
          this.type('txt');
        }
        deprecate('res.send(status): Use res.sendStatus(status) instead');
        this.statusCode = chunk;
        chunk = statuses.message[chunk];
      }
      switch (typeof chunk) {
        case 'string':
          if (!this.get('Content-Type')) {
            this.type('html');
          }
          break;
        case 'boolean':
        case 'number':
        case 'object':
          if (chunk === null) {
            chunk = '';
          } else if (Buffer2.isBuffer(chunk)) {
            if (!this.get('Content-Type')) {
              this.type('bin');
            }
          } else {
            return this.json(chunk);
          }
          break;
      }
      if (typeof chunk === 'string') {
        encoding = 'utf8';
        type = this.get('Content-Type');
        if (typeof type === 'string') {
          this.set('Content-Type', setCharset(type, 'utf-8'));
        }
      }
      var etagFn = app2.get('etag fn');
      var generateETag = !this.get('ETag') && typeof etagFn === 'function';
      var len;
      if (chunk !== void 0) {
        if (Buffer2.isBuffer(chunk)) {
          len = chunk.length;
        } else if (!generateETag && chunk.length < 1e3) {
          len = Buffer2.byteLength(chunk, encoding);
        } else {
          chunk = Buffer2.from(chunk, encoding);
          encoding = void 0;
          len = chunk.length;
        }
        this.set('Content-Length', len);
      }
      var etag;
      if (generateETag && len !== void 0) {
        if ((etag = etagFn(chunk, encoding))) {
          this.set('ETag', etag);
        }
      }
      if (req.fresh) this.statusCode = 304;
      if (204 === this.statusCode || 304 === this.statusCode) {
        this.removeHeader('Content-Type');
        this.removeHeader('Content-Length');
        this.removeHeader('Transfer-Encoding');
        chunk = '';
      }
      if (this.statusCode === 205) {
        this.set('Content-Length', '0');
        this.removeHeader('Transfer-Encoding');
        chunk = '';
      }
      if (req.method === 'HEAD') {
        this.end();
      } else {
        this.end(chunk, encoding);
      }
      return this;
    };
    res.json = function json(obj) {
      var val = obj;
      if (arguments.length === 2) {
        if (typeof arguments[1] === 'number') {
          deprecate(
            'res.json(obj, status): Use res.status(status).json(obj) instead'
          );
          this.statusCode = arguments[1];
        } else {
          deprecate(
            'res.json(status, obj): Use res.status(status).json(obj) instead'
          );
          this.statusCode = arguments[0];
          val = arguments[1];
        }
      }
      var app2 = this.app;
      var escape3 = app2.get('json escape');
      var replacer = app2.get('json replacer');
      var spaces = app2.get('json spaces');
      var body = stringify(val, replacer, spaces, escape3);
      if (!this.get('Content-Type')) {
        this.set('Content-Type', 'application/json');
      }
      return this.send(body);
    };
    res.jsonp = function jsonp(obj) {
      var val = obj;
      if (arguments.length === 2) {
        if (typeof arguments[1] === 'number') {
          deprecate(
            'res.jsonp(obj, status): Use res.status(status).jsonp(obj) instead'
          );
          this.statusCode = arguments[1];
        } else {
          deprecate(
            'res.jsonp(status, obj): Use res.status(status).jsonp(obj) instead'
          );
          this.statusCode = arguments[0];
          val = arguments[1];
        }
      }
      var app2 = this.app;
      var escape3 = app2.get('json escape');
      var replacer = app2.get('json replacer');
      var spaces = app2.get('json spaces');
      var body = stringify(val, replacer, spaces, escape3);
      var callback = this.req.query[app2.get('jsonp callback name')];
      if (!this.get('Content-Type')) {
        this.set('X-Content-Type-Options', 'nosniff');
        this.set('Content-Type', 'application/json');
      }
      if (Array.isArray(callback)) {
        callback = callback[0];
      }
      if (typeof callback === 'string' && callback.length !== 0) {
        this.set('X-Content-Type-Options', 'nosniff');
        this.set('Content-Type', 'text/javascript');
        callback = callback.replace(/[^\[\]\w$.]/g, '');
        if (body === void 0) {
          body = '';
        } else if (typeof body === 'string') {
          body = body
            .replace(/\u2028/g, '\\u2028')
            .replace(/\u2029/g, '\\u2029');
        }
        body =
          '/**/ typeof ' +
          callback +
          " === 'function' && " +
          callback +
          '(' +
          body +
          ');';
      }
      return this.send(body);
    };
    res.sendStatus = function sendStatus(statusCode) {
      var body = statuses.message[statusCode] || String(statusCode);
      this.statusCode = statusCode;
      this.type('txt');
      return this.send(body);
    };
    res.sendFile = function sendFile(path2, options, callback) {
      var done = callback;
      var req = this.req;
      var res2 = this;
      var next = req.next;
      var opts = options || {};
      if (!path2) {
        throw new TypeError('path argument is required to res.sendFile');
      }
      if (typeof path2 !== 'string') {
        throw new TypeError('path must be a string to res.sendFile');
      }
      if (typeof options === 'function') {
        done = options;
        opts = {};
      }
      if (!opts.root && !isAbsolute(path2)) {
        throw new TypeError(
          'path must be absolute or specify root to res.sendFile'
        );
      }
      var pathname = encodeURI(path2);
      var file = send(req, pathname, opts);
      sendfile(res2, file, opts, function (err) {
        if (done) return done(err);
        if (err && err.code === 'EISDIR') return next();
        if (err && err.code !== 'ECONNABORTED' && err.syscall !== 'write') {
          next(err);
        }
      });
    };
    res.sendfile = function (path2, options, callback) {
      var done = callback;
      var req = this.req;
      var res2 = this;
      var next = req.next;
      var opts = options || {};
      if (typeof options === 'function') {
        done = options;
        opts = {};
      }
      var file = send(req, path2, opts);
      sendfile(res2, file, opts, function (err) {
        if (done) return done(err);
        if (err && err.code === 'EISDIR') return next();
        if (err && err.code !== 'ECONNABORTED' && err.syscall !== 'write') {
          next(err);
        }
      });
    };
    res.sendfile = deprecate.function(
      res.sendfile,
      'res.sendfile: Use res.sendFile instead'
    );
    res.download = function download(path2, filename, options, callback) {
      var done = callback;
      var name = filename;
      var opts = options || null;
      if (typeof filename === 'function') {
        done = filename;
        name = null;
        opts = null;
      } else if (typeof options === 'function') {
        done = options;
        opts = null;
      }
      if (
        typeof filename === 'object' &&
        (typeof options === 'function' || options === void 0)
      ) {
        name = null;
        opts = filename;
      }
      var headers = {
        'Content-Disposition': contentDisposition(name || path2),
      };
      if (opts && opts.headers) {
        var keys = Object.keys(opts.headers);
        for (var i = 0; i < keys.length; i++) {
          var key = keys[i];
          if (key.toLowerCase() !== 'content-disposition') {
            headers[key] = opts.headers[key];
          }
        }
      }
      opts = Object.create(opts);
      opts.headers = headers;
      var fullPath = !opts.root ? resolve(path2) : path2;
      return this.sendFile(fullPath, opts, done);
    };
    res.contentType = res.type = function contentType(type) {
      var ct2 = type.indexOf('/') === -1 ? mime.lookup(type) : type;
      return this.set('Content-Type', ct2);
    };
    res.format = function (obj) {
      var req = this.req;
      var next = req.next;
      var keys = Object.keys(obj).filter(function (v) {
        return v !== 'default';
      });
      var key = keys.length > 0 ? req.accepts(keys) : false;
      this.vary('Accept');
      if (key) {
        this.set('Content-Type', normalizeType(key).value);
        obj[key](req, this, next);
      } else if (obj.default) {
        obj.default(req, this, next);
      } else {
        next(
          createError(406, {
            types: normalizeTypes(keys).map(function (o2) {
              return o2.value;
            }),
          })
        );
      }
      return this;
    };
    res.attachment = function attachment(filename) {
      if (filename) {
        this.type(extname(filename));
      }
      this.set('Content-Disposition', contentDisposition(filename));
      return this;
    };
    res.append = function append(field, val) {
      var prev = this.get(field);
      var value = val;
      if (prev) {
        value = Array.isArray(prev)
          ? prev.concat(val)
          : Array.isArray(val)
          ? [prev].concat(val)
          : [prev, val];
      }
      return this.set(field, value);
    };
    res.set = res.header = function header(field, val) {
      if (arguments.length === 2) {
        var value = Array.isArray(val) ? val.map(String) : String(val);
        if (field.toLowerCase() === 'content-type') {
          if (Array.isArray(value)) {
            throw new TypeError('Content-Type cannot be set to an Array');
          }
          if (!charsetRegExp.test(value)) {
            var charset = mime.charsets.lookup(value.split(';')[0]);
            if (charset) value += '; charset=' + charset.toLowerCase();
          }
        }
        this.setHeader(field, value);
      } else {
        for (var key in field) {
          this.set(key, field[key]);
        }
      }
      return this;
    };
    res.get = function (field) {
      return this.getHeader(field);
    };
    res.clearCookie = function clearCookie(name, options) {
      var opts = merge2(
        { expires: /* @__PURE__ */ new Date(1), path: '/' },
        options
      );
      return this.cookie(name, '', opts);
    };
    res.cookie = function (name, value, options) {
      var opts = merge2({}, options);
      var secret = this.req.secret;
      var signed = opts.signed;
      if (signed && !secret) {
        throw new Error('cookieParser("secret") required for signed cookies');
      }
      var val =
        typeof value === 'object'
          ? 'j:' + JSON.stringify(value)
          : String(value);
      if (signed) {
        val = 's:' + sign(val, secret);
      }
      if (opts.maxAge != null) {
        var maxAge = opts.maxAge - 0;
        if (!isNaN(maxAge)) {
          opts.expires = new Date(Date.now() + maxAge);
          opts.maxAge = Math.floor(maxAge / 1e3);
        }
      }
      if (opts.path == null) {
        opts.path = '/';
      }
      this.append('Set-Cookie', cookie.serialize(name, String(val), opts));
      return this;
    };
    res.location = function location(url) {
      var loc = url;
      if (url === 'back') {
        loc = this.req.get('Referrer') || '/';
      }
      return this.set('Location', encodeUrl(loc));
    };
    res.redirect = function redirect(url) {
      var address = url;
      var body;
      var status = 302;
      if (arguments.length === 2) {
        if (typeof arguments[0] === 'number') {
          status = arguments[0];
          address = arguments[1];
        } else {
          deprecate(
            'res.redirect(url, status): Use res.redirect(status, url) instead'
          );
          status = arguments[1];
        }
      }
      address = this.location(address).get('Location');
      this.format({
        text: function () {
          body = statuses.message[status] + '. Redirecting to ' + address;
        },
        html: function () {
          var u = escapeHtml(address);
          body =
            '<p>' +
            statuses.message[status] +
            '. Redirecting to <a href="' +
            u +
            '">' +
            u +
            '</a></p>';
        },
        default: function () {
          body = '';
        },
      });
      this.statusCode = status;
      this.set('Content-Length', Buffer2.byteLength(body));
      if (this.req.method === 'HEAD') {
        this.end();
      } else {
        this.end(body);
      }
    };
    res.vary = function (field) {
      if (!field || (Array.isArray(field) && !field.length)) {
        deprecate('res.vary(): Provide a field name');
        return this;
      }
      vary(this, field);
      return this;
    };
    res.render = function render3(view, options, callback) {
      var app2 = this.req.app;
      var done = callback;
      var opts = options || {};
      var req = this.req;
      var self2 = this;
      if (typeof options === 'function') {
        done = options;
        opts = {};
      }
      opts._locals = self2.locals;
      done =
        done ||
        function (err, str) {
          if (err) return req.next(err);
          self2.send(str);
        };
      app2.render(view, opts, done);
    };
    function sendfile(res2, file, options, callback) {
      var done = false;
      var streaming;
      function onaborted() {
        if (done) return;
        done = true;
        var err = new Error('Request aborted');
        err.code = 'ECONNABORTED';
        callback(err);
      }
      function ondirectory() {
        if (done) return;
        done = true;
        var err = new Error('EISDIR, read');
        err.code = 'EISDIR';
        callback(err);
      }
      function onerror(err) {
        if (done) return;
        done = true;
        callback(err);
      }
      function onend() {
        if (done) return;
        done = true;
        callback();
      }
      function onfile() {
        streaming = false;
      }
      function onfinish(err) {
        if (err && err.code === 'ECONNRESET') return onaborted();
        if (err) return onerror(err);
        if (done) return;
        setImmediate(function () {
          if (streaming !== false && !done) {
            onaborted();
            return;
          }
          if (done) return;
          done = true;
          callback();
        });
      }
      function onstream() {
        streaming = true;
      }
      file.on('directory', ondirectory);
      file.on('end', onend);
      file.on('error', onerror);
      file.on('file', onfile);
      file.on('stream', onstream);
      onFinished(res2, onfinish);
      if (options.headers) {
        file.on('headers', function headers(res3) {
          var obj = options.headers;
          var keys = Object.keys(obj);
          for (var i = 0; i < keys.length; i++) {
            var k2 = keys[i];
            res3.setHeader(k2, obj[k2]);
          }
        });
      }
      file.pipe(res2);
    }
    function stringify(value, replacer, spaces, escape3) {
      var json =
        replacer || spaces
          ? JSON.stringify(value, replacer, spaces)
          : JSON.stringify(value);
      if (escape3 && typeof json === 'string') {
        json = json.replace(/[<>&]/g, function (c2) {
          switch (c2.charCodeAt(0)) {
            case 60:
              return '\\u003c';
            case 62:
              return '\\u003e';
            case 38:
              return '\\u0026';
            default:
              return c2;
          }
        });
      }
      return json;
    }
  },
});

// ../../node_modules/serve-static/index.js
var require_serve_static = __commonJS({
  '../../node_modules/serve-static/index.js'(exports2, module2) {
    'use strict';
    var encodeUrl = require_encodeurl();
    var escapeHtml = require_escape_html();
    var parseUrl = require_parseurl();
    var resolve = require('path').resolve;
    var send = require_send();
    var url = require('url');
    module2.exports = serveStatic;
    module2.exports.mime = send.mime;
    function serveStatic(root, options) {
      if (!root) {
        throw new TypeError('root path required');
      }
      if (typeof root !== 'string') {
        throw new TypeError('root path must be a string');
      }
      var opts = Object.create(options || null);
      var fallthrough = opts.fallthrough !== false;
      var redirect = opts.redirect !== false;
      var setHeaders = opts.setHeaders;
      if (setHeaders && typeof setHeaders !== 'function') {
        throw new TypeError('option setHeaders must be function');
      }
      opts.maxage = opts.maxage || opts.maxAge || 0;
      opts.root = resolve(root);
      var onDirectory = redirect
        ? createRedirectDirectoryListener()
        : createNotFoundDirectoryListener();
      return function serveStatic2(req, res, next) {
        if (req.method !== 'GET' && req.method !== 'HEAD') {
          if (fallthrough) {
            return next();
          }
          res.statusCode = 405;
          res.setHeader('Allow', 'GET, HEAD');
          res.setHeader('Content-Length', '0');
          res.end();
          return;
        }
        var forwardError = !fallthrough;
        var originalUrl = parseUrl.original(req);
        var path = parseUrl(req).pathname;
        if (path === '/' && originalUrl.pathname.substr(-1) !== '/') {
          path = '';
        }
        var stream = send(req, path, opts);
        stream.on('directory', onDirectory);
        if (setHeaders) {
          stream.on('headers', setHeaders);
        }
        if (fallthrough) {
          stream.on('file', function onFile() {
            forwardError = true;
          });
        }
        stream.on('error', function error(err) {
          if (forwardError || !(err.statusCode < 500)) {
            next(err);
            return;
          }
          next();
        });
        stream.pipe(res);
      };
    }
    function collapseLeadingSlashes(str) {
      for (var i = 0; i < str.length; i++) {
        if (str.charCodeAt(i) !== 47) {
          break;
        }
      }
      return i > 1 ? '/' + str.substr(i) : str;
    }
    function createHtmlDocument(title, body) {
      return (
        '<!DOCTYPE html>\n<html lang="en">\n<head>\n<meta charset="utf-8">\n<title>' +
        title +
        '</title>\n</head>\n<body>\n<pre>' +
        body +
        '</pre>\n</body>\n</html>\n'
      );
    }
    function createNotFoundDirectoryListener() {
      return function notFound() {
        this.error(404);
      };
    }
    function createRedirectDirectoryListener() {
      return function redirect(res) {
        if (this.hasTrailingSlash()) {
          this.error(404);
          return;
        }
        var originalUrl = parseUrl.original(this.req);
        originalUrl.path = null;
        originalUrl.pathname = collapseLeadingSlashes(
          originalUrl.pathname + '/'
        );
        var loc = encodeUrl(url.format(originalUrl));
        var doc = createHtmlDocument(
          'Redirecting',
          'Redirecting to <a href="' +
            escapeHtml(loc) +
            '">' +
            escapeHtml(loc) +
            '</a>'
        );
        res.statusCode = 301;
        res.setHeader('Content-Type', 'text/html; charset=UTF-8');
        res.setHeader('Content-Length', Buffer.byteLength(doc));
        res.setHeader('Content-Security-Policy', "default-src 'none'");
        res.setHeader('X-Content-Type-Options', 'nosniff');
        res.setHeader('Location', loc);
        res.end(doc);
      };
    }
  },
});

// ../../node_modules/express/lib/express.js
var require_express = __commonJS({
  '../../node_modules/express/lib/express.js'(exports2, module2) {
    'use strict';
    var bodyParser = require_body_parser();
    var EventEmitter = require('events').EventEmitter;
    var mixin = require_merge_descriptors();
    var proto = require_application();
    var Route = require_route();
    var Router = require_router();
    var req = require_request();
    var res = require_response();
    exports2 = module2.exports = createApplication;
    function createApplication() {
      var app2 = function (req2, res2, next) {
        app2.handle(req2, res2, next);
      };
      mixin(app2, EventEmitter.prototype, false);
      mixin(app2, proto, false);
      app2.request = Object.create(req, {
        app: {
          configurable: true,
          enumerable: true,
          writable: true,
          value: app2,
        },
      });
      app2.response = Object.create(res, {
        app: {
          configurable: true,
          enumerable: true,
          writable: true,
          value: app2,
        },
      });
      app2.init();
      return app2;
    }
    exports2.application = proto;
    exports2.request = req;
    exports2.response = res;
    exports2.Route = Route;
    exports2.Router = Router;
    exports2.json = bodyParser.json;
    exports2.query = require_query();
    exports2.raw = bodyParser.raw;
    exports2.static = require_serve_static();
    exports2.text = bodyParser.text;
    exports2.urlencoded = bodyParser.urlencoded;
    var removedMiddlewares = [
      'bodyParser',
      'compress',
      'cookieSession',
      'session',
      'logger',
      'cookieParser',
      'favicon',
      'responseTime',
      'errorHandler',
      'timeout',
      'methodOverride',
      'vhost',
      'csrf',
      'directory',
      'limit',
      'multipart',
      'staticCache',
    ];
    removedMiddlewares.forEach(function (name) {
      Object.defineProperty(exports2, name, {
        get: function () {
          throw new Error(
            'Most middleware (like ' +
              name +
              ') is no longer bundled with Express and must be installed separately. Please see https://github.com/senchalabs/connect#middleware.'
          );
        },
        configurable: true,
      });
    });
  },
});

// ../../node_modules/express/index.js
var require_express2 = __commonJS({
  '../../node_modules/express/index.js'(exports2, module2) {
    'use strict';
    module2.exports = require_express();
  },
});

// ../../node_modules/@prisma/client/runtime/library.js
var require_library = __commonJS({
  '../../node_modules/@prisma/client/runtime/library.js'(exports, module) {
    'use strict';
    var Qa = Object.create;
    var Gt = Object.defineProperty;
    var Ja = Object.getOwnPropertyDescriptor;
    var Ga = Object.getOwnPropertyNames;
    var Wa = Object.getPrototypeOf;
    var Ha = Object.prototype.hasOwnProperty;
    var L = (e2, t2) => () => (
      t2 || e2((t2 = { exports: {} }).exports, t2), t2.exports
    );
    var xt = (e2, t2) => {
      for (var r2 in t2) Gt(e2, r2, { get: t2[r2], enumerable: true });
    };
    var pi = (e2, t2, r2, n2) => {
      if ((t2 && typeof t2 == 'object') || typeof t2 == 'function')
        for (let i of Ga(t2))
          !Ha.call(e2, i) &&
            i !== r2 &&
            Gt(e2, i, {
              get: () => t2[i],
              enumerable: !(n2 = Ja(t2, i)) || n2.enumerable,
            });
      return e2;
    };
    var A = (e2, t2, r2) => (
      (r2 = e2 != null ? Qa(Wa(e2)) : {}),
      pi(
        t2 || !e2 || !e2.__esModule
          ? Gt(r2, 'default', { value: e2, enumerable: true })
          : r2,
        e2
      )
    );
    var za = (e2) => pi(Gt({}, '__esModule', { value: true }), e2);
    var Ei = L((pd, Pi) => {
      var ze = 1e3,
        Ye = ze * 60,
        Ze = Ye * 60,
        Ve = Ze * 24,
        Ya = Ve * 7,
        Za = Ve * 365.25;
      Pi.exports = function (e2, t2) {
        t2 = t2 || {};
        var r2 = typeof e2;
        if (r2 === 'string' && e2.length > 0) return Xa(e2);
        if (r2 === 'number' && isFinite(e2)) return t2.long ? tl(e2) : el(e2);
        throw new Error(
          'val is not a non-empty string or a valid number. val=' +
            JSON.stringify(e2)
        );
      };
      function Xa(e2) {
        if (((e2 = String(e2)), !(e2.length > 100))) {
          var t2 =
            /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(
              e2
            );
          if (!!t2) {
            var r2 = parseFloat(t2[1]),
              n2 = (t2[2] || 'ms').toLowerCase();
            switch (n2) {
              case 'years':
              case 'year':
              case 'yrs':
              case 'yr':
              case 'y':
                return r2 * Za;
              case 'weeks':
              case 'week':
              case 'w':
                return r2 * Ya;
              case 'days':
              case 'day':
              case 'd':
                return r2 * Ve;
              case 'hours':
              case 'hour':
              case 'hrs':
              case 'hr':
              case 'h':
                return r2 * Ze;
              case 'minutes':
              case 'minute':
              case 'mins':
              case 'min':
              case 'm':
                return r2 * Ye;
              case 'seconds':
              case 'second':
              case 'secs':
              case 'sec':
              case 's':
                return r2 * ze;
              case 'milliseconds':
              case 'millisecond':
              case 'msecs':
              case 'msec':
              case 'ms':
                return r2;
              default:
                return;
            }
          }
        }
      }
      function el(e2) {
        var t2 = Math.abs(e2);
        return t2 >= Ve
          ? Math.round(e2 / Ve) + 'd'
          : t2 >= Ze
          ? Math.round(e2 / Ze) + 'h'
          : t2 >= Ye
          ? Math.round(e2 / Ye) + 'm'
          : t2 >= ze
          ? Math.round(e2 / ze) + 's'
          : e2 + 'ms';
      }
      function tl(e2) {
        var t2 = Math.abs(e2);
        return t2 >= Ve
          ? Yt(e2, t2, Ve, 'day')
          : t2 >= Ze
          ? Yt(e2, t2, Ze, 'hour')
          : t2 >= Ye
          ? Yt(e2, t2, Ye, 'minute')
          : t2 >= ze
          ? Yt(e2, t2, ze, 'second')
          : e2 + ' ms';
      }
      function Yt(e2, t2, r2, n2) {
        var i = t2 >= r2 * 1.5;
        return Math.round(e2 / r2) + ' ' + n2 + (i ? 's' : '');
      }
    });
    var en = L((dd, Ti) => {
      function rl(e2) {
        (r2.debug = r2),
          (r2.default = r2),
          (r2.coerce = l2),
          (r2.disable = o2),
          (r2.enable = i),
          (r2.enabled = s2),
          (r2.humanize = Ei()),
          (r2.destroy = u),
          Object.keys(e2).forEach((c2) => {
            r2[c2] = e2[c2];
          }),
          (r2.names = []),
          (r2.skips = []),
          (r2.formatters = {});
        function t2(c2) {
          let p = 0;
          for (let d = 0; d < c2.length; d++)
            (p = (p << 5) - p + c2.charCodeAt(d)), (p |= 0);
          return r2.colors[Math.abs(p) % r2.colors.length];
        }
        r2.selectColor = t2;
        function r2(c2) {
          let p,
            d = null,
            g,
            y;
          function f(...b) {
            if (!f.enabled) return;
            let E = f,
              v = Number(/* @__PURE__ */ new Date()),
              x = v - (p || v);
            (E.diff = x),
              (E.prev = p),
              (E.curr = v),
              (p = v),
              (b[0] = r2.coerce(b[0])),
              typeof b[0] != 'string' && b.unshift('%O');
            let M = 0;
            (b[0] = b[0].replace(/%([a-zA-Z%])/g, (K, Ke) => {
              if (K === '%%') return '%';
              M++;
              let I2 = r2.formatters[Ke];
              if (typeof I2 == 'function') {
                let J = b[M];
                (K = I2.call(E, J)), b.splice(M, 1), M--;
              }
              return K;
            })),
              r2.formatArgs.call(E, b),
              (E.log || r2.log).apply(E, b);
          }
          return (
            (f.namespace = c2),
            (f.useColors = r2.useColors()),
            (f.color = r2.selectColor(c2)),
            (f.extend = n2),
            (f.destroy = r2.destroy),
            Object.defineProperty(f, 'enabled', {
              enumerable: true,
              configurable: false,
              get: () =>
                d !== null
                  ? d
                  : (g !== r2.namespaces &&
                      ((g = r2.namespaces), (y = r2.enabled(c2))),
                    y),
              set: (b) => {
                d = b;
              },
            }),
            typeof r2.init == 'function' && r2.init(f),
            f
          );
        }
        function n2(c2, p) {
          let d = r2(this.namespace + (typeof p > 'u' ? ':' : p) + c2);
          return (d.log = this.log), d;
        }
        function i(c2) {
          r2.save(c2), (r2.namespaces = c2), (r2.names = []), (r2.skips = []);
          let p,
            d = (typeof c2 == 'string' ? c2 : '').split(/[\s,]+/),
            g = d.length;
          for (p = 0; p < g; p++)
            !d[p] ||
              ((c2 = d[p].replace(/\*/g, '.*?')),
              c2[0] === '-'
                ? r2.skips.push(new RegExp('^' + c2.slice(1) + '$'))
                : r2.names.push(new RegExp('^' + c2 + '$')));
        }
        function o2() {
          let c2 = [
            ...r2.names.map(a),
            ...r2.skips.map(a).map((p) => '-' + p),
          ].join(',');
          return r2.enable(''), c2;
        }
        function s2(c2) {
          if (c2[c2.length - 1] === '*') return true;
          let p, d;
          for (p = 0, d = r2.skips.length; p < d; p++)
            if (r2.skips[p].test(c2)) return false;
          for (p = 0, d = r2.names.length; p < d; p++)
            if (r2.names[p].test(c2)) return true;
          return false;
        }
        function a(c2) {
          return c2
            .toString()
            .substring(2, c2.toString().length - 2)
            .replace(/\.\*\?$/, '*');
        }
        function l2(c2) {
          return c2 instanceof Error ? c2.stack || c2.message : c2;
        }
        function u() {
          console.warn(
            'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'
          );
        }
        return r2.enable(r2.load()), r2;
      }
      Ti.exports = rl;
    });
    var vi = L((se, Zt) => {
      se.formatArgs = il;
      se.save = ol;
      se.load = sl;
      se.useColors = nl;
      se.storage = al();
      se.destroy = (() => {
        let e2 = false;
        return () => {
          e2 ||
            ((e2 = true),
            console.warn(
              'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'
            ));
        };
      })();
      se.colors = [
        '#0000CC',
        '#0000FF',
        '#0033CC',
        '#0033FF',
        '#0066CC',
        '#0066FF',
        '#0099CC',
        '#0099FF',
        '#00CC00',
        '#00CC33',
        '#00CC66',
        '#00CC99',
        '#00CCCC',
        '#00CCFF',
        '#3300CC',
        '#3300FF',
        '#3333CC',
        '#3333FF',
        '#3366CC',
        '#3366FF',
        '#3399CC',
        '#3399FF',
        '#33CC00',
        '#33CC33',
        '#33CC66',
        '#33CC99',
        '#33CCCC',
        '#33CCFF',
        '#6600CC',
        '#6600FF',
        '#6633CC',
        '#6633FF',
        '#66CC00',
        '#66CC33',
        '#9900CC',
        '#9900FF',
        '#9933CC',
        '#9933FF',
        '#99CC00',
        '#99CC33',
        '#CC0000',
        '#CC0033',
        '#CC0066',
        '#CC0099',
        '#CC00CC',
        '#CC00FF',
        '#CC3300',
        '#CC3333',
        '#CC3366',
        '#CC3399',
        '#CC33CC',
        '#CC33FF',
        '#CC6600',
        '#CC6633',
        '#CC9900',
        '#CC9933',
        '#CCCC00',
        '#CCCC33',
        '#FF0000',
        '#FF0033',
        '#FF0066',
        '#FF0099',
        '#FF00CC',
        '#FF00FF',
        '#FF3300',
        '#FF3333',
        '#FF3366',
        '#FF3399',
        '#FF33CC',
        '#FF33FF',
        '#FF6600',
        '#FF6633',
        '#FF9900',
        '#FF9933',
        '#FFCC00',
        '#FFCC33',
      ];
      function nl() {
        return typeof window < 'u' &&
          window.process &&
          (window.process.type === 'renderer' || window.process.__nwjs)
          ? true
          : typeof navigator < 'u' &&
            navigator.userAgent &&
            navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)
          ? false
          : (typeof document < 'u' &&
              document.documentElement &&
              document.documentElement.style &&
              document.documentElement.style.WebkitAppearance) ||
            (typeof window < 'u' &&
              window.console &&
              (window.console.firebug ||
                (window.console.exception && window.console.table))) ||
            (typeof navigator < 'u' &&
              navigator.userAgent &&
              navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) &&
              parseInt(RegExp.$1, 10) >= 31) ||
            (typeof navigator < 'u' &&
              navigator.userAgent &&
              navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
      }
      function il(e2) {
        if (
          ((e2[0] =
            (this.useColors ? '%c' : '') +
            this.namespace +
            (this.useColors ? ' %c' : ' ') +
            e2[0] +
            (this.useColors ? '%c ' : ' ') +
            '+' +
            Zt.exports.humanize(this.diff)),
          !this.useColors)
        )
          return;
        let t2 = 'color: ' + this.color;
        e2.splice(1, 0, t2, 'color: inherit');
        let r2 = 0,
          n2 = 0;
        e2[0].replace(/%[a-zA-Z%]/g, (i) => {
          i !== '%%' && (r2++, i === '%c' && (n2 = r2));
        }),
          e2.splice(n2, 0, t2);
      }
      se.log = console.debug || console.log || (() => {});
      function ol(e2) {
        try {
          e2 ? se.storage.setItem('debug', e2) : se.storage.removeItem('debug');
        } catch {}
      }
      function sl() {
        let e2;
        try {
          e2 = se.storage.getItem('debug');
        } catch {}
        return (
          !e2 &&
            typeof process < 'u' &&
            'env' in process &&
            (e2 = process.env.DEBUG),
          e2
        );
      }
      function al() {
        try {
          return localStorage;
        } catch {}
      }
      Zt.exports = en()(se);
      var { formatters: ll } = Zt.exports;
      ll.j = function (e2) {
        try {
          return JSON.stringify(e2);
        } catch (t2) {
          return '[UnexpectedJSONParseError]: ' + t2.message;
        }
      };
    });
    var tn = L((md, Ci) => {
      'use strict';
      Ci.exports = (e2, t2 = process.argv) => {
        let r2 = e2.startsWith('-') ? '' : e2.length === 1 ? '-' : '--',
          n2 = t2.indexOf(r2 + e2),
          i = t2.indexOf('--');
        return n2 !== -1 && (i === -1 || n2 < i);
      };
    });
    var on = L((fd, Ai) => {
      'use strict';
      var ul = require('os'),
        Mi = require('tty'),
        ce = tn(),
        { env: q } = process,
        Fe;
      ce('no-color') ||
      ce('no-colors') ||
      ce('color=false') ||
      ce('color=never')
        ? (Fe = 0)
        : (ce('color') ||
            ce('colors') ||
            ce('color=true') ||
            ce('color=always')) &&
          (Fe = 1);
      'FORCE_COLOR' in q &&
        (q.FORCE_COLOR === 'true'
          ? (Fe = 1)
          : q.FORCE_COLOR === 'false'
          ? (Fe = 0)
          : (Fe =
              q.FORCE_COLOR.length === 0
                ? 1
                : Math.min(parseInt(q.FORCE_COLOR, 10), 3)));
      function rn(e2) {
        return e2 === 0
          ? false
          : { level: e2, hasBasic: true, has256: e2 >= 2, has16m: e2 >= 3 };
      }
      function nn(e2, t2) {
        if (Fe === 0) return 0;
        if (ce('color=16m') || ce('color=full') || ce('color=truecolor'))
          return 3;
        if (ce('color=256')) return 2;
        if (e2 && !t2 && Fe === void 0) return 0;
        let r2 = Fe || 0;
        if (q.TERM === 'dumb') return r2;
        if (process.platform === 'win32') {
          let n2 = ul.release().split('.');
          return Number(n2[0]) >= 10 && Number(n2[2]) >= 10586
            ? Number(n2[2]) >= 14931
              ? 3
              : 2
            : 1;
        }
        if ('CI' in q)
          return [
            'TRAVIS',
            'CIRCLECI',
            'APPVEYOR',
            'GITLAB_CI',
            'GITHUB_ACTIONS',
            'BUILDKITE',
          ].some((n2) => n2 in q) || q.CI_NAME === 'codeship'
            ? 1
            : r2;
        if ('TEAMCITY_VERSION' in q)
          return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(q.TEAMCITY_VERSION)
            ? 1
            : 0;
        if (q.COLORTERM === 'truecolor') return 3;
        if ('TERM_PROGRAM' in q) {
          let n2 = parseInt((q.TERM_PROGRAM_VERSION || '').split('.')[0], 10);
          switch (q.TERM_PROGRAM) {
            case 'iTerm.app':
              return n2 >= 3 ? 3 : 2;
            case 'Apple_Terminal':
              return 2;
          }
        }
        return /-256(color)?$/i.test(q.TERM)
          ? 2
          : /^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(
              q.TERM
            ) || 'COLORTERM' in q
          ? 1
          : r2;
      }
      function cl(e2) {
        let t2 = nn(e2, e2 && e2.isTTY);
        return rn(t2);
      }
      Ai.exports = {
        supportsColor: cl,
        stdout: rn(nn(true, Mi.isatty(1))),
        stderr: rn(nn(true, Mi.isatty(2))),
      };
    });
    var Ri = L((V2, er) => {
      var pl = require('tty'),
        Xt = require('util');
      V2.init = xl;
      V2.log = gl;
      V2.formatArgs = ml;
      V2.save = yl;
      V2.load = hl;
      V2.useColors = dl;
      V2.destroy = Xt.deprecate(() => {},
      'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');
      V2.colors = [6, 2, 3, 4, 5, 1];
      try {
        let e2 = on();
        e2 &&
          (e2.stderr || e2).level >= 2 &&
          (V2.colors = [
            20, 21, 26, 27, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 56, 57, 62,
            63, 68, 69, 74, 75, 76, 77, 78, 79, 80, 81, 92, 93, 98, 99, 112,
            113, 128, 129, 134, 135, 148, 149, 160, 161, 162, 163, 164, 165,
            166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 184, 185, 196,
            197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
            214, 215, 220, 221,
          ]);
      } catch {}
      V2.inspectOpts = Object.keys(process.env)
        .filter((e2) => /^debug_/i.test(e2))
        .reduce((e2, t2) => {
          let r2 = t2
              .substring(6)
              .toLowerCase()
              .replace(/_([a-z])/g, (i, o2) => o2.toUpperCase()),
            n2 = process.env[t2];
          return (
            /^(yes|on|true|enabled)$/i.test(n2)
              ? (n2 = true)
              : /^(no|off|false|disabled)$/i.test(n2)
              ? (n2 = false)
              : n2 === 'null'
              ? (n2 = null)
              : (n2 = Number(n2)),
            (e2[r2] = n2),
            e2
          );
        }, {});
      function dl() {
        return 'colors' in V2.inspectOpts
          ? Boolean(V2.inspectOpts.colors)
          : pl.isatty(process.stderr.fd);
      }
      function ml(e2) {
        let { namespace: t2, useColors: r2 } = this;
        if (r2) {
          let n2 = this.color,
            i = '\x1B[3' + (n2 < 8 ? n2 : '8;5;' + n2),
            o2 = `  ${i};1m${t2} \x1B[0m`;
          (e2[0] =
            o2 +
            e2[0]
              .split(
                `
`
              )
              .join(
                `
` + o2
              )),
            e2.push(i + 'm+' + er.exports.humanize(this.diff) + '\x1B[0m');
        } else e2[0] = fl() + t2 + ' ' + e2[0];
      }
      function fl() {
        return V2.inspectOpts.hideDate
          ? ''
          : /* @__PURE__ */ new Date().toISOString() + ' ';
      }
      function gl(...e2) {
        return process.stderr.write(
          Xt.format(...e2) +
            `
`
        );
      }
      function yl(e2) {
        e2 ? (process.env.DEBUG = e2) : delete process.env.DEBUG;
      }
      function hl() {
        return process.env.DEBUG;
      }
      function xl(e2) {
        e2.inspectOpts = {};
        let t2 = Object.keys(V2.inspectOpts);
        for (let r2 = 0; r2 < t2.length; r2++)
          e2.inspectOpts[t2[r2]] = V2.inspectOpts[t2[r2]];
      }
      er.exports = en()(V2);
      var { formatters: Si } = er.exports;
      Si.o = function (e2) {
        return (
          (this.inspectOpts.colors = this.useColors),
          Xt.inspect(e2, this.inspectOpts)
            .split(
              `
`
            )
            .map((t2) => t2.trim())
            .join(' ')
        );
      };
      Si.O = function (e2) {
        return (
          (this.inspectOpts.colors = this.useColors),
          Xt.inspect(e2, this.inspectOpts)
        );
      };
    });
    var Fi = L((gd, sn) => {
      typeof process > 'u' ||
      process.type === 'renderer' ||
      process.browser === true ||
      process.__nwjs
        ? (sn.exports = vi())
        : (sn.exports = Ri());
    });
    var Bi = L((Gd, dn) => {
      'use strict';
      var C = dn.exports;
      dn.exports.default = C;
      var S = '\x1B[',
        Pt = '\x1B]',
        tt = '\x07',
        or = ';',
        ji = process.env.TERM_PROGRAM === 'Apple_Terminal';
      C.cursorTo = (e2, t2) => {
        if (typeof e2 != 'number')
          throw new TypeError('The `x` argument is required');
        return typeof t2 != 'number'
          ? S + (e2 + 1) + 'G'
          : S + (t2 + 1) + ';' + (e2 + 1) + 'H';
      };
      C.cursorMove = (e2, t2) => {
        if (typeof e2 != 'number')
          throw new TypeError('The `x` argument is required');
        let r2 = '';
        return (
          e2 < 0 ? (r2 += S + -e2 + 'D') : e2 > 0 && (r2 += S + e2 + 'C'),
          t2 < 0 ? (r2 += S + -t2 + 'A') : t2 > 0 && (r2 += S + t2 + 'B'),
          r2
        );
      };
      C.cursorUp = (e2 = 1) => S + e2 + 'A';
      C.cursorDown = (e2 = 1) => S + e2 + 'B';
      C.cursorForward = (e2 = 1) => S + e2 + 'C';
      C.cursorBackward = (e2 = 1) => S + e2 + 'D';
      C.cursorLeft = S + 'G';
      C.cursorSavePosition = ji ? '\x1B7' : S + 's';
      C.cursorRestorePosition = ji ? '\x1B8' : S + 'u';
      C.cursorGetPosition = S + '6n';
      C.cursorNextLine = S + 'E';
      C.cursorPrevLine = S + 'F';
      C.cursorHide = S + '?25l';
      C.cursorShow = S + '?25h';
      C.eraseLines = (e2) => {
        let t2 = '';
        for (let r2 = 0; r2 < e2; r2++)
          t2 += C.eraseLine + (r2 < e2 - 1 ? C.cursorUp() : '');
        return e2 && (t2 += C.cursorLeft), t2;
      };
      C.eraseEndLine = S + 'K';
      C.eraseStartLine = S + '1K';
      C.eraseLine = S + '2K';
      C.eraseDown = S + 'J';
      C.eraseUp = S + '1J';
      C.eraseScreen = S + '2J';
      C.scrollUp = S + 'S';
      C.scrollDown = S + 'T';
      C.clearScreen = '\x1Bc';
      C.clearTerminal =
        process.platform === 'win32'
          ? `${C.eraseScreen}${S}0f`
          : `${C.eraseScreen}${S}3J${S}H`;
      C.beep = tt;
      C.link = (e2, t2) =>
        [Pt, '8', or, or, t2, tt, e2, Pt, '8', or, or, tt].join('');
      C.image = (e2, t2 = {}) => {
        let r2 = `${Pt}1337;File=inline=1`;
        return (
          t2.width && (r2 += `;width=${t2.width}`),
          t2.height && (r2 += `;height=${t2.height}`),
          t2.preserveAspectRatio === false && (r2 += ';preserveAspectRatio=0'),
          r2 + ':' + e2.toString('base64') + tt
        );
      };
      C.iTerm = {
        setCwd: (e2 = process.cwd()) => `${Pt}50;CurrentDir=${e2}${tt}`,
        annotation: (e2, t2 = {}) => {
          let r2 = `${Pt}1337;`,
            n2 = typeof t2.x < 'u',
            i = typeof t2.y < 'u';
          if ((n2 || i) && !(n2 && i && typeof t2.length < 'u'))
            throw new Error(
              '`x`, `y` and `length` must be defined when `x` or `y` is defined'
            );
          return (
            (e2 = e2.replace(/\|/g, '')),
            (r2 += t2.isHidden ? 'AddHiddenAnnotation=' : 'AddAnnotation='),
            t2.length > 0
              ? (r2 += (
                  n2 ? [e2, t2.length, t2.x, t2.y] : [t2.length, e2]
                ).join('|'))
              : (r2 += e2),
            r2 + tt
          );
        },
      };
    });
    var Ui = L((Wd, Vi) => {
      'use strict';
      var vl = on(),
        rt = tn();
      function Ki(e2) {
        if (/^\d{3,4}$/.test(e2)) {
          let r2 = /(\d{1,2})(\d{2})/.exec(e2);
          return {
            major: 0,
            minor: parseInt(r2[1], 10),
            patch: parseInt(r2[2], 10),
          };
        }
        let t2 = (e2 || '').split('.').map((r2) => parseInt(r2, 10));
        return { major: t2[0], minor: t2[1], patch: t2[2] };
      }
      function mn(e2) {
        let { env: t2 } = process;
        if ('FORCE_HYPERLINK' in t2)
          return !(
            t2.FORCE_HYPERLINK.length > 0 &&
            parseInt(t2.FORCE_HYPERLINK, 10) === 0
          );
        if (
          rt('no-hyperlink') ||
          rt('no-hyperlinks') ||
          rt('hyperlink=false') ||
          rt('hyperlink=never')
        )
          return false;
        if (rt('hyperlink=true') || rt('hyperlink=always') || 'NETLIFY' in t2)
          return true;
        if (
          !vl.supportsColor(e2) ||
          (e2 && !e2.isTTY) ||
          process.platform === 'win32' ||
          'CI' in t2 ||
          'TEAMCITY_VERSION' in t2
        )
          return false;
        if ('TERM_PROGRAM' in t2) {
          let r2 = Ki(t2.TERM_PROGRAM_VERSION);
          switch (t2.TERM_PROGRAM) {
            case 'iTerm.app':
              return r2.major === 3 ? r2.minor >= 1 : r2.major > 3;
            case 'WezTerm':
              return r2.major >= 20200620;
            case 'vscode':
              return r2.major > 1 || (r2.major === 1 && r2.minor >= 72);
          }
        }
        if ('VTE_VERSION' in t2) {
          if (t2.VTE_VERSION === '0.50.0') return false;
          let r2 = Ki(t2.VTE_VERSION);
          return r2.major > 0 || r2.minor >= 50;
        }
        return false;
      }
      Vi.exports = {
        supportsHyperlink: mn,
        stdout: mn(process.stdout),
        stderr: mn(process.stderr),
      };
    });
    var Ji = L((Hd, Et) => {
      'use strict';
      var Cl = Bi(),
        fn = Ui(),
        Qi = (e2, t2, { target: r2 = 'stdout', ...n2 } = {}) =>
          fn[r2]
            ? Cl.link(e2, t2)
            : n2.fallback === false
            ? e2
            : typeof n2.fallback == 'function'
            ? n2.fallback(e2, t2)
            : `${e2} (\u200B${t2}\u200B)`;
      Et.exports = (e2, t2, r2 = {}) => Qi(e2, t2, r2);
      Et.exports.stderr = (e2, t2, r2 = {}) =>
        Qi(e2, t2, { target: 'stderr', ...r2 });
      Et.exports.isSupported = fn.stdout;
      Et.exports.stderr.isSupported = fn.stderr;
    });
    var ro = L((mm, jl) => {
      jl.exports = {
        name: 'dotenv',
        version: '16.0.3',
        description: 'Loads environment variables from .env file',
        main: 'lib/main.js',
        types: 'lib/main.d.ts',
        exports: {
          '.': {
            require: './lib/main.js',
            types: './lib/main.d.ts',
            default: './lib/main.js',
          },
          './config': './config.js',
          './config.js': './config.js',
          './lib/env-options': './lib/env-options.js',
          './lib/env-options.js': './lib/env-options.js',
          './lib/cli-options': './lib/cli-options.js',
          './lib/cli-options.js': './lib/cli-options.js',
          './package.json': './package.json',
        },
        scripts: {
          'dts-check': 'tsc --project tests/types/tsconfig.json',
          lint: 'standard',
          'lint-readme': 'standard-markdown',
          pretest: 'npm run lint && npm run dts-check',
          test: 'tap tests/*.js --100 -Rspec',
          prerelease: 'npm test',
          release: 'standard-version',
        },
        repository: {
          type: 'git',
          url: 'git://github.com/motdotla/dotenv.git',
        },
        keywords: [
          'dotenv',
          'env',
          '.env',
          'environment',
          'variables',
          'config',
          'settings',
        ],
        readmeFilename: 'README.md',
        license: 'BSD-2-Clause',
        devDependencies: {
          '@types/node': '^17.0.9',
          decache: '^4.6.1',
          dtslint: '^3.7.0',
          sinon: '^12.0.1',
          standard: '^16.0.4',
          'standard-markdown': '^7.1.0',
          'standard-version': '^9.3.2',
          tap: '^15.1.6',
          tar: '^6.1.11',
          typescript: '^4.5.4',
        },
        engines: { node: '>=12' },
      };
    });
    var io = L((fm, cr) => {
      var Bl = require('fs'),
        no = require('path'),
        Kl = require('os'),
        Vl = ro(),
        Ul = Vl.version,
        Ql =
          /(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/gm;
      function Jl(e2) {
        let t2 = {},
          r2 = e2.toString();
        r2 = r2.replace(
          /\r\n?/gm,
          `
`
        );
        let n2;
        for (; (n2 = Ql.exec(r2)) != null; ) {
          let i = n2[1],
            o2 = n2[2] || '';
          o2 = o2.trim();
          let s2 = o2[0];
          (o2 = o2.replace(/^(['"`])([\s\S]*)\1$/gm, '$2')),
            s2 === '"' &&
              ((o2 = o2.replace(
                /\\n/g,
                `
`
              )),
              (o2 = o2.replace(/\\r/g, '\r'))),
            (t2[i] = o2);
        }
        return t2;
      }
      function xn(e2) {
        console.log(`[dotenv@${Ul}][DEBUG] ${e2}`);
      }
      function Gl(e2) {
        return e2[0] === '~' ? no.join(Kl.homedir(), e2.slice(1)) : e2;
      }
      function Wl(e2) {
        let t2 = no.resolve(process.cwd(), '.env'),
          r2 = 'utf8',
          n2 = Boolean(e2 && e2.debug),
          i = Boolean(e2 && e2.override);
        e2 &&
          (e2.path != null && (t2 = Gl(e2.path)),
          e2.encoding != null && (r2 = e2.encoding));
        try {
          let o2 = ur.parse(Bl.readFileSync(t2, { encoding: r2 }));
          return (
            Object.keys(o2).forEach(function (s2) {
              Object.prototype.hasOwnProperty.call(process.env, s2)
                ? (i === true && (process.env[s2] = o2[s2]),
                  n2 &&
                    xn(
                      i === true
                        ? `"${s2}" is already defined in \`process.env\` and WAS overwritten`
                        : `"${s2}" is already defined in \`process.env\` and was NOT overwritten`
                    ))
                : (process.env[s2] = o2[s2]);
            }),
            { parsed: o2 }
          );
        } catch (o2) {
          return n2 && xn(`Failed to load ${t2} ${o2.message}`), { error: o2 };
        }
      }
      var ur = { config: Wl, parse: Jl };
      cr.exports.config = ur.config;
      cr.exports.parse = ur.parse;
      cr.exports = ur;
    });
    var co = L((Pm, uo) => {
      'use strict';
      uo.exports = (e2) => {
        let t2 = e2.match(/^[ \t]*(?=\S)/gm);
        return t2 ? t2.reduce((r2, n2) => Math.min(r2, n2.length), 1 / 0) : 0;
      };
    });
    var mo = L((Em, po) => {
      'use strict';
      var Zl = co();
      po.exports = (e2) => {
        let t2 = Zl(e2);
        if (t2 === 0) return e2;
        let r2 = new RegExp(`^[ \\t]{${t2}}`, 'gm');
        return e2.replace(r2, '');
      };
    });
    var fo = L((Tm, Xl) => {
      Xl.exports = {
        name: '@prisma/engines-version',
        version: '5.1.1-1.6a3747c37ff169c90047725a05a6ef02e32ac97e',
        main: 'index.js',
        types: 'index.d.ts',
        license: 'Apache-2.0',
        author: 'Tim Suchanek <suchanek@prisma.io>',
        prisma: { enginesVersion: '6a3747c37ff169c90047725a05a6ef02e32ac97e' },
        repository: {
          type: 'git',
          url: 'https://github.com/prisma/engines-wrapper.git',
          directory: 'packages/engines-version',
        },
        devDependencies: { '@types/node': '18.17.1', typescript: '4.9.5' },
        files: ['index.js', 'index.d.ts'],
        scripts: { build: 'tsc -d' },
      };
    });
    var En = L((dr) => {
      'use strict';
      Object.defineProperty(dr, '__esModule', { value: true });
      dr.enginesVersion = void 0;
      dr.enginesVersion = fo().prisma.enginesVersion;
    });
    var An = L((Nm, ho) => {
      'use strict';
      ho.exports = (e2, t2 = 1, r2) => {
        if (
          ((r2 = { indent: ' ', includeEmptyLines: false, ...r2 }),
          typeof e2 != 'string')
        )
          throw new TypeError(
            `Expected \`input\` to be a \`string\`, got \`${typeof e2}\``
          );
        if (typeof t2 != 'number')
          throw new TypeError(
            `Expected \`count\` to be a \`number\`, got \`${typeof t2}\``
          );
        if (typeof r2.indent != 'string')
          throw new TypeError(
            `Expected \`options.indent\` to be a \`string\`, got \`${typeof r2.indent}\``
          );
        if (t2 === 0) return e2;
        let n2 = r2.includeEmptyLines ? /^/gm : /^(?!\s*$)/gm;
        return e2.replace(n2, r2.indent.repeat(t2));
      };
    });
    var Po = L((qm, wo) => {
      'use strict';
      wo.exports = ({ onlyFirst: e2 = false } = {}) => {
        let t2 = [
          '[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)',
          '(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))',
        ].join('|');
        return new RegExp(t2, e2 ? void 0 : 'g');
      };
    });
    var On = L((jm, Eo) => {
      'use strict';
      var uu = Po();
      Eo.exports = (e2) => (typeof e2 == 'string' ? e2.replace(uu(), '') : e2);
    });
    var To = L((Km, mr) => {
      'use strict';
      mr.exports = (e2 = {}) => {
        let t2;
        if (e2.repoUrl) t2 = e2.repoUrl;
        else if (e2.user && e2.repo)
          t2 = `https://github.com/${e2.user}/${e2.repo}`;
        else
          throw new Error(
            'You need to specify either the `repoUrl` option or both the `user` and `repo` options'
          );
        let r2 = new URL(`${t2}/issues/new`),
          n2 = [
            'body',
            'title',
            'labels',
            'template',
            'milestone',
            'assignee',
            'projects',
          ];
        for (let i of n2) {
          let o2 = e2[i];
          if (o2 !== void 0) {
            if (i === 'labels' || i === 'projects') {
              if (!Array.isArray(o2))
                throw new TypeError(`The \`${i}\` option should be an array`);
              o2 = o2.join(',');
            }
            r2.searchParams.set(i, o2);
          }
        }
        return r2.toString();
      };
      mr.exports.default = mr.exports;
    });
    var ni = L((jx, Hs) => {
      'use strict';
      Hs.exports = (function () {
        function e2(t2, r2, n2, i, o2) {
          return t2 < r2 || n2 < r2
            ? t2 > n2
              ? n2 + 1
              : t2 + 1
            : i === o2
            ? r2
            : r2 + 1;
        }
        return function (t2, r2) {
          if (t2 === r2) return 0;
          if (t2.length > r2.length) {
            var n2 = t2;
            (t2 = r2), (r2 = n2);
          }
          for (
            var i = t2.length, o2 = r2.length;
            i > 0 && t2.charCodeAt(i - 1) === r2.charCodeAt(o2 - 1);

          )
            i--, o2--;
          for (var s2 = 0; s2 < i && t2.charCodeAt(s2) === r2.charCodeAt(s2); )
            s2++;
          if (((i -= s2), (o2 -= s2), i === 0 || o2 < 3)) return o2;
          var a = 0,
            l2,
            u,
            c2,
            p,
            d,
            g,
            y,
            f,
            b,
            E,
            v,
            x,
            M = [];
          for (l2 = 0; l2 < i; l2++)
            M.push(l2 + 1), M.push(t2.charCodeAt(s2 + l2));
          for (var le = M.length - 1; a < o2 - 3; )
            for (
              b = r2.charCodeAt(s2 + (u = a)),
                E = r2.charCodeAt(s2 + (c2 = a + 1)),
                v = r2.charCodeAt(s2 + (p = a + 2)),
                x = r2.charCodeAt(s2 + (d = a + 3)),
                g = a += 4,
                l2 = 0;
              l2 < le;
              l2 += 2
            )
              (y = M[l2]),
                (f = M[l2 + 1]),
                (u = e2(y, u, c2, b, f)),
                (c2 = e2(u, c2, p, E, f)),
                (p = e2(c2, p, d, v, f)),
                (g = e2(p, d, g, x, f)),
                (M[l2] = g),
                (d = p),
                (p = c2),
                (c2 = u),
                (u = y);
          for (; a < o2; )
            for (
              b = r2.charCodeAt(s2 + (u = a)), g = ++a, l2 = 0;
              l2 < le;
              l2 += 2
            )
              (y = M[l2]), (M[l2] = g = e2(y, u, g, b, M[l2 + 1])), (u = y);
          return g;
        };
      })();
    });
    var Yp = {};
    xt(Yp, {
      DMMF: () => ue,
      DMMFClass: () => bt,
      Debug: () => an,
      Decimal: () => we,
      Extensions: () => Yr,
      MetricsClient: () => st,
      NotFoundError: () => Ce,
      PrismaClientInitializationError: () => _,
      PrismaClientKnownRequestError: () => H,
      PrismaClientRustPanicError: () => ae,
      PrismaClientUnknownRequestError: () => z,
      PrismaClientValidationError: () => te,
      Public: () => Zr,
      Sql: () => U,
      Types: () => Xr,
      defineDmmfProperty: () => Co,
      empty: () => Ao,
      getPrismaClient: () => Ka,
      join: () => Mo,
      makeStrictEnum: () => Va,
      objectEnumValues: () => Pr,
      raw: () => Ln,
      sqltag: () => $n,
      warnEnvConflicts: () => Ua,
      warnOnce: () => In,
    });
    module.exports = za(Yp);
    var Yr = {};
    xt(Yr, { defineExtension: () => di, getExtensionContext: () => mi });
    function di(e2) {
      return typeof e2 == 'function' ? e2 : (t2) => t2.$extends(e2);
    }
    function mi(e2) {
      return e2;
    }
    var Zr = {};
    xt(Zr, { validator: () => fi });
    function fi(...e2) {
      return (t2) => t2;
    }
    var Xr = {};
    xt(Xr, {
      Extensions: () => gi,
      Public: () => yi,
      Result: () => hi,
      Utils: () => xi,
    });
    var gi = {};
    var yi = {};
    var hi = {};
    var xi = {};
    function bi(e2, t2) {
      for (let r2 of t2)
        for (let n2 of Object.getOwnPropertyNames(r2.prototype))
          Object.defineProperty(
            e2.prototype,
            n2,
            Object.getOwnPropertyDescriptor(r2.prototype, n2) ??
              /* @__PURE__ */ Object.create(null)
          );
    }
    var Z = (e2, t2) => {
      let r2 = {};
      for (let n2 of e2) {
        let i = n2[t2];
        r2[i] = n2;
      }
      return r2;
    };
    function wi(e2) {
      return e2.substring(0, 1).toLowerCase() + e2.substring(1);
    }
    var Wt = class {
      constructor({ datamodel: t2 }) {
        (this.datamodel = t2),
          (this.datamodelEnumMap = this.getDatamodelEnumMap()),
          (this.modelMap = this.getModelMap()),
          (this.typeMap = this.getTypeMap()),
          (this.typeAndModelMap = this.getTypeModelMap());
      }
      getDatamodelEnumMap() {
        return Z(this.datamodel.enums, 'name');
      }
      getModelMap() {
        return { ...Z(this.datamodel.models, 'name') };
      }
      getTypeMap() {
        return { ...Z(this.datamodel.types, 'name') };
      }
      getTypeModelMap() {
        return { ...this.getTypeMap(), ...this.getModelMap() };
      }
    };
    var Ht = class {
      constructor({ mappings: t2 }) {
        (this.mappings = t2), (this.mappingsMap = this.getMappingsMap());
      }
      getMappingsMap() {
        return Z(this.mappings.modelOperations, 'model');
      }
      getOtherOperationNames() {
        return [
          Object.values(this.mappings.otherOperations.write),
          Object.values(this.mappings.otherOperations.read),
        ].flat();
      }
    };
    var zt = class {
      constructor({ schema: t2 }) {
        this.outputTypeToMergedOutputType = (t3) => ({
          ...t3,
          fields: t3.fields,
        });
        (this.schema = t2),
          (this.enumMap = this.getEnumMap()),
          (this.outputTypes = this.getOutputTypes()),
          (this.outputTypeMap = this.getMergedOutputTypeMap()),
          this.resolveOutputTypes(),
          (this.inputObjectTypes = this.schema.inputObjectTypes),
          (this.inputTypeMap = this.getInputTypeMap()),
          this.resolveInputTypes(),
          this.resolveFieldArgumentTypes(),
          (this.queryType = this.outputTypeMap.prisma.Query),
          (this.mutationType = this.outputTypeMap.prisma.Mutation),
          (this.rootFieldMap = this.getRootFieldMap());
      }
      get [Symbol.toStringTag]() {
        return 'DMMFClass';
      }
      resolveOutputTypes() {
        this.resolveOutputTypesInNamespace('prisma'),
          this.resolveOutputTypesInNamespace('model');
      }
      resolveOutputTypesInNamespace(t2) {
        for (let r2 of this.outputTypes[t2]) {
          for (let n2 of r2.fields) {
            if (
              typeof n2.outputType.type != 'string' ||
              n2.outputType.location === 'scalar'
            )
              continue;
            let i = n2.outputType.namespace ?? 'model';
            n2.outputType.location === 'outputObjectTypes'
              ? (n2.outputType.type = this.outputTypeMap[i][n2.outputType.type])
              : n2.outputType.location === 'enumTypes' &&
                (n2.outputType.type = this.enumMap[i][n2.outputType.type]);
          }
          r2.fieldMap = Z(r2.fields, 'name');
        }
      }
      resolveInputTypes() {
        this.resolveNamespaceInputTypes('model'),
          this.resolveNamespaceInputTypes('prisma');
      }
      resolveNamespaceInputTypes(t2) {
        let r2 = this.inputObjectTypes[t2] ?? [];
        for (let n2 of r2) {
          for (let i of n2.fields)
            for (let o2 of i.inputTypes) {
              if (typeof o2.type != 'string') continue;
              let s2 = o2.type;
              if (o2.location === 'scalar') continue;
              let a = o2.namespace ?? 'model';
              o2.location === 'inputObjectTypes' &&
                (o2.type = this.inputTypeMap[a][s2]),
                o2.location === 'enumTypes' && (o2.type = this.enumMap[a][s2]);
            }
          n2.fieldMap = Z(n2.fields, 'name');
        }
      }
      resolveFieldArgumentTypes() {
        this.resolveFieldArgumentTypesInNamespace('model'),
          this.resolveFieldArgumentTypesInNamespace('prisma');
      }
      resolveFieldArgumentTypesInNamespace(t2) {
        let r2 = this.outputTypes[t2] ?? [];
        for (let n2 of r2)
          for (let i of n2.fields)
            for (let o2 of i.args)
              for (let s2 of o2.inputTypes) {
                let a = s2.type;
                if (typeof a != 'string' || s2.location === 'scalar') continue;
                let l2 = s2.namespace ?? 'model';
                s2.location === 'inputObjectTypes' &&
                  (s2.type = this.inputTypeMap[l2][a]),
                  s2.location === 'enumTypes' &&
                    (s2.type = this.enumMap[l2][a]);
              }
      }
      getOutputTypes() {
        return {
          model: this.schema.outputObjectTypes.model.map(
            this.outputTypeToMergedOutputType
          ),
          prisma: this.schema.outputObjectTypes.prisma.map(
            this.outputTypeToMergedOutputType
          ),
        };
      }
      getEnumMap() {
        return {
          prisma: Z(this.schema.enumTypes.prisma, 'name'),
          model: this.schema.enumTypes.model
            ? Z(this.schema.enumTypes.model, 'name')
            : {},
        };
      }
      hasEnumInNamespace(t2, r2) {
        return (
          this.schema.enumTypes[r2]?.find((n2) => n2.name === t2) !== void 0
        );
      }
      getMergedOutputTypeMap() {
        return {
          model: Z(this.outputTypes.model, 'name'),
          prisma: Z(this.outputTypes.prisma, 'name'),
        };
      }
      getInputTypeMap() {
        return {
          prisma: Z(this.schema.inputObjectTypes.prisma, 'name'),
          model: this.schema.inputObjectTypes.model
            ? Z(this.schema.inputObjectTypes.model, 'name')
            : {},
        };
      }
      getRootFieldMap() {
        return {
          ...Z(this.queryType.fields, 'name'),
          ...Z(this.mutationType.fields, 'name'),
        };
      }
    };
    var bt = class {
      constructor(t2) {
        return Object.assign(this, new Wt(t2), new Ht(t2), new zt(t2));
      }
    };
    bi(bt, [Wt, Ht, zt]);
    var ue;
    ((t2) => {
      let e2;
      ((x) => (
        (x.findUnique = 'findUnique'),
        (x.findUniqueOrThrow = 'findUniqueOrThrow'),
        (x.findFirst = 'findFirst'),
        (x.findFirstOrThrow = 'findFirstOrThrow'),
        (x.findMany = 'findMany'),
        (x.create = 'create'),
        (x.createMany = 'createMany'),
        (x.update = 'update'),
        (x.updateMany = 'updateMany'),
        (x.upsert = 'upsert'),
        (x.delete = 'delete'),
        (x.deleteMany = 'deleteMany'),
        (x.groupBy = 'groupBy'),
        (x.count = 'count'),
        (x.aggregate = 'aggregate'),
        (x.findRaw = 'findRaw'),
        (x.aggregateRaw = 'aggregateRaw')
      ))((e2 = t2.ModelAction || (t2.ModelAction = {})));
    })(ue || (ue = {}));
    var tr = A(Fi());
    var bl = 100;
    var wt = [];
    typeof process < 'u' &&
      typeof process.stderr?.write != 'function' &&
      (tr.default.log = console.debug ?? console.log);
    function wl(e2) {
      let t2 = (0, tr.default)(e2),
        r2 = Object.assign(
          (...n2) => (
            (t2.log = r2.log),
            n2.length !== 0 && wt.push([e2, ...n2]),
            wt.length > bl && wt.shift(),
            t2('', ...n2)
          ),
          t2
        );
      return r2;
    }
    var an = Object.assign(wl, tr.default);
    function Oi(e2 = 7500) {
      let t2 = wt.map((r2) =>
        r2
          .map((n2) => (typeof n2 == 'string' ? n2 : JSON.stringify(n2)))
          .join(' ')
      ).join(`
`);
      return t2.length < e2 ? t2 : t2.slice(-e2);
    }
    function ki() {
      wt.length = 0;
    }
    var N = an;
    var ln;
    var Di;
    var _i;
    var Ii;
    var Ni = true;
    typeof process < 'u' &&
      (({
        FORCE_COLOR: ln,
        NODE_DISABLE_COLORS: Di,
        NO_COLOR: _i,
        TERM: Ii,
      } = process.env || {}),
      (Ni = process.stdout && process.stdout.isTTY));
    var Pl = {
      enabled:
        !Di &&
        _i == null &&
        Ii !== 'dumb' &&
        ((ln != null && ln !== '0') || Ni),
    };
    function O(e2, t2) {
      let r2 = new RegExp(`\\x1b\\[${t2}m`, 'g'),
        n2 = `\x1B[${e2}m`,
        i = `\x1B[${t2}m`;
      return function (o2) {
        return !Pl.enabled || o2 == null
          ? o2
          : n2 + (~('' + o2).indexOf(i) ? o2.replace(r2, i + n2) : o2) + i;
      };
    }
    var hd = O(0, 0);
    var ne = O(1, 22);
    var Oe = O(2, 22);
    var xd = O(3, 23);
    var X = O(4, 24);
    var bd = O(7, 27);
    var wd = O(8, 28);
    var Pd = O(9, 29);
    var Ed = O(30, 39);
    var pe = O(31, 39);
    var Ue = O(32, 39);
    var ye = O(33, 39);
    var Xe = O(34, 39);
    var Td = O(35, 39);
    var ke = O(36, 39);
    var vd = O(37, 39);
    var rr = O(90, 39);
    var Cd = O(90, 39);
    var Md = O(40, 49);
    var Ad = O(41, 49);
    var Sd = O(42, 49);
    var Rd = O(43, 49);
    var Fd = O(44, 49);
    var Od = O(45, 49);
    var kd = O(46, 49);
    var Dd = O(47, 49);
    var Li = A(require('fs'));
    function un() {
      let e2 = process.env.PRISMA_QUERY_ENGINE_LIBRARY;
      if (!(e2 && Li.default.existsSync(e2)) && process.arch === 'ia32')
        throw new Error(
          'The default query engine type (Node-API, "library") is currently not supported for 32bit Node. Please set `engineType = "binary"` in the "generator" block of your "schema.prisma" file (or use the environment variables "PRISMA_CLIENT_ENGINE_TYPE=binary" and/or "PRISMA_CLI_QUERY_ENGINE_TYPE=binary".)'
        );
    }
    var nr = 'libquery_engine';
    function cn(e2, t2) {
      let r2 = t2 === 'url';
      return e2.includes('windows')
        ? r2
          ? 'query_engine.dll.node'
          : `query_engine-${e2}.dll.node`
        : e2.includes('darwin')
        ? r2
          ? `${nr}.dylib.node`
          : `${nr}-${e2}.dylib.node`
        : r2
        ? `${nr}.so.node`
        : `${nr}-${e2}.so.node`;
    }
    var zi = A(require('child_process'));
    var gn = A(require('fs/promises'));
    var ar = A(require('os'));
    var ir = Symbol('@ts-pattern/matcher');
    var $i = '@ts-pattern/anonymous-select-key';
    var qi = function (e2) {
      return Boolean(e2 && typeof e2 == 'object');
    };
    var pn = function (e2) {
      return e2 && !!e2[ir];
    };
    var El = function e2(t2, r2, n2) {
      if (qi(t2)) {
        if (pn(t2)) {
          var i = t2[ir]().match(r2),
            o2 = i.matched,
            s2 = i.selections;
          return (
            o2 &&
              s2 &&
              Object.keys(s2).forEach(function (l2) {
                return n2(l2, s2[l2]);
              }),
            o2
          );
        }
        if (!qi(r2)) return false;
        if (Array.isArray(t2))
          return (
            !!Array.isArray(r2) &&
            t2.length === r2.length &&
            t2.every(function (l2, u) {
              return e2(l2, r2[u], n2);
            })
          );
        if (t2 instanceof Map)
          return (
            r2 instanceof Map &&
            Array.from(t2.keys()).every(function (l2) {
              return e2(t2.get(l2), r2.get(l2), n2);
            })
          );
        if (t2 instanceof Set) {
          if (!(r2 instanceof Set)) return false;
          if (t2.size === 0) return r2.size === 0;
          if (t2.size === 1) {
            var a = Array.from(t2.values())[0];
            return pn(a)
              ? Array.from(r2.values()).every(function (l2) {
                  return e2(a, l2, n2);
                })
              : r2.has(a);
          }
          return Array.from(t2.values()).every(function (l2) {
            return r2.has(l2);
          });
        }
        return Object.keys(t2).every(function (l2) {
          var u,
            c2 = t2[l2];
          return (
            (l2 in r2 ||
              (pn((u = c2)) && u[ir]().matcherType === 'optional')) &&
            e2(c2, r2[l2], n2)
          );
        });
      }
      return Object.is(r2, t2);
    };
    function Qe(e2) {
      var t2;
      return (
        ((t2 = {})[ir] = function () {
          return {
            match: function (r2) {
              return { matched: Boolean(e2(r2)) };
            },
          };
        }),
        t2
      );
    }
    var qd = Qe(function (e2) {
      return true;
    });
    var jd = Qe(function (e2) {
      return typeof e2 == 'string';
    });
    var Bd = Qe(function (e2) {
      return typeof e2 == 'number';
    });
    var Kd = Qe(function (e2) {
      return typeof e2 == 'boolean';
    });
    var Vd = Qe(function (e2) {
      return typeof e2 == 'bigint';
    });
    var Ud = Qe(function (e2) {
      return typeof e2 == 'symbol';
    });
    var Qd = Qe(function (e2) {
      return e2 == null;
    });
    function et(e2) {
      return new Tl(e2, []);
    }
    var Tl = (function () {
      function e2(r2, n2) {
        (this.value = void 0),
          (this.cases = void 0),
          (this.value = r2),
          (this.cases = n2);
      }
      var t2 = e2.prototype;
      return (
        (t2.with = function () {
          var r2 = [].slice.call(arguments),
            n2 = r2[r2.length - 1],
            i = [r2[0]],
            o2 = [];
          return (
            r2.length === 3 && typeof r2[1] == 'function'
              ? (i.push(r2[0]), o2.push(r2[1]))
              : r2.length > 2 && i.push.apply(i, r2.slice(1, r2.length - 1)),
            new e2(
              this.value,
              this.cases.concat([
                {
                  match: function (s2) {
                    var a = {},
                      l2 = Boolean(
                        i.some(function (u) {
                          return El(u, s2, function (c2, p) {
                            a[c2] = p;
                          });
                        }) &&
                          o2.every(function (u) {
                            return u(s2);
                          })
                      );
                    return {
                      matched: l2,
                      value:
                        l2 && Object.keys(a).length
                          ? $i in a
                            ? a[$i]
                            : a
                          : s2,
                    };
                  },
                  handler: n2,
                },
              ])
            )
          );
        }),
        (t2.when = function (r2, n2) {
          return new e2(
            this.value,
            this.cases.concat([
              {
                match: function (i) {
                  return { matched: Boolean(r2(i)), value: i };
                },
                handler: n2,
              },
            ])
          );
        }),
        (t2.otherwise = function (r2) {
          return new e2(
            this.value,
            this.cases.concat([
              {
                match: function (n2) {
                  return { matched: true, value: n2 };
                },
                handler: r2,
              },
            ])
          ).run();
        }),
        (t2.exhaustive = function () {
          return this.run();
        }),
        (t2.run = function () {
          for (
            var r2 = this.value, n2 = void 0, i = 0;
            i < this.cases.length;
            i++
          ) {
            var o2 = this.cases[i],
              s2 = o2.match(this.value);
            if (s2.matched) {
              (r2 = s2.value), (n2 = o2.handler);
              break;
            }
          }
          if (!n2) {
            var a;
            try {
              a = JSON.stringify(this.value);
            } catch {
              a = this.value;
            }
            throw new Error(
              'Pattern matching error: no pattern matches value ' + a
            );
          }
          return n2(r2, this.value);
        }),
        e2
      );
    })();
    var Yi = require('util');
    var Gi = A(Ji());
    function Tt(e2) {
      return (0, Gi.default)(e2, e2, { fallback: X });
    }
    var Ml = { warn: ye('prisma:warn') };
    var Al = { warn: () => !process.env.PRISMA_DISABLE_WARNINGS };
    function vt(e2, ...t2) {
      Al.warn() && console.warn(`${Ml.warn} ${e2}`, ...t2);
    }
    var Sl = (0, Yi.promisify)(zi.default.exec);
    var ie = N('prisma:get-platform');
    var Rl = ['1.0.x', '1.1.x', '3.0.x'];
    async function Zi() {
      let e2 = ar.default.platform(),
        t2 = process.arch;
      if (e2 === 'freebsd') {
        let s2 = await lr('freebsd-version');
        if (s2 && s2.trim().length > 0) {
          let l2 = /^(\d+)\.?/.exec(s2);
          if (l2)
            return {
              platform: 'freebsd',
              targetDistro: `freebsd${l2[1]}`,
              arch: t2,
            };
        }
      }
      if (e2 !== 'linux') return { platform: e2, arch: t2 };
      let r2 = await Ol(),
        n2 = await ql(),
        i = Dl({ arch: t2, archFromUname: n2, familyDistro: r2.familyDistro }),
        { libssl: o2 } = await _l(i);
      return {
        platform: 'linux',
        libssl: o2,
        arch: t2,
        archFromUname: n2,
        ...r2,
      };
    }
    function Fl(e2) {
      let t2 = /^ID="?([^"\n]*)"?$/im,
        r2 = /^ID_LIKE="?([^"\n]*)"?$/im,
        n2 = t2.exec(e2),
        i = (n2 && n2[1] && n2[1].toLowerCase()) || '',
        o2 = r2.exec(e2),
        s2 = (o2 && o2[1] && o2[1].toLowerCase()) || '',
        a = et({ id: i, idLike: s2 })
          .with({ id: 'alpine' }, ({ id: l2 }) => ({
            targetDistro: 'musl',
            familyDistro: l2,
            originalDistro: l2,
          }))
          .with({ id: 'raspbian' }, ({ id: l2 }) => ({
            targetDistro: 'arm',
            familyDistro: 'debian',
            originalDistro: l2,
          }))
          .with({ id: 'nixos' }, ({ id: l2 }) => ({
            targetDistro: 'nixos',
            originalDistro: l2,
            familyDistro: 'nixos',
          }))
          .with({ id: 'debian' }, { id: 'ubuntu' }, ({ id: l2 }) => ({
            targetDistro: 'debian',
            familyDistro: 'debian',
            originalDistro: l2,
          }))
          .with(
            { id: 'rhel' },
            { id: 'centos' },
            { id: 'fedora' },
            ({ id: l2 }) => ({
              targetDistro: 'rhel',
              familyDistro: 'rhel',
              originalDistro: l2,
            })
          )
          .when(
            ({ idLike: l2 }) => l2.includes('debian') || l2.includes('ubuntu'),
            ({ id: l2 }) => ({
              targetDistro: 'debian',
              familyDistro: 'debian',
              originalDistro: l2,
            })
          )
          .when(
            ({ idLike: l2 }) => i === 'arch' || l2.includes('arch'),
            ({ id: l2 }) => ({
              targetDistro: 'debian',
              familyDistro: 'arch',
              originalDistro: l2,
            })
          )
          .when(
            ({ idLike: l2 }) =>
              l2.includes('centos') ||
              l2.includes('fedora') ||
              l2.includes('rhel') ||
              l2.includes('suse'),
            ({ id: l2 }) => ({
              targetDistro: 'rhel',
              familyDistro: 'rhel',
              originalDistro: l2,
            })
          )
          .otherwise(({ id: l2 }) => ({
            targetDistro: void 0,
            familyDistro: void 0,
            originalDistro: l2,
          }));
      return (
        ie(`Found distro info:
${JSON.stringify(a, null, 2)}`),
        a
      );
    }
    async function Ol() {
      let e2 = '/etc/os-release';
      try {
        let t2 = await gn.default.readFile(e2, { encoding: 'utf-8' });
        return Fl(t2);
      } catch {
        return {
          targetDistro: void 0,
          familyDistro: void 0,
          originalDistro: void 0,
        };
      }
    }
    function kl(e2) {
      let t2 = /^OpenSSL\s(\d+\.\d+)\.\d+/.exec(e2);
      if (t2) {
        let r2 = `${t2[1]}.x`;
        return Xi(r2);
      }
    }
    function Wi(e2) {
      let t2 = /libssl\.so\.(\d)(\.\d)?/.exec(e2);
      if (t2) {
        let r2 = `${t2[1]}${t2[2] ?? '.0'}.x`;
        return Xi(r2);
      }
    }
    function Xi(e2) {
      let t2 = (() => {
        if (to(e2)) return e2;
        let r2 = e2.split('.');
        return (r2[1] = '0'), r2.join('.');
      })();
      if (Rl.includes(t2)) return t2;
    }
    function Dl(e2) {
      return et(e2)
        .with(
          { familyDistro: 'musl' },
          () => (ie('Trying platform-specific paths for "alpine"'), ['/lib'])
        )
        .with(
          { familyDistro: 'debian' },
          ({ archFromUname: t2 }) => (
            ie('Trying platform-specific paths for "debian" (and "ubuntu")'),
            [`/usr/lib/${t2}-linux-gnu`, `/lib/${t2}-linux-gnu`]
          )
        )
        .with(
          { familyDistro: 'rhel' },
          () => (
            ie('Trying platform-specific paths for "rhel"'),
            ['/lib64', '/usr/lib64']
          )
        )
        .otherwise(
          ({ familyDistro: t2, arch: r2, archFromUname: n2 }) => (
            ie(
              `Don't know any platform-specific paths for "${t2}" on ${r2} (${n2})`
            ),
            []
          )
        );
    }
    async function _l(e2) {
      let t2 = 'grep -v "libssl.so.0"',
        r2 = await Hi(e2);
      if (r2) {
        ie(`Found libssl.so file using platform-specific paths: ${r2}`);
        let o2 = Wi(r2);
        if ((ie(`The parsed libssl version is: ${o2}`), o2))
          return { libssl: o2, strategy: 'libssl-specific-path' };
      }
      ie('Falling back to "ldconfig" and other generic paths');
      let n2 = await lr(
        `ldconfig -p | sed "s/.*=>s*//" | sed "s|.*/||" | grep libssl | sort | ${t2}`
      );
      if ((n2 || (n2 = await Hi(['/lib64', '/usr/lib64', '/lib'])), n2)) {
        ie(
          `Found libssl.so file using "ldconfig" or other generic paths: ${n2}`
        );
        let o2 = Wi(n2);
        if ((ie(`The parsed libssl version is: ${o2}`), o2))
          return { libssl: o2, strategy: 'ldconfig' };
      }
      let i = await lr('openssl version -v');
      if (i) {
        ie(`Found openssl binary with version: ${i}`);
        let o2 = kl(i);
        if ((ie(`The parsed openssl version is: ${o2}`), o2))
          return { libssl: o2, strategy: 'openssl-binary' };
      }
      return (
        ie("Couldn't find any version of libssl or OpenSSL in the system"), {}
      );
    }
    async function Hi(e2) {
      for (let t2 of e2) {
        let r2 = await Il(t2);
        if (r2) return r2;
      }
    }
    async function Il(e2) {
      try {
        return (await gn.default.readdir(e2)).find(
          (r2) => r2.startsWith('libssl.so.') && !r2.startsWith('libssl.so.0')
        );
      } catch (t2) {
        if (t2.code === 'ENOENT') return;
        throw t2;
      }
    }
    async function nt() {
      let { binaryTarget: e2 } = await eo();
      return e2;
    }
    function Nl(e2) {
      return e2.binaryTarget !== void 0;
    }
    async function yn() {
      let { memoized: e2, ...t2 } = await eo();
      return t2;
    }
    var sr = {};
    async function eo() {
      if (Nl(sr)) return Promise.resolve({ ...sr, memoized: true });
      let e2 = await Zi(),
        t2 = Ll(e2);
      return (sr = { ...e2, binaryTarget: t2 }), { ...sr, memoized: false };
    }
    function Ll(e2) {
      let {
        platform: t2,
        arch: r2,
        archFromUname: n2,
        libssl: i,
        targetDistro: o2,
        familyDistro: s2,
        originalDistro: a,
      } = e2;
      t2 === 'linux' &&
        !['x64', 'arm64'].includes(r2) &&
        vt(
          `Prisma only officially supports Linux on amd64 (x86_64) and arm64 (aarch64) system architectures. If you are using your own custom Prisma engines, you can ignore this warning, as long as you've compiled the engines for your system architecture "${n2}".`
        );
      let l2 = '1.1.x';
      if (t2 === 'linux' && i === void 0) {
        let c2 = et({ familyDistro: s2 })
          .with(
            { familyDistro: 'debian' },
            () =>
              "Please manually install OpenSSL via `apt-get update -y && apt-get install -y openssl` and try installing Prisma again. If you're running Prisma on Docker, add this command to your Dockerfile, or switch to an image that already has OpenSSL installed."
          )
          .otherwise(
            () =>
              'Please manually install OpenSSL and try installing Prisma again.'
          );
        vt(`Prisma failed to detect the libssl/openssl version to use, and may not work as expected. Defaulting to "openssl-${l2}".
${c2}`);
      }
      let u = 'debian';
      if (
        (t2 === 'linux' &&
          o2 === void 0 &&
          vt(`Prisma doesn't know which engines to download for the Linux distro "${a}". Falling back to Prisma engines built "${u}".
Please report your experience by creating an issue at ${Tt(
            'https://github.com/prisma/prisma/issues'
          )} so we can add your distro to the list of known supported distros.`),
        t2 === 'darwin' && r2 === 'arm64')
      )
        return 'darwin-arm64';
      if (t2 === 'darwin') return 'darwin';
      if (t2 === 'win32') return 'windows';
      if (t2 === 'freebsd') return o2;
      if (t2 === 'openbsd') return 'openbsd';
      if (t2 === 'netbsd') return 'netbsd';
      if (t2 === 'linux' && o2 === 'nixos') return 'linux-nixos';
      if (t2 === 'linux' && r2 === 'arm64')
        return `${o2 === 'musl' ? 'linux-musl-arm64' : 'linux-arm64'}-openssl-${
          i || l2
        }`;
      if (t2 === 'linux' && r2 === 'arm') return `linux-arm-openssl-${i || l2}`;
      if (t2 === 'linux' && o2 === 'musl') {
        let c2 = 'linux-musl';
        return !i || to(i) ? c2 : `${c2}-openssl-${i}`;
      }
      return t2 === 'linux' && o2 && i
        ? `${o2}-openssl-${i}`
        : (t2 !== 'linux' &&
            vt(
              `Prisma detected unknown OS "${t2}" and may not work as expected. Defaulting to "linux".`
            ),
          i
            ? `${u}-openssl-${i}`
            : o2
            ? `${o2}-openssl-${l2}`
            : `${u}-openssl-${l2}`);
    }
    async function $l(e2) {
      try {
        return await e2();
      } catch {
        return;
      }
    }
    function lr(e2) {
      return $l(async () => {
        let t2 = await Sl(e2);
        return (
          ie(`Command "${e2}" successfully returned "${t2.stdout}"`), t2.stdout
        );
      });
    }
    async function ql() {
      return typeof ar.default.machine == 'function'
        ? ar.default.machine()
        : (await lr('uname -m'))?.trim();
    }
    function to(e2) {
      return e2.startsWith('1.');
    }
    var hn = [
      'darwin',
      'darwin-arm64',
      'debian-openssl-1.0.x',
      'debian-openssl-1.1.x',
      'debian-openssl-3.0.x',
      'rhel-openssl-1.0.x',
      'rhel-openssl-1.1.x',
      'rhel-openssl-3.0.x',
      'linux-arm64-openssl-1.1.x',
      'linux-arm64-openssl-1.0.x',
      'linux-arm64-openssl-3.0.x',
      'linux-arm-openssl-1.1.x',
      'linux-arm-openssl-1.0.x',
      'linux-arm-openssl-3.0.x',
      'linux-musl',
      'linux-musl-openssl-3.0.x',
      'linux-musl-arm64-openssl-1.1.x',
      'linux-musl-arm64-openssl-3.0.x',
      'linux-nixos',
      'linux-static-x64',
      'linux-static-arm64',
      'windows',
      'freebsd11',
      'freebsd12',
      'freebsd13',
      'openbsd',
      'netbsd',
      'arm',
    ];
    var wn = A(io());
    var pr = A(require('fs'));
    var it = A(require('path'));
    function oo(e2) {
      let t2 = e2.ignoreProcessEnv ? {} : process.env,
        r2 = (n2) =>
          n2.match(/(.?\${(?:[a-zA-Z0-9_]+)?})/g)?.reduce(function (o2, s2) {
            let a = /(.?)\${([a-zA-Z0-9_]+)?}/g.exec(s2);
            if (!a) return o2;
            let l2 = a[1],
              u,
              c2;
            if (l2 === '\\') (c2 = a[0]), (u = c2.replace('\\$', '$'));
            else {
              let p = a[2];
              (c2 = a[0].substring(l2.length)),
                (u = Object.hasOwnProperty.call(t2, p)
                  ? t2[p]
                  : e2.parsed[p] || ''),
                (u = r2(u));
            }
            return o2.replace(c2, u);
          }, n2) ?? n2;
      for (let n2 in e2.parsed) {
        let i = Object.hasOwnProperty.call(t2, n2) ? t2[n2] : e2.parsed[n2];
        e2.parsed[n2] = r2(i);
      }
      for (let n2 in e2.parsed) t2[n2] = e2.parsed[n2];
      return e2;
    }
    var bn = N('prisma:tryLoadEnv');
    function Ct(
      { rootEnvPath: e2, schemaEnvPath: t2 },
      r2 = { conflictCheck: 'none' }
    ) {
      let n2 = so(e2);
      r2.conflictCheck !== 'none' && Hl(n2, t2, r2.conflictCheck);
      let i = null;
      return (
        ao(n2?.path, t2) || (i = so(t2)),
        !n2 && !i && bn('No Environment variables loaded'),
        i?.dotenvResult.error
          ? console.error(pe(ne('Schema Env Error: ')) + i.dotenvResult.error)
          : {
              message: [n2?.message, i?.message].filter(Boolean).join(`
`),
              parsed: {
                ...n2?.dotenvResult?.parsed,
                ...i?.dotenvResult?.parsed,
              },
            }
      );
    }
    function Hl(e2, t2, r2) {
      let n2 = e2?.dotenvResult.parsed,
        i = !ao(e2?.path, t2);
      if (n2 && t2 && i && pr.default.existsSync(t2)) {
        let o2 = wn.default.parse(pr.default.readFileSync(t2)),
          s2 = [];
        for (let a in o2) n2[a] === o2[a] && s2.push(a);
        if (s2.length > 0) {
          let a = it.default.relative(process.cwd(), e2.path),
            l2 = it.default.relative(process.cwd(), t2);
          if (r2 === 'error') {
            let u = `There is a conflict between env var${
              s2.length > 1 ? 's' : ''
            } in ${X(a)} and ${X(l2)}
Conflicting env vars:
${s2.map((c2) => `  ${ne(c2)}`).join(`
`)}

We suggest to move the contents of ${X(l2)} to ${X(
              a
            )} to consolidate your env vars.
`;
            throw new Error(u);
          } else if (r2 === 'warn') {
            let u = `Conflict for env var${s2.length > 1 ? 's' : ''} ${s2
              .map((c2) => ne(c2))
              .join(', ')} in ${X(a)} and ${X(l2)}
Env vars from ${X(l2)} overwrite the ones from ${X(a)}
      `;
            console.warn(`${ye('warn(prisma)')} ${u}`);
          }
        }
      }
    }
    function so(e2) {
      return zl(e2)
        ? (bn(`Environment variables loaded from ${e2}`),
          {
            dotenvResult: oo(
              wn.default.config({
                path: e2,
                debug: process.env.DOTENV_CONFIG_DEBUG ? true : void 0,
              })
            ),
            message: Oe(
              `Environment variables loaded from ${it.default.relative(
                process.cwd(),
                e2
              )}`
            ),
            path: e2,
          })
        : (bn(`Environment variables not found at ${e2}`), null);
    }
    function ao(e2, t2) {
      return e2 && t2 && it.default.resolve(e2) === it.default.resolve(t2);
    }
    function zl(e2) {
      return Boolean(e2 && pr.default.existsSync(e2));
    }
    var lo = 'library';
    function Pn(e2) {
      let t2 = Yl();
      return (
        t2 ||
        (e2?.config.engineType === 'library'
          ? 'library'
          : e2?.config.engineType === 'binary'
          ? 'binary'
          : lo)
      );
    }
    function Yl() {
      let e2 = process.env.PRISMA_CLIENT_ENGINE_TYPE;
      return e2 === 'library' ? 'library' : e2 === 'binary' ? 'binary' : void 0;
    }
    var eu = A(En());
    var k = A(require('path'));
    var tu = A(En());
    var Mm = N('prisma:engines');
    function go() {
      return k.default.join(__dirname, '../');
    }
    var Am = 'libquery-engine';
    k.default.join(__dirname, '../query-engine-darwin');
    k.default.join(__dirname, '../query-engine-darwin-arm64');
    k.default.join(__dirname, '../query-engine-debian-openssl-1.0.x');
    k.default.join(__dirname, '../query-engine-debian-openssl-1.1.x');
    k.default.join(__dirname, '../query-engine-debian-openssl-3.0.x');
    k.default.join(__dirname, '../query-engine-linux-static-x64');
    k.default.join(__dirname, '../query-engine-linux-static-arm64');
    k.default.join(__dirname, '../query-engine-rhel-openssl-1.0.x');
    k.default.join(__dirname, '../query-engine-rhel-openssl-1.1.x');
    k.default.join(__dirname, '../query-engine-rhel-openssl-3.0.x');
    k.default.join(__dirname, '../libquery_engine-darwin.dylib.node');
    k.default.join(__dirname, '../libquery_engine-darwin-arm64.dylib.node');
    k.default.join(
      __dirname,
      '../libquery_engine-debian-openssl-1.0.x.so.node'
    );
    k.default.join(
      __dirname,
      '../libquery_engine-debian-openssl-1.1.x.so.node'
    );
    k.default.join(
      __dirname,
      '../libquery_engine-debian-openssl-3.0.x.so.node'
    );
    k.default.join(
      __dirname,
      '../libquery_engine-linux-arm64-openssl-1.0.x.so.node'
    );
    k.default.join(
      __dirname,
      '../libquery_engine-linux-arm64-openssl-1.1.x.so.node'
    );
    k.default.join(
      __dirname,
      '../libquery_engine-linux-arm64-openssl-3.0.x.so.node'
    );
    k.default.join(__dirname, '../libquery_engine-linux-musl.so.node');
    k.default.join(
      __dirname,
      '../libquery_engine-linux-musl-openssl-3.0.x.so.node'
    );
    k.default.join(__dirname, '../libquery_engine-rhel-openssl-1.0.x.so.node');
    k.default.join(__dirname, '../libquery_engine-rhel-openssl-1.1.x.so.node');
    k.default.join(__dirname, '../libquery_engine-rhel-openssl-3.0.x.so.node');
    k.default.join(__dirname, '../query_engine-windows.dll.node');
    var Tn = A(require('fs'));
    var yo = N('chmodPlusX');
    function vn(e2) {
      if (process.platform === 'win32') return;
      let t2 = Tn.default.statSync(e2),
        r2 = t2.mode | 64 | 8 | 1;
      if (t2.mode === r2) {
        yo(`Execution permissions of ${e2} are fine`);
        return;
      }
      let n2 = r2.toString(8).slice(-3);
      yo(`Have to call chmodPlusX on ${e2}`), Tn.default.chmodSync(e2, n2);
    }
    function Cn(e2) {
      let t2 = e2.e,
        r2 = (a) =>
          `Prisma cannot find the required \`${a}\` system library in your system`,
        n2 = t2.message.includes('cannot open shared object file'),
        i = `Please refer to the documentation about Prisma's system requirements: ${Tt(
          'https://pris.ly/d/system-requirements'
        )}`,
        o2 = `Unable to require(\`${Oe(e2.id)}\`).`,
        s2 = et({ message: t2.message, code: t2.code })
          .with({ code: 'ENOENT' }, () => 'File does not exist.')
          .when(
            ({ message: a }) => n2 && a.includes('libz'),
            () => `${r2('libz')}. Please install it and try again.`
          )
          .when(
            ({ message: a }) => n2 && a.includes('libgcc_s'),
            () => `${r2('libgcc_s')}. Please install it and try again.`
          )
          .when(
            ({ message: a }) => n2 && a.includes('libssl'),
            () => {
              let a = e2.platformInfo.libssl
                ? `openssl-${e2.platformInfo.libssl}`
                : 'openssl';
              return `${r2('libssl')}. Please install ${a} and try again.`;
            }
          )
          .when(
            ({ message: a }) => a.includes('GLIBC'),
            () =>
              `Prisma has detected an incompatible version of the \`glibc\` C standard library installed in your system. This probably means your system may be too old to run Prisma. ${i}`
          )
          .when(
            ({ message: a }) =>
              e2.platformInfo.platform === 'linux' &&
              a.includes('symbol not found'),
            () =>
              `The Prisma engines are not compatible with your system ${e2.platformInfo.originalDistro} on (${e2.platformInfo.archFromUname}) which uses the \`${e2.platformInfo.binaryTarget}\` binaryTarget by default. ${i}`
          )
          .otherwise(
            () =>
              `The Prisma engines do not seem to be compatible with your system. ${i}`
          );
      return `${o2}
${s2}

Details: ${t2.message}`;
    }
    var Mt = A(require('path'));
    function Mn(e2) {
      return Mt.default.sep === Mt.default.posix.sep
        ? e2
        : e2.split(Mt.default.sep).join(Mt.default.posix.sep);
    }
    var xo = A(An());
    function Rn(e2) {
      return String(new Sn(e2));
    }
    var Sn = class {
      constructor(t2) {
        this.config = t2;
      }
      toString() {
        let { config: t2 } = this,
          r2 = t2.provider.fromEnvVar
            ? `env("${t2.provider.fromEnvVar}")`
            : t2.provider.value,
          n2 = JSON.parse(
            JSON.stringify({
              provider: r2,
              binaryTargets: ru(t2.binaryTargets),
            })
          );
        return `generator ${t2.name} {
${(0, xo.default)(nu(n2), 2)}
}`;
      }
    };
    function ru(e2) {
      let t2;
      if (e2.length > 0) {
        let r2 = e2.find((n2) => n2.fromEnvVar !== null);
        r2
          ? (t2 = `env("${r2.fromEnvVar}")`)
          : (t2 = e2.map((n2) => (n2.native ? 'native' : n2.value)));
      } else t2 = void 0;
      return t2;
    }
    function nu(e2) {
      let t2 = Object.keys(e2).reduce((r2, n2) => Math.max(r2, n2.length), 0);
      return Object.entries(e2).map(
        ([r2, n2]) => `${r2.padEnd(t2)} = ${iu(n2)}`
      ).join(`
`);
    }
    function iu(e2) {
      return JSON.parse(
        JSON.stringify(e2, (t2, r2) =>
          Array.isArray(r2)
            ? `[${r2.map((n2) => JSON.stringify(n2)).join(', ')}]`
            : JSON.stringify(r2)
        )
      );
    }
    var St = {};
    xt(St, {
      error: () => au,
      info: () => su,
      log: () => ou,
      query: () => lu,
      should: () => bo,
      tags: () => At,
      warn: () => Fn,
    });
    var At = {
      error: pe('prisma:error'),
      warn: ye('prisma:warn'),
      info: ke('prisma:info'),
      query: Xe('prisma:query'),
    };
    var bo = { warn: () => !process.env.PRISMA_DISABLE_WARNINGS };
    function ou(...e2) {
      console.log(...e2);
    }
    function Fn(e2, ...t2) {
      bo.warn() && console.warn(`${At.warn} ${e2}`, ...t2);
    }
    function su(e2, ...t2) {
      console.info(`${At.info} ${e2}`, ...t2);
    }
    function au(e2, ...t2) {
      console.error(`${At.error} ${e2}`, ...t2);
    }
    function lu(e2, ...t2) {
      console.log(`${At.query} ${e2}`, ...t2);
    }
    function Je(e2, t2) {
      throw new Error(t2);
    }
    function kn(e2, t2) {
      return Object.prototype.hasOwnProperty.call(e2, t2);
    }
    var Dn = (e2, t2) => e2.reduce((r2, n2) => ((r2[t2(n2)] = n2), r2), {});
    function ot(e2, t2) {
      let r2 = {};
      for (let n2 of Object.keys(e2)) r2[n2] = t2(e2[n2], n2);
      return r2;
    }
    function _n(e2, t2) {
      if (e2.length === 0) return;
      let r2 = e2[0];
      for (let n2 = 1; n2 < e2.length; n2++)
        t2(r2, e2[n2]) < 0 && (r2 = e2[n2]);
      return r2;
    }
    function ee(e2, t2) {
      Object.defineProperty(e2, 'name', { value: t2, configurable: true });
    }
    var vo = /* @__PURE__ */ new Set();
    var In = (e2, t2, ...r2) => {
      vo.has(e2) || (vo.add(e2), Fn(t2, ...r2));
    };
    var H = class extends Error {
      constructor(
        r2,
        { code: n2, clientVersion: i, meta: o2, batchRequestIdx: s2 }
      ) {
        super(r2);
        (this.name = 'PrismaClientKnownRequestError'),
          (this.code = n2),
          (this.clientVersion = i),
          (this.meta = o2),
          Object.defineProperty(this, 'batchRequestIdx', {
            value: s2,
            enumerable: false,
            writable: true,
          });
      }
      get [Symbol.toStringTag]() {
        return 'PrismaClientKnownRequestError';
      }
    };
    ee(H, 'PrismaClientKnownRequestError');
    var Ce = class extends H {
      constructor(t2, r2) {
        super(t2, { code: 'P2025', clientVersion: r2 }),
          (this.name = 'NotFoundError');
      }
    };
    ee(Ce, 'NotFoundError');
    var _ = class extends Error {
      constructor(r2, n2, i) {
        super(r2);
        (this.name = 'PrismaClientInitializationError'),
          (this.clientVersion = n2),
          (this.errorCode = i),
          Error.captureStackTrace(_);
      }
      get [Symbol.toStringTag]() {
        return 'PrismaClientInitializationError';
      }
    };
    ee(_, 'PrismaClientInitializationError');
    var ae = class extends Error {
      constructor(r2, n2) {
        super(r2);
        (this.name = 'PrismaClientRustPanicError'), (this.clientVersion = n2);
      }
      get [Symbol.toStringTag]() {
        return 'PrismaClientRustPanicError';
      }
    };
    ee(ae, 'PrismaClientRustPanicError');
    var z = class extends Error {
      constructor(r2, { clientVersion: n2, batchRequestIdx: i }) {
        super(r2);
        (this.name = 'PrismaClientUnknownRequestError'),
          (this.clientVersion = n2),
          Object.defineProperty(this, 'batchRequestIdx', {
            value: i,
            writable: true,
            enumerable: false,
          });
      }
      get [Symbol.toStringTag]() {
        return 'PrismaClientUnknownRequestError';
      }
    };
    ee(z, 'PrismaClientUnknownRequestError');
    var te = class extends Error {
      constructor(r2, { clientVersion: n2 }) {
        super(r2);
        this.name = 'PrismaClientValidationError';
        this.clientVersion = n2;
      }
      get [Symbol.toStringTag]() {
        return 'PrismaClientValidationError';
      }
    };
    ee(te, 'PrismaClientValidationError');
    var st = class {
      constructor(t2) {
        this._engine = t2;
      }
      prometheus(t2) {
        return this._engine.metrics({ format: 'prometheus', ...t2 });
      }
      json(t2) {
        return this._engine.metrics({ format: 'json', ...t2 });
      }
    };
    function Rt(e2) {
      let t2;
      return {
        get() {
          return t2 || (t2 = { value: e2() }), t2.value;
        },
      };
    }
    function Co(e2, t2) {
      let r2 = Rt(() => pu(t2));
      Object.defineProperty(e2, 'dmmf', { get: () => r2.get() });
    }
    function pu(e2) {
      return {
        datamodel: {
          models: Nn(e2.models),
          enums: Nn(e2.enums),
          types: Nn(e2.types),
        },
      };
    }
    function Nn(e2) {
      return Object.entries(e2).map(([t2, r2]) => ({ name: t2, ...r2 }));
    }
    var qa = require('async_hooks');
    var ja = require('events');
    var Ba = A(require('fs'));
    var Qt = A(require('path'));
    var U = class {
      constructor(t2, r2) {
        if (t2.length - 1 !== r2.length)
          throw t2.length === 0
            ? new TypeError('Expected at least 1 string')
            : new TypeError(
                `Expected ${t2.length} strings to have ${t2.length - 1} values`
              );
        let n2 = r2.reduce(
          (s2, a) => s2 + (a instanceof U ? a.values.length : 1),
          0
        );
        (this.values = new Array(n2)),
          (this.strings = new Array(n2 + 1)),
          (this.strings[0] = t2[0]);
        let i = 0,
          o2 = 0;
        for (; i < r2.length; ) {
          let s2 = r2[i++],
            a = t2[i];
          if (s2 instanceof U) {
            this.strings[o2] += s2.strings[0];
            let l2 = 0;
            for (; l2 < s2.values.length; )
              (this.values[o2++] = s2.values[l2++]),
                (this.strings[o2] = s2.strings[l2]);
            this.strings[o2] += a;
          } else (this.values[o2++] = s2), (this.strings[o2] = a);
        }
      }
      get text() {
        let t2 = 1,
          r2 = this.strings[0];
        for (; t2 < this.strings.length; ) r2 += `$${t2}${this.strings[t2++]}`;
        return r2;
      }
      get sql() {
        let t2 = 1,
          r2 = this.strings[0];
        for (; t2 < this.strings.length; ) r2 += `?${this.strings[t2++]}`;
        return r2;
      }
      inspect() {
        return { text: this.text, sql: this.sql, values: this.values };
      }
    };
    function Mo(e2, t2 = ',', r2 = '', n2 = '') {
      if (e2.length === 0)
        throw new TypeError(
          'Expected `join([])` to be called with an array of multiple elements, but got an empty array'
        );
      return new U([r2, ...Array(e2.length - 1).fill(t2), n2], e2);
    }
    function Ln(e2) {
      return new U([e2], []);
    }
    var Ao = Ln('');
    function $n(e2, ...t2) {
      return new U(e2, t2);
    }
    function Ft(e2) {
      return {
        getKeys() {
          return Object.keys(e2);
        },
        getPropertyValue(t2) {
          return e2[t2];
        },
      };
    }
    function re(e2, t2) {
      return {
        getKeys() {
          return [e2];
        },
        getPropertyValue() {
          return t2();
        },
      };
    }
    var he = class {
      constructor() {
        this._map = /* @__PURE__ */ new Map();
      }
      get(t2) {
        return this._map.get(t2)?.value;
      }
      set(t2, r2) {
        this._map.set(t2, { value: r2 });
      }
      getOrCreate(t2, r2) {
        let n2 = this._map.get(t2);
        if (n2) return n2.value;
        let i = r2();
        return this.set(t2, i), i;
      }
    };
    function Ge(e2) {
      let t2 = new he();
      return {
        getKeys() {
          return e2.getKeys();
        },
        getPropertyValue(r2) {
          return t2.getOrCreate(r2, () => e2.getPropertyValue(r2));
        },
        getPropertyDescriptor(r2) {
          return e2.getPropertyDescriptor?.(r2);
        },
      };
    }
    var Fo = require('util');
    var fr = { enumerable: true, configurable: true, writable: true };
    function gr(e2) {
      let t2 = new Set(e2);
      return {
        getOwnPropertyDescriptor: () => fr,
        has: (r2, n2) => t2.has(n2),
        set: (r2, n2, i) => t2.add(n2) && Reflect.set(r2, n2, i),
        ownKeys: () => [...t2],
      };
    }
    var So = Symbol.for('nodejs.util.inspect.custom');
    function xe(e2, t2) {
      let r2 = du(t2),
        n2 = /* @__PURE__ */ new Set(),
        i = new Proxy(e2, {
          get(o2, s2) {
            if (n2.has(s2)) return o2[s2];
            let a = r2.get(s2);
            return a ? a.getPropertyValue(s2) : o2[s2];
          },
          has(o2, s2) {
            if (n2.has(s2)) return true;
            let a = r2.get(s2);
            return a ? a.has?.(s2) ?? true : Reflect.has(o2, s2);
          },
          ownKeys(o2) {
            let s2 = Ro(Reflect.ownKeys(o2), r2),
              a = Ro(Array.from(r2.keys()), r2);
            return [.../* @__PURE__ */ new Set([...s2, ...a, ...n2])];
          },
          set(o2, s2, a) {
            return r2.get(s2)?.getPropertyDescriptor?.(s2)?.writable === false
              ? false
              : (n2.add(s2), Reflect.set(o2, s2, a));
          },
          getOwnPropertyDescriptor(o2, s2) {
            let a = Reflect.getOwnPropertyDescriptor(o2, s2);
            if (a && !a.configurable) return a;
            let l2 = r2.get(s2);
            return l2
              ? l2.getPropertyDescriptor
                ? { ...fr, ...l2?.getPropertyDescriptor(s2) }
                : fr
              : a;
          },
          defineProperty(o2, s2, a) {
            return n2.add(s2), Reflect.defineProperty(o2, s2, a);
          },
        });
      return (
        (i[So] = function (o2, s2, a = Fo.inspect) {
          let l2 = { ...this };
          return delete l2[So], a(l2, s2);
        }),
        i
      );
    }
    function du(e2) {
      let t2 = /* @__PURE__ */ new Map();
      for (let r2 of e2) {
        let n2 = r2.getKeys();
        for (let i of n2) t2.set(i, r2);
      }
      return t2;
    }
    function Ro(e2, t2) {
      return e2.filter((r2) => t2.get(r2)?.has?.(r2) ?? true);
    }
    function Ot(e2) {
      return {
        getKeys() {
          return e2;
        },
        has() {
          return false;
        },
        getPropertyValue() {},
      };
    }
    function Oo({ error: e2, user_facing_error: t2 }, r2) {
      return t2.error_code
        ? new H(t2.message, {
            code: t2.error_code,
            clientVersion: r2,
            meta: t2.meta,
            batchRequestIdx: t2.batch_request_idx,
          })
        : new z(e2, {
            clientVersion: r2,
            batchRequestIdx: t2.batch_request_idx,
          });
    }
    var yr = class {};
    var No = A(require('fs'));
    var kt = A(require('path'));
    function hr(e2) {
      let { runtimeBinaryTarget: t2 } = e2;
      return `Add "${t2}" to \`binaryTargets\` in the "schema.prisma" file and run \`prisma generate\` after saving it:

${mu(e2)}`;
    }
    function mu(e2) {
      let {
          generator: t2,
          generatorBinaryTargets: r2,
          runtimeBinaryTarget: n2,
        } = e2,
        i = { fromEnvVar: null, value: n2 },
        o2 = [...r2, i];
      return Rn({ ...t2, binaryTargets: o2 });
    }
    function De(e2) {
      let { runtimeBinaryTarget: t2 } = e2;
      return `Prisma Client could not locate the Query Engine for runtime "${t2}".`;
    }
    function _e(e2) {
      let { searchedLocations: t2 } = e2;
      return `The following locations have been searched:
${[...new Set(t2)].map((i) => `  ${i}`).join(`
`)}`;
    }
    function ko(e2) {
      let { runtimeBinaryTarget: t2 } = e2;
      return `${De(e2)}

This happened because \`binaryTargets\` have been pinned, but the actual deployment also required "${t2}".
${hr(e2)}

${_e(e2)}`;
    }
    function xr(e2) {
      return `We would appreciate if you could take the time to share some information with us.
Please help us by answering a few questions: https://pris.ly/${e2}`;
    }
    function Do(e2) {
      let { queryEngineName: t2 } = e2;
      return `${De(e2)}

This is likely caused by a bundler that has not copied "${t2}" next to the resulting bundle.
Ensure that "${t2}" has been copied next to the bundle or in "${
        e2.expectedLocation
      }".

${xr('engine-not-found-bundler-investigation')}

${_e(e2)}`;
    }
    function _o(e2) {
      let { runtimeBinaryTarget: t2, generatorBinaryTargets: r2 } = e2,
        n2 = r2.find((i) => i.native);
      return `${De(e2)}

This happened because Prisma Client was generated for "${
        n2?.value ?? 'unknown'
      }", but the actual deployment required "${t2}".
${hr(e2)}

${_e(e2)}`;
    }
    function Io(e2) {
      let { queryEngineName: t2 } = e2;
      return `${De(e2)}

This is likely caused by tooling that has not copied "${t2}" to the deployment folder.
Ensure that you ran \`prisma generate\` and that "${t2}" has been copied to "${
        e2.expectedLocation
      }".

${xr('engine-not-found-tooling-investigation')}

${_e(e2)}`;
    }
    var fu = N('prisma:client:engines:resolveEnginePath');
    var gu = () => new RegExp('runtime[\\\\/]library\\.m?js$');
    async function Lo(e2, t2) {
      let r2 =
        {
          binary: process.env.PRISMA_QUERY_ENGINE_BINARY,
          library: process.env.PRISMA_QUERY_ENGINE_LIBRARY,
        }[e2] ?? t2.prismaPath;
      if (r2 !== void 0) return r2;
      let { enginePath: n2, searchedLocations: i } = await yu(e2, t2);
      if (
        (fu('enginePath', n2),
        n2 !== void 0 && e2 === 'binary' && vn(n2),
        n2 !== void 0)
      )
        return (t2.prismaPath = n2);
      let o2 = await nt(),
        s2 = t2.generator?.binaryTargets ?? [],
        a = s2.some((d) => d.native),
        l2 = !s2.some((d) => d.value === o2),
        u = __filename.match(gu()) === null,
        c2 = {
          searchedLocations: i,
          generatorBinaryTargets: s2,
          generator: t2.generator,
          runtimeBinaryTarget: o2,
          queryEngineName: $o(e2, o2),
          expectedLocation: kt.default.relative(process.cwd(), t2.dirname),
        },
        p;
      throw (
        (a && l2
          ? (p = _o(c2))
          : l2
          ? (p = ko(c2))
          : u
          ? (p = Do(c2))
          : (p = Io(c2)),
        new _(p, t2.clientVersion))
      );
    }
    async function yu(engineType, config) {
      let binaryTarget = await nt(),
        searchedLocations = [],
        dirname = eval('__dirname'),
        searchLocations = [
          config.dirname,
          kt.default.resolve(dirname, '..'),
          config.generator?.output?.value ?? dirname,
          kt.default.resolve(dirname, '../../../.prisma/client'),
          '/tmp/prisma-engines',
          config.cwd,
        ];
      __filename.includes('resolveEnginePath') && searchLocations.push(go());
      for (let e2 of searchLocations) {
        let t2 = $o(engineType, binaryTarget),
          r2 = kt.default.join(e2, t2);
        if ((searchedLocations.push(e2), No.default.existsSync(r2)))
          return { enginePath: r2, searchedLocations };
      }
      return { enginePath: void 0, searchedLocations };
    }
    function $o(e2, t2) {
      return e2 === 'library'
        ? cn(t2, 'fs')
        : `query-engine-${t2}${t2 === 'windows' ? '.exe' : ''}`;
    }
    function qo(e2, t2) {
      return {
        batch: e2,
        transaction:
          t2?.kind === 'batch'
            ? { isolationLevel: t2.options.isolationLevel }
            : void 0,
      };
    }
    var qn = A(On());
    function jo(e2) {
      return e2
        ? e2
            .replace(/".*"/g, '"X"')
            .replace(/[\s:\[]([+-]?([0-9]*[.])?[0-9]+)/g, (t2) => `${t2[0]}5`)
        : '';
    }
    function Bo(e2) {
      return e2
        .split(
          `
`
        )
        .map((t2) =>
          t2
            .replace(
              /^\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+([+-][0-2]\d:[0-5]\d|Z)\s*/,
              ''
            )
            .replace(/\+\d+\s*ms$/, '')
        ).join(`
`);
    }
    var Ko = A(To());
    function Vo({
      title: e2,
      user: t2 = 'prisma',
      repo: r2 = 'prisma',
      template: n2 = 'bug_report.md',
      body: i,
    }) {
      return (0, Ko.default)({
        user: t2,
        repo: r2,
        template: n2,
        title: e2,
        body: i,
      });
    }
    function Uo({
      version: e2,
      platform: t2,
      title: r2,
      description: n2,
      engineVersion: i,
      database: o2,
      query: s2,
    }) {
      let a = Oi(6e3 - (s2?.length ?? 0)),
        l2 = Bo((0, qn.default)(a)),
        u = n2
          ? `# Description
\`\`\`
${n2}
\`\`\``
          : '',
        c2 = (0,
        qn.default)(`Hi Prisma Team! My Prisma Client just crashed. This is the report:
## Versions

| Name            | Version            |
|-----------------|--------------------|
| Node            | ${process.version?.padEnd(19)}| 
| OS              | ${t2?.padEnd(19)}|
| Prisma Client   | ${e2?.padEnd(19)}|
| Query Engine    | ${i?.padEnd(19)}|
| Database        | ${o2?.padEnd(19)}|

${u}

## Logs
\`\`\`
${l2}
\`\`\`

## Client Snippet
\`\`\`ts
// PLEASE FILL YOUR CODE SNIPPET HERE
\`\`\`

## Schema
\`\`\`prisma
// PLEASE ADD YOUR SCHEMA HERE IF POSSIBLE
\`\`\`

## Prisma Engine Query
\`\`\`
${s2 ? jo(s2) : ''}
\`\`\`
`),
        p = Vo({ title: r2, body: c2 });
      return `${r2}

This is a non-recoverable error which probably happens when the Prisma Query Engine has a panic.

${X(p)}

If you want the Prisma team to look into it, please open the link above \u{1F64F}
To increase the chance of success, please post your schema and a snippet of
how you used Prisma Client in the issue. 
`;
    }
    var Ho = A(require('fs'));
    function Qo(e2) {
      if (e2?.kind === 'itx') return e2.options.id;
    }
    var Bn = A(require('os'));
    var Jo = A(require('path'));
    var jn = Symbol('PrismaLibraryEngineCache');
    function hu() {
      let e2 = globalThis;
      return e2[jn] === void 0 && (e2[jn] = {}), e2[jn];
    }
    function xu(e2) {
      let t2 = hu();
      if (t2[e2] !== void 0) return t2[e2];
      let r2 = Jo.default.toNamespacedPath(e2),
        n2 = { exports: {} },
        i = 0;
      return (
        process.platform !== 'win32' &&
          (i =
            Bn.default.constants.dlopen.RTLD_LAZY |
            Bn.default.constants.dlopen.RTLD_DEEPBIND),
        process.dlopen(n2, r2, i),
        (t2[e2] = n2.exports),
        n2.exports
      );
    }
    var br = class {
      constructor(t2) {
        this.config = t2;
      }
      async loadLibrary() {
        let t2 = await yn(),
          r2 = await Lo('library', this.config);
        try {
          return this.config.tracingHelper.runInChildSpan(
            { name: 'loadLibrary', internal: true },
            () => xu(r2)
          );
        } catch (n2) {
          let i = Cn({ e: n2, platformInfo: t2, id: r2 });
          throw new _(i, this.config.clientVersion);
        }
      }
    };
    var Me = N('prisma:client:libraryEngine');
    function bu(e2) {
      return e2.item_type === 'query' && 'query' in e2;
    }
    function wu(e2) {
      return 'level' in e2
        ? e2.level === 'error' && e2.message === 'PANIC'
        : false;
    }
    var Go = [...hn, 'native'];
    var Wo = 0;
    var Dt = class extends yr {
      constructor(r2, n2 = new br(r2)) {
        super();
        try {
          this.datamodel = Ho.default.readFileSync(r2.datamodelPath, 'utf-8');
        } catch (i) {
          throw i.stack.match(/\/\.next|\/next@|\/next\//)
            ? new _(
                `Your schema.prisma could not be found, and we detected that you are using Next.js.
Find out why and learn how to fix this: https://pris.ly/d/schema-not-found-nextjs`,
                r2.clientVersion
              )
            : r2.isBundled === true
            ? new _(
                'Prisma Client could not find its `schema.prisma`. This is likely caused by a bundling step, which leads to `schema.prisma` not being copied near the resulting bundle. We would appreciate if you could take the time to share some information with us.\nPlease help us by answering a few questions: https://pris.ly/bundler-investigation-error',
                r2.clientVersion
              )
            : i;
        }
        (this.config = r2),
          (this.libraryStarted = false),
          (this.logQueries = r2.logQueries ?? false),
          (this.logLevel = r2.logLevel ?? 'error'),
          (this.libraryLoader = n2),
          (this.logEmitter = r2.logEmitter),
          (this.datasourceOverrides = r2.datasources
            ? this.convertDatasources(r2.datasources)
            : {}),
          r2.enableDebugLogs && (this.logLevel = 'debug'),
          (this.libraryInstantiationPromise = this.instantiateLibrary()),
          this.checkForTooManyEngines();
      }
      checkForTooManyEngines() {
        Wo === 10 &&
          console.warn(
            `${ye(
              'warn(prisma-client)'
            )} This is the 10th instance of Prisma Client being started. Make sure this is intentional.`
          );
      }
      async transaction(r2, n2, i) {
        await this.start();
        let o2 = JSON.stringify(n2),
          s2;
        if (r2 === 'start') {
          let l2 = JSON.stringify({
            max_wait: i?.maxWait ?? 2e3,
            timeout: i?.timeout ?? 5e3,
            isolation_level: i?.isolationLevel,
          });
          s2 = await this.engine?.startTransaction(l2, o2);
        } else
          r2 === 'commit'
            ? (s2 = await this.engine?.commitTransaction(i.id, o2))
            : r2 === 'rollback' &&
              (s2 = await this.engine?.rollbackTransaction(i.id, o2));
        let a = this.parseEngineResponse(s2);
        if (a.error_code)
          throw new H(a.message, {
            code: a.error_code,
            clientVersion: this.config.clientVersion,
            meta: a.meta,
          });
        return a;
      }
      async instantiateLibrary() {
        if ((Me('internalSetup'), this.libraryInstantiationPromise))
          return this.libraryInstantiationPromise;
        un(),
          (this.platform = await this.getPlatform()),
          await this.loadEngine(),
          this.version();
      }
      async getPlatform() {
        if (this.platform) return this.platform;
        let r2 = await nt();
        if (!Go.includes(r2))
          throw new _(
            `Unknown ${pe('PRISMA_QUERY_ENGINE_LIBRARY')} ${pe(
              ne(r2)
            )}. Possible binaryTargets: ${Ue(
              Go.join(', ')
            )} or a path to the query engine library.
You may have to run ${Ue('prisma generate')} for your changes to take effect.`,
            this.config.clientVersion
          );
        return r2;
      }
      parseEngineResponse(r2) {
        if (!r2)
          throw new z('Response from the Engine was empty', {
            clientVersion: this.config.clientVersion,
          });
        try {
          return JSON.parse(r2);
        } catch {
          throw new z('Unable to JSON.parse response from engine', {
            clientVersion: this.config.clientVersion,
          });
        }
      }
      convertDatasources(r2) {
        let n2 = /* @__PURE__ */ Object.create(null);
        for (let { name: i, url: o2 } of r2) n2[i] = o2;
        return n2;
      }
      async loadEngine() {
        if (!this.engine) {
          this.QueryEngineConstructor ||
            ((this.library = await this.libraryLoader.loadLibrary()),
            (this.QueryEngineConstructor = this.library.QueryEngine));
          try {
            let r2 = new WeakRef(this);
            (this.engine = new this.QueryEngineConstructor(
              {
                datamodel: this.datamodel,
                env: process.env,
                logQueries: this.config.logQueries ?? false,
                ignoreEnvVarErrors: true,
                datasourceOverrides: this.datasourceOverrides,
                logLevel: this.logLevel,
                configDir: this.config.cwd,
                engineProtocol: 'json',
              },
              (n2) => {
                r2.deref()?.logger(n2);
              }
            )),
              Wo++;
          } catch (r2) {
            let n2 = r2,
              i = this.parseInitError(n2.message);
            throw typeof i == 'string'
              ? n2
              : new _(i.message, this.config.clientVersion, i.error_code);
          }
        }
      }
      logger(r2) {
        let n2 = this.parseEngineResponse(r2);
        if (!!n2) {
          if ('span' in n2) {
            this.config.tracingHelper.createEngineSpan(n2);
            return;
          }
          (n2.level = n2?.level.toLowerCase() ?? 'unknown'),
            bu(n2)
              ? this.logEmitter.emit('query', {
                  timestamp: /* @__PURE__ */ new Date(),
                  query: n2.query,
                  params: n2.params,
                  duration: Number(n2.duration_ms),
                  target: n2.module_path,
                })
              : wu(n2)
              ? (this.loggerRustPanic = new ae(
                  this.getErrorMessageWithLink(
                    `${n2.message}: ${n2.reason} in ${n2.file}:${n2.line}:${n2.column}`
                  ),
                  this.config.clientVersion
                ))
              : this.logEmitter.emit(n2.level, {
                  timestamp: /* @__PURE__ */ new Date(),
                  message: n2.message,
                  target: n2.module_path,
                });
        }
      }
      getErrorMessageWithLink(r2) {
        return Uo({
          platform: this.platform,
          title: r2,
          version: this.config.clientVersion,
          engineVersion: this.versionInfo?.commit,
          database: this.config.activeProvider,
          query: this.lastQuery,
        });
      }
      parseInitError(r2) {
        try {
          return JSON.parse(r2);
        } catch {}
        return r2;
      }
      parseRequestError(r2) {
        try {
          return JSON.parse(r2);
        } catch {}
        return r2;
      }
      on(r2, n2) {
        if (r2 === 'beforeExit')
          throw new Error(
            '"beforeExit" hook is not applicable to the library engine since Prisma 5.0.0, it is only relevant and implemented for the binary engine. Please add your event listener to the `process` object directly instead.'
          );
        this.logEmitter.on(r2, n2);
      }
      async start() {
        if (
          (await this.libraryInstantiationPromise,
          await this.libraryStoppingPromise,
          this.libraryStartingPromise)
        )
          return (
            Me(
              `library already starting, this.libraryStarted: ${this.libraryStarted}`
            ),
            this.libraryStartingPromise
          );
        if (this.libraryStarted) return;
        let r2 = async () => {
          Me('library starting');
          try {
            let n2 = {
              traceparent: this.config.tracingHelper.getTraceParent(),
            };
            await this.engine?.connect(JSON.stringify(n2)),
              (this.libraryStarted = true),
              Me('library started');
          } catch (n2) {
            let i = this.parseInitError(n2.message);
            throw typeof i == 'string'
              ? n2
              : new _(i.message, this.config.clientVersion, i.error_code);
          } finally {
            this.libraryStartingPromise = void 0;
          }
        };
        return (
          (this.libraryStartingPromise =
            this.config.tracingHelper.runInChildSpan('connect', r2)),
          this.libraryStartingPromise
        );
      }
      async stop() {
        if (
          (await this.libraryStartingPromise,
          await this.executingQueryPromise,
          this.libraryStoppingPromise)
        )
          return Me('library is already stopping'), this.libraryStoppingPromise;
        if (!this.libraryStarted) return;
        let r2 = async () => {
          await new Promise((i) => setTimeout(i, 5)), Me('library stopping');
          let n2 = { traceparent: this.config.tracingHelper.getTraceParent() };
          await this.engine?.disconnect(JSON.stringify(n2)),
            (this.libraryStarted = false),
            (this.libraryStoppingPromise = void 0),
            Me('library stopped');
        };
        return (
          (this.libraryStoppingPromise =
            this.config.tracingHelper.runInChildSpan('disconnect', r2)),
          this.libraryStoppingPromise
        );
      }
      version() {
        return (
          (this.versionInfo = this.library?.version()),
          this.versionInfo?.version ?? 'unknown'
        );
      }
      debugPanic(r2) {
        return this.library?.debugPanic(r2);
      }
      async request(r2, { traceparent: n2, interactiveTransaction: i }) {
        Me(`sending request, this.libraryStarted: ${this.libraryStarted}`);
        let o2 = JSON.stringify({ traceparent: n2 }),
          s2 = JSON.stringify(r2);
        try {
          await this.start(),
            (this.executingQueryPromise = this.engine?.query(s2, o2, i?.id)),
            (this.lastQuery = s2);
          let a = this.parseEngineResponse(await this.executingQueryPromise);
          if (a.errors)
            throw a.errors.length === 1
              ? this.buildQueryError(a.errors[0])
              : new z(JSON.stringify(a.errors), {
                  clientVersion: this.config.clientVersion,
                });
          if (this.loggerRustPanic) throw this.loggerRustPanic;
          return { data: a, elapsed: 0 };
        } catch (a) {
          if (a instanceof _) throw a;
          if (a.code === 'GenericFailure' && a.message?.startsWith('PANIC:'))
            throw new ae(
              this.getErrorMessageWithLink(a.message),
              this.config.clientVersion
            );
          let l2 = this.parseRequestError(a.message);
          throw typeof l2 == 'string'
            ? a
            : new z(
                `${l2.message}
${l2.backtrace}`,
                { clientVersion: this.config.clientVersion }
              );
        }
      }
      async requestBatch(r2, { transaction: n2, traceparent: i }) {
        Me('requestBatch');
        let o2 = qo(r2, n2);
        await this.start(),
          (this.lastQuery = JSON.stringify(o2)),
          (this.executingQueryPromise = this.engine.query(
            this.lastQuery,
            JSON.stringify({ traceparent: i }),
            Qo(n2)
          ));
        let s2 = await this.executingQueryPromise,
          a = this.parseEngineResponse(s2);
        if (a.errors)
          throw a.errors.length === 1
            ? this.buildQueryError(a.errors[0])
            : new z(JSON.stringify(a.errors), {
                clientVersion: this.config.clientVersion,
              });
        let { batchResult: l2, errors: u } = a;
        if (Array.isArray(l2))
          return l2.map((c2) =>
            c2.errors && c2.errors.length > 0
              ? this.loggerRustPanic ?? this.buildQueryError(c2.errors[0])
              : { data: c2, elapsed: 0 }
          );
        throw u && u.length === 1
          ? new Error(u[0].error)
          : new Error(JSON.stringify(a));
      }
      buildQueryError(r2) {
        return r2.user_facing_error.is_panic
          ? new ae(
              this.getErrorMessageWithLink(r2.user_facing_error.message),
              this.config.clientVersion
            )
          : Oo(r2, this.config.clientVersion);
      }
      async metrics(r2) {
        await this.start();
        let n2 = await this.engine.metrics(JSON.stringify(r2));
        return r2.format === 'prometheus' ? n2 : this.parseEngineResponse(n2);
      }
    };
    var at = class {
      constructor(t2 = 0, r2) {
        this.context = r2;
        this.lines = [];
        this.currentLine = '';
        this.currentIndent = 0;
        this.currentIndent = t2;
      }
      write(t2) {
        return (
          typeof t2 == 'string' ? (this.currentLine += t2) : t2.write(this),
          this
        );
      }
      writeJoined(t2, r2) {
        let n2 = r2.length - 1;
        for (let i = 0; i < r2.length; i++)
          this.write(r2[i]), i !== n2 && this.write(t2);
        return this;
      }
      writeLine(t2) {
        return this.write(t2).newLine();
      }
      newLine() {
        this.lines.push(this.indentedCurrentLine()),
          (this.currentLine = ''),
          (this.marginSymbol = void 0);
        let t2 = this.afterNextNewLineCallback;
        return (this.afterNextNewLineCallback = void 0), t2?.(), this;
      }
      withIndent(t2) {
        return this.indent(), t2(this), this.unindent(), this;
      }
      afterNextNewline(t2) {
        return (this.afterNextNewLineCallback = t2), this;
      }
      indent() {
        return this.currentIndent++, this;
      }
      unindent() {
        return this.currentIndent > 0 && this.currentIndent--, this;
      }
      addMarginSymbol(t2) {
        return (this.marginSymbol = t2), this;
      }
      toString() {
        return this.lines.concat(this.indentedCurrentLine()).join(`
`);
      }
      getCurrentLineLength() {
        return this.currentLine.length;
      }
      indentedCurrentLine() {
        let t2 = this.currentLine.padStart(
          this.currentLine.length + 2 * this.currentIndent
        );
        return this.marginSymbol ? this.marginSymbol + t2.slice(1) : t2;
      }
    };
    var wr = Symbol();
    var Kn = /* @__PURE__ */ new WeakMap();
    var Ae = class {
      constructor(t2) {
        t2 === wr
          ? Kn.set(this, `Prisma.${this._getName()}`)
          : Kn.set(
              this,
              `new Prisma.${this._getNamespace()}.${this._getName()}()`
            );
      }
      _getName() {
        return this.constructor.name;
      }
      toString() {
        return Kn.get(this);
      }
    };
    var _t = class extends Ae {
      _getNamespace() {
        return 'NullTypes';
      }
    };
    var It = class extends _t {};
    Vn(It, 'DbNull');
    var Nt = class extends _t {};
    Vn(Nt, 'JsonNull');
    var Lt = class extends _t {};
    Vn(Lt, 'AnyNull');
    var Pr = {
      classes: { DbNull: It, JsonNull: Nt, AnyNull: Lt },
      instances: {
        DbNull: new It(wr),
        JsonNull: new Nt(wr),
        AnyNull: new Lt(wr),
      },
    };
    function Vn(e2, t2) {
      Object.defineProperty(e2, 'name', { value: t2, configurable: true });
    }
    function lt(e2) {
      return (
        e2 instanceof Date ||
        Object.prototype.toString.call(e2) === '[object Date]'
      );
    }
    function Er(e2) {
      return e2.toString() !== 'Invalid Date';
    }
    var ut = 9e15;
    var $e = 1e9;
    var Un = '0123456789abcdef';
    var vr =
      '2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058';
    var Cr =
      '3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789';
    var Qn = {
      precision: 20,
      rounding: 4,
      modulo: 1,
      toExpNeg: -7,
      toExpPos: 21,
      minE: -ut,
      maxE: ut,
      crypto: false,
    };
    var Xo;
    var Se;
    var P = true;
    var Ar = '[DecimalError] ';
    var Le = Ar + 'Invalid argument: ';
    var es = Ar + 'Precision limit exceeded';
    var ts = Ar + 'crypto unavailable';
    var rs = '[object Decimal]';
    var Y = Math.floor;
    var $ = Math.pow;
    var Pu = /^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i;
    var Eu = /^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i;
    var Tu = /^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i;
    var ns = /^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i;
    var me = 1e7;
    var w = 7;
    var vu = 9007199254740991;
    var Cu = vr.length - 1;
    var Jn = Cr.length - 1;
    var m = { toStringTag: rs };
    m.absoluteValue = m.abs = function () {
      var e2 = new this.constructor(this);
      return e2.s < 0 && (e2.s = 1), h(e2);
    };
    m.ceil = function () {
      return h(new this.constructor(this), this.e + 1, 2);
    };
    m.clampedTo = m.clamp = function (e2, t2) {
      var r2,
        n2 = this,
        i = n2.constructor;
      if (((e2 = new i(e2)), (t2 = new i(t2)), !e2.s || !t2.s))
        return new i(NaN);
      if (e2.gt(t2)) throw Error(Le + t2);
      return (r2 = n2.cmp(e2)), r2 < 0 ? e2 : n2.cmp(t2) > 0 ? t2 : new i(n2);
    };
    m.comparedTo = m.cmp = function (e2) {
      var t2,
        r2,
        n2,
        i,
        o2 = this,
        s2 = o2.d,
        a = (e2 = new o2.constructor(e2)).d,
        l2 = o2.s,
        u = e2.s;
      if (!s2 || !a)
        return !l2 || !u
          ? NaN
          : l2 !== u
          ? l2
          : s2 === a
          ? 0
          : !s2 ^ (l2 < 0)
          ? 1
          : -1;
      if (!s2[0] || !a[0]) return s2[0] ? l2 : a[0] ? -u : 0;
      if (l2 !== u) return l2;
      if (o2.e !== e2.e) return (o2.e > e2.e) ^ (l2 < 0) ? 1 : -1;
      for (
        n2 = s2.length, i = a.length, t2 = 0, r2 = n2 < i ? n2 : i;
        t2 < r2;
        ++t2
      )
        if (s2[t2] !== a[t2]) return (s2[t2] > a[t2]) ^ (l2 < 0) ? 1 : -1;
      return n2 === i ? 0 : (n2 > i) ^ (l2 < 0) ? 1 : -1;
    };
    m.cosine = m.cos = function () {
      var e2,
        t2,
        r2 = this,
        n2 = r2.constructor;
      return r2.d
        ? r2.d[0]
          ? ((e2 = n2.precision),
            (t2 = n2.rounding),
            (n2.precision = e2 + Math.max(r2.e, r2.sd()) + w),
            (n2.rounding = 1),
            (r2 = Mu(n2, ls(n2, r2))),
            (n2.precision = e2),
            (n2.rounding = t2),
            h(Se == 2 || Se == 3 ? r2.neg() : r2, e2, t2, true))
          : new n2(1)
        : new n2(NaN);
    };
    m.cubeRoot = m.cbrt = function () {
      var e2,
        t2,
        r2,
        n2,
        i,
        o2,
        s2,
        a,
        l2,
        u,
        c2 = this,
        p = c2.constructor;
      if (!c2.isFinite() || c2.isZero()) return new p(c2);
      for (
        P = false,
          o2 = c2.s * $(c2.s * c2, 1 / 3),
          !o2 || Math.abs(o2) == 1 / 0
            ? ((r2 = Q(c2.d)),
              (e2 = c2.e),
              (o2 = (e2 - r2.length + 1) % 3) &&
                (r2 += o2 == 1 || o2 == -2 ? '0' : '00'),
              (o2 = $(r2, 1 / 3)),
              (e2 = Y((e2 + 1) / 3) - (e2 % 3 == (e2 < 0 ? -1 : 2))),
              o2 == 1 / 0
                ? (r2 = '5e' + e2)
                : ((r2 = o2.toExponential()),
                  (r2 = r2.slice(0, r2.indexOf('e') + 1) + e2)),
              (n2 = new p(r2)),
              (n2.s = c2.s))
            : (n2 = new p(o2.toString())),
          s2 = (e2 = p.precision) + 3;
        ;

      )
        if (
          ((a = n2),
          (l2 = a.times(a).times(a)),
          (u = l2.plus(c2)),
          (n2 = F(u.plus(c2).times(a), u.plus(l2), s2 + 2, 1)),
          Q(a.d).slice(0, s2) === (r2 = Q(n2.d)).slice(0, s2))
        )
          if (
            ((r2 = r2.slice(s2 - 3, s2 + 1)),
            r2 == '9999' || (!i && r2 == '4999'))
          ) {
            if (!i && (h(a, e2 + 1, 0), a.times(a).times(a).eq(c2))) {
              n2 = a;
              break;
            }
            (s2 += 4), (i = 1);
          } else {
            (!+r2 || (!+r2.slice(1) && r2.charAt(0) == '5')) &&
              (h(n2, e2 + 1, 1), (t2 = !n2.times(n2).times(n2).eq(c2)));
            break;
          }
      return (P = true), h(n2, e2, p.rounding, t2);
    };
    m.decimalPlaces = m.dp = function () {
      var e2,
        t2 = this.d,
        r2 = NaN;
      if (t2) {
        if (
          ((e2 = t2.length - 1),
          (r2 = (e2 - Y(this.e / w)) * w),
          (e2 = t2[e2]),
          e2)
        )
          for (; e2 % 10 == 0; e2 /= 10) r2--;
        r2 < 0 && (r2 = 0);
      }
      return r2;
    };
    m.dividedBy = m.div = function (e2) {
      return F(this, new this.constructor(e2));
    };
    m.dividedToIntegerBy = m.divToInt = function (e2) {
      var t2 = this,
        r2 = t2.constructor;
      return h(F(t2, new r2(e2), 0, 1, 1), r2.precision, r2.rounding);
    };
    m.equals = m.eq = function (e2) {
      return this.cmp(e2) === 0;
    };
    m.floor = function () {
      return h(new this.constructor(this), this.e + 1, 3);
    };
    m.greaterThan = m.gt = function (e2) {
      return this.cmp(e2) > 0;
    };
    m.greaterThanOrEqualTo = m.gte = function (e2) {
      var t2 = this.cmp(e2);
      return t2 == 1 || t2 === 0;
    };
    m.hyperbolicCosine = m.cosh = function () {
      var e2,
        t2,
        r2,
        n2,
        i,
        o2 = this,
        s2 = o2.constructor,
        a = new s2(1);
      if (!o2.isFinite()) return new s2(o2.s ? 1 / 0 : NaN);
      if (o2.isZero()) return a;
      (r2 = s2.precision),
        (n2 = s2.rounding),
        (s2.precision = r2 + Math.max(o2.e, o2.sd()) + 4),
        (s2.rounding = 1),
        (i = o2.d.length),
        i < 32
          ? ((e2 = Math.ceil(i / 3)), (t2 = (1 / Rr(4, e2)).toString()))
          : ((e2 = 16), (t2 = '2.3283064365386962890625e-10')),
        (o2 = ct(s2, 1, o2.times(t2), new s2(1), true));
      for (var l2, u = e2, c2 = new s2(8); u--; )
        (l2 = o2.times(o2)), (o2 = a.minus(l2.times(c2.minus(l2.times(c2)))));
      return h(o2, (s2.precision = r2), (s2.rounding = n2), true);
    };
    m.hyperbolicSine = m.sinh = function () {
      var e2,
        t2,
        r2,
        n2,
        i = this,
        o2 = i.constructor;
      if (!i.isFinite() || i.isZero()) return new o2(i);
      if (
        ((t2 = o2.precision),
        (r2 = o2.rounding),
        (o2.precision = t2 + Math.max(i.e, i.sd()) + 4),
        (o2.rounding = 1),
        (n2 = i.d.length),
        n2 < 3)
      )
        i = ct(o2, 2, i, i, true);
      else {
        (e2 = 1.4 * Math.sqrt(n2)),
          (e2 = e2 > 16 ? 16 : e2 | 0),
          (i = i.times(1 / Rr(5, e2))),
          (i = ct(o2, 2, i, i, true));
        for (var s2, a = new o2(5), l2 = new o2(16), u = new o2(20); e2--; )
          (s2 = i.times(i)),
            (i = i.times(a.plus(s2.times(l2.times(s2).plus(u)))));
      }
      return (o2.precision = t2), (o2.rounding = r2), h(i, t2, r2, true);
    };
    m.hyperbolicTangent = m.tanh = function () {
      var e2,
        t2,
        r2 = this,
        n2 = r2.constructor;
      return r2.isFinite()
        ? r2.isZero()
          ? new n2(r2)
          : ((e2 = n2.precision),
            (t2 = n2.rounding),
            (n2.precision = e2 + 7),
            (n2.rounding = 1),
            F(r2.sinh(), r2.cosh(), (n2.precision = e2), (n2.rounding = t2)))
        : new n2(r2.s);
    };
    m.inverseCosine = m.acos = function () {
      var e2,
        t2 = this,
        r2 = t2.constructor,
        n2 = t2.abs().cmp(1),
        i = r2.precision,
        o2 = r2.rounding;
      return n2 !== -1
        ? n2 === 0
          ? t2.isNeg()
            ? de(r2, i, o2)
            : new r2(0)
          : new r2(NaN)
        : t2.isZero()
        ? de(r2, i + 4, o2).times(0.5)
        : ((r2.precision = i + 6),
          (r2.rounding = 1),
          (t2 = t2.asin()),
          (e2 = de(r2, i + 4, o2).times(0.5)),
          (r2.precision = i),
          (r2.rounding = o2),
          e2.minus(t2));
    };
    m.inverseHyperbolicCosine = m.acosh = function () {
      var e2,
        t2,
        r2 = this,
        n2 = r2.constructor;
      return r2.lte(1)
        ? new n2(r2.eq(1) ? 0 : NaN)
        : r2.isFinite()
        ? ((e2 = n2.precision),
          (t2 = n2.rounding),
          (n2.precision = e2 + Math.max(Math.abs(r2.e), r2.sd()) + 4),
          (n2.rounding = 1),
          (P = false),
          (r2 = r2.times(r2).minus(1).sqrt().plus(r2)),
          (P = true),
          (n2.precision = e2),
          (n2.rounding = t2),
          r2.ln())
        : new n2(r2);
    };
    m.inverseHyperbolicSine = m.asinh = function () {
      var e2,
        t2,
        r2 = this,
        n2 = r2.constructor;
      return !r2.isFinite() || r2.isZero()
        ? new n2(r2)
        : ((e2 = n2.precision),
          (t2 = n2.rounding),
          (n2.precision = e2 + 2 * Math.max(Math.abs(r2.e), r2.sd()) + 6),
          (n2.rounding = 1),
          (P = false),
          (r2 = r2.times(r2).plus(1).sqrt().plus(r2)),
          (P = true),
          (n2.precision = e2),
          (n2.rounding = t2),
          r2.ln());
    };
    m.inverseHyperbolicTangent = m.atanh = function () {
      var e2,
        t2,
        r2,
        n2,
        i = this,
        o2 = i.constructor;
      return i.isFinite()
        ? i.e >= 0
          ? new o2(i.abs().eq(1) ? i.s / 0 : i.isZero() ? i : NaN)
          : ((e2 = o2.precision),
            (t2 = o2.rounding),
            (n2 = i.sd()),
            Math.max(n2, e2) < 2 * -i.e - 1
              ? h(new o2(i), e2, t2, true)
              : ((o2.precision = r2 = n2 - i.e),
                (i = F(i.plus(1), new o2(1).minus(i), r2 + e2, 1)),
                (o2.precision = e2 + 4),
                (o2.rounding = 1),
                (i = i.ln()),
                (o2.precision = e2),
                (o2.rounding = t2),
                i.times(0.5)))
        : new o2(NaN);
    };
    m.inverseSine = m.asin = function () {
      var e2,
        t2,
        r2,
        n2,
        i = this,
        o2 = i.constructor;
      return i.isZero()
        ? new o2(i)
        : ((t2 = i.abs().cmp(1)),
          (r2 = o2.precision),
          (n2 = o2.rounding),
          t2 !== -1
            ? t2 === 0
              ? ((e2 = de(o2, r2 + 4, n2).times(0.5)), (e2.s = i.s), e2)
              : new o2(NaN)
            : ((o2.precision = r2 + 6),
              (o2.rounding = 1),
              (i = i.div(new o2(1).minus(i.times(i)).sqrt().plus(1)).atan()),
              (o2.precision = r2),
              (o2.rounding = n2),
              i.times(2)));
    };
    m.inverseTangent = m.atan = function () {
      var e2,
        t2,
        r2,
        n2,
        i,
        o2,
        s2,
        a,
        l2,
        u = this,
        c2 = u.constructor,
        p = c2.precision,
        d = c2.rounding;
      if (u.isFinite()) {
        if (u.isZero()) return new c2(u);
        if (u.abs().eq(1) && p + 4 <= Jn)
          return (s2 = de(c2, p + 4, d).times(0.25)), (s2.s = u.s), s2;
      } else {
        if (!u.s) return new c2(NaN);
        if (p + 4 <= Jn)
          return (s2 = de(c2, p + 4, d).times(0.5)), (s2.s = u.s), s2;
      }
      for (
        c2.precision = a = p + 10,
          c2.rounding = 1,
          r2 = Math.min(28, (a / w + 2) | 0),
          e2 = r2;
        e2;
        --e2
      )
        u = u.div(u.times(u).plus(1).sqrt().plus(1));
      for (
        P = false,
          t2 = Math.ceil(a / w),
          n2 = 1,
          l2 = u.times(u),
          s2 = new c2(u),
          i = u;
        e2 !== -1;

      )
        if (
          ((i = i.times(l2)),
          (o2 = s2.minus(i.div((n2 += 2)))),
          (i = i.times(l2)),
          (s2 = o2.plus(i.div((n2 += 2)))),
          s2.d[t2] !== void 0)
        )
          for (e2 = t2; s2.d[e2] === o2.d[e2] && e2--; );
      return (
        r2 && (s2 = s2.times(2 << (r2 - 1))),
        (P = true),
        h(s2, (c2.precision = p), (c2.rounding = d), true)
      );
    };
    m.isFinite = function () {
      return !!this.d;
    };
    m.isInteger = m.isInt = function () {
      return !!this.d && Y(this.e / w) > this.d.length - 2;
    };
    m.isNaN = function () {
      return !this.s;
    };
    m.isNegative = m.isNeg = function () {
      return this.s < 0;
    };
    m.isPositive = m.isPos = function () {
      return this.s > 0;
    };
    m.isZero = function () {
      return !!this.d && this.d[0] === 0;
    };
    m.lessThan = m.lt = function (e2) {
      return this.cmp(e2) < 0;
    };
    m.lessThanOrEqualTo = m.lte = function (e2) {
      return this.cmp(e2) < 1;
    };
    m.logarithm = m.log = function (e2) {
      var t2,
        r2,
        n2,
        i,
        o2,
        s2,
        a,
        l2,
        u = this,
        c2 = u.constructor,
        p = c2.precision,
        d = c2.rounding,
        g = 5;
      if (e2 == null) (e2 = new c2(10)), (t2 = true);
      else {
        if (
          ((e2 = new c2(e2)),
          (r2 = e2.d),
          e2.s < 0 || !r2 || !r2[0] || e2.eq(1))
        )
          return new c2(NaN);
        t2 = e2.eq(10);
      }
      if (((r2 = u.d), u.s < 0 || !r2 || !r2[0] || u.eq(1)))
        return new c2(r2 && !r2[0] ? -1 / 0 : u.s != 1 ? NaN : r2 ? 0 : 1 / 0);
      if (t2)
        if (r2.length > 1) o2 = true;
        else {
          for (i = r2[0]; i % 10 === 0; ) i /= 10;
          o2 = i !== 1;
        }
      if (
        ((P = false),
        (a = p + g),
        (s2 = Ne(u, a)),
        (n2 = t2 ? Mr(c2, a + 10) : Ne(e2, a)),
        (l2 = F(s2, n2, a, 1)),
        $t(l2.d, (i = p), d))
      )
        do
          if (
            ((a += 10),
            (s2 = Ne(u, a)),
            (n2 = t2 ? Mr(c2, a + 10) : Ne(e2, a)),
            (l2 = F(s2, n2, a, 1)),
            !o2)
          ) {
            +Q(l2.d).slice(i + 1, i + 15) + 1 == 1e14 && (l2 = h(l2, p + 1, 0));
            break;
          }
        while ($t(l2.d, (i += 10), d));
      return (P = true), h(l2, p, d);
    };
    m.minus = m.sub = function (e2) {
      var t2,
        r2,
        n2,
        i,
        o2,
        s2,
        a,
        l2,
        u,
        c2,
        p,
        d,
        g = this,
        y = g.constructor;
      if (((e2 = new y(e2)), !g.d || !e2.d))
        return (
          !g.s || !e2.s
            ? (e2 = new y(NaN))
            : g.d
            ? (e2.s = -e2.s)
            : (e2 = new y(e2.d || g.s !== e2.s ? g : NaN)),
          e2
        );
      if (g.s != e2.s) return (e2.s = -e2.s), g.plus(e2);
      if (
        ((u = g.d),
        (d = e2.d),
        (a = y.precision),
        (l2 = y.rounding),
        !u[0] || !d[0])
      ) {
        if (d[0]) e2.s = -e2.s;
        else if (u[0]) e2 = new y(g);
        else return new y(l2 === 3 ? -0 : 0);
        return P ? h(e2, a, l2) : e2;
      }
      if (
        ((r2 = Y(e2.e / w)),
        (c2 = Y(g.e / w)),
        (u = u.slice()),
        (o2 = c2 - r2),
        o2)
      ) {
        for (
          p = o2 < 0,
            p
              ? ((t2 = u), (o2 = -o2), (s2 = d.length))
              : ((t2 = d), (r2 = c2), (s2 = u.length)),
            n2 = Math.max(Math.ceil(a / w), s2) + 2,
            o2 > n2 && ((o2 = n2), (t2.length = 1)),
            t2.reverse(),
            n2 = o2;
          n2--;

        )
          t2.push(0);
        t2.reverse();
      } else {
        for (
          n2 = u.length, s2 = d.length, p = n2 < s2, p && (s2 = n2), n2 = 0;
          n2 < s2;
          n2++
        )
          if (u[n2] != d[n2]) {
            p = u[n2] < d[n2];
            break;
          }
        o2 = 0;
      }
      for (
        p && ((t2 = u), (u = d), (d = t2), (e2.s = -e2.s)),
          s2 = u.length,
          n2 = d.length - s2;
        n2 > 0;
        --n2
      )
        u[s2++] = 0;
      for (n2 = d.length; n2 > o2; ) {
        if (u[--n2] < d[n2]) {
          for (i = n2; i && u[--i] === 0; ) u[i] = me - 1;
          --u[i], (u[n2] += me);
        }
        u[n2] -= d[n2];
      }
      for (; u[--s2] === 0; ) u.pop();
      for (; u[0] === 0; u.shift()) --r2;
      return u[0]
        ? ((e2.d = u), (e2.e = Sr(u, r2)), P ? h(e2, a, l2) : e2)
        : new y(l2 === 3 ? -0 : 0);
    };
    m.modulo = m.mod = function (e2) {
      var t2,
        r2 = this,
        n2 = r2.constructor;
      return (
        (e2 = new n2(e2)),
        !r2.d || !e2.s || (e2.d && !e2.d[0])
          ? new n2(NaN)
          : !e2.d || (r2.d && !r2.d[0])
          ? h(new n2(r2), n2.precision, n2.rounding)
          : ((P = false),
            n2.modulo == 9
              ? ((t2 = F(r2, e2.abs(), 0, 3, 1)), (t2.s *= e2.s))
              : (t2 = F(r2, e2, 0, n2.modulo, 1)),
            (t2 = t2.times(e2)),
            (P = true),
            r2.minus(t2))
      );
    };
    m.naturalExponential = m.exp = function () {
      return Gn(this);
    };
    m.naturalLogarithm = m.ln = function () {
      return Ne(this);
    };
    m.negated = m.neg = function () {
      var e2 = new this.constructor(this);
      return (e2.s = -e2.s), h(e2);
    };
    m.plus = m.add = function (e2) {
      var t2,
        r2,
        n2,
        i,
        o2,
        s2,
        a,
        l2,
        u,
        c2,
        p = this,
        d = p.constructor;
      if (((e2 = new d(e2)), !p.d || !e2.d))
        return (
          !p.s || !e2.s
            ? (e2 = new d(NaN))
            : p.d || (e2 = new d(e2.d || p.s === e2.s ? p : NaN)),
          e2
        );
      if (p.s != e2.s) return (e2.s = -e2.s), p.minus(e2);
      if (
        ((u = p.d),
        (c2 = e2.d),
        (a = d.precision),
        (l2 = d.rounding),
        !u[0] || !c2[0])
      )
        return c2[0] || (e2 = new d(p)), P ? h(e2, a, l2) : e2;
      if (
        ((o2 = Y(p.e / w)),
        (n2 = Y(e2.e / w)),
        (u = u.slice()),
        (i = o2 - n2),
        i)
      ) {
        for (
          i < 0
            ? ((r2 = u), (i = -i), (s2 = c2.length))
            : ((r2 = c2), (n2 = o2), (s2 = u.length)),
            o2 = Math.ceil(a / w),
            s2 = o2 > s2 ? o2 + 1 : s2 + 1,
            i > s2 && ((i = s2), (r2.length = 1)),
            r2.reverse();
          i--;

        )
          r2.push(0);
        r2.reverse();
      }
      for (
        s2 = u.length,
          i = c2.length,
          s2 - i < 0 && ((i = s2), (r2 = c2), (c2 = u), (u = r2)),
          t2 = 0;
        i;

      )
        (t2 = ((u[--i] = u[i] + c2[i] + t2) / me) | 0), (u[i] %= me);
      for (t2 && (u.unshift(t2), ++n2), s2 = u.length; u[--s2] == 0; ) u.pop();
      return (e2.d = u), (e2.e = Sr(u, n2)), P ? h(e2, a, l2) : e2;
    };
    m.precision = m.sd = function (e2) {
      var t2,
        r2 = this;
      if (e2 !== void 0 && e2 !== !!e2 && e2 !== 1 && e2 !== 0)
        throw Error(Le + e2);
      return (
        r2.d
          ? ((t2 = is(r2.d)), e2 && r2.e + 1 > t2 && (t2 = r2.e + 1))
          : (t2 = NaN),
        t2
      );
    };
    m.round = function () {
      var e2 = this,
        t2 = e2.constructor;
      return h(new t2(e2), e2.e + 1, t2.rounding);
    };
    m.sine = m.sin = function () {
      var e2,
        t2,
        r2 = this,
        n2 = r2.constructor;
      return r2.isFinite()
        ? r2.isZero()
          ? new n2(r2)
          : ((e2 = n2.precision),
            (t2 = n2.rounding),
            (n2.precision = e2 + Math.max(r2.e, r2.sd()) + w),
            (n2.rounding = 1),
            (r2 = Su(n2, ls(n2, r2))),
            (n2.precision = e2),
            (n2.rounding = t2),
            h(Se > 2 ? r2.neg() : r2, e2, t2, true))
        : new n2(NaN);
    };
    m.squareRoot = m.sqrt = function () {
      var e2,
        t2,
        r2,
        n2,
        i,
        o2,
        s2 = this,
        a = s2.d,
        l2 = s2.e,
        u = s2.s,
        c2 = s2.constructor;
      if (u !== 1 || !a || !a[0])
        return new c2(!u || (u < 0 && (!a || a[0])) ? NaN : a ? s2 : 1 / 0);
      for (
        P = false,
          u = Math.sqrt(+s2),
          u == 0 || u == 1 / 0
            ? ((t2 = Q(a)),
              (t2.length + l2) % 2 == 0 && (t2 += '0'),
              (u = Math.sqrt(t2)),
              (l2 = Y((l2 + 1) / 2) - (l2 < 0 || l2 % 2)),
              u == 1 / 0
                ? (t2 = '5e' + l2)
                : ((t2 = u.toExponential()),
                  (t2 = t2.slice(0, t2.indexOf('e') + 1) + l2)),
              (n2 = new c2(t2)))
            : (n2 = new c2(u.toString())),
          r2 = (l2 = c2.precision) + 3;
        ;

      )
        if (
          ((o2 = n2),
          (n2 = o2.plus(F(s2, o2, r2 + 2, 1)).times(0.5)),
          Q(o2.d).slice(0, r2) === (t2 = Q(n2.d)).slice(0, r2))
        )
          if (
            ((t2 = t2.slice(r2 - 3, r2 + 1)),
            t2 == '9999' || (!i && t2 == '4999'))
          ) {
            if (!i && (h(o2, l2 + 1, 0), o2.times(o2).eq(s2))) {
              n2 = o2;
              break;
            }
            (r2 += 4), (i = 1);
          } else {
            (!+t2 || (!+t2.slice(1) && t2.charAt(0) == '5')) &&
              (h(n2, l2 + 1, 1), (e2 = !n2.times(n2).eq(s2)));
            break;
          }
      return (P = true), h(n2, l2, c2.rounding, e2);
    };
    m.tangent = m.tan = function () {
      var e2,
        t2,
        r2 = this,
        n2 = r2.constructor;
      return r2.isFinite()
        ? r2.isZero()
          ? new n2(r2)
          : ((e2 = n2.precision),
            (t2 = n2.rounding),
            (n2.precision = e2 + 10),
            (n2.rounding = 1),
            (r2 = r2.sin()),
            (r2.s = 1),
            (r2 = F(r2, new n2(1).minus(r2.times(r2)).sqrt(), e2 + 10, 0)),
            (n2.precision = e2),
            (n2.rounding = t2),
            h(Se == 2 || Se == 4 ? r2.neg() : r2, e2, t2, true))
        : new n2(NaN);
    };
    m.times = m.mul = function (e2) {
      var t2,
        r2,
        n2,
        i,
        o2,
        s2,
        a,
        l2,
        u,
        c2 = this,
        p = c2.constructor,
        d = c2.d,
        g = (e2 = new p(e2)).d;
      if (((e2.s *= c2.s), !d || !d[0] || !g || !g[0]))
        return new p(
          !e2.s || (d && !d[0] && !g) || (g && !g[0] && !d)
            ? NaN
            : !d || !g
            ? e2.s / 0
            : e2.s * 0
        );
      for (
        r2 = Y(c2.e / w) + Y(e2.e / w),
          l2 = d.length,
          u = g.length,
          l2 < u &&
            ((o2 = d), (d = g), (g = o2), (s2 = l2), (l2 = u), (u = s2)),
          o2 = [],
          s2 = l2 + u,
          n2 = s2;
        n2--;

      )
        o2.push(0);
      for (n2 = u; --n2 >= 0; ) {
        for (t2 = 0, i = l2 + n2; i > n2; )
          (a = o2[i] + g[n2] * d[i - n2 - 1] + t2),
            (o2[i--] = a % me | 0),
            (t2 = (a / me) | 0);
        o2[i] = (o2[i] + t2) % me | 0;
      }
      for (; !o2[--s2]; ) o2.pop();
      return (
        t2 ? ++r2 : o2.shift(),
        (e2.d = o2),
        (e2.e = Sr(o2, r2)),
        P ? h(e2, p.precision, p.rounding) : e2
      );
    };
    m.toBinary = function (e2, t2) {
      return Hn(this, 2, e2, t2);
    };
    m.toDecimalPlaces = m.toDP = function (e2, t2) {
      var r2 = this,
        n2 = r2.constructor;
      return (
        (r2 = new n2(r2)),
        e2 === void 0
          ? r2
          : (oe(e2, 0, $e),
            t2 === void 0 ? (t2 = n2.rounding) : oe(t2, 0, 8),
            h(r2, e2 + r2.e + 1, t2))
      );
    };
    m.toExponential = function (e2, t2) {
      var r2,
        n2 = this,
        i = n2.constructor;
      return (
        e2 === void 0
          ? (r2 = be(n2, true))
          : (oe(e2, 0, $e),
            t2 === void 0 ? (t2 = i.rounding) : oe(t2, 0, 8),
            (n2 = h(new i(n2), e2 + 1, t2)),
            (r2 = be(n2, true, e2 + 1))),
        n2.isNeg() && !n2.isZero() ? '-' + r2 : r2
      );
    };
    m.toFixed = function (e2, t2) {
      var r2,
        n2,
        i = this,
        o2 = i.constructor;
      return (
        e2 === void 0
          ? (r2 = be(i))
          : (oe(e2, 0, $e),
            t2 === void 0 ? (t2 = o2.rounding) : oe(t2, 0, 8),
            (n2 = h(new o2(i), e2 + i.e + 1, t2)),
            (r2 = be(n2, false, e2 + n2.e + 1))),
        i.isNeg() && !i.isZero() ? '-' + r2 : r2
      );
    };
    m.toFraction = function (e2) {
      var t2,
        r2,
        n2,
        i,
        o2,
        s2,
        a,
        l2,
        u,
        c2,
        p,
        d,
        g = this,
        y = g.d,
        f = g.constructor;
      if (!y) return new f(g);
      if (
        ((u = r2 = new f(1)),
        (n2 = l2 = new f(0)),
        (t2 = new f(n2)),
        (o2 = t2.e = is(y) - g.e - 1),
        (s2 = o2 % w),
        (t2.d[0] = $(10, s2 < 0 ? w + s2 : s2)),
        e2 == null)
      )
        e2 = o2 > 0 ? t2 : u;
      else {
        if (((a = new f(e2)), !a.isInt() || a.lt(u))) throw Error(Le + a);
        e2 = a.gt(t2) ? (o2 > 0 ? t2 : u) : a;
      }
      for (
        P = false,
          a = new f(Q(y)),
          c2 = f.precision,
          f.precision = o2 = y.length * w * 2;
        (p = F(a, t2, 0, 1, 1)), (i = r2.plus(p.times(n2))), i.cmp(e2) != 1;

      )
        (r2 = n2),
          (n2 = i),
          (i = u),
          (u = l2.plus(p.times(i))),
          (l2 = i),
          (i = t2),
          (t2 = a.minus(p.times(i))),
          (a = i);
      return (
        (i = F(e2.minus(r2), n2, 0, 1, 1)),
        (l2 = l2.plus(i.times(u))),
        (r2 = r2.plus(i.times(n2))),
        (l2.s = u.s = g.s),
        (d =
          F(u, n2, o2, 1).minus(g).abs().cmp(F(l2, r2, o2, 1).minus(g).abs()) <
          1
            ? [u, n2]
            : [l2, r2]),
        (f.precision = c2),
        (P = true),
        d
      );
    };
    m.toHexadecimal = m.toHex = function (e2, t2) {
      return Hn(this, 16, e2, t2);
    };
    m.toNearest = function (e2, t2) {
      var r2 = this,
        n2 = r2.constructor;
      if (((r2 = new n2(r2)), e2 == null)) {
        if (!r2.d) return r2;
        (e2 = new n2(1)), (t2 = n2.rounding);
      } else {
        if (
          ((e2 = new n2(e2)),
          t2 === void 0 ? (t2 = n2.rounding) : oe(t2, 0, 8),
          !r2.d)
        )
          return e2.s ? r2 : e2;
        if (!e2.d) return e2.s && (e2.s = r2.s), e2;
      }
      return (
        e2.d[0]
          ? ((P = false),
            (r2 = F(r2, e2, 0, t2, 1).times(e2)),
            (P = true),
            h(r2))
          : ((e2.s = r2.s), (r2 = e2)),
        r2
      );
    };
    m.toNumber = function () {
      return +this;
    };
    m.toOctal = function (e2, t2) {
      return Hn(this, 8, e2, t2);
    };
    m.toPower = m.pow = function (e2) {
      var t2,
        r2,
        n2,
        i,
        o2,
        s2,
        a = this,
        l2 = a.constructor,
        u = +(e2 = new l2(e2));
      if (!a.d || !e2.d || !a.d[0] || !e2.d[0]) return new l2($(+a, u));
      if (((a = new l2(a)), a.eq(1))) return a;
      if (((n2 = l2.precision), (o2 = l2.rounding), e2.eq(1)))
        return h(a, n2, o2);
      if (
        ((t2 = Y(e2.e / w)),
        t2 >= e2.d.length - 1 && (r2 = u < 0 ? -u : u) <= vu)
      )
        return (
          (i = os(l2, a, r2, n2)), e2.s < 0 ? new l2(1).div(i) : h(i, n2, o2)
        );
      if (((s2 = a.s), s2 < 0)) {
        if (t2 < e2.d.length - 1) return new l2(NaN);
        if (
          ((e2.d[t2] & 1) == 0 && (s2 = 1),
          a.e == 0 && a.d[0] == 1 && a.d.length == 1)
        )
          return (a.s = s2), a;
      }
      return (
        (r2 = $(+a, u)),
        (t2 =
          r2 == 0 || !isFinite(r2)
            ? Y(u * (Math.log('0.' + Q(a.d)) / Math.LN10 + a.e + 1))
            : new l2(r2 + '').e),
        t2 > l2.maxE + 1 || t2 < l2.minE - 1
          ? new l2(t2 > 0 ? s2 / 0 : 0)
          : ((P = false),
            (l2.rounding = a.s = 1),
            (r2 = Math.min(12, (t2 + '').length)),
            (i = Gn(e2.times(Ne(a, n2 + r2)), n2)),
            i.d &&
              ((i = h(i, n2 + 5, 1)),
              $t(i.d, n2, o2) &&
                ((t2 = n2 + 10),
                (i = h(Gn(e2.times(Ne(a, t2 + r2)), t2), t2 + 5, 1)),
                +Q(i.d).slice(n2 + 1, n2 + 15) + 1 == 1e14 &&
                  (i = h(i, n2 + 1, 0)))),
            (i.s = s2),
            (P = true),
            (l2.rounding = o2),
            h(i, n2, o2))
      );
    };
    m.toPrecision = function (e2, t2) {
      var r2,
        n2 = this,
        i = n2.constructor;
      return (
        e2 === void 0
          ? (r2 = be(n2, n2.e <= i.toExpNeg || n2.e >= i.toExpPos))
          : (oe(e2, 1, $e),
            t2 === void 0 ? (t2 = i.rounding) : oe(t2, 0, 8),
            (n2 = h(new i(n2), e2, t2)),
            (r2 = be(n2, e2 <= n2.e || n2.e <= i.toExpNeg, e2))),
        n2.isNeg() && !n2.isZero() ? '-' + r2 : r2
      );
    };
    m.toSignificantDigits = m.toSD = function (e2, t2) {
      var r2 = this,
        n2 = r2.constructor;
      return (
        e2 === void 0
          ? ((e2 = n2.precision), (t2 = n2.rounding))
          : (oe(e2, 1, $e), t2 === void 0 ? (t2 = n2.rounding) : oe(t2, 0, 8)),
        h(new n2(r2), e2, t2)
      );
    };
    m.toString = function () {
      var e2 = this,
        t2 = e2.constructor,
        r2 = be(e2, e2.e <= t2.toExpNeg || e2.e >= t2.toExpPos);
      return e2.isNeg() && !e2.isZero() ? '-' + r2 : r2;
    };
    m.truncated = m.trunc = function () {
      return h(new this.constructor(this), this.e + 1, 1);
    };
    m.valueOf = m.toJSON = function () {
      var e2 = this,
        t2 = e2.constructor,
        r2 = be(e2, e2.e <= t2.toExpNeg || e2.e >= t2.toExpPos);
      return e2.isNeg() ? '-' + r2 : r2;
    };
    function Q(e2) {
      var t2,
        r2,
        n2,
        i = e2.length - 1,
        o2 = '',
        s2 = e2[0];
      if (i > 0) {
        for (o2 += s2, t2 = 1; t2 < i; t2++)
          (n2 = e2[t2] + ''),
            (r2 = w - n2.length),
            r2 && (o2 += Ie(r2)),
            (o2 += n2);
        (s2 = e2[t2]),
          (n2 = s2 + ''),
          (r2 = w - n2.length),
          r2 && (o2 += Ie(r2));
      } else if (s2 === 0) return '0';
      for (; s2 % 10 === 0; ) s2 /= 10;
      return o2 + s2;
    }
    function oe(e2, t2, r2) {
      if (e2 !== ~~e2 || e2 < t2 || e2 > r2) throw Error(Le + e2);
    }
    function $t(e2, t2, r2, n2) {
      var i, o2, s2, a;
      for (o2 = e2[0]; o2 >= 10; o2 /= 10) --t2;
      return (
        --t2 < 0
          ? ((t2 += w), (i = 0))
          : ((i = Math.ceil((t2 + 1) / w)), (t2 %= w)),
        (o2 = $(10, w - t2)),
        (a = e2[i] % o2 | 0),
        n2 == null
          ? t2 < 3
            ? (t2 == 0 ? (a = (a / 100) | 0) : t2 == 1 && (a = (a / 10) | 0),
              (s2 =
                (r2 < 4 && a == 99999) ||
                (r2 > 3 && a == 49999) ||
                a == 5e4 ||
                a == 0))
            : (s2 =
                (((r2 < 4 && a + 1 == o2) || (r2 > 3 && a + 1 == o2 / 2)) &&
                  ((e2[i + 1] / o2 / 100) | 0) == $(10, t2 - 2) - 1) ||
                ((a == o2 / 2 || a == 0) && ((e2[i + 1] / o2 / 100) | 0) == 0))
          : t2 < 4
          ? (t2 == 0
              ? (a = (a / 1e3) | 0)
              : t2 == 1
              ? (a = (a / 100) | 0)
              : t2 == 2 && (a = (a / 10) | 0),
            (s2 =
              ((n2 || r2 < 4) && a == 9999) || (!n2 && r2 > 3 && a == 4999)))
          : (s2 =
              (((n2 || r2 < 4) && a + 1 == o2) ||
                (!n2 && r2 > 3 && a + 1 == o2 / 2)) &&
              ((e2[i + 1] / o2 / 1e3) | 0) == $(10, t2 - 3) - 1),
        s2
      );
    }
    function Tr(e2, t2, r2) {
      for (var n2, i = [0], o2, s2 = 0, a = e2.length; s2 < a; ) {
        for (o2 = i.length; o2--; ) i[o2] *= t2;
        for (i[0] += Un.indexOf(e2.charAt(s2++)), n2 = 0; n2 < i.length; n2++)
          i[n2] > r2 - 1 &&
            (i[n2 + 1] === void 0 && (i[n2 + 1] = 0),
            (i[n2 + 1] += (i[n2] / r2) | 0),
            (i[n2] %= r2));
      }
      return i.reverse();
    }
    function Mu(e2, t2) {
      var r2, n2, i;
      if (t2.isZero()) return t2;
      (n2 = t2.d.length),
        n2 < 32
          ? ((r2 = Math.ceil(n2 / 3)), (i = (1 / Rr(4, r2)).toString()))
          : ((r2 = 16), (i = '2.3283064365386962890625e-10')),
        (e2.precision += r2),
        (t2 = ct(e2, 1, t2.times(i), new e2(1)));
      for (var o2 = r2; o2--; ) {
        var s2 = t2.times(t2);
        t2 = s2.times(s2).minus(s2).times(8).plus(1);
      }
      return (e2.precision -= r2), t2;
    }
    var F = (function () {
      function e2(n2, i, o2) {
        var s2,
          a = 0,
          l2 = n2.length;
        for (n2 = n2.slice(); l2--; )
          (s2 = n2[l2] * i + a), (n2[l2] = s2 % o2 | 0), (a = (s2 / o2) | 0);
        return a && n2.unshift(a), n2;
      }
      function t2(n2, i, o2, s2) {
        var a, l2;
        if (o2 != s2) l2 = o2 > s2 ? 1 : -1;
        else
          for (a = l2 = 0; a < o2; a++)
            if (n2[a] != i[a]) {
              l2 = n2[a] > i[a] ? 1 : -1;
              break;
            }
        return l2;
      }
      function r2(n2, i, o2, s2) {
        for (var a = 0; o2--; )
          (n2[o2] -= a),
            (a = n2[o2] < i[o2] ? 1 : 0),
            (n2[o2] = a * s2 + n2[o2] - i[o2]);
        for (; !n2[0] && n2.length > 1; ) n2.shift();
      }
      return function (n2, i, o2, s2, a, l2) {
        var u,
          c2,
          p,
          d,
          g,
          y,
          f,
          b,
          E,
          v,
          x,
          M,
          le,
          K,
          Ke,
          I2,
          J,
          ve,
          G,
          He,
          Jt = n2.constructor,
          zr = n2.s == i.s ? 1 : -1,
          W = n2.d,
          R = i.d;
        if (!W || !W[0] || !R || !R[0])
          return new Jt(
            !n2.s || !i.s || (W ? R && W[0] == R[0] : !R)
              ? NaN
              : (W && W[0] == 0) || !R
              ? zr * 0
              : zr / 0
          );
        for (
          l2
            ? ((g = 1), (c2 = n2.e - i.e))
            : ((l2 = me), (g = w), (c2 = Y(n2.e / g) - Y(i.e / g))),
            G = R.length,
            J = W.length,
            E = new Jt(zr),
            v = E.d = [],
            p = 0;
          R[p] == (W[p] || 0);
          p++
        );
        if (
          (R[p] > (W[p] || 0) && c2--,
          o2 == null
            ? ((K = o2 = Jt.precision), (s2 = Jt.rounding))
            : a
            ? (K = o2 + (n2.e - i.e) + 1)
            : (K = o2),
          K < 0)
        )
          v.push(1), (y = true);
        else {
          if (((K = (K / g + 2) | 0), (p = 0), G == 1)) {
            for (d = 0, R = R[0], K++; (p < J || d) && K--; p++)
              (Ke = d * l2 + (W[p] || 0)),
                (v[p] = (Ke / R) | 0),
                (d = Ke % R | 0);
            y = d || p < J;
          } else {
            for (
              d = (l2 / (R[0] + 1)) | 0,
                d > 1 &&
                  ((R = e2(R, d, l2)),
                  (W = e2(W, d, l2)),
                  (G = R.length),
                  (J = W.length)),
                I2 = G,
                x = W.slice(0, G),
                M = x.length;
              M < G;

            )
              x[M++] = 0;
            (He = R.slice()),
              He.unshift(0),
              (ve = R[0]),
              R[1] >= l2 / 2 && ++ve;
            do
              (d = 0),
                (u = t2(R, x, G, M)),
                u < 0
                  ? ((le = x[0]),
                    G != M && (le = le * l2 + (x[1] || 0)),
                    (d = (le / ve) | 0),
                    d > 1
                      ? (d >= l2 && (d = l2 - 1),
                        (f = e2(R, d, l2)),
                        (b = f.length),
                        (M = x.length),
                        (u = t2(f, x, b, M)),
                        u == 1 && (d--, r2(f, G < b ? He : R, b, l2)))
                      : (d == 0 && (u = d = 1), (f = R.slice())),
                    (b = f.length),
                    b < M && f.unshift(0),
                    r2(x, f, M, l2),
                    u == -1 &&
                      ((M = x.length),
                      (u = t2(R, x, G, M)),
                      u < 1 && (d++, r2(x, G < M ? He : R, M, l2))),
                    (M = x.length))
                  : u === 0 && (d++, (x = [0])),
                (v[p++] = d),
                u && x[0] ? (x[M++] = W[I2] || 0) : ((x = [W[I2]]), (M = 1));
            while ((I2++ < J || x[0] !== void 0) && K--);
            y = x[0] !== void 0;
          }
          v[0] || v.shift();
        }
        if (g == 1) (E.e = c2), (Xo = y);
        else {
          for (p = 1, d = v[0]; d >= 10; d /= 10) p++;
          (E.e = p + c2 * g - 1), h(E, a ? o2 + E.e + 1 : o2, s2, y);
        }
        return E;
      };
    })();
    function h(e2, t2, r2, n2) {
      var i,
        o2,
        s2,
        a,
        l2,
        u,
        c2,
        p,
        d,
        g = e2.constructor;
      e: if (t2 != null) {
        if (((p = e2.d), !p)) return e2;
        for (i = 1, a = p[0]; a >= 10; a /= 10) i++;
        if (((o2 = t2 - i), o2 < 0))
          (o2 += w),
            (s2 = t2),
            (c2 = p[(d = 0)]),
            (l2 = (c2 / $(10, i - s2 - 1)) % 10 | 0);
        else if (((d = Math.ceil((o2 + 1) / w)), (a = p.length), d >= a))
          if (n2) {
            for (; a++ <= d; ) p.push(0);
            (c2 = l2 = 0), (i = 1), (o2 %= w), (s2 = o2 - w + 1);
          } else break e;
        else {
          for (c2 = a = p[d], i = 1; a >= 10; a /= 10) i++;
          (o2 %= w),
            (s2 = o2 - w + i),
            (l2 = s2 < 0 ? 0 : (c2 / $(10, i - s2 - 1)) % 10 | 0);
        }
        if (
          ((n2 =
            n2 ||
            t2 < 0 ||
            p[d + 1] !== void 0 ||
            (s2 < 0 ? c2 : c2 % $(10, i - s2 - 1))),
          (u =
            r2 < 4
              ? (l2 || n2) && (r2 == 0 || r2 == (e2.s < 0 ? 3 : 2))
              : l2 > 5 ||
                (l2 == 5 &&
                  (r2 == 4 ||
                    n2 ||
                    (r2 == 6 &&
                      (o2 > 0 ? (s2 > 0 ? c2 / $(10, i - s2) : 0) : p[d - 1]) %
                        10 &
                        1) ||
                    r2 == (e2.s < 0 ? 8 : 7)))),
          t2 < 1 || !p[0])
        )
          return (
            (p.length = 0),
            u
              ? ((t2 -= e2.e + 1),
                (p[0] = $(10, (w - (t2 % w)) % w)),
                (e2.e = -t2 || 0))
              : (p[0] = e2.e = 0),
            e2
          );
        if (
          (o2 == 0
            ? ((p.length = d), (a = 1), d--)
            : ((p.length = d + 1),
              (a = $(10, w - o2)),
              (p[d] = s2 > 0 ? ((c2 / $(10, i - s2)) % $(10, s2) | 0) * a : 0)),
          u)
        )
          for (;;)
            if (d == 0) {
              for (o2 = 1, s2 = p[0]; s2 >= 10; s2 /= 10) o2++;
              for (s2 = p[0] += a, a = 1; s2 >= 10; s2 /= 10) a++;
              o2 != a && (e2.e++, p[0] == me && (p[0] = 1));
              break;
            } else {
              if (((p[d] += a), p[d] != me)) break;
              (p[d--] = 0), (a = 1);
            }
        for (o2 = p.length; p[--o2] === 0; ) p.pop();
      }
      return (
        P &&
          (e2.e > g.maxE
            ? ((e2.d = null), (e2.e = NaN))
            : e2.e < g.minE && ((e2.e = 0), (e2.d = [0]))),
        e2
      );
    }
    function be(e2, t2, r2) {
      if (!e2.isFinite()) return as(e2);
      var n2,
        i = e2.e,
        o2 = Q(e2.d),
        s2 = o2.length;
      return (
        t2
          ? (r2 && (n2 = r2 - s2) > 0
              ? (o2 = o2.charAt(0) + '.' + o2.slice(1) + Ie(n2))
              : s2 > 1 && (o2 = o2.charAt(0) + '.' + o2.slice(1)),
            (o2 = o2 + (e2.e < 0 ? 'e' : 'e+') + e2.e))
          : i < 0
          ? ((o2 = '0.' + Ie(-i - 1) + o2),
            r2 && (n2 = r2 - s2) > 0 && (o2 += Ie(n2)))
          : i >= s2
          ? ((o2 += Ie(i + 1 - s2)),
            r2 && (n2 = r2 - i - 1) > 0 && (o2 = o2 + '.' + Ie(n2)))
          : ((n2 = i + 1) < s2 && (o2 = o2.slice(0, n2) + '.' + o2.slice(n2)),
            r2 &&
              (n2 = r2 - s2) > 0 &&
              (i + 1 === s2 && (o2 += '.'), (o2 += Ie(n2)))),
        o2
      );
    }
    function Sr(e2, t2) {
      var r2 = e2[0];
      for (t2 *= w; r2 >= 10; r2 /= 10) t2++;
      return t2;
    }
    function Mr(e2, t2, r2) {
      if (t2 > Cu) throw ((P = true), r2 && (e2.precision = r2), Error(es));
      return h(new e2(vr), t2, 1, true);
    }
    function de(e2, t2, r2) {
      if (t2 > Jn) throw Error(es);
      return h(new e2(Cr), t2, r2, true);
    }
    function is(e2) {
      var t2 = e2.length - 1,
        r2 = t2 * w + 1;
      if (((t2 = e2[t2]), t2)) {
        for (; t2 % 10 == 0; t2 /= 10) r2--;
        for (t2 = e2[0]; t2 >= 10; t2 /= 10) r2++;
      }
      return r2;
    }
    function Ie(e2) {
      for (var t2 = ''; e2--; ) t2 += '0';
      return t2;
    }
    function os(e2, t2, r2, n2) {
      var i,
        o2 = new e2(1),
        s2 = Math.ceil(n2 / w + 4);
      for (P = false; ; ) {
        if (
          (r2 % 2 && ((o2 = o2.times(t2)), Yo(o2.d, s2) && (i = true)),
          (r2 = Y(r2 / 2)),
          r2 === 0)
        ) {
          (r2 = o2.d.length - 1), i && o2.d[r2] === 0 && ++o2.d[r2];
          break;
        }
        (t2 = t2.times(t2)), Yo(t2.d, s2);
      }
      return (P = true), o2;
    }
    function zo(e2) {
      return e2.d[e2.d.length - 1] & 1;
    }
    function ss(e2, t2, r2) {
      for (var n2, i = new e2(t2[0]), o2 = 0; ++o2 < t2.length; )
        if (((n2 = new e2(t2[o2])), n2.s)) i[r2](n2) && (i = n2);
        else {
          i = n2;
          break;
        }
      return i;
    }
    function Gn(e2, t2) {
      var r2,
        n2,
        i,
        o2,
        s2,
        a,
        l2,
        u = 0,
        c2 = 0,
        p = 0,
        d = e2.constructor,
        g = d.rounding,
        y = d.precision;
      if (!e2.d || !e2.d[0] || e2.e > 17)
        return new d(
          e2.d
            ? e2.d[0]
              ? e2.s < 0
                ? 0
                : 1 / 0
              : 1
            : e2.s
            ? e2.s < 0
              ? 0
              : e2
            : 0 / 0
        );
      for (
        t2 == null ? ((P = false), (l2 = y)) : (l2 = t2), a = new d(0.03125);
        e2.e > -2;

      )
        (e2 = e2.times(a)), (p += 5);
      for (
        n2 = ((Math.log($(2, p)) / Math.LN10) * 2 + 5) | 0,
          l2 += n2,
          r2 = o2 = s2 = new d(1),
          d.precision = l2;
        ;

      ) {
        if (
          ((o2 = h(o2.times(e2), l2, 1)),
          (r2 = r2.times(++c2)),
          (a = s2.plus(F(o2, r2, l2, 1))),
          Q(a.d).slice(0, l2) === Q(s2.d).slice(0, l2))
        ) {
          for (i = p; i--; ) s2 = h(s2.times(s2), l2, 1);
          if (t2 == null)
            if (u < 3 && $t(s2.d, l2 - n2, g, u))
              (d.precision = l2 += 10), (r2 = o2 = a = new d(1)), (c2 = 0), u++;
            else return h(s2, (d.precision = y), g, (P = true));
          else return (d.precision = y), s2;
        }
        s2 = a;
      }
    }
    function Ne(e2, t2) {
      var r2,
        n2,
        i,
        o2,
        s2,
        a,
        l2,
        u,
        c2,
        p,
        d,
        g = 1,
        y = 10,
        f = e2,
        b = f.d,
        E = f.constructor,
        v = E.rounding,
        x = E.precision;
      if (f.s < 0 || !b || !b[0] || (!f.e && b[0] == 1 && b.length == 1))
        return new E(b && !b[0] ? -1 / 0 : f.s != 1 ? NaN : b ? 0 : f);
      if (
        (t2 == null ? ((P = false), (c2 = x)) : (c2 = t2),
        (E.precision = c2 += y),
        (r2 = Q(b)),
        (n2 = r2.charAt(0)),
        Math.abs((o2 = f.e)) < 15e14)
      ) {
        for (; (n2 < 7 && n2 != 1) || (n2 == 1 && r2.charAt(1) > 3); )
          (f = f.times(e2)), (r2 = Q(f.d)), (n2 = r2.charAt(0)), g++;
        (o2 = f.e),
          n2 > 1
            ? ((f = new E('0.' + r2)), o2++)
            : (f = new E(n2 + '.' + r2.slice(1)));
      } else
        return (
          (u = Mr(E, c2 + 2, x).times(o2 + '')),
          (f = Ne(new E(n2 + '.' + r2.slice(1)), c2 - y).plus(u)),
          (E.precision = x),
          t2 == null ? h(f, x, v, (P = true)) : f
        );
      for (
        p = f,
          l2 = s2 = f = F(f.minus(1), f.plus(1), c2, 1),
          d = h(f.times(f), c2, 1),
          i = 3;
        ;

      ) {
        if (
          ((s2 = h(s2.times(d), c2, 1)),
          (u = l2.plus(F(s2, new E(i), c2, 1))),
          Q(u.d).slice(0, c2) === Q(l2.d).slice(0, c2))
        )
          if (
            ((l2 = l2.times(2)),
            o2 !== 0 && (l2 = l2.plus(Mr(E, c2 + 2, x).times(o2 + ''))),
            (l2 = F(l2, new E(g), c2, 1)),
            t2 == null)
          )
            if ($t(l2.d, c2 - y, v, a))
              (E.precision = c2 += y),
                (u = s2 = f = F(p.minus(1), p.plus(1), c2, 1)),
                (d = h(f.times(f), c2, 1)),
                (i = a = 1);
            else return h(l2, (E.precision = x), v, (P = true));
          else return (E.precision = x), l2;
        (l2 = u), (i += 2);
      }
    }
    function as(e2) {
      return String((e2.s * e2.s) / 0);
    }
    function Wn(e2, t2) {
      var r2, n2, i;
      for (
        (r2 = t2.indexOf('.')) > -1 && (t2 = t2.replace('.', '')),
          (n2 = t2.search(/e/i)) > 0
            ? (r2 < 0 && (r2 = n2),
              (r2 += +t2.slice(n2 + 1)),
              (t2 = t2.substring(0, n2)))
            : r2 < 0 && (r2 = t2.length),
          n2 = 0;
        t2.charCodeAt(n2) === 48;
        n2++
      );
      for (i = t2.length; t2.charCodeAt(i - 1) === 48; --i);
      if (((t2 = t2.slice(n2, i)), t2)) {
        if (
          ((i -= n2),
          (e2.e = r2 = r2 - n2 - 1),
          (e2.d = []),
          (n2 = (r2 + 1) % w),
          r2 < 0 && (n2 += w),
          n2 < i)
        ) {
          for (n2 && e2.d.push(+t2.slice(0, n2)), i -= w; n2 < i; )
            e2.d.push(+t2.slice(n2, (n2 += w)));
          (t2 = t2.slice(n2)), (n2 = w - t2.length);
        } else n2 -= i;
        for (; n2--; ) t2 += '0';
        e2.d.push(+t2),
          P &&
            (e2.e > e2.constructor.maxE
              ? ((e2.d = null), (e2.e = NaN))
              : e2.e < e2.constructor.minE && ((e2.e = 0), (e2.d = [0])));
      } else (e2.e = 0), (e2.d = [0]);
      return e2;
    }
    function Au(e2, t2) {
      var r2, n2, i, o2, s2, a, l2, u, c2;
      if (t2.indexOf('_') > -1) {
        if (((t2 = t2.replace(/(\d)_(?=\d)/g, '$1')), ns.test(t2)))
          return Wn(e2, t2);
      } else if (t2 === 'Infinity' || t2 === 'NaN')
        return +t2 || (e2.s = NaN), (e2.e = NaN), (e2.d = null), e2;
      if (Eu.test(t2)) (r2 = 16), (t2 = t2.toLowerCase());
      else if (Pu.test(t2)) r2 = 2;
      else if (Tu.test(t2)) r2 = 8;
      else throw Error(Le + t2);
      for (
        o2 = t2.search(/p/i),
          o2 > 0
            ? ((l2 = +t2.slice(o2 + 1)), (t2 = t2.substring(2, o2)))
            : (t2 = t2.slice(2)),
          o2 = t2.indexOf('.'),
          s2 = o2 >= 0,
          n2 = e2.constructor,
          s2 &&
            ((t2 = t2.replace('.', '')),
            (a = t2.length),
            (o2 = a - o2),
            (i = os(n2, new n2(r2), o2, o2 * 2))),
          u = Tr(t2, r2, me),
          c2 = u.length - 1,
          o2 = c2;
        u[o2] === 0;
        --o2
      )
        u.pop();
      return o2 < 0
        ? new n2(e2.s * 0)
        : ((e2.e = Sr(u, c2)),
          (e2.d = u),
          (P = false),
          s2 && (e2 = F(e2, i, a * 4)),
          l2 && (e2 = e2.times(Math.abs(l2) < 54 ? $(2, l2) : We.pow(2, l2))),
          (P = true),
          e2);
    }
    function Su(e2, t2) {
      var r2,
        n2 = t2.d.length;
      if (n2 < 3) return t2.isZero() ? t2 : ct(e2, 2, t2, t2);
      (r2 = 1.4 * Math.sqrt(n2)),
        (r2 = r2 > 16 ? 16 : r2 | 0),
        (t2 = t2.times(1 / Rr(5, r2))),
        (t2 = ct(e2, 2, t2, t2));
      for (var i, o2 = new e2(5), s2 = new e2(16), a = new e2(20); r2--; )
        (i = t2.times(t2)),
          (t2 = t2.times(o2.plus(i.times(s2.times(i).minus(a)))));
      return t2;
    }
    function ct(e2, t2, r2, n2, i) {
      var o2,
        s2,
        a,
        l2,
        u = 1,
        c2 = e2.precision,
        p = Math.ceil(c2 / w);
      for (P = false, l2 = r2.times(r2), a = new e2(n2); ; ) {
        if (
          ((s2 = F(a.times(l2), new e2(t2++ * t2++), c2, 1)),
          (a = i ? n2.plus(s2) : n2.minus(s2)),
          (n2 = F(s2.times(l2), new e2(t2++ * t2++), c2, 1)),
          (s2 = a.plus(n2)),
          s2.d[p] !== void 0)
        ) {
          for (o2 = p; s2.d[o2] === a.d[o2] && o2--; );
          if (o2 == -1) break;
        }
        (o2 = a), (a = n2), (n2 = s2), (s2 = o2), u++;
      }
      return (P = true), (s2.d.length = p + 1), s2;
    }
    function Rr(e2, t2) {
      for (var r2 = e2; --t2; ) r2 *= e2;
      return r2;
    }
    function ls(e2, t2) {
      var r2,
        n2 = t2.s < 0,
        i = de(e2, e2.precision, 1),
        o2 = i.times(0.5);
      if (((t2 = t2.abs()), t2.lte(o2))) return (Se = n2 ? 4 : 1), t2;
      if (((r2 = t2.divToInt(i)), r2.isZero())) Se = n2 ? 3 : 2;
      else {
        if (((t2 = t2.minus(r2.times(i))), t2.lte(o2)))
          return (Se = zo(r2) ? (n2 ? 2 : 3) : n2 ? 4 : 1), t2;
        Se = zo(r2) ? (n2 ? 1 : 4) : n2 ? 3 : 2;
      }
      return t2.minus(i).abs();
    }
    function Hn(e2, t2, r2, n2) {
      var i,
        o2,
        s2,
        a,
        l2,
        u,
        c2,
        p,
        d,
        g = e2.constructor,
        y = r2 !== void 0;
      if (
        (y
          ? (oe(r2, 1, $e), n2 === void 0 ? (n2 = g.rounding) : oe(n2, 0, 8))
          : ((r2 = g.precision), (n2 = g.rounding)),
        !e2.isFinite())
      )
        c2 = as(e2);
      else {
        for (
          c2 = be(e2),
            s2 = c2.indexOf('.'),
            y
              ? ((i = 2),
                t2 == 16 ? (r2 = r2 * 4 - 3) : t2 == 8 && (r2 = r2 * 3 - 2))
              : (i = t2),
            s2 >= 0 &&
              ((c2 = c2.replace('.', '')),
              (d = new g(1)),
              (d.e = c2.length - s2),
              (d.d = Tr(be(d), 10, i)),
              (d.e = d.d.length)),
            p = Tr(c2, 10, i),
            o2 = l2 = p.length;
          p[--l2] == 0;

        )
          p.pop();
        if (!p[0]) c2 = y ? '0p+0' : '0';
        else {
          if (
            (s2 < 0
              ? o2--
              : ((e2 = new g(e2)),
                (e2.d = p),
                (e2.e = o2),
                (e2 = F(e2, d, r2, n2, 0, i)),
                (p = e2.d),
                (o2 = e2.e),
                (u = Xo)),
            (s2 = p[r2]),
            (a = i / 2),
            (u = u || p[r2 + 1] !== void 0),
            (u =
              n2 < 4
                ? (s2 !== void 0 || u) &&
                  (n2 === 0 || n2 === (e2.s < 0 ? 3 : 2))
                : s2 > a ||
                  (s2 === a &&
                    (n2 === 4 ||
                      u ||
                      (n2 === 6 && p[r2 - 1] & 1) ||
                      n2 === (e2.s < 0 ? 8 : 7)))),
            (p.length = r2),
            u)
          )
            for (; ++p[--r2] > i - 1; ) (p[r2] = 0), r2 || (++o2, p.unshift(1));
          for (l2 = p.length; !p[l2 - 1]; --l2);
          for (s2 = 0, c2 = ''; s2 < l2; s2++) c2 += Un.charAt(p[s2]);
          if (y) {
            if (l2 > 1)
              if (t2 == 16 || t2 == 8) {
                for (s2 = t2 == 16 ? 4 : 3, --l2; l2 % s2; l2++) c2 += '0';
                for (p = Tr(c2, i, t2), l2 = p.length; !p[l2 - 1]; --l2);
                for (s2 = 1, c2 = '1.'; s2 < l2; s2++) c2 += Un.charAt(p[s2]);
              } else c2 = c2.charAt(0) + '.' + c2.slice(1);
            c2 = c2 + (o2 < 0 ? 'p' : 'p+') + o2;
          } else if (o2 < 0) {
            for (; ++o2; ) c2 = '0' + c2;
            c2 = '0.' + c2;
          } else if (++o2 > l2) for (o2 -= l2; o2--; ) c2 += '0';
          else o2 < l2 && (c2 = c2.slice(0, o2) + '.' + c2.slice(o2));
        }
        c2 = (t2 == 16 ? '0x' : t2 == 2 ? '0b' : t2 == 8 ? '0o' : '') + c2;
      }
      return e2.s < 0 ? '-' + c2 : c2;
    }
    function Yo(e2, t2) {
      if (e2.length > t2) return (e2.length = t2), true;
    }
    function Ru(e2) {
      return new this(e2).abs();
    }
    function Fu(e2) {
      return new this(e2).acos();
    }
    function Ou(e2) {
      return new this(e2).acosh();
    }
    function ku(e2, t2) {
      return new this(e2).plus(t2);
    }
    function Du(e2) {
      return new this(e2).asin();
    }
    function _u(e2) {
      return new this(e2).asinh();
    }
    function Iu(e2) {
      return new this(e2).atan();
    }
    function Nu(e2) {
      return new this(e2).atanh();
    }
    function Lu(e2, t2) {
      (e2 = new this(e2)), (t2 = new this(t2));
      var r2,
        n2 = this.precision,
        i = this.rounding,
        o2 = n2 + 4;
      return (
        !e2.s || !t2.s
          ? (r2 = new this(NaN))
          : !e2.d && !t2.d
          ? ((r2 = de(this, o2, 1).times(t2.s > 0 ? 0.25 : 0.75)),
            (r2.s = e2.s))
          : !t2.d || e2.isZero()
          ? ((r2 = t2.s < 0 ? de(this, n2, i) : new this(0)), (r2.s = e2.s))
          : !e2.d || t2.isZero()
          ? ((r2 = de(this, o2, 1).times(0.5)), (r2.s = e2.s))
          : t2.s < 0
          ? ((this.precision = o2),
            (this.rounding = 1),
            (r2 = this.atan(F(e2, t2, o2, 1))),
            (t2 = de(this, o2, 1)),
            (this.precision = n2),
            (this.rounding = i),
            (r2 = e2.s < 0 ? r2.minus(t2) : r2.plus(t2)))
          : (r2 = this.atan(F(e2, t2, o2, 1))),
        r2
      );
    }
    function $u(e2) {
      return new this(e2).cbrt();
    }
    function qu(e2) {
      return h((e2 = new this(e2)), e2.e + 1, 2);
    }
    function ju(e2, t2, r2) {
      return new this(e2).clamp(t2, r2);
    }
    function Bu(e2) {
      if (!e2 || typeof e2 != 'object') throw Error(Ar + 'Object expected');
      var t2,
        r2,
        n2,
        i = e2.defaults === true,
        o2 = [
          'precision',
          1,
          $e,
          'rounding',
          0,
          8,
          'toExpNeg',
          -ut,
          0,
          'toExpPos',
          0,
          ut,
          'maxE',
          0,
          ut,
          'minE',
          -ut,
          0,
          'modulo',
          0,
          9,
        ];
      for (t2 = 0; t2 < o2.length; t2 += 3)
        if (((r2 = o2[t2]), i && (this[r2] = Qn[r2]), (n2 = e2[r2]) !== void 0))
          if (Y(n2) === n2 && n2 >= o2[t2 + 1] && n2 <= o2[t2 + 2])
            this[r2] = n2;
          else throw Error(Le + r2 + ': ' + n2);
      if (((r2 = 'crypto'), i && (this[r2] = Qn[r2]), (n2 = e2[r2]) !== void 0))
        if (n2 === true || n2 === false || n2 === 0 || n2 === 1)
          if (n2)
            if (
              typeof crypto < 'u' &&
              crypto &&
              (crypto.getRandomValues || crypto.randomBytes)
            )
              this[r2] = true;
            else throw Error(ts);
          else this[r2] = false;
        else throw Error(Le + r2 + ': ' + n2);
      return this;
    }
    function Ku(e2) {
      return new this(e2).cos();
    }
    function Vu(e2) {
      return new this(e2).cosh();
    }
    function us(e2) {
      var t2, r2, n2;
      function i(o2) {
        var s2,
          a,
          l2,
          u = this;
        if (!(u instanceof i)) return new i(o2);
        if (((u.constructor = i), Zo(o2))) {
          (u.s = o2.s),
            P
              ? !o2.d || o2.e > i.maxE
                ? ((u.e = NaN), (u.d = null))
                : o2.e < i.minE
                ? ((u.e = 0), (u.d = [0]))
                : ((u.e = o2.e), (u.d = o2.d.slice()))
              : ((u.e = o2.e), (u.d = o2.d ? o2.d.slice() : o2.d));
          return;
        }
        if (((l2 = typeof o2), l2 === 'number')) {
          if (o2 === 0) {
            (u.s = 1 / o2 < 0 ? -1 : 1), (u.e = 0), (u.d = [0]);
            return;
          }
          if (
            (o2 < 0 ? ((o2 = -o2), (u.s = -1)) : (u.s = 1),
            o2 === ~~o2 && o2 < 1e7)
          ) {
            for (s2 = 0, a = o2; a >= 10; a /= 10) s2++;
            P
              ? s2 > i.maxE
                ? ((u.e = NaN), (u.d = null))
                : s2 < i.minE
                ? ((u.e = 0), (u.d = [0]))
                : ((u.e = s2), (u.d = [o2]))
              : ((u.e = s2), (u.d = [o2]));
            return;
          } else if (o2 * 0 !== 0) {
            o2 || (u.s = NaN), (u.e = NaN), (u.d = null);
            return;
          }
          return Wn(u, o2.toString());
        } else if (l2 !== 'string') throw Error(Le + o2);
        return (
          (a = o2.charCodeAt(0)) === 45
            ? ((o2 = o2.slice(1)), (u.s = -1))
            : (a === 43 && (o2 = o2.slice(1)), (u.s = 1)),
          ns.test(o2) ? Wn(u, o2) : Au(u, o2)
        );
      }
      if (
        ((i.prototype = m),
        (i.ROUND_UP = 0),
        (i.ROUND_DOWN = 1),
        (i.ROUND_CEIL = 2),
        (i.ROUND_FLOOR = 3),
        (i.ROUND_HALF_UP = 4),
        (i.ROUND_HALF_DOWN = 5),
        (i.ROUND_HALF_EVEN = 6),
        (i.ROUND_HALF_CEIL = 7),
        (i.ROUND_HALF_FLOOR = 8),
        (i.EUCLID = 9),
        (i.config = i.set = Bu),
        (i.clone = us),
        (i.isDecimal = Zo),
        (i.abs = Ru),
        (i.acos = Fu),
        (i.acosh = Ou),
        (i.add = ku),
        (i.asin = Du),
        (i.asinh = _u),
        (i.atan = Iu),
        (i.atanh = Nu),
        (i.atan2 = Lu),
        (i.cbrt = $u),
        (i.ceil = qu),
        (i.clamp = ju),
        (i.cos = Ku),
        (i.cosh = Vu),
        (i.div = Uu),
        (i.exp = Qu),
        (i.floor = Ju),
        (i.hypot = Gu),
        (i.ln = Wu),
        (i.log = Hu),
        (i.log10 = Yu),
        (i.log2 = zu),
        (i.max = Zu),
        (i.min = Xu),
        (i.mod = ec),
        (i.mul = tc),
        (i.pow = rc),
        (i.random = nc),
        (i.round = ic),
        (i.sign = oc),
        (i.sin = sc),
        (i.sinh = ac),
        (i.sqrt = lc),
        (i.sub = uc),
        (i.sum = cc),
        (i.tan = pc),
        (i.tanh = dc),
        (i.trunc = mc),
        e2 === void 0 && (e2 = {}),
        e2 && e2.defaults !== true)
      )
        for (
          n2 = [
            'precision',
            'rounding',
            'toExpNeg',
            'toExpPos',
            'maxE',
            'minE',
            'modulo',
            'crypto',
          ],
            t2 = 0;
          t2 < n2.length;

        )
          e2.hasOwnProperty((r2 = n2[t2++])) || (e2[r2] = this[r2]);
      return i.config(e2), i;
    }
    function Uu(e2, t2) {
      return new this(e2).div(t2);
    }
    function Qu(e2) {
      return new this(e2).exp();
    }
    function Ju(e2) {
      return h((e2 = new this(e2)), e2.e + 1, 3);
    }
    function Gu() {
      var e2,
        t2,
        r2 = new this(0);
      for (P = false, e2 = 0; e2 < arguments.length; )
        if (((t2 = new this(arguments[e2++])), t2.d))
          r2.d && (r2 = r2.plus(t2.times(t2)));
        else {
          if (t2.s) return (P = true), new this(1 / 0);
          r2 = t2;
        }
      return (P = true), r2.sqrt();
    }
    function Zo(e2) {
      return e2 instanceof We || (e2 && e2.toStringTag === rs) || false;
    }
    function Wu(e2) {
      return new this(e2).ln();
    }
    function Hu(e2, t2) {
      return new this(e2).log(t2);
    }
    function zu(e2) {
      return new this(e2).log(2);
    }
    function Yu(e2) {
      return new this(e2).log(10);
    }
    function Zu() {
      return ss(this, arguments, 'lt');
    }
    function Xu() {
      return ss(this, arguments, 'gt');
    }
    function ec(e2, t2) {
      return new this(e2).mod(t2);
    }
    function tc(e2, t2) {
      return new this(e2).mul(t2);
    }
    function rc(e2, t2) {
      return new this(e2).pow(t2);
    }
    function nc(e2) {
      var t2,
        r2,
        n2,
        i,
        o2 = 0,
        s2 = new this(1),
        a = [];
      if (
        (e2 === void 0 ? (e2 = this.precision) : oe(e2, 1, $e),
        (n2 = Math.ceil(e2 / w)),
        this.crypto)
      )
        if (crypto.getRandomValues)
          for (t2 = crypto.getRandomValues(new Uint32Array(n2)); o2 < n2; )
            (i = t2[o2]),
              i >= 429e7
                ? (t2[o2] = crypto.getRandomValues(new Uint32Array(1))[0])
                : (a[o2++] = i % 1e7);
        else if (crypto.randomBytes) {
          for (t2 = crypto.randomBytes((n2 *= 4)); o2 < n2; )
            (i =
              t2[o2] +
              (t2[o2 + 1] << 8) +
              (t2[o2 + 2] << 16) +
              ((t2[o2 + 3] & 127) << 24)),
              i >= 214e7
                ? crypto.randomBytes(4).copy(t2, o2)
                : (a.push(i % 1e7), (o2 += 4));
          o2 = n2 / 4;
        } else throw Error(ts);
      else for (; o2 < n2; ) a[o2++] = (Math.random() * 1e7) | 0;
      for (
        n2 = a[--o2],
          e2 %= w,
          n2 && e2 && ((i = $(10, w - e2)), (a[o2] = ((n2 / i) | 0) * i));
        a[o2] === 0;
        o2--
      )
        a.pop();
      if (o2 < 0) (r2 = 0), (a = [0]);
      else {
        for (r2 = -1; a[0] === 0; r2 -= w) a.shift();
        for (n2 = 1, i = a[0]; i >= 10; i /= 10) n2++;
        n2 < w && (r2 -= w - n2);
      }
      return (s2.e = r2), (s2.d = a), s2;
    }
    function ic(e2) {
      return h((e2 = new this(e2)), e2.e + 1, this.rounding);
    }
    function oc(e2) {
      return (
        (e2 = new this(e2)), e2.d ? (e2.d[0] ? e2.s : 0 * e2.s) : e2.s || NaN
      );
    }
    function sc(e2) {
      return new this(e2).sin();
    }
    function ac(e2) {
      return new this(e2).sinh();
    }
    function lc(e2) {
      return new this(e2).sqrt();
    }
    function uc(e2, t2) {
      return new this(e2).sub(t2);
    }
    function cc() {
      var e2 = 0,
        t2 = arguments,
        r2 = new this(t2[e2]);
      for (P = false; r2.s && ++e2 < t2.length; ) r2 = r2.plus(t2[e2]);
      return (P = true), h(r2, this.precision, this.rounding);
    }
    function pc(e2) {
      return new this(e2).tan();
    }
    function dc(e2) {
      return new this(e2).tanh();
    }
    function mc(e2) {
      return h((e2 = new this(e2)), e2.e + 1, 1);
    }
    m[Symbol.for('nodejs.util.inspect.custom')] = m.toString;
    m[Symbol.toStringTag] = 'Decimal';
    var We = (m.constructor = us(Qn));
    vr = new We(vr);
    Cr = new We(Cr);
    var we = We;
    function pt(e2) {
      return We.isDecimal(e2)
        ? true
        : e2 !== null &&
            typeof e2 == 'object' &&
            typeof e2.s == 'number' &&
            typeof e2.e == 'number' &&
            typeof e2.toFixed == 'function' &&
            Array.isArray(e2.d);
    }
    var qt = class {
      constructor(t2, r2, n2, i, o2) {
        (this.modelName = t2),
          (this.name = r2),
          (this.typeName = n2),
          (this.isList = i),
          (this.isEnum = o2);
      }
      _toGraphQLInputType() {
        let t2 = this.isList ? 'List' : '',
          r2 = this.isEnum ? 'Enum' : '';
        return `${t2}${r2}${this.typeName}FieldRefInput<${this.modelName}>`;
      }
    };
    function dt(e2) {
      return e2 instanceof qt;
    }
    var Fr = (e2) => e2;
    var Or = { bold: Fr, red: Fr, green: Fr, dim: Fr };
    var cs = { bold: ne, red: pe, green: Ue, dim: Oe };
    var mt = {
      write(e2) {
        e2.writeLine(',');
      },
    };
    var Pe = class {
      constructor(t2) {
        this.contents = t2;
        this.isUnderlined = false;
        this.color = (t3) => t3;
      }
      underline() {
        return (this.isUnderlined = true), this;
      }
      setColor(t2) {
        return (this.color = t2), this;
      }
      write(t2) {
        let r2 = t2.getCurrentLineLength();
        t2.write(this.color(this.contents)),
          this.isUnderlined &&
            t2.afterNextNewline(() => {
              t2.write(' '.repeat(r2)).writeLine(
                this.color('~'.repeat(this.contents.length))
              );
            });
      }
    };
    var qe = class {
      constructor() {
        this.hasError = false;
      }
      markAsError() {
        return (this.hasError = true), this;
      }
    };
    var kr = class extends qe {
      constructor() {
        super(...arguments);
        this.items = [];
      }
      addItem(r2) {
        return this.items.push(r2), this;
      }
      getPrintWidth() {
        return this.items.length === 0
          ? 2
          : Math.max(...this.items.map((n2) => n2.getPrintWidth())) + 2;
      }
      write(r2) {
        if (this.items.length === 0) {
          this.writeEmpty(r2);
          return;
        }
        this.writeWithItems(r2);
      }
      writeEmpty(r2) {
        let n2 = new Pe('[]');
        this.hasError && n2.setColor(r2.context.colors.red).underline(),
          r2.write(n2);
      }
      writeWithItems(r2) {
        let { colors: n2 } = r2.context;
        r2
          .writeLine('[')
          .withIndent(() => r2.writeJoined(mt, this.items).newLine())
          .write(']'),
          this.hasError &&
            r2.afterNextNewline(() => {
              r2.writeLine(n2.red('~'.repeat(this.getPrintWidth())));
            });
      }
    };
    var ps = ': ';
    var Dr = class {
      constructor(t2, r2) {
        this.name = t2;
        this.value = r2;
        this.hasError = false;
      }
      markAsError() {
        this.hasError = true;
      }
      getPrintWidth() {
        return this.name.length + this.value.getPrintWidth() + ps.length;
      }
      write(t2) {
        let r2 = new Pe(this.name);
        this.hasError && r2.underline().setColor(t2.context.colors.red),
          t2.write(r2).write(ps).write(this.value);
      }
    };
    var D = class extends qe {
      constructor() {
        super(...arguments);
        this.fields = {};
        this.suggestions = [];
      }
      addField(r2) {
        this.fields[r2.name] = r2;
      }
      addSuggestion(r2) {
        this.suggestions.push(r2);
      }
      getField(r2) {
        return this.fields[r2];
      }
      getDeepField(r2) {
        let [n2, ...i] = r2,
          o2 = this.getField(n2);
        if (!o2) return;
        let s2 = o2;
        for (let a of i) {
          if (!(s2.value instanceof D)) return;
          let l2 = s2.value.getField(a);
          if (!l2) return;
          s2 = l2;
        }
        return s2;
      }
      getDeepFieldValue(r2) {
        return r2.length === 0 ? this : this.getDeepField(r2)?.value;
      }
      hasField(r2) {
        return Boolean(this.getField(r2));
      }
      removeAllFields() {
        this.fields = {};
      }
      removeField(r2) {
        delete this.fields[r2];
      }
      getFields() {
        return this.fields;
      }
      isEmpty() {
        return Object.keys(this.fields).length === 0;
      }
      getFieldValue(r2) {
        return this.getField(r2)?.value;
      }
      getDeepSubSelectionValue(r2) {
        let n2 = this;
        for (let i of r2) {
          if (!(n2 instanceof D)) return;
          let o2 = n2.getSubSelectionValue(i);
          if (!o2) return;
          n2 = o2;
        }
        return n2;
      }
      getDeepSelectionParent(r2) {
        let n2 = this.getSelectionParent();
        if (!n2) return;
        let i = n2;
        for (let o2 of r2) {
          let s2 = i.value.getFieldValue(o2);
          if (!s2 || !(s2 instanceof D)) return;
          let a = s2.getSelectionParent();
          if (!a) return;
          i = a;
        }
        return i;
      }
      getSelectionParent() {
        let r2 = this.getField('select');
        if (r2?.value instanceof D) return { kind: 'select', value: r2.value };
        let n2 = this.getField('include');
        if (n2?.value instanceof D) return { kind: 'include', value: n2.value };
      }
      getSubSelectionValue(r2) {
        return this.getSelectionParent()?.value.fields[r2].value;
      }
      getPrintWidth() {
        let r2 = Object.values(this.fields);
        return r2.length == 0
          ? 2
          : Math.max(...r2.map((i) => i.getPrintWidth())) + 2;
      }
      write(r2) {
        let n2 = Object.values(this.fields);
        if (n2.length === 0 && this.suggestions.length === 0) {
          this.writeEmpty(r2);
          return;
        }
        this.writeWithContents(r2, n2);
      }
      writeEmpty(r2) {
        let n2 = new Pe('{}');
        this.hasError && n2.setColor(r2.context.colors.red).underline(),
          r2.write(n2);
      }
      writeWithContents(r2, n2) {
        r2.writeLine('{').withIndent(() => {
          r2.writeJoined(mt, [...n2, ...this.suggestions]).newLine();
        }),
          r2.write('}'),
          this.hasError &&
            r2.afterNextNewline(() => {
              r2.writeLine(
                r2.context.colors.red('~'.repeat(this.getPrintWidth()))
              );
            });
      }
    };
    var j = class extends qe {
      constructor(r2) {
        super();
        this.text = r2;
      }
      getPrintWidth() {
        return this.text.length;
      }
      write(r2) {
        let n2 = new Pe(this.text);
        this.hasError && n2.underline().setColor(r2.context.colors.red),
          r2.write(n2);
      }
    };
    var zn = class {
      constructor(t2) {
        this.errorMessages = [];
        this.arguments = t2;
      }
      write(t2) {
        t2.write(this.arguments);
      }
      addErrorMessage(t2) {
        this.errorMessages.push(t2);
      }
      renderAllMessages(t2) {
        return this.errorMessages.map((r2) => r2(t2)).join(`
`);
      }
    };
    function _r(e2) {
      return new zn(ds(e2));
    }
    function ds(e2) {
      let t2 = new D();
      for (let [r2, n2] of Object.entries(e2)) {
        let i = new Dr(r2, ms(n2));
        t2.addField(i);
      }
      return t2;
    }
    function ms(e2) {
      if (typeof e2 == 'string') return new j(JSON.stringify(e2));
      if (typeof e2 == 'number' || typeof e2 == 'boolean')
        return new j(String(e2));
      if (typeof e2 == 'bigint') return new j(`${e2}n`);
      if (e2 === null) return new j('null');
      if (e2 === void 0) return new j('undefined');
      if (pt(e2)) return new j(`new Prisma.Decimal("${e2.toFixed()}")`);
      if (e2 instanceof Uint8Array)
        return Buffer.isBuffer(e2)
          ? new j(`Buffer.alloc(${e2.byteLength})`)
          : new j(`new Uint8Array(${e2.byteLength})`);
      if (e2 instanceof Date) {
        let t2 = Er(e2) ? e2.toISOString() : 'Invalid Date';
        return new j(`new Date("${t2}")`);
      }
      return e2 instanceof Ae
        ? new j(`Prisma.${e2._getName()}`)
        : dt(e2)
        ? new j(`prisma.${wi(e2.modelName)}.$fields.${e2.name}`)
        : Array.isArray(e2)
        ? gc(e2)
        : typeof e2 == 'object'
        ? ds(e2)
        : new j(Object.prototype.toString.call(e2));
    }
    function gc(e2) {
      let t2 = new kr();
      for (let r2 of e2) t2.addItem(ms(r2));
      return t2;
    }
    function fs(e2) {
      if (e2 === void 0) return '';
      let t2 = _r(e2);
      return new at(0, { colors: Or }).write(t2).toString();
    }
    var jt = '<unknown>';
    function gs(e2) {
      var t2 = e2.split(`
`);
      return t2.reduce(function (r2, n2) {
        var i = xc(n2) || wc(n2) || Tc(n2) || Ac(n2) || Cc(n2);
        return i && r2.push(i), r2;
      }, []);
    }
    var yc =
      /^\s*at (.*?) ?\(((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|\/|[a-z]:\\|\\\\).*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i;
    var hc = /\((\S*)(?::(\d+))(?::(\d+))\)/;
    function xc(e2) {
      var t2 = yc.exec(e2);
      if (!t2) return null;
      var r2 = t2[2] && t2[2].indexOf('native') === 0,
        n2 = t2[2] && t2[2].indexOf('eval') === 0,
        i = hc.exec(t2[2]);
      return (
        n2 && i != null && ((t2[2] = i[1]), (t2[3] = i[2]), (t2[4] = i[3])),
        {
          file: r2 ? null : t2[2],
          methodName: t2[1] || jt,
          arguments: r2 ? [t2[2]] : [],
          lineNumber: t2[3] ? +t2[3] : null,
          column: t2[4] ? +t2[4] : null,
        }
      );
    }
    var bc =
      /^\s*at (?:((?:\[object object\])?.+) )?\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\d+)(?::(\d+))?\)?\s*$/i;
    function wc(e2) {
      var t2 = bc.exec(e2);
      return t2
        ? {
            file: t2[2],
            methodName: t2[1] || jt,
            arguments: [],
            lineNumber: +t2[3],
            column: t2[4] ? +t2[4] : null,
          }
        : null;
    }
    var Pc =
      /^\s*(.*?)(?:\((.*?)\))?(?:^|@)((?:file|https?|blob|chrome|webpack|resource|\[native).*?|[^@]*bundle)(?::(\d+))?(?::(\d+))?\s*$/i;
    var Ec = /(\S+) line (\d+)(?: > eval line \d+)* > eval/i;
    function Tc(e2) {
      var t2 = Pc.exec(e2);
      if (!t2) return null;
      var r2 = t2[3] && t2[3].indexOf(' > eval') > -1,
        n2 = Ec.exec(t2[3]);
      return (
        r2 && n2 != null && ((t2[3] = n2[1]), (t2[4] = n2[2]), (t2[5] = null)),
        {
          file: t2[3],
          methodName: t2[1] || jt,
          arguments: t2[2] ? t2[2].split(',') : [],
          lineNumber: t2[4] ? +t2[4] : null,
          column: t2[5] ? +t2[5] : null,
        }
      );
    }
    var vc = /^\s*(?:([^@]*)(?:\((.*?)\))?@)?(\S.*?):(\d+)(?::(\d+))?\s*$/i;
    function Cc(e2) {
      var t2 = vc.exec(e2);
      return t2
        ? {
            file: t2[3],
            methodName: t2[1] || jt,
            arguments: [],
            lineNumber: +t2[4],
            column: t2[5] ? +t2[5] : null,
          }
        : null;
    }
    var Mc =
      /^\s*at (?:((?:\[object object\])?[^\\/]+(?: \[as \S+\])?) )?\(?(.*?):(\d+)(?::(\d+))?\)?\s*$/i;
    function Ac(e2) {
      var t2 = Mc.exec(e2);
      return t2
        ? {
            file: t2[2],
            methodName: t2[1] || jt,
            arguments: [],
            lineNumber: +t2[3],
            column: t2[4] ? +t2[4] : null,
          }
        : null;
    }
    var Yn = class {
      getLocation() {
        return null;
      }
    };
    var Zn = class {
      constructor() {
        this._error = new Error();
      }
      getLocation() {
        let t2 = this._error.stack;
        if (!t2) return null;
        let n2 = gs(t2).find((i) => {
          if (!i.file) return false;
          let o2 = Mn(i.file);
          return (
            o2 !== '<anonymous>' &&
            !o2.includes('@prisma') &&
            !o2.includes('/packages/client/src/runtime/') &&
            !o2.endsWith('/runtime/binary.js') &&
            !o2.endsWith('/runtime/library.js') &&
            !o2.endsWith('/runtime/data-proxy.js') &&
            !o2.endsWith('/runtime/edge.js') &&
            !o2.endsWith('/runtime/edge-esm.js') &&
            !o2.startsWith('internal/') &&
            !i.methodName.includes('new ') &&
            !i.methodName.includes('getCallSite') &&
            !i.methodName.includes('Proxy.') &&
            i.methodName.split('.').length < 4
          );
        });
        return !n2 || !n2.file
          ? null
          : {
              fileName: n2.file,
              lineNumber: n2.lineNumber,
              columnNumber: n2.column,
            };
      }
    };
    function je(e2) {
      return e2 === 'minimal' ? new Yn() : new Zn();
    }
    var ys = { _avg: true, _count: true, _sum: true, _min: true, _max: true };
    function ft(e2 = {}) {
      let t2 = Rc(e2);
      return Object.entries(t2).reduce(
        (n2, [i, o2]) => (
          ys[i] !== void 0 ? (n2.select[i] = { select: o2 }) : (n2[i] = o2), n2
        ),
        { select: {} }
      );
    }
    function Rc(e2 = {}) {
      return typeof e2._count == 'boolean'
        ? { ...e2, _count: { _all: e2._count } }
        : e2;
    }
    function Ir(e2 = {}) {
      return (t2) => (
        typeof e2._count == 'boolean' && (t2._count = t2._count._all), t2
      );
    }
    function hs(e2, t2) {
      let r2 = Ir(e2);
      return t2({ action: 'aggregate', unpacker: r2, argsMapper: ft })(e2);
    }
    function Fc(e2 = {}) {
      let { select: t2, ...r2 } = e2;
      return typeof t2 == 'object'
        ? ft({ ...r2, _count: t2 })
        : ft({ ...r2, _count: { _all: true } });
    }
    function Oc(e2 = {}) {
      return typeof e2.select == 'object'
        ? (t2) => Ir(e2)(t2)._count
        : (t2) => Ir(e2)(t2)._count._all;
    }
    function xs(e2, t2) {
      return t2({ action: 'count', unpacker: Oc(e2), argsMapper: Fc })(e2);
    }
    function kc(e2 = {}) {
      let t2 = ft(e2);
      if (Array.isArray(t2.by))
        for (let r2 of t2.by) typeof r2 == 'string' && (t2.select[r2] = true);
      else typeof t2.by == 'string' && (t2.select[t2.by] = true);
      return t2;
    }
    function Dc(e2 = {}) {
      return (t2) => (
        typeof e2?._count == 'boolean' &&
          t2.forEach((r2) => {
            r2._count = r2._count._all;
          }),
        t2
      );
    }
    function bs(e2, t2) {
      return t2({ action: 'groupBy', unpacker: Dc(e2), argsMapper: kc })(e2);
    }
    function ws(e2, t2, r2) {
      if (t2 === 'aggregate') return (n2) => hs(n2, r2);
      if (t2 === 'count') return (n2) => xs(n2, r2);
      if (t2 === 'groupBy') return (n2) => bs(n2, r2);
    }
    function Ps(e2, t2) {
      let r2 = t2.fields.filter((i) => !i.relationName),
        n2 = Dn(r2, (i) => i.name);
      return new Proxy(
        {},
        {
          get(i, o2) {
            if (o2 in i || typeof o2 == 'symbol') return i[o2];
            let s2 = n2[o2];
            if (s2)
              return new qt(e2, o2, s2.type, s2.isList, s2.kind === 'enum');
          },
          ...gr(Object.keys(n2)),
        }
      );
    }
    var Es = (e2) => (Array.isArray(e2) ? e2 : e2.split('.'));
    var Xn = (e2, t2) => Es(t2).reduce((r2, n2) => r2 && r2[n2], e2);
    var Ts = (e2, t2, r2) =>
      Es(t2).reduceRight(
        (n2, i, o2, s2) =>
          Object.assign({}, Xn(e2, s2.slice(0, o2)), { [i]: n2 }),
        r2
      );
    function _c(e2, t2) {
      return e2 === void 0 || t2 === void 0 ? [] : [...t2, 'select', e2];
    }
    function Ic(e2, t2, r2) {
      return t2 === void 0 ? e2 ?? {} : Ts(t2, r2, e2 || true);
    }
    function ei(e2, t2, r2, n2, i, o2) {
      let a = e2._runtimeDataModel.models[t2].fields.reduce(
        (l2, u) => ({ ...l2, [u.name]: u }),
        {}
      );
      return (l2) => {
        let u = je(e2._errorFormat),
          c2 = _c(n2, i),
          p = Ic(l2, o2, c2),
          d = r2({ dataPath: c2, callsite: u })(p),
          g = Nc(e2, t2);
        return new Proxy(d, {
          get(y, f) {
            if (!g.includes(f)) return y[f];
            let E = [a[f].type, r2, f],
              v = [c2, p];
            return ei(e2, ...E, ...v);
          },
          ...gr([...g, ...Object.getOwnPropertyNames(d)]),
        });
      };
    }
    function Nc(e2, t2) {
      return e2._runtimeDataModel.models[t2].fields
        .filter((r2) => r2.kind === 'object')
        .map((r2) => r2.name);
    }
    var Rs = A(An());
    var Ss = A(require('fs'));
    var vs = {
      keyword: ke,
      entity: ke,
      value: (e2) => ne(Xe(e2)),
      punctuation: Xe,
      directive: ke,
      function: ke,
      variable: (e2) => ne(Xe(e2)),
      string: (e2) => ne(Ue(e2)),
      boolean: ye,
      number: ke,
      comment: rr,
    };
    var Lc = (e2) => e2;
    var Nr = {};
    var $c = 0;
    var T = {
      manual: Nr.Prism && Nr.Prism.manual,
      disableWorkerMessageHandler:
        Nr.Prism && Nr.Prism.disableWorkerMessageHandler,
      util: {
        encode: function (e2) {
          if (e2 instanceof fe) {
            let t2 = e2;
            return new fe(t2.type, T.util.encode(t2.content), t2.alias);
          } else
            return Array.isArray(e2)
              ? e2.map(T.util.encode)
              : e2
                  .replace(/&/g, '&amp;')
                  .replace(/</g, '&lt;')
                  .replace(/\u00a0/g, ' ');
        },
        type: function (e2) {
          return Object.prototype.toString.call(e2).slice(8, -1);
        },
        objId: function (e2) {
          return (
            e2.__id || Object.defineProperty(e2, '__id', { value: ++$c }),
            e2.__id
          );
        },
        clone: function e2(t2, r2) {
          let n2,
            i,
            o2 = T.util.type(t2);
          switch (((r2 = r2 || {}), o2)) {
            case 'Object':
              if (((i = T.util.objId(t2)), r2[i])) return r2[i];
              (n2 = {}), (r2[i] = n2);
              for (let s2 in t2)
                t2.hasOwnProperty(s2) && (n2[s2] = e2(t2[s2], r2));
              return n2;
            case 'Array':
              return (
                (i = T.util.objId(t2)),
                r2[i]
                  ? r2[i]
                  : ((n2 = []),
                    (r2[i] = n2),
                    t2.forEach(function (s2, a) {
                      n2[a] = e2(s2, r2);
                    }),
                    n2)
              );
            default:
              return t2;
          }
        },
      },
      languages: {
        extend: function (e2, t2) {
          let r2 = T.util.clone(T.languages[e2]);
          for (let n2 in t2) r2[n2] = t2[n2];
          return r2;
        },
        insertBefore: function (e2, t2, r2, n2) {
          n2 = n2 || T.languages;
          let i = n2[e2],
            o2 = {};
          for (let a in i)
            if (i.hasOwnProperty(a)) {
              if (a == t2)
                for (let l2 in r2) r2.hasOwnProperty(l2) && (o2[l2] = r2[l2]);
              r2.hasOwnProperty(a) || (o2[a] = i[a]);
            }
          let s2 = n2[e2];
          return (
            (n2[e2] = o2),
            T.languages.DFS(T.languages, function (a, l2) {
              l2 === s2 && a != e2 && (this[a] = o2);
            }),
            o2
          );
        },
        DFS: function e2(t2, r2, n2, i) {
          i = i || {};
          let o2 = T.util.objId;
          for (let s2 in t2)
            if (t2.hasOwnProperty(s2)) {
              r2.call(t2, s2, t2[s2], n2 || s2);
              let a = t2[s2],
                l2 = T.util.type(a);
              l2 === 'Object' && !i[o2(a)]
                ? ((i[o2(a)] = true), e2(a, r2, null, i))
                : l2 === 'Array' &&
                  !i[o2(a)] &&
                  ((i[o2(a)] = true), e2(a, r2, s2, i));
            }
        },
      },
      plugins: {},
      highlight: function (e2, t2, r2) {
        let n2 = { code: e2, grammar: t2, language: r2 };
        return (
          T.hooks.run('before-tokenize', n2),
          (n2.tokens = T.tokenize(n2.code, n2.grammar)),
          T.hooks.run('after-tokenize', n2),
          fe.stringify(T.util.encode(n2.tokens), n2.language)
        );
      },
      matchGrammar: function (e2, t2, r2, n2, i, o2, s2) {
        for (let f in r2) {
          if (!r2.hasOwnProperty(f) || !r2[f]) continue;
          if (f == s2) return;
          let b = r2[f];
          b = T.util.type(b) === 'Array' ? b : [b];
          for (let E = 0; E < b.length; ++E) {
            let v = b[E],
              x = v.inside,
              M = !!v.lookbehind,
              le = !!v.greedy,
              K = 0,
              Ke = v.alias;
            if (le && !v.pattern.global) {
              let I2 = v.pattern.toString().match(/[imuy]*$/)[0];
              v.pattern = RegExp(v.pattern.source, I2 + 'g');
            }
            v = v.pattern || v;
            for (let I2 = n2, J = i; I2 < t2.length; J += t2[I2].length, ++I2) {
              let ve = t2[I2];
              if (t2.length > e2.length) return;
              if (ve instanceof fe) continue;
              if (le && I2 != t2.length - 1) {
                v.lastIndex = J;
                var p = v.exec(e2);
                if (!p) break;
                var c2 = p.index + (M ? p[1].length : 0),
                  d = p.index + p[0].length,
                  a = I2,
                  l2 = J;
                for (
                  let R = t2.length;
                  a < R && (l2 < d || (!t2[a].type && !t2[a - 1].greedy));
                  ++a
                )
                  (l2 += t2[a].length), c2 >= l2 && (++I2, (J = l2));
                if (t2[I2] instanceof fe) continue;
                (u = a - I2), (ve = e2.slice(J, l2)), (p.index -= J);
              } else {
                v.lastIndex = 0;
                var p = v.exec(ve),
                  u = 1;
              }
              if (!p) {
                if (o2) break;
                continue;
              }
              M && (K = p[1] ? p[1].length : 0);
              var c2 = p.index + K,
                p = p[0].slice(K),
                d = c2 + p.length,
                g = ve.slice(0, c2),
                y = ve.slice(d);
              let G = [I2, u];
              g && (++I2, (J += g.length), G.push(g));
              let He = new fe(f, x ? T.tokenize(p, x) : p, Ke, p, le);
              if (
                (G.push(He),
                y && G.push(y),
                Array.prototype.splice.apply(t2, G),
                u != 1 && T.matchGrammar(e2, t2, r2, I2, J, true, f),
                o2)
              )
                break;
            }
          }
        }
      },
      tokenize: function (e2, t2) {
        let r2 = [e2],
          n2 = t2.rest;
        if (n2) {
          for (let i in n2) t2[i] = n2[i];
          delete t2.rest;
        }
        return T.matchGrammar(e2, r2, t2, 0, 0, false), r2;
      },
      hooks: {
        all: {},
        add: function (e2, t2) {
          let r2 = T.hooks.all;
          (r2[e2] = r2[e2] || []), r2[e2].push(t2);
        },
        run: function (e2, t2) {
          let r2 = T.hooks.all[e2];
          if (!(!r2 || !r2.length)) for (var n2 = 0, i; (i = r2[n2++]); ) i(t2);
        },
      },
      Token: fe,
    };
    T.languages.clike = {
      comment: [
        { pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/, lookbehind: true },
        { pattern: /(^|[^\\:])\/\/.*/, lookbehind: true, greedy: true },
      ],
      string: {
        pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
        greedy: true,
      },
      'class-name': {
        pattern:
          /((?:\b(?:class|interface|extends|implements|trait|instanceof|new)\s+)|(?:catch\s+\())[\w.\\]+/i,
        lookbehind: true,
        inside: { punctuation: /[.\\]/ },
      },
      keyword:
        /\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\b/,
      boolean: /\b(?:true|false)\b/,
      function: /\w+(?=\()/,
      number: /\b0x[\da-f]+\b|(?:\b\d+\.?\d*|\B\.\d+)(?:e[+-]?\d+)?/i,
      operator: /--?|\+\+?|!=?=?|<=?|>=?|==?=?|&&?|\|\|?|\?|\*|\/|~|\^|%/,
      punctuation: /[{}[\];(),.:]/,
    };
    T.languages.javascript = T.languages.extend('clike', {
      'class-name': [
        T.languages.clike['class-name'],
        {
          pattern:
            /(^|[^$\w\xA0-\uFFFF])[_$A-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\.(?:prototype|constructor))/,
          lookbehind: true,
        },
      ],
      keyword: [
        { pattern: /((?:^|})\s*)(?:catch|finally)\b/, lookbehind: true },
        {
          pattern:
            /(^|[^.])\b(?:as|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,
          lookbehind: true,
        },
      ],
      number:
        /\b(?:(?:0[xX](?:[\dA-Fa-f](?:_[\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\d(?:_\d)?)+n|NaN|Infinity)\b|(?:\b(?:\d(?:_\d)?)+\.?(?:\d(?:_\d)?)*|\B\.(?:\d(?:_\d)?)+)(?:[Ee][+-]?(?:\d(?:_\d)?)+)?/,
      function:
        /[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,
      operator:
        /-[-=]?|\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\|[|=]?|\*\*?=?|\/=?|~|\^=?|%=?|\?|\.{3}/,
    });
    T.languages.javascript['class-name'][0].pattern =
      /(\b(?:class|interface|extends|implements|instanceof|new)\s+)[\w.\\]+/;
    T.languages.insertBefore('javascript', 'keyword', {
      regex: {
        pattern:
          /((?:^|[^$\w\xA0-\uFFFF."'\])\s])\s*)\/(\[(?:[^\]\\\r\n]|\\.)*]|\\.|[^/\\\[\r\n])+\/[gimyus]{0,6}(?=\s*($|[\r\n,.;})\]]))/,
        lookbehind: true,
        greedy: true,
      },
      'function-variable': {
        pattern:
          /[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*)\s*=>))/,
        alias: 'function',
      },
      parameter: [
        {
          pattern:
            /(function(?:\s+[_$A-Za-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*)?\s*\(\s*)(?!\s)(?:[^()]|\([^()]*\))+?(?=\s*\))/,
          lookbehind: true,
          inside: T.languages.javascript,
        },
        {
          pattern: /[_$a-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*=>)/i,
          inside: T.languages.javascript,
        },
        {
          pattern: /(\(\s*)(?!\s)(?:[^()]|\([^()]*\))+?(?=\s*\)\s*=>)/,
          lookbehind: true,
          inside: T.languages.javascript,
        },
        {
          pattern:
            /((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:[_$A-Za-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*\s*)\(\s*)(?!\s)(?:[^()]|\([^()]*\))+?(?=\s*\)\s*\{)/,
          lookbehind: true,
          inside: T.languages.javascript,
        },
      ],
      constant: /\b[A-Z](?:[A-Z_]|\dx?)*\b/,
    });
    T.languages.markup &&
      T.languages.markup.tag.addInlined('script', 'javascript');
    T.languages.js = T.languages.javascript;
    T.languages.typescript = T.languages.extend('javascript', {
      keyword:
        /\b(?:abstract|as|async|await|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|is|keyof|let|module|namespace|new|null|of|package|private|protected|public|readonly|return|require|set|static|super|switch|this|throw|try|type|typeof|var|void|while|with|yield)\b/,
      builtin:
        /\b(?:string|Function|any|number|boolean|Array|symbol|console|Promise|unknown|never)\b/,
    });
    T.languages.ts = T.languages.typescript;
    function fe(e2, t2, r2, n2, i) {
      (this.type = e2),
        (this.content = t2),
        (this.alias = r2),
        (this.length = (n2 || '').length | 0),
        (this.greedy = !!i);
    }
    fe.stringify = function (e2, t2) {
      return typeof e2 == 'string'
        ? e2
        : Array.isArray(e2)
        ? e2
            .map(function (r2) {
              return fe.stringify(r2, t2);
            })
            .join('')
        : qc(e2.type)(e2.content);
    };
    function qc(e2) {
      return vs[e2] || Lc;
    }
    function Cs(e2) {
      return jc(e2, T.languages.javascript);
    }
    function jc(e2, t2) {
      return T.tokenize(e2, t2)
        .map((n2) => fe.stringify(n2))
        .join('');
    }
    var Ms = A(mo());
    function As(e2) {
      return (0, Ms.default)(e2);
    }
    var ge = class {
      static read(t2) {
        let r2;
        try {
          r2 = Ss.default.readFileSync(t2, 'utf-8');
        } catch {
          return null;
        }
        return ge.fromContent(r2);
      }
      static fromContent(t2) {
        let r2 = t2.split(/\r?\n/);
        return new ge(1, r2);
      }
      constructor(t2, r2) {
        (this.firstLineNumber = t2), (this.lines = r2);
      }
      get lastLineNumber() {
        return this.firstLineNumber + this.lines.length - 1;
      }
      mapLineAt(t2, r2) {
        if (
          t2 < this.firstLineNumber ||
          t2 > this.lines.length + this.firstLineNumber
        )
          return this;
        let n2 = t2 - this.firstLineNumber,
          i = [...this.lines];
        return (i[n2] = r2(i[n2])), new ge(this.firstLineNumber, i);
      }
      mapLines(t2) {
        return new ge(
          this.firstLineNumber,
          this.lines.map((r2, n2) => t2(r2, this.firstLineNumber + n2))
        );
      }
      lineAt(t2) {
        return this.lines[t2 - this.firstLineNumber];
      }
      prependSymbolAt(t2, r2) {
        return this.mapLines((n2, i) => (i === t2 ? `${r2} ${n2}` : `  ${n2}`));
      }
      slice(t2, r2) {
        let n2 = this.lines.slice(t2 - 1, r2).join(`
`);
        return new ge(
          t2,
          As(n2).split(`
`)
        );
      }
      highlight() {
        let t2 = Cs(this.toString());
        return new ge(
          this.firstLineNumber,
          t2.split(`
`)
        );
      }
      toString() {
        return this.lines.join(`
`);
      }
    };
    var Bc = {
      red: pe,
      gray: rr,
      dim: Oe,
      bold: ne,
      underline: X,
      highlightSource: (e2) => e2.highlight(),
    };
    var Kc = {
      red: (e2) => e2,
      gray: (e2) => e2,
      dim: (e2) => e2,
      bold: (e2) => e2,
      underline: (e2) => e2,
      highlightSource: (e2) => e2,
    };
    function Vc(
      {
        callsite: e2,
        message: t2,
        originalMethod: r2,
        isPanic: n2,
        callArguments: i,
      },
      o2
    ) {
      let s2 = {
        functionName: `prisma.${r2}()`,
        message: t2,
        isPanic: n2 ?? false,
        callArguments: i,
      };
      if (!e2 || typeof window < 'u' || process.env.NODE_ENV === 'production')
        return s2;
      let a = e2.getLocation();
      if (!a || !a.lineNumber || !a.columnNumber) return s2;
      let l2 = Math.max(1, a.lineNumber - 3),
        u = ge.read(a.fileName)?.slice(l2, a.lineNumber),
        c2 = u?.lineAt(a.lineNumber);
      if (u && c2) {
        let p = Qc(c2),
          d = Uc(c2);
        if (!d) return s2;
        (s2.functionName = `${d.code})`),
          (s2.location = a),
          n2 ||
            (u = u.mapLineAt(a.lineNumber, (y) =>
              y.slice(0, d.openingBraceIndex)
            )),
          (u = o2.highlightSource(u));
        let g = String(u.lastLineNumber).length;
        if (
          ((s2.contextLines = u
            .mapLines((y, f) => o2.gray(String(f).padStart(g)) + ' ' + y)
            .mapLines((y) => o2.dim(y))
            .prependSymbolAt(a.lineNumber, o2.bold(o2.red('\u2192')))),
          i)
        ) {
          let y = p + g + 1;
          (y += 2), (s2.callArguments = (0, Rs.default)(i, y).slice(y));
        }
      }
      return s2;
    }
    function Uc(e2) {
      let t2 = Object.keys(ue.ModelAction).join('|'),
        n2 = new RegExp(String.raw`\.(${t2})\(`).exec(e2);
      if (n2) {
        let i = n2.index + n2[0].length,
          o2 = e2.lastIndexOf(' ', n2.index) + 1;
        return { code: e2.slice(o2, i), openingBraceIndex: i };
      }
      return null;
    }
    function Qc(e2) {
      let t2 = 0;
      for (let r2 = 0; r2 < e2.length; r2++) {
        if (e2.charAt(r2) !== ' ') return t2;
        t2++;
      }
      return t2;
    }
    function Jc(
      {
        functionName: e2,
        location: t2,
        message: r2,
        isPanic: n2,
        contextLines: i,
        callArguments: o2,
      },
      s2
    ) {
      let a = [''],
        l2 = t2 ? ' in' : ':';
      if (
        (n2
          ? (a.push(
              s2.red(
                `Oops, an unknown error occurred! This is ${s2.bold(
                  'on us'
                )}, you did nothing wrong.`
              )
            ),
            a.push(
              s2.red(
                `It occurred in the ${s2.bold(`\`${e2}\``)} invocation${l2}`
              )
            ))
          : a.push(s2.red(`Invalid ${s2.bold(`\`${e2}\``)} invocation${l2}`)),
        t2 && a.push(s2.underline(Gc(t2))),
        i)
      ) {
        a.push('');
        let u = [i.toString()];
        o2 && (u.push(o2), u.push(s2.dim(')'))),
          a.push(u.join('')),
          o2 && a.push('');
      } else a.push(''), o2 && a.push(o2), a.push('');
      return (
        a.push(r2),
        a.join(`
`)
      );
    }
    function Gc(e2) {
      let t2 = [e2.fileName];
      return (
        e2.lineNumber && t2.push(String(e2.lineNumber)),
        e2.columnNumber && t2.push(String(e2.columnNumber)),
        t2.join(':')
      );
    }
    function gt(e2) {
      let t2 = e2.showColors ? Bc : Kc,
        r2 = Vc(e2, t2);
      return Jc(r2, t2);
    }
    function Fs(e2, t2, r2, n2) {
      return e2 === ue.ModelAction.findFirstOrThrow ||
        e2 === ue.ModelAction.findUniqueOrThrow
        ? Wc(t2, r2, n2)
        : n2;
    }
    function Wc(e2, t2, r2) {
      return async (n2) => {
        if ('rejectOnNotFound' in n2.args) {
          let o2 = gt({
            originalMethod: n2.clientMethod,
            callsite: n2.callsite,
            message: "'rejectOnNotFound' option is not supported",
          });
          throw new te(o2, { clientVersion: t2 });
        }
        return await r2(n2).catch((o2) => {
          throw o2 instanceof H && o2.code === 'P2025'
            ? new Ce(`No ${e2} found`, t2)
            : o2;
        });
      };
    }
    function Ee(e2) {
      return e2.replace(/^./, (t2) => t2.toLowerCase());
    }
    var Hc = [
      'findUnique',
      'findUniqueOrThrow',
      'findFirst',
      'findFirstOrThrow',
      'create',
      'update',
      'upsert',
      'delete',
    ];
    var zc = ['aggregate', 'count', 'groupBy'];
    function ti(e2, t2) {
      let r2 = e2._extensions.getAllModelExtensions(t2) ?? {},
        n2 = [
          Yc(e2, t2),
          Xc(e2, t2),
          Ft(r2),
          re('name', () => t2),
          re('$name', () => t2),
          re('$parent', () => e2._appliedParent),
        ];
      return xe({}, n2);
    }
    function Yc(e2, t2) {
      let r2 = Ee(t2),
        n2 = Object.keys(ue.ModelAction).concat('count');
      return {
        getKeys() {
          return n2;
        },
        getPropertyValue(i) {
          let o2 = i,
            s2 = (l2) => e2._request(l2);
          s2 = Fs(o2, t2, e2._clientVersion, s2);
          let a = (l2) => (u) => {
            let c2 = je(e2._errorFormat);
            return e2._createPrismaPromise((p) => {
              let d = {
                args: u,
                dataPath: [],
                action: o2,
                model: t2,
                clientMethod: `${r2}.${i}`,
                jsModelName: r2,
                transaction: p,
                callsite: c2,
              };
              return s2({ ...d, ...l2 });
            });
          };
          return Hc.includes(o2) ? ei(e2, t2, a) : Zc(i) ? ws(e2, i, a) : a({});
        },
      };
    }
    function Zc(e2) {
      return zc.includes(e2);
    }
    function Xc(e2, t2) {
      return Ge(
        re('fields', () => {
          let r2 = e2._runtimeDataModel.models[t2];
          return Ps(t2, r2);
        })
      );
    }
    function Os(e2) {
      return e2.replace(/^./, (t2) => t2.toUpperCase());
    }
    var ri = Symbol();
    function Bt(e2) {
      let t2 = [
          ep(e2),
          re(ri, () => e2),
          re('$parent', () => e2._appliedParent),
        ],
        r2 = e2._extensions.getAllClientExtensions();
      return r2 && t2.push(Ft(r2)), xe(e2, t2);
    }
    function ep(e2) {
      let t2 = Object.keys(e2._runtimeDataModel.models),
        r2 = t2.map(Ee),
        n2 = [...new Set(t2.concat(r2))];
      return Ge({
        getKeys() {
          return n2;
        },
        getPropertyValue(i) {
          let o2 = Os(i);
          if (e2._runtimeDataModel.models[o2] !== void 0) return ti(e2, o2);
          if (e2._runtimeDataModel.models[i] !== void 0) return ti(e2, i);
        },
        getPropertyDescriptor(i) {
          if (!r2.includes(i)) return { enumerable: false };
        },
      });
    }
    function Lr(e2) {
      return e2[ri] ? e2[ri] : e2;
    }
    function ks(e2) {
      if (typeof e2 == 'function') return e2(this);
      let t2 = Lr(this),
        r2 = Object.create(t2, {
          _extensions: { value: this._extensions.append(e2) },
          _appliedParent: { value: this, configurable: true },
          $use: { value: void 0 },
          $on: { value: void 0 },
        });
      return Bt(r2);
    }
    function Ds({ result: e2, modelName: t2, select: r2, extensions: n2 }) {
      let i = n2.getAllComputedFields(t2);
      if (!i) return e2;
      let o2 = [],
        s2 = [];
      for (let a of Object.values(i)) {
        if (r2) {
          if (!r2[a.name]) continue;
          let l2 = a.needs.filter((u) => !r2[u]);
          l2.length > 0 && s2.push(Ot(l2));
        }
        tp(e2, a.needs) && o2.push(rp(a, xe(e2, o2)));
      }
      return o2.length > 0 || s2.length > 0 ? xe(e2, [...o2, ...s2]) : e2;
    }
    function tp(e2, t2) {
      return t2.every((r2) => kn(e2, r2));
    }
    function rp(e2, t2) {
      return Ge(re(e2.name, () => e2.compute(t2)));
    }
    function $r({
      visitor: e2,
      result: t2,
      args: r2,
      runtimeDataModel: n2,
      modelName: i,
    }) {
      if (Array.isArray(t2)) {
        for (let s2 = 0; s2 < t2.length; s2++)
          t2[s2] = $r({
            result: t2[s2],
            args: r2,
            modelName: i,
            runtimeDataModel: n2,
            visitor: e2,
          });
        return t2;
      }
      let o2 = e2(t2, i, r2) ?? t2;
      return (
        r2.include &&
          _s({
            includeOrSelect: r2.include,
            result: o2,
            parentModelName: i,
            runtimeDataModel: n2,
            visitor: e2,
          }),
        r2.select &&
          _s({
            includeOrSelect: r2.select,
            result: o2,
            parentModelName: i,
            runtimeDataModel: n2,
            visitor: e2,
          }),
        o2
      );
    }
    function _s({
      includeOrSelect: e2,
      result: t2,
      parentModelName: r2,
      runtimeDataModel: n2,
      visitor: i,
    }) {
      for (let [o2, s2] of Object.entries(e2)) {
        if (!s2 || t2[o2] == null) continue;
        let l2 = n2.models[r2].fields.find((c2) => c2.name === o2);
        if (!l2 || l2.kind !== 'object' || !l2.relationName) continue;
        let u = typeof s2 == 'object' ? s2 : {};
        t2[o2] = $r({
          visitor: i,
          result: t2[o2],
          args: u,
          modelName: l2.type,
          runtimeDataModel: n2,
        });
      }
    }
    function Is({
      result: e2,
      modelName: t2,
      args: r2,
      extensions: n2,
      runtimeDataModel: i,
    }) {
      return n2.isEmpty() ||
        e2 == null ||
        typeof e2 != 'object' ||
        !i.models[t2]
        ? e2
        : $r({
            result: e2,
            args: r2 ?? {},
            modelName: t2,
            runtimeDataModel: i,
            visitor: (s2, a, l2) =>
              Ds({
                result: s2,
                modelName: Ee(a),
                select: l2.select,
                extensions: n2,
              }),
          });
    }
    function Ns(e2) {
      if (e2 instanceof U) return np(e2);
      if (Array.isArray(e2)) {
        let r2 = [e2[0]];
        for (let n2 = 1; n2 < e2.length; n2++) r2[n2] = Kt(e2[n2]);
        return r2;
      }
      let t2 = {};
      for (let r2 in e2) t2[r2] = Kt(e2[r2]);
      return t2;
    }
    function np(e2) {
      return new U(e2.strings, e2.values);
    }
    function Kt(e2) {
      if (typeof e2 != 'object' || e2 == null || e2 instanceof Ae || dt(e2))
        return e2;
      if (pt(e2)) return new we(e2.toFixed());
      if (lt(e2)) return /* @__PURE__ */ new Date(+e2);
      if (ArrayBuffer.isView(e2)) return e2.slice(0);
      if (Array.isArray(e2)) {
        let t2 = e2.length,
          r2;
        for (r2 = Array(t2); t2--; ) r2[t2] = Kt(e2[t2]);
        return r2;
      }
      if (typeof e2 == 'object') {
        let t2 = {};
        for (let r2 in e2)
          r2 === '__proto__'
            ? Object.defineProperty(t2, r2, {
                value: Kt(e2[r2]),
                configurable: true,
                enumerable: true,
                writable: true,
              })
            : (t2[r2] = Kt(e2[r2]));
        return t2;
      }
      Je(e2, 'Unknown value');
    }
    function $s(e2, t2, r2, n2 = 0) {
      return e2._createPrismaPromise((i) => {
        let o2 = t2.customDataProxyFetch;
        return (
          'transaction' in t2 &&
            i !== void 0 &&
            (t2.transaction?.kind === 'batch' && t2.transaction.lock.then(),
            (t2.transaction = i)),
          n2 === r2.length
            ? e2._executeRequest(t2)
            : r2[n2]({
                model: t2.model,
                operation: t2.model ? t2.action : t2.clientMethod,
                args: Ns(t2.args ?? {}),
                __internalParams: t2,
                query: (s2, a = t2) => {
                  let l2 = a.customDataProxyFetch;
                  return (
                    (a.customDataProxyFetch = Ks(o2, l2)),
                    (a.args = s2),
                    $s(e2, a, r2, n2 + 1)
                  );
                },
              })
        );
      });
    }
    function qs(e2, t2) {
      let { jsModelName: r2, action: n2, clientMethod: i } = t2,
        o2 = r2 ? n2 : i;
      if (e2._extensions.isEmpty()) return e2._executeRequest(t2);
      let s2 = e2._extensions.getAllQueryCallbacks(r2 ?? '$none', o2);
      return $s(e2, t2, s2);
    }
    function js(e2) {
      return (t2) => {
        let r2 = { requests: t2 },
          n2 = t2[0].extensions.getAllBatchQueryCallbacks();
        return n2.length ? Bs(r2, n2, 0, e2) : e2(r2);
      };
    }
    function Bs(e2, t2, r2, n2) {
      if (r2 === t2.length) return n2(e2);
      let i = e2.customDataProxyFetch,
        o2 = e2.requests[0].transaction;
      return t2[r2]({
        args: {
          queries: e2.requests.map((s2) => ({
            model: s2.modelName,
            operation: s2.action,
            args: s2.args,
          })),
          transaction: o2
            ? {
                isolationLevel:
                  o2.kind === 'batch' ? o2.isolationLevel : void 0,
              }
            : void 0,
        },
        __internalParams: e2,
        query(s2, a = e2) {
          let l2 = a.customDataProxyFetch;
          return (a.customDataProxyFetch = Ks(i, l2)), Bs(a, t2, r2 + 1, n2);
        },
      });
    }
    var Ls = (e2) => e2;
    function Ks(e2 = Ls, t2 = Ls) {
      return (r2) => e2(t2(r2));
    }
    function Us(e2, t2, r2) {
      let n2 = Ee(r2);
      return !t2.result || !(t2.result.$allModels || t2.result[n2])
        ? e2
        : ip({
            ...e2,
            ...Vs(t2.name, e2, t2.result.$allModels),
            ...Vs(t2.name, e2, t2.result[n2]),
          });
    }
    function ip(e2) {
      let t2 = new he(),
        r2 = (n2, i) =>
          t2.getOrCreate(n2, () =>
            i.has(n2)
              ? [n2]
              : (i.add(n2),
                e2[n2] ? e2[n2].needs.flatMap((o2) => r2(o2, i)) : [n2])
          );
      return ot(e2, (n2) => ({
        ...n2,
        needs: r2(n2.name, /* @__PURE__ */ new Set()),
      }));
    }
    function Vs(e2, t2, r2) {
      return r2
        ? ot(r2, ({ needs: n2, compute: i }, o2) => ({
            name: o2,
            needs: n2 ? Object.keys(n2).filter((s2) => n2[s2]) : [],
            compute: op(t2, o2, i),
          }))
        : {};
    }
    function op(e2, t2, r2) {
      let n2 = e2?.[t2]?.compute;
      return n2 ? (i) => r2({ ...i, [t2]: n2(i) }) : r2;
    }
    function Qs(e2, t2) {
      if (!t2) return e2;
      let r2 = { ...e2 };
      for (let n2 of Object.values(t2))
        if (!!e2[n2.name]) for (let i of n2.needs) r2[i] = true;
      return r2;
    }
    var qr = class {
      constructor(t2, r2) {
        this.extension = t2;
        this.previous = r2;
        this.computedFieldsCache = new he();
        this.modelExtensionsCache = new he();
        this.queryCallbacksCache = new he();
        this.clientExtensions = Rt(() =>
          this.extension.client
            ? {
                ...this.previous?.getAllClientExtensions(),
                ...this.extension.client,
              }
            : this.previous?.getAllClientExtensions()
        );
        this.batchCallbacks = Rt(() => {
          let t3 = this.previous?.getAllBatchQueryCallbacks() ?? [],
            r3 = this.extension.query?.$__internalBatch;
          return r3 ? t3.concat(r3) : t3;
        });
      }
      getAllComputedFields(t2) {
        return this.computedFieldsCache.getOrCreate(t2, () =>
          Us(this.previous?.getAllComputedFields(t2), this.extension, t2)
        );
      }
      getAllClientExtensions() {
        return this.clientExtensions.get();
      }
      getAllModelExtensions(t2) {
        return this.modelExtensionsCache.getOrCreate(t2, () => {
          let r2 = Ee(t2);
          return !this.extension.model ||
            !(this.extension.model[r2] || this.extension.model.$allModels)
            ? this.previous?.getAllModelExtensions(t2)
            : {
                ...this.previous?.getAllModelExtensions(t2),
                ...this.extension.model.$allModels,
                ...this.extension.model[r2],
              };
        });
      }
      getAllQueryCallbacks(t2, r2) {
        return this.queryCallbacksCache.getOrCreate(`${t2}:${r2}`, () => {
          let n2 = this.previous?.getAllQueryCallbacks(t2, r2) ?? [],
            i = [],
            o2 = this.extension.query;
          return !o2 ||
            !(o2[t2] || o2.$allModels || o2[r2] || o2.$allOperations)
            ? n2
            : (o2[t2] !== void 0 &&
                (o2[t2][r2] !== void 0 && i.push(o2[t2][r2]),
                o2[t2].$allOperations !== void 0 &&
                  i.push(o2[t2].$allOperations)),
              t2 !== '$none' &&
                o2.$allModels !== void 0 &&
                (o2.$allModels[r2] !== void 0 && i.push(o2.$allModels[r2]),
                o2.$allModels.$allOperations !== void 0 &&
                  i.push(o2.$allModels.$allOperations)),
              o2[r2] !== void 0 && i.push(o2[r2]),
              o2.$allOperations !== void 0 && i.push(o2.$allOperations),
              n2.concat(i));
        });
      }
      getAllBatchQueryCallbacks() {
        return this.batchCallbacks.get();
      }
    };
    var Be = class {
      constructor(t2) {
        this.head = t2;
      }
      static empty() {
        return new Be();
      }
      static single(t2) {
        return new Be(new qr(t2));
      }
      isEmpty() {
        return this.head === void 0;
      }
      append(t2) {
        return new Be(new qr(t2, this.head));
      }
      getAllComputedFields(t2) {
        return this.head?.getAllComputedFields(t2);
      }
      getAllClientExtensions() {
        return this.head?.getAllClientExtensions();
      }
      getAllModelExtensions(t2) {
        return this.head?.getAllModelExtensions(t2);
      }
      getAllQueryCallbacks(t2, r2) {
        return this.head?.getAllQueryCallbacks(t2, r2) ?? [];
      }
      getAllBatchQueryCallbacks() {
        return this.head?.getAllBatchQueryCallbacks() ?? [];
      }
    };
    var Js = N('prisma:client');
    var Gs = { Vercel: 'vercel', 'Netlify CI': 'netlify' };
    function Ws({ postinstall: e2, ciName: t2, clientVersion: r2 }) {
      if (
        (Js('checkPlatformCaching:postinstall', e2),
        Js('checkPlatformCaching:ciName', t2),
        e2 === true && t2 && t2 in Gs)
      ) {
        let n2 = `Prisma has detected that this project was built on ${t2}, which caches dependencies. This leads to an outdated Prisma Client because Prisma's auto-generation isn't triggered. To fix this, make sure to run the \`prisma generate\` command during the build process.

Learn how: https://pris.ly/d/${Gs[t2]}-build`;
        throw (console.error(n2), new _(n2, r2));
      }
    }
    var ea = A(ni());
    function Zs(e2, t2) {
      let r2 = Xs(e2),
        n2 = sp(r2),
        i = lp(n2);
      i ? jr(i, t2) : t2.addErrorMessage(() => 'Unknown error');
    }
    function Xs(e2) {
      return e2.errors.flatMap((t2) => (t2.kind === 'Union' ? Xs(t2) : [t2]));
    }
    function sp(e2) {
      let t2 = /* @__PURE__ */ new Map(),
        r2 = [];
      for (let n2 of e2) {
        if (n2.kind !== 'InvalidArgumentType') {
          r2.push(n2);
          continue;
        }
        let i = `${n2.selectionPath.join('.')}:${n2.argumentPath.join('.')}`,
          o2 = t2.get(i);
        o2
          ? t2.set(i, {
              ...n2,
              argument: {
                ...n2.argument,
                typeNames: ap(o2.argument.typeNames, n2.argument.typeNames),
              },
            })
          : t2.set(i, n2);
      }
      return r2.push(...t2.values()), r2;
    }
    function ap(e2, t2) {
      return [...new Set(e2.concat(t2))];
    }
    function lp(e2) {
      return _n(e2, (t2, r2) => {
        let n2 = zs(t2),
          i = zs(r2);
        return n2 !== i ? n2 - i : Ys(t2) - Ys(r2);
      });
    }
    function zs(e2) {
      let t2 = 0;
      return (
        Array.isArray(e2.selectionPath) && (t2 += e2.selectionPath.length),
        Array.isArray(e2.argumentPath) && (t2 += e2.argumentPath.length),
        t2
      );
    }
    function Ys(e2) {
      switch (e2.kind) {
        case 'InvalidArgumentValue':
        case 'ValueTooLarge':
          return 20;
        case 'InvalidArgumentType':
          return 10;
        case 'RequiredArgumentMissing':
          return -10;
        default:
          return 0;
      }
    }
    var Re = class {
      constructor(t2, r2) {
        this.name = t2;
        this.value = r2;
        this.isRequired = false;
      }
      makeRequired() {
        return (this.isRequired = true), this;
      }
      write(t2) {
        let {
          colors: { green: r2 },
        } = t2.context;
        t2.addMarginSymbol(r2(this.isRequired ? '+' : '?')),
          t2.write(r2(this.name)),
          this.isRequired || t2.write(r2('?')),
          t2.write(r2(': ')),
          typeof this.value == 'string'
            ? t2.write(r2(this.value))
            : t2.write(this.value);
      }
    };
    var Br = class {
      constructor() {
        this.fields = [];
      }
      addField(t2, r2) {
        return (
          this.fields.push({
            write(n2) {
              let { green: i, dim: o2 } = n2.context.colors;
              n2.write(i(o2(`${t2}: ${r2}`))).addMarginSymbol(i(o2('+')));
            },
          }),
          this
        );
      }
      write(t2) {
        let {
          colors: { green: r2 },
        } = t2.context;
        t2.writeLine(r2('{'))
          .withIndent(() => {
            t2.writeJoined(mt, this.fields).newLine();
          })
          .write(r2('}'))
          .addMarginSymbol(r2('+'));
      }
    };
    function jr(e2, t2) {
      switch (e2.kind) {
        case 'IncludeAndSelect':
          up(e2, t2);
          break;
        case 'IncludeOnScalar':
          cp(e2, t2);
          break;
        case 'EmptySelection':
          pp(e2, t2);
          break;
        case 'UnknownSelectionField':
          dp(e2, t2);
          break;
        case 'UnknownArgument':
          mp(e2, t2);
          break;
        case 'UnknownInputField':
          fp(e2, t2);
          break;
        case 'RequiredArgumentMissing':
          gp(e2, t2);
          break;
        case 'InvalidArgumentType':
          yp(e2, t2);
          break;
        case 'InvalidArgumentValue':
          hp(e2, t2);
          break;
        case 'ValueTooLarge':
          xp(e2, t2);
          break;
        case 'SomeFieldsMissing':
          bp(e2, t2);
          break;
        case 'TooManyFieldsGiven':
          wp(e2, t2);
          break;
        case 'Union':
          Zs(e2, t2);
          break;
        default:
          throw new Error('not implemented: ' + e2.kind);
      }
    }
    function up(e2, t2) {
      let r2 = t2.arguments.getDeepSubSelectionValue(e2.selectionPath);
      r2 &&
        r2 instanceof D &&
        (r2.getField('include')?.markAsError(),
        r2.getField('select')?.markAsError()),
        t2.addErrorMessage(
          (n2) =>
            `Please ${n2.bold('either')} use ${n2.green(
              '`include`'
            )} or ${n2.green('`select`')}, but ${n2.red(
              'not both'
            )} at the same time.`
        );
    }
    function cp(e2, t2) {
      let [r2, n2] = Kr(e2.selectionPath),
        i = e2.outputType,
        o2 = t2.arguments.getDeepSelectionParent(r2)?.value;
      if (o2 && (o2.getField(n2)?.markAsError(), i))
        for (let s2 of i.fields)
          s2.isRelation && o2.addSuggestion(new Re(s2.name, 'true'));
      t2.addErrorMessage((s2) => {
        let a = `Invalid scalar field ${s2.red(`\`${n2}\``)} for ${s2.bold(
          'include'
        )} statement`;
        return (
          i ? (a += ` on model ${s2.bold(i.name)}. ${Vt(s2)}`) : (a += '.'),
          (a += `
Note that ${s2.bold('include')} statements only accept relation fields.`),
          a
        );
      });
    }
    function pp(e2, t2) {
      let r2 = e2.outputType,
        n2 = t2.arguments.getDeepSelectionParent(e2.selectionPath)?.value,
        i = n2?.isEmpty() ?? false;
      n2 && (n2.removeAllFields(), na(n2, r2)),
        t2.addErrorMessage((o2) =>
          i
            ? `The ${o2.red('`select`')} statement for type ${o2.bold(
                r2.name
              )} must not be empty. ${Vt(o2)}`
            : `The ${o2.red('`select`')} statement for type ${o2.bold(
                r2.name
              )} needs ${o2.bold('at least one truthy value')}.`
        );
    }
    function dp(e2, t2) {
      let [r2, n2] = Kr(e2.selectionPath),
        i = t2.arguments.getDeepSelectionParent(r2);
      i && (i.value.getField(n2)?.markAsError(), na(i.value, e2.outputType)),
        t2.addErrorMessage((o2) => {
          let s2 = [`Unknown field ${o2.red(`\`${n2}\``)}`];
          return (
            i && s2.push(`for ${o2.bold(i.kind)} statement`),
            s2.push(`on model ${o2.bold(`\`${e2.outputType.name}\``)}.`),
            s2.push(Vt(o2)),
            s2.join(' ')
          );
        });
    }
    function mp(e2, t2) {
      let r2 = e2.argumentPath[0],
        n2 = t2.arguments.getDeepSubSelectionValue(e2.selectionPath);
      n2 instanceof D && (n2.getField(r2)?.markAsError(), Pp(n2, e2.arguments)),
        t2.addErrorMessage((i) =>
          ta(
            i,
            r2,
            e2.arguments.map((o2) => o2.name)
          )
        );
    }
    function fp(e2, t2) {
      let [r2, n2] = Kr(e2.argumentPath),
        i = t2.arguments.getDeepSubSelectionValue(e2.selectionPath);
      if (i instanceof D) {
        i.getDeepField(e2.argumentPath)?.markAsError();
        let o2 = i.getDeepFieldValue(r2);
        o2 instanceof D && ia(o2, e2.inputType);
      }
      t2.addErrorMessage((o2) =>
        ta(
          o2,
          n2,
          e2.inputType.fields.map((s2) => s2.name)
        )
      );
    }
    function ta(e2, t2, r2) {
      let n2 = [`Unknown argument \`${e2.red(t2)}\`.`],
        i = Tp(t2, r2);
      return (
        i && n2.push(`Did you mean \`${e2.green(i)}\`?`),
        r2.length > 0 && n2.push(Vt(e2)),
        n2.join(' ')
      );
    }
    function gp(e2, t2) {
      let r2;
      t2.addErrorMessage((l2) =>
        r2?.value instanceof j && r2.value.text === 'null'
          ? `Argument \`${l2.green(o2)}\` must not be ${l2.red('null')}.`
          : `Argument \`${l2.green(o2)}\` is missing.`
      );
      let n2 = t2.arguments.getDeepSubSelectionValue(e2.selectionPath);
      if (!(n2 instanceof D)) return;
      let [i, o2] = Kr(e2.argumentPath),
        s2 = new Br(),
        a = n2.getDeepFieldValue(i);
      if (a instanceof D)
        if (
          ((r2 = a.getField(o2)),
          r2 && a.removeField(o2),
          e2.inputTypes.length === 1 && e2.inputTypes[0].kind === 'object')
        ) {
          for (let l2 of e2.inputTypes[0].fields)
            s2.addField(l2.name, l2.typeNames.join(' | '));
          a.addSuggestion(new Re(o2, s2).makeRequired());
        } else {
          let l2 = e2.inputTypes.map(ra).join(' | ');
          a.addSuggestion(new Re(o2, l2).makeRequired());
        }
    }
    function ra(e2) {
      return e2.kind === 'list' ? `${ra(e2.elementType)}[]` : e2.name;
    }
    function yp(e2, t2) {
      let r2 = e2.argument.name,
        n2 = t2.arguments.getDeepSubSelectionValue(e2.selectionPath);
      n2 instanceof D && n2.getDeepFieldValue(e2.argumentPath)?.markAsError(),
        t2.addErrorMessage((i) => {
          let o2 = Vr(
            'or',
            e2.argument.typeNames.map((s2) => i.green(s2))
          );
          return `Argument \`${i.bold(
            r2
          )}\`: Invalid value provided. Expected ${o2}, provided ${i.red(
            e2.inferredType
          )}.`;
        });
    }
    function hp(e2, t2) {
      let r2 = e2.argument.name,
        n2 = t2.arguments.getDeepSubSelectionValue(e2.selectionPath);
      n2 instanceof D && n2.getDeepFieldValue(e2.argumentPath)?.markAsError(),
        t2.addErrorMessage((i) => {
          let o2 = [`Invalid value for argument \`${i.bold(r2)}\``];
          if (
            (e2.underlyingError && o2.push(`: ${e2.underlyingError}`),
            o2.push('.'),
            e2.argument.typeNames.length > 0)
          ) {
            let s2 = Vr(
              'or',
              e2.argument.typeNames.map((a) => i.green(a))
            );
            o2.push(` Expected ${s2}.`);
          }
          return o2.join('');
        });
    }
    function xp(e2, t2) {
      let r2 = e2.argument.name,
        n2 = t2.arguments.getDeepSubSelectionValue(e2.selectionPath),
        i;
      if (n2 instanceof D) {
        let s2 = n2.getDeepField(e2.argumentPath)?.value;
        s2?.markAsError(), s2 instanceof j && (i = s2.text);
      }
      t2.addErrorMessage((o2) => {
        let s2 = ['Unable to fit value'];
        return (
          i && s2.push(o2.red(i)),
          s2.push(`into a 64-bit signed integer for field \`${o2.bold(r2)}\``),
          s2.join(' ')
        );
      });
    }
    function bp(e2, t2) {
      let r2 = e2.argumentPath[e2.argumentPath.length - 1],
        n2 = t2.arguments.getDeepSubSelectionValue(e2.selectionPath);
      if (n2 instanceof D) {
        let i = n2.getDeepFieldValue(e2.argumentPath);
        i instanceof D && ia(i, e2.inputType);
      }
      t2.addErrorMessage((i) => {
        let o2 = [
          `Argument \`${i.bold(r2)}\` of type ${i.bold(
            e2.inputType.name
          )} needs`,
        ];
        return (
          e2.constraints.minFieldCount === 1
            ? e2.constraints.requiredFields
              ? o2.push(
                  `${i.green('at least one of')} ${Vr(
                    'or',
                    e2.constraints.requiredFields.map(
                      (s2) => `\`${i.bold(s2)}\``
                    )
                  )} arguments.`
                )
              : o2.push(`${i.green('at least one')} argument.`)
            : o2.push(
                `${i.green(
                  `at least ${e2.constraints.minFieldCount}`
                )} arguments.`
              ),
          o2.push(Vt(i)),
          o2.join(' ')
        );
      });
    }
    function wp(e2, t2) {
      let r2 = e2.argumentPath[e2.argumentPath.length - 1],
        n2 = t2.arguments.getDeepSubSelectionValue(e2.selectionPath),
        i = [];
      if (n2 instanceof D) {
        let o2 = n2.getDeepFieldValue(e2.argumentPath);
        o2 instanceof D &&
          (o2.markAsError(), (i = Object.keys(o2.getFields())));
      }
      t2.addErrorMessage((o2) => {
        let s2 = [
          `Argument \`${o2.bold(r2)}\` of type ${o2.bold(
            e2.inputType.name
          )} needs`,
        ];
        return (
          e2.constraints.minFieldCount === 1 &&
          e2.constraints.maxFieldCount == 1
            ? s2.push(`${o2.green('exactly one')} argument,`)
            : e2.constraints.maxFieldCount == 1
            ? s2.push(`${o2.green('at most one')} argument,`)
            : s2.push(
                `${o2.green(
                  `at most ${e2.constraints.maxFieldCount}`
                )} arguments,`
              ),
          s2.push(
            `but you provided ${Vr(
              'and',
              i.map((a) => o2.red(a))
            )}. Please choose`
          ),
          e2.constraints.maxFieldCount === 1
            ? s2.push('one.')
            : s2.push(`${e2.constraints.maxFieldCount}.`),
          s2.join(' ')
        );
      });
    }
    function na(e2, t2) {
      for (let r2 of t2.fields)
        e2.hasField(r2.name) || e2.addSuggestion(new Re(r2.name, 'true'));
    }
    function Pp(e2, t2) {
      for (let r2 of t2)
        e2.hasField(r2.name) ||
          e2.addSuggestion(new Re(r2.name, r2.typeNames.join(' | ')));
    }
    function ia(e2, t2) {
      if (t2.kind === 'object')
        for (let r2 of t2.fields)
          e2.hasField(r2.name) ||
            e2.addSuggestion(new Re(r2.name, r2.typeNames.join(' | ')));
    }
    function Kr(e2) {
      let t2 = [...e2],
        r2 = t2.pop();
      if (!r2) throw new Error('unexpected empty path');
      return [t2, r2];
    }
    function Vt({ green: e2 }) {
      return `Available options are listed in ${e2('green')}.`;
    }
    function Vr(e2, t2) {
      if (t2.length === 1) return t2[0];
      let r2 = [...t2],
        n2 = r2.pop();
      return `${r2.join(', ')} ${e2} ${n2}`;
    }
    var Ep = 3;
    function Tp(e2, t2) {
      let r2 = 1 / 0,
        n2;
      for (let i of t2) {
        let o2 = (0, ea.default)(e2, i);
        o2 > Ep || (o2 < r2 && ((r2 = o2), (n2 = i)));
      }
      return n2;
    }
    function Ur({
      args: e2,
      errors: t2,
      errorFormat: r2,
      callsite: n2,
      originalMethod: i,
      clientVersion: o2,
    }) {
      let s2 = _r(e2);
      for (let p of t2) jr(p, s2);
      let a = r2 === 'pretty' ? cs : Or,
        l2 = s2.renderAllMessages(a),
        u = new at(0, { colors: a }).write(s2).toString(),
        c2 = gt({
          message: l2,
          callsite: n2,
          originalMethod: i,
          showColors: r2 === 'pretty',
          callArguments: u,
        });
      throw new te(c2, { clientVersion: o2 });
    }
    var vp = {
      findUnique: 'findUnique',
      findUniqueOrThrow: 'findUniqueOrThrow',
      findFirst: 'findFirst',
      findFirstOrThrow: 'findFirstOrThrow',
      findMany: 'findMany',
      count: 'aggregate',
      create: 'createOne',
      createMany: 'createMany',
      update: 'updateOne',
      updateMany: 'updateMany',
      upsert: 'upsertOne',
      delete: 'deleteOne',
      deleteMany: 'deleteMany',
      executeRaw: 'executeRaw',
      queryRaw: 'queryRaw',
      aggregate: 'aggregate',
      groupBy: 'groupBy',
      runCommandRaw: 'runCommandRaw',
      findRaw: 'findRaw',
      aggregateRaw: 'aggregateRaw',
    };
    function oa({
      modelName: e2,
      action: t2,
      args: r2,
      runtimeDataModel: n2,
      extensions: i,
      callsite: o2,
      clientMethod: s2,
      errorFormat: a,
      clientVersion: l2,
    }) {
      let u = new yt({
        runtimeDataModel: n2,
        modelName: e2,
        action: t2,
        rootArgs: r2,
        callsite: o2,
        extensions: i,
        selectionPath: [],
        argumentPath: [],
        originalMethod: s2,
        errorFormat: a,
        clientVersion: l2,
      });
      return { modelName: e2, action: vp[t2], query: ii(r2, u) };
    }
    function ii({ select: e2, include: t2, ...r2 } = {}, n2) {
      return { arguments: aa(r2, n2), selection: Cp(e2, t2, n2) };
    }
    function Cp(e2, t2, r2) {
      return (
        e2 &&
          t2 &&
          r2.throwValidationError({
            kind: 'IncludeAndSelect',
            selectionPath: r2.getSelectionPath(),
          }),
        e2 ? Sp(e2, r2) : Mp(r2, t2)
      );
    }
    function Mp(e2, t2) {
      let r2 = {};
      return (
        e2.model &&
          !e2.isRawAction() &&
          ((r2.$composites = true), (r2.$scalars = true)),
        t2 && Ap(r2, t2, e2),
        r2
      );
    }
    function Ap(e2, t2, r2) {
      for (let [n2, i] of Object.entries(t2)) {
        let o2 = r2.findField(n2);
        o2 &&
          o2?.kind !== 'object' &&
          r2.throwValidationError({
            kind: 'IncludeOnScalar',
            selectionPath: r2.getSelectionPath().concat(n2),
            outputType: r2.getOutputTypeDescription(),
          }),
          i === true
            ? (e2[n2] = true)
            : typeof i == 'object' && (e2[n2] = ii(i, r2.nestSelection(n2)));
      }
    }
    function Sp(e2, t2) {
      let r2 = {},
        n2 = t2.getComputedFields(),
        i = Qs(e2, n2);
      for (let [o2, s2] of Object.entries(i)) {
        let a = t2.findField(o2);
        (n2?.[o2] && !a) ||
          (s2 === true
            ? (r2[o2] = true)
            : typeof s2 == 'object' && (r2[o2] = ii(s2, t2.nestSelection(o2))));
      }
      return r2;
    }
    function sa(e2, t2) {
      if (e2 === null) return null;
      if (
        typeof e2 == 'string' ||
        typeof e2 == 'number' ||
        typeof e2 == 'boolean'
      )
        return e2;
      if (typeof e2 == 'bigint') return { $type: 'BigInt', value: String(e2) };
      if (lt(e2)) {
        if (Er(e2)) return { $type: 'DateTime', value: e2.toISOString() };
        t2.throwValidationError({
          kind: 'InvalidArgumentValue',
          selectionPath: t2.getSelectionPath(),
          argumentPath: t2.getArgumentPath(),
          argument: { name: t2.getArgumentName(), typeNames: ['Date'] },
          underlyingError: 'Provided Date object is invalid',
        });
      }
      if (dt(e2))
        return {
          $type: 'FieldRef',
          value: { _ref: e2.name, _container: e2.modelName },
        };
      if (Array.isArray(e2)) return Rp(e2, t2);
      if (ArrayBuffer.isView(e2))
        return { $type: 'Bytes', value: Buffer.from(e2).toString('base64') };
      if (Fp(e2)) return e2.values;
      if (pt(e2)) return { $type: 'Decimal', value: e2.toFixed() };
      if (e2 instanceof Ae) {
        if (e2 !== Pr.instances[e2._getName()])
          throw new Error('Invalid ObjectEnumValue');
        return { $type: 'Enum', value: e2._getName() };
      }
      if (Op(e2)) return e2.toJSON();
      if (typeof e2 == 'object') return aa(e2, t2);
      t2.throwValidationError({
        kind: 'InvalidArgumentValue',
        selectionPath: t2.getSelectionPath(),
        argumentPath: t2.getArgumentPath(),
        argument: { name: t2.getArgumentName(), typeNames: [] },
        underlyingError: `We could not serialize ${Object.prototype.toString.call(
          e2
        )} value. Serialize the object to JSON or implement a ".toJSON()" method on it`,
      });
    }
    function aa(e2, t2) {
      if (e2.$type) return { $type: 'Json', value: JSON.stringify(e2) };
      let r2 = {};
      for (let n2 in e2) {
        let i = e2[n2];
        i !== void 0 && (r2[n2] = sa(i, t2.nestArgument(n2)));
      }
      return r2;
    }
    function Rp(e2, t2) {
      let r2 = [];
      for (let n2 = 0; n2 < e2.length; n2++) {
        let i = e2[n2];
        i !== void 0 && r2.push(sa(i, t2.nestArgument(String(n2))));
      }
      return r2;
    }
    function Fp(e2) {
      return (
        typeof e2 == 'object' &&
        e2 !== null &&
        e2.__prismaRawParameters__ === true
      );
    }
    function Op(e2) {
      return (
        typeof e2 == 'object' && e2 !== null && typeof e2.toJSON == 'function'
      );
    }
    var yt = class {
      constructor(t2) {
        this.params = t2;
        this.params.modelName &&
          (this.model =
            this.params.runtimeDataModel.models[this.params.modelName]);
      }
      throwValidationError(t2) {
        Ur({
          errors: [t2],
          originalMethod: this.params.originalMethod,
          args: this.params.rootArgs ?? {},
          callsite: this.params.callsite,
          errorFormat: this.params.errorFormat,
          clientVersion: this.params.clientVersion,
        });
      }
      getSelectionPath() {
        return this.params.selectionPath;
      }
      getArgumentPath() {
        return this.params.argumentPath;
      }
      getArgumentName() {
        return this.params.argumentPath[this.params.argumentPath.length - 1];
      }
      getOutputTypeDescription() {
        if (!(!this.params.modelName || !this.model))
          return {
            name: this.params.modelName,
            fields: this.model.fields.map((t2) => ({
              name: t2.name,
              typeName: 'boolean',
              isRelation: t2.kind === 'object',
            })),
          };
      }
      isRawAction() {
        return [
          'executeRaw',
          'queryRaw',
          'runCommandRaw',
          'findRaw',
          'aggregateRaw',
        ].includes(this.params.action);
      }
      getComputedFields() {
        if (!!this.params.modelName)
          return this.params.extensions.getAllComputedFields(
            this.params.modelName
          );
      }
      findField(t2) {
        return this.model?.fields.find((r2) => r2.name === t2);
      }
      nestSelection(t2) {
        let r2 = this.findField(t2),
          n2 = r2?.kind === 'object' ? r2.type : void 0;
        return new yt({
          ...this.params,
          modelName: n2,
          selectionPath: this.params.selectionPath.concat(t2),
        });
      }
      nestArgument(t2) {
        return new yt({
          ...this.params,
          argumentPath: this.params.argumentPath.concat(t2),
        });
      }
    };
    var la = (e2) => ({ command: e2 });
    var ua = (e2) => e2.strings.reduce((t2, r2, n2) => `${t2}@P${n2}${r2}`);
    function Ut(e2) {
      try {
        return ca(e2, 'fast');
      } catch {
        return ca(e2, 'slow');
      }
    }
    function ca(e2, t2) {
      return JSON.stringify(e2.map((r2) => kp(r2, t2)));
    }
    function kp(e2, t2) {
      return typeof e2 == 'bigint'
        ? { prisma__type: 'bigint', prisma__value: e2.toString() }
        : lt(e2)
        ? { prisma__type: 'date', prisma__value: e2.toJSON() }
        : we.isDecimal(e2)
        ? { prisma__type: 'decimal', prisma__value: e2.toJSON() }
        : Buffer.isBuffer(e2)
        ? { prisma__type: 'bytes', prisma__value: e2.toString('base64') }
        : Dp(e2) || ArrayBuffer.isView(e2)
        ? {
            prisma__type: 'bytes',
            prisma__value: Buffer.from(e2).toString('base64'),
          }
        : typeof e2 == 'object' && t2 === 'slow'
        ? da(e2)
        : e2;
    }
    function Dp(e2) {
      return e2 instanceof ArrayBuffer || e2 instanceof SharedArrayBuffer
        ? true
        : typeof e2 == 'object' && e2 !== null
        ? e2[Symbol.toStringTag] === 'ArrayBuffer' ||
          e2[Symbol.toStringTag] === 'SharedArrayBuffer'
        : false;
    }
    function da(e2) {
      if (typeof e2 != 'object' || e2 === null) return e2;
      if (typeof e2.toJSON == 'function') return e2.toJSON();
      if (Array.isArray(e2)) return e2.map(pa);
      let t2 = {};
      for (let r2 of Object.keys(e2)) t2[r2] = pa(e2[r2]);
      return t2;
    }
    function pa(e2) {
      return typeof e2 == 'bigint' ? e2.toString() : da(e2);
    }
    var _p = /^(\s*alter\s)/i;
    var ma = N('prisma:client');
    function oi(e2, t2, r2, n2) {
      if (
        !(e2 !== 'postgresql' && e2 !== 'cockroachdb') &&
        r2.length > 0 &&
        _p.exec(t2)
      )
        throw new Error(`Running ALTER using ${n2} is not supported
Using the example below you can still execute your query with Prisma, but please note that it is vulnerable to SQL injection attacks and requires you to take care of input sanitization.

Example:
  await prisma.$executeRawUnsafe(\`ALTER USER prisma WITH PASSWORD '\${password}'\`)

More Information: https://pris.ly/d/execute-raw
`);
    }
    var si = (e2, t2) => (r2) => {
      let n2 = '',
        i;
      if (Array.isArray(r2)) {
        let [o2, ...s2] = r2;
        (n2 = o2),
          (i = { values: Ut(s2 || []), __prismaRawParameters__: true });
      } else
        switch (e2) {
          case 'sqlite':
          case 'mysql': {
            (n2 = r2.sql),
              (i = { values: Ut(r2.values), __prismaRawParameters__: true });
            break;
          }
          case 'cockroachdb':
          case 'postgresql': {
            (n2 = r2.text),
              (i = { values: Ut(r2.values), __prismaRawParameters__: true });
            break;
          }
          case 'sqlserver': {
            (n2 = ua(r2)),
              (i = { values: Ut(r2.values), __prismaRawParameters__: true });
            break;
          }
          default:
            throw new Error(`The ${e2} provider does not support ${t2}`);
        }
      return (
        i?.values
          ? ma(`prisma.${t2}(${n2}, ${i.values})`)
          : ma(`prisma.${t2}(${n2})`),
        { query: n2, parameters: i }
      );
    };
    var fa = {
      requestArgsToMiddlewareArgs(e2) {
        return [e2.strings, ...e2.values];
      },
      middlewareArgsToRequestArgs(e2) {
        let [t2, ...r2] = e2;
        return new U(t2, r2);
      },
    };
    var ga = {
      requestArgsToMiddlewareArgs(e2) {
        return [e2];
      },
      middlewareArgsToRequestArgs(e2) {
        return e2[0];
      },
    };
    function ai(e2) {
      return function (r2) {
        let n2,
          i = (o2 = e2) => {
            try {
              return o2 === void 0 || o2?.kind === 'itx'
                ? n2 ?? (n2 = ya(r2(o2)))
                : ya(r2(o2));
            } catch (s2) {
              return Promise.reject(s2);
            }
          };
        return {
          then(o2, s2) {
            return i().then(o2, s2);
          },
          catch(o2) {
            return i().catch(o2);
          },
          finally(o2) {
            return i().finally(o2);
          },
          requestTransaction(o2) {
            let s2 = i(o2);
            return s2.requestTransaction ? s2.requestTransaction(o2) : s2;
          },
          [Symbol.toStringTag]: 'PrismaPromise',
        };
      };
    }
    function ya(e2) {
      return typeof e2.then == 'function' ? e2 : Promise.resolve(e2);
    }
    var ha = {
      isEnabled() {
        return false;
      },
      getTraceParent() {
        return '00-10-10-00';
      },
      async createEngineSpan() {},
      getActiveContext() {},
      runInChildSpan(e2, t2) {
        return t2();
      },
    };
    var li = class {
      isEnabled() {
        return this.getGlobalTracingHelper().isEnabled();
      }
      getTraceParent(t2) {
        return this.getGlobalTracingHelper().getTraceParent(t2);
      }
      createEngineSpan(t2) {
        return this.getGlobalTracingHelper().createEngineSpan(t2);
      }
      getActiveContext() {
        return this.getGlobalTracingHelper().getActiveContext();
      }
      runInChildSpan(t2, r2) {
        return this.getGlobalTracingHelper().runInChildSpan(t2, r2);
      }
      getGlobalTracingHelper() {
        return globalThis.PRISMA_INSTRUMENTATION?.helper ?? ha;
      }
    };
    function xa(e2) {
      return e2.includes('tracing') ? new li() : ha;
    }
    function ba(e2, t2 = () => {}) {
      let r2,
        n2 = new Promise((i) => (r2 = i));
      return {
        then(i) {
          return --e2 === 0 && r2(t2()), i?.(n2);
        },
      };
    }
    function wa(e2) {
      return typeof e2 == 'string'
        ? e2
        : e2.reduce((t2, r2) => {
            let n2 = typeof r2 == 'string' ? r2 : r2.level;
            return n2 === 'query'
              ? t2
              : t2 && (r2 === 'info' || t2 === 'info')
              ? 'info'
              : n2;
          }, void 0);
    }
    var Ip = [
      '$connect',
      '$disconnect',
      '$on',
      '$transaction',
      '$use',
      '$extends',
    ];
    var Pa = Ip;
    function Ta(e2, t2, r2) {
      let n2 = Ea(e2, r2),
        i = Ea(t2, r2),
        o2 = Object.values(i).map((a) => a[a.length - 1]),
        s2 = Object.keys(i);
      return (
        Object.entries(n2).forEach(([a, l2]) => {
          s2.includes(a) || o2.push(l2[l2.length - 1]);
        }),
        o2
      );
    }
    var Ea = (e2, t2) =>
      e2.reduce((r2, n2) => {
        let i = t2(n2);
        return r2[i] || (r2[i] = []), r2[i].push(n2), r2;
      }, {});
    var Qr = class {
      constructor() {
        this._middlewares = [];
      }
      use(t2) {
        this._middlewares.push(t2);
      }
      get(t2) {
        return this._middlewares[t2];
      }
      has(t2) {
        return !!this._middlewares[t2];
      }
      length() {
        return this._middlewares.length;
      }
    };
    var Ca = A(On());
    function Jr(e2) {
      return typeof e2.batchRequestIdx == 'number';
    }
    function Gr(e2) {
      return e2 === null
        ? e2
        : Array.isArray(e2)
        ? e2.map(Gr)
        : typeof e2 == 'object'
        ? Np(e2)
          ? Lp(e2)
          : ot(e2, Gr)
        : e2;
    }
    function Np(e2) {
      return (
        e2 !== null && typeof e2 == 'object' && typeof e2.$type == 'string'
      );
    }
    function Lp({ $type: e2, value: t2 }) {
      switch (e2) {
        case 'BigInt':
          return BigInt(t2);
        case 'Bytes':
          return Buffer.from(t2, 'base64');
        case 'DateTime':
          return new Date(t2);
        case 'Decimal':
          return new we(t2);
        case 'Json':
          return JSON.parse(t2);
        default:
          Je(t2, 'Unknown tagged value');
      }
    }
    function va(e2) {
      if (e2.action !== 'findUnique' && e2.action !== 'findUniqueOrThrow')
        return;
      let t2 = [];
      return (
        e2.modelName && t2.push(e2.modelName),
        e2.query.arguments && t2.push(ui(e2.query.arguments)),
        t2.push(ui(e2.query.selection)),
        t2.join('')
      );
    }
    function ui(e2) {
      return `(${Object.keys(e2)
        .sort()
        .map((r2) => {
          let n2 = e2[r2];
          return typeof n2 == 'object' && n2 !== null
            ? `(${r2} ${ui(n2)})`
            : r2;
        })
        .join(' ')})`;
    }
    var $p = {
      aggregate: false,
      aggregateRaw: false,
      createMany: true,
      createOne: true,
      deleteMany: true,
      deleteOne: true,
      executeRaw: true,
      findFirst: false,
      findFirstOrThrow: false,
      findMany: false,
      findRaw: false,
      findUnique: false,
      findUniqueOrThrow: false,
      groupBy: false,
      queryRaw: false,
      runCommandRaw: true,
      updateMany: true,
      updateOne: true,
      upsertOne: true,
    };
    function ci(e2) {
      return $p[e2];
    }
    var Wr = class {
      constructor(t2) {
        this.options = t2;
        this.tickActive = false;
        this.batches = {};
      }
      request(t2) {
        let r2 = this.options.batchBy(t2);
        return r2
          ? (this.batches[r2] ||
              ((this.batches[r2] = []),
              this.tickActive ||
                ((this.tickActive = true),
                process.nextTick(() => {
                  this.dispatchBatches(), (this.tickActive = false);
                }))),
            new Promise((n2, i) => {
              this.batches[r2].push({ request: t2, resolve: n2, reject: i });
            }))
          : this.options.singleLoader(t2);
      }
      dispatchBatches() {
        for (let t2 in this.batches) {
          let r2 = this.batches[t2];
          delete this.batches[t2],
            r2.length === 1
              ? this.options
                  .singleLoader(r2[0].request)
                  .then((n2) => {
                    n2 instanceof Error ? r2[0].reject(n2) : r2[0].resolve(n2);
                  })
                  .catch((n2) => {
                    r2[0].reject(n2);
                  })
              : (r2.sort((n2, i) =>
                  this.options.batchOrder(n2.request, i.request)
                ),
                this.options
                  .batchLoader(r2.map((n2) => n2.request))
                  .then((n2) => {
                    if (n2 instanceof Error)
                      for (let i = 0; i < r2.length; i++) r2[i].reject(n2);
                    else
                      for (let i = 0; i < r2.length; i++) {
                        let o2 = n2[i];
                        o2 instanceof Error
                          ? r2[i].reject(o2)
                          : r2[i].resolve(o2);
                      }
                  })
                  .catch((n2) => {
                    for (let i = 0; i < r2.length; i++) r2[i].reject(n2);
                  }));
        }
      }
      get [Symbol.toStringTag]() {
        return 'DataLoader';
      }
    };
    var qp = N('prisma:client:request_handler');
    var Hr = class {
      constructor(t2, r2) {
        (this.logEmitter = r2),
          (this.client = t2),
          (this.dataloader = new Wr({
            batchLoader: js(
              async ({ requests: n2, customDataProxyFetch: i }) => {
                let { transaction: o2, otelParentCtx: s2 } = n2[0],
                  a = n2.map((p) => p.protocolQuery),
                  l2 = this.client._tracingHelper.getTraceParent(s2),
                  u = n2.some((p) => ci(p.protocolQuery.action));
                return (
                  await this.client._engine.requestBatch(a, {
                    traceparent: l2,
                    transaction: jp(o2),
                    containsWrite: u,
                    customDataProxyFetch: i,
                  })
                ).map((p, d) => {
                  if (p instanceof Error) return p;
                  try {
                    return this.mapQueryEngineResult(n2[d], p);
                  } catch (g) {
                    return g;
                  }
                });
              }
            ),
            singleLoader: async (n2) => {
              let i =
                  n2.transaction?.kind === 'itx' ? Ma(n2.transaction) : void 0,
                o2 = await this.client._engine.request(n2.protocolQuery, {
                  traceparent: this.client._tracingHelper.getTraceParent(),
                  interactiveTransaction: i,
                  isWrite: ci(n2.protocolQuery.action),
                  customDataProxyFetch: n2.customDataProxyFetch,
                });
              return this.mapQueryEngineResult(n2, o2);
            },
            batchBy: (n2) =>
              n2.transaction?.id
                ? `transaction-${n2.transaction.id}`
                : va(n2.protocolQuery),
            batchOrder(n2, i) {
              return n2.transaction?.kind === 'batch' &&
                i.transaction?.kind === 'batch'
                ? n2.transaction.index - i.transaction.index
                : 0;
            },
          }));
      }
      async request(t2) {
        try {
          return await this.dataloader.request(t2);
        } catch (r2) {
          let { clientMethod: n2, callsite: i, transaction: o2, args: s2 } = t2;
          this.handleAndLogRequestError({
            error: r2,
            clientMethod: n2,
            callsite: i,
            transaction: o2,
            args: s2,
          });
        }
      }
      mapQueryEngineResult({ dataPath: t2, unpacker: r2 }, n2) {
        let i = n2?.data,
          o2 = n2?.elapsed,
          s2 = this.unpack(i, t2, r2);
        return process.env.PRISMA_CLIENT_GET_TIME
          ? { data: s2, elapsed: o2 }
          : s2;
      }
      handleAndLogRequestError(t2) {
        try {
          this.handleRequestError(t2);
        } catch (r2) {
          throw (
            (this.logEmitter &&
              this.logEmitter.emit('error', {
                message: r2.message,
                target: t2.clientMethod,
                timestamp: /* @__PURE__ */ new Date(),
              }),
            r2)
          );
        }
      }
      handleRequestError({
        error: t2,
        clientMethod: r2,
        callsite: n2,
        transaction: i,
        args: o2,
      }) {
        if ((qp(t2), Bp(t2, i) || t2 instanceof Ce)) throw t2;
        if (t2 instanceof H && Kp(t2)) {
          let a = Aa(t2.meta);
          Ur({
            args: o2,
            errors: [a],
            callsite: n2,
            errorFormat: this.client._errorFormat,
            originalMethod: r2,
            clientVersion: this.client._clientVersion,
          });
        }
        let s2 = t2.message;
        throw (
          (n2 &&
            (s2 = gt({
              callsite: n2,
              originalMethod: r2,
              isPanic: t2.isPanic,
              showColors: this.client._errorFormat === 'pretty',
              message: s2,
            })),
          (s2 = this.sanitizeMessage(s2)),
          t2.code
            ? new H(s2, {
                code: t2.code,
                clientVersion: this.client._clientVersion,
                meta: t2.meta,
                batchRequestIdx: t2.batchRequestIdx,
              })
            : t2.isPanic
            ? new ae(s2, this.client._clientVersion)
            : t2 instanceof z
            ? new z(s2, {
                clientVersion: this.client._clientVersion,
                batchRequestIdx: t2.batchRequestIdx,
              })
            : t2 instanceof _
            ? new _(s2, this.client._clientVersion)
            : t2 instanceof ae
            ? new ae(s2, this.client._clientVersion)
            : ((t2.clientVersion = this.client._clientVersion), t2))
        );
      }
      sanitizeMessage(t2) {
        return this.client._errorFormat && this.client._errorFormat !== 'pretty'
          ? (0, Ca.default)(t2)
          : t2;
      }
      unpack(t2, r2, n2) {
        if (!t2 || (t2.data && (t2 = t2.data), !t2)) return t2;
        let i = Object.values(t2)[0],
          o2 = r2.filter((a) => a !== 'select' && a !== 'include'),
          s2 = Gr(Xn(i, o2));
        return n2 ? n2(s2) : s2;
      }
      get [Symbol.toStringTag]() {
        return 'RequestHandler';
      }
    };
    function jp(e2) {
      if (!!e2) {
        if (e2.kind === 'batch')
          return {
            kind: 'batch',
            options: { isolationLevel: e2.isolationLevel },
          };
        if (e2.kind === 'itx') return { kind: 'itx', options: Ma(e2) };
        Je(e2, 'Unknown transaction kind');
      }
    }
    function Ma(e2) {
      return { id: e2.id, payload: e2.payload };
    }
    function Bp(e2, t2) {
      return Jr(e2) && t2?.kind === 'batch' && e2.batchRequestIdx !== t2.index;
    }
    function Kp(e2) {
      return e2.code === 'P2009' || e2.code === 'P2012';
    }
    function Aa(e2) {
      if (e2.kind === 'Union')
        return { kind: 'Union', errors: e2.errors.map(Aa) };
      if (Array.isArray(e2.selectionPath)) {
        let [, ...t2] = e2.selectionPath;
        return { ...e2, selectionPath: t2 };
      }
      return e2;
    }
    var Sa = '5.1.1';
    var Ra = Sa;
    function Fa(e2) {
      return e2.map((t2) => {
        let r2 = {};
        for (let n2 of Object.keys(t2)) r2[n2] = Oa(t2[n2]);
        return r2;
      });
    }
    function Oa({ prisma__type: e2, prisma__value: t2 }) {
      switch (e2) {
        case 'bigint':
          return BigInt(t2);
        case 'bytes':
          return Buffer.from(t2, 'base64');
        case 'decimal':
          return new we(t2);
        case 'datetime':
        case 'date':
          return new Date(t2);
        case 'time':
          return /* @__PURE__ */ new Date(`1970-01-01T${t2}Z`);
        case 'array':
          return t2.map(Oa);
        default:
          return t2;
      }
    }
    var Ia = A(ni());
    var B = class extends Error {
      constructor(t2) {
        super(
          t2 +
            `
Read more at https://pris.ly/d/client-constructor`
        ),
          (this.name = 'PrismaClientConstructorValidationError');
      }
      get [Symbol.toStringTag]() {
        return 'PrismaClientConstructorValidationError';
      }
    };
    ee(B, 'PrismaClientConstructorValidationError');
    var ka = ['datasources', 'errorFormat', 'log', '__internal'];
    var Da = ['pretty', 'colorless', 'minimal'];
    var _a = ['info', 'query', 'warn', 'error'];
    var Up = {
      datasources: (e2, t2) => {
        if (!!e2) {
          if (typeof e2 != 'object' || Array.isArray(e2))
            throw new B(
              `Invalid value ${JSON.stringify(
                e2
              )} for "datasources" provided to PrismaClient constructor`
            );
          for (let [r2, n2] of Object.entries(e2)) {
            if (!t2.includes(r2)) {
              let i = ht(r2, t2) || ` Available datasources: ${t2.join(', ')}`;
              throw new B(
                `Unknown datasource ${r2} provided to PrismaClient constructor.${i}`
              );
            }
            if (typeof n2 != 'object' || Array.isArray(n2))
              throw new B(`Invalid value ${JSON.stringify(
                e2
              )} for datasource "${r2}" provided to PrismaClient constructor.
It should have this form: { url: "CONNECTION_STRING" }`);
            if (n2 && typeof n2 == 'object')
              for (let [i, o2] of Object.entries(n2)) {
                if (i !== 'url')
                  throw new B(`Invalid value ${JSON.stringify(
                    e2
                  )} for datasource "${r2}" provided to PrismaClient constructor.
It should have this form: { url: "CONNECTION_STRING" }`);
                if (typeof o2 != 'string')
                  throw new B(`Invalid value ${JSON.stringify(
                    o2
                  )} for datasource "${r2}" provided to PrismaClient constructor.
It should have this form: { url: "CONNECTION_STRING" }`);
              }
          }
        }
      },
      errorFormat: (e2) => {
        if (!!e2) {
          if (typeof e2 != 'string')
            throw new B(
              `Invalid value ${JSON.stringify(
                e2
              )} for "errorFormat" provided to PrismaClient constructor.`
            );
          if (!Da.includes(e2)) {
            let t2 = ht(e2, Da);
            throw new B(
              `Invalid errorFormat ${e2} provided to PrismaClient constructor.${t2}`
            );
          }
        }
      },
      log: (e2) => {
        if (!e2) return;
        if (!Array.isArray(e2))
          throw new B(
            `Invalid value ${JSON.stringify(
              e2
            )} for "log" provided to PrismaClient constructor.`
          );
        function t2(r2) {
          if (typeof r2 == 'string' && !_a.includes(r2)) {
            let n2 = ht(r2, _a);
            throw new B(
              `Invalid log level "${r2}" provided to PrismaClient constructor.${n2}`
            );
          }
        }
        for (let r2 of e2) {
          t2(r2);
          let n2 = {
            level: t2,
            emit: (i) => {
              let o2 = ['stdout', 'event'];
              if (!o2.includes(i)) {
                let s2 = ht(i, o2);
                throw new B(
                  `Invalid value ${JSON.stringify(
                    i
                  )} for "emit" in logLevel provided to PrismaClient constructor.${s2}`
                );
              }
            },
          };
          if (r2 && typeof r2 == 'object')
            for (let [i, o2] of Object.entries(r2))
              if (n2[i]) n2[i](o2);
              else
                throw new B(
                  `Invalid property ${i} for "log" provided to PrismaClient constructor`
                );
        }
      },
      __internal: (e2) => {
        if (!e2) return;
        let t2 = ['debug', 'hooks', 'engine', 'measurePerformance'];
        if (typeof e2 != 'object')
          throw new B(
            `Invalid value ${JSON.stringify(
              e2
            )} for "__internal" to PrismaClient constructor`
          );
        for (let [r2] of Object.entries(e2))
          if (!t2.includes(r2)) {
            let n2 = ht(r2, t2);
            throw new B(
              `Invalid property ${JSON.stringify(
                r2
              )} for "__internal" provided to PrismaClient constructor.${n2}`
            );
          }
      },
    };
    function Na(e2, t2) {
      for (let [r2, n2] of Object.entries(e2)) {
        if (!ka.includes(r2)) {
          let i = ht(r2, ka);
          throw new B(
            `Unknown property ${r2} provided to PrismaClient constructor.${i}`
          );
        }
        Up[r2](n2, t2);
      }
    }
    function ht(e2, t2) {
      if (t2.length === 0 || typeof e2 != 'string') return '';
      let r2 = Qp(e2, t2);
      return r2 ? ` Did you mean "${r2}"?` : '';
    }
    function Qp(e2, t2) {
      if (t2.length === 0) return null;
      let r2 = t2.map((i) => ({ value: i, distance: (0, Ia.default)(e2, i) }));
      r2.sort((i, o2) => (i.distance < o2.distance ? -1 : 1));
      let n2 = r2[0];
      return n2.distance < 3 ? n2.value : null;
    }
    function La(e2) {
      return e2.length === 0
        ? Promise.resolve([])
        : new Promise((t2, r2) => {
            let n2 = new Array(e2.length),
              i = null,
              o2 = false,
              s2 = 0,
              a = () => {
                o2 ||
                  (s2++, s2 === e2.length && ((o2 = true), i ? r2(i) : t2(n2)));
              },
              l2 = (u) => {
                o2 || ((o2 = true), r2(u));
              };
            for (let u = 0; u < e2.length; u++)
              e2[u].then(
                (c2) => {
                  (n2[u] = c2), a();
                },
                (c2) => {
                  if (!Jr(c2)) {
                    l2(c2);
                    return;
                  }
                  c2.batchRequestIdx === u ? l2(c2) : (i || (i = c2), a());
                }
              );
          });
    }
    var Te = N('prisma:client');
    typeof globalThis == 'object' && (globalThis.NODE_CLIENT = true);
    var Jp = {
      requestArgsToMiddlewareArgs: (e2) => e2,
      middlewareArgsToRequestArgs: (e2) => e2,
    };
    var Gp = Symbol.for('prisma.client.transaction.id');
    var Wp = {
      id: 0,
      nextId() {
        return ++this.id;
      },
    };
    function Ka(e2) {
      class t2 {
        constructor(n2) {
          this._middlewares = new Qr();
          this._createPrismaPromise = ai();
          this.$extends = ks;
          Ws(e2), n2 && Na(n2, e2.datasourceNames);
          let i = new ja.EventEmitter().on('error', () => {});
          (this._extensions = Be.empty()),
            (this._previewFeatures = e2.generator?.previewFeatures ?? []),
            (this._clientVersion = e2.clientVersion ?? Ra),
            (this._activeProvider = e2.activeProvider),
            (this._dataProxy = e2.dataProxy),
            (this._tracingHelper = xa(this._previewFeatures)),
            (this._clientEngineType = Pn(e2.generator));
          let o2 = {
              rootEnvPath:
                e2.relativeEnvPaths.rootEnvPath &&
                Qt.default.resolve(e2.dirname, e2.relativeEnvPaths.rootEnvPath),
              schemaEnvPath:
                e2.relativeEnvPaths.schemaEnvPath &&
                Qt.default.resolve(
                  e2.dirname,
                  e2.relativeEnvPaths.schemaEnvPath
                ),
            },
            s2 = Ct(o2, { conflictCheck: 'none' });
          try {
            let a = n2 ?? {},
              l2 = a.__internal ?? {},
              u = l2.debug === true;
            u && N.enable('prisma:client');
            let c2 = Qt.default.resolve(e2.dirname, e2.relativePath);
            Ba.default.existsSync(c2) || (c2 = e2.dirname),
              Te('dirname', e2.dirname),
              Te('relativePath', e2.relativePath),
              Te('cwd', c2);
            let p = a.datasources || {},
              d = Object.entries(p)
                .filter(([f, b]) => b && b.url)
                .map(([f, { url: b }]) => ({ name: f, url: b })),
              g = Ta([], d, (f) => f.name),
              y = l2.engine || {};
            if (
              (a.errorFormat
                ? (this._errorFormat = a.errorFormat)
                : process.env.NODE_ENV === 'production'
                ? (this._errorFormat = 'minimal')
                : process.env.NO_COLOR
                ? (this._errorFormat = 'colorless')
                : (this._errorFormat = 'colorless'),
              (this._runtimeDataModel = e2.runtimeDataModel),
              (this._engineConfig = {
                cwd: c2,
                dirname: e2.dirname,
                enableDebugLogs: u,
                allowTriggerPanic: y.allowTriggerPanic,
                datamodelPath: Qt.default.join(
                  e2.dirname,
                  e2.filename ?? 'schema.prisma'
                ),
                prismaPath: y.binaryPath ?? void 0,
                engineEndpoint: y.endpoint,
                datasources: g,
                generator: e2.generator,
                showColors: this._errorFormat === 'pretty',
                logLevel: a.log && wa(a.log),
                logQueries:
                  a.log &&
                  Boolean(
                    typeof a.log == 'string'
                      ? a.log === 'query'
                      : a.log.find((f) =>
                          typeof f == 'string'
                            ? f === 'query'
                            : f.level === 'query'
                        )
                  ),
                env: s2?.parsed ?? e2.injectableEdgeEnv?.parsed ?? {},
                flags: [],
                clientVersion: e2.clientVersion,
                previewFeatures: this._previewFeatures,
                activeProvider: e2.activeProvider,
                inlineSchema: e2.inlineSchema,
                inlineDatasources: e2.inlineDatasources,
                inlineSchemaHash: e2.inlineSchemaHash,
                tracingHelper: this._tracingHelper,
                logEmitter: i,
                isBundled: e2.isBundled,
              }),
              Te('clientVersion', e2.clientVersion),
              Te(
                'clientEngineType',
                this._dataProxy ? 'dataproxy' : this._clientEngineType
              ),
              this._dataProxy && Te('using Data Proxy with Node.js runtime'),
              (this._engine = this.getEngine()),
              (this._fetcher = new Hr(this, i)),
              a.log)
            )
              for (let f of a.log) {
                let b =
                  typeof f == 'string'
                    ? f
                    : f.emit === 'stdout'
                    ? f.level
                    : null;
                b &&
                  this.$on(b, (E) => {
                    St.log(`${St.tags[b] ?? ''}`, E.message || E.query);
                  });
              }
            this._metrics = new st(this._engine);
          } catch (a) {
            throw ((a.clientVersion = this._clientVersion), a);
          }
          return (this._appliedParent = Bt(this));
        }
        get [Symbol.toStringTag]() {
          return 'PrismaClient';
        }
        getEngine() {
          if ((this._dataProxy, this._clientEngineType === 'library'))
            return new Dt(this._engineConfig);
          throw (
            (this._clientEngineType,
            'binary',
            new te(
              'Invalid client engine type, please use `library` or `binary`',
              { clientVersion: this._clientVersion }
            ))
          );
        }
        $use(n2) {
          this._middlewares.use(n2);
        }
        $on(n2, i) {
          n2 === 'beforeExit'
            ? this._engine.on('beforeExit', i)
            : this._engine.on(n2, (o2) => {
                let s2 = o2.fields;
                return i(
                  n2 === 'query'
                    ? {
                        timestamp: o2.timestamp,
                        query: s2?.query ?? o2.query,
                        params: s2?.params ?? o2.params,
                        duration: s2?.duration_ms ?? o2.duration,
                        target: o2.target,
                      }
                    : {
                        timestamp: o2.timestamp,
                        message: s2?.message ?? o2.message,
                        target: o2.target,
                      }
                );
              });
        }
        $connect() {
          try {
            return this._engine.start();
          } catch (n2) {
            throw ((n2.clientVersion = this._clientVersion), n2);
          }
        }
        async _runDisconnect() {
          await this._engine.stop(),
            delete this._connectionPromise,
            (this._engine = this.getEngine()),
            delete this._disconnectionPromise;
        }
        async $disconnect() {
          try {
            await this._engine.stop();
          } catch (n2) {
            throw ((n2.clientVersion = this._clientVersion), n2);
          } finally {
            ki();
          }
        }
        $executeRawInternal(n2, i, o2, s2) {
          return this._request({
            action: 'executeRaw',
            args: o2,
            transaction: n2,
            clientMethod: i,
            argsMapper: si(this._activeProvider, i),
            callsite: je(this._errorFormat),
            dataPath: [],
            middlewareArgsMapper: s2,
          });
        }
        $executeRaw(n2, ...i) {
          return this._createPrismaPromise((o2) => {
            if (n2.raw !== void 0 || n2.sql !== void 0) {
              let [s2, a] = $a(n2, i);
              return (
                oi(
                  this._activeProvider,
                  s2.text,
                  s2.values,
                  Array.isArray(n2)
                    ? 'prisma.$executeRaw`<SQL>`'
                    : 'prisma.$executeRaw(sql`<SQL>`)'
                ),
                this.$executeRawInternal(o2, '$executeRaw', s2, a)
              );
            }
            throw new te(
              "`$executeRaw` is a tag function, please use it like the following:\n```\nconst result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`\n```\n\nOr read our docs at https://www.prisma.io/docs/concepts/components/prisma-client/raw-database-access#executeraw\n",
              { clientVersion: this._clientVersion }
            );
          });
        }
        $executeRawUnsafe(n2, ...i) {
          return this._createPrismaPromise(
            (o2) => (
              oi(
                this._activeProvider,
                n2,
                i,
                'prisma.$executeRawUnsafe(<SQL>, [...values])'
              ),
              this.$executeRawInternal(o2, '$executeRawUnsafe', [n2, ...i])
            )
          );
        }
        $runCommandRaw(n2) {
          if (e2.activeProvider !== 'mongodb')
            throw new te(
              `The ${e2.activeProvider} provider does not support $runCommandRaw. Use the mongodb provider.`,
              { clientVersion: this._clientVersion }
            );
          return this._createPrismaPromise((i) =>
            this._request({
              args: n2,
              clientMethod: '$runCommandRaw',
              dataPath: [],
              action: 'runCommandRaw',
              argsMapper: la,
              callsite: je(this._errorFormat),
              transaction: i,
            })
          );
        }
        async $queryRawInternal(n2, i, o2, s2) {
          return this._request({
            action: 'queryRaw',
            args: o2,
            transaction: n2,
            clientMethod: i,
            argsMapper: si(this._activeProvider, i),
            callsite: je(this._errorFormat),
            dataPath: [],
            middlewareArgsMapper: s2,
          }).then(Fa);
        }
        $queryRaw(n2, ...i) {
          return this._createPrismaPromise((o2) => {
            if (n2.raw !== void 0 || n2.sql !== void 0)
              return this.$queryRawInternal(o2, '$queryRaw', ...$a(n2, i));
            throw new te(
              "`$queryRaw` is a tag function, please use it like the following:\n```\nconst result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`\n```\n\nOr read our docs at https://www.prisma.io/docs/concepts/components/prisma-client/raw-database-access#queryraw\n",
              { clientVersion: this._clientVersion }
            );
          });
        }
        $queryRawUnsafe(n2, ...i) {
          return this._createPrismaPromise((o2) =>
            this.$queryRawInternal(o2, '$queryRawUnsafe', [n2, ...i])
          );
        }
        _transactionWithArray({ promises: n2, options: i }) {
          let o2 = Wp.nextId(),
            s2 = ba(n2.length),
            a = n2.map((l2, u) => {
              if (l2?.[Symbol.toStringTag] !== 'PrismaPromise')
                throw new Error(
                  'All elements of the array need to be Prisma Client promises. Hint: Please make sure you are not awaiting the Prisma client calls you intended to pass in the $transaction function.'
                );
              let c2 = i?.isolationLevel,
                p = {
                  kind: 'batch',
                  id: o2,
                  index: u,
                  isolationLevel: c2,
                  lock: s2,
                };
              return l2.requestTransaction?.(p) ?? l2;
            });
          return La(a);
        }
        async _transactionWithCallback({ callback: n2, options: i }) {
          let o2 = { traceparent: this._tracingHelper.getTraceParent() },
            s2 = await this._engine.transaction('start', o2, i),
            a;
          try {
            let l2 = { kind: 'itx', ...s2 };
            (a = await n2(this._createItxClient(l2))),
              await this._engine.transaction('commit', o2, s2);
          } catch (l2) {
            throw (
              (await this._engine
                .transaction('rollback', o2, s2)
                .catch(() => {}),
              l2)
            );
          }
          return a;
        }
        _createItxClient(n2) {
          return Bt(
            xe(Lr(this), [
              re('_appliedParent', () =>
                this._appliedParent._createItxClient(n2)
              ),
              re('_createPrismaPromise', () => ai(n2)),
              re(Gp, () => n2.id),
              Ot(Pa),
            ])
          );
        }
        $transaction(n2, i) {
          let o2;
          typeof n2 == 'function'
            ? (o2 = () =>
                this._transactionWithCallback({ callback: n2, options: i }))
            : (o2 = () =>
                this._transactionWithArray({ promises: n2, options: i }));
          let s2 = {
            name: 'transaction',
            attributes: { method: '$transaction' },
          };
          return this._tracingHelper.runInChildSpan(s2, o2);
        }
        _request(n2) {
          n2.otelParentCtx = this._tracingHelper.getActiveContext();
          let i = n2.middlewareArgsMapper ?? Jp,
            o2 = {
              args: i.requestArgsToMiddlewareArgs(n2.args),
              dataPath: n2.dataPath,
              runInTransaction: Boolean(n2.transaction),
              action: n2.action,
              model: n2.model,
            },
            s2 = {
              middleware: {
                name: 'middleware',
                middleware: true,
                attributes: { method: '$use' },
                active: false,
              },
              operation: {
                name: 'operation',
                attributes: {
                  method: o2.action,
                  model: o2.model,
                  name: `${o2.model}.${o2.action}`,
                },
              },
            },
            a = -1,
            l2 = async (u) => {
              let c2 = this._middlewares.get(++a);
              if (c2)
                return this._tracingHelper.runInChildSpan(s2.middleware, (b) =>
                  c2(u, (E) => (b?.end(), l2(E)))
                );
              let { runInTransaction: p, args: d, ...g } = u,
                y = { ...n2, ...g };
              d && (y.args = i.middlewareArgsToRequestArgs(d)),
                n2.transaction !== void 0 &&
                  p === false &&
                  delete y.transaction;
              let f = await qs(this, y);
              return y.model
                ? Is({
                    result: f,
                    modelName: y.model,
                    args: y.args,
                    extensions: this._extensions,
                    runtimeDataModel: this._runtimeDataModel,
                  })
                : f;
            };
          return this._tracingHelper.runInChildSpan(s2.operation, () =>
            new qa.AsyncResource('prisma-client-request').runInAsyncScope(() =>
              l2(o2)
            )
          );
        }
        async _executeRequest({
          args: n2,
          clientMethod: i,
          dataPath: o2,
          callsite: s2,
          action: a,
          model: l2,
          argsMapper: u,
          transaction: c2,
          unpacker: p,
          otelParentCtx: d,
          customDataProxyFetch: g,
        }) {
          try {
            n2 = u ? u(n2) : n2;
            let y = { name: 'serialize' },
              f = this._tracingHelper.runInChildSpan(y, () =>
                oa({
                  modelName: l2,
                  runtimeDataModel: this._runtimeDataModel,
                  action: a,
                  args: n2,
                  clientMethod: i,
                  callsite: s2,
                  extensions: this._extensions,
                  errorFormat: this._errorFormat,
                  clientVersion: this._clientVersion,
                })
              );
            return (
              N.enabled('prisma:client') &&
                (Te('Prisma Client call:'),
                Te(`prisma.${i}(${fs(n2)})`),
                Te('Generated request:'),
                Te(
                  JSON.stringify(f, null, 2) +
                    `
`
                )),
              c2?.kind === 'batch' && (await c2.lock),
              this._fetcher.request({
                protocolQuery: f,
                modelName: l2,
                action: a,
                clientMethod: i,
                dataPath: o2,
                callsite: s2,
                args: n2,
                extensions: this._extensions,
                transaction: c2,
                unpacker: p,
                otelParentCtx: d,
                otelChildCtx: this._tracingHelper.getActiveContext(),
                customDataProxyFetch: g,
              })
            );
          } catch (y) {
            throw ((y.clientVersion = this._clientVersion), y);
          }
        }
        get $metrics() {
          if (!this._hasPreviewFlag('metrics'))
            throw new te(
              '`metrics` preview feature must be enabled in order to access metrics API',
              { clientVersion: this._clientVersion }
            );
          return this._metrics;
        }
        _hasPreviewFlag(n2) {
          return !!this._engineConfig.previewFeatures?.includes(n2);
        }
      }
      return t2;
    }
    function $a(e2, t2) {
      return Hp(e2) ? [new U(e2, t2), fa] : [e2, ga];
    }
    function Hp(e2) {
      return Array.isArray(e2) && Array.isArray(e2.raw);
    }
    var zp = /* @__PURE__ */ new Set([
      'toJSON',
      '$$typeof',
      'asymmetricMatch',
      Symbol.iterator,
      Symbol.toStringTag,
      Symbol.isConcatSpreadable,
      Symbol.toPrimitive,
    ]);
    function Va(e2) {
      return new Proxy(e2, {
        get(t2, r2) {
          if (r2 in t2) return t2[r2];
          if (!zp.has(r2))
            throw new TypeError(`Invalid enum value: ${String(r2)}`);
        },
      });
    }
    function Ua(e2) {
      Ct(e2, { conflictCheck: 'warn' });
    }
  },
});

// ../../node_modules/.prisma/client/index.js
var require_client = __commonJS({
  '../../node_modules/.prisma/client/index.js'(exports2) {
    'use strict';
    Object.defineProperty(exports2, '__esModule', { value: true });
    var {
      PrismaClientKnownRequestError: PrismaClientKnownRequestError2,
      PrismaClientUnknownRequestError: PrismaClientUnknownRequestError2,
      PrismaClientRustPanicError: PrismaClientRustPanicError2,
      PrismaClientInitializationError: PrismaClientInitializationError2,
      PrismaClientValidationError: PrismaClientValidationError2,
      NotFoundError: NotFoundError2,
      getPrismaClient: getPrismaClient2,
      sqltag: sqltag2,
      empty: empty2,
      join: join2,
      raw: raw2,
      Decimal: Decimal2,
      Debug: Debug2,
      objectEnumValues: objectEnumValues2,
      makeStrictEnum: makeStrictEnum2,
      Extensions: Extensions2,
      warnOnce: warnOnce2,
      defineDmmfProperty: defineDmmfProperty2,
      Public: Public2,
    } = require_library();
    var Prisma3 = {};
    exports2.Prisma = Prisma3;
    exports2.$Enums = {};
    Prisma3.prismaVersion = {
      client: '5.1.1',
      engine: '6a3747c37ff169c90047725a05a6ef02e32ac97e',
    };
    Prisma3.PrismaClientKnownRequestError = PrismaClientKnownRequestError2;
    Prisma3.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError2;
    Prisma3.PrismaClientRustPanicError = PrismaClientRustPanicError2;
    Prisma3.PrismaClientInitializationError = PrismaClientInitializationError2;
    Prisma3.PrismaClientValidationError = PrismaClientValidationError2;
    Prisma3.NotFoundError = NotFoundError2;
    Prisma3.Decimal = Decimal2;
    Prisma3.sql = sqltag2;
    Prisma3.empty = empty2;
    Prisma3.join = join2;
    Prisma3.raw = raw2;
    Prisma3.validator = Public2.validator;
    Prisma3.getExtensionContext = Extensions2.getExtensionContext;
    Prisma3.defineExtension = Extensions2.defineExtension;
    Prisma3.DbNull = objectEnumValues2.instances.DbNull;
    Prisma3.JsonNull = objectEnumValues2.instances.JsonNull;
    Prisma3.AnyNull = objectEnumValues2.instances.AnyNull;
    Prisma3.NullTypes = {
      DbNull: objectEnumValues2.classes.DbNull,
      JsonNull: objectEnumValues2.classes.JsonNull,
      AnyNull: objectEnumValues2.classes.AnyNull,
    };
    var path = require('path');
    exports2.Prisma.TransactionIsolationLevel = makeStrictEnum2({
      Serializable: 'Serializable',
    });
    exports2.Prisma.UserScalarFieldEnum = {
      id: 'id',
      email: 'email',
      emailVerified: 'emailVerified',
      firstName: 'firstName',
      lastName: 'lastName',
      role: 'role',
    };
    exports2.Prisma.SessionScalarFieldEnum = {
      id: 'id',
      user_id: 'user_id',
      active_expires: 'active_expires',
      idle_expires: 'idle_expires',
    };
    exports2.Prisma.KeyScalarFieldEnum = {
      id: 'id',
      hashed_password: 'hashed_password',
      user_id: 'user_id',
    };
    exports2.Prisma.EmailVerificationTokenScalarFieldEnum = {
      id: 'id',
      expires: 'expires',
      user_id: 'user_id',
    };
    exports2.Prisma.AuditLogScalarFieldEnum = {
      id: 'id',
      action: 'action',
      createdAt: 'createdAt',
      meta: 'meta',
      keyId: 'keyId',
    };
    exports2.Prisma.SortOrder = {
      asc: 'asc',
      desc: 'desc',
    };
    exports2.Prisma.NullableJsonNullValueInput = {
      DbNull: Prisma3.DbNull,
      JsonNull: Prisma3.JsonNull,
    };
    exports2.Prisma.QueryMode = {
      default: 'default',
      insensitive: 'insensitive',
    };
    exports2.Prisma.NullsOrder = {
      first: 'first',
      last: 'last',
    };
    exports2.Prisma.JsonNullValueFilter = {
      DbNull: Prisma3.DbNull,
      JsonNull: Prisma3.JsonNull,
      AnyNull: Prisma3.AnyNull,
    };
    exports2.HibiscusRole = exports2.$Enums.HibiscusRole = {
      ADMIN: 'ADMIN',
      SPONSOR: 'SPONSOR',
      HACKER: 'HACKER',
      VOLUNTEER: 'VOLUNTEER',
      JUDGE: 'JUDGE',
    };
    exports2.Prisma.ModelName = {
      User: 'User',
      Session: 'Session',
      Key: 'Key',
      EmailVerificationToken: 'EmailVerificationToken',
      AuditLog: 'AuditLog',
    };
    var config2 = {
      generator: {
        name: 'client',
        provider: {
          fromEnvVar: null,
          value: 'prisma-client-js',
        },
        output: {
          value: 'C:\\Users\\User\\hibiscus\\node_modules\\@prisma\\client',
          fromEnvVar: null,
        },
        config: {
          engineType: 'library',
        },
        binaryTargets: [
          {
            fromEnvVar: null,
            value: 'windows',
            native: true,
          },
        ],
        previewFeatures: [],
      },
      relativeEnvPaths: {
        rootEnvPath: '../../../.env',
        schemaEnvPath: '../../../apps/auth-svc/.env',
      },
      relativePath: '../../../apps/auth-svc/prisma',
      clientVersion: '5.1.1',
      engineVersion: '6a3747c37ff169c90047725a05a6ef02e32ac97e',
      datasourceNames: ['db'],
      activeProvider: 'cockroachdb',
      dataProxy: false,
    };
    var fs2 = require('fs');
    config2.dirname = __dirname;
    if (!fs2.existsSync(path.join(__dirname, 'schema.prisma'))) {
      const alternativePaths = [
        '../../node_modules/.prisma/client',
        '../node_modules/.prisma/client',
      ];
      const alternativePath =
        alternativePaths.find((altPath) => {
          return fs2.existsSync(
            path.join(process.cwd(), altPath, 'schema.prisma')
          );
        }) ?? alternativePaths[0];
      config2.dirname = path.join(process.cwd(), alternativePath);
      config2.isBundled = true;
    }
    config2.runtimeDataModel = JSON.parse(
      '{"models":{"User":{"dbName":null,"fields":[{"name":"id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":true,"type":"String","default":{"name":"uuid","args":[]},"isGenerated":false,"isUpdatedAt":false},{"name":"email","kind":"scalar","isList":false,"isRequired":true,"isUnique":true,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"emailVerified","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":true,"type":"Boolean","default":false,"isGenerated":false,"isUpdatedAt":false},{"name":"firstName","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"lastName","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"role","kind":"enum","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"HibiscusRole","isGenerated":false,"isUpdatedAt":false},{"name":"auth_session","kind":"object","isList":true,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"Session","relationName":"SessionToUser","relationFromFields":[],"relationToFields":[],"isGenerated":false,"isUpdatedAt":false},{"name":"auth_key","kind":"object","isList":true,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"Key","relationName":"KeyToUser","relationFromFields":[],"relationToFields":[],"isGenerated":false,"isUpdatedAt":false},{"name":"email_verification_token","kind":"object","isList":true,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"EmailVerificationToken","relationName":"EmailVerificationTokenToUser","relationFromFields":[],"relationToFields":[],"isGenerated":false,"isUpdatedAt":false}],"primaryKey":null,"uniqueFields":[],"uniqueIndexes":[],"isGenerated":false},"Session":{"dbName":null,"fields":[{"name":"id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"user_id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":true,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"active_expires","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"BigInt","isGenerated":false,"isUpdatedAt":false},{"name":"idle_expires","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"BigInt","isGenerated":false,"isUpdatedAt":false},{"name":"user","kind":"object","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"User","relationName":"SessionToUser","relationFromFields":["user_id"],"relationToFields":["id"],"relationOnDelete":"Cascade","isGenerated":false,"isUpdatedAt":false}],"primaryKey":null,"uniqueFields":[],"uniqueIndexes":[],"isGenerated":false},"Key":{"dbName":null,"fields":[{"name":"id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"hashed_password","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"user_id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":true,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"user","kind":"object","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"User","relationName":"KeyToUser","relationFromFields":["user_id"],"relationToFields":["id"],"relationOnDelete":"Cascade","isGenerated":false,"isUpdatedAt":false}],"primaryKey":null,"uniqueFields":[],"uniqueIndexes":[],"isGenerated":false},"EmailVerificationToken":{"dbName":null,"fields":[{"name":"id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"expires","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"BigInt","isGenerated":false,"isUpdatedAt":false},{"name":"user_id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":true,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"user","kind":"object","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"User","relationName":"EmailVerificationTokenToUser","relationFromFields":["user_id"],"relationToFields":["id"],"relationOnDelete":"Cascade","isGenerated":false,"isUpdatedAt":false}],"primaryKey":null,"uniqueFields":[],"uniqueIndexes":[],"isGenerated":false},"AuditLog":{"dbName":null,"fields":[{"name":"id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":true,"type":"String","default":{"name":"uuid","args":[]},"isGenerated":false,"isUpdatedAt":false},{"name":"action","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":true,"type":"DateTime","default":{"name":"now","args":[]},"isGenerated":false,"isUpdatedAt":false},{"name":"meta","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"Json","isGenerated":false,"isUpdatedAt":false},{"name":"keyId","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false}],"primaryKey":null,"uniqueFields":[],"uniqueIndexes":[],"isGenerated":false}},"enums":{"HibiscusRole":{"values":[{"name":"ADMIN","dbName":null},{"name":"SPONSOR","dbName":null},{"name":"HACKER","dbName":null},{"name":"VOLUNTEER","dbName":null},{"name":"JUDGE","dbName":null}],"dbName":null}},"types":{}}'
    );
    defineDmmfProperty2(exports2.Prisma, config2.runtimeDataModel);
    var { warnEnvConflicts: warnEnvConflicts2 } = require_library();
    warnEnvConflicts2({
      rootEnvPath:
        config2.relativeEnvPaths.rootEnvPath &&
        path.resolve(config2.dirname, config2.relativeEnvPaths.rootEnvPath),
      schemaEnvPath:
        config2.relativeEnvPaths.schemaEnvPath &&
        path.resolve(config2.dirname, config2.relativeEnvPaths.schemaEnvPath),
    });
    var PrismaClient2 = getPrismaClient2(config2);
    exports2.PrismaClient = PrismaClient2;
    Object.assign(exports2, Prisma3);
    path.join(__dirname, 'query_engine-windows.dll.node');
    path.join(
      process.cwd(),
      '../../node_modules/.prisma/client/query_engine-windows.dll.node'
    );
    path.join(__dirname, 'schema.prisma');
    path.join(process.cwd(), '../../node_modules/.prisma/client/schema.prisma');
  },
});

// ../../node_modules/@prisma/client/index.js
var require_client2 = __commonJS({
  '../../node_modules/@prisma/client/index.js'(exports2, module2) {
    'use strict';
    module2.exports = {
      ...require_client(),
    };
  },
});

// ../../node_modules/delayed-stream/lib/delayed_stream.js
var require_delayed_stream = __commonJS({
  '../../node_modules/delayed-stream/lib/delayed_stream.js'(exports2, module2) {
    'use strict';
    var Stream = require('stream').Stream;
    var util = require('util');
    module2.exports = DelayedStream;
    function DelayedStream() {
      this.source = null;
      this.dataSize = 0;
      this.maxDataSize = 1024 * 1024;
      this.pauseStream = true;
      this._maxDataSizeExceeded = false;
      this._released = false;
      this._bufferedEvents = [];
    }
    util.inherits(DelayedStream, Stream);
    DelayedStream.create = function (source, options) {
      var delayedStream = new this();
      options = options || {};
      for (var option2 in options) {
        delayedStream[option2] = options[option2];
      }
      delayedStream.source = source;
      var realEmit = source.emit;
      source.emit = function () {
        delayedStream._handleEmit(arguments);
        return realEmit.apply(source, arguments);
      };
      source.on('error', function () {});
      if (delayedStream.pauseStream) {
        source.pause();
      }
      return delayedStream;
    };
    Object.defineProperty(DelayedStream.prototype, 'readable', {
      configurable: true,
      enumerable: true,
      get: function () {
        return this.source.readable;
      },
    });
    DelayedStream.prototype.setEncoding = function () {
      return this.source.setEncoding.apply(this.source, arguments);
    };
    DelayedStream.prototype.resume = function () {
      if (!this._released) {
        this.release();
      }
      this.source.resume();
    };
    DelayedStream.prototype.pause = function () {
      this.source.pause();
    };
    DelayedStream.prototype.release = function () {
      this._released = true;
      this._bufferedEvents.forEach(
        function (args) {
          this.emit.apply(this, args);
        }.bind(this)
      );
      this._bufferedEvents = [];
    };
    DelayedStream.prototype.pipe = function () {
      var r2 = Stream.prototype.pipe.apply(this, arguments);
      this.resume();
      return r2;
    };
    DelayedStream.prototype._handleEmit = function (args) {
      if (this._released) {
        this.emit.apply(this, args);
        return;
      }
      if (args[0] === 'data') {
        this.dataSize += args[1].length;
        this._checkIfMaxDataSizeExceeded();
      }
      this._bufferedEvents.push(args);
    };
    DelayedStream.prototype._checkIfMaxDataSizeExceeded = function () {
      if (this._maxDataSizeExceeded) {
        return;
      }
      if (this.dataSize <= this.maxDataSize) {
        return;
      }
      this._maxDataSizeExceeded = true;
      var message =
        'DelayedStream#maxDataSize of ' + this.maxDataSize + ' bytes exceeded.';
      this.emit('error', new Error(message));
    };
  },
});

// ../../node_modules/combined-stream/lib/combined_stream.js
var require_combined_stream = __commonJS({
  '../../node_modules/combined-stream/lib/combined_stream.js'(
    exports2,
    module2
  ) {
    'use strict';
    var util = require('util');
    var Stream = require('stream').Stream;
    var DelayedStream = require_delayed_stream();
    module2.exports = CombinedStream;
    function CombinedStream() {
      this.writable = false;
      this.readable = true;
      this.dataSize = 0;
      this.maxDataSize = 2 * 1024 * 1024;
      this.pauseStreams = true;
      this._released = false;
      this._streams = [];
      this._currentStream = null;
      this._insideLoop = false;
      this._pendingNext = false;
    }
    util.inherits(CombinedStream, Stream);
    CombinedStream.create = function (options) {
      var combinedStream = new this();
      options = options || {};
      for (var option2 in options) {
        combinedStream[option2] = options[option2];
      }
      return combinedStream;
    };
    CombinedStream.isStreamLike = function (stream) {
      return (
        typeof stream !== 'function' &&
        typeof stream !== 'string' &&
        typeof stream !== 'boolean' &&
        typeof stream !== 'number' &&
        !Buffer.isBuffer(stream)
      );
    };
    CombinedStream.prototype.append = function (stream) {
      var isStreamLike = CombinedStream.isStreamLike(stream);
      if (isStreamLike) {
        if (!(stream instanceof DelayedStream)) {
          var newStream = DelayedStream.create(stream, {
            maxDataSize: Infinity,
            pauseStream: this.pauseStreams,
          });
          stream.on('data', this._checkDataSize.bind(this));
          stream = newStream;
        }
        this._handleErrors(stream);
        if (this.pauseStreams) {
          stream.pause();
        }
      }
      this._streams.push(stream);
      return this;
    };
    CombinedStream.prototype.pipe = function (dest, options) {
      Stream.prototype.pipe.call(this, dest, options);
      this.resume();
      return dest;
    };
    CombinedStream.prototype._getNext = function () {
      this._currentStream = null;
      if (this._insideLoop) {
        this._pendingNext = true;
        return;
      }
      this._insideLoop = true;
      try {
        do {
          this._pendingNext = false;
          this._realGetNext();
        } while (this._pendingNext);
      } finally {
        this._insideLoop = false;
      }
    };
    CombinedStream.prototype._realGetNext = function () {
      var stream = this._streams.shift();
      if (typeof stream == 'undefined') {
        this.end();
        return;
      }
      if (typeof stream !== 'function') {
        this._pipeNext(stream);
        return;
      }
      var getStream = stream;
      getStream(
        function (stream2) {
          var isStreamLike = CombinedStream.isStreamLike(stream2);
          if (isStreamLike) {
            stream2.on('data', this._checkDataSize.bind(this));
            this._handleErrors(stream2);
          }
          this._pipeNext(stream2);
        }.bind(this)
      );
    };
    CombinedStream.prototype._pipeNext = function (stream) {
      this._currentStream = stream;
      var isStreamLike = CombinedStream.isStreamLike(stream);
      if (isStreamLike) {
        stream.on('end', this._getNext.bind(this));
        stream.pipe(this, { end: false });
        return;
      }
      var value = stream;
      this.write(value);
      this._getNext();
    };
    CombinedStream.prototype._handleErrors = function (stream) {
      var self2 = this;
      stream.on('error', function (err) {
        self2._emitError(err);
      });
    };
    CombinedStream.prototype.write = function (data) {
      this.emit('data', data);
    };
    CombinedStream.prototype.pause = function () {
      if (!this.pauseStreams) {
        return;
      }
      if (
        this.pauseStreams &&
        this._currentStream &&
        typeof this._currentStream.pause == 'function'
      )
        this._currentStream.pause();
      this.emit('pause');
    };
    CombinedStream.prototype.resume = function () {
      if (!this._released) {
        this._released = true;
        this.writable = true;
        this._getNext();
      }
      if (
        this.pauseStreams &&
        this._currentStream &&
        typeof this._currentStream.resume == 'function'
      )
        this._currentStream.resume();
      this.emit('resume');
    };
    CombinedStream.prototype.end = function () {
      this._reset();
      this.emit('end');
    };
    CombinedStream.prototype.destroy = function () {
      this._reset();
      this.emit('close');
    };
    CombinedStream.prototype._reset = function () {
      this.writable = false;
      this._streams = [];
      this._currentStream = null;
    };
    CombinedStream.prototype._checkDataSize = function () {
      this._updateDataSize();
      if (this.dataSize <= this.maxDataSize) {
        return;
      }
      var message =
        'DelayedStream#maxDataSize of ' + this.maxDataSize + ' bytes exceeded.';
      this._emitError(new Error(message));
    };
    CombinedStream.prototype._updateDataSize = function () {
      this.dataSize = 0;
      var self2 = this;
      this._streams.forEach(function (stream) {
        if (!stream.dataSize) {
          return;
        }
        self2.dataSize += stream.dataSize;
      });
      if (this._currentStream && this._currentStream.dataSize) {
        this.dataSize += this._currentStream.dataSize;
      }
    };
    CombinedStream.prototype._emitError = function (err) {
      this._reset();
      this.emit('error', err);
    };
  },
});

// ../../node_modules/asynckit/lib/defer.js
var require_defer = __commonJS({
  '../../node_modules/asynckit/lib/defer.js'(exports2, module2) {
    'use strict';
    module2.exports = defer;
    function defer(fn) {
      var nextTick2 =
        typeof setImmediate == 'function'
          ? setImmediate
          : typeof process == 'object' && typeof process.nextTick == 'function'
          ? process.nextTick
          : null;
      if (nextTick2) {
        nextTick2(fn);
      } else {
        setTimeout(fn, 0);
      }
    }
  },
});

// ../../node_modules/asynckit/lib/async.js
var require_async = __commonJS({
  '../../node_modules/asynckit/lib/async.js'(exports2, module2) {
    'use strict';
    var defer = require_defer();
    module2.exports = async;
    function async(callback) {
      var isAsync = false;
      defer(function () {
        isAsync = true;
      });
      return function async_callback(err, result) {
        if (isAsync) {
          callback(err, result);
        } else {
          defer(function nextTick_callback() {
            callback(err, result);
          });
        }
      };
    }
  },
});

// ../../node_modules/asynckit/lib/abort.js
var require_abort = __commonJS({
  '../../node_modules/asynckit/lib/abort.js'(exports2, module2) {
    'use strict';
    module2.exports = abort;
    function abort(state) {
      Object.keys(state.jobs).forEach(clean.bind(state));
      state.jobs = {};
    }
    function clean(key) {
      if (typeof this.jobs[key] == 'function') {
        this.jobs[key]();
      }
    }
  },
});

// ../../node_modules/asynckit/lib/iterate.js
var require_iterate = __commonJS({
  '../../node_modules/asynckit/lib/iterate.js'(exports2, module2) {
    'use strict';
    var async = require_async();
    var abort = require_abort();
    module2.exports = iterate;
    function iterate(list, iterator, state, callback) {
      var key = state['keyedList']
        ? state['keyedList'][state.index]
        : state.index;
      state.jobs[key] = runJob(
        iterator,
        key,
        list[key],
        function (error, output) {
          if (!(key in state.jobs)) {
            return;
          }
          delete state.jobs[key];
          if (error) {
            abort(state);
          } else {
            state.results[key] = output;
          }
          callback(error, state.results);
        }
      );
    }
    function runJob(iterator, key, item, callback) {
      var aborter;
      if (iterator.length == 2) {
        aborter = iterator(item, async(callback));
      } else {
        aborter = iterator(item, key, async(callback));
      }
      return aborter;
    }
  },
});

// ../../node_modules/asynckit/lib/state.js
var require_state = __commonJS({
  '../../node_modules/asynckit/lib/state.js'(exports2, module2) {
    'use strict';
    module2.exports = state;
    function state(list, sortMethod) {
      var isNamedList = !Array.isArray(list),
        initState = {
          index: 0,
          keyedList: isNamedList || sortMethod ? Object.keys(list) : null,
          jobs: {},
          results: isNamedList ? {} : [],
          size: isNamedList ? Object.keys(list).length : list.length,
        };
      if (sortMethod) {
        initState.keyedList.sort(
          isNamedList
            ? sortMethod
            : function (a, b) {
                return sortMethod(list[a], list[b]);
              }
        );
      }
      return initState;
    }
  },
});

// ../../node_modules/asynckit/lib/terminator.js
var require_terminator = __commonJS({
  '../../node_modules/asynckit/lib/terminator.js'(exports2, module2) {
    'use strict';
    var abort = require_abort();
    var async = require_async();
    module2.exports = terminator;
    function terminator(callback) {
      if (!Object.keys(this.jobs).length) {
        return;
      }
      this.index = this.size;
      abort(this);
      async(callback)(null, this.results);
    }
  },
});

// ../../node_modules/asynckit/parallel.js
var require_parallel = __commonJS({
  '../../node_modules/asynckit/parallel.js'(exports2, module2) {
    'use strict';
    var iterate = require_iterate();
    var initState = require_state();
    var terminator = require_terminator();
    module2.exports = parallel;
    function parallel(list, iterator, callback) {
      var state = initState(list);
      while (state.index < (state['keyedList'] || list).length) {
        iterate(list, iterator, state, function (error, result) {
          if (error) {
            callback(error, result);
            return;
          }
          if (Object.keys(state.jobs).length === 0) {
            callback(null, state.results);
            return;
          }
        });
        state.index++;
      }
      return terminator.bind(state, callback);
    }
  },
});

// ../../node_modules/asynckit/serialOrdered.js
var require_serialOrdered = __commonJS({
  '../../node_modules/asynckit/serialOrdered.js'(exports2, module2) {
    'use strict';
    var iterate = require_iterate();
    var initState = require_state();
    var terminator = require_terminator();
    module2.exports = serialOrdered;
    module2.exports.ascending = ascending;
    module2.exports.descending = descending;
    function serialOrdered(list, iterator, sortMethod, callback) {
      var state = initState(list, sortMethod);
      iterate(list, iterator, state, function iteratorHandler(error, result) {
        if (error) {
          callback(error, result);
          return;
        }
        state.index++;
        if (state.index < (state['keyedList'] || list).length) {
          iterate(list, iterator, state, iteratorHandler);
          return;
        }
        callback(null, state.results);
      });
      return terminator.bind(state, callback);
    }
    function ascending(a, b) {
      return a < b ? -1 : a > b ? 1 : 0;
    }
    function descending(a, b) {
      return -1 * ascending(a, b);
    }
  },
});

// ../../node_modules/asynckit/serial.js
var require_serial = __commonJS({
  '../../node_modules/asynckit/serial.js'(exports2, module2) {
    'use strict';
    var serialOrdered = require_serialOrdered();
    module2.exports = serial;
    function serial(list, iterator, callback) {
      return serialOrdered(list, iterator, null, callback);
    }
  },
});

// ../../node_modules/asynckit/index.js
var require_asynckit = __commonJS({
  '../../node_modules/asynckit/index.js'(exports2, module2) {
    'use strict';
    module2.exports = {
      parallel: require_parallel(),
      serial: require_serial(),
      serialOrdered: require_serialOrdered(),
    };
  },
});

// ../../node_modules/form-data/lib/populate.js
var require_populate = __commonJS({
  '../../node_modules/form-data/lib/populate.js'(exports2, module2) {
    'use strict';
    module2.exports = function (dst, src) {
      Object.keys(src).forEach(function (prop) {
        dst[prop] = dst[prop] || src[prop];
      });
      return dst;
    };
  },
});

// ../../node_modules/form-data/lib/form_data.js
var require_form_data = __commonJS({
  '../../node_modules/form-data/lib/form_data.js'(exports2, module2) {
    'use strict';
    var CombinedStream = require_combined_stream();
    var util = require('util');
    var path = require('path');
    var http = require('http');
    var https = require('https');
    var parseUrl = require('url').parse;
    var fs2 = require('fs');
    var Stream = require('stream').Stream;
    var mime = require_mime_types();
    var asynckit = require_asynckit();
    var populate = require_populate();
    module2.exports = FormData2;
    util.inherits(FormData2, CombinedStream);
    function FormData2(options) {
      if (!(this instanceof FormData2)) {
        return new FormData2(options);
      }
      this._overheadLength = 0;
      this._valueLength = 0;
      this._valuesToMeasure = [];
      CombinedStream.call(this);
      options = options || {};
      for (var option2 in options) {
        this[option2] = options[option2];
      }
    }
    FormData2.LINE_BREAK = '\r\n';
    FormData2.DEFAULT_CONTENT_TYPE = 'application/octet-stream';
    FormData2.prototype.append = function (field, value, options) {
      options = options || {};
      if (typeof options == 'string') {
        options = { filename: options };
      }
      var append = CombinedStream.prototype.append.bind(this);
      if (typeof value == 'number') {
        value = '' + value;
      }
      if (util.isArray(value)) {
        this._error(new Error('Arrays are not supported.'));
        return;
      }
      var header = this._multiPartHeader(field, value, options);
      var footer = this._multiPartFooter();
      append(header);
      append(value);
      append(footer);
      this._trackLength(header, value, options);
    };
    FormData2.prototype._trackLength = function (header, value, options) {
      var valueLength = 0;
      if (options.knownLength != null) {
        valueLength += +options.knownLength;
      } else if (Buffer.isBuffer(value)) {
        valueLength = value.length;
      } else if (typeof value === 'string') {
        valueLength = Buffer.byteLength(value);
      }
      this._valueLength += valueLength;
      this._overheadLength +=
        Buffer.byteLength(header) + FormData2.LINE_BREAK.length;
      if (
        !value ||
        (!value.path &&
          !(value.readable && value.hasOwnProperty('httpVersion')) &&
          !(value instanceof Stream))
      ) {
        return;
      }
      if (!options.knownLength) {
        this._valuesToMeasure.push(value);
      }
    };
    FormData2.prototype._lengthRetriever = function (value, callback) {
      if (value.hasOwnProperty('fd')) {
        if (
          value.end != void 0 &&
          value.end != Infinity &&
          value.start != void 0
        ) {
          callback(null, value.end + 1 - (value.start ? value.start : 0));
        } else {
          fs2.stat(value.path, function (err, stat) {
            var fileSize;
            if (err) {
              callback(err);
              return;
            }
            fileSize = stat.size - (value.start ? value.start : 0);
            callback(null, fileSize);
          });
        }
      } else if (value.hasOwnProperty('httpVersion')) {
        callback(null, +value.headers['content-length']);
      } else if (value.hasOwnProperty('httpModule')) {
        value.on('response', function (response) {
          value.pause();
          callback(null, +response.headers['content-length']);
        });
        value.resume();
      } else {
        callback('Unknown stream');
      }
    };
    FormData2.prototype._multiPartHeader = function (field, value, options) {
      if (typeof options.header == 'string') {
        return options.header;
      }
      var contentDisposition = this._getContentDisposition(value, options);
      var contentType = this._getContentType(value, options);
      var contents = '';
      var headers = {
        // add custom disposition as third element or keep it two elements if not
        'Content-Disposition': ['form-data', 'name="' + field + '"'].concat(
          contentDisposition || []
        ),
        // if no content type. allow it to be empty array
        'Content-Type': [].concat(contentType || []),
      };
      if (typeof options.header == 'object') {
        populate(headers, options.header);
      }
      var header;
      for (var prop in headers) {
        if (!headers.hasOwnProperty(prop)) continue;
        header = headers[prop];
        if (header == null) {
          continue;
        }
        if (!Array.isArray(header)) {
          header = [header];
        }
        if (header.length) {
          contents += prop + ': ' + header.join('; ') + FormData2.LINE_BREAK;
        }
      }
      return (
        '--' +
        this.getBoundary() +
        FormData2.LINE_BREAK +
        contents +
        FormData2.LINE_BREAK
      );
    };
    FormData2.prototype._getContentDisposition = function (value, options) {
      var filename, contentDisposition;
      if (typeof options.filepath === 'string') {
        filename = path.normalize(options.filepath).replace(/\\/g, '/');
      } else if (options.filename || value.name || value.path) {
        filename = path.basename(options.filename || value.name || value.path);
      } else if (value.readable && value.hasOwnProperty('httpVersion')) {
        filename = path.basename(value.client._httpMessage.path || '');
      }
      if (filename) {
        contentDisposition = 'filename="' + filename + '"';
      }
      return contentDisposition;
    };
    FormData2.prototype._getContentType = function (value, options) {
      var contentType = options.contentType;
      if (!contentType && value.name) {
        contentType = mime.lookup(value.name);
      }
      if (!contentType && value.path) {
        contentType = mime.lookup(value.path);
      }
      if (
        !contentType &&
        value.readable &&
        value.hasOwnProperty('httpVersion')
      ) {
        contentType = value.headers['content-type'];
      }
      if (!contentType && (options.filepath || options.filename)) {
        contentType = mime.lookup(options.filepath || options.filename);
      }
      if (!contentType && typeof value == 'object') {
        contentType = FormData2.DEFAULT_CONTENT_TYPE;
      }
      return contentType;
    };
    FormData2.prototype._multiPartFooter = function () {
      return function (next) {
        var footer = FormData2.LINE_BREAK;
        var lastPart = this._streams.length === 0;
        if (lastPart) {
          footer += this._lastBoundary();
        }
        next(footer);
      }.bind(this);
    };
    FormData2.prototype._lastBoundary = function () {
      return '--' + this.getBoundary() + '--' + FormData2.LINE_BREAK;
    };
    FormData2.prototype.getHeaders = function (userHeaders) {
      var header;
      var formHeaders = {
        'content-type': 'multipart/form-data; boundary=' + this.getBoundary(),
      };
      for (header in userHeaders) {
        if (userHeaders.hasOwnProperty(header)) {
          formHeaders[header.toLowerCase()] = userHeaders[header];
        }
      }
      return formHeaders;
    };
    FormData2.prototype.setBoundary = function (boundary) {
      this._boundary = boundary;
    };
    FormData2.prototype.getBoundary = function () {
      if (!this._boundary) {
        this._generateBoundary();
      }
      return this._boundary;
    };
    FormData2.prototype.getBuffer = function () {
      var dataBuffer = new Buffer.alloc(0);
      var boundary = this.getBoundary();
      for (var i = 0, len = this._streams.length; i < len; i++) {
        if (typeof this._streams[i] !== 'function') {
          if (Buffer.isBuffer(this._streams[i])) {
            dataBuffer = Buffer.concat([dataBuffer, this._streams[i]]);
          } else {
            dataBuffer = Buffer.concat([
              dataBuffer,
              Buffer.from(this._streams[i]),
            ]);
          }
          if (
            typeof this._streams[i] !== 'string' ||
            this._streams[i].substring(2, boundary.length + 2) !== boundary
          ) {
            dataBuffer = Buffer.concat([
              dataBuffer,
              Buffer.from(FormData2.LINE_BREAK),
            ]);
          }
        }
      }
      return Buffer.concat([dataBuffer, Buffer.from(this._lastBoundary())]);
    };
    FormData2.prototype._generateBoundary = function () {
      var boundary = '--------------------------';
      for (var i = 0; i < 24; i++) {
        boundary += Math.floor(Math.random() * 10).toString(16);
      }
      this._boundary = boundary;
    };
    FormData2.prototype.getLengthSync = function () {
      var knownLength = this._overheadLength + this._valueLength;
      if (this._streams.length) {
        knownLength += this._lastBoundary().length;
      }
      if (!this.hasKnownLength()) {
        this._error(
          new Error('Cannot calculate proper length in synchronous way.')
        );
      }
      return knownLength;
    };
    FormData2.prototype.hasKnownLength = function () {
      var hasKnownLength = true;
      if (this._valuesToMeasure.length) {
        hasKnownLength = false;
      }
      return hasKnownLength;
    };
    FormData2.prototype.getLength = function (cb) {
      var knownLength = this._overheadLength + this._valueLength;
      if (this._streams.length) {
        knownLength += this._lastBoundary().length;
      }
      if (!this._valuesToMeasure.length) {
        process.nextTick(cb.bind(this, null, knownLength));
        return;
      }
      asynckit.parallel(
        this._valuesToMeasure,
        this._lengthRetriever,
        function (err, values) {
          if (err) {
            cb(err);
            return;
          }
          values.forEach(function (length) {
            knownLength += length;
          });
          cb(null, knownLength);
        }
      );
    };
    FormData2.prototype.submit = function (params, cb) {
      var request2,
        options,
        defaults = { method: 'post' };
      if (typeof params == 'string') {
        params = parseUrl(params);
        options = populate(
          {
            port: params.port,
            path: params.pathname,
            host: params.hostname,
            protocol: params.protocol,
          },
          defaults
        );
      } else {
        options = populate(params, defaults);
        if (!options.port) {
          options.port = options.protocol == 'https:' ? 443 : 80;
        }
      }
      options.headers = this.getHeaders(params.headers);
      if (options.protocol == 'https:') {
        request2 = https.request(options);
      } else {
        request2 = http.request(options);
      }
      this.getLength(
        function (err, length) {
          if (err && err !== 'Unknown stream') {
            this._error(err);
            return;
          }
          if (length) {
            request2.setHeader('Content-Length', length);
          }
          this.pipe(request2);
          if (cb) {
            var onResponse;
            var callback = function (error, responce) {
              request2.removeListener('error', callback);
              request2.removeListener('response', onResponse);
              return cb.call(this, error, responce);
            };
            onResponse = callback.bind(this, null);
            request2.on('error', callback);
            request2.on('response', onResponse);
          }
        }.bind(this)
      );
      return request2;
    };
    FormData2.prototype._error = function (err) {
      if (!this.error) {
        this.error = err;
        this.pause();
        this.emit('error', err);
      }
    };
    FormData2.prototype.toString = function () {
      return '[object FormData]';
    };
  },
});

// ../../node_modules/proxy-from-env/index.js
var require_proxy_from_env = __commonJS({
  '../../node_modules/proxy-from-env/index.js'(exports2) {
    'use strict';
    var parseUrl = require('url').parse;
    var DEFAULT_PORTS = {
      ftp: 21,
      gopher: 70,
      http: 80,
      https: 443,
      ws: 80,
      wss: 443,
    };
    var stringEndsWith =
      String.prototype.endsWith ||
      function (s2) {
        return (
          s2.length <= this.length &&
          this.indexOf(s2, this.length - s2.length) !== -1
        );
      };
    function getProxyForUrl(url) {
      var parsedUrl = typeof url === 'string' ? parseUrl(url) : url || {};
      var proto = parsedUrl.protocol;
      var hostname = parsedUrl.host;
      var port = parsedUrl.port;
      if (
        typeof hostname !== 'string' ||
        !hostname ||
        typeof proto !== 'string'
      ) {
        return '';
      }
      proto = proto.split(':', 1)[0];
      hostname = hostname.replace(/:\d*$/, '');
      port = parseInt(port) || DEFAULT_PORTS[proto] || 0;
      if (!shouldProxy(hostname, port)) {
        return '';
      }
      var proxy =
        getEnv('npm_config_' + proto + '_proxy') ||
        getEnv(proto + '_proxy') ||
        getEnv('npm_config_proxy') ||
        getEnv('all_proxy');
      if (proxy && proxy.indexOf('://') === -1) {
        proxy = proto + '://' + proxy;
      }
      return proxy;
    }
    function shouldProxy(hostname, port) {
      var NO_PROXY = (
        getEnv('npm_config_no_proxy') || getEnv('no_proxy')
      ).toLowerCase();
      if (!NO_PROXY) {
        return true;
      }
      if (NO_PROXY === '*') {
        return false;
      }
      return NO_PROXY.split(/[,\s]/).every(function (proxy) {
        if (!proxy) {
          return true;
        }
        var parsedProxy = proxy.match(/^(.+):(\d+)$/);
        var parsedProxyHostname = parsedProxy ? parsedProxy[1] : proxy;
        var parsedProxyPort = parsedProxy ? parseInt(parsedProxy[2]) : 0;
        if (parsedProxyPort && parsedProxyPort !== port) {
          return true;
        }
        if (!/^[.*]/.test(parsedProxyHostname)) {
          return hostname !== parsedProxyHostname;
        }
        if (parsedProxyHostname.charAt(0) === '*') {
          parsedProxyHostname = parsedProxyHostname.slice(1);
        }
        return !stringEndsWith.call(hostname, parsedProxyHostname);
      });
    }
    function getEnv(key) {
      return (
        process.env[key.toLowerCase()] || process.env[key.toUpperCase()] || ''
      );
    }
    exports2.getProxyForUrl = getProxyForUrl;
  },
});

// ../../node_modules/debug/node_modules/ms/index.js
var require_ms6 = __commonJS({
  '../../node_modules/debug/node_modules/ms/index.js'(exports2, module2) {
    'use strict';
    var s2 = 1e3;
    var m2 = s2 * 60;
    var h2 = m2 * 60;
    var d = h2 * 24;
    var w2 = d * 7;
    var y = d * 365.25;
    module2.exports = function (val, options) {
      options = options || {};
      var type = typeof val;
      if (type === 'string' && val.length > 0) {
        return parse(val);
      } else if (type === 'number' && isFinite(val)) {
        return options.long ? fmtLong(val) : fmtShort(val);
      }
      throw new Error(
        'val is not a non-empty string or a valid number. val=' +
          JSON.stringify(val)
      );
    };
    function parse(str) {
      str = String(str);
      if (str.length > 100) {
        return;
      }
      var match =
        /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(
          str
        );
      if (!match) {
        return;
      }
      var n2 = parseFloat(match[1]);
      var type = (match[2] || 'ms').toLowerCase();
      switch (type) {
        case 'years':
        case 'year':
        case 'yrs':
        case 'yr':
        case 'y':
          return n2 * y;
        case 'weeks':
        case 'week':
        case 'w':
          return n2 * w2;
        case 'days':
        case 'day':
        case 'd':
          return n2 * d;
        case 'hours':
        case 'hour':
        case 'hrs':
        case 'hr':
        case 'h':
          return n2 * h2;
        case 'minutes':
        case 'minute':
        case 'mins':
        case 'min':
        case 'm':
          return n2 * m2;
        case 'seconds':
        case 'second':
        case 'secs':
        case 'sec':
        case 's':
          return n2 * s2;
        case 'milliseconds':
        case 'millisecond':
        case 'msecs':
        case 'msec':
        case 'ms':
          return n2;
        default:
          return void 0;
      }
    }
    function fmtShort(ms2) {
      var msAbs = Math.abs(ms2);
      if (msAbs >= d) {
        return Math.round(ms2 / d) + 'd';
      }
      if (msAbs >= h2) {
        return Math.round(ms2 / h2) + 'h';
      }
      if (msAbs >= m2) {
        return Math.round(ms2 / m2) + 'm';
      }
      if (msAbs >= s2) {
        return Math.round(ms2 / s2) + 's';
      }
      return ms2 + 'ms';
    }
    function fmtLong(ms2) {
      var msAbs = Math.abs(ms2);
      if (msAbs >= d) {
        return plural(ms2, msAbs, d, 'day');
      }
      if (msAbs >= h2) {
        return plural(ms2, msAbs, h2, 'hour');
      }
      if (msAbs >= m2) {
        return plural(ms2, msAbs, m2, 'minute');
      }
      if (msAbs >= s2) {
        return plural(ms2, msAbs, s2, 'second');
      }
      return ms2 + ' ms';
    }
    function plural(ms2, msAbs, n2, name) {
      var isPlural = msAbs >= n2 * 1.5;
      return Math.round(ms2 / n2) + ' ' + name + (isPlural ? 's' : '');
    }
  },
});

// ../../node_modules/debug/src/common.js
var require_common = __commonJS({
  '../../node_modules/debug/src/common.js'(exports2, module2) {
    'use strict';
    function setup(env2) {
      createDebug.debug = createDebug;
      createDebug.default = createDebug;
      createDebug.coerce = coerce;
      createDebug.disable = disable;
      createDebug.enable = enable;
      createDebug.enabled = enabled;
      createDebug.humanize = require_ms6();
      createDebug.destroy = destroy;
      Object.keys(env2).forEach((key) => {
        createDebug[key] = env2[key];
      });
      createDebug.names = [];
      createDebug.skips = [];
      createDebug.formatters = {};
      function selectColor(namespace) {
        let hash = 0;
        for (let i = 0; i < namespace.length; i++) {
          hash = (hash << 5) - hash + namespace.charCodeAt(i);
          hash |= 0;
        }
        return createDebug.colors[Math.abs(hash) % createDebug.colors.length];
      }
      createDebug.selectColor = selectColor;
      function createDebug(namespace) {
        let prevTime;
        let enableOverride = null;
        let namespacesCache;
        let enabledCache;
        function debug2(...args) {
          if (!debug2.enabled) {
            return;
          }
          const self2 = debug2;
          const curr = Number(/* @__PURE__ */ new Date());
          const ms2 = curr - (prevTime || curr);
          self2.diff = ms2;
          self2.prev = prevTime;
          self2.curr = curr;
          prevTime = curr;
          args[0] = createDebug.coerce(args[0]);
          if (typeof args[0] !== 'string') {
            args.unshift('%O');
          }
          let index = 0;
          args[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format2) => {
            if (match === '%%') {
              return '%';
            }
            index++;
            const formatter = createDebug.formatters[format2];
            if (typeof formatter === 'function') {
              const val = args[index];
              match = formatter.call(self2, val);
              args.splice(index, 1);
              index--;
            }
            return match;
          });
          createDebug.formatArgs.call(self2, args);
          const logFn = self2.log || createDebug.log;
          logFn.apply(self2, args);
        }
        debug2.namespace = namespace;
        debug2.useColors = createDebug.useColors();
        debug2.color = createDebug.selectColor(namespace);
        debug2.extend = extend;
        debug2.destroy = createDebug.destroy;
        Object.defineProperty(debug2, 'enabled', {
          enumerable: true,
          configurable: false,
          get: () => {
            if (enableOverride !== null) {
              return enableOverride;
            }
            if (namespacesCache !== createDebug.namespaces) {
              namespacesCache = createDebug.namespaces;
              enabledCache = createDebug.enabled(namespace);
            }
            return enabledCache;
          },
          set: (v) => {
            enableOverride = v;
          },
        });
        if (typeof createDebug.init === 'function') {
          createDebug.init(debug2);
        }
        return debug2;
      }
      function extend(namespace, delimiter) {
        const newDebug = createDebug(
          this.namespace +
            (typeof delimiter === 'undefined' ? ':' : delimiter) +
            namespace
        );
        newDebug.log = this.log;
        return newDebug;
      }
      function enable(namespaces) {
        createDebug.save(namespaces);
        createDebug.namespaces = namespaces;
        createDebug.names = [];
        createDebug.skips = [];
        let i;
        const split = (typeof namespaces === 'string' ? namespaces : '').split(
          /[\s,]+/
        );
        const len = split.length;
        for (i = 0; i < len; i++) {
          if (!split[i]) {
            continue;
          }
          namespaces = split[i].replace(/\*/g, '.*?');
          if (namespaces[0] === '-') {
            createDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));
          } else {
            createDebug.names.push(new RegExp('^' + namespaces + '$'));
          }
        }
      }
      function disable() {
        const namespaces = [
          ...createDebug.names.map(toNamespace),
          ...createDebug.skips
            .map(toNamespace)
            .map((namespace) => '-' + namespace),
        ].join(',');
        createDebug.enable('');
        return namespaces;
      }
      function enabled(name) {
        if (name[name.length - 1] === '*') {
          return true;
        }
        let i;
        let len;
        for (i = 0, len = createDebug.skips.length; i < len; i++) {
          if (createDebug.skips[i].test(name)) {
            return false;
          }
        }
        for (i = 0, len = createDebug.names.length; i < len; i++) {
          if (createDebug.names[i].test(name)) {
            return true;
          }
        }
        return false;
      }
      function toNamespace(regexp) {
        return regexp
          .toString()
          .substring(2, regexp.toString().length - 2)
          .replace(/\.\*\?$/, '*');
      }
      function coerce(val) {
        if (val instanceof Error) {
          return val.stack || val.message;
        }
        return val;
      }
      function destroy() {
        console.warn(
          'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'
        );
      }
      createDebug.enable(createDebug.load());
      return createDebug;
    }
    module2.exports = setup;
  },
});

// ../../node_modules/debug/src/browser.js
var require_browser5 = __commonJS({
  '../../node_modules/debug/src/browser.js'(exports2, module2) {
    'use strict';
    exports2.formatArgs = formatArgs;
    exports2.save = save;
    exports2.load = load;
    exports2.useColors = useColors;
    exports2.storage = localstorage();
    exports2.destroy = (() => {
      let warned = false;
      return () => {
        if (!warned) {
          warned = true;
          console.warn(
            'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'
          );
        }
      };
    })();
    exports2.colors = [
      '#0000CC',
      '#0000FF',
      '#0033CC',
      '#0033FF',
      '#0066CC',
      '#0066FF',
      '#0099CC',
      '#0099FF',
      '#00CC00',
      '#00CC33',
      '#00CC66',
      '#00CC99',
      '#00CCCC',
      '#00CCFF',
      '#3300CC',
      '#3300FF',
      '#3333CC',
      '#3333FF',
      '#3366CC',
      '#3366FF',
      '#3399CC',
      '#3399FF',
      '#33CC00',
      '#33CC33',
      '#33CC66',
      '#33CC99',
      '#33CCCC',
      '#33CCFF',
      '#6600CC',
      '#6600FF',
      '#6633CC',
      '#6633FF',
      '#66CC00',
      '#66CC33',
      '#9900CC',
      '#9900FF',
      '#9933CC',
      '#9933FF',
      '#99CC00',
      '#99CC33',
      '#CC0000',
      '#CC0033',
      '#CC0066',
      '#CC0099',
      '#CC00CC',
      '#CC00FF',
      '#CC3300',
      '#CC3333',
      '#CC3366',
      '#CC3399',
      '#CC33CC',
      '#CC33FF',
      '#CC6600',
      '#CC6633',
      '#CC9900',
      '#CC9933',
      '#CCCC00',
      '#CCCC33',
      '#FF0000',
      '#FF0033',
      '#FF0066',
      '#FF0099',
      '#FF00CC',
      '#FF00FF',
      '#FF3300',
      '#FF3333',
      '#FF3366',
      '#FF3399',
      '#FF33CC',
      '#FF33FF',
      '#FF6600',
      '#FF6633',
      '#FF9900',
      '#FF9933',
      '#FFCC00',
      '#FFCC33',
    ];
    function useColors() {
      if (
        typeof window !== 'undefined' &&
        window.process &&
        (window.process.type === 'renderer' || window.process.__nwjs)
      ) {
        return true;
      }
      if (
        typeof navigator !== 'undefined' &&
        navigator.userAgent &&
        navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)
      ) {
        return false;
      }
      return (
        (typeof document !== 'undefined' &&
          document.documentElement &&
          document.documentElement.style &&
          document.documentElement.style.WebkitAppearance) || // Is firebug? http://stackoverflow.com/a/398120/376773
        (typeof window !== 'undefined' &&
          window.console &&
          (window.console.firebug ||
            (window.console.exception && window.console.table))) || // Is firefox >= v31?
        // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
        (typeof navigator !== 'undefined' &&
          navigator.userAgent &&
          navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) &&
          parseInt(RegExp.$1, 10) >= 31) || // Double check webkit in userAgent just in case we are in a worker
        (typeof navigator !== 'undefined' &&
          navigator.userAgent &&
          navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/))
      );
    }
    function formatArgs(args) {
      args[0] =
        (this.useColors ? '%c' : '') +
        this.namespace +
        (this.useColors ? ' %c' : ' ') +
        args[0] +
        (this.useColors ? '%c ' : ' ') +
        '+' +
        module2.exports.humanize(this.diff);
      if (!this.useColors) {
        return;
      }
      const c2 = 'color: ' + this.color;
      args.splice(1, 0, c2, 'color: inherit');
      let index = 0;
      let lastC = 0;
      args[0].replace(/%[a-zA-Z%]/g, (match) => {
        if (match === '%%') {
          return;
        }
        index++;
        if (match === '%c') {
          lastC = index;
        }
      });
      args.splice(lastC, 0, c2);
    }
    exports2.log = console.debug || console.log || (() => {});
    function save(namespaces) {
      try {
        if (namespaces) {
          exports2.storage.setItem('debug', namespaces);
        } else {
          exports2.storage.removeItem('debug');
        }
      } catch (error) {}
    }
    function load() {
      let r2;
      try {
        r2 = exports2.storage.getItem('debug');
      } catch (error) {}
      if (!r2 && typeof process !== 'undefined' && 'env' in process) {
        r2 = process.env.DEBUG;
      }
      return r2;
    }
    function localstorage() {
      try {
        return localStorage;
      } catch (error) {}
    }
    module2.exports = require_common()(exports2);
    var { formatters } = module2.exports;
    formatters.j = function (v) {
      try {
        return JSON.stringify(v);
      } catch (error) {
        return '[UnexpectedJSONParseError]: ' + error.message;
      }
    };
  },
});

// ../../node_modules/has-flag/index.js
var require_has_flag = __commonJS({
  '../../node_modules/has-flag/index.js'(exports2, module2) {
    'use strict';
    module2.exports = (flag, argv = process.argv) => {
      const prefix = flag.startsWith('-') ? '' : flag.length === 1 ? '-' : '--';
      const position = argv.indexOf(prefix + flag);
      const terminatorPosition = argv.indexOf('--');
      return (
        position !== -1 &&
        (terminatorPosition === -1 || position < terminatorPosition)
      );
    };
  },
});

// ../../node_modules/supports-color/index.js
var require_supports_color = __commonJS({
  '../../node_modules/supports-color/index.js'(exports2, module2) {
    'use strict';
    var os2 = require('os');
    var tty = require('tty');
    var hasFlag = require_has_flag();
    var { env: env2 } = process;
    var forceColor;
    if (
      hasFlag('no-color') ||
      hasFlag('no-colors') ||
      hasFlag('color=false') ||
      hasFlag('color=never')
    ) {
      forceColor = 0;
    } else if (
      hasFlag('color') ||
      hasFlag('colors') ||
      hasFlag('color=true') ||
      hasFlag('color=always')
    ) {
      forceColor = 1;
    }
    if ('FORCE_COLOR' in env2) {
      if (env2.FORCE_COLOR === 'true') {
        forceColor = 1;
      } else if (env2.FORCE_COLOR === 'false') {
        forceColor = 0;
      } else {
        forceColor =
          env2.FORCE_COLOR.length === 0
            ? 1
            : Math.min(parseInt(env2.FORCE_COLOR, 10), 3);
      }
    }
    function translateLevel(level) {
      if (level === 0) {
        return false;
      }
      return {
        level,
        hasBasic: true,
        has256: level >= 2,
        has16m: level >= 3,
      };
    }
    function supportsColor(haveStream, streamIsTTY) {
      if (forceColor === 0) {
        return 0;
      }
      if (
        hasFlag('color=16m') ||
        hasFlag('color=full') ||
        hasFlag('color=truecolor')
      ) {
        return 3;
      }
      if (hasFlag('color=256')) {
        return 2;
      }
      if (haveStream && !streamIsTTY && forceColor === void 0) {
        return 0;
      }
      const min = forceColor || 0;
      if (env2.TERM === 'dumb') {
        return min;
      }
      if (process.platform === 'win32') {
        const osRelease = os2.release().split('.');
        if (Number(osRelease[0]) >= 10 && Number(osRelease[2]) >= 10586) {
          return Number(osRelease[2]) >= 14931 ? 3 : 2;
        }
        return 1;
      }
      if ('CI' in env2) {
        if (
          [
            'TRAVIS',
            'CIRCLECI',
            'APPVEYOR',
            'GITLAB_CI',
            'GITHUB_ACTIONS',
            'BUILDKITE',
          ].some((sign) => sign in env2) ||
          env2.CI_NAME === 'codeship'
        ) {
          return 1;
        }
        return min;
      }
      if ('TEAMCITY_VERSION' in env2) {
        return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(env2.TEAMCITY_VERSION)
          ? 1
          : 0;
      }
      if (env2.COLORTERM === 'truecolor') {
        return 3;
      }
      if ('TERM_PROGRAM' in env2) {
        const version = parseInt(
          (env2.TERM_PROGRAM_VERSION || '').split('.')[0],
          10
        );
        switch (env2.TERM_PROGRAM) {
          case 'iTerm.app':
            return version >= 3 ? 3 : 2;
          case 'Apple_Terminal':
            return 2;
        }
      }
      if (/-256(color)?$/i.test(env2.TERM)) {
        return 2;
      }
      if (
        /^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(
          env2.TERM
        )
      ) {
        return 1;
      }
      if ('COLORTERM' in env2) {
        return 1;
      }
      return min;
    }
    function getSupportLevel(stream) {
      const level = supportsColor(stream, stream && stream.isTTY);
      return translateLevel(level);
    }
    module2.exports = {
      supportsColor: getSupportLevel,
      stdout: translateLevel(supportsColor(true, tty.isatty(1))),
      stderr: translateLevel(supportsColor(true, tty.isatty(2))),
    };
  },
});

// ../../node_modules/debug/src/node.js
var require_node5 = __commonJS({
  '../../node_modules/debug/src/node.js'(exports2, module2) {
    'use strict';
    var tty = require('tty');
    var util = require('util');
    exports2.init = init;
    exports2.log = log2;
    exports2.formatArgs = formatArgs;
    exports2.save = save;
    exports2.load = load;
    exports2.useColors = useColors;
    exports2.destroy = util.deprecate(() => {},
    'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');
    exports2.colors = [6, 2, 3, 4, 5, 1];
    try {
      const supportsColor = require_supports_color();
      if (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {
        exports2.colors = [
          20, 21, 26, 27, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 56, 57, 62,
          63, 68, 69, 74, 75, 76, 77, 78, 79, 80, 81, 92, 93, 98, 99, 112, 113,
          128, 129, 134, 135, 148, 149, 160, 161, 162, 163, 164, 165, 166, 167,
          168, 169, 170, 171, 172, 173, 178, 179, 184, 185, 196, 197, 198, 199,
          200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 215, 220, 221,
        ];
      }
    } catch (error) {}
    exports2.inspectOpts = Object.keys(process.env)
      .filter((key) => {
        return /^debug_/i.test(key);
      })
      .reduce((obj, key) => {
        const prop = key
          .substring(6)
          .toLowerCase()
          .replace(/_([a-z])/g, (_2, k2) => {
            return k2.toUpperCase();
          });
        let val = process.env[key];
        if (/^(yes|on|true|enabled)$/i.test(val)) {
          val = true;
        } else if (/^(no|off|false|disabled)$/i.test(val)) {
          val = false;
        } else if (val === 'null') {
          val = null;
        } else {
          val = Number(val);
        }
        obj[prop] = val;
        return obj;
      }, {});
    function useColors() {
      return 'colors' in exports2.inspectOpts
        ? Boolean(exports2.inspectOpts.colors)
        : tty.isatty(process.stderr.fd);
    }
    function formatArgs(args) {
      const { namespace: name, useColors: useColors2 } = this;
      if (useColors2) {
        const c2 = this.color;
        const colorCode = '\x1B[3' + (c2 < 8 ? c2 : '8;5;' + c2);
        const prefix = `  ${colorCode};1m${name} \x1B[0m`;
        args[0] = prefix + args[0].split('\n').join('\n' + prefix);
        args.push(
          colorCode + 'm+' + module2.exports.humanize(this.diff) + '\x1B[0m'
        );
      } else {
        args[0] = getDate() + name + ' ' + args[0];
      }
    }
    function getDate() {
      if (exports2.inspectOpts.hideDate) {
        return '';
      }
      return /* @__PURE__ */ new Date().toISOString() + ' ';
    }
    function log2(...args) {
      return process.stderr.write(util.format(...args) + '\n');
    }
    function save(namespaces) {
      if (namespaces) {
        process.env.DEBUG = namespaces;
      } else {
        delete process.env.DEBUG;
      }
    }
    function load() {
      return process.env.DEBUG;
    }
    function init(debug2) {
      debug2.inspectOpts = {};
      const keys = Object.keys(exports2.inspectOpts);
      for (let i = 0; i < keys.length; i++) {
        debug2.inspectOpts[keys[i]] = exports2.inspectOpts[keys[i]];
      }
    }
    module2.exports = require_common()(exports2);
    var { formatters } = module2.exports;
    formatters.o = function (v) {
      this.inspectOpts.colors = this.useColors;
      return util
        .inspect(v, this.inspectOpts)
        .split('\n')
        .map((str) => str.trim())
        .join(' ');
    };
    formatters.O = function (v) {
      this.inspectOpts.colors = this.useColors;
      return util.inspect(v, this.inspectOpts);
    };
  },
});

// ../../node_modules/debug/src/index.js
var require_src6 = __commonJS({
  '../../node_modules/debug/src/index.js'(exports2, module2) {
    'use strict';
    if (
      typeof process === 'undefined' ||
      process.type === 'renderer' ||
      process.browser === true ||
      process.__nwjs
    ) {
      module2.exports = require_browser5();
    } else {
      module2.exports = require_node5();
    }
  },
});

// ../../node_modules/follow-redirects/debug.js
var require_debug5 = __commonJS({
  '../../node_modules/follow-redirects/debug.js'(exports2, module2) {
    'use strict';
    var debug2;
    module2.exports = function () {
      if (!debug2) {
        try {
          debug2 = require_src6()('follow-redirects');
        } catch (error) {}
        if (typeof debug2 !== 'function') {
          debug2 = function () {};
        }
      }
      debug2.apply(null, arguments);
    };
  },
});

// ../../node_modules/follow-redirects/index.js
var require_follow_redirects = __commonJS({
  '../../node_modules/follow-redirects/index.js'(exports2, module2) {
    'use strict';
    var url = require('url');
    var URL2 = url.URL;
    var http = require('http');
    var https = require('https');
    var Writable = require('stream').Writable;
    var assert = require('assert');
    var debug2 = require_debug5();
    var events = ['abort', 'aborted', 'connect', 'error', 'socket', 'timeout'];
    var eventHandlers = /* @__PURE__ */ Object.create(null);
    events.forEach(function (event) {
      eventHandlers[event] = function (arg1, arg2, arg3) {
        this._redirectable.emit(event, arg1, arg2, arg3);
      };
    });
    var InvalidUrlError = createErrorType(
      'ERR_INVALID_URL',
      'Invalid URL',
      TypeError
    );
    var RedirectionError = createErrorType(
      'ERR_FR_REDIRECTION_FAILURE',
      'Redirected request failed'
    );
    var TooManyRedirectsError = createErrorType(
      'ERR_FR_TOO_MANY_REDIRECTS',
      'Maximum number of redirects exceeded'
    );
    var MaxBodyLengthExceededError = createErrorType(
      'ERR_FR_MAX_BODY_LENGTH_EXCEEDED',
      'Request body larger than maxBodyLength limit'
    );
    var WriteAfterEndError = createErrorType(
      'ERR_STREAM_WRITE_AFTER_END',
      'write after end'
    );
    function RedirectableRequest(options, responseCallback) {
      Writable.call(this);
      this._sanitizeOptions(options);
      this._options = options;
      this._ended = false;
      this._ending = false;
      this._redirectCount = 0;
      this._redirects = [];
      this._requestBodyLength = 0;
      this._requestBodyBuffers = [];
      if (responseCallback) {
        this.on('response', responseCallback);
      }
      var self2 = this;
      this._onNativeResponse = function (response) {
        self2._processResponse(response);
      };
      this._performRequest();
    }
    RedirectableRequest.prototype = Object.create(Writable.prototype);
    RedirectableRequest.prototype.abort = function () {
      abortRequest(this._currentRequest);
      this.emit('abort');
    };
    RedirectableRequest.prototype.write = function (data, encoding, callback) {
      if (this._ending) {
        throw new WriteAfterEndError();
      }
      if (!isString(data) && !isBuffer(data)) {
        throw new TypeError('data should be a string, Buffer or Uint8Array');
      }
      if (isFunction(encoding)) {
        callback = encoding;
        encoding = null;
      }
      if (data.length === 0) {
        if (callback) {
          callback();
        }
        return;
      }
      if (
        this._requestBodyLength + data.length <=
        this._options.maxBodyLength
      ) {
        this._requestBodyLength += data.length;
        this._requestBodyBuffers.push({ data, encoding });
        this._currentRequest.write(data, encoding, callback);
      } else {
        this.emit('error', new MaxBodyLengthExceededError());
        this.abort();
      }
    };
    RedirectableRequest.prototype.end = function (data, encoding, callback) {
      if (isFunction(data)) {
        callback = data;
        data = encoding = null;
      } else if (isFunction(encoding)) {
        callback = encoding;
        encoding = null;
      }
      if (!data) {
        this._ended = this._ending = true;
        this._currentRequest.end(null, null, callback);
      } else {
        var self2 = this;
        var currentRequest = this._currentRequest;
        this.write(data, encoding, function () {
          self2._ended = true;
          currentRequest.end(null, null, callback);
        });
        this._ending = true;
      }
    };
    RedirectableRequest.prototype.setHeader = function (name, value) {
      this._options.headers[name] = value;
      this._currentRequest.setHeader(name, value);
    };
    RedirectableRequest.prototype.removeHeader = function (name) {
      delete this._options.headers[name];
      this._currentRequest.removeHeader(name);
    };
    RedirectableRequest.prototype.setTimeout = function (msecs, callback) {
      var self2 = this;
      function destroyOnTimeout(socket) {
        socket.setTimeout(msecs);
        socket.removeListener('timeout', socket.destroy);
        socket.addListener('timeout', socket.destroy);
      }
      function startTimer(socket) {
        if (self2._timeout) {
          clearTimeout(self2._timeout);
        }
        self2._timeout = setTimeout(function () {
          self2.emit('timeout');
          clearTimer();
        }, msecs);
        destroyOnTimeout(socket);
      }
      function clearTimer() {
        if (self2._timeout) {
          clearTimeout(self2._timeout);
          self2._timeout = null;
        }
        self2.removeListener('abort', clearTimer);
        self2.removeListener('error', clearTimer);
        self2.removeListener('response', clearTimer);
        if (callback) {
          self2.removeListener('timeout', callback);
        }
        if (!self2.socket) {
          self2._currentRequest.removeListener('socket', startTimer);
        }
      }
      if (callback) {
        this.on('timeout', callback);
      }
      if (this.socket) {
        startTimer(this.socket);
      } else {
        this._currentRequest.once('socket', startTimer);
      }
      this.on('socket', destroyOnTimeout);
      this.on('abort', clearTimer);
      this.on('error', clearTimer);
      this.on('response', clearTimer);
      return this;
    };
    ['flushHeaders', 'getHeader', 'setNoDelay', 'setSocketKeepAlive'].forEach(
      function (method) {
        RedirectableRequest.prototype[method] = function (a, b) {
          return this._currentRequest[method](a, b);
        };
      }
    );
    ['aborted', 'connection', 'socket'].forEach(function (property) {
      Object.defineProperty(RedirectableRequest.prototype, property, {
        get: function () {
          return this._currentRequest[property];
        },
      });
    });
    RedirectableRequest.prototype._sanitizeOptions = function (options) {
      if (!options.headers) {
        options.headers = {};
      }
      if (options.host) {
        if (!options.hostname) {
          options.hostname = options.host;
        }
        delete options.host;
      }
      if (!options.pathname && options.path) {
        var searchPos = options.path.indexOf('?');
        if (searchPos < 0) {
          options.pathname = options.path;
        } else {
          options.pathname = options.path.substring(0, searchPos);
          options.search = options.path.substring(searchPos);
        }
      }
    };
    RedirectableRequest.prototype._performRequest = function () {
      var protocol = this._options.protocol;
      var nativeProtocol = this._options.nativeProtocols[protocol];
      if (!nativeProtocol) {
        this.emit('error', new TypeError('Unsupported protocol ' + protocol));
        return;
      }
      if (this._options.agents) {
        var scheme = protocol.slice(0, -1);
        this._options.agent = this._options.agents[scheme];
      }
      var request2 = (this._currentRequest = nativeProtocol.request(
        this._options,
        this._onNativeResponse
      ));
      request2._redirectable = this;
      for (var event of events) {
        request2.on(event, eventHandlers[event]);
      }
      this._currentUrl = /^\//.test(this._options.path)
        ? url.format(this._options)
        : // When making a request to a proxy, […]
          // a client MUST send the target URI in absolute-form […].
          this._options.path;
      if (this._isRedirect) {
        var i = 0;
        var self2 = this;
        var buffers = this._requestBodyBuffers;
        (function writeNext(error) {
          if (request2 === self2._currentRequest) {
            if (error) {
              self2.emit('error', error);
            } else if (i < buffers.length) {
              var buffer = buffers[i++];
              if (!request2.finished) {
                request2.write(buffer.data, buffer.encoding, writeNext);
              }
            } else if (self2._ended) {
              request2.end();
            }
          }
        })();
      }
    };
    RedirectableRequest.prototype._processResponse = function (response) {
      var statusCode = response.statusCode;
      if (this._options.trackRedirects) {
        this._redirects.push({
          url: this._currentUrl,
          headers: response.headers,
          statusCode,
        });
      }
      var location = response.headers.location;
      if (
        !location ||
        this._options.followRedirects === false ||
        statusCode < 300 ||
        statusCode >= 400
      ) {
        response.responseUrl = this._currentUrl;
        response.redirects = this._redirects;
        this.emit('response', response);
        this._requestBodyBuffers = [];
        return;
      }
      abortRequest(this._currentRequest);
      response.destroy();
      if (++this._redirectCount > this._options.maxRedirects) {
        this.emit('error', new TooManyRedirectsError());
        return;
      }
      var requestHeaders;
      var beforeRedirect = this._options.beforeRedirect;
      if (beforeRedirect) {
        requestHeaders = Object.assign(
          {
            // The Host header was set by nativeProtocol.request
            Host: response.req.getHeader('host'),
          },
          this._options.headers
        );
      }
      var method = this._options.method;
      if (
        ((statusCode === 301 || statusCode === 302) &&
          this._options.method === 'POST') || // RFC7231§6.4.4: The 303 (See Other) status code indicates that
        // the server is redirecting the user agent to a different resource […]
        // A user agent can perform a retrieval request targeting that URI
        // (a GET or HEAD request if using HTTP) […]
        (statusCode === 303 && !/^(?:GET|HEAD)$/.test(this._options.method))
      ) {
        this._options.method = 'GET';
        this._requestBodyBuffers = [];
        removeMatchingHeaders(/^content-/i, this._options.headers);
      }
      var currentHostHeader = removeMatchingHeaders(
        /^host$/i,
        this._options.headers
      );
      var currentUrlParts = url.parse(this._currentUrl);
      var currentHost = currentHostHeader || currentUrlParts.host;
      var currentUrl = /^\w+:/.test(location)
        ? this._currentUrl
        : url.format(Object.assign(currentUrlParts, { host: currentHost }));
      var redirectUrl;
      try {
        redirectUrl = url.resolve(currentUrl, location);
      } catch (cause) {
        this.emit('error', new RedirectionError({ cause }));
        return;
      }
      debug2('redirecting to', redirectUrl);
      this._isRedirect = true;
      var redirectUrlParts = url.parse(redirectUrl);
      Object.assign(this._options, redirectUrlParts);
      if (
        (redirectUrlParts.protocol !== currentUrlParts.protocol &&
          redirectUrlParts.protocol !== 'https:') ||
        (redirectUrlParts.host !== currentHost &&
          !isSubdomain(redirectUrlParts.host, currentHost))
      ) {
        removeMatchingHeaders(
          /^(?:authorization|cookie)$/i,
          this._options.headers
        );
      }
      if (isFunction(beforeRedirect)) {
        var responseDetails = {
          headers: response.headers,
          statusCode,
        };
        var requestDetails = {
          url: currentUrl,
          method,
          headers: requestHeaders,
        };
        try {
          beforeRedirect(this._options, responseDetails, requestDetails);
        } catch (err) {
          this.emit('error', err);
          return;
        }
        this._sanitizeOptions(this._options);
      }
      try {
        this._performRequest();
      } catch (cause) {
        this.emit('error', new RedirectionError({ cause }));
      }
    };
    function wrap(protocols) {
      var exports3 = {
        maxRedirects: 21,
        maxBodyLength: 10 * 1024 * 1024,
      };
      var nativeProtocols = {};
      Object.keys(protocols).forEach(function (scheme) {
        var protocol = scheme + ':';
        var nativeProtocol = (nativeProtocols[protocol] = protocols[scheme]);
        var wrappedProtocol = (exports3[scheme] =
          Object.create(nativeProtocol));
        function request2(input, options, callback) {
          if (isString(input)) {
            var parsed;
            try {
              parsed = urlToOptions(new URL2(input));
            } catch (err) {
              parsed = url.parse(input);
            }
            if (!isString(parsed.protocol)) {
              throw new InvalidUrlError({ input });
            }
            input = parsed;
          } else if (URL2 && input instanceof URL2) {
            input = urlToOptions(input);
          } else {
            callback = options;
            options = input;
            input = { protocol };
          }
          if (isFunction(options)) {
            callback = options;
            options = null;
          }
          options = Object.assign(
            {
              maxRedirects: exports3.maxRedirects,
              maxBodyLength: exports3.maxBodyLength,
            },
            input,
            options
          );
          options.nativeProtocols = nativeProtocols;
          if (!isString(options.host) && !isString(options.hostname)) {
            options.hostname = '::1';
          }
          assert.equal(options.protocol, protocol, 'protocol mismatch');
          debug2('options', options);
          return new RedirectableRequest(options, callback);
        }
        function get2(input, options, callback) {
          var wrappedRequest = wrappedProtocol.request(
            input,
            options,
            callback
          );
          wrappedRequest.end();
          return wrappedRequest;
        }
        Object.defineProperties(wrappedProtocol, {
          request: {
            value: request2,
            configurable: true,
            enumerable: true,
            writable: true,
          },
          get: {
            value: get2,
            configurable: true,
            enumerable: true,
            writable: true,
          },
        });
      });
      return exports3;
    }
    function noop() {}
    function urlToOptions(urlObject) {
      var options = {
        protocol: urlObject.protocol,
        hostname: urlObject.hostname.startsWith('[')
          ? /* istanbul ignore next */
            urlObject.hostname.slice(1, -1)
          : urlObject.hostname,
        hash: urlObject.hash,
        search: urlObject.search,
        pathname: urlObject.pathname,
        path: urlObject.pathname + urlObject.search,
        href: urlObject.href,
      };
      if (urlObject.port !== '') {
        options.port = Number(urlObject.port);
      }
      return options;
    }
    function removeMatchingHeaders(regex, headers) {
      var lastValue;
      for (var header in headers) {
        if (regex.test(header)) {
          lastValue = headers[header];
          delete headers[header];
        }
      }
      return lastValue === null || typeof lastValue === 'undefined'
        ? void 0
        : String(lastValue).trim();
    }
    function createErrorType(code, message, baseClass) {
      function CustomError(properties) {
        Error.captureStackTrace(this, this.constructor);
        Object.assign(this, properties || {});
        this.code = code;
        this.message = this.cause
          ? message + ': ' + this.cause.message
          : message;
      }
      CustomError.prototype = new (baseClass || Error)();
      CustomError.prototype.constructor = CustomError;
      CustomError.prototype.name = 'Error [' + code + ']';
      return CustomError;
    }
    function abortRequest(request2) {
      for (var event of events) {
        request2.removeListener(event, eventHandlers[event]);
      }
      request2.on('error', noop);
      request2.abort();
    }
    function isSubdomain(subdomain, domain) {
      assert(isString(subdomain) && isString(domain));
      var dot = subdomain.length - domain.length - 1;
      return dot > 0 && subdomain[dot] === '.' && subdomain.endsWith(domain);
    }
    function isString(value) {
      return typeof value === 'string' || value instanceof String;
    }
    function isFunction(value) {
      return typeof value === 'function';
    }
    function isBuffer(value) {
      return typeof value === 'object' && 'length' in value;
    }
    module2.exports = wrap({ http, https });
    module2.exports.wrap = wrap;
  },
});

// ../../node_modules/resend/node_modules/axios/dist/node/axios.cjs
var require_axios = __commonJS({
  '../../node_modules/resend/node_modules/axios/dist/node/axios.cjs'(
    exports2,
    module2
  ) {
    'use strict';
    var FormData$1 = require_form_data();
    var url = require('url');
    var proxyFromEnv = require_proxy_from_env();
    var http = require('http');
    var https = require('https');
    var util = require('util');
    var followRedirects = require_follow_redirects();
    var zlib = require('zlib');
    var stream = require('stream');
    var EventEmitter = require('events');
    function _interopDefaultLegacy(e2) {
      return e2 && typeof e2 === 'object' && 'default' in e2
        ? e2
        : { default: e2 };
    }
    var FormData__default = /* @__PURE__ */ _interopDefaultLegacy(FormData$1);
    var url__default = /* @__PURE__ */ _interopDefaultLegacy(url);
    var http__default = /* @__PURE__ */ _interopDefaultLegacy(http);
    var https__default = /* @__PURE__ */ _interopDefaultLegacy(https);
    var util__default = /* @__PURE__ */ _interopDefaultLegacy(util);
    var followRedirects__default =
      /* @__PURE__ */ _interopDefaultLegacy(followRedirects);
    var zlib__default = /* @__PURE__ */ _interopDefaultLegacy(zlib);
    var stream__default = /* @__PURE__ */ _interopDefaultLegacy(stream);
    var EventEmitter__default =
      /* @__PURE__ */ _interopDefaultLegacy(EventEmitter);
    function bind(fn, thisArg) {
      return function wrap() {
        return fn.apply(thisArg, arguments);
      };
    }
    var { toString } = Object.prototype;
    var { getPrototypeOf } = Object;
    var kindOf = ((cache) => (thing) => {
      const str = toString.call(thing);
      return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());
    })(/* @__PURE__ */ Object.create(null));
    var kindOfTest = (type) => {
      type = type.toLowerCase();
      return (thing) => kindOf(thing) === type;
    };
    var typeOfTest = (type) => (thing) => typeof thing === type;
    var { isArray } = Array;
    var isUndefined = typeOfTest('undefined');
    function isBuffer(val) {
      return (
        val !== null &&
        !isUndefined(val) &&
        val.constructor !== null &&
        !isUndefined(val.constructor) &&
        isFunction(val.constructor.isBuffer) &&
        val.constructor.isBuffer(val)
      );
    }
    var isArrayBuffer = kindOfTest('ArrayBuffer');
    function isArrayBufferView(val) {
      let result;
      if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {
        result = ArrayBuffer.isView(val);
      } else {
        result = val && val.buffer && isArrayBuffer(val.buffer);
      }
      return result;
    }
    var isString = typeOfTest('string');
    var isFunction = typeOfTest('function');
    var isNumber3 = typeOfTest('number');
    var isObject2 = (thing) => thing !== null && typeof thing === 'object';
    var isBoolean = (thing) => thing === true || thing === false;
    var isPlainObject = (val) => {
      if (kindOf(val) !== 'object') {
        return false;
      }
      const prototype2 = getPrototypeOf(val);
      return (
        (prototype2 === null ||
          prototype2 === Object.prototype ||
          Object.getPrototypeOf(prototype2) === null) &&
        !(Symbol.toStringTag in val) &&
        !(Symbol.iterator in val)
      );
    };
    var isDate = kindOfTest('Date');
    var isFile = kindOfTest('File');
    var isBlob = kindOfTest('Blob');
    var isFileList = kindOfTest('FileList');
    var isStream = (val) => isObject2(val) && isFunction(val.pipe);
    var isFormData = (thing) => {
      let kind;
      return (
        thing &&
        ((typeof FormData === 'function' && thing instanceof FormData) ||
          (isFunction(thing.append) &&
            ((kind = kindOf(thing)) === 'formdata' || // detect form-data instance
              (kind === 'object' &&
                isFunction(thing.toString) &&
                thing.toString() === '[object FormData]'))))
      );
    };
    var isURLSearchParams = kindOfTest('URLSearchParams');
    var trim = (str) =>
      str.trim
        ? str.trim()
        : str.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, '');
    function forEach(obj, fn, { allOwnKeys = false } = {}) {
      if (obj === null || typeof obj === 'undefined') {
        return;
      }
      let i;
      let l2;
      if (typeof obj !== 'object') {
        obj = [obj];
      }
      if (isArray(obj)) {
        for (i = 0, l2 = obj.length; i < l2; i++) {
          fn.call(null, obj[i], i, obj);
        }
      } else {
        const keys = allOwnKeys
          ? Object.getOwnPropertyNames(obj)
          : Object.keys(obj);
        const len = keys.length;
        let key;
        for (i = 0; i < len; i++) {
          key = keys[i];
          fn.call(null, obj[key], key, obj);
        }
      }
    }
    function findKey(obj, key) {
      key = key.toLowerCase();
      const keys = Object.keys(obj);
      let i = keys.length;
      let _key;
      while (i-- > 0) {
        _key = keys[i];
        if (key === _key.toLowerCase()) {
          return _key;
        }
      }
      return null;
    }
    var _global2 = (() => {
      if (typeof globalThis !== 'undefined') return globalThis;
      return typeof self !== 'undefined'
        ? self
        : typeof window !== 'undefined'
        ? window
        : global;
    })();
    var isContextDefined = (context) =>
      !isUndefined(context) && context !== _global2;
    function merge2() {
      const { caseless } = (isContextDefined(this) && this) || {};
      const result = {};
      const assignValue = (val, key) => {
        const targetKey = (caseless && findKey(result, key)) || key;
        if (isPlainObject(result[targetKey]) && isPlainObject(val)) {
          result[targetKey] = merge2(result[targetKey], val);
        } else if (isPlainObject(val)) {
          result[targetKey] = merge2({}, val);
        } else if (isArray(val)) {
          result[targetKey] = val.slice();
        } else {
          result[targetKey] = val;
        }
      };
      for (let i = 0, l2 = arguments.length; i < l2; i++) {
        arguments[i] && forEach(arguments[i], assignValue);
      }
      return result;
    }
    var extend = (a, b, thisArg, { allOwnKeys } = {}) => {
      forEach(
        b,
        (val, key) => {
          if (thisArg && isFunction(val)) {
            a[key] = bind(val, thisArg);
          } else {
            a[key] = val;
          }
        },
        { allOwnKeys }
      );
      return a;
    };
    var stripBOM = (content) => {
      if (content.charCodeAt(0) === 65279) {
        content = content.slice(1);
      }
      return content;
    };
    var inherits = (constructor, superConstructor, props, descriptors2) => {
      constructor.prototype = Object.create(
        superConstructor.prototype,
        descriptors2
      );
      constructor.prototype.constructor = constructor;
      Object.defineProperty(constructor, 'super', {
        value: superConstructor.prototype,
      });
      props && Object.assign(constructor.prototype, props);
    };
    var toFlatObject = (sourceObj, destObj, filter2, propFilter) => {
      let props;
      let i;
      let prop;
      const merged = {};
      destObj = destObj || {};
      if (sourceObj == null) return destObj;
      do {
        props = Object.getOwnPropertyNames(sourceObj);
        i = props.length;
        while (i-- > 0) {
          prop = props[i];
          if (
            (!propFilter || propFilter(prop, sourceObj, destObj)) &&
            !merged[prop]
          ) {
            destObj[prop] = sourceObj[prop];
            merged[prop] = true;
          }
        }
        sourceObj = filter2 !== false && getPrototypeOf(sourceObj);
      } while (
        sourceObj &&
        (!filter2 || filter2(sourceObj, destObj)) &&
        sourceObj !== Object.prototype
      );
      return destObj;
    };
    var endsWith = (str, searchString, position) => {
      str = String(str);
      if (position === void 0 || position > str.length) {
        position = str.length;
      }
      position -= searchString.length;
      const lastIndex = str.indexOf(searchString, position);
      return lastIndex !== -1 && lastIndex === position;
    };
    var toArray = (thing) => {
      if (!thing) return null;
      if (isArray(thing)) return thing;
      let i = thing.length;
      if (!isNumber3(i)) return null;
      const arr = new Array(i);
      while (i-- > 0) {
        arr[i] = thing[i];
      }
      return arr;
    };
    var isTypedArray = ((TypedArray) => {
      return (thing) => {
        return TypedArray && thing instanceof TypedArray;
      };
    })(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));
    var forEachEntry = (obj, fn) => {
      const generator = obj && obj[Symbol.iterator];
      const iterator = generator.call(obj);
      let result;
      while ((result = iterator.next()) && !result.done) {
        const pair = result.value;
        fn.call(obj, pair[0], pair[1]);
      }
    };
    var matchAll = (regExp, str) => {
      let matches;
      const arr = [];
      while ((matches = regExp.exec(str)) !== null) {
        arr.push(matches);
      }
      return arr;
    };
    var isHTMLForm = kindOfTest('HTMLFormElement');
    var toCamelCase = (str) => {
      return str
        .toLowerCase()
        .replace(/[-_\s]([a-z\d])(\w*)/g, function replacer(m2, p1, p2) {
          return p1.toUpperCase() + p2;
        });
    };
    var hasOwnProperty = (
      ({ hasOwnProperty: hasOwnProperty2 }) =>
      (obj, prop) =>
        hasOwnProperty2.call(obj, prop)
    )(Object.prototype);
    var isRegExp = kindOfTest('RegExp');
    var reduceDescriptors = (obj, reducer) => {
      const descriptors2 = Object.getOwnPropertyDescriptors(obj);
      const reducedDescriptors = {};
      forEach(descriptors2, (descriptor, name) => {
        if (reducer(descriptor, name, obj) !== false) {
          reducedDescriptors[name] = descriptor;
        }
      });
      Object.defineProperties(obj, reducedDescriptors);
    };
    var freezeMethods = (obj) => {
      reduceDescriptors(obj, (descriptor, name) => {
        if (
          isFunction(obj) &&
          ['arguments', 'caller', 'callee'].indexOf(name) !== -1
        ) {
          return false;
        }
        const value = obj[name];
        if (!isFunction(value)) return;
        descriptor.enumerable = false;
        if ('writable' in descriptor) {
          descriptor.writable = false;
          return;
        }
        if (!descriptor.set) {
          descriptor.set = () => {
            throw Error("Can not rewrite read-only method '" + name + "'");
          };
        }
      });
    };
    var toObjectSet = (arrayOrString, delimiter) => {
      const obj = {};
      const define2 = (arr) => {
        arr.forEach((value) => {
          obj[value] = true;
        });
      };
      isArray(arrayOrString)
        ? define2(arrayOrString)
        : define2(String(arrayOrString).split(delimiter));
      return obj;
    };
    var noop = () => {};
    var toFiniteNumber = (value, defaultValue) => {
      value = +value;
      return Number.isFinite(value) ? value : defaultValue;
    };
    var ALPHA = 'abcdefghijklmnopqrstuvwxyz';
    var DIGIT = '0123456789';
    var ALPHABET = {
      DIGIT,
      ALPHA,
      ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT,
    };
    var generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {
      let str = '';
      const { length } = alphabet;
      while (size--) {
        str += alphabet[(Math.random() * length) | 0];
      }
      return str;
    };
    function isSpecCompliantForm(thing) {
      return !!(
        thing &&
        isFunction(thing.append) &&
        thing[Symbol.toStringTag] === 'FormData' &&
        thing[Symbol.iterator]
      );
    }
    var toJSONObject = (obj) => {
      const stack = new Array(10);
      const visit = (source, i) => {
        if (isObject2(source)) {
          if (stack.indexOf(source) >= 0) {
            return;
          }
          if (!('toJSON' in source)) {
            stack[i] = source;
            const target = isArray(source) ? [] : {};
            forEach(source, (value, key) => {
              const reducedValue = visit(value, i + 1);
              !isUndefined(reducedValue) && (target[key] = reducedValue);
            });
            stack[i] = void 0;
            return target;
          }
        }
        return source;
      };
      return visit(obj, 0);
    };
    var isAsyncFn = kindOfTest('AsyncFunction');
    var isThenable = (thing) =>
      thing &&
      (isObject2(thing) || isFunction(thing)) &&
      isFunction(thing.then) &&
      isFunction(thing.catch);
    var utils = {
      isArray,
      isArrayBuffer,
      isBuffer,
      isFormData,
      isArrayBufferView,
      isString,
      isNumber: isNumber3,
      isBoolean,
      isObject: isObject2,
      isPlainObject,
      isUndefined,
      isDate,
      isFile,
      isBlob,
      isRegExp,
      isFunction,
      isStream,
      isURLSearchParams,
      isTypedArray,
      isFileList,
      forEach,
      merge: merge2,
      extend,
      trim,
      stripBOM,
      inherits,
      toFlatObject,
      kindOf,
      kindOfTest,
      endsWith,
      toArray,
      forEachEntry,
      matchAll,
      isHTMLForm,
      hasOwnProperty,
      hasOwnProp: hasOwnProperty,
      // an alias to avoid ESLint no-prototype-builtins detection
      reduceDescriptors,
      freezeMethods,
      toObjectSet,
      toCamelCase,
      noop,
      toFiniteNumber,
      findKey,
      global: _global2,
      isContextDefined,
      ALPHABET,
      generateString,
      isSpecCompliantForm,
      toJSONObject,
      isAsyncFn,
      isThenable,
    };
    function AxiosError(message, code, config2, request2, response) {
      Error.call(this);
      if (Error.captureStackTrace) {
        Error.captureStackTrace(this, this.constructor);
      } else {
        this.stack = new Error().stack;
      }
      this.message = message;
      this.name = 'AxiosError';
      code && (this.code = code);
      config2 && (this.config = config2);
      request2 && (this.request = request2);
      response && (this.response = response);
    }
    utils.inherits(AxiosError, Error, {
      toJSON: function toJSON() {
        return {
          // Standard
          message: this.message,
          name: this.name,
          // Microsoft
          description: this.description,
          number: this.number,
          // Mozilla
          fileName: this.fileName,
          lineNumber: this.lineNumber,
          columnNumber: this.columnNumber,
          stack: this.stack,
          // Axios
          config: utils.toJSONObject(this.config),
          code: this.code,
          status:
            this.response && this.response.status ? this.response.status : null,
        };
      },
    });
    var prototype$1 = AxiosError.prototype;
    var descriptors = {};
    [
      'ERR_BAD_OPTION_VALUE',
      'ERR_BAD_OPTION',
      'ECONNABORTED',
      'ETIMEDOUT',
      'ERR_NETWORK',
      'ERR_FR_TOO_MANY_REDIRECTS',
      'ERR_DEPRECATED',
      'ERR_BAD_RESPONSE',
      'ERR_BAD_REQUEST',
      'ERR_CANCELED',
      'ERR_NOT_SUPPORT',
      'ERR_INVALID_URL',
      // eslint-disable-next-line func-names
    ].forEach((code) => {
      descriptors[code] = { value: code };
    });
    Object.defineProperties(AxiosError, descriptors);
    Object.defineProperty(prototype$1, 'isAxiosError', { value: true });
    AxiosError.from = (
      error,
      code,
      config2,
      request2,
      response,
      customProps
    ) => {
      const axiosError = Object.create(prototype$1);
      utils.toFlatObject(
        error,
        axiosError,
        function filter2(obj) {
          return obj !== Error.prototype;
        },
        (prop) => {
          return prop !== 'isAxiosError';
        }
      );
      AxiosError.call(
        axiosError,
        error.message,
        code,
        config2,
        request2,
        response
      );
      axiosError.cause = error;
      axiosError.name = error.name;
      customProps && Object.assign(axiosError, customProps);
      return axiosError;
    };
    function isVisitable(thing) {
      return utils.isPlainObject(thing) || utils.isArray(thing);
    }
    function removeBrackets(key) {
      return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;
    }
    function renderKey(path, key, dots) {
      if (!path) return key;
      return path
        .concat(key)
        .map(function each(token2, i) {
          token2 = removeBrackets(token2);
          return !dots && i ? '[' + token2 + ']' : token2;
        })
        .join(dots ? '.' : '');
    }
    function isFlatArray(arr) {
      return utils.isArray(arr) && !arr.some(isVisitable);
    }
    var predicates = utils.toFlatObject(
      utils,
      {},
      null,
      function filter2(prop) {
        return /^is[A-Z]/.test(prop);
      }
    );
    function toFormData(obj, formData, options) {
      if (!utils.isObject(obj)) {
        throw new TypeError('target must be an object');
      }
      formData = formData || new (FormData__default['default'] || FormData)();
      options = utils.toFlatObject(
        options,
        {
          metaTokens: true,
          dots: false,
          indexes: false,
        },
        false,
        function defined(option2, source) {
          return !utils.isUndefined(source[option2]);
        }
      );
      const metaTokens = options.metaTokens;
      const visitor = options.visitor || defaultVisitor;
      const dots = options.dots;
      const indexes = options.indexes;
      const _Blob = options.Blob || (typeof Blob !== 'undefined' && Blob);
      const useBlob = _Blob && utils.isSpecCompliantForm(formData);
      if (!utils.isFunction(visitor)) {
        throw new TypeError('visitor must be a function');
      }
      function convertValue(value) {
        if (value === null) return '';
        if (utils.isDate(value)) {
          return value.toISOString();
        }
        if (!useBlob && utils.isBlob(value)) {
          throw new AxiosError('Blob is not supported. Use a Buffer instead.');
        }
        if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {
          return useBlob && typeof Blob === 'function'
            ? new Blob([value])
            : Buffer.from(value);
        }
        return value;
      }
      function defaultVisitor(value, key, path) {
        let arr = value;
        if (value && !path && typeof value === 'object') {
          if (utils.endsWith(key, '{}')) {
            key = metaTokens ? key : key.slice(0, -2);
            value = JSON.stringify(value);
          } else if (
            (utils.isArray(value) && isFlatArray(value)) ||
            ((utils.isFileList(value) || utils.endsWith(key, '[]')) &&
              (arr = utils.toArray(value)))
          ) {
            key = removeBrackets(key);
            arr.forEach(function each(el, index) {
              !(utils.isUndefined(el) || el === null) &&
                formData.append(
                  // eslint-disable-next-line no-nested-ternary
                  indexes === true
                    ? renderKey([key], index, dots)
                    : indexes === null
                    ? key
                    : key + '[]',
                  convertValue(el)
                );
            });
            return false;
          }
        }
        if (isVisitable(value)) {
          return true;
        }
        formData.append(renderKey(path, key, dots), convertValue(value));
        return false;
      }
      const stack = [];
      const exposedHelpers = Object.assign(predicates, {
        defaultVisitor,
        convertValue,
        isVisitable,
      });
      function build(value, path) {
        if (utils.isUndefined(value)) return;
        if (stack.indexOf(value) !== -1) {
          throw Error('Circular reference detected in ' + path.join('.'));
        }
        stack.push(value);
        utils.forEach(value, function each(el, key) {
          const result =
            !(utils.isUndefined(el) || el === null) &&
            visitor.call(
              formData,
              el,
              utils.isString(key) ? key.trim() : key,
              path,
              exposedHelpers
            );
          if (result === true) {
            build(el, path ? path.concat(key) : [key]);
          }
        });
        stack.pop();
      }
      if (!utils.isObject(obj)) {
        throw new TypeError('data must be an object');
      }
      build(obj);
      return formData;
    }
    function encode$1(str) {
      const charMap = {
        '!': '%21',
        "'": '%27',
        '(': '%28',
        ')': '%29',
        '~': '%7E',
        '%20': '+',
        '%00': '\0',
      };
      return encodeURIComponent(str).replace(
        /[!'()~]|%20|%00/g,
        function replacer(match) {
          return charMap[match];
        }
      );
    }
    function AxiosURLSearchParams(params, options) {
      this._pairs = [];
      params && toFormData(params, this, options);
    }
    var prototype = AxiosURLSearchParams.prototype;
    prototype.append = function append(name, value) {
      this._pairs.push([name, value]);
    };
    prototype.toString = function toString2(encoder) {
      const _encode = encoder
        ? function (value) {
            return encoder.call(this, value, encode$1);
          }
        : encode$1;
      return this._pairs
        .map(function each(pair) {
          return _encode(pair[0]) + '=' + _encode(pair[1]);
        }, '')
        .join('&');
    };
    function encode(val) {
      return encodeURIComponent(val)
        .replace(/%3A/gi, ':')
        .replace(/%24/g, '$')
        .replace(/%2C/gi, ',')
        .replace(/%20/g, '+')
        .replace(/%5B/gi, '[')
        .replace(/%5D/gi, ']');
    }
    function buildURL(url2, params, options) {
      if (!params) {
        return url2;
      }
      const _encode = (options && options.encode) || encode;
      const serializeFn = options && options.serialize;
      let serializedParams;
      if (serializeFn) {
        serializedParams = serializeFn(params, options);
      } else {
        serializedParams = utils.isURLSearchParams(params)
          ? params.toString()
          : new AxiosURLSearchParams(params, options).toString(_encode);
      }
      if (serializedParams) {
        const hashmarkIndex = url2.indexOf('#');
        if (hashmarkIndex !== -1) {
          url2 = url2.slice(0, hashmarkIndex);
        }
        url2 += (url2.indexOf('?') === -1 ? '?' : '&') + serializedParams;
      }
      return url2;
    }
    var InterceptorManager = class {
      constructor() {
        this.handlers = [];
      }
      /**
       * Add a new interceptor to the stack
       *
       * @param {Function} fulfilled The function to handle `then` for a `Promise`
       * @param {Function} rejected The function to handle `reject` for a `Promise`
       *
       * @return {Number} An ID used to remove interceptor later
       */
      use(fulfilled, rejected, options) {
        this.handlers.push({
          fulfilled,
          rejected,
          synchronous: options ? options.synchronous : false,
          runWhen: options ? options.runWhen : null,
        });
        return this.handlers.length - 1;
      }
      /**
       * Remove an interceptor from the stack
       *
       * @param {Number} id The ID that was returned by `use`
       *
       * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise
       */
      eject(id) {
        if (this.handlers[id]) {
          this.handlers[id] = null;
        }
      }
      /**
       * Clear all interceptors from the stack
       *
       * @returns {void}
       */
      clear() {
        if (this.handlers) {
          this.handlers = [];
        }
      }
      /**
       * Iterate over all the registered interceptors
       *
       * This method is particularly useful for skipping over any
       * interceptors that may have become `null` calling `eject`.
       *
       * @param {Function} fn The function to call for each interceptor
       *
       * @returns {void}
       */
      forEach(fn) {
        utils.forEach(this.handlers, function forEachHandler(h2) {
          if (h2 !== null) {
            fn(h2);
          }
        });
      }
    };
    var InterceptorManager$1 = InterceptorManager;
    var transitionalDefaults = {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false,
    };
    var URLSearchParams = url__default['default'].URLSearchParams;
    var platform = {
      isNode: true,
      classes: {
        URLSearchParams,
        FormData: FormData__default['default'],
        Blob: (typeof Blob !== 'undefined' && Blob) || null,
      },
      protocols: ['http', 'https', 'file', 'data'],
    };
    function toURLEncodedForm(data, options) {
      return toFormData(
        data,
        new platform.classes.URLSearchParams(),
        Object.assign(
          {
            visitor: function (value, key, path, helpers) {
              if (utils.isBuffer(value)) {
                this.append(key, value.toString('base64'));
                return false;
              }
              return helpers.defaultVisitor.apply(this, arguments);
            },
          },
          options
        )
      );
    }
    function parsePropPath(name) {
      return utils.matchAll(/\w+|\[(\w*)]/g, name).map((match) => {
        return match[0] === '[]' ? '' : match[1] || match[0];
      });
    }
    function arrayToObject(arr) {
      const obj = {};
      const keys = Object.keys(arr);
      let i;
      const len = keys.length;
      let key;
      for (i = 0; i < len; i++) {
        key = keys[i];
        obj[key] = arr[key];
      }
      return obj;
    }
    function formDataToJSON(formData) {
      function buildPath(path, value, target, index) {
        let name = path[index++];
        const isNumericKey = Number.isFinite(+name);
        const isLast = index >= path.length;
        name = !name && utils.isArray(target) ? target.length : name;
        if (isLast) {
          if (utils.hasOwnProp(target, name)) {
            target[name] = [target[name], value];
          } else {
            target[name] = value;
          }
          return !isNumericKey;
        }
        if (!target[name] || !utils.isObject(target[name])) {
          target[name] = [];
        }
        const result = buildPath(path, value, target[name], index);
        if (result && utils.isArray(target[name])) {
          target[name] = arrayToObject(target[name]);
        }
        return !isNumericKey;
      }
      if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {
        const obj = {};
        utils.forEachEntry(formData, (name, value) => {
          buildPath(parsePropPath(name), value, obj, 0);
        });
        return obj;
      }
      return null;
    }
    var DEFAULT_CONTENT_TYPE = {
      'Content-Type': void 0,
    };
    function stringifySafely(rawValue, parser, encoder) {
      if (utils.isString(rawValue)) {
        try {
          (parser || JSON.parse)(rawValue);
          return utils.trim(rawValue);
        } catch (e2) {
          if (e2.name !== 'SyntaxError') {
            throw e2;
          }
        }
      }
      return (encoder || JSON.stringify)(rawValue);
    }
    var defaults = {
      transitional: transitionalDefaults,
      adapter: ['xhr', 'http'],
      transformRequest: [
        function transformRequest(data, headers) {
          const contentType = headers.getContentType() || '';
          const hasJSONContentType =
            contentType.indexOf('application/json') > -1;
          const isObjectPayload = utils.isObject(data);
          if (isObjectPayload && utils.isHTMLForm(data)) {
            data = new FormData(data);
          }
          const isFormData2 = utils.isFormData(data);
          if (isFormData2) {
            if (!hasJSONContentType) {
              return data;
            }
            return hasJSONContentType
              ? JSON.stringify(formDataToJSON(data))
              : data;
          }
          if (
            utils.isArrayBuffer(data) ||
            utils.isBuffer(data) ||
            utils.isStream(data) ||
            utils.isFile(data) ||
            utils.isBlob(data)
          ) {
            return data;
          }
          if (utils.isArrayBufferView(data)) {
            return data.buffer;
          }
          if (utils.isURLSearchParams(data)) {
            headers.setContentType(
              'application/x-www-form-urlencoded;charset=utf-8',
              false
            );
            return data.toString();
          }
          let isFileList2;
          if (isObjectPayload) {
            if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {
              return toURLEncodedForm(data, this.formSerializer).toString();
            }
            if (
              (isFileList2 = utils.isFileList(data)) ||
              contentType.indexOf('multipart/form-data') > -1
            ) {
              const _FormData = this.env && this.env.FormData;
              return toFormData(
                isFileList2 ? { 'files[]': data } : data,
                _FormData && new _FormData(),
                this.formSerializer
              );
            }
          }
          if (isObjectPayload || hasJSONContentType) {
            headers.setContentType('application/json', false);
            return stringifySafely(data);
          }
          return data;
        },
      ],
      transformResponse: [
        function transformResponse(data) {
          const transitional = this.transitional || defaults.transitional;
          const forcedJSONParsing =
            transitional && transitional.forcedJSONParsing;
          const JSONRequested = this.responseType === 'json';
          if (
            data &&
            utils.isString(data) &&
            ((forcedJSONParsing && !this.responseType) || JSONRequested)
          ) {
            const silentJSONParsing =
              transitional && transitional.silentJSONParsing;
            const strictJSONParsing = !silentJSONParsing && JSONRequested;
            try {
              return JSON.parse(data);
            } catch (e2) {
              if (strictJSONParsing) {
                if (e2.name === 'SyntaxError') {
                  throw AxiosError.from(
                    e2,
                    AxiosError.ERR_BAD_RESPONSE,
                    this,
                    null,
                    this.response
                  );
                }
                throw e2;
              }
            }
          }
          return data;
        },
      ],
      /**
       * A timeout in milliseconds to abort a request. If set to 0 (default) a
       * timeout is not created.
       */
      timeout: 0,
      xsrfCookieName: 'XSRF-TOKEN',
      xsrfHeaderName: 'X-XSRF-TOKEN',
      maxContentLength: -1,
      maxBodyLength: -1,
      env: {
        FormData: platform.classes.FormData,
        Blob: platform.classes.Blob,
      },
      validateStatus: function validateStatus(status) {
        return status >= 200 && status < 300;
      },
      headers: {
        common: {
          Accept: 'application/json, text/plain, */*',
        },
      },
    };
    utils.forEach(
      ['delete', 'get', 'head'],
      function forEachMethodNoData(method) {
        defaults.headers[method] = {};
      }
    );
    utils.forEach(
      ['post', 'put', 'patch'],
      function forEachMethodWithData(method) {
        defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
      }
    );
    var defaults$1 = defaults;
    var ignoreDuplicateOf = utils.toObjectSet([
      'age',
      'authorization',
      'content-length',
      'content-type',
      'etag',
      'expires',
      'from',
      'host',
      'if-modified-since',
      'if-unmodified-since',
      'last-modified',
      'location',
      'max-forwards',
      'proxy-authorization',
      'referer',
      'retry-after',
      'user-agent',
    ]);
    var parseHeaders = (rawHeaders) => {
      const parsed = {};
      let key;
      let val;
      let i;
      rawHeaders &&
        rawHeaders.split('\n').forEach(function parser(line) {
          i = line.indexOf(':');
          key = line.substring(0, i).trim().toLowerCase();
          val = line.substring(i + 1).trim();
          if (!key || (parsed[key] && ignoreDuplicateOf[key])) {
            return;
          }
          if (key === 'set-cookie') {
            if (parsed[key]) {
              parsed[key].push(val);
            } else {
              parsed[key] = [val];
            }
          } else {
            parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
          }
        });
      return parsed;
    };
    var $internals = Symbol('internals');
    function normalizeHeader(header) {
      return header && String(header).trim().toLowerCase();
    }
    function normalizeValue(value) {
      if (value === false || value == null) {
        return value;
      }
      return utils.isArray(value) ? value.map(normalizeValue) : String(value);
    }
    function parseTokens(str) {
      const tokens = /* @__PURE__ */ Object.create(null);
      const tokensRE = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
      let match;
      while ((match = tokensRE.exec(str))) {
        tokens[match[1]] = match[2];
      }
      return tokens;
    }
    var isValidHeaderName = (str) =>
      /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());
    function matchHeaderValue(
      context,
      value,
      header,
      filter2,
      isHeaderNameFilter
    ) {
      if (utils.isFunction(filter2)) {
        return filter2.call(this, value, header);
      }
      if (isHeaderNameFilter) {
        value = header;
      }
      if (!utils.isString(value)) return;
      if (utils.isString(filter2)) {
        return value.indexOf(filter2) !== -1;
      }
      if (utils.isRegExp(filter2)) {
        return filter2.test(value);
      }
    }
    function formatHeader(header) {
      return header
        .trim()
        .toLowerCase()
        .replace(/([a-z\d])(\w*)/g, (w2, char, str) => {
          return char.toUpperCase() + str;
        });
    }
    function buildAccessors(obj, header) {
      const accessorName = utils.toCamelCase(' ' + header);
      ['get', 'set', 'has'].forEach((methodName) => {
        Object.defineProperty(obj, methodName + accessorName, {
          value: function (arg1, arg2, arg3) {
            return this[methodName].call(this, header, arg1, arg2, arg3);
          },
          configurable: true,
        });
      });
    }
    var AxiosHeaders = class {
      constructor(headers) {
        headers && this.set(headers);
      }
      set(header, valueOrRewrite, rewrite) {
        const self2 = this;
        function setHeader(_value, _header, _rewrite) {
          const lHeader = normalizeHeader(_header);
          if (!lHeader) {
            throw new Error('header name must be a non-empty string');
          }
          const key = utils.findKey(self2, lHeader);
          if (
            !key ||
            self2[key] === void 0 ||
            _rewrite === true ||
            (_rewrite === void 0 && self2[key] !== false)
          ) {
            self2[key || _header] = normalizeValue(_value);
          }
        }
        const setHeaders = (headers, _rewrite) =>
          utils.forEach(headers, (_value, _header) =>
            setHeader(_value, _header, _rewrite)
          );
        if (utils.isPlainObject(header) || header instanceof this.constructor) {
          setHeaders(header, valueOrRewrite);
        } else if (
          utils.isString(header) &&
          (header = header.trim()) &&
          !isValidHeaderName(header)
        ) {
          setHeaders(parseHeaders(header), valueOrRewrite);
        } else {
          header != null && setHeader(valueOrRewrite, header, rewrite);
        }
        return this;
      }
      get(header, parser) {
        header = normalizeHeader(header);
        if (header) {
          const key = utils.findKey(this, header);
          if (key) {
            const value = this[key];
            if (!parser) {
              return value;
            }
            if (parser === true) {
              return parseTokens(value);
            }
            if (utils.isFunction(parser)) {
              return parser.call(this, value, key);
            }
            if (utils.isRegExp(parser)) {
              return parser.exec(value);
            }
            throw new TypeError('parser must be boolean|regexp|function');
          }
        }
      }
      has(header, matcher) {
        header = normalizeHeader(header);
        if (header) {
          const key = utils.findKey(this, header);
          return !!(
            key &&
            this[key] !== void 0 &&
            (!matcher || matchHeaderValue(this, this[key], key, matcher))
          );
        }
        return false;
      }
      delete(header, matcher) {
        const self2 = this;
        let deleted = false;
        function deleteHeader(_header) {
          _header = normalizeHeader(_header);
          if (_header) {
            const key = utils.findKey(self2, _header);
            if (
              key &&
              (!matcher || matchHeaderValue(self2, self2[key], key, matcher))
            ) {
              delete self2[key];
              deleted = true;
            }
          }
        }
        if (utils.isArray(header)) {
          header.forEach(deleteHeader);
        } else {
          deleteHeader(header);
        }
        return deleted;
      }
      clear(matcher) {
        const keys = Object.keys(this);
        let i = keys.length;
        let deleted = false;
        while (i--) {
          const key = keys[i];
          if (
            !matcher ||
            matchHeaderValue(this, this[key], key, matcher, true)
          ) {
            delete this[key];
            deleted = true;
          }
        }
        return deleted;
      }
      normalize(format2) {
        const self2 = this;
        const headers = {};
        utils.forEach(this, (value, header) => {
          const key = utils.findKey(headers, header);
          if (key) {
            self2[key] = normalizeValue(value);
            delete self2[header];
            return;
          }
          const normalized = format2
            ? formatHeader(header)
            : String(header).trim();
          if (normalized !== header) {
            delete self2[header];
          }
          self2[normalized] = normalizeValue(value);
          headers[normalized] = true;
        });
        return this;
      }
      concat(...targets) {
        return this.constructor.concat(this, ...targets);
      }
      toJSON(asStrings) {
        const obj = /* @__PURE__ */ Object.create(null);
        utils.forEach(this, (value, header) => {
          value != null &&
            value !== false &&
            (obj[header] =
              asStrings && utils.isArray(value) ? value.join(', ') : value);
        });
        return obj;
      }
      [Symbol.iterator]() {
        return Object.entries(this.toJSON())[Symbol.iterator]();
      }
      toString() {
        return Object.entries(this.toJSON())
          .map(([header, value]) => header + ': ' + value)
          .join('\n');
      }
      get [Symbol.toStringTag]() {
        return 'AxiosHeaders';
      }
      static from(thing) {
        return thing instanceof this ? thing : new this(thing);
      }
      static concat(first, ...targets) {
        const computed = new this(first);
        targets.forEach((target) => computed.set(target));
        return computed;
      }
      static accessor(header) {
        const internals =
          (this[$internals] =
          this[$internals] =
            {
              accessors: {},
            });
        const accessors = internals.accessors;
        const prototype2 = this.prototype;
        function defineAccessor(_header) {
          const lHeader = normalizeHeader(_header);
          if (!accessors[lHeader]) {
            buildAccessors(prototype2, _header);
            accessors[lHeader] = true;
          }
        }
        utils.isArray(header)
          ? header.forEach(defineAccessor)
          : defineAccessor(header);
        return this;
      }
    };
    AxiosHeaders.accessor([
      'Content-Type',
      'Content-Length',
      'Accept',
      'Accept-Encoding',
      'User-Agent',
      'Authorization',
    ]);
    utils.freezeMethods(AxiosHeaders.prototype);
    utils.freezeMethods(AxiosHeaders);
    var AxiosHeaders$1 = AxiosHeaders;
    function transformData(fns, response) {
      const config2 = this || defaults$1;
      const context = response || config2;
      const headers = AxiosHeaders$1.from(context.headers);
      let data = context.data;
      utils.forEach(fns, function transform(fn) {
        data = fn.call(
          config2,
          data,
          headers.normalize(),
          response ? response.status : void 0
        );
      });
      headers.normalize();
      return data;
    }
    function isCancel(value) {
      return !!(value && value.__CANCEL__);
    }
    function CanceledError(message, config2, request2) {
      AxiosError.call(
        this,
        message == null ? 'canceled' : message,
        AxiosError.ERR_CANCELED,
        config2,
        request2
      );
      this.name = 'CanceledError';
    }
    utils.inherits(CanceledError, AxiosError, {
      __CANCEL__: true,
    });
    function settle(resolve, reject, response) {
      const validateStatus = response.config.validateStatus;
      if (
        !response.status ||
        !validateStatus ||
        validateStatus(response.status)
      ) {
        resolve(response);
      } else {
        reject(
          new AxiosError(
            'Request failed with status code ' + response.status,
            [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][
              Math.floor(response.status / 100) - 4
            ],
            response.config,
            response.request,
            response
          )
        );
      }
    }
    function isAbsoluteURL(url2) {
      return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(url2);
    }
    function combineURLs(baseURL, relativeURL) {
      return relativeURL
        ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '')
        : baseURL;
    }
    function buildFullPath(baseURL, requestedURL) {
      if (baseURL && !isAbsoluteURL(requestedURL)) {
        return combineURLs(baseURL, requestedURL);
      }
      return requestedURL;
    }
    var VERSION = '1.4.0';
    function parseProtocol(url2) {
      const match = /^([-+\w]{1,25})(:?\/\/|:)/.exec(url2);
      return (match && match[1]) || '';
    }
    var DATA_URL_PATTERN = /^(?:([^;]+);)?(?:[^;]+;)?(base64|),([\s\S]*)$/;
    function fromDataURI(uri, asBlob, options) {
      const _Blob = (options && options.Blob) || platform.classes.Blob;
      const protocol = parseProtocol(uri);
      if (asBlob === void 0 && _Blob) {
        asBlob = true;
      }
      if (protocol === 'data') {
        uri = protocol.length ? uri.slice(protocol.length + 1) : uri;
        const match = DATA_URL_PATTERN.exec(uri);
        if (!match) {
          throw new AxiosError('Invalid URL', AxiosError.ERR_INVALID_URL);
        }
        const mime = match[1];
        const isBase64 = match[2];
        const body = match[3];
        const buffer = Buffer.from(
          decodeURIComponent(body),
          isBase64 ? 'base64' : 'utf8'
        );
        if (asBlob) {
          if (!_Blob) {
            throw new AxiosError(
              'Blob is not supported',
              AxiosError.ERR_NOT_SUPPORT
            );
          }
          return new _Blob([buffer], { type: mime });
        }
        return buffer;
      }
      throw new AxiosError(
        'Unsupported protocol ' + protocol,
        AxiosError.ERR_NOT_SUPPORT
      );
    }
    function throttle(fn, freq) {
      let timestamp = 0;
      const threshold = 1e3 / freq;
      let timer = null;
      return function throttled(force, args) {
        const now = Date.now();
        if (force || now - timestamp > threshold) {
          if (timer) {
            clearTimeout(timer);
            timer = null;
          }
          timestamp = now;
          return fn.apply(null, args);
        }
        if (!timer) {
          timer = setTimeout(() => {
            timer = null;
            timestamp = Date.now();
            return fn.apply(null, args);
          }, threshold - (now - timestamp));
        }
      };
    }
    function speedometer(samplesCount, min) {
      samplesCount = samplesCount || 10;
      const bytes = new Array(samplesCount);
      const timestamps = new Array(samplesCount);
      let head = 0;
      let tail = 0;
      let firstSampleTS;
      min = min !== void 0 ? min : 1e3;
      return function push(chunkLength) {
        const now = Date.now();
        const startedAt = timestamps[tail];
        if (!firstSampleTS) {
          firstSampleTS = now;
        }
        bytes[head] = chunkLength;
        timestamps[head] = now;
        let i = tail;
        let bytesCount = 0;
        while (i !== head) {
          bytesCount += bytes[i++];
          i = i % samplesCount;
        }
        head = (head + 1) % samplesCount;
        if (head === tail) {
          tail = (tail + 1) % samplesCount;
        }
        if (now - firstSampleTS < min) {
          return;
        }
        const passed = startedAt && now - startedAt;
        return passed ? Math.round((bytesCount * 1e3) / passed) : void 0;
      };
    }
    var kInternals = Symbol('internals');
    var AxiosTransformStream = class extends stream__default['default']
      .Transform {
      constructor(options) {
        options = utils.toFlatObject(
          options,
          {
            maxRate: 0,
            chunkSize: 64 * 1024,
            minChunkSize: 100,
            timeWindow: 500,
            ticksRate: 2,
            samplesCount: 15,
          },
          null,
          (prop, source) => {
            return !utils.isUndefined(source[prop]);
          }
        );
        super({
          readableHighWaterMark: options.chunkSize,
        });
        const self2 = this;
        const internals = (this[kInternals] = {
          length: options.length,
          timeWindow: options.timeWindow,
          ticksRate: options.ticksRate,
          chunkSize: options.chunkSize,
          maxRate: options.maxRate,
          minChunkSize: options.minChunkSize,
          bytesSeen: 0,
          isCaptured: false,
          notifiedBytesLoaded: 0,
          ts: Date.now(),
          bytes: 0,
          onReadCallback: null,
        });
        const _speedometer = speedometer(
          internals.ticksRate * options.samplesCount,
          internals.timeWindow
        );
        this.on('newListener', (event) => {
          if (event === 'progress') {
            if (!internals.isCaptured) {
              internals.isCaptured = true;
            }
          }
        });
        let bytesNotified = 0;
        internals.updateProgress = throttle(function throttledHandler() {
          const totalBytes = internals.length;
          const bytesTransferred = internals.bytesSeen;
          const progressBytes = bytesTransferred - bytesNotified;
          if (!progressBytes || self2.destroyed) return;
          const rate = _speedometer(progressBytes);
          bytesNotified = bytesTransferred;
          process.nextTick(() => {
            self2.emit('progress', {
              loaded: bytesTransferred,
              total: totalBytes,
              progress: totalBytes ? bytesTransferred / totalBytes : void 0,
              bytes: progressBytes,
              rate: rate ? rate : void 0,
              estimated:
                rate && totalBytes && bytesTransferred <= totalBytes
                  ? (totalBytes - bytesTransferred) / rate
                  : void 0,
            });
          });
        }, internals.ticksRate);
        const onFinish = () => {
          internals.updateProgress(true);
        };
        this.once('end', onFinish);
        this.once('error', onFinish);
      }
      _read(size) {
        const internals = this[kInternals];
        if (internals.onReadCallback) {
          internals.onReadCallback();
        }
        return super._read(size);
      }
      _transform(chunk, encoding, callback) {
        const self2 = this;
        const internals = this[kInternals];
        const maxRate = internals.maxRate;
        const readableHighWaterMark = this.readableHighWaterMark;
        const timeWindow = internals.timeWindow;
        const divider = 1e3 / timeWindow;
        const bytesThreshold = maxRate / divider;
        const minChunkSize =
          internals.minChunkSize !== false
            ? Math.max(internals.minChunkSize, bytesThreshold * 0.01)
            : 0;
        function pushChunk(_chunk, _callback) {
          const bytes = Buffer.byteLength(_chunk);
          internals.bytesSeen += bytes;
          internals.bytes += bytes;
          if (internals.isCaptured) {
            internals.updateProgress();
          }
          if (self2.push(_chunk)) {
            process.nextTick(_callback);
          } else {
            internals.onReadCallback = () => {
              internals.onReadCallback = null;
              process.nextTick(_callback);
            };
          }
        }
        const transformChunk = (_chunk, _callback) => {
          const chunkSize = Buffer.byteLength(_chunk);
          let chunkRemainder = null;
          let maxChunkSize = readableHighWaterMark;
          let bytesLeft;
          let passed = 0;
          if (maxRate) {
            const now = Date.now();
            if (!internals.ts || (passed = now - internals.ts) >= timeWindow) {
              internals.ts = now;
              bytesLeft = bytesThreshold - internals.bytes;
              internals.bytes = bytesLeft < 0 ? -bytesLeft : 0;
              passed = 0;
            }
            bytesLeft = bytesThreshold - internals.bytes;
          }
          if (maxRate) {
            if (bytesLeft <= 0) {
              return setTimeout(() => {
                _callback(null, _chunk);
              }, timeWindow - passed);
            }
            if (bytesLeft < maxChunkSize) {
              maxChunkSize = bytesLeft;
            }
          }
          if (
            maxChunkSize &&
            chunkSize > maxChunkSize &&
            chunkSize - maxChunkSize > minChunkSize
          ) {
            chunkRemainder = _chunk.subarray(maxChunkSize);
            _chunk = _chunk.subarray(0, maxChunkSize);
          }
          pushChunk(
            _chunk,
            chunkRemainder
              ? () => {
                  process.nextTick(_callback, null, chunkRemainder);
                }
              : _callback
          );
        };
        transformChunk(chunk, function transformNextChunk(err, _chunk) {
          if (err) {
            return callback(err);
          }
          if (_chunk) {
            transformChunk(_chunk, transformNextChunk);
          } else {
            callback(null);
          }
        });
      }
      setLength(length) {
        this[kInternals].length = +length;
        return this;
      }
    };
    var AxiosTransformStream$1 = AxiosTransformStream;
    var { asyncIterator } = Symbol;
    var readBlob = async function* (blob) {
      if (blob.stream) {
        yield* blob.stream();
      } else if (blob.arrayBuffer) {
        yield await blob.arrayBuffer();
      } else if (blob[asyncIterator]) {
        yield* blob[asyncIterator]();
      } else {
        yield blob;
      }
    };
    var readBlob$1 = readBlob;
    var BOUNDARY_ALPHABET = utils.ALPHABET.ALPHA_DIGIT + '-_';
    var textEncoder = new util.TextEncoder();
    var CRLF = '\r\n';
    var CRLF_BYTES = textEncoder.encode(CRLF);
    var CRLF_BYTES_COUNT = 2;
    var FormDataPart = class {
      constructor(name, value) {
        const { escapeName } = this.constructor;
        const isStringValue = utils.isString(value);
        let headers = `Content-Disposition: form-data; name="${escapeName(
          name
        )}"${
          !isStringValue && value.name
            ? `; filename="${escapeName(value.name)}"`
            : ''
        }${CRLF}`;
        if (isStringValue) {
          value = textEncoder.encode(
            String(value).replace(/\r?\n|\r\n?/g, CRLF)
          );
        } else {
          headers += `Content-Type: ${
            value.type || 'application/octet-stream'
          }${CRLF}`;
        }
        this.headers = textEncoder.encode(headers + CRLF);
        this.contentLength = isStringValue ? value.byteLength : value.size;
        this.size =
          this.headers.byteLength + this.contentLength + CRLF_BYTES_COUNT;
        this.name = name;
        this.value = value;
      }
      async *encode() {
        yield this.headers;
        const { value } = this;
        if (utils.isTypedArray(value)) {
          yield value;
        } else {
          yield* readBlob$1(value);
        }
        yield CRLF_BYTES;
      }
      static escapeName(name) {
        return String(name).replace(
          /[\r\n"]/g,
          (match) =>
            ({
              '\r': '%0D',
              '\n': '%0A',
              '"': '%22',
            }[match])
        );
      }
    };
    var formDataToStream = (form, headersHandler, options) => {
      const {
        tag = 'form-data-boundary',
        size = 25,
        boundary = tag + '-' + utils.generateString(size, BOUNDARY_ALPHABET),
      } = options || {};
      if (!utils.isFormData(form)) {
        throw TypeError('FormData instance required');
      }
      if (boundary.length < 1 || boundary.length > 70) {
        throw Error('boundary must be 10-70 characters long');
      }
      const boundaryBytes = textEncoder.encode('--' + boundary + CRLF);
      const footerBytes = textEncoder.encode(
        '--' + boundary + '--' + CRLF + CRLF
      );
      let contentLength = footerBytes.byteLength;
      const parts = Array.from(form.entries()).map(([name, value]) => {
        const part = new FormDataPart(name, value);
        contentLength += part.size;
        return part;
      });
      contentLength += boundaryBytes.byteLength * parts.length;
      contentLength = utils.toFiniteNumber(contentLength);
      const computedHeaders = {
        'Content-Type': `multipart/form-data; boundary=${boundary}`,
      };
      if (Number.isFinite(contentLength)) {
        computedHeaders['Content-Length'] = contentLength;
      }
      headersHandler && headersHandler(computedHeaders);
      return stream.Readable.from(
        (async function* () {
          for (const part of parts) {
            yield boundaryBytes;
            yield* part.encode();
          }
          yield footerBytes;
        })()
      );
    };
    var formDataToStream$1 = formDataToStream;
    var ZlibHeaderTransformStream = class extends stream__default['default']
      .Transform {
      __transform(chunk, encoding, callback) {
        this.push(chunk);
        callback();
      }
      _transform(chunk, encoding, callback) {
        if (chunk.length !== 0) {
          this._transform = this.__transform;
          if (chunk[0] !== 120) {
            const header = Buffer.alloc(2);
            header[0] = 120;
            header[1] = 156;
            this.push(header, encoding);
          }
        }
        this.__transform(chunk, encoding, callback);
      }
    };
    var ZlibHeaderTransformStream$1 = ZlibHeaderTransformStream;
    var callbackify = (fn, reducer) => {
      return utils.isAsyncFn(fn)
        ? function (...args) {
            const cb = args.pop();
            fn.apply(this, args).then((value) => {
              try {
                reducer ? cb(null, ...reducer(value)) : cb(null, value);
              } catch (err) {
                cb(err);
              }
            }, cb);
          }
        : fn;
    };
    var callbackify$1 = callbackify;
    var zlibOptions = {
      flush: zlib__default['default'].constants.Z_SYNC_FLUSH,
      finishFlush: zlib__default['default'].constants.Z_SYNC_FLUSH,
    };
    var brotliOptions = {
      flush: zlib__default['default'].constants.BROTLI_OPERATION_FLUSH,
      finishFlush: zlib__default['default'].constants.BROTLI_OPERATION_FLUSH,
    };
    var isBrotliSupported = utils.isFunction(
      zlib__default['default'].createBrotliDecompress
    );
    var { http: httpFollow, https: httpsFollow } =
      followRedirects__default['default'];
    var isHttps = /https:?/;
    var supportedProtocols = platform.protocols.map((protocol) => {
      return protocol + ':';
    });
    function dispatchBeforeRedirect(options) {
      if (options.beforeRedirects.proxy) {
        options.beforeRedirects.proxy(options);
      }
      if (options.beforeRedirects.config) {
        options.beforeRedirects.config(options);
      }
    }
    function setProxy(options, configProxy, location) {
      let proxy = configProxy;
      if (!proxy && proxy !== false) {
        const proxyUrl = proxyFromEnv.getProxyForUrl(location);
        if (proxyUrl) {
          proxy = new URL(proxyUrl);
        }
      }
      if (proxy) {
        if (proxy.username) {
          proxy.auth = (proxy.username || '') + ':' + (proxy.password || '');
        }
        if (proxy.auth) {
          if (proxy.auth.username || proxy.auth.password) {
            proxy.auth =
              (proxy.auth.username || '') + ':' + (proxy.auth.password || '');
          }
          const base64 = Buffer.from(proxy.auth, 'utf8').toString('base64');
          options.headers['Proxy-Authorization'] = 'Basic ' + base64;
        }
        options.headers.host =
          options.hostname + (options.port ? ':' + options.port : '');
        const proxyHost = proxy.hostname || proxy.host;
        options.hostname = proxyHost;
        options.host = proxyHost;
        options.port = proxy.port;
        options.path = location;
        if (proxy.protocol) {
          options.protocol = proxy.protocol.includes(':')
            ? proxy.protocol
            : `${proxy.protocol}:`;
        }
      }
      options.beforeRedirects.proxy = function beforeRedirect(redirectOptions) {
        setProxy(redirectOptions, configProxy, redirectOptions.href);
      };
    }
    var isHttpAdapterSupported =
      typeof process !== 'undefined' && utils.kindOf(process) === 'process';
    var wrapAsync = (asyncExecutor) => {
      return new Promise((resolve, reject) => {
        let onDone;
        let isDone;
        const done = (value, isRejected) => {
          if (isDone) return;
          isDone = true;
          onDone && onDone(value, isRejected);
        };
        const _resolve = (value) => {
          done(value);
          resolve(value);
        };
        const _reject = (reason) => {
          done(reason, true);
          reject(reason);
        };
        asyncExecutor(
          _resolve,
          _reject,
          (onDoneHandler) => (onDone = onDoneHandler)
        ).catch(_reject);
      });
    };
    var httpAdapter =
      isHttpAdapterSupported &&
      function httpAdapter2(config2) {
        return wrapAsync(async function dispatchHttpRequest(
          resolve,
          reject,
          onDone
        ) {
          let { data, lookup, family } = config2;
          const { responseType, responseEncoding } = config2;
          const method = config2.method.toUpperCase();
          let isDone;
          let rejected = false;
          let req;
          if (lookup && utils.isAsyncFn(lookup)) {
            lookup = callbackify$1(lookup, (entry) => {
              if (utils.isString(entry)) {
                entry = [entry, entry.indexOf('.') < 0 ? 6 : 4];
              } else if (!utils.isArray(entry)) {
                throw new TypeError(
                  'lookup async function must return an array [ip: string, family: number]]'
                );
              }
              return entry;
            });
          }
          const emitter = new EventEmitter__default['default']();
          const onFinished = () => {
            if (config2.cancelToken) {
              config2.cancelToken.unsubscribe(abort);
            }
            if (config2.signal) {
              config2.signal.removeEventListener('abort', abort);
            }
            emitter.removeAllListeners();
          };
          onDone((value, isRejected) => {
            isDone = true;
            if (isRejected) {
              rejected = true;
              onFinished();
            }
          });
          function abort(reason) {
            emitter.emit(
              'abort',
              !reason || reason.type
                ? new CanceledError(null, config2, req)
                : reason
            );
          }
          emitter.once('abort', reject);
          if (config2.cancelToken || config2.signal) {
            config2.cancelToken && config2.cancelToken.subscribe(abort);
            if (config2.signal) {
              config2.signal.aborted
                ? abort()
                : config2.signal.addEventListener('abort', abort);
            }
          }
          const fullPath = buildFullPath(config2.baseURL, config2.url);
          const parsed = new URL(fullPath, 'http://localhost');
          const protocol = parsed.protocol || supportedProtocols[0];
          if (protocol === 'data:') {
            let convertedData;
            if (method !== 'GET') {
              return settle(resolve, reject, {
                status: 405,
                statusText: 'method not allowed',
                headers: {},
                config: config2,
              });
            }
            try {
              convertedData = fromDataURI(
                config2.url,
                responseType === 'blob',
                {
                  Blob: config2.env && config2.env.Blob,
                }
              );
            } catch (err) {
              throw AxiosError.from(err, AxiosError.ERR_BAD_REQUEST, config2);
            }
            if (responseType === 'text') {
              convertedData = convertedData.toString(responseEncoding);
              if (!responseEncoding || responseEncoding === 'utf8') {
                convertedData = utils.stripBOM(convertedData);
              }
            } else if (responseType === 'stream') {
              convertedData =
                stream__default['default'].Readable.from(convertedData);
            }
            return settle(resolve, reject, {
              data: convertedData,
              status: 200,
              statusText: 'OK',
              headers: new AxiosHeaders$1(),
              config: config2,
            });
          }
          if (supportedProtocols.indexOf(protocol) === -1) {
            return reject(
              new AxiosError(
                'Unsupported protocol ' + protocol,
                AxiosError.ERR_BAD_REQUEST,
                config2
              )
            );
          }
          const headers = AxiosHeaders$1.from(config2.headers).normalize();
          headers.set('User-Agent', 'axios/' + VERSION, false);
          const onDownloadProgress = config2.onDownloadProgress;
          const onUploadProgress = config2.onUploadProgress;
          const maxRate = config2.maxRate;
          let maxUploadRate = void 0;
          let maxDownloadRate = void 0;
          if (utils.isSpecCompliantForm(data)) {
            const userBoundary = headers.getContentType(
              /boundary=([-_\w\d]{10,70})/i
            );
            data = formDataToStream$1(
              data,
              (formHeaders) => {
                headers.set(formHeaders);
              },
              {
                tag: `axios-${VERSION}-boundary`,
                boundary: (userBoundary && userBoundary[1]) || void 0,
              }
            );
          } else if (
            utils.isFormData(data) &&
            utils.isFunction(data.getHeaders)
          ) {
            headers.set(data.getHeaders());
            if (!headers.hasContentLength()) {
              try {
                const knownLength = await util__default['default']
                  .promisify(data.getLength)
                  .call(data);
                Number.isFinite(knownLength) &&
                  knownLength >= 0 &&
                  headers.setContentLength(knownLength);
              } catch (e2) {}
            }
          } else if (utils.isBlob(data)) {
            data.size &&
              headers.setContentType(data.type || 'application/octet-stream');
            headers.setContentLength(data.size || 0);
            data = stream__default['default'].Readable.from(readBlob$1(data));
          } else if (data && !utils.isStream(data)) {
            if (Buffer.isBuffer(data));
            else if (utils.isArrayBuffer(data)) {
              data = Buffer.from(new Uint8Array(data));
            } else if (utils.isString(data)) {
              data = Buffer.from(data, 'utf-8');
            } else {
              return reject(
                new AxiosError(
                  'Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream',
                  AxiosError.ERR_BAD_REQUEST,
                  config2
                )
              );
            }
            headers.setContentLength(data.length, false);
            if (
              config2.maxBodyLength > -1 &&
              data.length > config2.maxBodyLength
            ) {
              return reject(
                new AxiosError(
                  'Request body larger than maxBodyLength limit',
                  AxiosError.ERR_BAD_REQUEST,
                  config2
                )
              );
            }
          }
          const contentLength = utils.toFiniteNumber(
            headers.getContentLength()
          );
          if (utils.isArray(maxRate)) {
            maxUploadRate = maxRate[0];
            maxDownloadRate = maxRate[1];
          } else {
            maxUploadRate = maxDownloadRate = maxRate;
          }
          if (data && (onUploadProgress || maxUploadRate)) {
            if (!utils.isStream(data)) {
              data = stream__default['default'].Readable.from(data, {
                objectMode: false,
              });
            }
            data = stream__default['default'].pipeline(
              [
                data,
                new AxiosTransformStream$1({
                  length: contentLength,
                  maxRate: utils.toFiniteNumber(maxUploadRate),
                }),
              ],
              utils.noop
            );
            onUploadProgress &&
              data.on('progress', (progress) => {
                onUploadProgress(
                  Object.assign(progress, {
                    upload: true,
                  })
                );
              });
          }
          let auth2 = void 0;
          if (config2.auth) {
            const username = config2.auth.username || '';
            const password = config2.auth.password || '';
            auth2 = username + ':' + password;
          }
          if (!auth2 && parsed.username) {
            const urlUsername = parsed.username;
            const urlPassword = parsed.password;
            auth2 = urlUsername + ':' + urlPassword;
          }
          auth2 && headers.delete('authorization');
          let path;
          try {
            path = buildURL(
              parsed.pathname + parsed.search,
              config2.params,
              config2.paramsSerializer
            ).replace(/^\?/, '');
          } catch (err) {
            const customErr = new Error(err.message);
            customErr.config = config2;
            customErr.url = config2.url;
            customErr.exists = true;
            return reject(customErr);
          }
          headers.set(
            'Accept-Encoding',
            'gzip, compress, deflate' + (isBrotliSupported ? ', br' : ''),
            false
          );
          const options = {
            path,
            method,
            headers: headers.toJSON(),
            agents: { http: config2.httpAgent, https: config2.httpsAgent },
            auth: auth2,
            protocol,
            family,
            lookup,
            beforeRedirect: dispatchBeforeRedirect,
            beforeRedirects: {},
          };
          if (config2.socketPath) {
            options.socketPath = config2.socketPath;
          } else {
            options.hostname = parsed.hostname;
            options.port = parsed.port;
            setProxy(
              options,
              config2.proxy,
              protocol +
                '//' +
                parsed.hostname +
                (parsed.port ? ':' + parsed.port : '') +
                options.path
            );
          }
          let transport;
          const isHttpsRequest = isHttps.test(options.protocol);
          options.agent = isHttpsRequest
            ? config2.httpsAgent
            : config2.httpAgent;
          if (config2.transport) {
            transport = config2.transport;
          } else if (config2.maxRedirects === 0) {
            transport = isHttpsRequest
              ? https__default['default']
              : http__default['default'];
          } else {
            if (config2.maxRedirects) {
              options.maxRedirects = config2.maxRedirects;
            }
            if (config2.beforeRedirect) {
              options.beforeRedirects.config = config2.beforeRedirect;
            }
            transport = isHttpsRequest ? httpsFollow : httpFollow;
          }
          if (config2.maxBodyLength > -1) {
            options.maxBodyLength = config2.maxBodyLength;
          } else {
            options.maxBodyLength = Infinity;
          }
          if (config2.insecureHTTPParser) {
            options.insecureHTTPParser = config2.insecureHTTPParser;
          }
          req = transport.request(options, function handleResponse(res) {
            if (req.destroyed) return;
            const streams = [res];
            const responseLength = +res.headers['content-length'];
            if (onDownloadProgress) {
              const transformStream = new AxiosTransformStream$1({
                length: utils.toFiniteNumber(responseLength),
                maxRate: utils.toFiniteNumber(maxDownloadRate),
              });
              onDownloadProgress &&
                transformStream.on('progress', (progress) => {
                  onDownloadProgress(
                    Object.assign(progress, {
                      download: true,
                    })
                  );
                });
              streams.push(transformStream);
            }
            let responseStream = res;
            const lastRequest = res.req || req;
            if (
              config2.decompress !== false &&
              res.headers['content-encoding']
            ) {
              if (method === 'HEAD' || res.statusCode === 204) {
                delete res.headers['content-encoding'];
              }
              switch (res.headers['content-encoding']) {
                case 'gzip':
                case 'x-gzip':
                case 'compress':
                case 'x-compress':
                  streams.push(
                    zlib__default['default'].createUnzip(zlibOptions)
                  );
                  delete res.headers['content-encoding'];
                  break;
                case 'deflate':
                  streams.push(new ZlibHeaderTransformStream$1());
                  streams.push(
                    zlib__default['default'].createUnzip(zlibOptions)
                  );
                  delete res.headers['content-encoding'];
                  break;
                case 'br':
                  if (isBrotliSupported) {
                    streams.push(
                      zlib__default['default'].createBrotliDecompress(
                        brotliOptions
                      )
                    );
                    delete res.headers['content-encoding'];
                  }
              }
            }
            responseStream =
              streams.length > 1
                ? stream__default['default'].pipeline(streams, utils.noop)
                : streams[0];
            const offListeners = stream__default['default'].finished(
              responseStream,
              () => {
                offListeners();
                onFinished();
              }
            );
            const response = {
              status: res.statusCode,
              statusText: res.statusMessage,
              headers: new AxiosHeaders$1(res.headers),
              config: config2,
              request: lastRequest,
            };
            if (responseType === 'stream') {
              response.data = responseStream;
              settle(resolve, reject, response);
            } else {
              const responseBuffer = [];
              let totalResponseBytes = 0;
              responseStream.on('data', function handleStreamData(chunk) {
                responseBuffer.push(chunk);
                totalResponseBytes += chunk.length;
                if (
                  config2.maxContentLength > -1 &&
                  totalResponseBytes > config2.maxContentLength
                ) {
                  rejected = true;
                  responseStream.destroy();
                  reject(
                    new AxiosError(
                      'maxContentLength size of ' +
                        config2.maxContentLength +
                        ' exceeded',
                      AxiosError.ERR_BAD_RESPONSE,
                      config2,
                      lastRequest
                    )
                  );
                }
              });
              responseStream.on('aborted', function handlerStreamAborted() {
                if (rejected) {
                  return;
                }
                const err = new AxiosError(
                  'maxContentLength size of ' +
                    config2.maxContentLength +
                    ' exceeded',
                  AxiosError.ERR_BAD_RESPONSE,
                  config2,
                  lastRequest
                );
                responseStream.destroy(err);
                reject(err);
              });
              responseStream.on('error', function handleStreamError(err) {
                if (req.destroyed) return;
                reject(AxiosError.from(err, null, config2, lastRequest));
              });
              responseStream.on('end', function handleStreamEnd() {
                try {
                  let responseData =
                    responseBuffer.length === 1
                      ? responseBuffer[0]
                      : Buffer.concat(responseBuffer);
                  if (responseType !== 'arraybuffer') {
                    responseData = responseData.toString(responseEncoding);
                    if (!responseEncoding || responseEncoding === 'utf8') {
                      responseData = utils.stripBOM(responseData);
                    }
                  }
                  response.data = responseData;
                } catch (err) {
                  reject(
                    AxiosError.from(
                      err,
                      null,
                      config2,
                      response.request,
                      response
                    )
                  );
                }
                settle(resolve, reject, response);
              });
            }
            emitter.once('abort', (err) => {
              if (!responseStream.destroyed) {
                responseStream.emit('error', err);
                responseStream.destroy();
              }
            });
          });
          emitter.once('abort', (err) => {
            reject(err);
            req.destroy(err);
          });
          req.on('error', function handleRequestError(err) {
            reject(AxiosError.from(err, null, config2, req));
          });
          req.on('socket', function handleRequestSocket(socket) {
            socket.setKeepAlive(true, 1e3 * 60);
          });
          if (config2.timeout) {
            const timeout = parseInt(config2.timeout, 10);
            if (isNaN(timeout)) {
              reject(
                new AxiosError(
                  'error trying to parse `config.timeout` to int',
                  AxiosError.ERR_BAD_OPTION_VALUE,
                  config2,
                  req
                )
              );
              return;
            }
            req.setTimeout(timeout, function handleRequestTimeout() {
              if (isDone) return;
              let timeoutErrorMessage = config2.timeout
                ? 'timeout of ' + config2.timeout + 'ms exceeded'
                : 'timeout exceeded';
              const transitional = config2.transitional || transitionalDefaults;
              if (config2.timeoutErrorMessage) {
                timeoutErrorMessage = config2.timeoutErrorMessage;
              }
              reject(
                new AxiosError(
                  timeoutErrorMessage,
                  transitional.clarifyTimeoutError
                    ? AxiosError.ETIMEDOUT
                    : AxiosError.ECONNABORTED,
                  config2,
                  req
                )
              );
              abort();
            });
          }
          if (utils.isStream(data)) {
            let ended = false;
            let errored = false;
            data.on('end', () => {
              ended = true;
            });
            data.once('error', (err) => {
              errored = true;
              req.destroy(err);
            });
            data.on('close', () => {
              if (!ended && !errored) {
                abort(
                  new CanceledError(
                    'Request stream has been aborted',
                    config2,
                    req
                  )
                );
              }
            });
            data.pipe(req);
          } else {
            req.end(data);
          }
        });
      };
    var cookies = platform.isStandardBrowserEnv
      ? // Standard browser envs support document.cookie
        (function standardBrowserEnv() {
          return {
            write: function write(name, value, expires, path, domain, secure) {
              const cookie = [];
              cookie.push(name + '=' + encodeURIComponent(value));
              if (utils.isNumber(expires)) {
                cookie.push('expires=' + new Date(expires).toGMTString());
              }
              if (utils.isString(path)) {
                cookie.push('path=' + path);
              }
              if (utils.isString(domain)) {
                cookie.push('domain=' + domain);
              }
              if (secure === true) {
                cookie.push('secure');
              }
              document.cookie = cookie.join('; ');
            },
            read: function read(name) {
              const match = document.cookie.match(
                new RegExp('(^|;\\s*)(' + name + ')=([^;]*)')
              );
              return match ? decodeURIComponent(match[3]) : null;
            },
            remove: function remove(name) {
              this.write(name, '', Date.now() - 864e5);
            },
          };
        })()
      : // Non standard browser env (web workers, react-native) lack needed support.
        (function nonStandardBrowserEnv() {
          return {
            write: function write() {},
            read: function read() {
              return null;
            },
            remove: function remove() {},
          };
        })();
    var isURLSameOrigin = platform.isStandardBrowserEnv
      ? // Standard browser envs have full support of the APIs needed to test
        // whether the request URL is of the same origin as current location.
        (function standardBrowserEnv() {
          const msie = /(msie|trident)/i.test(navigator.userAgent);
          const urlParsingNode = document.createElement('a');
          let originURL;
          function resolveURL(url2) {
            let href = url2;
            if (msie) {
              urlParsingNode.setAttribute('href', href);
              href = urlParsingNode.href;
            }
            urlParsingNode.setAttribute('href', href);
            return {
              href: urlParsingNode.href,
              protocol: urlParsingNode.protocol
                ? urlParsingNode.protocol.replace(/:$/, '')
                : '',
              host: urlParsingNode.host,
              search: urlParsingNode.search
                ? urlParsingNode.search.replace(/^\?/, '')
                : '',
              hash: urlParsingNode.hash
                ? urlParsingNode.hash.replace(/^#/, '')
                : '',
              hostname: urlParsingNode.hostname,
              port: urlParsingNode.port,
              pathname:
                urlParsingNode.pathname.charAt(0) === '/'
                  ? urlParsingNode.pathname
                  : '/' + urlParsingNode.pathname,
            };
          }
          originURL = resolveURL(window.location.href);
          return function isURLSameOrigin2(requestURL) {
            const parsed = utils.isString(requestURL)
              ? resolveURL(requestURL)
              : requestURL;
            return (
              parsed.protocol === originURL.protocol &&
              parsed.host === originURL.host
            );
          };
        })()
      : // Non standard browser envs (web workers, react-native) lack needed support.
        (function nonStandardBrowserEnv() {
          return function isURLSameOrigin2() {
            return true;
          };
        })();
    function progressEventReducer(listener, isDownloadStream) {
      let bytesNotified = 0;
      const _speedometer = speedometer(50, 250);
      return (e2) => {
        const loaded = e2.loaded;
        const total = e2.lengthComputable ? e2.total : void 0;
        const progressBytes = loaded - bytesNotified;
        const rate = _speedometer(progressBytes);
        const inRange = loaded <= total;
        bytesNotified = loaded;
        const data = {
          loaded,
          total,
          progress: total ? loaded / total : void 0,
          bytes: progressBytes,
          rate: rate ? rate : void 0,
          estimated:
            rate && total && inRange ? (total - loaded) / rate : void 0,
          event: e2,
        };
        data[isDownloadStream ? 'download' : 'upload'] = true;
        listener(data);
      };
    }
    var isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';
    var xhrAdapter =
      isXHRAdapterSupported &&
      function (config2) {
        return new Promise(function dispatchXhrRequest(resolve, reject) {
          let requestData = config2.data;
          const requestHeaders = AxiosHeaders$1.from(
            config2.headers
          ).normalize();
          const responseType = config2.responseType;
          let onCanceled;
          function done() {
            if (config2.cancelToken) {
              config2.cancelToken.unsubscribe(onCanceled);
            }
            if (config2.signal) {
              config2.signal.removeEventListener('abort', onCanceled);
            }
          }
          if (utils.isFormData(requestData)) {
            if (
              platform.isStandardBrowserEnv ||
              platform.isStandardBrowserWebWorkerEnv
            ) {
              requestHeaders.setContentType(false);
            } else {
              requestHeaders.setContentType('multipart/form-data;', false);
            }
          }
          let request2 = new XMLHttpRequest();
          if (config2.auth) {
            const username = config2.auth.username || '';
            const password = config2.auth.password
              ? unescape(encodeURIComponent(config2.auth.password))
              : '';
            requestHeaders.set(
              'Authorization',
              'Basic ' + btoa(username + ':' + password)
            );
          }
          const fullPath = buildFullPath(config2.baseURL, config2.url);
          request2.open(
            config2.method.toUpperCase(),
            buildURL(fullPath, config2.params, config2.paramsSerializer),
            true
          );
          request2.timeout = config2.timeout;
          function onloadend() {
            if (!request2) {
              return;
            }
            const responseHeaders = AxiosHeaders$1.from(
              'getAllResponseHeaders' in request2 &&
                request2.getAllResponseHeaders()
            );
            const responseData =
              !responseType ||
              responseType === 'text' ||
              responseType === 'json'
                ? request2.responseText
                : request2.response;
            const response = {
              data: responseData,
              status: request2.status,
              statusText: request2.statusText,
              headers: responseHeaders,
              config: config2,
              request: request2,
            };
            settle(
              function _resolve(value) {
                resolve(value);
                done();
              },
              function _reject(err) {
                reject(err);
                done();
              },
              response
            );
            request2 = null;
          }
          if ('onloadend' in request2) {
            request2.onloadend = onloadend;
          } else {
            request2.onreadystatechange = function handleLoad() {
              if (!request2 || request2.readyState !== 4) {
                return;
              }
              if (
                request2.status === 0 &&
                !(
                  request2.responseURL &&
                  request2.responseURL.indexOf('file:') === 0
                )
              ) {
                return;
              }
              setTimeout(onloadend);
            };
          }
          request2.onabort = function handleAbort() {
            if (!request2) {
              return;
            }
            reject(
              new AxiosError(
                'Request aborted',
                AxiosError.ECONNABORTED,
                config2,
                request2
              )
            );
            request2 = null;
          };
          request2.onerror = function handleError() {
            reject(
              new AxiosError(
                'Network Error',
                AxiosError.ERR_NETWORK,
                config2,
                request2
              )
            );
            request2 = null;
          };
          request2.ontimeout = function handleTimeout() {
            let timeoutErrorMessage = config2.timeout
              ? 'timeout of ' + config2.timeout + 'ms exceeded'
              : 'timeout exceeded';
            const transitional = config2.transitional || transitionalDefaults;
            if (config2.timeoutErrorMessage) {
              timeoutErrorMessage = config2.timeoutErrorMessage;
            }
            reject(
              new AxiosError(
                timeoutErrorMessage,
                transitional.clarifyTimeoutError
                  ? AxiosError.ETIMEDOUT
                  : AxiosError.ECONNABORTED,
                config2,
                request2
              )
            );
            request2 = null;
          };
          if (platform.isStandardBrowserEnv) {
            const xsrfValue =
              (config2.withCredentials || isURLSameOrigin(fullPath)) &&
              config2.xsrfCookieName &&
              cookies.read(config2.xsrfCookieName);
            if (xsrfValue) {
              requestHeaders.set(config2.xsrfHeaderName, xsrfValue);
            }
          }
          requestData === void 0 && requestHeaders.setContentType(null);
          if ('setRequestHeader' in request2) {
            utils.forEach(
              requestHeaders.toJSON(),
              function setRequestHeader(val, key) {
                request2.setRequestHeader(key, val);
              }
            );
          }
          if (!utils.isUndefined(config2.withCredentials)) {
            request2.withCredentials = !!config2.withCredentials;
          }
          if (responseType && responseType !== 'json') {
            request2.responseType = config2.responseType;
          }
          if (typeof config2.onDownloadProgress === 'function') {
            request2.addEventListener(
              'progress',
              progressEventReducer(config2.onDownloadProgress, true)
            );
          }
          if (
            typeof config2.onUploadProgress === 'function' &&
            request2.upload
          ) {
            request2.upload.addEventListener(
              'progress',
              progressEventReducer(config2.onUploadProgress)
            );
          }
          if (config2.cancelToken || config2.signal) {
            onCanceled = (cancel) => {
              if (!request2) {
                return;
              }
              reject(
                !cancel || cancel.type
                  ? new CanceledError(null, config2, request2)
                  : cancel
              );
              request2.abort();
              request2 = null;
            };
            config2.cancelToken && config2.cancelToken.subscribe(onCanceled);
            if (config2.signal) {
              config2.signal.aborted
                ? onCanceled()
                : config2.signal.addEventListener('abort', onCanceled);
            }
          }
          const protocol = parseProtocol(fullPath);
          if (protocol && platform.protocols.indexOf(protocol) === -1) {
            reject(
              new AxiosError(
                'Unsupported protocol ' + protocol + ':',
                AxiosError.ERR_BAD_REQUEST,
                config2
              )
            );
            return;
          }
          request2.send(requestData || null);
        });
      };
    var knownAdapters = {
      http: httpAdapter,
      xhr: xhrAdapter,
    };
    utils.forEach(knownAdapters, (fn, value) => {
      if (fn) {
        try {
          Object.defineProperty(fn, 'name', { value });
        } catch (e2) {}
        Object.defineProperty(fn, 'adapterName', { value });
      }
    });
    var adapters = {
      getAdapter: (adapters2) => {
        adapters2 = utils.isArray(adapters2) ? adapters2 : [adapters2];
        const { length } = adapters2;
        let nameOrAdapter;
        let adapter;
        for (let i = 0; i < length; i++) {
          nameOrAdapter = adapters2[i];
          if (
            (adapter = utils.isString(nameOrAdapter)
              ? knownAdapters[nameOrAdapter.toLowerCase()]
              : nameOrAdapter)
          ) {
            break;
          }
        }
        if (!adapter) {
          if (adapter === false) {
            throw new AxiosError(
              `Adapter ${nameOrAdapter} is not supported by the environment`,
              'ERR_NOT_SUPPORT'
            );
          }
          throw new Error(
            utils.hasOwnProp(knownAdapters, nameOrAdapter)
              ? `Adapter '${nameOrAdapter}' is not available in the build`
              : `Unknown adapter '${nameOrAdapter}'`
          );
        }
        if (!utils.isFunction(adapter)) {
          throw new TypeError('adapter is not a function');
        }
        return adapter;
      },
      adapters: knownAdapters,
    };
    function throwIfCancellationRequested(config2) {
      if (config2.cancelToken) {
        config2.cancelToken.throwIfRequested();
      }
      if (config2.signal && config2.signal.aborted) {
        throw new CanceledError(null, config2);
      }
    }
    function dispatchRequest(config2) {
      throwIfCancellationRequested(config2);
      config2.headers = AxiosHeaders$1.from(config2.headers);
      config2.data = transformData.call(config2, config2.transformRequest);
      if (['post', 'put', 'patch'].indexOf(config2.method) !== -1) {
        config2.headers.setContentType(
          'application/x-www-form-urlencoded',
          false
        );
      }
      const adapter = adapters.getAdapter(
        config2.adapter || defaults$1.adapter
      );
      return adapter(config2).then(
        function onAdapterResolution(response) {
          throwIfCancellationRequested(config2);
          response.data = transformData.call(
            config2,
            config2.transformResponse,
            response
          );
          response.headers = AxiosHeaders$1.from(response.headers);
          return response;
        },
        function onAdapterRejection(reason) {
          if (!isCancel(reason)) {
            throwIfCancellationRequested(config2);
            if (reason && reason.response) {
              reason.response.data = transformData.call(
                config2,
                config2.transformResponse,
                reason.response
              );
              reason.response.headers = AxiosHeaders$1.from(
                reason.response.headers
              );
            }
          }
          return Promise.reject(reason);
        }
      );
    }
    var headersToObject = (thing) =>
      thing instanceof AxiosHeaders$1 ? thing.toJSON() : thing;
    function mergeConfig(config1, config2) {
      config2 = config2 || {};
      const config3 = {};
      function getMergedValue(target, source, caseless) {
        if (utils.isPlainObject(target) && utils.isPlainObject(source)) {
          return utils.merge.call({ caseless }, target, source);
        } else if (utils.isPlainObject(source)) {
          return utils.merge({}, source);
        } else if (utils.isArray(source)) {
          return source.slice();
        }
        return source;
      }
      function mergeDeepProperties(a, b, caseless) {
        if (!utils.isUndefined(b)) {
          return getMergedValue(a, b, caseless);
        } else if (!utils.isUndefined(a)) {
          return getMergedValue(void 0, a, caseless);
        }
      }
      function valueFromConfig2(a, b) {
        if (!utils.isUndefined(b)) {
          return getMergedValue(void 0, b);
        }
      }
      function defaultToConfig2(a, b) {
        if (!utils.isUndefined(b)) {
          return getMergedValue(void 0, b);
        } else if (!utils.isUndefined(a)) {
          return getMergedValue(void 0, a);
        }
      }
      function mergeDirectKeys(a, b, prop) {
        if (prop in config2) {
          return getMergedValue(a, b);
        } else if (prop in config1) {
          return getMergedValue(void 0, a);
        }
      }
      const mergeMap = {
        url: valueFromConfig2,
        method: valueFromConfig2,
        data: valueFromConfig2,
        baseURL: defaultToConfig2,
        transformRequest: defaultToConfig2,
        transformResponse: defaultToConfig2,
        paramsSerializer: defaultToConfig2,
        timeout: defaultToConfig2,
        timeoutMessage: defaultToConfig2,
        withCredentials: defaultToConfig2,
        adapter: defaultToConfig2,
        responseType: defaultToConfig2,
        xsrfCookieName: defaultToConfig2,
        xsrfHeaderName: defaultToConfig2,
        onUploadProgress: defaultToConfig2,
        onDownloadProgress: defaultToConfig2,
        decompress: defaultToConfig2,
        maxContentLength: defaultToConfig2,
        maxBodyLength: defaultToConfig2,
        beforeRedirect: defaultToConfig2,
        transport: defaultToConfig2,
        httpAgent: defaultToConfig2,
        httpsAgent: defaultToConfig2,
        cancelToken: defaultToConfig2,
        socketPath: defaultToConfig2,
        responseEncoding: defaultToConfig2,
        validateStatus: mergeDirectKeys,
        headers: (a, b) =>
          mergeDeepProperties(headersToObject(a), headersToObject(b), true),
      };
      utils.forEach(
        Object.keys(Object.assign({}, config1, config2)),
        function computeConfigValue(prop) {
          const merge3 = mergeMap[prop] || mergeDeepProperties;
          const configValue = merge3(config1[prop], config2[prop], prop);
          (utils.isUndefined(configValue) && merge3 !== mergeDirectKeys) ||
            (config3[prop] = configValue);
        }
      );
      return config3;
    }
    var validators$1 = {};
    ['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(
      (type, i) => {
        validators$1[type] = function validator2(thing) {
          return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;
        };
      }
    );
    var deprecatedWarnings = {};
    validators$1.transitional = function transitional(
      validator2,
      version,
      message
    ) {
      function formatMessage(opt, desc) {
        return (
          '[Axios v' +
          VERSION +
          "] Transitional option '" +
          opt +
          "'" +
          desc +
          (message ? '. ' + message : '')
        );
      }
      return (value, opt, opts) => {
        if (validator2 === false) {
          throw new AxiosError(
            formatMessage(
              opt,
              ' has been removed' + (version ? ' in ' + version : '')
            ),
            AxiosError.ERR_DEPRECATED
          );
        }
        if (version && !deprecatedWarnings[opt]) {
          deprecatedWarnings[opt] = true;
          console.warn(
            formatMessage(
              opt,
              ' has been deprecated since v' +
                version +
                ' and will be removed in the near future'
            )
          );
        }
        return validator2 ? validator2(value, opt, opts) : true;
      };
    };
    function assertOptions(options, schema, allowUnknown) {
      if (typeof options !== 'object') {
        throw new AxiosError(
          'options must be an object',
          AxiosError.ERR_BAD_OPTION_VALUE
        );
      }
      const keys = Object.keys(options);
      let i = keys.length;
      while (i-- > 0) {
        const opt = keys[i];
        const validator2 = schema[opt];
        if (validator2) {
          const value = options[opt];
          const result = value === void 0 || validator2(value, opt, options);
          if (result !== true) {
            throw new AxiosError(
              'option ' + opt + ' must be ' + result,
              AxiosError.ERR_BAD_OPTION_VALUE
            );
          }
          continue;
        }
        if (allowUnknown !== true) {
          throw new AxiosError(
            'Unknown option ' + opt,
            AxiosError.ERR_BAD_OPTION
          );
        }
      }
    }
    var validator = {
      assertOptions,
      validators: validators$1,
    };
    var validators = validator.validators;
    var Axios = class {
      constructor(instanceConfig) {
        this.defaults = instanceConfig;
        this.interceptors = {
          request: new InterceptorManager$1(),
          response: new InterceptorManager$1(),
        };
      }
      /**
       * Dispatch a request
       *
       * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)
       * @param {?Object} config
       *
       * @returns {Promise} The Promise to be fulfilled
       */
      request(configOrUrl, config2) {
        if (typeof configOrUrl === 'string') {
          config2 = config2 || {};
          config2.url = configOrUrl;
        } else {
          config2 = configOrUrl || {};
        }
        config2 = mergeConfig(this.defaults, config2);
        const { transitional, paramsSerializer, headers } = config2;
        if (transitional !== void 0) {
          validator.assertOptions(
            transitional,
            {
              silentJSONParsing: validators.transitional(validators.boolean),
              forcedJSONParsing: validators.transitional(validators.boolean),
              clarifyTimeoutError: validators.transitional(validators.boolean),
            },
            false
          );
        }
        if (paramsSerializer != null) {
          if (utils.isFunction(paramsSerializer)) {
            config2.paramsSerializer = {
              serialize: paramsSerializer,
            };
          } else {
            validator.assertOptions(
              paramsSerializer,
              {
                encode: validators.function,
                serialize: validators.function,
              },
              true
            );
          }
        }
        config2.method = (
          config2.method ||
          this.defaults.method ||
          'get'
        ).toLowerCase();
        let contextHeaders;
        contextHeaders =
          headers && utils.merge(headers.common, headers[config2.method]);
        contextHeaders &&
          utils.forEach(
            ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
            (method) => {
              delete headers[method];
            }
          );
        config2.headers = AxiosHeaders$1.concat(contextHeaders, headers);
        const requestInterceptorChain = [];
        let synchronousRequestInterceptors = true;
        this.interceptors.request.forEach(function unshiftRequestInterceptors(
          interceptor
        ) {
          if (
            typeof interceptor.runWhen === 'function' &&
            interceptor.runWhen(config2) === false
          ) {
            return;
          }
          synchronousRequestInterceptors =
            synchronousRequestInterceptors && interceptor.synchronous;
          requestInterceptorChain.unshift(
            interceptor.fulfilled,
            interceptor.rejected
          );
        });
        const responseInterceptorChain = [];
        this.interceptors.response.forEach(function pushResponseInterceptors(
          interceptor
        ) {
          responseInterceptorChain.push(
            interceptor.fulfilled,
            interceptor.rejected
          );
        });
        let promise;
        let i = 0;
        let len;
        if (!synchronousRequestInterceptors) {
          const chain2 = [dispatchRequest.bind(this), void 0];
          chain2.unshift.apply(chain2, requestInterceptorChain);
          chain2.push.apply(chain2, responseInterceptorChain);
          len = chain2.length;
          promise = Promise.resolve(config2);
          while (i < len) {
            promise = promise.then(chain2[i++], chain2[i++]);
          }
          return promise;
        }
        len = requestInterceptorChain.length;
        let newConfig = config2;
        i = 0;
        while (i < len) {
          const onFulfilled = requestInterceptorChain[i++];
          const onRejected = requestInterceptorChain[i++];
          try {
            newConfig = onFulfilled(newConfig);
          } catch (error) {
            onRejected.call(this, error);
            break;
          }
        }
        try {
          promise = dispatchRequest.call(this, newConfig);
        } catch (error) {
          return Promise.reject(error);
        }
        i = 0;
        len = responseInterceptorChain.length;
        while (i < len) {
          promise = promise.then(
            responseInterceptorChain[i++],
            responseInterceptorChain[i++]
          );
        }
        return promise;
      }
      getUri(config2) {
        config2 = mergeConfig(this.defaults, config2);
        const fullPath = buildFullPath(config2.baseURL, config2.url);
        return buildURL(fullPath, config2.params, config2.paramsSerializer);
      }
    };
    utils.forEach(
      ['delete', 'get', 'head', 'options'],
      function forEachMethodNoData(method) {
        Axios.prototype[method] = function (url2, config2) {
          return this.request(
            mergeConfig(config2 || {}, {
              method,
              url: url2,
              data: (config2 || {}).data,
            })
          );
        };
      }
    );
    utils.forEach(
      ['post', 'put', 'patch'],
      function forEachMethodWithData(method) {
        function generateHTTPMethod(isForm) {
          return function httpMethod(url2, data, config2) {
            return this.request(
              mergeConfig(config2 || {}, {
                method,
                headers: isForm
                  ? {
                      'Content-Type': 'multipart/form-data',
                    }
                  : {},
                url: url2,
                data,
              })
            );
          };
        }
        Axios.prototype[method] = generateHTTPMethod();
        Axios.prototype[method + 'Form'] = generateHTTPMethod(true);
      }
    );
    var Axios$1 = Axios;
    var CancelToken = class _CancelToken {
      constructor(executor) {
        if (typeof executor !== 'function') {
          throw new TypeError('executor must be a function.');
        }
        let resolvePromise;
        this.promise = new Promise(function promiseExecutor(resolve) {
          resolvePromise = resolve;
        });
        const token2 = this;
        this.promise.then((cancel) => {
          if (!token2._listeners) return;
          let i = token2._listeners.length;
          while (i-- > 0) {
            token2._listeners[i](cancel);
          }
          token2._listeners = null;
        });
        this.promise.then = (onfulfilled) => {
          let _resolve;
          const promise = new Promise((resolve) => {
            token2.subscribe(resolve);
            _resolve = resolve;
          }).then(onfulfilled);
          promise.cancel = function reject() {
            token2.unsubscribe(_resolve);
          };
          return promise;
        };
        executor(function cancel(message, config2, request2) {
          if (token2.reason) {
            return;
          }
          token2.reason = new CanceledError(message, config2, request2);
          resolvePromise(token2.reason);
        });
      }
      /**
       * Throws a `CanceledError` if cancellation has been requested.
       */
      throwIfRequested() {
        if (this.reason) {
          throw this.reason;
        }
      }
      /**
       * Subscribe to the cancel signal
       */
      subscribe(listener) {
        if (this.reason) {
          listener(this.reason);
          return;
        }
        if (this._listeners) {
          this._listeners.push(listener);
        } else {
          this._listeners = [listener];
        }
      }
      /**
       * Unsubscribe from the cancel signal
       */
      unsubscribe(listener) {
        if (!this._listeners) {
          return;
        }
        const index = this._listeners.indexOf(listener);
        if (index !== -1) {
          this._listeners.splice(index, 1);
        }
      }
      /**
       * Returns an object that contains a new `CancelToken` and a function that, when called,
       * cancels the `CancelToken`.
       */
      static source() {
        let cancel;
        const token2 = new _CancelToken(function executor(c2) {
          cancel = c2;
        });
        return {
          token: token2,
          cancel,
        };
      }
    };
    var CancelToken$1 = CancelToken;
    function spread(callback) {
      return function wrap(arr) {
        return callback.apply(null, arr);
      };
    }
    function isAxiosError(payload) {
      return utils.isObject(payload) && payload.isAxiosError === true;
    }
    var HttpStatusCode = {
      Continue: 100,
      SwitchingProtocols: 101,
      Processing: 102,
      EarlyHints: 103,
      Ok: 200,
      Created: 201,
      Accepted: 202,
      NonAuthoritativeInformation: 203,
      NoContent: 204,
      ResetContent: 205,
      PartialContent: 206,
      MultiStatus: 207,
      AlreadyReported: 208,
      ImUsed: 226,
      MultipleChoices: 300,
      MovedPermanently: 301,
      Found: 302,
      SeeOther: 303,
      NotModified: 304,
      UseProxy: 305,
      Unused: 306,
      TemporaryRedirect: 307,
      PermanentRedirect: 308,
      BadRequest: 400,
      Unauthorized: 401,
      PaymentRequired: 402,
      Forbidden: 403,
      NotFound: 404,
      MethodNotAllowed: 405,
      NotAcceptable: 406,
      ProxyAuthenticationRequired: 407,
      RequestTimeout: 408,
      Conflict: 409,
      Gone: 410,
      LengthRequired: 411,
      PreconditionFailed: 412,
      PayloadTooLarge: 413,
      UriTooLong: 414,
      UnsupportedMediaType: 415,
      RangeNotSatisfiable: 416,
      ExpectationFailed: 417,
      ImATeapot: 418,
      MisdirectedRequest: 421,
      UnprocessableEntity: 422,
      Locked: 423,
      FailedDependency: 424,
      TooEarly: 425,
      UpgradeRequired: 426,
      PreconditionRequired: 428,
      TooManyRequests: 429,
      RequestHeaderFieldsTooLarge: 431,
      UnavailableForLegalReasons: 451,
      InternalServerError: 500,
      NotImplemented: 501,
      BadGateway: 502,
      ServiceUnavailable: 503,
      GatewayTimeout: 504,
      HttpVersionNotSupported: 505,
      VariantAlsoNegotiates: 506,
      InsufficientStorage: 507,
      LoopDetected: 508,
      NotExtended: 510,
      NetworkAuthenticationRequired: 511,
    };
    Object.entries(HttpStatusCode).forEach(([key, value]) => {
      HttpStatusCode[value] = key;
    });
    var HttpStatusCode$1 = HttpStatusCode;
    function createInstance(defaultConfig) {
      const context = new Axios$1(defaultConfig);
      const instance = bind(Axios$1.prototype.request, context);
      utils.extend(instance, Axios$1.prototype, context, { allOwnKeys: true });
      utils.extend(instance, context, null, { allOwnKeys: true });
      instance.create = function create(instanceConfig) {
        return createInstance(mergeConfig(defaultConfig, instanceConfig));
      };
      return instance;
    }
    var axios = createInstance(defaults$1);
    axios.Axios = Axios$1;
    axios.CanceledError = CanceledError;
    axios.CancelToken = CancelToken$1;
    axios.isCancel = isCancel;
    axios.VERSION = VERSION;
    axios.toFormData = toFormData;
    axios.AxiosError = AxiosError;
    axios.Cancel = axios.CanceledError;
    axios.all = function all2(promises) {
      return Promise.all(promises);
    };
    axios.spread = spread;
    axios.isAxiosError = isAxiosError;
    axios.mergeConfig = mergeConfig;
    axios.AxiosHeaders = AxiosHeaders$1;
    axios.formToJSON = (thing) =>
      formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);
    axios.HttpStatusCode = HttpStatusCode$1;
    axios.default = axios;
    module2.exports = axios;
  },
});

// ../../node_modules/react/cjs/react.production.min.js
var require_react_production_min = __commonJS({
  '../../node_modules/react/cjs/react.production.min.js'(exports2) {
    'use strict';
    var l2 = Symbol.for('react.element');
    var n2 = Symbol.for('react.portal');
    var p = Symbol.for('react.fragment');
    var q = Symbol.for('react.strict_mode');
    var r2 = Symbol.for('react.profiler');
    var t2 = Symbol.for('react.provider');
    var u = Symbol.for('react.context');
    var v = Symbol.for('react.forward_ref');
    var w2 = Symbol.for('react.suspense');
    var x = Symbol.for('react.memo');
    var y = Symbol.for('react.lazy');
    var z2 = Symbol.iterator;
    function A2(a) {
      if (null === a || 'object' !== typeof a) return null;
      a = (z2 && a[z2]) || a['@@iterator'];
      return 'function' === typeof a ? a : null;
    }
    var B2 = {
      isMounted: function () {
        return false;
      },
      enqueueForceUpdate: function () {},
      enqueueReplaceState: function () {},
      enqueueSetState: function () {},
    };
    var C = Object.assign;
    var D2 = {};
    function E(a, b, e2) {
      this.props = a;
      this.context = b;
      this.refs = D2;
      this.updater = e2 || B2;
    }
    E.prototype.isReactComponent = {};
    E.prototype.setState = function (a, b) {
      if ('object' !== typeof a && 'function' !== typeof a && null != a)
        throw Error(
          'setState(...): takes an object of state variables to update or a function which returns an object of state variables.'
        );
      this.updater.enqueueSetState(this, a, b, 'setState');
    };
    E.prototype.forceUpdate = function (a) {
      this.updater.enqueueForceUpdate(this, a, 'forceUpdate');
    };
    function F2() {}
    F2.prototype = E.prototype;
    function G(a, b, e2) {
      this.props = a;
      this.context = b;
      this.refs = D2;
      this.updater = e2 || B2;
    }
    var H2 = (G.prototype = new F2());
    H2.constructor = G;
    C(H2, E.prototype);
    H2.isPureReactComponent = true;
    var I2 = Array.isArray;
    var J = Object.prototype.hasOwnProperty;
    var K = { current: null };
    var L2 = { key: true, ref: true, __self: true, __source: true };
    function M(a, b, e2) {
      var d,
        c2 = {},
        k2 = null,
        h2 = null;
      if (null != b)
        for (d in (void 0 !== b.ref && (h2 = b.ref),
        void 0 !== b.key && (k2 = '' + b.key),
        b))
          J.call(b, d) && !L2.hasOwnProperty(d) && (c2[d] = b[d]);
      var g = arguments.length - 2;
      if (1 === g) c2.children = e2;
      else if (1 < g) {
        for (var f = Array(g), m2 = 0; m2 < g; m2++) f[m2] = arguments[m2 + 2];
        c2.children = f;
      }
      if (a && a.defaultProps)
        for (d in ((g = a.defaultProps), g)) void 0 === c2[d] && (c2[d] = g[d]);
      return {
        $$typeof: l2,
        type: a,
        key: k2,
        ref: h2,
        props: c2,
        _owner: K.current,
      };
    }
    function N2(a, b) {
      return {
        $$typeof: l2,
        type: a.type,
        key: b,
        ref: a.ref,
        props: a.props,
        _owner: a._owner,
      };
    }
    function O2(a) {
      return 'object' === typeof a && null !== a && a.$$typeof === l2;
    }
    function escape3(a) {
      var b = { '=': '=0', ':': '=2' };
      return (
        '$' +
        a.replace(/[=:]/g, function (a2) {
          return b[a2];
        })
      );
    }
    var P2 = /\/+/g;
    function Q2(a, b) {
      return 'object' === typeof a && null !== a && null != a.key
        ? escape3('' + a.key)
        : b.toString(36);
    }
    function R(a, b, e2, d, c2) {
      var k2 = typeof a;
      if ('undefined' === k2 || 'boolean' === k2) a = null;
      var h2 = false;
      if (null === a) h2 = true;
      else
        switch (k2) {
          case 'string':
          case 'number':
            h2 = true;
            break;
          case 'object':
            switch (a.$$typeof) {
              case l2:
              case n2:
                h2 = true;
            }
        }
      if (h2)
        return (
          (h2 = a),
          (c2 = c2(h2)),
          (a = '' === d ? '.' + Q2(h2, 0) : d),
          I2(c2)
            ? ((e2 = ''),
              null != a && (e2 = a.replace(P2, '$&/') + '/'),
              R(c2, b, e2, '', function (a2) {
                return a2;
              }))
            : null != c2 &&
              (O2(c2) &&
                (c2 = N2(
                  c2,
                  e2 +
                    (!c2.key || (h2 && h2.key === c2.key)
                      ? ''
                      : ('' + c2.key).replace(P2, '$&/') + '/') +
                    a
                )),
              b.push(c2)),
          1
        );
      h2 = 0;
      d = '' === d ? '.' : d + ':';
      if (I2(a))
        for (var g = 0; g < a.length; g++) {
          k2 = a[g];
          var f = d + Q2(k2, g);
          h2 += R(k2, b, e2, f, c2);
        }
      else if (((f = A2(a)), 'function' === typeof f))
        for (a = f.call(a), g = 0; !(k2 = a.next()).done; )
          (k2 = k2.value), (f = d + Q2(k2, g++)), (h2 += R(k2, b, e2, f, c2));
      else if ('object' === k2)
        throw (
          ((b = String(a)),
          Error(
            'Objects are not valid as a React child (found: ' +
              ('[object Object]' === b
                ? 'object with keys {' + Object.keys(a).join(', ') + '}'
                : b) +
              '). If you meant to render a collection of children, use an array instead.'
          ))
        );
      return h2;
    }
    function S(a, b, e2) {
      if (null == a) return a;
      var d = [],
        c2 = 0;
      R(a, d, '', '', function (a2) {
        return b.call(e2, a2, c2++);
      });
      return d;
    }
    function T2(a) {
      if (-1 === a._status) {
        var b = a._result;
        b = b();
        b.then(
          function (b2) {
            if (0 === a._status || -1 === a._status)
              (a._status = 1), (a._result = b2);
          },
          function (b2) {
            if (0 === a._status || -1 === a._status)
              (a._status = 2), (a._result = b2);
          }
        );
        -1 === a._status && ((a._status = 0), (a._result = b));
      }
      if (1 === a._status) return a._result.default;
      throw a._result;
    }
    var U2 = { current: null };
    var V2 = { transition: null };
    var W = {
      ReactCurrentDispatcher: U2,
      ReactCurrentBatchConfig: V2,
      ReactCurrentOwner: K,
    };
    exports2.Children = {
      map: S,
      forEach: function (a, b, e2) {
        S(
          a,
          function () {
            b.apply(this, arguments);
          },
          e2
        );
      },
      count: function (a) {
        var b = 0;
        S(a, function () {
          b++;
        });
        return b;
      },
      toArray: function (a) {
        return (
          S(a, function (a2) {
            return a2;
          }) || []
        );
      },
      only: function (a) {
        if (!O2(a))
          throw Error(
            'React.Children.only expected to receive a single React element child.'
          );
        return a;
      },
    };
    exports2.Component = E;
    exports2.Fragment = p;
    exports2.Profiler = r2;
    exports2.PureComponent = G;
    exports2.StrictMode = q;
    exports2.Suspense = w2;
    exports2.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = W;
    exports2.cloneElement = function (a, b, e2) {
      if (null === a || void 0 === a)
        throw Error(
          'React.cloneElement(...): The argument must be a React element, but you passed ' +
            a +
            '.'
        );
      var d = C({}, a.props),
        c2 = a.key,
        k2 = a.ref,
        h2 = a._owner;
      if (null != b) {
        void 0 !== b.ref && ((k2 = b.ref), (h2 = K.current));
        void 0 !== b.key && (c2 = '' + b.key);
        if (a.type && a.type.defaultProps) var g = a.type.defaultProps;
        for (f in b)
          J.call(b, f) &&
            !L2.hasOwnProperty(f) &&
            (d[f] = void 0 === b[f] && void 0 !== g ? g[f] : b[f]);
      }
      var f = arguments.length - 2;
      if (1 === f) d.children = e2;
      else if (1 < f) {
        g = Array(f);
        for (var m2 = 0; m2 < f; m2++) g[m2] = arguments[m2 + 2];
        d.children = g;
      }
      return {
        $$typeof: l2,
        type: a.type,
        key: c2,
        ref: k2,
        props: d,
        _owner: h2,
      };
    };
    exports2.createContext = function (a) {
      a = {
        $$typeof: u,
        _currentValue: a,
        _currentValue2: a,
        _threadCount: 0,
        Provider: null,
        Consumer: null,
        _defaultValue: null,
        _globalName: null,
      };
      a.Provider = { $$typeof: t2, _context: a };
      return (a.Consumer = a);
    };
    exports2.createElement = M;
    exports2.createFactory = function (a) {
      var b = M.bind(null, a);
      b.type = a;
      return b;
    };
    exports2.createRef = function () {
      return { current: null };
    };
    exports2.forwardRef = function (a) {
      return { $$typeof: v, render: a };
    };
    exports2.isValidElement = O2;
    exports2.lazy = function (a) {
      return { $$typeof: y, _payload: { _status: -1, _result: a }, _init: T2 };
    };
    exports2.memo = function (a, b) {
      return { $$typeof: x, type: a, compare: void 0 === b ? null : b };
    };
    exports2.startTransition = function (a) {
      var b = V2.transition;
      V2.transition = {};
      try {
        a();
      } finally {
        V2.transition = b;
      }
    };
    exports2.unstable_act = function () {
      throw Error('act(...) is not supported in production builds of React.');
    };
    exports2.useCallback = function (a, b) {
      return U2.current.useCallback(a, b);
    };
    exports2.useContext = function (a) {
      return U2.current.useContext(a);
    };
    exports2.useDebugValue = function () {};
    exports2.useDeferredValue = function (a) {
      return U2.current.useDeferredValue(a);
    };
    exports2.useEffect = function (a, b) {
      return U2.current.useEffect(a, b);
    };
    exports2.useId = function () {
      return U2.current.useId();
    };
    exports2.useImperativeHandle = function (a, b, e2) {
      return U2.current.useImperativeHandle(a, b, e2);
    };
    exports2.useInsertionEffect = function (a, b) {
      return U2.current.useInsertionEffect(a, b);
    };
    exports2.useLayoutEffect = function (a, b) {
      return U2.current.useLayoutEffect(a, b);
    };
    exports2.useMemo = function (a, b) {
      return U2.current.useMemo(a, b);
    };
    exports2.useReducer = function (a, b, e2) {
      return U2.current.useReducer(a, b, e2);
    };
    exports2.useRef = function (a) {
      return U2.current.useRef(a);
    };
    exports2.useState = function (a) {
      return U2.current.useState(a);
    };
    exports2.useSyncExternalStore = function (a, b, e2) {
      return U2.current.useSyncExternalStore(a, b, e2);
    };
    exports2.useTransition = function () {
      return U2.current.useTransition();
    };
    exports2.version = '18.2.0';
  },
});

// ../../node_modules/react/cjs/react.development.js
var require_react_development = __commonJS({
  '../../node_modules/react/cjs/react.development.js'(exports2, module2) {
    'use strict';
    if (process.env.NODE_ENV !== 'production') {
      (function () {
        'use strict';
        if (
          typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&
          typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===
            'function'
        ) {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(
            new Error()
          );
        }
        var ReactVersion = '18.2.0';
        var REACT_ELEMENT_TYPE = Symbol.for('react.element');
        var REACT_PORTAL_TYPE = Symbol.for('react.portal');
        var REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');
        var REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');
        var REACT_PROFILER_TYPE = Symbol.for('react.profiler');
        var REACT_PROVIDER_TYPE = Symbol.for('react.provider');
        var REACT_CONTEXT_TYPE = Symbol.for('react.context');
        var REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');
        var REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');
        var REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');
        var REACT_MEMO_TYPE = Symbol.for('react.memo');
        var REACT_LAZY_TYPE = Symbol.for('react.lazy');
        var REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');
        var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
        var FAUX_ITERATOR_SYMBOL = '@@iterator';
        function getIteratorFn(maybeIterable) {
          if (maybeIterable === null || typeof maybeIterable !== 'object') {
            return null;
          }
          var maybeIterator =
            (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||
            maybeIterable[FAUX_ITERATOR_SYMBOL];
          if (typeof maybeIterator === 'function') {
            return maybeIterator;
          }
          return null;
        }
        var ReactCurrentDispatcher = {
          /**
           * @internal
           * @type {ReactComponent}
           */
          current: null,
        };
        var ReactCurrentBatchConfig = {
          transition: null,
        };
        var ReactCurrentActQueue = {
          current: null,
          // Used to reproduce behavior of `batchedUpdates` in legacy mode.
          isBatchingLegacy: false,
          didScheduleLegacyUpdate: false,
        };
        var ReactCurrentOwner = {
          /**
           * @internal
           * @type {ReactComponent}
           */
          current: null,
        };
        var ReactDebugCurrentFrame = {};
        var currentExtraStackFrame = null;
        function setExtraStackFrame(stack) {
          {
            currentExtraStackFrame = stack;
          }
        }
        {
          ReactDebugCurrentFrame.setExtraStackFrame = function (stack) {
            {
              currentExtraStackFrame = stack;
            }
          };
          ReactDebugCurrentFrame.getCurrentStack = null;
          ReactDebugCurrentFrame.getStackAddendum = function () {
            var stack = '';
            if (currentExtraStackFrame) {
              stack += currentExtraStackFrame;
            }
            var impl = ReactDebugCurrentFrame.getCurrentStack;
            if (impl) {
              stack += impl() || '';
            }
            return stack;
          };
        }
        var enableScopeAPI = false;
        var enableCacheElement = false;
        var enableTransitionTracing = false;
        var enableLegacyHidden = false;
        var enableDebugTracing = false;
        var ReactSharedInternals = {
          ReactCurrentDispatcher,
          ReactCurrentBatchConfig,
          ReactCurrentOwner,
        };
        {
          ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;
          ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;
        }
        function warn(format2) {
          {
            {
              for (
                var _len = arguments.length,
                  args = new Array(_len > 1 ? _len - 1 : 0),
                  _key = 1;
                _key < _len;
                _key++
              ) {
                args[_key - 1] = arguments[_key];
              }
              printWarning('warn', format2, args);
            }
          }
        }
        function error(format2) {
          {
            {
              for (
                var _len2 = arguments.length,
                  args = new Array(_len2 > 1 ? _len2 - 1 : 0),
                  _key2 = 1;
                _key2 < _len2;
                _key2++
              ) {
                args[_key2 - 1] = arguments[_key2];
              }
              printWarning('error', format2, args);
            }
          }
        }
        function printWarning(level, format2, args) {
          {
            var ReactDebugCurrentFrame2 =
              ReactSharedInternals.ReactDebugCurrentFrame;
            var stack = ReactDebugCurrentFrame2.getStackAddendum();
            if (stack !== '') {
              format2 += '%s';
              args = args.concat([stack]);
            }
            var argsWithFormat = args.map(function (item) {
              return String(item);
            });
            argsWithFormat.unshift('Warning: ' + format2);
            Function.prototype.apply.call(
              console[level],
              console,
              argsWithFormat
            );
          }
        }
        var didWarnStateUpdateForUnmountedComponent = {};
        function warnNoop(publicInstance, callerName) {
          {
            var _constructor = publicInstance.constructor;
            var componentName =
              (_constructor &&
                (_constructor.displayName || _constructor.name)) ||
              'ReactClass';
            var warningKey = componentName + '.' + callerName;
            if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
              return;
            }
            error(
              "Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.",
              callerName,
              componentName
            );
            didWarnStateUpdateForUnmountedComponent[warningKey] = true;
          }
        }
        var ReactNoopUpdateQueue = {
          /**
           * Checks whether or not this composite component is mounted.
           * @param {ReactClass} publicInstance The instance we want to test.
           * @return {boolean} True if mounted, false otherwise.
           * @protected
           * @final
           */
          isMounted: function (publicInstance) {
            return false;
          },
          /**
           * Forces an update. This should only be invoked when it is known with
           * certainty that we are **not** in a DOM transaction.
           *
           * You may want to call this when you know that some deeper aspect of the
           * component's state has changed but `setState` was not called.
           *
           * This will not invoke `shouldComponentUpdate`, but it will invoke
           * `componentWillUpdate` and `componentDidUpdate`.
           *
           * @param {ReactClass} publicInstance The instance that should rerender.
           * @param {?function} callback Called after component is updated.
           * @param {?string} callerName name of the calling function in the public API.
           * @internal
           */
          enqueueForceUpdate: function (publicInstance, callback, callerName) {
            warnNoop(publicInstance, 'forceUpdate');
          },
          /**
           * Replaces all of the state. Always use this or `setState` to mutate state.
           * You should treat `this.state` as immutable.
           *
           * There is no guarantee that `this.state` will be immediately updated, so
           * accessing `this.state` after calling this method may return the old value.
           *
           * @param {ReactClass} publicInstance The instance that should rerender.
           * @param {object} completeState Next state.
           * @param {?function} callback Called after component is updated.
           * @param {?string} callerName name of the calling function in the public API.
           * @internal
           */
          enqueueReplaceState: function (
            publicInstance,
            completeState,
            callback,
            callerName
          ) {
            warnNoop(publicInstance, 'replaceState');
          },
          /**
           * Sets a subset of the state. This only exists because _pendingState is
           * internal. This provides a merging strategy that is not available to deep
           * properties which is confusing. TODO: Expose pendingState or don't use it
           * during the merge.
           *
           * @param {ReactClass} publicInstance The instance that should rerender.
           * @param {object} partialState Next partial state to be merged with state.
           * @param {?function} callback Called after component is updated.
           * @param {?string} Name of the calling function in the public API.
           * @internal
           */
          enqueueSetState: function (
            publicInstance,
            partialState,
            callback,
            callerName
          ) {
            warnNoop(publicInstance, 'setState');
          },
        };
        var assign = Object.assign;
        var emptyObject = {};
        {
          Object.freeze(emptyObject);
        }
        function Component(props, context, updater) {
          this.props = props;
          this.context = context;
          this.refs = emptyObject;
          this.updater = updater || ReactNoopUpdateQueue;
        }
        Component.prototype.isReactComponent = {};
        Component.prototype.setState = function (partialState, callback) {
          if (
            typeof partialState !== 'object' &&
            typeof partialState !== 'function' &&
            partialState != null
          ) {
            throw new Error(
              'setState(...): takes an object of state variables to update or a function which returns an object of state variables.'
            );
          }
          this.updater.enqueueSetState(
            this,
            partialState,
            callback,
            'setState'
          );
        };
        Component.prototype.forceUpdate = function (callback) {
          this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
        };
        {
          var deprecatedAPIs = {
            isMounted: [
              'isMounted',
              'Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks.',
            ],
            replaceState: [
              'replaceState',
              'Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236).',
            ],
          };
          var defineDeprecationWarning = function (methodName, info) {
            Object.defineProperty(Component.prototype, methodName, {
              get: function () {
                warn(
                  '%s(...) is deprecated in plain JavaScript React classes. %s',
                  info[0],
                  info[1]
                );
                return void 0;
              },
            });
          };
          for (var fnName in deprecatedAPIs) {
            if (deprecatedAPIs.hasOwnProperty(fnName)) {
              defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
            }
          }
        }
        function ComponentDummy() {}
        ComponentDummy.prototype = Component.prototype;
        function PureComponent(props, context, updater) {
          this.props = props;
          this.context = context;
          this.refs = emptyObject;
          this.updater = updater || ReactNoopUpdateQueue;
        }
        var pureComponentPrototype = (PureComponent.prototype =
          new ComponentDummy());
        pureComponentPrototype.constructor = PureComponent;
        assign(pureComponentPrototype, Component.prototype);
        pureComponentPrototype.isPureReactComponent = true;
        function createRef() {
          var refObject = {
            current: null,
          };
          {
            Object.seal(refObject);
          }
          return refObject;
        }
        var isArrayImpl = Array.isArray;
        function isArray(a) {
          return isArrayImpl(a);
        }
        function typeName(value) {
          {
            var hasToStringTag =
              typeof Symbol === 'function' && Symbol.toStringTag;
            var type =
              (hasToStringTag && value[Symbol.toStringTag]) ||
              value.constructor.name ||
              'Object';
            return type;
          }
        }
        function willCoercionThrow(value) {
          {
            try {
              testStringCoercion(value);
              return false;
            } catch (e2) {
              return true;
            }
          }
        }
        function testStringCoercion(value) {
          return '' + value;
        }
        function checkKeyStringCoercion(value) {
          {
            if (willCoercionThrow(value)) {
              error(
                'The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.',
                typeName(value)
              );
              return testStringCoercion(value);
            }
          }
        }
        function getWrappedName(outerType, innerType, wrapperName) {
          var displayName = outerType.displayName;
          if (displayName) {
            return displayName;
          }
          var functionName = innerType.displayName || innerType.name || '';
          return functionName !== ''
            ? wrapperName + '(' + functionName + ')'
            : wrapperName;
        }
        function getContextName(type) {
          return type.displayName || 'Context';
        }
        function getComponentNameFromType(type) {
          if (type == null) {
            return null;
          }
          {
            if (typeof type.tag === 'number') {
              error(
                'Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.'
              );
            }
          }
          if (typeof type === 'function') {
            return type.displayName || type.name || null;
          }
          if (typeof type === 'string') {
            return type;
          }
          switch (type) {
            case REACT_FRAGMENT_TYPE:
              return 'Fragment';
            case REACT_PORTAL_TYPE:
              return 'Portal';
            case REACT_PROFILER_TYPE:
              return 'Profiler';
            case REACT_STRICT_MODE_TYPE:
              return 'StrictMode';
            case REACT_SUSPENSE_TYPE:
              return 'Suspense';
            case REACT_SUSPENSE_LIST_TYPE:
              return 'SuspenseList';
          }
          if (typeof type === 'object') {
            switch (type.$$typeof) {
              case REACT_CONTEXT_TYPE:
                var context = type;
                return getContextName(context) + '.Consumer';
              case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + '.Provider';
              case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, 'ForwardRef');
              case REACT_MEMO_TYPE:
                var outerName = type.displayName || null;
                if (outerName !== null) {
                  return outerName;
                }
                return getComponentNameFromType(type.type) || 'Memo';
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                  return getComponentNameFromType(init(payload));
                } catch (x) {
                  return null;
                }
              }
            }
          }
          return null;
        }
        var hasOwnProperty = Object.prototype.hasOwnProperty;
        var RESERVED_PROPS = {
          key: true,
          ref: true,
          __self: true,
          __source: true,
        };
        var specialPropKeyWarningShown,
          specialPropRefWarningShown,
          didWarnAboutStringRefs;
        {
          didWarnAboutStringRefs = {};
        }
        function hasValidRef(config2) {
          {
            if (hasOwnProperty.call(config2, 'ref')) {
              var getter = Object.getOwnPropertyDescriptor(config2, 'ref').get;
              if (getter && getter.isReactWarning) {
                return false;
              }
            }
          }
          return config2.ref !== void 0;
        }
        function hasValidKey(config2) {
          {
            if (hasOwnProperty.call(config2, 'key')) {
              var getter = Object.getOwnPropertyDescriptor(config2, 'key').get;
              if (getter && getter.isReactWarning) {
                return false;
              }
            }
          }
          return config2.key !== void 0;
        }
        function defineKeyPropWarningGetter(props, displayName) {
          var warnAboutAccessingKey = function () {
            {
              if (!specialPropKeyWarningShown) {
                specialPropKeyWarningShown = true;
                error(
                  '%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)',
                  displayName
                );
              }
            }
          };
          warnAboutAccessingKey.isReactWarning = true;
          Object.defineProperty(props, 'key', {
            get: warnAboutAccessingKey,
            configurable: true,
          });
        }
        function defineRefPropWarningGetter(props, displayName) {
          var warnAboutAccessingRef = function () {
            {
              if (!specialPropRefWarningShown) {
                specialPropRefWarningShown = true;
                error(
                  '%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)',
                  displayName
                );
              }
            }
          };
          warnAboutAccessingRef.isReactWarning = true;
          Object.defineProperty(props, 'ref', {
            get: warnAboutAccessingRef,
            configurable: true,
          });
        }
        function warnIfStringRefCannotBeAutoConverted(config2) {
          {
            if (
              typeof config2.ref === 'string' &&
              ReactCurrentOwner.current &&
              config2.__self &&
              ReactCurrentOwner.current.stateNode !== config2.__self
            ) {
              var componentName = getComponentNameFromType(
                ReactCurrentOwner.current.type
              );
              if (!didWarnAboutStringRefs[componentName]) {
                error(
                  'Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref',
                  componentName,
                  config2.ref
                );
                didWarnAboutStringRefs[componentName] = true;
              }
            }
          }
        }
        var ReactElement = function (
          type,
          key,
          ref,
          self2,
          source,
          owner,
          props
        ) {
          var element = {
            // This tag allows us to uniquely identify this as a React Element
            $$typeof: REACT_ELEMENT_TYPE,
            // Built-in properties that belong on the element
            type,
            key,
            ref,
            props,
            // Record the component responsible for creating this element.
            _owner: owner,
          };
          {
            element._store = {};
            Object.defineProperty(element._store, 'validated', {
              configurable: false,
              enumerable: false,
              writable: true,
              value: false,
            });
            Object.defineProperty(element, '_self', {
              configurable: false,
              enumerable: false,
              writable: false,
              value: self2,
            });
            Object.defineProperty(element, '_source', {
              configurable: false,
              enumerable: false,
              writable: false,
              value: source,
            });
            if (Object.freeze) {
              Object.freeze(element.props);
              Object.freeze(element);
            }
          }
          return element;
        };
        function createElement(type, config2, children) {
          var propName;
          var props = {};
          var key = null;
          var ref = null;
          var self2 = null;
          var source = null;
          if (config2 != null) {
            if (hasValidRef(config2)) {
              ref = config2.ref;
              {
                warnIfStringRefCannotBeAutoConverted(config2);
              }
            }
            if (hasValidKey(config2)) {
              {
                checkKeyStringCoercion(config2.key);
              }
              key = '' + config2.key;
            }
            self2 = config2.__self === void 0 ? null : config2.__self;
            source = config2.__source === void 0 ? null : config2.__source;
            for (propName in config2) {
              if (
                hasOwnProperty.call(config2, propName) &&
                !RESERVED_PROPS.hasOwnProperty(propName)
              ) {
                props[propName] = config2[propName];
              }
            }
          }
          var childrenLength = arguments.length - 2;
          if (childrenLength === 1) {
            props.children = children;
          } else if (childrenLength > 1) {
            var childArray = Array(childrenLength);
            for (var i = 0; i < childrenLength; i++) {
              childArray[i] = arguments[i + 2];
            }
            {
              if (Object.freeze) {
                Object.freeze(childArray);
              }
            }
            props.children = childArray;
          }
          if (type && type.defaultProps) {
            var defaultProps = type.defaultProps;
            for (propName in defaultProps) {
              if (props[propName] === void 0) {
                props[propName] = defaultProps[propName];
              }
            }
          }
          {
            if (key || ref) {
              var displayName =
                typeof type === 'function'
                  ? type.displayName || type.name || 'Unknown'
                  : type;
              if (key) {
                defineKeyPropWarningGetter(props, displayName);
              }
              if (ref) {
                defineRefPropWarningGetter(props, displayName);
              }
            }
          }
          return ReactElement(
            type,
            key,
            ref,
            self2,
            source,
            ReactCurrentOwner.current,
            props
          );
        }
        function cloneAndReplaceKey(oldElement, newKey) {
          var newElement = ReactElement(
            oldElement.type,
            newKey,
            oldElement.ref,
            oldElement._self,
            oldElement._source,
            oldElement._owner,
            oldElement.props
          );
          return newElement;
        }
        function cloneElement(element, config2, children) {
          if (element === null || element === void 0) {
            throw new Error(
              'React.cloneElement(...): The argument must be a React element, but you passed ' +
                element +
                '.'
            );
          }
          var propName;
          var props = assign({}, element.props);
          var key = element.key;
          var ref = element.ref;
          var self2 = element._self;
          var source = element._source;
          var owner = element._owner;
          if (config2 != null) {
            if (hasValidRef(config2)) {
              ref = config2.ref;
              owner = ReactCurrentOwner.current;
            }
            if (hasValidKey(config2)) {
              {
                checkKeyStringCoercion(config2.key);
              }
              key = '' + config2.key;
            }
            var defaultProps;
            if (element.type && element.type.defaultProps) {
              defaultProps = element.type.defaultProps;
            }
            for (propName in config2) {
              if (
                hasOwnProperty.call(config2, propName) &&
                !RESERVED_PROPS.hasOwnProperty(propName)
              ) {
                if (config2[propName] === void 0 && defaultProps !== void 0) {
                  props[propName] = defaultProps[propName];
                } else {
                  props[propName] = config2[propName];
                }
              }
            }
          }
          var childrenLength = arguments.length - 2;
          if (childrenLength === 1) {
            props.children = children;
          } else if (childrenLength > 1) {
            var childArray = Array(childrenLength);
            for (var i = 0; i < childrenLength; i++) {
              childArray[i] = arguments[i + 2];
            }
            props.children = childArray;
          }
          return ReactElement(
            element.type,
            key,
            ref,
            self2,
            source,
            owner,
            props
          );
        }
        function isValidElement(object) {
          return (
            typeof object === 'object' &&
            object !== null &&
            object.$$typeof === REACT_ELEMENT_TYPE
          );
        }
        var SEPARATOR = '.';
        var SUBSEPARATOR = ':';
        function escape3(key) {
          var escapeRegex = /[=:]/g;
          var escaperLookup = {
            '=': '=0',
            ':': '=2',
          };
          var escapedString = key.replace(escapeRegex, function (match) {
            return escaperLookup[match];
          });
          return '$' + escapedString;
        }
        var didWarnAboutMaps = false;
        var userProvidedKeyEscapeRegex = /\/+/g;
        function escapeUserProvidedKey(text) {
          return text.replace(userProvidedKeyEscapeRegex, '$&/');
        }
        function getElementKey(element, index) {
          if (
            typeof element === 'object' &&
            element !== null &&
            element.key != null
          ) {
            {
              checkKeyStringCoercion(element.key);
            }
            return escape3('' + element.key);
          }
          return index.toString(36);
        }
        function mapIntoArray(
          children,
          array,
          escapedPrefix,
          nameSoFar,
          callback
        ) {
          var type = typeof children;
          if (type === 'undefined' || type === 'boolean') {
            children = null;
          }
          var invokeCallback = false;
          if (children === null) {
            invokeCallback = true;
          } else {
            switch (type) {
              case 'string':
              case 'number':
                invokeCallback = true;
                break;
              case 'object':
                switch (children.$$typeof) {
                  case REACT_ELEMENT_TYPE:
                  case REACT_PORTAL_TYPE:
                    invokeCallback = true;
                }
            }
          }
          if (invokeCallback) {
            var _child = children;
            var mappedChild = callback(_child);
            var childKey =
              nameSoFar === ''
                ? SEPARATOR + getElementKey(_child, 0)
                : nameSoFar;
            if (isArray(mappedChild)) {
              var escapedChildKey = '';
              if (childKey != null) {
                escapedChildKey = escapeUserProvidedKey(childKey) + '/';
              }
              mapIntoArray(
                mappedChild,
                array,
                escapedChildKey,
                '',
                function (c2) {
                  return c2;
                }
              );
            } else if (mappedChild != null) {
              if (isValidElement(mappedChild)) {
                {
                  if (
                    mappedChild.key &&
                    (!_child || _child.key !== mappedChild.key)
                  ) {
                    checkKeyStringCoercion(mappedChild.key);
                  }
                }
                mappedChild = cloneAndReplaceKey(
                  mappedChild,
                  // Keep both the (mapped) and old keys if they differ, just as
                  // traverseAllChildren used to do for objects as children
                  escapedPrefix + // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
                    (mappedChild.key &&
                    (!_child || _child.key !== mappedChild.key)
                      ? // $FlowFixMe Flow incorrectly thinks existing element's key can be a number
                        // eslint-disable-next-line react-internal/safe-string-coercion
                        escapeUserProvidedKey('' + mappedChild.key) + '/'
                      : '') +
                    childKey
                );
              }
              array.push(mappedChild);
            }
            return 1;
          }
          var child;
          var nextName;
          var subtreeCount = 0;
          var nextNamePrefix =
            nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
          if (isArray(children)) {
            for (var i = 0; i < children.length; i++) {
              child = children[i];
              nextName = nextNamePrefix + getElementKey(child, i);
              subtreeCount += mapIntoArray(
                child,
                array,
                escapedPrefix,
                nextName,
                callback
              );
            }
          } else {
            var iteratorFn = getIteratorFn(children);
            if (typeof iteratorFn === 'function') {
              var iterableChildren = children;
              {
                if (iteratorFn === iterableChildren.entries) {
                  if (!didWarnAboutMaps) {
                    warn(
                      'Using Maps as children is not supported. Use an array of keyed ReactElements instead.'
                    );
                  }
                  didWarnAboutMaps = true;
                }
              }
              var iterator = iteratorFn.call(iterableChildren);
              var step;
              var ii2 = 0;
              while (!(step = iterator.next()).done) {
                child = step.value;
                nextName = nextNamePrefix + getElementKey(child, ii2++);
                subtreeCount += mapIntoArray(
                  child,
                  array,
                  escapedPrefix,
                  nextName,
                  callback
                );
              }
            } else if (type === 'object') {
              var childrenString = String(children);
              throw new Error(
                'Objects are not valid as a React child (found: ' +
                  (childrenString === '[object Object]'
                    ? 'object with keys {' +
                      Object.keys(children).join(', ') +
                      '}'
                    : childrenString) +
                  '). If you meant to render a collection of children, use an array instead.'
              );
            }
          }
          return subtreeCount;
        }
        function mapChildren(children, func, context) {
          if (children == null) {
            return children;
          }
          var result = [];
          var count = 0;
          mapIntoArray(children, result, '', '', function (child) {
            return func.call(context, child, count++);
          });
          return result;
        }
        function countChildren(children) {
          var n2 = 0;
          mapChildren(children, function () {
            n2++;
          });
          return n2;
        }
        function forEachChildren(children, forEachFunc, forEachContext) {
          mapChildren(
            children,
            function () {
              forEachFunc.apply(this, arguments);
            },
            forEachContext
          );
        }
        function toArray(children) {
          return (
            mapChildren(children, function (child) {
              return child;
            }) || []
          );
        }
        function onlyChild(children) {
          if (!isValidElement(children)) {
            throw new Error(
              'React.Children.only expected to receive a single React element child.'
            );
          }
          return children;
        }
        function createContext(defaultValue) {
          var context = {
            $$typeof: REACT_CONTEXT_TYPE,
            // As a workaround to support multiple concurrent renderers, we categorize
            // some renderers as primary and others as secondary. We only expect
            // there to be two concurrent renderers at most: React Native (primary) and
            // Fabric (secondary); React DOM (primary) and React ART (secondary).
            // Secondary renderers store their context values on separate fields.
            _currentValue: defaultValue,
            _currentValue2: defaultValue,
            // Used to track how many concurrent renderers this context currently
            // supports within in a single renderer. Such as parallel server rendering.
            _threadCount: 0,
            // These are circular
            Provider: null,
            Consumer: null,
            // Add these to use same hidden class in VM as ServerContext
            _defaultValue: null,
            _globalName: null,
          };
          context.Provider = {
            $$typeof: REACT_PROVIDER_TYPE,
            _context: context,
          };
          var hasWarnedAboutUsingNestedContextConsumers = false;
          var hasWarnedAboutUsingConsumerProvider = false;
          var hasWarnedAboutDisplayNameOnConsumer = false;
          {
            var Consumer = {
              $$typeof: REACT_CONTEXT_TYPE,
              _context: context,
            };
            Object.defineProperties(Consumer, {
              Provider: {
                get: function () {
                  if (!hasWarnedAboutUsingConsumerProvider) {
                    hasWarnedAboutUsingConsumerProvider = true;
                    error(
                      'Rendering <Context.Consumer.Provider> is not supported and will be removed in a future major release. Did you mean to render <Context.Provider> instead?'
                    );
                  }
                  return context.Provider;
                },
                set: function (_Provider) {
                  context.Provider = _Provider;
                },
              },
              _currentValue: {
                get: function () {
                  return context._currentValue;
                },
                set: function (_currentValue) {
                  context._currentValue = _currentValue;
                },
              },
              _currentValue2: {
                get: function () {
                  return context._currentValue2;
                },
                set: function (_currentValue2) {
                  context._currentValue2 = _currentValue2;
                },
              },
              _threadCount: {
                get: function () {
                  return context._threadCount;
                },
                set: function (_threadCount) {
                  context._threadCount = _threadCount;
                },
              },
              Consumer: {
                get: function () {
                  if (!hasWarnedAboutUsingNestedContextConsumers) {
                    hasWarnedAboutUsingNestedContextConsumers = true;
                    error(
                      'Rendering <Context.Consumer.Consumer> is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?'
                    );
                  }
                  return context.Consumer;
                },
              },
              displayName: {
                get: function () {
                  return context.displayName;
                },
                set: function (displayName) {
                  if (!hasWarnedAboutDisplayNameOnConsumer) {
                    warn(
                      "Setting `displayName` on Context.Consumer has no effect. You should set it directly on the context with Context.displayName = '%s'.",
                      displayName
                    );
                    hasWarnedAboutDisplayNameOnConsumer = true;
                  }
                },
              },
            });
            context.Consumer = Consumer;
          }
          {
            context._currentRenderer = null;
            context._currentRenderer2 = null;
          }
          return context;
        }
        var Uninitialized = -1;
        var Pending = 0;
        var Resolved = 1;
        var Rejected = 2;
        function lazyInitializer(payload) {
          if (payload._status === Uninitialized) {
            var ctor = payload._result;
            var thenable = ctor();
            thenable.then(
              function (moduleObject2) {
                if (
                  payload._status === Pending ||
                  payload._status === Uninitialized
                ) {
                  var resolved = payload;
                  resolved._status = Resolved;
                  resolved._result = moduleObject2;
                }
              },
              function (error2) {
                if (
                  payload._status === Pending ||
                  payload._status === Uninitialized
                ) {
                  var rejected = payload;
                  rejected._status = Rejected;
                  rejected._result = error2;
                }
              }
            );
            if (payload._status === Uninitialized) {
              var pending = payload;
              pending._status = Pending;
              pending._result = thenable;
            }
          }
          if (payload._status === Resolved) {
            var moduleObject = payload._result;
            {
              if (moduleObject === void 0) {
                error(
                  "lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))\n\nDid you accidentally put curly braces around the import?",
                  moduleObject
                );
              }
            }
            {
              if (!('default' in moduleObject)) {
                error(
                  "lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))",
                  moduleObject
                );
              }
            }
            return moduleObject.default;
          } else {
            throw payload._result;
          }
        }
        function lazy(ctor) {
          var payload = {
            // We use these fields to store the result.
            _status: Uninitialized,
            _result: ctor,
          };
          var lazyType = {
            $$typeof: REACT_LAZY_TYPE,
            _payload: payload,
            _init: lazyInitializer,
          };
          {
            var defaultProps;
            var propTypes;
            Object.defineProperties(lazyType, {
              defaultProps: {
                configurable: true,
                get: function () {
                  return defaultProps;
                },
                set: function (newDefaultProps) {
                  error(
                    'React.lazy(...): It is not supported to assign `defaultProps` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.'
                  );
                  defaultProps = newDefaultProps;
                  Object.defineProperty(lazyType, 'defaultProps', {
                    enumerable: true,
                  });
                },
              },
              propTypes: {
                configurable: true,
                get: function () {
                  return propTypes;
                },
                set: function (newPropTypes) {
                  error(
                    'React.lazy(...): It is not supported to assign `propTypes` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.'
                  );
                  propTypes = newPropTypes;
                  Object.defineProperty(lazyType, 'propTypes', {
                    enumerable: true,
                  });
                },
              },
            });
          }
          return lazyType;
        }
        function forwardRef(render3) {
          {
            if (render3 != null && render3.$$typeof === REACT_MEMO_TYPE) {
              error(
                'forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...)).'
              );
            } else if (typeof render3 !== 'function') {
              error(
                'forwardRef requires a render function but was given %s.',
                render3 === null ? 'null' : typeof render3
              );
            } else {
              if (render3.length !== 0 && render3.length !== 2) {
                error(
                  'forwardRef render functions accept exactly two parameters: props and ref. %s',
                  render3.length === 1
                    ? 'Did you forget to use the ref parameter?'
                    : 'Any additional parameter will be undefined.'
                );
              }
            }
            if (render3 != null) {
              if (render3.defaultProps != null || render3.propTypes != null) {
                error(
                  'forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?'
                );
              }
            }
          }
          var elementType = {
            $$typeof: REACT_FORWARD_REF_TYPE,
            render: render3,
          };
          {
            var ownName;
            Object.defineProperty(elementType, 'displayName', {
              enumerable: false,
              configurable: true,
              get: function () {
                return ownName;
              },
              set: function (name) {
                ownName = name;
                if (!render3.name && !render3.displayName) {
                  render3.displayName = name;
                }
              },
            });
          }
          return elementType;
        }
        var REACT_MODULE_REFERENCE;
        {
          REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');
        }
        function isValidElementType(type) {
          if (typeof type === 'string' || typeof type === 'function') {
            return true;
          }
          if (
            type === REACT_FRAGMENT_TYPE ||
            type === REACT_PROFILER_TYPE ||
            enableDebugTracing ||
            type === REACT_STRICT_MODE_TYPE ||
            type === REACT_SUSPENSE_TYPE ||
            type === REACT_SUSPENSE_LIST_TYPE ||
            enableLegacyHidden ||
            type === REACT_OFFSCREEN_TYPE ||
            enableScopeAPI ||
            enableCacheElement ||
            enableTransitionTracing
          ) {
            return true;
          }
          if (typeof type === 'object' && type !== null) {
            if (
              type.$$typeof === REACT_LAZY_TYPE ||
              type.$$typeof === REACT_MEMO_TYPE ||
              type.$$typeof === REACT_PROVIDER_TYPE ||
              type.$$typeof === REACT_CONTEXT_TYPE ||
              type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
              // types supported by any Flight configuration anywhere since
              // we don't know which Flight build this will end up being used
              // with.
              type.$$typeof === REACT_MODULE_REFERENCE ||
              type.getModuleId !== void 0
            ) {
              return true;
            }
          }
          return false;
        }
        function memo(type, compare) {
          {
            if (!isValidElementType(type)) {
              error(
                'memo: The first argument must be a component. Instead received: %s',
                type === null ? 'null' : typeof type
              );
            }
          }
          var elementType = {
            $$typeof: REACT_MEMO_TYPE,
            type,
            compare: compare === void 0 ? null : compare,
          };
          {
            var ownName;
            Object.defineProperty(elementType, 'displayName', {
              enumerable: false,
              configurable: true,
              get: function () {
                return ownName;
              },
              set: function (name) {
                ownName = name;
                if (!type.name && !type.displayName) {
                  type.displayName = name;
                }
              },
            });
          }
          return elementType;
        }
        function resolveDispatcher() {
          var dispatcher = ReactCurrentDispatcher.current;
          {
            if (dispatcher === null) {
              error(
                'Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.'
              );
            }
          }
          return dispatcher;
        }
        function useContext(Context) {
          var dispatcher = resolveDispatcher();
          {
            if (Context._context !== void 0) {
              var realContext = Context._context;
              if (realContext.Consumer === Context) {
                error(
                  'Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be removed in a future major release. Did you mean to call useContext(Context) instead?'
                );
              } else if (realContext.Provider === Context) {
                error(
                  'Calling useContext(Context.Provider) is not supported. Did you mean to call useContext(Context) instead?'
                );
              }
            }
          }
          return dispatcher.useContext(Context);
        }
        function useState(initialState) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useState(initialState);
        }
        function useReducer(reducer, initialArg, init) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useReducer(reducer, initialArg, init);
        }
        function useRef(initialValue) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useRef(initialValue);
        }
        function useEffect(create, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useEffect(create, deps);
        }
        function useInsertionEffect(create, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useInsertionEffect(create, deps);
        }
        function useLayoutEffect(create, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useLayoutEffect(create, deps);
        }
        function useCallback(callback, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useCallback(callback, deps);
        }
        function useMemo(create, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useMemo(create, deps);
        }
        function useImperativeHandle(ref, create, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useImperativeHandle(ref, create, deps);
        }
        function useDebugValue(value, formatterFn) {
          {
            var dispatcher = resolveDispatcher();
            return dispatcher.useDebugValue(value, formatterFn);
          }
        }
        function useTransition() {
          var dispatcher = resolveDispatcher();
          return dispatcher.useTransition();
        }
        function useDeferredValue(value) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useDeferredValue(value);
        }
        function useId() {
          var dispatcher = resolveDispatcher();
          return dispatcher.useId();
        }
        function useSyncExternalStore(
          subscribe,
          getSnapshot,
          getServerSnapshot
        ) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useSyncExternalStore(
            subscribe,
            getSnapshot,
            getServerSnapshot
          );
        }
        var disabledDepth = 0;
        var prevLog;
        var prevInfo;
        var prevWarn;
        var prevError;
        var prevGroup;
        var prevGroupCollapsed;
        var prevGroupEnd;
        function disabledLog() {}
        disabledLog.__reactDisabledLog = true;
        function disableLogs() {
          {
            if (disabledDepth === 0) {
              prevLog = console.log;
              prevInfo = console.info;
              prevWarn = console.warn;
              prevError = console.error;
              prevGroup = console.group;
              prevGroupCollapsed = console.groupCollapsed;
              prevGroupEnd = console.groupEnd;
              var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true,
              };
              Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props,
              });
            }
            disabledDepth++;
          }
        }
        function reenableLogs() {
          {
            disabledDepth--;
            if (disabledDepth === 0) {
              var props = {
                configurable: true,
                enumerable: true,
                writable: true,
              };
              Object.defineProperties(console, {
                log: assign({}, props, {
                  value: prevLog,
                }),
                info: assign({}, props, {
                  value: prevInfo,
                }),
                warn: assign({}, props, {
                  value: prevWarn,
                }),
                error: assign({}, props, {
                  value: prevError,
                }),
                group: assign({}, props, {
                  value: prevGroup,
                }),
                groupCollapsed: assign({}, props, {
                  value: prevGroupCollapsed,
                }),
                groupEnd: assign({}, props, {
                  value: prevGroupEnd,
                }),
              });
            }
            if (disabledDepth < 0) {
              error(
                'disabledDepth fell below zero. This is a bug in React. Please file an issue.'
              );
            }
          }
        }
        var ReactCurrentDispatcher$1 =
          ReactSharedInternals.ReactCurrentDispatcher;
        var prefix;
        function describeBuiltInComponentFrame(name, source, ownerFn) {
          {
            if (prefix === void 0) {
              try {
                throw Error();
              } catch (x) {
                var match = x.stack.trim().match(/\n( *(at )?)/);
                prefix = (match && match[1]) || '';
              }
            }
            return '\n' + prefix + name;
          }
        }
        var reentry = false;
        var componentFrameCache;
        {
          var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
          componentFrameCache = new PossiblyWeakMap();
        }
        function describeNativeComponentFrame(fn, construct) {
          if (!fn || reentry) {
            return '';
          }
          {
            var frame = componentFrameCache.get(fn);
            if (frame !== void 0) {
              return frame;
            }
          }
          var control;
          reentry = true;
          var previousPrepareStackTrace = Error.prepareStackTrace;
          Error.prepareStackTrace = void 0;
          var previousDispatcher;
          {
            previousDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = null;
            disableLogs();
          }
          try {
            if (construct) {
              var Fake = function () {
                throw Error();
              };
              Object.defineProperty(Fake.prototype, 'props', {
                set: function () {
                  throw Error();
                },
              });
              if (typeof Reflect === 'object' && Reflect.construct) {
                try {
                  Reflect.construct(Fake, []);
                } catch (x) {
                  control = x;
                }
                Reflect.construct(fn, [], Fake);
              } else {
                try {
                  Fake.call();
                } catch (x) {
                  control = x;
                }
                fn.call(Fake.prototype);
              }
            } else {
              try {
                throw Error();
              } catch (x) {
                control = x;
              }
              fn();
            }
          } catch (sample) {
            if (sample && control && typeof sample.stack === 'string') {
              var sampleLines = sample.stack.split('\n');
              var controlLines = control.stack.split('\n');
              var s2 = sampleLines.length - 1;
              var c2 = controlLines.length - 1;
              while (
                s2 >= 1 &&
                c2 >= 0 &&
                sampleLines[s2] !== controlLines[c2]
              ) {
                c2--;
              }
              for (; s2 >= 1 && c2 >= 0; s2--, c2--) {
                if (sampleLines[s2] !== controlLines[c2]) {
                  if (s2 !== 1 || c2 !== 1) {
                    do {
                      s2--;
                      c2--;
                      if (c2 < 0 || sampleLines[s2] !== controlLines[c2]) {
                        var _frame =
                          '\n' + sampleLines[s2].replace(' at new ', ' at ');
                        if (fn.displayName && _frame.includes('<anonymous>')) {
                          _frame = _frame.replace(
                            '<anonymous>',
                            fn.displayName
                          );
                        }
                        {
                          if (typeof fn === 'function') {
                            componentFrameCache.set(fn, _frame);
                          }
                        }
                        return _frame;
                      }
                    } while (s2 >= 1 && c2 >= 0);
                  }
                  break;
                }
              }
            }
          } finally {
            reentry = false;
            {
              ReactCurrentDispatcher$1.current = previousDispatcher;
              reenableLogs();
            }
            Error.prepareStackTrace = previousPrepareStackTrace;
          }
          var name = fn ? fn.displayName || fn.name : '';
          var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';
          {
            if (typeof fn === 'function') {
              componentFrameCache.set(fn, syntheticFrame);
            }
          }
          return syntheticFrame;
        }
        function describeFunctionComponentFrame(fn, source, ownerFn) {
          {
            return describeNativeComponentFrame(fn, false);
          }
        }
        function shouldConstruct(Component2) {
          var prototype = Component2.prototype;
          return !!(prototype && prototype.isReactComponent);
        }
        function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
          if (type == null) {
            return '';
          }
          if (typeof type === 'function') {
            {
              return describeNativeComponentFrame(type, shouldConstruct(type));
            }
          }
          if (typeof type === 'string') {
            return describeBuiltInComponentFrame(type);
          }
          switch (type) {
            case REACT_SUSPENSE_TYPE:
              return describeBuiltInComponentFrame('Suspense');
            case REACT_SUSPENSE_LIST_TYPE:
              return describeBuiltInComponentFrame('SuspenseList');
          }
          if (typeof type === 'object') {
            switch (type.$$typeof) {
              case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
              case REACT_MEMO_TYPE:
                return describeUnknownElementTypeFrameInDEV(
                  type.type,
                  source,
                  ownerFn
                );
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                  return describeUnknownElementTypeFrameInDEV(
                    init(payload),
                    source,
                    ownerFn
                  );
                } catch (x) {}
              }
            }
          }
          return '';
        }
        var loggedTypeFailures = {};
        var ReactDebugCurrentFrame$1 =
          ReactSharedInternals.ReactDebugCurrentFrame;
        function setCurrentlyValidatingElement(element) {
          {
            if (element) {
              var owner = element._owner;
              var stack = describeUnknownElementTypeFrameInDEV(
                element.type,
                element._source,
                owner ? owner.type : null
              );
              ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
            } else {
              ReactDebugCurrentFrame$1.setExtraStackFrame(null);
            }
          }
        }
        function checkPropTypes(
          typeSpecs,
          values,
          location,
          componentName,
          element
        ) {
          {
            var has = Function.call.bind(hasOwnProperty);
            for (var typeSpecName in typeSpecs) {
              if (has(typeSpecs, typeSpecName)) {
                var error$1 = void 0;
                try {
                  if (typeof typeSpecs[typeSpecName] !== 'function') {
                    var err = Error(
                      (componentName || 'React class') +
                        ': ' +
                        location +
                        ' type `' +
                        typeSpecName +
                        '` is invalid; it must be a function, usually from the `prop-types` package, but received `' +
                        typeof typeSpecs[typeSpecName] +
                        '`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.'
                    );
                    err.name = 'Invariant Violation';
                    throw err;
                  }
                  error$1 = typeSpecs[typeSpecName](
                    values,
                    typeSpecName,
                    componentName,
                    location,
                    null,
                    'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED'
                  );
                } catch (ex) {
                  error$1 = ex;
                }
                if (error$1 && !(error$1 instanceof Error)) {
                  setCurrentlyValidatingElement(element);
                  error(
                    '%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).',
                    componentName || 'React class',
                    location,
                    typeSpecName,
                    typeof error$1
                  );
                  setCurrentlyValidatingElement(null);
                }
                if (
                  error$1 instanceof Error &&
                  !(error$1.message in loggedTypeFailures)
                ) {
                  loggedTypeFailures[error$1.message] = true;
                  setCurrentlyValidatingElement(element);
                  error('Failed %s type: %s', location, error$1.message);
                  setCurrentlyValidatingElement(null);
                }
              }
            }
          }
        }
        function setCurrentlyValidatingElement$1(element) {
          {
            if (element) {
              var owner = element._owner;
              var stack = describeUnknownElementTypeFrameInDEV(
                element.type,
                element._source,
                owner ? owner.type : null
              );
              setExtraStackFrame(stack);
            } else {
              setExtraStackFrame(null);
            }
          }
        }
        var propTypesMisspellWarningShown;
        {
          propTypesMisspellWarningShown = false;
        }
        function getDeclarationErrorAddendum() {
          if (ReactCurrentOwner.current) {
            var name = getComponentNameFromType(ReactCurrentOwner.current.type);
            if (name) {
              return '\n\nCheck the render method of `' + name + '`.';
            }
          }
          return '';
        }
        function getSourceInfoErrorAddendum(source) {
          if (source !== void 0) {
            var fileName = source.fileName.replace(/^.*[\\\/]/, '');
            var lineNumber = source.lineNumber;
            return (
              '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.'
            );
          }
          return '';
        }
        function getSourceInfoErrorAddendumForProps(elementProps) {
          if (elementProps !== null && elementProps !== void 0) {
            return getSourceInfoErrorAddendum(elementProps.__source);
          }
          return '';
        }
        var ownerHasKeyUseWarning = {};
        function getCurrentComponentErrorInfo(parentType) {
          var info = getDeclarationErrorAddendum();
          if (!info) {
            var parentName =
              typeof parentType === 'string'
                ? parentType
                : parentType.displayName || parentType.name;
            if (parentName) {
              info =
                '\n\nCheck the top-level render call using <' +
                parentName +
                '>.';
            }
          }
          return info;
        }
        function validateExplicitKey(element, parentType) {
          if (
            !element._store ||
            element._store.validated ||
            element.key != null
          ) {
            return;
          }
          element._store.validated = true;
          var currentComponentErrorInfo =
            getCurrentComponentErrorInfo(parentType);
          if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
            return;
          }
          ownerHasKeyUseWarning[currentComponentErrorInfo] = true;
          var childOwner = '';
          if (
            element &&
            element._owner &&
            element._owner !== ReactCurrentOwner.current
          ) {
            childOwner =
              ' It was passed a child from ' +
              getComponentNameFromType(element._owner.type) +
              '.';
          }
          {
            setCurrentlyValidatingElement$1(element);
            error(
              'Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.',
              currentComponentErrorInfo,
              childOwner
            );
            setCurrentlyValidatingElement$1(null);
          }
        }
        function validateChildKeys(node, parentType) {
          if (typeof node !== 'object') {
            return;
          }
          if (isArray(node)) {
            for (var i = 0; i < node.length; i++) {
              var child = node[i];
              if (isValidElement(child)) {
                validateExplicitKey(child, parentType);
              }
            }
          } else if (isValidElement(node)) {
            if (node._store) {
              node._store.validated = true;
            }
          } else if (node) {
            var iteratorFn = getIteratorFn(node);
            if (typeof iteratorFn === 'function') {
              if (iteratorFn !== node.entries) {
                var iterator = iteratorFn.call(node);
                var step;
                while (!(step = iterator.next()).done) {
                  if (isValidElement(step.value)) {
                    validateExplicitKey(step.value, parentType);
                  }
                }
              }
            }
          }
        }
        function validatePropTypes(element) {
          {
            var type = element.type;
            if (type === null || type === void 0 || typeof type === 'string') {
              return;
            }
            var propTypes;
            if (typeof type === 'function') {
              propTypes = type.propTypes;
            } else if (
              typeof type === 'object' &&
              (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
                // Inner props are checked in the reconciler.
                type.$$typeof === REACT_MEMO_TYPE)
            ) {
              propTypes = type.propTypes;
            } else {
              return;
            }
            if (propTypes) {
              var name = getComponentNameFromType(type);
              checkPropTypes(propTypes, element.props, 'prop', name, element);
            } else if (
              type.PropTypes !== void 0 &&
              !propTypesMisspellWarningShown
            ) {
              propTypesMisspellWarningShown = true;
              var _name = getComponentNameFromType(type);
              error(
                'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?',
                _name || 'Unknown'
              );
            }
            if (
              typeof type.getDefaultProps === 'function' &&
              !type.getDefaultProps.isReactClassApproved
            ) {
              error(
                'getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.'
              );
            }
          }
        }
        function validateFragmentProps(fragment) {
          {
            var keys = Object.keys(fragment.props);
            for (var i = 0; i < keys.length; i++) {
              var key = keys[i];
              if (key !== 'children' && key !== 'key') {
                setCurrentlyValidatingElement$1(fragment);
                error(
                  'Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.',
                  key
                );
                setCurrentlyValidatingElement$1(null);
                break;
              }
            }
            if (fragment.ref !== null) {
              setCurrentlyValidatingElement$1(fragment);
              error('Invalid attribute `ref` supplied to `React.Fragment`.');
              setCurrentlyValidatingElement$1(null);
            }
          }
        }
        function createElementWithValidation(type, props, children) {
          var validType = isValidElementType(type);
          if (!validType) {
            var info = '';
            if (
              type === void 0 ||
              (typeof type === 'object' &&
                type !== null &&
                Object.keys(type).length === 0)
            ) {
              info +=
                " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
            }
            var sourceInfo = getSourceInfoErrorAddendumForProps(props);
            if (sourceInfo) {
              info += sourceInfo;
            } else {
              info += getDeclarationErrorAddendum();
            }
            var typeString;
            if (type === null) {
              typeString = 'null';
            } else if (isArray(type)) {
              typeString = 'array';
            } else if (
              type !== void 0 &&
              type.$$typeof === REACT_ELEMENT_TYPE
            ) {
              typeString =
                '<' +
                (getComponentNameFromType(type.type) || 'Unknown') +
                ' />';
              info =
                ' Did you accidentally export a JSX literal instead of a component?';
            } else {
              typeString = typeof type;
            }
            {
              error(
                'React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s',
                typeString,
                info
              );
            }
          }
          var element = createElement.apply(this, arguments);
          if (element == null) {
            return element;
          }
          if (validType) {
            for (var i = 2; i < arguments.length; i++) {
              validateChildKeys(arguments[i], type);
            }
          }
          if (type === REACT_FRAGMENT_TYPE) {
            validateFragmentProps(element);
          } else {
            validatePropTypes(element);
          }
          return element;
        }
        var didWarnAboutDeprecatedCreateFactory = false;
        function createFactoryWithValidation(type) {
          var validatedFactory = createElementWithValidation.bind(null, type);
          validatedFactory.type = type;
          {
            if (!didWarnAboutDeprecatedCreateFactory) {
              didWarnAboutDeprecatedCreateFactory = true;
              warn(
                'React.createFactory() is deprecated and will be removed in a future major release. Consider using JSX or use React.createElement() directly instead.'
              );
            }
            Object.defineProperty(validatedFactory, 'type', {
              enumerable: false,
              get: function () {
                warn(
                  'Factory.type is deprecated. Access the class directly before passing it to createFactory.'
                );
                Object.defineProperty(this, 'type', {
                  value: type,
                });
                return type;
              },
            });
          }
          return validatedFactory;
        }
        function cloneElementWithValidation(element, props, children) {
          var newElement = cloneElement.apply(this, arguments);
          for (var i = 2; i < arguments.length; i++) {
            validateChildKeys(arguments[i], newElement.type);
          }
          validatePropTypes(newElement);
          return newElement;
        }
        function startTransition(scope, options) {
          var prevTransition = ReactCurrentBatchConfig.transition;
          ReactCurrentBatchConfig.transition = {};
          var currentTransition = ReactCurrentBatchConfig.transition;
          {
            ReactCurrentBatchConfig.transition._updatedFibers =
              /* @__PURE__ */ new Set();
          }
          try {
            scope();
          } finally {
            ReactCurrentBatchConfig.transition = prevTransition;
            {
              if (prevTransition === null && currentTransition._updatedFibers) {
                var updatedFibersCount = currentTransition._updatedFibers.size;
                if (updatedFibersCount > 10) {
                  warn(
                    'Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table.'
                  );
                }
                currentTransition._updatedFibers.clear();
              }
            }
          }
        }
        var didWarnAboutMessageChannel = false;
        var enqueueTaskImpl = null;
        function enqueueTask(task) {
          if (enqueueTaskImpl === null) {
            try {
              var requireString = ('require' + Math.random()).slice(0, 7);
              var nodeRequire = module2 && module2[requireString];
              enqueueTaskImpl = nodeRequire.call(
                module2,
                'timers'
              ).setImmediate;
            } catch (_err) {
              enqueueTaskImpl = function (callback) {
                {
                  if (didWarnAboutMessageChannel === false) {
                    didWarnAboutMessageChannel = true;
                    if (typeof MessageChannel === 'undefined') {
                      error(
                        'This browser does not have a MessageChannel implementation, so enqueuing tasks via await act(async () => ...) will fail. Please file an issue at https://github.com/facebook/react/issues if you encounter this warning.'
                      );
                    }
                  }
                }
                var channel = new MessageChannel();
                channel.port1.onmessage = callback;
                channel.port2.postMessage(void 0);
              };
            }
          }
          return enqueueTaskImpl(task);
        }
        var actScopeDepth = 0;
        var didWarnNoAwaitAct = false;
        function act(callback) {
          {
            var prevActScopeDepth = actScopeDepth;
            actScopeDepth++;
            if (ReactCurrentActQueue.current === null) {
              ReactCurrentActQueue.current = [];
            }
            var prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;
            var result;
            try {
              ReactCurrentActQueue.isBatchingLegacy = true;
              result = callback();
              if (
                !prevIsBatchingLegacy &&
                ReactCurrentActQueue.didScheduleLegacyUpdate
              ) {
                var queue = ReactCurrentActQueue.current;
                if (queue !== null) {
                  ReactCurrentActQueue.didScheduleLegacyUpdate = false;
                  flushActQueue(queue);
                }
              }
            } catch (error2) {
              popActScope(prevActScopeDepth);
              throw error2;
            } finally {
              ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;
            }
            if (
              result !== null &&
              typeof result === 'object' &&
              typeof result.then === 'function'
            ) {
              var thenableResult = result;
              var wasAwaited = false;
              var thenable = {
                then: function (resolve, reject) {
                  wasAwaited = true;
                  thenableResult.then(
                    function (returnValue2) {
                      popActScope(prevActScopeDepth);
                      if (actScopeDepth === 0) {
                        recursivelyFlushAsyncActWork(
                          returnValue2,
                          resolve,
                          reject
                        );
                      } else {
                        resolve(returnValue2);
                      }
                    },
                    function (error2) {
                      popActScope(prevActScopeDepth);
                      reject(error2);
                    }
                  );
                },
              };
              {
                if (!didWarnNoAwaitAct && typeof Promise !== 'undefined') {
                  Promise.resolve()
                    .then(function () {})
                    .then(function () {
                      if (!wasAwaited) {
                        didWarnNoAwaitAct = true;
                        error(
                          'You called act(async () => ...) without await. This could lead to unexpected testing behaviour, interleaving multiple act calls and mixing their scopes. You should - await act(async () => ...);'
                        );
                      }
                    });
                }
              }
              return thenable;
            } else {
              var returnValue = result;
              popActScope(prevActScopeDepth);
              if (actScopeDepth === 0) {
                var _queue = ReactCurrentActQueue.current;
                if (_queue !== null) {
                  flushActQueue(_queue);
                  ReactCurrentActQueue.current = null;
                }
                var _thenable = {
                  then: function (resolve, reject) {
                    if (ReactCurrentActQueue.current === null) {
                      ReactCurrentActQueue.current = [];
                      recursivelyFlushAsyncActWork(
                        returnValue,
                        resolve,
                        reject
                      );
                    } else {
                      resolve(returnValue);
                    }
                  },
                };
                return _thenable;
              } else {
                var _thenable2 = {
                  then: function (resolve, reject) {
                    resolve(returnValue);
                  },
                };
                return _thenable2;
              }
            }
          }
        }
        function popActScope(prevActScopeDepth) {
          {
            if (prevActScopeDepth !== actScopeDepth - 1) {
              error(
                'You seem to have overlapping act() calls, this is not supported. Be sure to await previous act() calls before making a new one. '
              );
            }
            actScopeDepth = prevActScopeDepth;
          }
        }
        function recursivelyFlushAsyncActWork(returnValue, resolve, reject) {
          {
            var queue = ReactCurrentActQueue.current;
            if (queue !== null) {
              try {
                flushActQueue(queue);
                enqueueTask(function () {
                  if (queue.length === 0) {
                    ReactCurrentActQueue.current = null;
                    resolve(returnValue);
                  } else {
                    recursivelyFlushAsyncActWork(returnValue, resolve, reject);
                  }
                });
              } catch (error2) {
                reject(error2);
              }
            } else {
              resolve(returnValue);
            }
          }
        }
        var isFlushing = false;
        function flushActQueue(queue) {
          {
            if (!isFlushing) {
              isFlushing = true;
              var i = 0;
              try {
                for (; i < queue.length; i++) {
                  var callback = queue[i];
                  do {
                    callback = callback(true);
                  } while (callback !== null);
                }
                queue.length = 0;
              } catch (error2) {
                queue = queue.slice(i + 1);
                throw error2;
              } finally {
                isFlushing = false;
              }
            }
          }
        }
        var createElement$1 = createElementWithValidation;
        var cloneElement$1 = cloneElementWithValidation;
        var createFactory = createFactoryWithValidation;
        var Children = {
          map: mapChildren,
          forEach: forEachChildren,
          count: countChildren,
          toArray,
          only: onlyChild,
        };
        exports2.Children = Children;
        exports2.Component = Component;
        exports2.Fragment = REACT_FRAGMENT_TYPE;
        exports2.Profiler = REACT_PROFILER_TYPE;
        exports2.PureComponent = PureComponent;
        exports2.StrictMode = REACT_STRICT_MODE_TYPE;
        exports2.Suspense = REACT_SUSPENSE_TYPE;
        exports2.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED =
          ReactSharedInternals;
        exports2.cloneElement = cloneElement$1;
        exports2.createContext = createContext;
        exports2.createElement = createElement$1;
        exports2.createFactory = createFactory;
        exports2.createRef = createRef;
        exports2.forwardRef = forwardRef;
        exports2.isValidElement = isValidElement;
        exports2.lazy = lazy;
        exports2.memo = memo;
        exports2.startTransition = startTransition;
        exports2.unstable_act = act;
        exports2.useCallback = useCallback;
        exports2.useContext = useContext;
        exports2.useDebugValue = useDebugValue;
        exports2.useDeferredValue = useDeferredValue;
        exports2.useEffect = useEffect;
        exports2.useId = useId;
        exports2.useImperativeHandle = useImperativeHandle;
        exports2.useInsertionEffect = useInsertionEffect;
        exports2.useLayoutEffect = useLayoutEffect;
        exports2.useMemo = useMemo;
        exports2.useReducer = useReducer;
        exports2.useRef = useRef;
        exports2.useState = useState;
        exports2.useSyncExternalStore = useSyncExternalStore;
        exports2.useTransition = useTransition;
        exports2.version = ReactVersion;
        if (
          typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&
          typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===
            'function'
        ) {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(
            new Error()
          );
        }
      })();
    }
  },
});

// ../../node_modules/react/index.js
var require_react = __commonJS({
  '../../node_modules/react/index.js'(exports2, module2) {
    'use strict';
    if (process.env.NODE_ENV === 'production') {
      module2.exports = require_react_production_min();
    } else {
      module2.exports = require_react_development();
    }
  },
});

// ../../node_modules/react-dom/cjs/react-dom-server-legacy.node.production.min.js
var require_react_dom_server_legacy_node_production_min = __commonJS({
  '../../node_modules/react-dom/cjs/react-dom-server-legacy.node.production.min.js'(
    exports2
  ) {
    'use strict';
    var ea2 = require_react();
    var fa2 = require('stream');
    var n2 = Object.prototype.hasOwnProperty;
    var ha2 =
      /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/;
    var ia2 = {};
    var ja2 = {};
    function ka2(a) {
      if (n2.call(ja2, a)) return true;
      if (n2.call(ia2, a)) return false;
      if (ha2.test(a)) return (ja2[a] = true);
      ia2[a] = true;
      return false;
    }
    function q(a, b, c2, d, f, e2, g) {
      this.acceptsBooleans = 2 === b || 3 === b || 4 === b;
      this.attributeName = d;
      this.attributeNamespace = f;
      this.mustUseProperty = c2;
      this.propertyName = a;
      this.type = b;
      this.sanitizeURL = e2;
      this.removeEmptyString = g;
    }
    var r2 = {};
    'children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style'
      .split(' ')
      .forEach(function (a) {
        r2[a] = new q(a, 0, false, a, null, false, false);
      });
    [
      ['acceptCharset', 'accept-charset'],
      ['className', 'class'],
      ['htmlFor', 'for'],
      ['httpEquiv', 'http-equiv'],
    ].forEach(function (a) {
      var b = a[0];
      r2[b] = new q(b, 1, false, a[1], null, false, false);
    });
    ['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(function (
      a
    ) {
      r2[a] = new q(a, 2, false, a.toLowerCase(), null, false, false);
    });
    [
      'autoReverse',
      'externalResourcesRequired',
      'focusable',
      'preserveAlpha',
    ].forEach(function (a) {
      r2[a] = new q(a, 2, false, a, null, false, false);
    });
    'allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope'
      .split(' ')
      .forEach(function (a) {
        r2[a] = new q(a, 3, false, a.toLowerCase(), null, false, false);
      });
    ['checked', 'multiple', 'muted', 'selected'].forEach(function (a) {
      r2[a] = new q(a, 3, true, a, null, false, false);
    });
    ['capture', 'download'].forEach(function (a) {
      r2[a] = new q(a, 4, false, a, null, false, false);
    });
    ['cols', 'rows', 'size', 'span'].forEach(function (a) {
      r2[a] = new q(a, 6, false, a, null, false, false);
    });
    ['rowSpan', 'start'].forEach(function (a) {
      r2[a] = new q(a, 5, false, a.toLowerCase(), null, false, false);
    });
    var la2 = /[\-:]([a-z])/g;
    function ma2(a) {
      return a[1].toUpperCase();
    }
    'accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height'
      .split(' ')
      .forEach(function (a) {
        var b = a.replace(la2, ma2);
        r2[b] = new q(b, 1, false, a, null, false, false);
      });
    'xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type'
      .split(' ')
      .forEach(function (a) {
        var b = a.replace(la2, ma2);
        r2[b] = new q(
          b,
          1,
          false,
          a,
          'http://www.w3.org/1999/xlink',
          false,
          false
        );
      });
    ['xml:base', 'xml:lang', 'xml:space'].forEach(function (a) {
      var b = a.replace(la2, ma2);
      r2[b] = new q(
        b,
        1,
        false,
        a,
        'http://www.w3.org/XML/1998/namespace',
        false,
        false
      );
    });
    ['tabIndex', 'crossOrigin'].forEach(function (a) {
      r2[a] = new q(a, 1, false, a.toLowerCase(), null, false, false);
    });
    r2.xlinkHref = new q(
      'xlinkHref',
      1,
      false,
      'xlink:href',
      'http://www.w3.org/1999/xlink',
      true,
      false
    );
    ['src', 'href', 'action', 'formAction'].forEach(function (a) {
      r2[a] = new q(a, 1, false, a.toLowerCase(), null, true, true);
    });
    var t2 = {
      animationIterationCount: true,
      aspectRatio: true,
      borderImageOutset: true,
      borderImageSlice: true,
      borderImageWidth: true,
      boxFlex: true,
      boxFlexGroup: true,
      boxOrdinalGroup: true,
      columnCount: true,
      columns: true,
      flex: true,
      flexGrow: true,
      flexPositive: true,
      flexShrink: true,
      flexNegative: true,
      flexOrder: true,
      gridArea: true,
      gridRow: true,
      gridRowEnd: true,
      gridRowSpan: true,
      gridRowStart: true,
      gridColumn: true,
      gridColumnEnd: true,
      gridColumnSpan: true,
      gridColumnStart: true,
      fontWeight: true,
      lineClamp: true,
      lineHeight: true,
      opacity: true,
      order: true,
      orphans: true,
      tabSize: true,
      widows: true,
      zIndex: true,
      zoom: true,
      fillOpacity: true,
      floodOpacity: true,
      stopOpacity: true,
      strokeDasharray: true,
      strokeDashoffset: true,
      strokeMiterlimit: true,
      strokeOpacity: true,
      strokeWidth: true,
    };
    var na2 = ['Webkit', 'ms', 'Moz', 'O'];
    Object.keys(t2).forEach(function (a) {
      na2.forEach(function (b) {
        b = b + a.charAt(0).toUpperCase() + a.substring(1);
        t2[b] = t2[a];
      });
    });
    var oa2 = /["'&<>]/;
    function u(a) {
      if ('boolean' === typeof a || 'number' === typeof a) return '' + a;
      a = '' + a;
      var b = oa2.exec(a);
      if (b) {
        var c2 = '',
          d,
          f = 0;
        for (d = b.index; d < a.length; d++) {
          switch (a.charCodeAt(d)) {
            case 34:
              b = '&quot;';
              break;
            case 38:
              b = '&amp;';
              break;
            case 39:
              b = '&#x27;';
              break;
            case 60:
              b = '&lt;';
              break;
            case 62:
              b = '&gt;';
              break;
            default:
              continue;
          }
          f !== d && (c2 += a.substring(f, d));
          f = d + 1;
          c2 += b;
        }
        a = f !== d ? c2 + a.substring(f, d) : c2;
      }
      return a;
    }
    var pa2 = /([A-Z])/g;
    var qa2 = /^ms-/;
    var ra2 = Array.isArray;
    function v(a, b) {
      return { insertionMode: a, selectedValue: b };
    }
    function sa2(a, b, c2) {
      switch (b) {
        case 'select':
          return v(1, null != c2.value ? c2.value : c2.defaultValue);
        case 'svg':
          return v(2, null);
        case 'math':
          return v(3, null);
        case 'foreignObject':
          return v(1, null);
        case 'table':
          return v(4, null);
        case 'thead':
        case 'tbody':
        case 'tfoot':
          return v(5, null);
        case 'colgroup':
          return v(7, null);
        case 'tr':
          return v(6, null);
      }
      return 4 <= a.insertionMode || 0 === a.insertionMode ? v(1, null) : a;
    }
    var ta2 = /* @__PURE__ */ new Map();
    function ua2(a, b, c2) {
      if ('object' !== typeof c2)
        throw Error(
          "The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX."
        );
      b = true;
      for (var d in c2)
        if (n2.call(c2, d)) {
          var f = c2[d];
          if (null != f && 'boolean' !== typeof f && '' !== f) {
            if (0 === d.indexOf('--')) {
              var e2 = u(d);
              f = u(('' + f).trim());
            } else {
              e2 = d;
              var g = ta2.get(e2);
              void 0 !== g
                ? (e2 = g)
                : ((g = u(
                    e2.replace(pa2, '-$1').toLowerCase().replace(qa2, '-ms-')
                  )),
                  ta2.set(e2, g),
                  (e2 = g));
              f =
                'number' === typeof f
                  ? 0 === f || n2.call(t2, d)
                    ? '' + f
                    : f + 'px'
                  : u(('' + f).trim());
            }
            b
              ? ((b = false), a.push(' style="', e2, ':', f))
              : a.push(';', e2, ':', f);
          }
        }
      b || a.push('"');
    }
    function w2(a, b, c2, d) {
      switch (c2) {
        case 'style':
          ua2(a, b, d);
          return;
        case 'defaultValue':
        case 'defaultChecked':
        case 'innerHTML':
        case 'suppressContentEditableWarning':
        case 'suppressHydrationWarning':
          return;
      }
      if (
        !(2 < c2.length) ||
        ('o' !== c2[0] && 'O' !== c2[0]) ||
        ('n' !== c2[1] && 'N' !== c2[1])
      ) {
        if (((b = r2.hasOwnProperty(c2) ? r2[c2] : null), null !== b)) {
          switch (typeof d) {
            case 'function':
            case 'symbol':
              return;
            case 'boolean':
              if (!b.acceptsBooleans) return;
          }
          c2 = b.attributeName;
          switch (b.type) {
            case 3:
              d && a.push(' ', c2, '=""');
              break;
            case 4:
              true === d
                ? a.push(' ', c2, '=""')
                : false !== d && a.push(' ', c2, '="', u(d), '"');
              break;
            case 5:
              isNaN(d) || a.push(' ', c2, '="', u(d), '"');
              break;
            case 6:
              !isNaN(d) && 1 <= d && a.push(' ', c2, '="', u(d), '"');
              break;
            default:
              b.sanitizeURL && (d = '' + d), a.push(' ', c2, '="', u(d), '"');
          }
        } else if (ka2(c2)) {
          switch (typeof d) {
            case 'function':
            case 'symbol':
              return;
            case 'boolean':
              if (
                ((b = c2.toLowerCase().slice(0, 5)),
                'data-' !== b && 'aria-' !== b)
              )
                return;
          }
          a.push(' ', c2, '="', u(d), '"');
        }
      }
    }
    function x(a, b, c2) {
      if (null != b) {
        if (null != c2)
          throw Error(
            'Can only set one of `children` or `props.dangerouslySetInnerHTML`.'
          );
        if ('object' !== typeof b || !('__html' in b))
          throw Error(
            '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.'
          );
        b = b.__html;
        null !== b && void 0 !== b && a.push('' + b);
      }
    }
    function va2(a) {
      var b = '';
      ea2.Children.forEach(a, function (a2) {
        null != a2 && (b += a2);
      });
      return b;
    }
    function wa2(a, b, c2, d) {
      a.push(z2(c2));
      var f = (c2 = null),
        e2;
      for (e2 in b)
        if (n2.call(b, e2)) {
          var g = b[e2];
          if (null != g)
            switch (e2) {
              case 'children':
                c2 = g;
                break;
              case 'dangerouslySetInnerHTML':
                f = g;
                break;
              default:
                w2(a, d, e2, g);
            }
        }
      a.push('>');
      x(a, f, c2);
      return 'string' === typeof c2 ? (a.push(u(c2)), null) : c2;
    }
    var xa2 = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/;
    var ya2 = /* @__PURE__ */ new Map();
    function z2(a) {
      var b = ya2.get(a);
      if (void 0 === b) {
        if (!xa2.test(a)) throw Error('Invalid tag: ' + a);
        b = '<' + a;
        ya2.set(a, b);
      }
      return b;
    }
    function za2(a, b, c2, d, f) {
      switch (b) {
        case 'select':
          a.push(z2('select'));
          var e2 = null,
            g = null;
          for (l2 in c2)
            if (n2.call(c2, l2)) {
              var h2 = c2[l2];
              if (null != h2)
                switch (l2) {
                  case 'children':
                    e2 = h2;
                    break;
                  case 'dangerouslySetInnerHTML':
                    g = h2;
                    break;
                  case 'defaultValue':
                  case 'value':
                    break;
                  default:
                    w2(a, d, l2, h2);
                }
            }
          a.push('>');
          x(a, g, e2);
          return e2;
        case 'option':
          g = f.selectedValue;
          a.push(z2('option'));
          var k2 = (h2 = null),
            m2 = null;
          var l2 = null;
          for (e2 in c2)
            if (n2.call(c2, e2)) {
              var p = c2[e2];
              if (null != p)
                switch (e2) {
                  case 'children':
                    h2 = p;
                    break;
                  case 'selected':
                    m2 = p;
                    break;
                  case 'dangerouslySetInnerHTML':
                    l2 = p;
                    break;
                  case 'value':
                    k2 = p;
                  default:
                    w2(a, d, e2, p);
                }
            }
          if (null != g)
            if (((c2 = null !== k2 ? '' + k2 : va2(h2)), ra2(g)))
              for (d = 0; d < g.length; d++) {
                if ('' + g[d] === c2) {
                  a.push(' selected=""');
                  break;
                }
              }
            else '' + g === c2 && a.push(' selected=""');
          else m2 && a.push(' selected=""');
          a.push('>');
          x(a, l2, h2);
          return h2;
        case 'textarea':
          a.push(z2('textarea'));
          l2 = g = e2 = null;
          for (h2 in c2)
            if (n2.call(c2, h2) && ((k2 = c2[h2]), null != k2))
              switch (h2) {
                case 'children':
                  l2 = k2;
                  break;
                case 'value':
                  e2 = k2;
                  break;
                case 'defaultValue':
                  g = k2;
                  break;
                case 'dangerouslySetInnerHTML':
                  throw Error(
                    '`dangerouslySetInnerHTML` does not make sense on <textarea>.'
                  );
                default:
                  w2(a, d, h2, k2);
              }
          null === e2 && null !== g && (e2 = g);
          a.push('>');
          if (null != l2) {
            if (null != e2)
              throw Error(
                'If you supply `defaultValue` on a <textarea>, do not pass children.'
              );
            if (ra2(l2) && 1 < l2.length)
              throw Error('<textarea> can only have at most one child.');
            e2 = '' + l2;
          }
          'string' === typeof e2 && '\n' === e2[0] && a.push('\n');
          null !== e2 && a.push(u('' + e2));
          return null;
        case 'input':
          a.push(z2('input'));
          k2 = l2 = h2 = e2 = null;
          for (g in c2)
            if (n2.call(c2, g) && ((m2 = c2[g]), null != m2))
              switch (g) {
                case 'children':
                case 'dangerouslySetInnerHTML':
                  throw Error(
                    'input is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.'
                  );
                case 'defaultChecked':
                  k2 = m2;
                  break;
                case 'defaultValue':
                  h2 = m2;
                  break;
                case 'checked':
                  l2 = m2;
                  break;
                case 'value':
                  e2 = m2;
                  break;
                default:
                  w2(a, d, g, m2);
              }
          null !== l2
            ? w2(a, d, 'checked', l2)
            : null !== k2 && w2(a, d, 'checked', k2);
          null !== e2
            ? w2(a, d, 'value', e2)
            : null !== h2 && w2(a, d, 'value', h2);
          a.push('/>');
          return null;
        case 'menuitem':
          a.push(z2('menuitem'));
          for (var B2 in c2)
            if (n2.call(c2, B2) && ((e2 = c2[B2]), null != e2))
              switch (B2) {
                case 'children':
                case 'dangerouslySetInnerHTML':
                  throw Error(
                    'menuitems cannot have `children` nor `dangerouslySetInnerHTML`.'
                  );
                default:
                  w2(a, d, B2, e2);
              }
          a.push('>');
          return null;
        case 'title':
          a.push(z2('title'));
          e2 = null;
          for (p in c2)
            if (n2.call(c2, p) && ((g = c2[p]), null != g))
              switch (p) {
                case 'children':
                  e2 = g;
                  break;
                case 'dangerouslySetInnerHTML':
                  throw Error(
                    '`dangerouslySetInnerHTML` does not make sense on <title>.'
                  );
                default:
                  w2(a, d, p, g);
              }
          a.push('>');
          return e2;
        case 'listing':
        case 'pre':
          a.push(z2(b));
          g = e2 = null;
          for (k2 in c2)
            if (n2.call(c2, k2) && ((h2 = c2[k2]), null != h2))
              switch (k2) {
                case 'children':
                  e2 = h2;
                  break;
                case 'dangerouslySetInnerHTML':
                  g = h2;
                  break;
                default:
                  w2(a, d, k2, h2);
              }
          a.push('>');
          if (null != g) {
            if (null != e2)
              throw Error(
                'Can only set one of `children` or `props.dangerouslySetInnerHTML`.'
              );
            if ('object' !== typeof g || !('__html' in g))
              throw Error(
                '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.'
              );
            c2 = g.__html;
            null !== c2 &&
              void 0 !== c2 &&
              ('string' === typeof c2 && 0 < c2.length && '\n' === c2[0]
                ? a.push('\n', c2)
                : a.push('' + c2));
          }
          'string' === typeof e2 && '\n' === e2[0] && a.push('\n');
          return e2;
        case 'area':
        case 'base':
        case 'br':
        case 'col':
        case 'embed':
        case 'hr':
        case 'img':
        case 'keygen':
        case 'link':
        case 'meta':
        case 'param':
        case 'source':
        case 'track':
        case 'wbr':
          a.push(z2(b));
          for (var C in c2)
            if (n2.call(c2, C) && ((e2 = c2[C]), null != e2))
              switch (C) {
                case 'children':
                case 'dangerouslySetInnerHTML':
                  throw Error(
                    b +
                      ' is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.'
                  );
                default:
                  w2(a, d, C, e2);
              }
          a.push('/>');
          return null;
        case 'annotation-xml':
        case 'color-profile':
        case 'font-face':
        case 'font-face-src':
        case 'font-face-uri':
        case 'font-face-format':
        case 'font-face-name':
        case 'missing-glyph':
          return wa2(a, c2, b, d);
        case 'html':
          return (
            0 === f.insertionMode && a.push('<!DOCTYPE html>'), wa2(a, c2, b, d)
          );
        default:
          if (-1 === b.indexOf('-') && 'string' !== typeof c2.is)
            return wa2(a, c2, b, d);
          a.push(z2(b));
          g = e2 = null;
          for (m2 in c2)
            if (n2.call(c2, m2) && ((h2 = c2[m2]), null != h2))
              switch (m2) {
                case 'children':
                  e2 = h2;
                  break;
                case 'dangerouslySetInnerHTML':
                  g = h2;
                  break;
                case 'style':
                  ua2(a, d, h2);
                  break;
                case 'suppressContentEditableWarning':
                case 'suppressHydrationWarning':
                  break;
                default:
                  ka2(m2) &&
                    'function' !== typeof h2 &&
                    'symbol' !== typeof h2 &&
                    a.push(' ', m2, '="', u(h2), '"');
              }
          a.push('>');
          x(a, g, e2);
          return e2;
      }
    }
    function Aa2(a, b, c2) {
      a.push('<!--$?--><template id="');
      if (null === c2)
        throw Error(
          'An ID must have been assigned before we can complete the boundary.'
        );
      a.push(c2);
      return a.push('"></template>');
    }
    function Ba2(a, b, c2, d) {
      switch (c2.insertionMode) {
        case 0:
        case 1:
          return (
            a.push('<div hidden id="'),
            a.push(b.segmentPrefix),
            (b = d.toString(16)),
            a.push(b),
            a.push('">')
          );
        case 2:
          return (
            a.push('<svg aria-hidden="true" style="display:none" id="'),
            a.push(b.segmentPrefix),
            (b = d.toString(16)),
            a.push(b),
            a.push('">')
          );
        case 3:
          return (
            a.push('<math aria-hidden="true" style="display:none" id="'),
            a.push(b.segmentPrefix),
            (b = d.toString(16)),
            a.push(b),
            a.push('">')
          );
        case 4:
          return (
            a.push('<table hidden id="'),
            a.push(b.segmentPrefix),
            (b = d.toString(16)),
            a.push(b),
            a.push('">')
          );
        case 5:
          return (
            a.push('<table hidden><tbody id="'),
            a.push(b.segmentPrefix),
            (b = d.toString(16)),
            a.push(b),
            a.push('">')
          );
        case 6:
          return (
            a.push('<table hidden><tr id="'),
            a.push(b.segmentPrefix),
            (b = d.toString(16)),
            a.push(b),
            a.push('">')
          );
        case 7:
          return (
            a.push('<table hidden><colgroup id="'),
            a.push(b.segmentPrefix),
            (b = d.toString(16)),
            a.push(b),
            a.push('">')
          );
        default:
          throw Error('Unknown insertion mode. This is a bug in React.');
      }
    }
    function Ca2(a, b) {
      switch (b.insertionMode) {
        case 0:
        case 1:
          return a.push('</div>');
        case 2:
          return a.push('</svg>');
        case 3:
          return a.push('</math>');
        case 4:
          return a.push('</table>');
        case 5:
          return a.push('</tbody></table>');
        case 6:
          return a.push('</tr></table>');
        case 7:
          return a.push('</colgroup></table>');
        default:
          throw Error('Unknown insertion mode. This is a bug in React.');
      }
    }
    var Da2 = /[<\u2028\u2029]/g;
    function Ea2(a) {
      return JSON.stringify(a).replace(Da2, function (a2) {
        switch (a2) {
          case '<':
            return '\\u003c';
          case '\u2028':
            return '\\u2028';
          case '\u2029':
            return '\\u2029';
          default:
            throw Error(
              'escapeJSStringsForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React'
            );
        }
      });
    }
    function Fa2(a, b) {
      b = void 0 === b ? '' : b;
      return {
        bootstrapChunks: [],
        startInlineScript: '<script>',
        placeholderPrefix: b + 'P:',
        segmentPrefix: b + 'S:',
        boundaryPrefix: b + 'B:',
        idPrefix: b,
        nextSuspenseID: 0,
        sentCompleteSegmentFunction: false,
        sentCompleteBoundaryFunction: false,
        sentClientRenderFunction: false,
        generateStaticMarkup: a,
      };
    }
    function Ga2() {
      return { insertionMode: 1, selectedValue: null };
    }
    function Ha2(a, b, c2, d) {
      if (c2.generateStaticMarkup) return a.push(u(b)), false;
      '' === b ? (a = d) : (d && a.push('<!-- -->'), a.push(u(b)), (a = true));
      return a;
    }
    var A2 = Object.assign;
    var Ia2 = Symbol.for('react.element');
    var Ja2 = Symbol.for('react.portal');
    var Ka2 = Symbol.for('react.fragment');
    var La2 = Symbol.for('react.strict_mode');
    var Ma2 = Symbol.for('react.profiler');
    var Na2 = Symbol.for('react.provider');
    var Oa2 = Symbol.for('react.context');
    var Pa2 = Symbol.for('react.forward_ref');
    var Qa2 = Symbol.for('react.suspense');
    var Ra2 = Symbol.for('react.suspense_list');
    var Sa2 = Symbol.for('react.memo');
    var Ta2 = Symbol.for('react.lazy');
    var Ua2 = Symbol.for('react.scope');
    var Va2 = Symbol.for('react.debug_trace_mode');
    var Wa2 = Symbol.for('react.legacy_hidden');
    var Xa = Symbol.for('react.default_value');
    var Ya = Symbol.iterator;
    function Za(a) {
      if (null == a) return null;
      if ('function' === typeof a) return a.displayName || a.name || null;
      if ('string' === typeof a) return a;
      switch (a) {
        case Ka2:
          return 'Fragment';
        case Ja2:
          return 'Portal';
        case Ma2:
          return 'Profiler';
        case La2:
          return 'StrictMode';
        case Qa2:
          return 'Suspense';
        case Ra2:
          return 'SuspenseList';
      }
      if ('object' === typeof a)
        switch (a.$$typeof) {
          case Oa2:
            return (a.displayName || 'Context') + '.Consumer';
          case Na2:
            return (a._context.displayName || 'Context') + '.Provider';
          case Pa2:
            var b = a.render;
            a = a.displayName;
            a ||
              ((a = b.displayName || b.name || ''),
              (a = '' !== a ? 'ForwardRef(' + a + ')' : 'ForwardRef'));
            return a;
          case Sa2:
            return (
              (b = a.displayName || null), null !== b ? b : Za(a.type) || 'Memo'
            );
          case Ta2:
            b = a._payload;
            a = a._init;
            try {
              return Za(a(b));
            } catch (c2) {}
        }
      return null;
    }
    var $a2 = {};
    function ab2(a, b) {
      a = a.contextTypes;
      if (!a) return $a2;
      var c2 = {},
        d;
      for (d in a) c2[d] = b[d];
      return c2;
    }
    var D2 = null;
    function E(a, b) {
      if (a !== b) {
        a.context._currentValue2 = a.parentValue;
        a = a.parent;
        var c2 = b.parent;
        if (null === a) {
          if (null !== c2)
            throw Error(
              'The stacks must reach the root at the same time. This is a bug in React.'
            );
        } else {
          if (null === c2)
            throw Error(
              'The stacks must reach the root at the same time. This is a bug in React.'
            );
          E(a, c2);
        }
        b.context._currentValue2 = b.value;
      }
    }
    function bb(a) {
      a.context._currentValue2 = a.parentValue;
      a = a.parent;
      null !== a && bb(a);
    }
    function cb(a) {
      var b = a.parent;
      null !== b && cb(b);
      a.context._currentValue2 = a.value;
    }
    function db(a, b) {
      a.context._currentValue2 = a.parentValue;
      a = a.parent;
      if (null === a)
        throw Error(
          'The depth must equal at least at zero before reaching the root. This is a bug in React.'
        );
      a.depth === b.depth ? E(a, b) : db(a, b);
    }
    function eb(a, b) {
      var c2 = b.parent;
      if (null === c2)
        throw Error(
          'The depth must equal at least at zero before reaching the root. This is a bug in React.'
        );
      a.depth === c2.depth ? E(a, c2) : eb(a, c2);
      b.context._currentValue2 = b.value;
    }
    function F2(a) {
      var b = D2;
      b !== a &&
        (null === b
          ? cb(a)
          : null === a
          ? bb(b)
          : b.depth === a.depth
          ? E(b, a)
          : b.depth > a.depth
          ? db(b, a)
          : eb(b, a),
        (D2 = a));
    }
    var fb = {
      isMounted: function () {
        return false;
      },
      enqueueSetState: function (a, b) {
        a = a._reactInternals;
        null !== a.queue && a.queue.push(b);
      },
      enqueueReplaceState: function (a, b) {
        a = a._reactInternals;
        a.replace = true;
        a.queue = [b];
      },
      enqueueForceUpdate: function () {},
    };
    function gb(a, b, c2, d) {
      var f = void 0 !== a.state ? a.state : null;
      a.updater = fb;
      a.props = c2;
      a.state = f;
      var e2 = { queue: [], replace: false };
      a._reactInternals = e2;
      var g = b.contextType;
      a.context = 'object' === typeof g && null !== g ? g._currentValue2 : d;
      g = b.getDerivedStateFromProps;
      'function' === typeof g &&
        ((g = g(c2, f)),
        (f = null === g || void 0 === g ? f : A2({}, f, g)),
        (a.state = f));
      if (
        'function' !== typeof b.getDerivedStateFromProps &&
        'function' !== typeof a.getSnapshotBeforeUpdate &&
        ('function' === typeof a.UNSAFE_componentWillMount ||
          'function' === typeof a.componentWillMount)
      )
        if (
          ((b = a.state),
          'function' === typeof a.componentWillMount && a.componentWillMount(),
          'function' === typeof a.UNSAFE_componentWillMount &&
            a.UNSAFE_componentWillMount(),
          b !== a.state && fb.enqueueReplaceState(a, a.state, null),
          null !== e2.queue && 0 < e2.queue.length)
        )
          if (
            ((b = e2.queue),
            (g = e2.replace),
            (e2.queue = null),
            (e2.replace = false),
            g && 1 === b.length)
          )
            a.state = b[0];
          else {
            e2 = g ? b[0] : a.state;
            f = true;
            for (g = g ? 1 : 0; g < b.length; g++) {
              var h2 = b[g];
              h2 = 'function' === typeof h2 ? h2.call(a, e2, c2, d) : h2;
              null != h2 &&
                (f ? ((f = false), (e2 = A2({}, e2, h2))) : A2(e2, h2));
            }
            a.state = e2;
          }
        else e2.queue = null;
    }
    var hb = { id: 1, overflow: '' };
    function ib(a, b, c2) {
      var d = a.id;
      a = a.overflow;
      var f = 32 - G(d) - 1;
      d &= ~(1 << f);
      c2 += 1;
      var e2 = 32 - G(b) + f;
      if (30 < e2) {
        var g = f - (f % 5);
        e2 = (d & ((1 << g) - 1)).toString(32);
        d >>= g;
        f -= g;
        return { id: (1 << (32 - G(b) + f)) | (c2 << f) | d, overflow: e2 + a };
      }
      return { id: (1 << e2) | (c2 << f) | d, overflow: a };
    }
    var G = Math.clz32 ? Math.clz32 : jb;
    var kb = Math.log;
    var lb = Math.LN2;
    function jb(a) {
      a >>>= 0;
      return 0 === a ? 32 : (31 - ((kb(a) / lb) | 0)) | 0;
    }
    function mb(a, b) {
      return (a === b && (0 !== a || 1 / a === 1 / b)) || (a !== a && b !== b);
    }
    var nb = 'function' === typeof Object.is ? Object.is : mb;
    var H2 = null;
    var ob = null;
    var I2 = null;
    var J = null;
    var K = false;
    var L2 = false;
    var M = 0;
    var N2 = null;
    var O2 = 0;
    function P2() {
      if (null === H2)
        throw Error(
          'Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.'
        );
      return H2;
    }
    function rb() {
      if (0 < O2)
        throw Error('Rendered more hooks than during the previous render');
      return { memoizedState: null, queue: null, next: null };
    }
    function sb() {
      null === J
        ? null === I2
          ? ((K = false), (I2 = J = rb()))
          : ((K = true), (J = I2))
        : null === J.next
        ? ((K = false), (J = J.next = rb()))
        : ((K = true), (J = J.next));
      return J;
    }
    function tb() {
      ob = H2 = null;
      L2 = false;
      I2 = null;
      O2 = 0;
      J = N2 = null;
    }
    function ub(a, b) {
      return 'function' === typeof b ? b(a) : b;
    }
    function vb(a, b, c2) {
      H2 = P2();
      J = sb();
      if (K) {
        var d = J.queue;
        b = d.dispatch;
        if (null !== N2 && ((c2 = N2.get(d)), void 0 !== c2)) {
          N2.delete(d);
          d = J.memoizedState;
          do (d = a(d, c2.action)), (c2 = c2.next);
          while (null !== c2);
          J.memoizedState = d;
          return [d, b];
        }
        return [J.memoizedState, b];
      }
      a =
        a === ub
          ? 'function' === typeof b
            ? b()
            : b
          : void 0 !== c2
          ? c2(b)
          : b;
      J.memoizedState = a;
      a = J.queue = { last: null, dispatch: null };
      a = a.dispatch = wb.bind(null, H2, a);
      return [J.memoizedState, a];
    }
    function xb(a, b) {
      H2 = P2();
      J = sb();
      b = void 0 === b ? null : b;
      if (null !== J) {
        var c2 = J.memoizedState;
        if (null !== c2 && null !== b) {
          var d = c2[1];
          a: if (null === d) d = false;
          else {
            for (var f = 0; f < d.length && f < b.length; f++)
              if (!nb(b[f], d[f])) {
                d = false;
                break a;
              }
            d = true;
          }
          if (d) return c2[0];
        }
      }
      a = a();
      J.memoizedState = [a, b];
      return a;
    }
    function wb(a, b, c2) {
      if (25 <= O2)
        throw Error(
          'Too many re-renders. React limits the number of renders to prevent an infinite loop.'
        );
      if (a === H2)
        if (
          ((L2 = true),
          (a = { action: c2, next: null }),
          null === N2 && (N2 = /* @__PURE__ */ new Map()),
          (c2 = N2.get(b)),
          void 0 === c2)
        )
          N2.set(b, a);
        else {
          for (b = c2; null !== b.next; ) b = b.next;
          b.next = a;
        }
    }
    function yb() {
      throw Error('startTransition cannot be called during server rendering.');
    }
    function Q2() {}
    var zb = {
      readContext: function (a) {
        return a._currentValue2;
      },
      useContext: function (a) {
        P2();
        return a._currentValue2;
      },
      useMemo: xb,
      useReducer: vb,
      useRef: function (a) {
        H2 = P2();
        J = sb();
        var b = J.memoizedState;
        return null === b ? ((a = { current: a }), (J.memoizedState = a)) : b;
      },
      useState: function (a) {
        return vb(ub, a);
      },
      useInsertionEffect: Q2,
      useLayoutEffect: function () {},
      useCallback: function (a, b) {
        return xb(function () {
          return a;
        }, b);
      },
      useImperativeHandle: Q2,
      useEffect: Q2,
      useDebugValue: Q2,
      useDeferredValue: function (a) {
        P2();
        return a;
      },
      useTransition: function () {
        P2();
        return [false, yb];
      },
      useId: function () {
        var a = ob.treeContext;
        var b = a.overflow;
        a = a.id;
        a = (a & ~(1 << (32 - G(a) - 1))).toString(32) + b;
        var c2 = R;
        if (null === c2)
          throw Error(
            'Invalid hook call. Hooks can only be called inside of the body of a function component.'
          );
        b = M++;
        a = ':' + c2.idPrefix + 'R' + a;
        0 < b && (a += 'H' + b.toString(32));
        return a + ':';
      },
      useMutableSource: function (a, b) {
        P2();
        return b(a._source);
      },
      useSyncExternalStore: function (a, b, c2) {
        if (void 0 === c2)
          throw Error(
            'Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.'
          );
        return c2();
      },
    };
    var R = null;
    var Ab =
      ea2.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED
        .ReactCurrentDispatcher;
    function Bb(a) {
      console.error(a);
      return null;
    }
    function S() {}
    function Cb(a, b, c2, d, f, e2, g, h2, k2) {
      var m2 = [],
        l2 = /* @__PURE__ */ new Set();
      b = {
        destination: null,
        responseState: b,
        progressiveChunkSize: void 0 === d ? 12800 : d,
        status: 0,
        fatalError: null,
        nextSegmentId: 0,
        allPendingTasks: 0,
        pendingRootTasks: 0,
        completedRootSegment: null,
        abortableTasks: l2,
        pingedTasks: m2,
        clientRenderedBoundaries: [],
        completedBoundaries: [],
        partialBoundaries: [],
        onError: void 0 === f ? Bb : f,
        onAllReady: void 0 === e2 ? S : e2,
        onShellReady: void 0 === g ? S : g,
        onShellError: void 0 === h2 ? S : h2,
        onFatalError: void 0 === k2 ? S : k2,
      };
      c2 = T2(b, 0, null, c2, false, false);
      c2.parentFlushed = true;
      a = Db(b, a, null, c2, l2, $a2, null, hb);
      m2.push(a);
      return b;
    }
    function Db(a, b, c2, d, f, e2, g, h2) {
      a.allPendingTasks++;
      null === c2 ? a.pendingRootTasks++ : c2.pendingTasks++;
      var k2 = {
        node: b,
        ping: function () {
          var b2 = a.pingedTasks;
          b2.push(k2);
          1 === b2.length && Eb(a);
        },
        blockedBoundary: c2,
        blockedSegment: d,
        abortSet: f,
        legacyContext: e2,
        context: g,
        treeContext: h2,
      };
      f.add(k2);
      return k2;
    }
    function T2(a, b, c2, d, f, e2) {
      return {
        status: 0,
        id: -1,
        index: b,
        parentFlushed: false,
        chunks: [],
        children: [],
        formatContext: d,
        boundary: c2,
        lastPushedText: f,
        textEmbedded: e2,
      };
    }
    function U2(a, b) {
      a = a.onError(b);
      if (null != a && 'string' !== typeof a)
        throw Error(
          'onError returned something with a type other than "string". onError should return a string and may return null or undefined but must not return anything else. It received something of type "' +
            typeof a +
            '" instead'
        );
      return a;
    }
    function V2(a, b) {
      var c2 = a.onShellError;
      c2(b);
      c2 = a.onFatalError;
      c2(b);
      null !== a.destination
        ? ((a.status = 2), a.destination.destroy(b))
        : ((a.status = 1), (a.fatalError = b));
    }
    function Fb(a, b, c2, d, f) {
      H2 = {};
      ob = b;
      M = 0;
      for (a = c2(d, f); L2; )
        (L2 = false), (M = 0), (O2 += 1), (J = null), (a = c2(d, f));
      tb();
      return a;
    }
    function Gb(a, b, c2, d) {
      var f = c2.render(),
        e2 = d.childContextTypes;
      if (null !== e2 && void 0 !== e2) {
        var g = b.legacyContext;
        if ('function' !== typeof c2.getChildContext) d = g;
        else {
          c2 = c2.getChildContext();
          for (var h2 in c2)
            if (!(h2 in e2))
              throw Error(
                (Za(d) || 'Unknown') +
                  '.getChildContext(): key "' +
                  h2 +
                  '" is not defined in childContextTypes.'
              );
          d = A2({}, g, c2);
        }
        b.legacyContext = d;
        W(a, b, f);
        b.legacyContext = g;
      } else W(a, b, f);
    }
    function Hb(a, b) {
      if (a && a.defaultProps) {
        b = A2({}, b);
        a = a.defaultProps;
        for (var c2 in a) void 0 === b[c2] && (b[c2] = a[c2]);
        return b;
      }
      return b;
    }
    function Ib(a, b, c2, d, f) {
      if ('function' === typeof c2)
        if (c2.prototype && c2.prototype.isReactComponent) {
          f = ab2(c2, b.legacyContext);
          var e2 = c2.contextType;
          e2 = new c2(
            d,
            'object' === typeof e2 && null !== e2 ? e2._currentValue2 : f
          );
          gb(e2, c2, d, f);
          Gb(a, b, e2, c2);
        } else {
          e2 = ab2(c2, b.legacyContext);
          f = Fb(a, b, c2, d, e2);
          var g = 0 !== M;
          if (
            'object' === typeof f &&
            null !== f &&
            'function' === typeof f.render &&
            void 0 === f.$$typeof
          )
            gb(f, c2, d, e2), Gb(a, b, f, c2);
          else if (g) {
            d = b.treeContext;
            b.treeContext = ib(d, 1, 0);
            try {
              W(a, b, f);
            } finally {
              b.treeContext = d;
            }
          } else W(a, b, f);
        }
      else if ('string' === typeof c2) {
        f = b.blockedSegment;
        e2 = za2(f.chunks, c2, d, a.responseState, f.formatContext);
        f.lastPushedText = false;
        g = f.formatContext;
        f.formatContext = sa2(g, c2, d);
        Jb(a, b, e2);
        f.formatContext = g;
        switch (c2) {
          case 'area':
          case 'base':
          case 'br':
          case 'col':
          case 'embed':
          case 'hr':
          case 'img':
          case 'input':
          case 'keygen':
          case 'link':
          case 'meta':
          case 'param':
          case 'source':
          case 'track':
          case 'wbr':
            break;
          default:
            f.chunks.push('</', c2, '>');
        }
        f.lastPushedText = false;
      } else {
        switch (c2) {
          case Wa2:
          case Va2:
          case La2:
          case Ma2:
          case Ka2:
            W(a, b, d.children);
            return;
          case Ra2:
            W(a, b, d.children);
            return;
          case Ua2:
            throw Error(
              'ReactDOMServer does not yet support scope components.'
            );
          case Qa2:
            a: {
              c2 = b.blockedBoundary;
              f = b.blockedSegment;
              e2 = d.fallback;
              d = d.children;
              g = /* @__PURE__ */ new Set();
              var h2 = {
                  id: null,
                  rootSegmentID: -1,
                  parentFlushed: false,
                  pendingTasks: 0,
                  forceClientRender: false,
                  completedSegments: [],
                  byteSize: 0,
                  fallbackAbortableTasks: g,
                  errorDigest: null,
                },
                k2 = T2(a, f.chunks.length, h2, f.formatContext, false, false);
              f.children.push(k2);
              f.lastPushedText = false;
              var m2 = T2(a, 0, null, f.formatContext, false, false);
              m2.parentFlushed = true;
              b.blockedBoundary = h2;
              b.blockedSegment = m2;
              try {
                if (
                  (Jb(a, b, d),
                  a.responseState.generateStaticMarkup ||
                    (m2.lastPushedText &&
                      m2.textEmbedded &&
                      m2.chunks.push('<!-- -->')),
                  (m2.status = 1),
                  X2(h2, m2),
                  0 === h2.pendingTasks)
                )
                  break a;
              } catch (l2) {
                (m2.status = 4),
                  (h2.forceClientRender = true),
                  (h2.errorDigest = U2(a, l2));
              } finally {
                (b.blockedBoundary = c2), (b.blockedSegment = f);
              }
              b = Db(
                a,
                e2,
                c2,
                k2,
                g,
                b.legacyContext,
                b.context,
                b.treeContext
              );
              a.pingedTasks.push(b);
            }
            return;
        }
        if ('object' === typeof c2 && null !== c2)
          switch (c2.$$typeof) {
            case Pa2:
              d = Fb(a, b, c2.render, d, f);
              if (0 !== M) {
                c2 = b.treeContext;
                b.treeContext = ib(c2, 1, 0);
                try {
                  W(a, b, d);
                } finally {
                  b.treeContext = c2;
                }
              } else W(a, b, d);
              return;
            case Sa2:
              c2 = c2.type;
              d = Hb(c2, d);
              Ib(a, b, c2, d, f);
              return;
            case Na2:
              f = d.children;
              c2 = c2._context;
              d = d.value;
              e2 = c2._currentValue2;
              c2._currentValue2 = d;
              g = D2;
              D2 = d = {
                parent: g,
                depth: null === g ? 0 : g.depth + 1,
                context: c2,
                parentValue: e2,
                value: d,
              };
              b.context = d;
              W(a, b, f);
              a = D2;
              if (null === a)
                throw Error(
                  'Tried to pop a Context at the root of the app. This is a bug in React.'
                );
              d = a.parentValue;
              a.context._currentValue2 = d === Xa ? a.context._defaultValue : d;
              a = D2 = a.parent;
              b.context = a;
              return;
            case Oa2:
              d = d.children;
              d = d(c2._currentValue2);
              W(a, b, d);
              return;
            case Ta2:
              f = c2._init;
              c2 = f(c2._payload);
              d = Hb(c2, d);
              Ib(a, b, c2, d, void 0);
              return;
          }
        throw Error(
          'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: ' +
            ((null == c2 ? c2 : typeof c2) + '.')
        );
      }
    }
    function W(a, b, c2) {
      b.node = c2;
      if ('object' === typeof c2 && null !== c2) {
        switch (c2.$$typeof) {
          case Ia2:
            Ib(a, b, c2.type, c2.props, c2.ref);
            return;
          case Ja2:
            throw Error(
              'Portals are not currently supported by the server renderer. Render them conditionally so that they only appear on the client render.'
            );
          case Ta2:
            var d = c2._init;
            c2 = d(c2._payload);
            W(a, b, c2);
            return;
        }
        if (ra2(c2)) {
          Kb(a, b, c2);
          return;
        }
        null === c2 || 'object' !== typeof c2
          ? (d = null)
          : ((d = (Ya && c2[Ya]) || c2['@@iterator']),
            (d = 'function' === typeof d ? d : null));
        if (d && (d = d.call(c2))) {
          c2 = d.next();
          if (!c2.done) {
            var f = [];
            do f.push(c2.value), (c2 = d.next());
            while (!c2.done);
            Kb(a, b, f);
          }
          return;
        }
        a = Object.prototype.toString.call(c2);
        throw Error(
          'Objects are not valid as a React child (found: ' +
            ('[object Object]' === a
              ? 'object with keys {' + Object.keys(c2).join(', ') + '}'
              : a) +
            '). If you meant to render a collection of children, use an array instead.'
        );
      }
      'string' === typeof c2
        ? ((d = b.blockedSegment),
          (d.lastPushedText = Ha2(
            b.blockedSegment.chunks,
            c2,
            a.responseState,
            d.lastPushedText
          )))
        : 'number' === typeof c2 &&
          ((d = b.blockedSegment),
          (d.lastPushedText = Ha2(
            b.blockedSegment.chunks,
            '' + c2,
            a.responseState,
            d.lastPushedText
          )));
    }
    function Kb(a, b, c2) {
      for (var d = c2.length, f = 0; f < d; f++) {
        var e2 = b.treeContext;
        b.treeContext = ib(e2, d, f);
        try {
          Jb(a, b, c2[f]);
        } finally {
          b.treeContext = e2;
        }
      }
    }
    function Jb(a, b, c2) {
      var d = b.blockedSegment.formatContext,
        f = b.legacyContext,
        e2 = b.context;
      try {
        return W(a, b, c2);
      } catch (k2) {
        if (
          (tb(),
          'object' === typeof k2 &&
            null !== k2 &&
            'function' === typeof k2.then)
        ) {
          c2 = k2;
          var g = b.blockedSegment,
            h2 = T2(
              a,
              g.chunks.length,
              null,
              g.formatContext,
              g.lastPushedText,
              true
            );
          g.children.push(h2);
          g.lastPushedText = false;
          a = Db(
            a,
            b.node,
            b.blockedBoundary,
            h2,
            b.abortSet,
            b.legacyContext,
            b.context,
            b.treeContext
          ).ping;
          c2.then(a, a);
          b.blockedSegment.formatContext = d;
          b.legacyContext = f;
          b.context = e2;
          F2(e2);
        } else
          throw (
            ((b.blockedSegment.formatContext = d),
            (b.legacyContext = f),
            (b.context = e2),
            F2(e2),
            k2)
          );
      }
    }
    function Lb(a) {
      var b = a.blockedBoundary;
      a = a.blockedSegment;
      a.status = 3;
      Mb(this, b, a);
    }
    function Nb(a, b, c2) {
      var d = a.blockedBoundary;
      a.blockedSegment.status = 3;
      null === d
        ? (b.allPendingTasks--,
          2 !== b.status &&
            ((b.status = 2),
            null !== b.destination && b.destination.push(null)))
        : (d.pendingTasks--,
          d.forceClientRender ||
            ((d.forceClientRender = true),
            (d.errorDigest = b.onError(
              void 0 === c2
                ? Error(
                    'The render was aborted by the server without a reason.'
                  )
                : c2
            )),
            d.parentFlushed && b.clientRenderedBoundaries.push(d)),
          d.fallbackAbortableTasks.forEach(function (a2) {
            return Nb(a2, b, c2);
          }),
          d.fallbackAbortableTasks.clear(),
          b.allPendingTasks--,
          0 === b.allPendingTasks && ((a = b.onAllReady), a()));
    }
    function X2(a, b) {
      if (
        0 === b.chunks.length &&
        1 === b.children.length &&
        null === b.children[0].boundary
      ) {
        var c2 = b.children[0];
        c2.id = b.id;
        c2.parentFlushed = true;
        1 === c2.status && X2(a, c2);
      } else a.completedSegments.push(b);
    }
    function Mb(a, b, c2) {
      if (null === b) {
        if (c2.parentFlushed) {
          if (null !== a.completedRootSegment)
            throw Error(
              'There can only be one root segment. This is a bug in React.'
            );
          a.completedRootSegment = c2;
        }
        a.pendingRootTasks--;
        0 === a.pendingRootTasks &&
          ((a.onShellError = S), (b = a.onShellReady), b());
      } else
        b.pendingTasks--,
          b.forceClientRender ||
            (0 === b.pendingTasks
              ? (c2.parentFlushed && 1 === c2.status && X2(b, c2),
                b.parentFlushed && a.completedBoundaries.push(b),
                b.fallbackAbortableTasks.forEach(Lb, a),
                b.fallbackAbortableTasks.clear())
              : c2.parentFlushed &&
                1 === c2.status &&
                (X2(b, c2),
                1 === b.completedSegments.length &&
                  b.parentFlushed &&
                  a.partialBoundaries.push(b)));
      a.allPendingTasks--;
      0 === a.allPendingTasks && ((a = a.onAllReady), a());
    }
    function Eb(a) {
      if (2 !== a.status) {
        var b = D2,
          c2 = Ab.current;
        Ab.current = zb;
        var d = R;
        R = a.responseState;
        try {
          var f = a.pingedTasks,
            e2;
          for (e2 = 0; e2 < f.length; e2++) {
            var g = f[e2];
            var h2 = a,
              k2 = g.blockedSegment;
            if (0 === k2.status) {
              F2(g.context);
              try {
                W(h2, g, g.node),
                  h2.responseState.generateStaticMarkup ||
                    (k2.lastPushedText &&
                      k2.textEmbedded &&
                      k2.chunks.push('<!-- -->')),
                  g.abortSet.delete(g),
                  (k2.status = 1),
                  Mb(h2, g.blockedBoundary, k2);
              } catch (y) {
                if (
                  (tb(),
                  'object' === typeof y &&
                    null !== y &&
                    'function' === typeof y.then)
                ) {
                  var m2 = g.ping;
                  y.then(m2, m2);
                } else {
                  g.abortSet.delete(g);
                  k2.status = 4;
                  var l2 = g.blockedBoundary,
                    p = y,
                    B2 = U2(h2, p);
                  null === l2
                    ? V2(h2, p)
                    : (l2.pendingTasks--,
                      l2.forceClientRender ||
                        ((l2.forceClientRender = true),
                        (l2.errorDigest = B2),
                        l2.parentFlushed &&
                          h2.clientRenderedBoundaries.push(l2)));
                  h2.allPendingTasks--;
                  if (0 === h2.allPendingTasks) {
                    var C = h2.onAllReady;
                    C();
                  }
                }
              } finally {
              }
            }
          }
          f.splice(0, e2);
          null !== a.destination && Ob(a, a.destination);
        } catch (y) {
          U2(a, y), V2(a, y);
        } finally {
          (R = d), (Ab.current = c2), c2 === zb && F2(b);
        }
      }
    }
    function Y2(a, b, c2) {
      c2.parentFlushed = true;
      switch (c2.status) {
        case 0:
          var d = (c2.id = a.nextSegmentId++);
          c2.lastPushedText = false;
          c2.textEmbedded = false;
          a = a.responseState;
          b.push('<template id="');
          b.push(a.placeholderPrefix);
          a = d.toString(16);
          b.push(a);
          return b.push('"></template>');
        case 1:
          c2.status = 2;
          var f = true;
          d = c2.chunks;
          var e2 = 0;
          c2 = c2.children;
          for (var g = 0; g < c2.length; g++) {
            for (f = c2[g]; e2 < f.index; e2++) b.push(d[e2]);
            f = Z2(a, b, f);
          }
          for (; e2 < d.length - 1; e2++) b.push(d[e2]);
          e2 < d.length && (f = b.push(d[e2]));
          return f;
        default:
          throw Error(
            'Aborted, errored or already flushed boundaries should not be flushed again. This is a bug in React.'
          );
      }
    }
    function Z2(a, b, c2) {
      var d = c2.boundary;
      if (null === d) return Y2(a, b, c2);
      d.parentFlushed = true;
      if (d.forceClientRender)
        return (
          a.responseState.generateStaticMarkup ||
            ((d = d.errorDigest),
            b.push('<!--$!-->'),
            b.push('<template'),
            d && (b.push(' data-dgst="'), (d = u(d)), b.push(d), b.push('"')),
            b.push('></template>')),
          Y2(a, b, c2),
          (a = a.responseState.generateStaticMarkup
            ? true
            : b.push('<!--/$-->')),
          a
        );
      if (0 < d.pendingTasks) {
        d.rootSegmentID = a.nextSegmentId++;
        0 < d.completedSegments.length && a.partialBoundaries.push(d);
        var f = a.responseState;
        var e2 = f.nextSuspenseID++;
        f = f.boundaryPrefix + e2.toString(16);
        d = d.id = f;
        Aa2(b, a.responseState, d);
        Y2(a, b, c2);
        return b.push('<!--/$-->');
      }
      if (d.byteSize > a.progressiveChunkSize)
        return (
          (d.rootSegmentID = a.nextSegmentId++),
          a.completedBoundaries.push(d),
          Aa2(b, a.responseState, d.id),
          Y2(a, b, c2),
          b.push('<!--/$-->')
        );
      a.responseState.generateStaticMarkup || b.push('<!--$-->');
      c2 = d.completedSegments;
      if (1 !== c2.length)
        throw Error(
          'A previously unvisited boundary must have exactly one root segment. This is a bug in React.'
        );
      Z2(a, b, c2[0]);
      a = a.responseState.generateStaticMarkup ? true : b.push('<!--/$-->');
      return a;
    }
    function Pb(a, b, c2) {
      Ba2(b, a.responseState, c2.formatContext, c2.id);
      Z2(a, b, c2);
      return Ca2(b, c2.formatContext);
    }
    function Qb(a, b, c2) {
      for (var d = c2.completedSegments, f = 0; f < d.length; f++)
        Rb(a, b, c2, d[f]);
      d.length = 0;
      a = a.responseState;
      d = c2.id;
      c2 = c2.rootSegmentID;
      b.push(a.startInlineScript);
      a.sentCompleteBoundaryFunction
        ? b.push('$RC("')
        : ((a.sentCompleteBoundaryFunction = true),
          b.push(
            'function $RC(a,b){a=document.getElementById(a);b=document.getElementById(b);b.parentNode.removeChild(b);if(a){a=a.previousSibling;var f=a.parentNode,c=a.nextSibling,e=0;do{if(c&&8===c.nodeType){var d=c.data;if("/$"===d)if(0===e)break;else e--;else"$"!==d&&"$?"!==d&&"$!"!==d||e++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;b.firstChild;)f.insertBefore(b.firstChild,c);a.data="$";a._reactRetry&&a._reactRetry()}};$RC("'
          ));
      if (null === d)
        throw Error(
          'An ID must have been assigned before we can complete the boundary.'
        );
      c2 = c2.toString(16);
      b.push(d);
      b.push('","');
      b.push(a.segmentPrefix);
      b.push(c2);
      return b.push('")</script>');
    }
    function Rb(a, b, c2, d) {
      if (2 === d.status) return true;
      var f = d.id;
      if (-1 === f) {
        if (-1 === (d.id = c2.rootSegmentID))
          throw Error(
            'A root segment ID must have been assigned by now. This is a bug in React.'
          );
        return Pb(a, b, d);
      }
      Pb(a, b, d);
      a = a.responseState;
      b.push(a.startInlineScript);
      a.sentCompleteSegmentFunction
        ? b.push('$RS("')
        : ((a.sentCompleteSegmentFunction = true),
          b.push(
            'function $RS(a,b){a=document.getElementById(a);b=document.getElementById(b);for(a.parentNode.removeChild(a);a.firstChild;)b.parentNode.insertBefore(a.firstChild,b);b.parentNode.removeChild(b)};$RS("'
          ));
      b.push(a.segmentPrefix);
      f = f.toString(16);
      b.push(f);
      b.push('","');
      b.push(a.placeholderPrefix);
      b.push(f);
      return b.push('")</script>');
    }
    function Ob(a, b) {
      try {
        var c2 = a.completedRootSegment;
        if (null !== c2 && 0 === a.pendingRootTasks) {
          Z2(a, b, c2);
          a.completedRootSegment = null;
          var d = a.responseState.bootstrapChunks;
          for (c2 = 0; c2 < d.length - 1; c2++) b.push(d[c2]);
          c2 < d.length && b.push(d[c2]);
        }
        var f = a.clientRenderedBoundaries,
          e2;
        for (e2 = 0; e2 < f.length; e2++) {
          var g = f[e2];
          d = b;
          var h2 = a.responseState,
            k2 = g.id,
            m2 = g.errorDigest,
            l2 = g.errorMessage,
            p = g.errorComponentStack;
          d.push(h2.startInlineScript);
          h2.sentClientRenderFunction
            ? d.push('$RX("')
            : ((h2.sentClientRenderFunction = true),
              d.push(
                'function $RX(b,c,d,e){var a=document.getElementById(b);a&&(b=a.previousSibling,b.data="$!",a=a.dataset,c&&(a.dgst=c),d&&(a.msg=d),e&&(a.stck=e),b._reactRetry&&b._reactRetry())};$RX("'
              ));
          if (null === k2)
            throw Error(
              'An ID must have been assigned before we can complete the boundary.'
            );
          d.push(k2);
          d.push('"');
          if (m2 || l2 || p) {
            d.push(',');
            var B2 = Ea2(m2 || '');
            d.push(B2);
          }
          if (l2 || p) {
            d.push(',');
            var C = Ea2(l2 || '');
            d.push(C);
          }
          if (p) {
            d.push(',');
            var y = Ea2(p);
            d.push(y);
          }
          if (!d.push(')</script>')) {
            a.destination = null;
            e2++;
            f.splice(0, e2);
            return;
          }
        }
        f.splice(0, e2);
        var aa2 = a.completedBoundaries;
        for (e2 = 0; e2 < aa2.length; e2++)
          if (!Qb(a, b, aa2[e2])) {
            a.destination = null;
            e2++;
            aa2.splice(0, e2);
            return;
          }
        aa2.splice(0, e2);
        var ba2 = a.partialBoundaries;
        for (e2 = 0; e2 < ba2.length; e2++) {
          var pb = ba2[e2];
          a: {
            f = a;
            g = b;
            var ca2 = pb.completedSegments;
            for (h2 = 0; h2 < ca2.length; h2++)
              if (!Rb(f, g, pb, ca2[h2])) {
                h2++;
                ca2.splice(0, h2);
                var qb = false;
                break a;
              }
            ca2.splice(0, h2);
            qb = true;
          }
          if (!qb) {
            a.destination = null;
            e2++;
            ba2.splice(0, e2);
            return;
          }
        }
        ba2.splice(0, e2);
        var da2 = a.completedBoundaries;
        for (e2 = 0; e2 < da2.length; e2++)
          if (!Qb(a, b, da2[e2])) {
            a.destination = null;
            e2++;
            da2.splice(0, e2);
            return;
          }
        da2.splice(0, e2);
      } finally {
        0 === a.allPendingTasks &&
          0 === a.pingedTasks.length &&
          0 === a.clientRenderedBoundaries.length &&
          0 === a.completedBoundaries.length &&
          b.push(null);
      }
    }
    function Sb(a, b) {
      if (1 === a.status) (a.status = 2), b.destroy(a.fatalError);
      else if (2 !== a.status && null === a.destination) {
        a.destination = b;
        try {
          Ob(a, b);
        } catch (c2) {
          U2(a, c2), V2(a, c2);
        }
      }
    }
    function Tb(a, b) {
      try {
        var c2 = a.abortableTasks;
        c2.forEach(function (c3) {
          return Nb(c3, a, b);
        });
        c2.clear();
        null !== a.destination && Ob(a, a.destination);
      } catch (d) {
        U2(a, d), V2(a, d);
      }
    }
    function Ub() {}
    function Vb(a, b, c2, d) {
      var f = false,
        e2 = null,
        g = '',
        h2 = false;
      a = Cb(
        a,
        Fa2(c2, b ? b.identifierPrefix : void 0),
        Ga2(),
        Infinity,
        Ub,
        void 0,
        function () {
          h2 = true;
        },
        void 0,
        void 0
      );
      Eb(a);
      Tb(a, d);
      Sb(a, {
        push: function (a2) {
          null !== a2 && (g += a2);
          return true;
        },
        destroy: function (a2) {
          f = true;
          e2 = a2;
        },
      });
      if (f) throw e2;
      if (!h2)
        throw Error(
          'A component suspended while responding to synchronous input. This will cause the UI to be replaced with a loading indicator. To fix, updates that suspend should be wrapped with startTransition.'
        );
      return g;
    }
    function Wb(a, b) {
      a.prototype = Object.create(b.prototype);
      a.prototype.constructor = a;
      a.__proto__ = b;
    }
    var Xb = (function (a) {
      function b() {
        var b2 = a.call(this, {}) || this;
        b2.request = null;
        b2.startedFlowing = false;
        return b2;
      }
      Wb(b, a);
      var c2 = b.prototype;
      c2._destroy = function (a2, b2) {
        Tb(this.request);
        b2(a2);
      };
      c2._read = function () {
        this.startedFlowing && Sb(this.request, this);
      };
      return b;
    })(fa2.Readable);
    function Yb() {}
    function Zb(a, b) {
      var c2 = new Xb(),
        d = Cb(
          a,
          Fa2(false, b ? b.identifierPrefix : void 0),
          Ga2(),
          Infinity,
          Yb,
          function () {
            c2.startedFlowing = true;
            Sb(d, c2);
          },
          void 0,
          void 0
        );
      c2.request = d;
      Eb(d);
      return c2;
    }
    exports2.renderToNodeStream = function (a, b) {
      return Zb(a, b);
    };
    exports2.renderToStaticMarkup = function (a, b) {
      return Vb(
        a,
        b,
        true,
        'The server used "renderToStaticMarkup" which does not support Suspense. If you intended to have the server wait for the suspended component please switch to "renderToPipeableStream" which supports Suspense on the server'
      );
    };
    exports2.renderToStaticNodeStream = function (a, b) {
      return Zb(a, b);
    };
    exports2.renderToString = function (a, b) {
      return Vb(
        a,
        b,
        false,
        'The server used "renderToString" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to "renderToPipeableStream" which supports Suspense on the server'
      );
    };
    exports2.version = '18.2.0';
  },
});

// ../../node_modules/react-dom/cjs/react-dom-server.node.production.min.js
var require_react_dom_server_node_production_min = __commonJS({
  '../../node_modules/react-dom/cjs/react-dom-server.node.production.min.js'(
    exports2
  ) {
    'use strict';
    var aa2 = require('util');
    var ba2 = require_react();
    var k2 = null;
    var l2 = 0;
    var q = true;
    function r2(a, b) {
      if ('string' === typeof b) {
        if (0 !== b.length)
          if (2048 < 3 * b.length)
            0 < l2 &&
              (t2(a, k2.subarray(0, l2)),
              (k2 = new Uint8Array(2048)),
              (l2 = 0)),
              t2(a, u.encode(b));
          else {
            var c2 = k2;
            0 < l2 && (c2 = k2.subarray(l2));
            c2 = u.encodeInto(b, c2);
            var d = c2.read;
            l2 += c2.written;
            d < b.length &&
              (t2(a, k2),
              (k2 = new Uint8Array(2048)),
              (l2 = u.encodeInto(b.slice(d), k2).written));
            2048 === l2 && (t2(a, k2), (k2 = new Uint8Array(2048)), (l2 = 0));
          }
      } else
        0 !== b.byteLength &&
          (2048 < b.byteLength
            ? (0 < l2 &&
                (t2(a, k2.subarray(0, l2)),
                (k2 = new Uint8Array(2048)),
                (l2 = 0)),
              t2(a, b))
            : ((c2 = k2.length - l2),
              c2 < b.byteLength &&
                (0 === c2
                  ? t2(a, k2)
                  : (k2.set(b.subarray(0, c2), l2),
                    (l2 += c2),
                    t2(a, k2),
                    (b = b.subarray(c2))),
                (k2 = new Uint8Array(2048)),
                (l2 = 0)),
              k2.set(b, l2),
              (l2 += b.byteLength),
              2048 === l2 &&
                (t2(a, k2), (k2 = new Uint8Array(2048)), (l2 = 0))));
    }
    function t2(a, b) {
      a = a.write(b);
      q = q && a;
    }
    function w2(a, b) {
      r2(a, b);
      return q;
    }
    function ca2(a) {
      k2 && 0 < l2 && a.write(k2.subarray(0, l2));
      k2 = null;
      l2 = 0;
      q = true;
    }
    var u = new aa2.TextEncoder();
    function x(a) {
      return u.encode(a);
    }
    var y = Object.prototype.hasOwnProperty;
    var da2 =
      /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/;
    var ea2 = {};
    var fa2 = {};
    function ha2(a) {
      if (y.call(fa2, a)) return true;
      if (y.call(ea2, a)) return false;
      if (da2.test(a)) return (fa2[a] = true);
      ea2[a] = true;
      return false;
    }
    function z2(a, b, c2, d, f, e2, g) {
      this.acceptsBooleans = 2 === b || 3 === b || 4 === b;
      this.attributeName = d;
      this.attributeNamespace = f;
      this.mustUseProperty = c2;
      this.propertyName = a;
      this.type = b;
      this.sanitizeURL = e2;
      this.removeEmptyString = g;
    }
    var A2 = {};
    'children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style'
      .split(' ')
      .forEach(function (a) {
        A2[a] = new z2(a, 0, false, a, null, false, false);
      });
    [
      ['acceptCharset', 'accept-charset'],
      ['className', 'class'],
      ['htmlFor', 'for'],
      ['httpEquiv', 'http-equiv'],
    ].forEach(function (a) {
      var b = a[0];
      A2[b] = new z2(b, 1, false, a[1], null, false, false);
    });
    ['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(function (
      a
    ) {
      A2[a] = new z2(a, 2, false, a.toLowerCase(), null, false, false);
    });
    [
      'autoReverse',
      'externalResourcesRequired',
      'focusable',
      'preserveAlpha',
    ].forEach(function (a) {
      A2[a] = new z2(a, 2, false, a, null, false, false);
    });
    'allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope'
      .split(' ')
      .forEach(function (a) {
        A2[a] = new z2(a, 3, false, a.toLowerCase(), null, false, false);
      });
    ['checked', 'multiple', 'muted', 'selected'].forEach(function (a) {
      A2[a] = new z2(a, 3, true, a, null, false, false);
    });
    ['capture', 'download'].forEach(function (a) {
      A2[a] = new z2(a, 4, false, a, null, false, false);
    });
    ['cols', 'rows', 'size', 'span'].forEach(function (a) {
      A2[a] = new z2(a, 6, false, a, null, false, false);
    });
    ['rowSpan', 'start'].forEach(function (a) {
      A2[a] = new z2(a, 5, false, a.toLowerCase(), null, false, false);
    });
    var ia2 = /[\-:]([a-z])/g;
    function ja2(a) {
      return a[1].toUpperCase();
    }
    'accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height'
      .split(' ')
      .forEach(function (a) {
        var b = a.replace(ia2, ja2);
        A2[b] = new z2(b, 1, false, a, null, false, false);
      });
    'xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type'
      .split(' ')
      .forEach(function (a) {
        var b = a.replace(ia2, ja2);
        A2[b] = new z2(
          b,
          1,
          false,
          a,
          'http://www.w3.org/1999/xlink',
          false,
          false
        );
      });
    ['xml:base', 'xml:lang', 'xml:space'].forEach(function (a) {
      var b = a.replace(ia2, ja2);
      A2[b] = new z2(
        b,
        1,
        false,
        a,
        'http://www.w3.org/XML/1998/namespace',
        false,
        false
      );
    });
    ['tabIndex', 'crossOrigin'].forEach(function (a) {
      A2[a] = new z2(a, 1, false, a.toLowerCase(), null, false, false);
    });
    A2.xlinkHref = new z2(
      'xlinkHref',
      1,
      false,
      'xlink:href',
      'http://www.w3.org/1999/xlink',
      true,
      false
    );
    ['src', 'href', 'action', 'formAction'].forEach(function (a) {
      A2[a] = new z2(a, 1, false, a.toLowerCase(), null, true, true);
    });
    var B2 = {
      animationIterationCount: true,
      aspectRatio: true,
      borderImageOutset: true,
      borderImageSlice: true,
      borderImageWidth: true,
      boxFlex: true,
      boxFlexGroup: true,
      boxOrdinalGroup: true,
      columnCount: true,
      columns: true,
      flex: true,
      flexGrow: true,
      flexPositive: true,
      flexShrink: true,
      flexNegative: true,
      flexOrder: true,
      gridArea: true,
      gridRow: true,
      gridRowEnd: true,
      gridRowSpan: true,
      gridRowStart: true,
      gridColumn: true,
      gridColumnEnd: true,
      gridColumnSpan: true,
      gridColumnStart: true,
      fontWeight: true,
      lineClamp: true,
      lineHeight: true,
      opacity: true,
      order: true,
      orphans: true,
      tabSize: true,
      widows: true,
      zIndex: true,
      zoom: true,
      fillOpacity: true,
      floodOpacity: true,
      stopOpacity: true,
      strokeDasharray: true,
      strokeDashoffset: true,
      strokeMiterlimit: true,
      strokeOpacity: true,
      strokeWidth: true,
    };
    var ka2 = ['Webkit', 'ms', 'Moz', 'O'];
    Object.keys(B2).forEach(function (a) {
      ka2.forEach(function (b) {
        b = b + a.charAt(0).toUpperCase() + a.substring(1);
        B2[b] = B2[a];
      });
    });
    var la2 = /["'&<>]/;
    function F2(a) {
      if ('boolean' === typeof a || 'number' === typeof a) return '' + a;
      a = '' + a;
      var b = la2.exec(a);
      if (b) {
        var c2 = '',
          d,
          f = 0;
        for (d = b.index; d < a.length; d++) {
          switch (a.charCodeAt(d)) {
            case 34:
              b = '&quot;';
              break;
            case 38:
              b = '&amp;';
              break;
            case 39:
              b = '&#x27;';
              break;
            case 60:
              b = '&lt;';
              break;
            case 62:
              b = '&gt;';
              break;
            default:
              continue;
          }
          f !== d && (c2 += a.substring(f, d));
          f = d + 1;
          c2 += b;
        }
        a = f !== d ? c2 + a.substring(f, d) : c2;
      }
      return a;
    }
    var ma2 = /([A-Z])/g;
    var pa2 = /^ms-/;
    var qa2 = Array.isArray;
    var ra2 = x('<script>');
    var sa2 = x('</script>');
    var ta2 = x('<script src="');
    var ua2 = x('<script type="module" src="');
    var va2 = x('" async=""></script>');
    var wa2 = /(<\/|<)(s)(cript)/gi;
    function xa2(a, b, c2, d) {
      return '' + b + ('s' === c2 ? '\\u0073' : '\\u0053') + d;
    }
    function G(a, b) {
      return { insertionMode: a, selectedValue: b };
    }
    function ya2(a, b, c2) {
      switch (b) {
        case 'select':
          return G(1, null != c2.value ? c2.value : c2.defaultValue);
        case 'svg':
          return G(2, null);
        case 'math':
          return G(3, null);
        case 'foreignObject':
          return G(1, null);
        case 'table':
          return G(4, null);
        case 'thead':
        case 'tbody':
        case 'tfoot':
          return G(5, null);
        case 'colgroup':
          return G(7, null);
        case 'tr':
          return G(6, null);
      }
      return 4 <= a.insertionMode || 0 === a.insertionMode ? G(1, null) : a;
    }
    var za2 = x('<!-- -->');
    function Aa2(a, b, c2, d) {
      if ('' === b) return d;
      d && a.push(za2);
      a.push(F2(b));
      return true;
    }
    var Ba2 = /* @__PURE__ */ new Map();
    var Ca2 = x(' style="');
    var Da2 = x(':');
    var Ea2 = x(';');
    function Fa2(a, b, c2) {
      if ('object' !== typeof c2)
        throw Error(
          "The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX."
        );
      b = true;
      for (var d in c2)
        if (y.call(c2, d)) {
          var f = c2[d];
          if (null != f && 'boolean' !== typeof f && '' !== f) {
            if (0 === d.indexOf('--')) {
              var e2 = F2(d);
              f = F2(('' + f).trim());
            } else {
              e2 = d;
              var g = Ba2.get(e2);
              void 0 !== g
                ? (e2 = g)
                : ((g = x(
                    F2(
                      e2.replace(ma2, '-$1').toLowerCase().replace(pa2, '-ms-')
                    )
                  )),
                  Ba2.set(e2, g),
                  (e2 = g));
              f =
                'number' === typeof f
                  ? 0 === f || y.call(B2, d)
                    ? '' + f
                    : f + 'px'
                  : F2(('' + f).trim());
            }
            b
              ? ((b = false), a.push(Ca2, e2, Da2, f))
              : a.push(Ea2, e2, Da2, f);
          }
        }
      b || a.push(H2);
    }
    var I2 = x(' ');
    var J = x('="');
    var H2 = x('"');
    var Ga2 = x('=""');
    function K(a, b, c2, d) {
      switch (c2) {
        case 'style':
          Fa2(a, b, d);
          return;
        case 'defaultValue':
        case 'defaultChecked':
        case 'innerHTML':
        case 'suppressContentEditableWarning':
        case 'suppressHydrationWarning':
          return;
      }
      if (
        !(2 < c2.length) ||
        ('o' !== c2[0] && 'O' !== c2[0]) ||
        ('n' !== c2[1] && 'N' !== c2[1])
      ) {
        if (((b = A2.hasOwnProperty(c2) ? A2[c2] : null), null !== b)) {
          switch (typeof d) {
            case 'function':
            case 'symbol':
              return;
            case 'boolean':
              if (!b.acceptsBooleans) return;
          }
          c2 = b.attributeName;
          switch (b.type) {
            case 3:
              d && a.push(I2, c2, Ga2);
              break;
            case 4:
              true === d
                ? a.push(I2, c2, Ga2)
                : false !== d && a.push(I2, c2, J, F2(d), H2);
              break;
            case 5:
              isNaN(d) || a.push(I2, c2, J, F2(d), H2);
              break;
            case 6:
              !isNaN(d) && 1 <= d && a.push(I2, c2, J, F2(d), H2);
              break;
            default:
              b.sanitizeURL && (d = '' + d), a.push(I2, c2, J, F2(d), H2);
          }
        } else if (ha2(c2)) {
          switch (typeof d) {
            case 'function':
            case 'symbol':
              return;
            case 'boolean':
              if (
                ((b = c2.toLowerCase().slice(0, 5)),
                'data-' !== b && 'aria-' !== b)
              )
                return;
          }
          a.push(I2, c2, J, F2(d), H2);
        }
      }
    }
    var L2 = x('>');
    var Ha2 = x('/>');
    function M(a, b, c2) {
      if (null != b) {
        if (null != c2)
          throw Error(
            'Can only set one of `children` or `props.dangerouslySetInnerHTML`.'
          );
        if ('object' !== typeof b || !('__html' in b))
          throw Error(
            '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.'
          );
        b = b.__html;
        null !== b && void 0 !== b && a.push('' + b);
      }
    }
    function Ia2(a) {
      var b = '';
      ba2.Children.forEach(a, function (a2) {
        null != a2 && (b += a2);
      });
      return b;
    }
    var Ja2 = x(' selected=""');
    function Ka2(a, b, c2, d) {
      a.push(N2(c2));
      var f = (c2 = null),
        e2;
      for (e2 in b)
        if (y.call(b, e2)) {
          var g = b[e2];
          if (null != g)
            switch (e2) {
              case 'children':
                c2 = g;
                break;
              case 'dangerouslySetInnerHTML':
                f = g;
                break;
              default:
                K(a, d, e2, g);
            }
        }
      a.push(L2);
      M(a, f, c2);
      return 'string' === typeof c2 ? (a.push(F2(c2)), null) : c2;
    }
    var La2 = x('\n');
    var Ma2 = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/;
    var Na2 = /* @__PURE__ */ new Map();
    function N2(a) {
      var b = Na2.get(a);
      if (void 0 === b) {
        if (!Ma2.test(a)) throw Error('Invalid tag: ' + a);
        b = x('<' + a);
        Na2.set(a, b);
      }
      return b;
    }
    var Oa2 = x('<!DOCTYPE html>');
    function Pa2(a, b, c2, d, f) {
      switch (b) {
        case 'select':
          a.push(N2('select'));
          var e2 = null,
            g = null;
          for (p in c2)
            if (y.call(c2, p)) {
              var h2 = c2[p];
              if (null != h2)
                switch (p) {
                  case 'children':
                    e2 = h2;
                    break;
                  case 'dangerouslySetInnerHTML':
                    g = h2;
                    break;
                  case 'defaultValue':
                  case 'value':
                    break;
                  default:
                    K(a, d, p, h2);
                }
            }
          a.push(L2);
          M(a, g, e2);
          return e2;
        case 'option':
          g = f.selectedValue;
          a.push(N2('option'));
          var m2 = (h2 = null),
            n2 = null;
          var p = null;
          for (e2 in c2)
            if (y.call(c2, e2)) {
              var v = c2[e2];
              if (null != v)
                switch (e2) {
                  case 'children':
                    h2 = v;
                    break;
                  case 'selected':
                    n2 = v;
                    break;
                  case 'dangerouslySetInnerHTML':
                    p = v;
                    break;
                  case 'value':
                    m2 = v;
                  default:
                    K(a, d, e2, v);
                }
            }
          if (null != g)
            if (((c2 = null !== m2 ? '' + m2 : Ia2(h2)), qa2(g)))
              for (d = 0; d < g.length; d++) {
                if ('' + g[d] === c2) {
                  a.push(Ja2);
                  break;
                }
              }
            else '' + g === c2 && a.push(Ja2);
          else n2 && a.push(Ja2);
          a.push(L2);
          M(a, p, h2);
          return h2;
        case 'textarea':
          a.push(N2('textarea'));
          p = g = e2 = null;
          for (h2 in c2)
            if (y.call(c2, h2) && ((m2 = c2[h2]), null != m2))
              switch (h2) {
                case 'children':
                  p = m2;
                  break;
                case 'value':
                  e2 = m2;
                  break;
                case 'defaultValue':
                  g = m2;
                  break;
                case 'dangerouslySetInnerHTML':
                  throw Error(
                    '`dangerouslySetInnerHTML` does not make sense on <textarea>.'
                  );
                default:
                  K(a, d, h2, m2);
              }
          null === e2 && null !== g && (e2 = g);
          a.push(L2);
          if (null != p) {
            if (null != e2)
              throw Error(
                'If you supply `defaultValue` on a <textarea>, do not pass children.'
              );
            if (qa2(p) && 1 < p.length)
              throw Error('<textarea> can only have at most one child.');
            e2 = '' + p;
          }
          'string' === typeof e2 && '\n' === e2[0] && a.push(La2);
          null !== e2 && a.push(F2('' + e2));
          return null;
        case 'input':
          a.push(N2('input'));
          m2 = p = h2 = e2 = null;
          for (g in c2)
            if (y.call(c2, g) && ((n2 = c2[g]), null != n2))
              switch (g) {
                case 'children':
                case 'dangerouslySetInnerHTML':
                  throw Error(
                    'input is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.'
                  );
                case 'defaultChecked':
                  m2 = n2;
                  break;
                case 'defaultValue':
                  h2 = n2;
                  break;
                case 'checked':
                  p = n2;
                  break;
                case 'value':
                  e2 = n2;
                  break;
                default:
                  K(a, d, g, n2);
              }
          null !== p
            ? K(a, d, 'checked', p)
            : null !== m2 && K(a, d, 'checked', m2);
          null !== e2
            ? K(a, d, 'value', e2)
            : null !== h2 && K(a, d, 'value', h2);
          a.push(Ha2);
          return null;
        case 'menuitem':
          a.push(N2('menuitem'));
          for (var C in c2)
            if (y.call(c2, C) && ((e2 = c2[C]), null != e2))
              switch (C) {
                case 'children':
                case 'dangerouslySetInnerHTML':
                  throw Error(
                    'menuitems cannot have `children` nor `dangerouslySetInnerHTML`.'
                  );
                default:
                  K(a, d, C, e2);
              }
          a.push(L2);
          return null;
        case 'title':
          a.push(N2('title'));
          e2 = null;
          for (v in c2)
            if (y.call(c2, v) && ((g = c2[v]), null != g))
              switch (v) {
                case 'children':
                  e2 = g;
                  break;
                case 'dangerouslySetInnerHTML':
                  throw Error(
                    '`dangerouslySetInnerHTML` does not make sense on <title>.'
                  );
                default:
                  K(a, d, v, g);
              }
          a.push(L2);
          return e2;
        case 'listing':
        case 'pre':
          a.push(N2(b));
          g = e2 = null;
          for (m2 in c2)
            if (y.call(c2, m2) && ((h2 = c2[m2]), null != h2))
              switch (m2) {
                case 'children':
                  e2 = h2;
                  break;
                case 'dangerouslySetInnerHTML':
                  g = h2;
                  break;
                default:
                  K(a, d, m2, h2);
              }
          a.push(L2);
          if (null != g) {
            if (null != e2)
              throw Error(
                'Can only set one of `children` or `props.dangerouslySetInnerHTML`.'
              );
            if ('object' !== typeof g || !('__html' in g))
              throw Error(
                '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.'
              );
            c2 = g.__html;
            null !== c2 &&
              void 0 !== c2 &&
              ('string' === typeof c2 && 0 < c2.length && '\n' === c2[0]
                ? a.push(La2, c2)
                : a.push('' + c2));
          }
          'string' === typeof e2 && '\n' === e2[0] && a.push(La2);
          return e2;
        case 'area':
        case 'base':
        case 'br':
        case 'col':
        case 'embed':
        case 'hr':
        case 'img':
        case 'keygen':
        case 'link':
        case 'meta':
        case 'param':
        case 'source':
        case 'track':
        case 'wbr':
          a.push(N2(b));
          for (var D2 in c2)
            if (y.call(c2, D2) && ((e2 = c2[D2]), null != e2))
              switch (D2) {
                case 'children':
                case 'dangerouslySetInnerHTML':
                  throw Error(
                    b +
                      ' is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.'
                  );
                default:
                  K(a, d, D2, e2);
              }
          a.push(Ha2);
          return null;
        case 'annotation-xml':
        case 'color-profile':
        case 'font-face':
        case 'font-face-src':
        case 'font-face-uri':
        case 'font-face-format':
        case 'font-face-name':
        case 'missing-glyph':
          return Ka2(a, c2, b, d);
        case 'html':
          return 0 === f.insertionMode && a.push(Oa2), Ka2(a, c2, b, d);
        default:
          if (-1 === b.indexOf('-') && 'string' !== typeof c2.is)
            return Ka2(a, c2, b, d);
          a.push(N2(b));
          g = e2 = null;
          for (n2 in c2)
            if (y.call(c2, n2) && ((h2 = c2[n2]), null != h2))
              switch (n2) {
                case 'children':
                  e2 = h2;
                  break;
                case 'dangerouslySetInnerHTML':
                  g = h2;
                  break;
                case 'style':
                  Fa2(a, d, h2);
                  break;
                case 'suppressContentEditableWarning':
                case 'suppressHydrationWarning':
                  break;
                default:
                  ha2(n2) &&
                    'function' !== typeof h2 &&
                    'symbol' !== typeof h2 &&
                    a.push(I2, n2, J, F2(h2), H2);
              }
          a.push(L2);
          M(a, g, e2);
          return e2;
      }
    }
    var Qa2 = x('</');
    var Ra2 = x('>');
    var Sa2 = x('<template id="');
    var Ta2 = x('"></template>');
    var Ua2 = x('<!--$-->');
    var Va2 = x('<!--$?--><template id="');
    var Wa2 = x('"></template>');
    var Xa = x('<!--$!-->');
    var Ya = x('<!--/$-->');
    var Za = x('<template');
    var $a2 = x('"');
    var ab2 = x(' data-dgst="');
    x(' data-msg="');
    x(' data-stck="');
    var bb = x('></template>');
    function cb(a, b, c2) {
      r2(a, Va2);
      if (null === c2)
        throw Error(
          'An ID must have been assigned before we can complete the boundary.'
        );
      r2(a, c2);
      return w2(a, Wa2);
    }
    var db = x('<div hidden id="');
    var eb = x('">');
    var fb = x('</div>');
    var gb = x('<svg aria-hidden="true" style="display:none" id="');
    var hb = x('">');
    var ib = x('</svg>');
    var jb = x('<math aria-hidden="true" style="display:none" id="');
    var kb = x('">');
    var lb = x('</math>');
    var mb = x('<table hidden id="');
    var nb = x('">');
    var ob = x('</table>');
    var pb = x('<table hidden><tbody id="');
    var qb = x('">');
    var rb = x('</tbody></table>');
    var sb = x('<table hidden><tr id="');
    var tb = x('">');
    var ub = x('</tr></table>');
    var vb = x('<table hidden><colgroup id="');
    var wb = x('">');
    var xb = x('</colgroup></table>');
    function yb(a, b, c2, d) {
      switch (c2.insertionMode) {
        case 0:
        case 1:
          return (
            r2(a, db), r2(a, b.segmentPrefix), r2(a, d.toString(16)), w2(a, eb)
          );
        case 2:
          return (
            r2(a, gb), r2(a, b.segmentPrefix), r2(a, d.toString(16)), w2(a, hb)
          );
        case 3:
          return (
            r2(a, jb), r2(a, b.segmentPrefix), r2(a, d.toString(16)), w2(a, kb)
          );
        case 4:
          return (
            r2(a, mb), r2(a, b.segmentPrefix), r2(a, d.toString(16)), w2(a, nb)
          );
        case 5:
          return (
            r2(a, pb), r2(a, b.segmentPrefix), r2(a, d.toString(16)), w2(a, qb)
          );
        case 6:
          return (
            r2(a, sb), r2(a, b.segmentPrefix), r2(a, d.toString(16)), w2(a, tb)
          );
        case 7:
          return (
            r2(a, vb), r2(a, b.segmentPrefix), r2(a, d.toString(16)), w2(a, wb)
          );
        default:
          throw Error('Unknown insertion mode. This is a bug in React.');
      }
    }
    function zb(a, b) {
      switch (b.insertionMode) {
        case 0:
        case 1:
          return w2(a, fb);
        case 2:
          return w2(a, ib);
        case 3:
          return w2(a, lb);
        case 4:
          return w2(a, ob);
        case 5:
          return w2(a, rb);
        case 6:
          return w2(a, ub);
        case 7:
          return w2(a, xb);
        default:
          throw Error('Unknown insertion mode. This is a bug in React.');
      }
    }
    var Ab = x(
      'function $RS(a,b){a=document.getElementById(a);b=document.getElementById(b);for(a.parentNode.removeChild(a);a.firstChild;)b.parentNode.insertBefore(a.firstChild,b);b.parentNode.removeChild(b)};$RS("'
    );
    var Bb = x('$RS("');
    var Cb = x('","');
    var Db = x('")</script>');
    var Fb = x(
      'function $RC(a,b){a=document.getElementById(a);b=document.getElementById(b);b.parentNode.removeChild(b);if(a){a=a.previousSibling;var f=a.parentNode,c=a.nextSibling,e=0;do{if(c&&8===c.nodeType){var d=c.data;if("/$"===d)if(0===e)break;else e--;else"$"!==d&&"$?"!==d&&"$!"!==d||e++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;b.firstChild;)f.insertBefore(b.firstChild,c);a.data="$";a._reactRetry&&a._reactRetry()}};$RC("'
    );
    var Gb = x('$RC("');
    var Hb = x('","');
    var Ib = x('")</script>');
    var Jb = x(
      'function $RX(b,c,d,e){var a=document.getElementById(b);a&&(b=a.previousSibling,b.data="$!",a=a.dataset,c&&(a.dgst=c),d&&(a.msg=d),e&&(a.stck=e),b._reactRetry&&b._reactRetry())};$RX("'
    );
    var Kb = x('$RX("');
    var Lb = x('"');
    var Mb = x(')</script>');
    var Nb = x(',');
    var Ob = /[<\u2028\u2029]/g;
    function Pb(a) {
      return JSON.stringify(a).replace(Ob, function (a2) {
        switch (a2) {
          case '<':
            return '\\u003c';
          case '\u2028':
            return '\\u2028';
          case '\u2029':
            return '\\u2029';
          default:
            throw Error(
              'escapeJSStringsForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React'
            );
        }
      });
    }
    var O2 = Object.assign;
    var Qb = Symbol.for('react.element');
    var Rb = Symbol.for('react.portal');
    var Sb = Symbol.for('react.fragment');
    var Tb = Symbol.for('react.strict_mode');
    var Ub = Symbol.for('react.profiler');
    var Vb = Symbol.for('react.provider');
    var Wb = Symbol.for('react.context');
    var Xb = Symbol.for('react.forward_ref');
    var Yb = Symbol.for('react.suspense');
    var Zb = Symbol.for('react.suspense_list');
    var $b = Symbol.for('react.memo');
    var ac2 = Symbol.for('react.lazy');
    var bc2 = Symbol.for('react.scope');
    var cc2 = Symbol.for('react.debug_trace_mode');
    var dc2 = Symbol.for('react.legacy_hidden');
    var ec2 = Symbol.for('react.default_value');
    var fc = Symbol.iterator;
    function gc2(a) {
      if (null == a) return null;
      if ('function' === typeof a) return a.displayName || a.name || null;
      if ('string' === typeof a) return a;
      switch (a) {
        case Sb:
          return 'Fragment';
        case Rb:
          return 'Portal';
        case Ub:
          return 'Profiler';
        case Tb:
          return 'StrictMode';
        case Yb:
          return 'Suspense';
        case Zb:
          return 'SuspenseList';
      }
      if ('object' === typeof a)
        switch (a.$$typeof) {
          case Wb:
            return (a.displayName || 'Context') + '.Consumer';
          case Vb:
            return (a._context.displayName || 'Context') + '.Provider';
          case Xb:
            var b = a.render;
            a = a.displayName;
            a ||
              ((a = b.displayName || b.name || ''),
              (a = '' !== a ? 'ForwardRef(' + a + ')' : 'ForwardRef'));
            return a;
          case $b:
            return (
              (b = a.displayName || null),
              null !== b ? b : gc2(a.type) || 'Memo'
            );
          case ac2:
            b = a._payload;
            a = a._init;
            try {
              return gc2(a(b));
            } catch (c2) {}
        }
      return null;
    }
    var hc2 = {};
    function ic2(a, b) {
      a = a.contextTypes;
      if (!a) return hc2;
      var c2 = {},
        d;
      for (d in a) c2[d] = b[d];
      return c2;
    }
    var P2 = null;
    function Q2(a, b) {
      if (a !== b) {
        a.context._currentValue = a.parentValue;
        a = a.parent;
        var c2 = b.parent;
        if (null === a) {
          if (null !== c2)
            throw Error(
              'The stacks must reach the root at the same time. This is a bug in React.'
            );
        } else {
          if (null === c2)
            throw Error(
              'The stacks must reach the root at the same time. This is a bug in React.'
            );
          Q2(a, c2);
        }
        b.context._currentValue = b.value;
      }
    }
    function jc2(a) {
      a.context._currentValue = a.parentValue;
      a = a.parent;
      null !== a && jc2(a);
    }
    function kc2(a) {
      var b = a.parent;
      null !== b && kc2(b);
      a.context._currentValue = a.value;
    }
    function lc2(a, b) {
      a.context._currentValue = a.parentValue;
      a = a.parent;
      if (null === a)
        throw Error(
          'The depth must equal at least at zero before reaching the root. This is a bug in React.'
        );
      a.depth === b.depth ? Q2(a, b) : lc2(a, b);
    }
    function mc2(a, b) {
      var c2 = b.parent;
      if (null === c2)
        throw Error(
          'The depth must equal at least at zero before reaching the root. This is a bug in React.'
        );
      a.depth === c2.depth ? Q2(a, c2) : mc2(a, c2);
      b.context._currentValue = b.value;
    }
    function nc2(a) {
      var b = P2;
      b !== a &&
        (null === b
          ? kc2(a)
          : null === a
          ? jc2(b)
          : b.depth === a.depth
          ? Q2(b, a)
          : b.depth > a.depth
          ? lc2(b, a)
          : mc2(b, a),
        (P2 = a));
    }
    var oc2 = {
      isMounted: function () {
        return false;
      },
      enqueueSetState: function (a, b) {
        a = a._reactInternals;
        null !== a.queue && a.queue.push(b);
      },
      enqueueReplaceState: function (a, b) {
        a = a._reactInternals;
        a.replace = true;
        a.queue = [b];
      },
      enqueueForceUpdate: function () {},
    };
    function pc2(a, b, c2, d) {
      var f = void 0 !== a.state ? a.state : null;
      a.updater = oc2;
      a.props = c2;
      a.state = f;
      var e2 = { queue: [], replace: false };
      a._reactInternals = e2;
      var g = b.contextType;
      a.context = 'object' === typeof g && null !== g ? g._currentValue : d;
      g = b.getDerivedStateFromProps;
      'function' === typeof g &&
        ((g = g(c2, f)),
        (f = null === g || void 0 === g ? f : O2({}, f, g)),
        (a.state = f));
      if (
        'function' !== typeof b.getDerivedStateFromProps &&
        'function' !== typeof a.getSnapshotBeforeUpdate &&
        ('function' === typeof a.UNSAFE_componentWillMount ||
          'function' === typeof a.componentWillMount)
      )
        if (
          ((b = a.state),
          'function' === typeof a.componentWillMount && a.componentWillMount(),
          'function' === typeof a.UNSAFE_componentWillMount &&
            a.UNSAFE_componentWillMount(),
          b !== a.state && oc2.enqueueReplaceState(a, a.state, null),
          null !== e2.queue && 0 < e2.queue.length)
        )
          if (
            ((b = e2.queue),
            (g = e2.replace),
            (e2.queue = null),
            (e2.replace = false),
            g && 1 === b.length)
          )
            a.state = b[0];
          else {
            e2 = g ? b[0] : a.state;
            f = true;
            for (g = g ? 1 : 0; g < b.length; g++) {
              var h2 = b[g];
              h2 = 'function' === typeof h2 ? h2.call(a, e2, c2, d) : h2;
              null != h2 &&
                (f ? ((f = false), (e2 = O2({}, e2, h2))) : O2(e2, h2));
            }
            a.state = e2;
          }
        else e2.queue = null;
    }
    var qc2 = { id: 1, overflow: '' };
    function rc2(a, b, c2) {
      var d = a.id;
      a = a.overflow;
      var f = 32 - sc2(d) - 1;
      d &= ~(1 << f);
      c2 += 1;
      var e2 = 32 - sc2(b) + f;
      if (30 < e2) {
        var g = f - (f % 5);
        e2 = (d & ((1 << g) - 1)).toString(32);
        d >>= g;
        f -= g;
        return {
          id: (1 << (32 - sc2(b) + f)) | (c2 << f) | d,
          overflow: e2 + a,
        };
      }
      return { id: (1 << e2) | (c2 << f) | d, overflow: a };
    }
    var sc2 = Math.clz32 ? Math.clz32 : tc2;
    var uc2 = Math.log;
    var vc2 = Math.LN2;
    function tc2(a) {
      a >>>= 0;
      return 0 === a ? 32 : (31 - ((uc2(a) / vc2) | 0)) | 0;
    }
    function wc2(a, b) {
      return (a === b && (0 !== a || 1 / a === 1 / b)) || (a !== a && b !== b);
    }
    var xc2 = 'function' === typeof Object.is ? Object.is : wc2;
    var R = null;
    var yc2 = null;
    var zc2 = null;
    var S = null;
    var T2 = false;
    var Ac2 = false;
    var U2 = 0;
    var V2 = null;
    var Bc2 = 0;
    function W() {
      if (null === R)
        throw Error(
          'Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.'
        );
      return R;
    }
    function Cc2() {
      if (0 < Bc2)
        throw Error('Rendered more hooks than during the previous render');
      return { memoizedState: null, queue: null, next: null };
    }
    function Dc2() {
      null === S
        ? null === zc2
          ? ((T2 = false), (zc2 = S = Cc2()))
          : ((T2 = true), (S = zc2))
        : null === S.next
        ? ((T2 = false), (S = S.next = Cc2()))
        : ((T2 = true), (S = S.next));
      return S;
    }
    function Ec2() {
      yc2 = R = null;
      Ac2 = false;
      zc2 = null;
      Bc2 = 0;
      S = V2 = null;
    }
    function Fc2(a, b) {
      return 'function' === typeof b ? b(a) : b;
    }
    function Gc2(a, b, c2) {
      R = W();
      S = Dc2();
      if (T2) {
        var d = S.queue;
        b = d.dispatch;
        if (null !== V2 && ((c2 = V2.get(d)), void 0 !== c2)) {
          V2.delete(d);
          d = S.memoizedState;
          do (d = a(d, c2.action)), (c2 = c2.next);
          while (null !== c2);
          S.memoizedState = d;
          return [d, b];
        }
        return [S.memoizedState, b];
      }
      a =
        a === Fc2
          ? 'function' === typeof b
            ? b()
            : b
          : void 0 !== c2
          ? c2(b)
          : b;
      S.memoizedState = a;
      a = S.queue = { last: null, dispatch: null };
      a = a.dispatch = Hc2.bind(null, R, a);
      return [S.memoizedState, a];
    }
    function Ic2(a, b) {
      R = W();
      S = Dc2();
      b = void 0 === b ? null : b;
      if (null !== S) {
        var c2 = S.memoizedState;
        if (null !== c2 && null !== b) {
          var d = c2[1];
          a: if (null === d) d = false;
          else {
            for (var f = 0; f < d.length && f < b.length; f++)
              if (!xc2(b[f], d[f])) {
                d = false;
                break a;
              }
            d = true;
          }
          if (d) return c2[0];
        }
      }
      a = a();
      S.memoizedState = [a, b];
      return a;
    }
    function Hc2(a, b, c2) {
      if (25 <= Bc2)
        throw Error(
          'Too many re-renders. React limits the number of renders to prevent an infinite loop.'
        );
      if (a === R)
        if (
          ((Ac2 = true),
          (a = { action: c2, next: null }),
          null === V2 && (V2 = /* @__PURE__ */ new Map()),
          (c2 = V2.get(b)),
          void 0 === c2)
        )
          V2.set(b, a);
        else {
          for (b = c2; null !== b.next; ) b = b.next;
          b.next = a;
        }
    }
    function Jc2() {
      throw Error('startTransition cannot be called during server rendering.');
    }
    function Kc2() {}
    var Mc2 = {
      readContext: function (a) {
        return a._currentValue;
      },
      useContext: function (a) {
        W();
        return a._currentValue;
      },
      useMemo: Ic2,
      useReducer: Gc2,
      useRef: function (a) {
        R = W();
        S = Dc2();
        var b = S.memoizedState;
        return null === b ? ((a = { current: a }), (S.memoizedState = a)) : b;
      },
      useState: function (a) {
        return Gc2(Fc2, a);
      },
      useInsertionEffect: Kc2,
      useLayoutEffect: function () {},
      useCallback: function (a, b) {
        return Ic2(function () {
          return a;
        }, b);
      },
      useImperativeHandle: Kc2,
      useEffect: Kc2,
      useDebugValue: Kc2,
      useDeferredValue: function (a) {
        W();
        return a;
      },
      useTransition: function () {
        W();
        return [false, Jc2];
      },
      useId: function () {
        var a = yc2.treeContext;
        var b = a.overflow;
        a = a.id;
        a = (a & ~(1 << (32 - sc2(a) - 1))).toString(32) + b;
        var c2 = Lc2;
        if (null === c2)
          throw Error(
            'Invalid hook call. Hooks can only be called inside of the body of a function component.'
          );
        b = U2++;
        a = ':' + c2.idPrefix + 'R' + a;
        0 < b && (a += 'H' + b.toString(32));
        return a + ':';
      },
      useMutableSource: function (a, b) {
        W();
        return b(a._source);
      },
      useSyncExternalStore: function (a, b, c2) {
        if (void 0 === c2)
          throw Error(
            'Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.'
          );
        return c2();
      },
    };
    var Lc2 = null;
    var Nc2 =
      ba2.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED
        .ReactCurrentDispatcher;
    function Oc2(a) {
      console.error(a);
      return null;
    }
    function X2() {}
    function Pc2(a, b) {
      var c2 = a.pingedTasks;
      c2.push(b);
      1 === c2.length &&
        setImmediate(function () {
          return Qc2(a);
        });
    }
    function Rc2(a, b, c2, d, f, e2, g, h2) {
      a.allPendingTasks++;
      null === c2 ? a.pendingRootTasks++ : c2.pendingTasks++;
      var m2 = {
        node: b,
        ping: function () {
          return Pc2(a, m2);
        },
        blockedBoundary: c2,
        blockedSegment: d,
        abortSet: f,
        legacyContext: e2,
        context: g,
        treeContext: h2,
      };
      f.add(m2);
      return m2;
    }
    function Sc(a, b, c2, d, f, e2) {
      return {
        status: 0,
        id: -1,
        index: b,
        parentFlushed: false,
        chunks: [],
        children: [],
        formatContext: d,
        boundary: c2,
        lastPushedText: f,
        textEmbedded: e2,
      };
    }
    function Y2(a, b) {
      a = a.onError(b);
      if (null != a && 'string' !== typeof a)
        throw Error(
          'onError returned something with a type other than "string". onError should return a string and may return null or undefined but must not return anything else. It received something of type "' +
            typeof a +
            '" instead'
        );
      return a;
    }
    function Tc2(a, b) {
      var c2 = a.onShellError;
      c2(b);
      c2 = a.onFatalError;
      c2(b);
      null !== a.destination
        ? ((a.status = 2), a.destination.destroy(b))
        : ((a.status = 1), (a.fatalError = b));
    }
    function Uc2(a, b, c2, d, f) {
      R = {};
      yc2 = b;
      U2 = 0;
      for (a = c2(d, f); Ac2; )
        (Ac2 = false), (U2 = 0), (Bc2 += 1), (S = null), (a = c2(d, f));
      Ec2();
      return a;
    }
    function Vc2(a, b, c2, d) {
      var f = c2.render(),
        e2 = d.childContextTypes;
      if (null !== e2 && void 0 !== e2) {
        var g = b.legacyContext;
        if ('function' !== typeof c2.getChildContext) d = g;
        else {
          c2 = c2.getChildContext();
          for (var h2 in c2)
            if (!(h2 in e2))
              throw Error(
                (gc2(d) || 'Unknown') +
                  '.getChildContext(): key "' +
                  h2 +
                  '" is not defined in childContextTypes.'
              );
          d = O2({}, g, c2);
        }
        b.legacyContext = d;
        Z2(a, b, f);
        b.legacyContext = g;
      } else Z2(a, b, f);
    }
    function Wc2(a, b) {
      if (a && a.defaultProps) {
        b = O2({}, b);
        a = a.defaultProps;
        for (var c2 in a) void 0 === b[c2] && (b[c2] = a[c2]);
        return b;
      }
      return b;
    }
    function Xc2(a, b, c2, d, f) {
      if ('function' === typeof c2)
        if (c2.prototype && c2.prototype.isReactComponent) {
          f = ic2(c2, b.legacyContext);
          var e2 = c2.contextType;
          e2 = new c2(
            d,
            'object' === typeof e2 && null !== e2 ? e2._currentValue : f
          );
          pc2(e2, c2, d, f);
          Vc2(a, b, e2, c2);
        } else {
          e2 = ic2(c2, b.legacyContext);
          f = Uc2(a, b, c2, d, e2);
          var g = 0 !== U2;
          if (
            'object' === typeof f &&
            null !== f &&
            'function' === typeof f.render &&
            void 0 === f.$$typeof
          )
            pc2(f, c2, d, e2), Vc2(a, b, f, c2);
          else if (g) {
            d = b.treeContext;
            b.treeContext = rc2(d, 1, 0);
            try {
              Z2(a, b, f);
            } finally {
              b.treeContext = d;
            }
          } else Z2(a, b, f);
        }
      else if ('string' === typeof c2) {
        f = b.blockedSegment;
        e2 = Pa2(f.chunks, c2, d, a.responseState, f.formatContext);
        f.lastPushedText = false;
        g = f.formatContext;
        f.formatContext = ya2(g, c2, d);
        Yc2(a, b, e2);
        f.formatContext = g;
        switch (c2) {
          case 'area':
          case 'base':
          case 'br':
          case 'col':
          case 'embed':
          case 'hr':
          case 'img':
          case 'input':
          case 'keygen':
          case 'link':
          case 'meta':
          case 'param':
          case 'source':
          case 'track':
          case 'wbr':
            break;
          default:
            f.chunks.push(Qa2, c2, Ra2);
        }
        f.lastPushedText = false;
      } else {
        switch (c2) {
          case dc2:
          case cc2:
          case Tb:
          case Ub:
          case Sb:
            Z2(a, b, d.children);
            return;
          case Zb:
            Z2(a, b, d.children);
            return;
          case bc2:
            throw Error(
              'ReactDOMServer does not yet support scope components.'
            );
          case Yb:
            a: {
              c2 = b.blockedBoundary;
              f = b.blockedSegment;
              e2 = d.fallback;
              d = d.children;
              g = /* @__PURE__ */ new Set();
              var h2 = {
                  id: null,
                  rootSegmentID: -1,
                  parentFlushed: false,
                  pendingTasks: 0,
                  forceClientRender: false,
                  completedSegments: [],
                  byteSize: 0,
                  fallbackAbortableTasks: g,
                  errorDigest: null,
                },
                m2 = Sc(a, f.chunks.length, h2, f.formatContext, false, false);
              f.children.push(m2);
              f.lastPushedText = false;
              var n2 = Sc(a, 0, null, f.formatContext, false, false);
              n2.parentFlushed = true;
              b.blockedBoundary = h2;
              b.blockedSegment = n2;
              try {
                if (
                  (Yc2(a, b, d),
                  n2.lastPushedText && n2.textEmbedded && n2.chunks.push(za2),
                  (n2.status = 1),
                  Zc2(h2, n2),
                  0 === h2.pendingTasks)
                )
                  break a;
              } catch (p) {
                (n2.status = 4),
                  (h2.forceClientRender = true),
                  (h2.errorDigest = Y2(a, p));
              } finally {
                (b.blockedBoundary = c2), (b.blockedSegment = f);
              }
              b = Rc2(
                a,
                e2,
                c2,
                m2,
                g,
                b.legacyContext,
                b.context,
                b.treeContext
              );
              a.pingedTasks.push(b);
            }
            return;
        }
        if ('object' === typeof c2 && null !== c2)
          switch (c2.$$typeof) {
            case Xb:
              d = Uc2(a, b, c2.render, d, f);
              if (0 !== U2) {
                c2 = b.treeContext;
                b.treeContext = rc2(c2, 1, 0);
                try {
                  Z2(a, b, d);
                } finally {
                  b.treeContext = c2;
                }
              } else Z2(a, b, d);
              return;
            case $b:
              c2 = c2.type;
              d = Wc2(c2, d);
              Xc2(a, b, c2, d, f);
              return;
            case Vb:
              f = d.children;
              c2 = c2._context;
              d = d.value;
              e2 = c2._currentValue;
              c2._currentValue = d;
              g = P2;
              P2 = d = {
                parent: g,
                depth: null === g ? 0 : g.depth + 1,
                context: c2,
                parentValue: e2,
                value: d,
              };
              b.context = d;
              Z2(a, b, f);
              a = P2;
              if (null === a)
                throw Error(
                  'Tried to pop a Context at the root of the app. This is a bug in React.'
                );
              d = a.parentValue;
              a.context._currentValue = d === ec2 ? a.context._defaultValue : d;
              a = P2 = a.parent;
              b.context = a;
              return;
            case Wb:
              d = d.children;
              d = d(c2._currentValue);
              Z2(a, b, d);
              return;
            case ac2:
              f = c2._init;
              c2 = f(c2._payload);
              d = Wc2(c2, d);
              Xc2(a, b, c2, d, void 0);
              return;
          }
        throw Error(
          'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: ' +
            ((null == c2 ? c2 : typeof c2) + '.')
        );
      }
    }
    function Z2(a, b, c2) {
      b.node = c2;
      if ('object' === typeof c2 && null !== c2) {
        switch (c2.$$typeof) {
          case Qb:
            Xc2(a, b, c2.type, c2.props, c2.ref);
            return;
          case Rb:
            throw Error(
              'Portals are not currently supported by the server renderer. Render them conditionally so that they only appear on the client render.'
            );
          case ac2:
            var d = c2._init;
            c2 = d(c2._payload);
            Z2(a, b, c2);
            return;
        }
        if (qa2(c2)) {
          $c2(a, b, c2);
          return;
        }
        null === c2 || 'object' !== typeof c2
          ? (d = null)
          : ((d = (fc && c2[fc]) || c2['@@iterator']),
            (d = 'function' === typeof d ? d : null));
        if (d && (d = d.call(c2))) {
          c2 = d.next();
          if (!c2.done) {
            var f = [];
            do f.push(c2.value), (c2 = d.next());
            while (!c2.done);
            $c2(a, b, f);
          }
          return;
        }
        a = Object.prototype.toString.call(c2);
        throw Error(
          'Objects are not valid as a React child (found: ' +
            ('[object Object]' === a
              ? 'object with keys {' + Object.keys(c2).join(', ') + '}'
              : a) +
            '). If you meant to render a collection of children, use an array instead.'
        );
      }
      'string' === typeof c2
        ? ((d = b.blockedSegment),
          (d.lastPushedText = Aa2(
            b.blockedSegment.chunks,
            c2,
            a.responseState,
            d.lastPushedText
          )))
        : 'number' === typeof c2 &&
          ((d = b.blockedSegment),
          (d.lastPushedText = Aa2(
            b.blockedSegment.chunks,
            '' + c2,
            a.responseState,
            d.lastPushedText
          )));
    }
    function $c2(a, b, c2) {
      for (var d = c2.length, f = 0; f < d; f++) {
        var e2 = b.treeContext;
        b.treeContext = rc2(e2, d, f);
        try {
          Yc2(a, b, c2[f]);
        } finally {
          b.treeContext = e2;
        }
      }
    }
    function Yc2(a, b, c2) {
      var d = b.blockedSegment.formatContext,
        f = b.legacyContext,
        e2 = b.context;
      try {
        return Z2(a, b, c2);
      } catch (m2) {
        if (
          (Ec2(),
          'object' === typeof m2 &&
            null !== m2 &&
            'function' === typeof m2.then)
        ) {
          c2 = m2;
          var g = b.blockedSegment,
            h2 = Sc(
              a,
              g.chunks.length,
              null,
              g.formatContext,
              g.lastPushedText,
              true
            );
          g.children.push(h2);
          g.lastPushedText = false;
          a = Rc2(
            a,
            b.node,
            b.blockedBoundary,
            h2,
            b.abortSet,
            b.legacyContext,
            b.context,
            b.treeContext
          ).ping;
          c2.then(a, a);
          b.blockedSegment.formatContext = d;
          b.legacyContext = f;
          b.context = e2;
          nc2(e2);
        } else
          throw (
            ((b.blockedSegment.formatContext = d),
            (b.legacyContext = f),
            (b.context = e2),
            nc2(e2),
            m2)
          );
      }
    }
    function ad(a) {
      var b = a.blockedBoundary;
      a = a.blockedSegment;
      a.status = 3;
      bd2(this, b, a);
    }
    function cd(a, b, c2) {
      var d = a.blockedBoundary;
      a.blockedSegment.status = 3;
      null === d
        ? (b.allPendingTasks--,
          2 !== b.status &&
            ((b.status = 2), null !== b.destination && b.destination.end()))
        : (d.pendingTasks--,
          d.forceClientRender ||
            ((d.forceClientRender = true),
            (d.errorDigest = b.onError(
              void 0 === c2
                ? Error(
                    'The render was aborted by the server without a reason.'
                  )
                : c2
            )),
            d.parentFlushed && b.clientRenderedBoundaries.push(d)),
          d.fallbackAbortableTasks.forEach(function (a2) {
            return cd(a2, b, c2);
          }),
          d.fallbackAbortableTasks.clear(),
          b.allPendingTasks--,
          0 === b.allPendingTasks && ((a = b.onAllReady), a()));
    }
    function Zc2(a, b) {
      if (
        0 === b.chunks.length &&
        1 === b.children.length &&
        null === b.children[0].boundary
      ) {
        var c2 = b.children[0];
        c2.id = b.id;
        c2.parentFlushed = true;
        1 === c2.status && Zc2(a, c2);
      } else a.completedSegments.push(b);
    }
    function bd2(a, b, c2) {
      if (null === b) {
        if (c2.parentFlushed) {
          if (null !== a.completedRootSegment)
            throw Error(
              'There can only be one root segment. This is a bug in React.'
            );
          a.completedRootSegment = c2;
        }
        a.pendingRootTasks--;
        0 === a.pendingRootTasks &&
          ((a.onShellError = X2), (b = a.onShellReady), b());
      } else
        b.pendingTasks--,
          b.forceClientRender ||
            (0 === b.pendingTasks
              ? (c2.parentFlushed && 1 === c2.status && Zc2(b, c2),
                b.parentFlushed && a.completedBoundaries.push(b),
                b.fallbackAbortableTasks.forEach(ad, a),
                b.fallbackAbortableTasks.clear())
              : c2.parentFlushed &&
                1 === c2.status &&
                (Zc2(b, c2),
                1 === b.completedSegments.length &&
                  b.parentFlushed &&
                  a.partialBoundaries.push(b)));
      a.allPendingTasks--;
      0 === a.allPendingTasks && ((a = a.onAllReady), a());
    }
    function Qc2(a) {
      if (2 !== a.status) {
        var b = P2,
          c2 = Nc2.current;
        Nc2.current = Mc2;
        var d = Lc2;
        Lc2 = a.responseState;
        try {
          var f = a.pingedTasks,
            e2;
          for (e2 = 0; e2 < f.length; e2++) {
            var g = f[e2];
            var h2 = a,
              m2 = g.blockedSegment;
            if (0 === m2.status) {
              nc2(g.context);
              try {
                Z2(h2, g, g.node),
                  m2.lastPushedText && m2.textEmbedded && m2.chunks.push(za2),
                  g.abortSet.delete(g),
                  (m2.status = 1),
                  bd2(h2, g.blockedBoundary, m2);
              } catch (E) {
                if (
                  (Ec2(),
                  'object' === typeof E &&
                    null !== E &&
                    'function' === typeof E.then)
                ) {
                  var n2 = g.ping;
                  E.then(n2, n2);
                } else {
                  g.abortSet.delete(g);
                  m2.status = 4;
                  var p = g.blockedBoundary,
                    v = E,
                    C = Y2(h2, v);
                  null === p
                    ? Tc2(h2, v)
                    : (p.pendingTasks--,
                      p.forceClientRender ||
                        ((p.forceClientRender = true),
                        (p.errorDigest = C),
                        p.parentFlushed &&
                          h2.clientRenderedBoundaries.push(p)));
                  h2.allPendingTasks--;
                  if (0 === h2.allPendingTasks) {
                    var D2 = h2.onAllReady;
                    D2();
                  }
                }
              } finally {
              }
            }
          }
          f.splice(0, e2);
          null !== a.destination && dd(a, a.destination);
        } catch (E) {
          Y2(a, E), Tc2(a, E);
        } finally {
          (Lc2 = d), (Nc2.current = c2), c2 === Mc2 && nc2(b);
        }
      }
    }
    function ed(a, b, c2) {
      c2.parentFlushed = true;
      switch (c2.status) {
        case 0:
          var d = (c2.id = a.nextSegmentId++);
          c2.lastPushedText = false;
          c2.textEmbedded = false;
          a = a.responseState;
          r2(b, Sa2);
          r2(b, a.placeholderPrefix);
          a = d.toString(16);
          r2(b, a);
          return w2(b, Ta2);
        case 1:
          c2.status = 2;
          var f = true;
          d = c2.chunks;
          var e2 = 0;
          c2 = c2.children;
          for (var g = 0; g < c2.length; g++) {
            for (f = c2[g]; e2 < f.index; e2++) r2(b, d[e2]);
            f = fd(a, b, f);
          }
          for (; e2 < d.length - 1; e2++) r2(b, d[e2]);
          e2 < d.length && (f = w2(b, d[e2]));
          return f;
        default:
          throw Error(
            'Aborted, errored or already flushed boundaries should not be flushed again. This is a bug in React.'
          );
      }
    }
    function fd(a, b, c2) {
      var d = c2.boundary;
      if (null === d) return ed(a, b, c2);
      d.parentFlushed = true;
      if (d.forceClientRender)
        (d = d.errorDigest),
          w2(b, Xa),
          r2(b, Za),
          d && (r2(b, ab2), r2(b, F2(d)), r2(b, $a2)),
          w2(b, bb),
          ed(a, b, c2);
      else if (0 < d.pendingTasks) {
        d.rootSegmentID = a.nextSegmentId++;
        0 < d.completedSegments.length && a.partialBoundaries.push(d);
        var f = a.responseState;
        var e2 = f.nextSuspenseID++;
        f = x(f.boundaryPrefix + e2.toString(16));
        d = d.id = f;
        cb(b, a.responseState, d);
        ed(a, b, c2);
      } else if (d.byteSize > a.progressiveChunkSize)
        (d.rootSegmentID = a.nextSegmentId++),
          a.completedBoundaries.push(d),
          cb(b, a.responseState, d.id),
          ed(a, b, c2);
      else {
        w2(b, Ua2);
        c2 = d.completedSegments;
        if (1 !== c2.length)
          throw Error(
            'A previously unvisited boundary must have exactly one root segment. This is a bug in React.'
          );
        fd(a, b, c2[0]);
      }
      return w2(b, Ya);
    }
    function gd(a, b, c2) {
      yb(b, a.responseState, c2.formatContext, c2.id);
      fd(a, b, c2);
      return zb(b, c2.formatContext);
    }
    function hd2(a, b, c2) {
      for (var d = c2.completedSegments, f = 0; f < d.length; f++)
        id(a, b, c2, d[f]);
      d.length = 0;
      a = a.responseState;
      d = c2.id;
      c2 = c2.rootSegmentID;
      r2(b, a.startInlineScript);
      a.sentCompleteBoundaryFunction
        ? r2(b, Gb)
        : ((a.sentCompleteBoundaryFunction = true), r2(b, Fb));
      if (null === d)
        throw Error(
          'An ID must have been assigned before we can complete the boundary.'
        );
      c2 = c2.toString(16);
      r2(b, d);
      r2(b, Hb);
      r2(b, a.segmentPrefix);
      r2(b, c2);
      return w2(b, Ib);
    }
    function id(a, b, c2, d) {
      if (2 === d.status) return true;
      var f = d.id;
      if (-1 === f) {
        if (-1 === (d.id = c2.rootSegmentID))
          throw Error(
            'A root segment ID must have been assigned by now. This is a bug in React.'
          );
        return gd(a, b, d);
      }
      gd(a, b, d);
      a = a.responseState;
      r2(b, a.startInlineScript);
      a.sentCompleteSegmentFunction
        ? r2(b, Bb)
        : ((a.sentCompleteSegmentFunction = true), r2(b, Ab));
      r2(b, a.segmentPrefix);
      f = f.toString(16);
      r2(b, f);
      r2(b, Cb);
      r2(b, a.placeholderPrefix);
      r2(b, f);
      return w2(b, Db);
    }
    function dd(a, b) {
      k2 = new Uint8Array(2048);
      l2 = 0;
      q = true;
      try {
        var c2 = a.completedRootSegment;
        if (null !== c2 && 0 === a.pendingRootTasks) {
          fd(a, b, c2);
          a.completedRootSegment = null;
          var d = a.responseState.bootstrapChunks;
          for (c2 = 0; c2 < d.length - 1; c2++) r2(b, d[c2]);
          c2 < d.length && w2(b, d[c2]);
        }
        var f = a.clientRenderedBoundaries,
          e2;
        for (e2 = 0; e2 < f.length; e2++) {
          var g = f[e2];
          d = b;
          var h2 = a.responseState,
            m2 = g.id,
            n2 = g.errorDigest,
            p = g.errorMessage,
            v = g.errorComponentStack;
          r2(d, h2.startInlineScript);
          h2.sentClientRenderFunction
            ? r2(d, Kb)
            : ((h2.sentClientRenderFunction = true), r2(d, Jb));
          if (null === m2)
            throw Error(
              'An ID must have been assigned before we can complete the boundary.'
            );
          r2(d, m2);
          r2(d, Lb);
          if (n2 || p || v) r2(d, Nb), r2(d, Pb(n2 || ''));
          if (p || v) r2(d, Nb), r2(d, Pb(p || ''));
          v && (r2(d, Nb), r2(d, Pb(v)));
          if (!w2(d, Mb)) {
            a.destination = null;
            e2++;
            f.splice(0, e2);
            return;
          }
        }
        f.splice(0, e2);
        var C = a.completedBoundaries;
        for (e2 = 0; e2 < C.length; e2++)
          if (!hd2(a, b, C[e2])) {
            a.destination = null;
            e2++;
            C.splice(0, e2);
            return;
          }
        C.splice(0, e2);
        ca2(b);
        k2 = new Uint8Array(2048);
        l2 = 0;
        q = true;
        var D2 = a.partialBoundaries;
        for (e2 = 0; e2 < D2.length; e2++) {
          var E = D2[e2];
          a: {
            f = a;
            g = b;
            var na2 = E.completedSegments;
            for (h2 = 0; h2 < na2.length; h2++)
              if (!id(f, g, E, na2[h2])) {
                h2++;
                na2.splice(0, h2);
                var Eb = false;
                break a;
              }
            na2.splice(0, h2);
            Eb = true;
          }
          if (!Eb) {
            a.destination = null;
            e2++;
            D2.splice(0, e2);
            return;
          }
        }
        D2.splice(0, e2);
        var oa2 = a.completedBoundaries;
        for (e2 = 0; e2 < oa2.length; e2++)
          if (!hd2(a, b, oa2[e2])) {
            a.destination = null;
            e2++;
            oa2.splice(0, e2);
            return;
          }
        oa2.splice(0, e2);
      } finally {
        ca2(b),
          'function' === typeof b.flush && b.flush(),
          0 === a.allPendingTasks &&
            0 === a.pingedTasks.length &&
            0 === a.clientRenderedBoundaries.length &&
            0 === a.completedBoundaries.length &&
            b.end();
      }
    }
    function jd2(a) {
      setImmediate(function () {
        return Qc2(a);
      });
    }
    function kd2(a, b) {
      if (1 === a.status) (a.status = 2), b.destroy(a.fatalError);
      else if (2 !== a.status && null === a.destination) {
        a.destination = b;
        try {
          dd(a, b);
        } catch (c2) {
          Y2(a, c2), Tc2(a, c2);
        }
      }
    }
    function ld(a, b) {
      try {
        var c2 = a.abortableTasks;
        c2.forEach(function (c3) {
          return cd(c3, a, b);
        });
        c2.clear();
        null !== a.destination && dd(a, a.destination);
      } catch (d) {
        Y2(a, d), Tc2(a, d);
      }
    }
    function md(a, b) {
      return function () {
        return kd2(b, a);
      };
    }
    function nd(a, b) {
      return function () {
        return ld(a, b);
      };
    }
    function od(a, b) {
      var c2 = b ? b.identifierPrefix : void 0,
        d = b ? b.nonce : void 0,
        f = b ? b.bootstrapScriptContent : void 0,
        e2 = b ? b.bootstrapScripts : void 0;
      var g = b ? b.bootstrapModules : void 0;
      c2 = void 0 === c2 ? '' : c2;
      d = void 0 === d ? ra2 : x('<script nonce="' + F2(d) + '">');
      var h2 = [];
      void 0 !== f && h2.push(d, ('' + f).replace(wa2, xa2), sa2);
      if (void 0 !== e2)
        for (f = 0; f < e2.length; f++) h2.push(ta2, F2(e2[f]), va2);
      if (void 0 !== g)
        for (e2 = 0; e2 < g.length; e2++) h2.push(ua2, F2(g[e2]), va2);
      g = {
        bootstrapChunks: h2,
        startInlineScript: d,
        placeholderPrefix: x(c2 + 'P:'),
        segmentPrefix: x(c2 + 'S:'),
        boundaryPrefix: c2 + 'B:',
        idPrefix: c2,
        nextSuspenseID: 0,
        sentCompleteSegmentFunction: false,
        sentCompleteBoundaryFunction: false,
        sentClientRenderFunction: false,
      };
      e2 = b ? b.namespaceURI : void 0;
      e2 = G(
        'http://www.w3.org/2000/svg' === e2
          ? 2
          : 'http://www.w3.org/1998/Math/MathML' === e2
          ? 3
          : 0,
        null
      );
      f = b ? b.progressiveChunkSize : void 0;
      d = b ? b.onError : void 0;
      h2 = b ? b.onAllReady : void 0;
      var m2 = b ? b.onShellReady : void 0,
        n2 = b ? b.onShellError : void 0;
      b = [];
      c2 = /* @__PURE__ */ new Set();
      g = {
        destination: null,
        responseState: g,
        progressiveChunkSize: void 0 === f ? 12800 : f,
        status: 0,
        fatalError: null,
        nextSegmentId: 0,
        allPendingTasks: 0,
        pendingRootTasks: 0,
        completedRootSegment: null,
        abortableTasks: c2,
        pingedTasks: b,
        clientRenderedBoundaries: [],
        completedBoundaries: [],
        partialBoundaries: [],
        onError: void 0 === d ? Oc2 : d,
        onAllReady: void 0 === h2 ? X2 : h2,
        onShellReady: void 0 === m2 ? X2 : m2,
        onShellError: void 0 === n2 ? X2 : n2,
        onFatalError: X2,
      };
      e2 = Sc(g, 0, null, e2, false, false);
      e2.parentFlushed = true;
      a = Rc2(g, a, null, e2, c2, hc2, null, qc2);
      b.push(a);
      return g;
    }
    exports2.renderToPipeableStream = function (a, b) {
      var c2 = od(a, b),
        d = false;
      jd2(c2);
      return {
        pipe: function (a2) {
          if (d)
            throw Error(
              'React currently only supports piping to one writable stream.'
            );
          d = true;
          kd2(c2, a2);
          a2.on('drain', md(a2, c2));
          a2.on(
            'error',
            nd(c2, Error('The destination stream errored while writing data.'))
          );
          a2.on('close', nd(c2, Error('The destination stream closed early.')));
          return a2;
        },
        abort: function (a2) {
          ld(c2, a2);
        },
      };
    };
    exports2.version = '18.2.0';
  },
});

// ../../node_modules/react-dom/cjs/react-dom-server-legacy.node.development.js
var require_react_dom_server_legacy_node_development = __commonJS({
  '../../node_modules/react-dom/cjs/react-dom-server-legacy.node.development.js'(
    exports2
  ) {
    'use strict';
    if (process.env.NODE_ENV !== 'production') {
      (function () {
        'use strict';
        var React = require_react();
        var stream = require('stream');
        var ReactVersion = '18.2.0';
        var ReactSharedInternals =
          React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
        function warn(format2) {
          {
            {
              for (
                var _len = arguments.length,
                  args = new Array(_len > 1 ? _len - 1 : 0),
                  _key = 1;
                _key < _len;
                _key++
              ) {
                args[_key - 1] = arguments[_key];
              }
              printWarning('warn', format2, args);
            }
          }
        }
        function error(format2) {
          {
            {
              for (
                var _len2 = arguments.length,
                  args = new Array(_len2 > 1 ? _len2 - 1 : 0),
                  _key2 = 1;
                _key2 < _len2;
                _key2++
              ) {
                args[_key2 - 1] = arguments[_key2];
              }
              printWarning('error', format2, args);
            }
          }
        }
        function printWarning(level, format2, args) {
          {
            var ReactDebugCurrentFrame2 =
              ReactSharedInternals.ReactDebugCurrentFrame;
            var stack = ReactDebugCurrentFrame2.getStackAddendum();
            if (stack !== '') {
              format2 += '%s';
              args = args.concat([stack]);
            }
            var argsWithFormat = args.map(function (item) {
              return String(item);
            });
            argsWithFormat.unshift('Warning: ' + format2);
            Function.prototype.apply.call(
              console[level],
              console,
              argsWithFormat
            );
          }
        }
        function scheduleWork(callback) {
          callback();
        }
        function beginWriting(destination) {}
        function writeChunk(destination, chunk) {
          writeChunkAndReturn(destination, chunk);
        }
        function writeChunkAndReturn(destination, chunk) {
          return destination.push(chunk);
        }
        function completeWriting(destination) {}
        function close(destination) {
          destination.push(null);
        }
        function stringToChunk(content) {
          return content;
        }
        function stringToPrecomputedChunk(content) {
          return content;
        }
        function closeWithError(destination, error2) {
          destination.destroy(error2);
        }
        function typeName(value) {
          {
            var hasToStringTag =
              typeof Symbol === 'function' && Symbol.toStringTag;
            var type =
              (hasToStringTag && value[Symbol.toStringTag]) ||
              value.constructor.name ||
              'Object';
            return type;
          }
        }
        function willCoercionThrow(value) {
          {
            try {
              testStringCoercion(value);
              return false;
            } catch (e2) {
              return true;
            }
          }
        }
        function testStringCoercion(value) {
          return '' + value;
        }
        function checkAttributeStringCoercion(value, attributeName) {
          {
            if (willCoercionThrow(value)) {
              error(
                'The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before before using it here.',
                attributeName,
                typeName(value)
              );
              return testStringCoercion(value);
            }
          }
        }
        function checkCSSPropertyStringCoercion(value, propName) {
          {
            if (willCoercionThrow(value)) {
              error(
                'The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before before using it here.',
                propName,
                typeName(value)
              );
              return testStringCoercion(value);
            }
          }
        }
        function checkHtmlStringCoercion(value) {
          {
            if (willCoercionThrow(value)) {
              error(
                'The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before before using it here.',
                typeName(value)
              );
              return testStringCoercion(value);
            }
          }
        }
        var hasOwnProperty = Object.prototype.hasOwnProperty;
        var RESERVED = 0;
        var STRING = 1;
        var BOOLEANISH_STRING = 2;
        var BOOLEAN = 3;
        var OVERLOADED_BOOLEAN = 4;
        var NUMERIC = 5;
        var POSITIVE_NUMERIC = 6;
        var ATTRIBUTE_NAME_START_CHAR =
          ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
        var ATTRIBUTE_NAME_CHAR =
          ATTRIBUTE_NAME_START_CHAR +
          '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040';
        var VALID_ATTRIBUTE_NAME_REGEX = new RegExp(
          '^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$'
        );
        var illegalAttributeNameCache = {};
        var validatedAttributeNameCache = {};
        function isAttributeNameSafe(attributeName) {
          if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) {
            return true;
          }
          if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) {
            return false;
          }
          if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
            validatedAttributeNameCache[attributeName] = true;
            return true;
          }
          illegalAttributeNameCache[attributeName] = true;
          {
            error('Invalid attribute name: `%s`', attributeName);
          }
          return false;
        }
        function shouldRemoveAttributeWithWarning(
          name,
          value,
          propertyInfo,
          isCustomComponentTag
        ) {
          if (propertyInfo !== null && propertyInfo.type === RESERVED) {
            return false;
          }
          switch (typeof value) {
            case 'function':
            case 'symbol':
              return true;
            case 'boolean': {
              if (isCustomComponentTag) {
                return false;
              }
              if (propertyInfo !== null) {
                return !propertyInfo.acceptsBooleans;
              } else {
                var prefix2 = name.toLowerCase().slice(0, 5);
                return prefix2 !== 'data-' && prefix2 !== 'aria-';
              }
            }
            default:
              return false;
          }
        }
        function getPropertyInfo(name) {
          return properties.hasOwnProperty(name) ? properties[name] : null;
        }
        function PropertyInfoRecord(
          name,
          type,
          mustUseProperty,
          attributeName,
          attributeNamespace,
          sanitizeURL2,
          removeEmptyString
        ) {
          this.acceptsBooleans =
            type === BOOLEANISH_STRING ||
            type === BOOLEAN ||
            type === OVERLOADED_BOOLEAN;
          this.attributeName = attributeName;
          this.attributeNamespace = attributeNamespace;
          this.mustUseProperty = mustUseProperty;
          this.propertyName = name;
          this.type = type;
          this.sanitizeURL = sanitizeURL2;
          this.removeEmptyString = removeEmptyString;
        }
        var properties = {};
        var reservedProps = [
          'children',
          'dangerouslySetInnerHTML',
          // TODO: This prevents the assignment of defaultValue to regular
          // elements (not just inputs). Now that ReactDOMInput assigns to the
          // defaultValue property -- do we need this?
          'defaultValue',
          'defaultChecked',
          'innerHTML',
          'suppressContentEditableWarning',
          'suppressHydrationWarning',
          'style',
        ];
        reservedProps.forEach(function (name) {
          properties[name] = new PropertyInfoRecord(
            name,
            RESERVED,
            false,
            // mustUseProperty
            name,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          ['acceptCharset', 'accept-charset'],
          ['className', 'class'],
          ['htmlFor', 'for'],
          ['httpEquiv', 'http-equiv'],
        ].forEach(function (_ref) {
          var name = _ref[0],
            attributeName = _ref[1];
          properties[name] = new PropertyInfoRecord(
            name,
            STRING,
            false,
            // mustUseProperty
            attributeName,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        ['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(
          function (name) {
            properties[name] = new PropertyInfoRecord(
              name,
              BOOLEANISH_STRING,
              false,
              // mustUseProperty
              name.toLowerCase(),
              // attributeName
              null,
              // attributeNamespace
              false,
              // sanitizeURL
              false
            );
          }
        );
        [
          'autoReverse',
          'externalResourcesRequired',
          'focusable',
          'preserveAlpha',
        ].forEach(function (name) {
          properties[name] = new PropertyInfoRecord(
            name,
            BOOLEANISH_STRING,
            false,
            // mustUseProperty
            name,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          'allowFullScreen',
          'async',
          // Note: there is a special case that prevents it from being written to the DOM
          // on the client side because the browsers are inconsistent. Instead we call focus().
          'autoFocus',
          'autoPlay',
          'controls',
          'default',
          'defer',
          'disabled',
          'disablePictureInPicture',
          'disableRemotePlayback',
          'formNoValidate',
          'hidden',
          'loop',
          'noModule',
          'noValidate',
          'open',
          'playsInline',
          'readOnly',
          'required',
          'reversed',
          'scoped',
          'seamless',
          // Microdata
          'itemScope',
        ].forEach(function (name) {
          properties[name] = new PropertyInfoRecord(
            name,
            BOOLEAN,
            false,
            // mustUseProperty
            name.toLowerCase(),
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          'checked',
          // Note: `option.selected` is not updated if `select.multiple` is
          // disabled with `removeAttribute`. We have special logic for handling this.
          'multiple',
          'muted',
          'selected',
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function (name) {
          properties[name] = new PropertyInfoRecord(
            name,
            BOOLEAN,
            true,
            // mustUseProperty
            name,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          'capture',
          'download',
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function (name) {
          properties[name] = new PropertyInfoRecord(
            name,
            OVERLOADED_BOOLEAN,
            false,
            // mustUseProperty
            name,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          'cols',
          'rows',
          'size',
          'span',
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function (name) {
          properties[name] = new PropertyInfoRecord(
            name,
            POSITIVE_NUMERIC,
            false,
            // mustUseProperty
            name,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        ['rowSpan', 'start'].forEach(function (name) {
          properties[name] = new PropertyInfoRecord(
            name,
            NUMERIC,
            false,
            // mustUseProperty
            name.toLowerCase(),
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        var CAMELIZE = /[\-\:]([a-z])/g;
        var capitalize = function (token2) {
          return token2[1].toUpperCase();
        };
        [
          'accent-height',
          'alignment-baseline',
          'arabic-form',
          'baseline-shift',
          'cap-height',
          'clip-path',
          'clip-rule',
          'color-interpolation',
          'color-interpolation-filters',
          'color-profile',
          'color-rendering',
          'dominant-baseline',
          'enable-background',
          'fill-opacity',
          'fill-rule',
          'flood-color',
          'flood-opacity',
          'font-family',
          'font-size',
          'font-size-adjust',
          'font-stretch',
          'font-style',
          'font-variant',
          'font-weight',
          'glyph-name',
          'glyph-orientation-horizontal',
          'glyph-orientation-vertical',
          'horiz-adv-x',
          'horiz-origin-x',
          'image-rendering',
          'letter-spacing',
          'lighting-color',
          'marker-end',
          'marker-mid',
          'marker-start',
          'overline-position',
          'overline-thickness',
          'paint-order',
          'panose-1',
          'pointer-events',
          'rendering-intent',
          'shape-rendering',
          'stop-color',
          'stop-opacity',
          'strikethrough-position',
          'strikethrough-thickness',
          'stroke-dasharray',
          'stroke-dashoffset',
          'stroke-linecap',
          'stroke-linejoin',
          'stroke-miterlimit',
          'stroke-opacity',
          'stroke-width',
          'text-anchor',
          'text-decoration',
          'text-rendering',
          'underline-position',
          'underline-thickness',
          'unicode-bidi',
          'unicode-range',
          'units-per-em',
          'v-alphabetic',
          'v-hanging',
          'v-ideographic',
          'v-mathematical',
          'vector-effect',
          'vert-adv-y',
          'vert-origin-x',
          'vert-origin-y',
          'word-spacing',
          'writing-mode',
          'xmlns:xlink',
          'x-height',
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function (attributeName) {
          var name = attributeName.replace(CAMELIZE, capitalize);
          properties[name] = new PropertyInfoRecord(
            name,
            STRING,
            false,
            // mustUseProperty
            attributeName,
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          'xlink:actuate',
          'xlink:arcrole',
          'xlink:role',
          'xlink:show',
          'xlink:title',
          'xlink:type',
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function (attributeName) {
          var name = attributeName.replace(CAMELIZE, capitalize);
          properties[name] = new PropertyInfoRecord(
            name,
            STRING,
            false,
            // mustUseProperty
            attributeName,
            'http://www.w3.org/1999/xlink',
            false,
            // sanitizeURL
            false
          );
        });
        [
          'xml:base',
          'xml:lang',
          'xml:space',
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function (attributeName) {
          var name = attributeName.replace(CAMELIZE, capitalize);
          properties[name] = new PropertyInfoRecord(
            name,
            STRING,
            false,
            // mustUseProperty
            attributeName,
            'http://www.w3.org/XML/1998/namespace',
            false,
            // sanitizeURL
            false
          );
        });
        ['tabIndex', 'crossOrigin'].forEach(function (attributeName) {
          properties[attributeName] = new PropertyInfoRecord(
            attributeName,
            STRING,
            false,
            // mustUseProperty
            attributeName.toLowerCase(),
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        var xlinkHref = 'xlinkHref';
        properties[xlinkHref] = new PropertyInfoRecord(
          'xlinkHref',
          STRING,
          false,
          // mustUseProperty
          'xlink:href',
          'http://www.w3.org/1999/xlink',
          true,
          // sanitizeURL
          false
        );
        ['src', 'href', 'action', 'formAction'].forEach(function (
          attributeName
        ) {
          properties[attributeName] = new PropertyInfoRecord(
            attributeName,
            STRING,
            false,
            // mustUseProperty
            attributeName.toLowerCase(),
            // attributeName
            null,
            // attributeNamespace
            true,
            // sanitizeURL
            true
          );
        });
        var isUnitlessNumber = {
          animationIterationCount: true,
          aspectRatio: true,
          borderImageOutset: true,
          borderImageSlice: true,
          borderImageWidth: true,
          boxFlex: true,
          boxFlexGroup: true,
          boxOrdinalGroup: true,
          columnCount: true,
          columns: true,
          flex: true,
          flexGrow: true,
          flexPositive: true,
          flexShrink: true,
          flexNegative: true,
          flexOrder: true,
          gridArea: true,
          gridRow: true,
          gridRowEnd: true,
          gridRowSpan: true,
          gridRowStart: true,
          gridColumn: true,
          gridColumnEnd: true,
          gridColumnSpan: true,
          gridColumnStart: true,
          fontWeight: true,
          lineClamp: true,
          lineHeight: true,
          opacity: true,
          order: true,
          orphans: true,
          tabSize: true,
          widows: true,
          zIndex: true,
          zoom: true,
          // SVG-related properties
          fillOpacity: true,
          floodOpacity: true,
          stopOpacity: true,
          strokeDasharray: true,
          strokeDashoffset: true,
          strokeMiterlimit: true,
          strokeOpacity: true,
          strokeWidth: true,
        };
        function prefixKey(prefix2, key) {
          return prefix2 + key.charAt(0).toUpperCase() + key.substring(1);
        }
        var prefixes = ['Webkit', 'ms', 'Moz', 'O'];
        Object.keys(isUnitlessNumber).forEach(function (prop) {
          prefixes.forEach(function (prefix2) {
            isUnitlessNumber[prefixKey(prefix2, prop)] = isUnitlessNumber[prop];
          });
        });
        var hasReadOnlyValue = {
          button: true,
          checkbox: true,
          image: true,
          hidden: true,
          radio: true,
          reset: true,
          submit: true,
        };
        function checkControlledValueProps(tagName, props) {
          {
            if (
              !(
                hasReadOnlyValue[props.type] ||
                props.onChange ||
                props.onInput ||
                props.readOnly ||
                props.disabled ||
                props.value == null
              )
            ) {
              error(
                'You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.'
              );
            }
            if (
              !(
                props.onChange ||
                props.readOnly ||
                props.disabled ||
                props.checked == null
              )
            ) {
              error(
                'You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.'
              );
            }
          }
        }
        function isCustomComponent(tagName, props) {
          if (tagName.indexOf('-') === -1) {
            return typeof props.is === 'string';
          }
          switch (tagName) {
            case 'annotation-xml':
            case 'color-profile':
            case 'font-face':
            case 'font-face-src':
            case 'font-face-uri':
            case 'font-face-format':
            case 'font-face-name':
            case 'missing-glyph':
              return false;
            default:
              return true;
          }
        }
        var ariaProperties = {
          'aria-current': 0,
          // state
          'aria-description': 0,
          'aria-details': 0,
          'aria-disabled': 0,
          // state
          'aria-hidden': 0,
          // state
          'aria-invalid': 0,
          // state
          'aria-keyshortcuts': 0,
          'aria-label': 0,
          'aria-roledescription': 0,
          // Widget Attributes
          'aria-autocomplete': 0,
          'aria-checked': 0,
          'aria-expanded': 0,
          'aria-haspopup': 0,
          'aria-level': 0,
          'aria-modal': 0,
          'aria-multiline': 0,
          'aria-multiselectable': 0,
          'aria-orientation': 0,
          'aria-placeholder': 0,
          'aria-pressed': 0,
          'aria-readonly': 0,
          'aria-required': 0,
          'aria-selected': 0,
          'aria-sort': 0,
          'aria-valuemax': 0,
          'aria-valuemin': 0,
          'aria-valuenow': 0,
          'aria-valuetext': 0,
          // Live Region Attributes
          'aria-atomic': 0,
          'aria-busy': 0,
          'aria-live': 0,
          'aria-relevant': 0,
          // Drag-and-Drop Attributes
          'aria-dropeffect': 0,
          'aria-grabbed': 0,
          // Relationship Attributes
          'aria-activedescendant': 0,
          'aria-colcount': 0,
          'aria-colindex': 0,
          'aria-colspan': 0,
          'aria-controls': 0,
          'aria-describedby': 0,
          'aria-errormessage': 0,
          'aria-flowto': 0,
          'aria-labelledby': 0,
          'aria-owns': 0,
          'aria-posinset': 0,
          'aria-rowcount': 0,
          'aria-rowindex': 0,
          'aria-rowspan': 0,
          'aria-setsize': 0,
        };
        var warnedProperties = {};
        var rARIA = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
        var rARIACamel = new RegExp(
          '^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$'
        );
        function validateProperty(tagName, name) {
          {
            if (
              hasOwnProperty.call(warnedProperties, name) &&
              warnedProperties[name]
            ) {
              return true;
            }
            if (rARIACamel.test(name)) {
              var ariaName = 'aria-' + name.slice(4).toLowerCase();
              var correctName = ariaProperties.hasOwnProperty(ariaName)
                ? ariaName
                : null;
              if (correctName == null) {
                error(
                  'Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.',
                  name
                );
                warnedProperties[name] = true;
                return true;
              }
              if (name !== correctName) {
                error(
                  'Invalid ARIA attribute `%s`. Did you mean `%s`?',
                  name,
                  correctName
                );
                warnedProperties[name] = true;
                return true;
              }
            }
            if (rARIA.test(name)) {
              var lowerCasedName = name.toLowerCase();
              var standardName = ariaProperties.hasOwnProperty(lowerCasedName)
                ? lowerCasedName
                : null;
              if (standardName == null) {
                warnedProperties[name] = true;
                return false;
              }
              if (name !== standardName) {
                error(
                  'Unknown ARIA attribute `%s`. Did you mean `%s`?',
                  name,
                  standardName
                );
                warnedProperties[name] = true;
                return true;
              }
            }
          }
          return true;
        }
        function warnInvalidARIAProps(type, props) {
          {
            var invalidProps = [];
            for (var key in props) {
              var isValid = validateProperty(type, key);
              if (!isValid) {
                invalidProps.push(key);
              }
            }
            var unknownPropString = invalidProps
              .map(function (prop) {
                return '`' + prop + '`';
              })
              .join(', ');
            if (invalidProps.length === 1) {
              error(
                'Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props',
                unknownPropString,
                type
              );
            } else if (invalidProps.length > 1) {
              error(
                'Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props',
                unknownPropString,
                type
              );
            }
          }
        }
        function validateProperties(type, props) {
          if (isCustomComponent(type, props)) {
            return;
          }
          warnInvalidARIAProps(type, props);
        }
        var didWarnValueNull = false;
        function validateProperties$1(type, props) {
          {
            if (type !== 'input' && type !== 'textarea' && type !== 'select') {
              return;
            }
            if (props != null && props.value === null && !didWarnValueNull) {
              didWarnValueNull = true;
              if (type === 'select' && props.multiple) {
                error(
                  '`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.',
                  type
                );
              } else {
                error(
                  '`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.',
                  type
                );
              }
            }
          }
        }
        var possibleStandardNames = {
          // HTML
          accept: 'accept',
          acceptcharset: 'acceptCharset',
          'accept-charset': 'acceptCharset',
          accesskey: 'accessKey',
          action: 'action',
          allowfullscreen: 'allowFullScreen',
          alt: 'alt',
          as: 'as',
          async: 'async',
          autocapitalize: 'autoCapitalize',
          autocomplete: 'autoComplete',
          autocorrect: 'autoCorrect',
          autofocus: 'autoFocus',
          autoplay: 'autoPlay',
          autosave: 'autoSave',
          capture: 'capture',
          cellpadding: 'cellPadding',
          cellspacing: 'cellSpacing',
          challenge: 'challenge',
          charset: 'charSet',
          checked: 'checked',
          children: 'children',
          cite: 'cite',
          class: 'className',
          classid: 'classID',
          classname: 'className',
          cols: 'cols',
          colspan: 'colSpan',
          content: 'content',
          contenteditable: 'contentEditable',
          contextmenu: 'contextMenu',
          controls: 'controls',
          controlslist: 'controlsList',
          coords: 'coords',
          crossorigin: 'crossOrigin',
          dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',
          data: 'data',
          datetime: 'dateTime',
          default: 'default',
          defaultchecked: 'defaultChecked',
          defaultvalue: 'defaultValue',
          defer: 'defer',
          dir: 'dir',
          disabled: 'disabled',
          disablepictureinpicture: 'disablePictureInPicture',
          disableremoteplayback: 'disableRemotePlayback',
          download: 'download',
          draggable: 'draggable',
          enctype: 'encType',
          enterkeyhint: 'enterKeyHint',
          for: 'htmlFor',
          form: 'form',
          formmethod: 'formMethod',
          formaction: 'formAction',
          formenctype: 'formEncType',
          formnovalidate: 'formNoValidate',
          formtarget: 'formTarget',
          frameborder: 'frameBorder',
          headers: 'headers',
          height: 'height',
          hidden: 'hidden',
          high: 'high',
          href: 'href',
          hreflang: 'hrefLang',
          htmlfor: 'htmlFor',
          httpequiv: 'httpEquiv',
          'http-equiv': 'httpEquiv',
          icon: 'icon',
          id: 'id',
          imagesizes: 'imageSizes',
          imagesrcset: 'imageSrcSet',
          innerhtml: 'innerHTML',
          inputmode: 'inputMode',
          integrity: 'integrity',
          is: 'is',
          itemid: 'itemID',
          itemprop: 'itemProp',
          itemref: 'itemRef',
          itemscope: 'itemScope',
          itemtype: 'itemType',
          keyparams: 'keyParams',
          keytype: 'keyType',
          kind: 'kind',
          label: 'label',
          lang: 'lang',
          list: 'list',
          loop: 'loop',
          low: 'low',
          manifest: 'manifest',
          marginwidth: 'marginWidth',
          marginheight: 'marginHeight',
          max: 'max',
          maxlength: 'maxLength',
          media: 'media',
          mediagroup: 'mediaGroup',
          method: 'method',
          min: 'min',
          minlength: 'minLength',
          multiple: 'multiple',
          muted: 'muted',
          name: 'name',
          nomodule: 'noModule',
          nonce: 'nonce',
          novalidate: 'noValidate',
          open: 'open',
          optimum: 'optimum',
          pattern: 'pattern',
          placeholder: 'placeholder',
          playsinline: 'playsInline',
          poster: 'poster',
          preload: 'preload',
          profile: 'profile',
          radiogroup: 'radioGroup',
          readonly: 'readOnly',
          referrerpolicy: 'referrerPolicy',
          rel: 'rel',
          required: 'required',
          reversed: 'reversed',
          role: 'role',
          rows: 'rows',
          rowspan: 'rowSpan',
          sandbox: 'sandbox',
          scope: 'scope',
          scoped: 'scoped',
          scrolling: 'scrolling',
          seamless: 'seamless',
          selected: 'selected',
          shape: 'shape',
          size: 'size',
          sizes: 'sizes',
          span: 'span',
          spellcheck: 'spellCheck',
          src: 'src',
          srcdoc: 'srcDoc',
          srclang: 'srcLang',
          srcset: 'srcSet',
          start: 'start',
          step: 'step',
          style: 'style',
          summary: 'summary',
          tabindex: 'tabIndex',
          target: 'target',
          title: 'title',
          type: 'type',
          usemap: 'useMap',
          value: 'value',
          width: 'width',
          wmode: 'wmode',
          wrap: 'wrap',
          // SVG
          about: 'about',
          accentheight: 'accentHeight',
          'accent-height': 'accentHeight',
          accumulate: 'accumulate',
          additive: 'additive',
          alignmentbaseline: 'alignmentBaseline',
          'alignment-baseline': 'alignmentBaseline',
          allowreorder: 'allowReorder',
          alphabetic: 'alphabetic',
          amplitude: 'amplitude',
          arabicform: 'arabicForm',
          'arabic-form': 'arabicForm',
          ascent: 'ascent',
          attributename: 'attributeName',
          attributetype: 'attributeType',
          autoreverse: 'autoReverse',
          azimuth: 'azimuth',
          basefrequency: 'baseFrequency',
          baselineshift: 'baselineShift',
          'baseline-shift': 'baselineShift',
          baseprofile: 'baseProfile',
          bbox: 'bbox',
          begin: 'begin',
          bias: 'bias',
          by: 'by',
          calcmode: 'calcMode',
          capheight: 'capHeight',
          'cap-height': 'capHeight',
          clip: 'clip',
          clippath: 'clipPath',
          'clip-path': 'clipPath',
          clippathunits: 'clipPathUnits',
          cliprule: 'clipRule',
          'clip-rule': 'clipRule',
          color: 'color',
          colorinterpolation: 'colorInterpolation',
          'color-interpolation': 'colorInterpolation',
          colorinterpolationfilters: 'colorInterpolationFilters',
          'color-interpolation-filters': 'colorInterpolationFilters',
          colorprofile: 'colorProfile',
          'color-profile': 'colorProfile',
          colorrendering: 'colorRendering',
          'color-rendering': 'colorRendering',
          contentscripttype: 'contentScriptType',
          contentstyletype: 'contentStyleType',
          cursor: 'cursor',
          cx: 'cx',
          cy: 'cy',
          d: 'd',
          datatype: 'datatype',
          decelerate: 'decelerate',
          descent: 'descent',
          diffuseconstant: 'diffuseConstant',
          direction: 'direction',
          display: 'display',
          divisor: 'divisor',
          dominantbaseline: 'dominantBaseline',
          'dominant-baseline': 'dominantBaseline',
          dur: 'dur',
          dx: 'dx',
          dy: 'dy',
          edgemode: 'edgeMode',
          elevation: 'elevation',
          enablebackground: 'enableBackground',
          'enable-background': 'enableBackground',
          end: 'end',
          exponent: 'exponent',
          externalresourcesrequired: 'externalResourcesRequired',
          fill: 'fill',
          fillopacity: 'fillOpacity',
          'fill-opacity': 'fillOpacity',
          fillrule: 'fillRule',
          'fill-rule': 'fillRule',
          filter: 'filter',
          filterres: 'filterRes',
          filterunits: 'filterUnits',
          floodopacity: 'floodOpacity',
          'flood-opacity': 'floodOpacity',
          floodcolor: 'floodColor',
          'flood-color': 'floodColor',
          focusable: 'focusable',
          fontfamily: 'fontFamily',
          'font-family': 'fontFamily',
          fontsize: 'fontSize',
          'font-size': 'fontSize',
          fontsizeadjust: 'fontSizeAdjust',
          'font-size-adjust': 'fontSizeAdjust',
          fontstretch: 'fontStretch',
          'font-stretch': 'fontStretch',
          fontstyle: 'fontStyle',
          'font-style': 'fontStyle',
          fontvariant: 'fontVariant',
          'font-variant': 'fontVariant',
          fontweight: 'fontWeight',
          'font-weight': 'fontWeight',
          format: 'format',
          from: 'from',
          fx: 'fx',
          fy: 'fy',
          g1: 'g1',
          g2: 'g2',
          glyphname: 'glyphName',
          'glyph-name': 'glyphName',
          glyphorientationhorizontal: 'glyphOrientationHorizontal',
          'glyph-orientation-horizontal': 'glyphOrientationHorizontal',
          glyphorientationvertical: 'glyphOrientationVertical',
          'glyph-orientation-vertical': 'glyphOrientationVertical',
          glyphref: 'glyphRef',
          gradienttransform: 'gradientTransform',
          gradientunits: 'gradientUnits',
          hanging: 'hanging',
          horizadvx: 'horizAdvX',
          'horiz-adv-x': 'horizAdvX',
          horizoriginx: 'horizOriginX',
          'horiz-origin-x': 'horizOriginX',
          ideographic: 'ideographic',
          imagerendering: 'imageRendering',
          'image-rendering': 'imageRendering',
          in2: 'in2',
          in: 'in',
          inlist: 'inlist',
          intercept: 'intercept',
          k1: 'k1',
          k2: 'k2',
          k3: 'k3',
          k4: 'k4',
          k: 'k',
          kernelmatrix: 'kernelMatrix',
          kernelunitlength: 'kernelUnitLength',
          kerning: 'kerning',
          keypoints: 'keyPoints',
          keysplines: 'keySplines',
          keytimes: 'keyTimes',
          lengthadjust: 'lengthAdjust',
          letterspacing: 'letterSpacing',
          'letter-spacing': 'letterSpacing',
          lightingcolor: 'lightingColor',
          'lighting-color': 'lightingColor',
          limitingconeangle: 'limitingConeAngle',
          local: 'local',
          markerend: 'markerEnd',
          'marker-end': 'markerEnd',
          markerheight: 'markerHeight',
          markermid: 'markerMid',
          'marker-mid': 'markerMid',
          markerstart: 'markerStart',
          'marker-start': 'markerStart',
          markerunits: 'markerUnits',
          markerwidth: 'markerWidth',
          mask: 'mask',
          maskcontentunits: 'maskContentUnits',
          maskunits: 'maskUnits',
          mathematical: 'mathematical',
          mode: 'mode',
          numoctaves: 'numOctaves',
          offset: 'offset',
          opacity: 'opacity',
          operator: 'operator',
          order: 'order',
          orient: 'orient',
          orientation: 'orientation',
          origin: 'origin',
          overflow: 'overflow',
          overlineposition: 'overlinePosition',
          'overline-position': 'overlinePosition',
          overlinethickness: 'overlineThickness',
          'overline-thickness': 'overlineThickness',
          paintorder: 'paintOrder',
          'paint-order': 'paintOrder',
          panose1: 'panose1',
          'panose-1': 'panose1',
          pathlength: 'pathLength',
          patterncontentunits: 'patternContentUnits',
          patterntransform: 'patternTransform',
          patternunits: 'patternUnits',
          pointerevents: 'pointerEvents',
          'pointer-events': 'pointerEvents',
          points: 'points',
          pointsatx: 'pointsAtX',
          pointsaty: 'pointsAtY',
          pointsatz: 'pointsAtZ',
          prefix: 'prefix',
          preservealpha: 'preserveAlpha',
          preserveaspectratio: 'preserveAspectRatio',
          primitiveunits: 'primitiveUnits',
          property: 'property',
          r: 'r',
          radius: 'radius',
          refx: 'refX',
          refy: 'refY',
          renderingintent: 'renderingIntent',
          'rendering-intent': 'renderingIntent',
          repeatcount: 'repeatCount',
          repeatdur: 'repeatDur',
          requiredextensions: 'requiredExtensions',
          requiredfeatures: 'requiredFeatures',
          resource: 'resource',
          restart: 'restart',
          result: 'result',
          results: 'results',
          rotate: 'rotate',
          rx: 'rx',
          ry: 'ry',
          scale: 'scale',
          security: 'security',
          seed: 'seed',
          shaperendering: 'shapeRendering',
          'shape-rendering': 'shapeRendering',
          slope: 'slope',
          spacing: 'spacing',
          specularconstant: 'specularConstant',
          specularexponent: 'specularExponent',
          speed: 'speed',
          spreadmethod: 'spreadMethod',
          startoffset: 'startOffset',
          stddeviation: 'stdDeviation',
          stemh: 'stemh',
          stemv: 'stemv',
          stitchtiles: 'stitchTiles',
          stopcolor: 'stopColor',
          'stop-color': 'stopColor',
          stopopacity: 'stopOpacity',
          'stop-opacity': 'stopOpacity',
          strikethroughposition: 'strikethroughPosition',
          'strikethrough-position': 'strikethroughPosition',
          strikethroughthickness: 'strikethroughThickness',
          'strikethrough-thickness': 'strikethroughThickness',
          string: 'string',
          stroke: 'stroke',
          strokedasharray: 'strokeDasharray',
          'stroke-dasharray': 'strokeDasharray',
          strokedashoffset: 'strokeDashoffset',
          'stroke-dashoffset': 'strokeDashoffset',
          strokelinecap: 'strokeLinecap',
          'stroke-linecap': 'strokeLinecap',
          strokelinejoin: 'strokeLinejoin',
          'stroke-linejoin': 'strokeLinejoin',
          strokemiterlimit: 'strokeMiterlimit',
          'stroke-miterlimit': 'strokeMiterlimit',
          strokewidth: 'strokeWidth',
          'stroke-width': 'strokeWidth',
          strokeopacity: 'strokeOpacity',
          'stroke-opacity': 'strokeOpacity',
          suppresscontenteditablewarning: 'suppressContentEditableWarning',
          suppresshydrationwarning: 'suppressHydrationWarning',
          surfacescale: 'surfaceScale',
          systemlanguage: 'systemLanguage',
          tablevalues: 'tableValues',
          targetx: 'targetX',
          targety: 'targetY',
          textanchor: 'textAnchor',
          'text-anchor': 'textAnchor',
          textdecoration: 'textDecoration',
          'text-decoration': 'textDecoration',
          textlength: 'textLength',
          textrendering: 'textRendering',
          'text-rendering': 'textRendering',
          to: 'to',
          transform: 'transform',
          typeof: 'typeof',
          u1: 'u1',
          u2: 'u2',
          underlineposition: 'underlinePosition',
          'underline-position': 'underlinePosition',
          underlinethickness: 'underlineThickness',
          'underline-thickness': 'underlineThickness',
          unicode: 'unicode',
          unicodebidi: 'unicodeBidi',
          'unicode-bidi': 'unicodeBidi',
          unicoderange: 'unicodeRange',
          'unicode-range': 'unicodeRange',
          unitsperem: 'unitsPerEm',
          'units-per-em': 'unitsPerEm',
          unselectable: 'unselectable',
          valphabetic: 'vAlphabetic',
          'v-alphabetic': 'vAlphabetic',
          values: 'values',
          vectoreffect: 'vectorEffect',
          'vector-effect': 'vectorEffect',
          version: 'version',
          vertadvy: 'vertAdvY',
          'vert-adv-y': 'vertAdvY',
          vertoriginx: 'vertOriginX',
          'vert-origin-x': 'vertOriginX',
          vertoriginy: 'vertOriginY',
          'vert-origin-y': 'vertOriginY',
          vhanging: 'vHanging',
          'v-hanging': 'vHanging',
          videographic: 'vIdeographic',
          'v-ideographic': 'vIdeographic',
          viewbox: 'viewBox',
          viewtarget: 'viewTarget',
          visibility: 'visibility',
          vmathematical: 'vMathematical',
          'v-mathematical': 'vMathematical',
          vocab: 'vocab',
          widths: 'widths',
          wordspacing: 'wordSpacing',
          'word-spacing': 'wordSpacing',
          writingmode: 'writingMode',
          'writing-mode': 'writingMode',
          x1: 'x1',
          x2: 'x2',
          x: 'x',
          xchannelselector: 'xChannelSelector',
          xheight: 'xHeight',
          'x-height': 'xHeight',
          xlinkactuate: 'xlinkActuate',
          'xlink:actuate': 'xlinkActuate',
          xlinkarcrole: 'xlinkArcrole',
          'xlink:arcrole': 'xlinkArcrole',
          xlinkhref: 'xlinkHref',
          'xlink:href': 'xlinkHref',
          xlinkrole: 'xlinkRole',
          'xlink:role': 'xlinkRole',
          xlinkshow: 'xlinkShow',
          'xlink:show': 'xlinkShow',
          xlinktitle: 'xlinkTitle',
          'xlink:title': 'xlinkTitle',
          xlinktype: 'xlinkType',
          'xlink:type': 'xlinkType',
          xmlbase: 'xmlBase',
          'xml:base': 'xmlBase',
          xmllang: 'xmlLang',
          'xml:lang': 'xmlLang',
          xmlns: 'xmlns',
          'xml:space': 'xmlSpace',
          xmlnsxlink: 'xmlnsXlink',
          'xmlns:xlink': 'xmlnsXlink',
          xmlspace: 'xmlSpace',
          y1: 'y1',
          y2: 'y2',
          y: 'y',
          ychannelselector: 'yChannelSelector',
          z: 'z',
          zoomandpan: 'zoomAndPan',
        };
        var validateProperty$1 = function () {};
        {
          var warnedProperties$1 = {};
          var EVENT_NAME_REGEX = /^on./;
          var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
          var rARIA$1 = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
          var rARIACamel$1 = new RegExp(
            '^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$'
          );
          validateProperty$1 = function (tagName, name, value, eventRegistry) {
            if (
              hasOwnProperty.call(warnedProperties$1, name) &&
              warnedProperties$1[name]
            ) {
              return true;
            }
            var lowerCasedName = name.toLowerCase();
            if (
              lowerCasedName === 'onfocusin' ||
              lowerCasedName === 'onfocusout'
            ) {
              error(
                'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React.'
              );
              warnedProperties$1[name] = true;
              return true;
            }
            if (eventRegistry != null) {
              var registrationNameDependencies =
                  eventRegistry.registrationNameDependencies,
                possibleRegistrationNames =
                  eventRegistry.possibleRegistrationNames;
              if (registrationNameDependencies.hasOwnProperty(name)) {
                return true;
              }
              var registrationName = possibleRegistrationNames.hasOwnProperty(
                lowerCasedName
              )
                ? possibleRegistrationNames[lowerCasedName]
                : null;
              if (registrationName != null) {
                error(
                  'Invalid event handler property `%s`. Did you mean `%s`?',
                  name,
                  registrationName
                );
                warnedProperties$1[name] = true;
                return true;
              }
              if (EVENT_NAME_REGEX.test(name)) {
                error(
                  'Unknown event handler property `%s`. It will be ignored.',
                  name
                );
                warnedProperties$1[name] = true;
                return true;
              }
            } else if (EVENT_NAME_REGEX.test(name)) {
              if (INVALID_EVENT_NAME_REGEX.test(name)) {
                error(
                  'Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.',
                  name
                );
              }
              warnedProperties$1[name] = true;
              return true;
            }
            if (rARIA$1.test(name) || rARIACamel$1.test(name)) {
              return true;
            }
            if (lowerCasedName === 'innerhtml') {
              error(
                'Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`.'
              );
              warnedProperties$1[name] = true;
              return true;
            }
            if (lowerCasedName === 'aria') {
              error(
                'The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead.'
              );
              warnedProperties$1[name] = true;
              return true;
            }
            if (
              lowerCasedName === 'is' &&
              value !== null &&
              value !== void 0 &&
              typeof value !== 'string'
            ) {
              error(
                'Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.',
                typeof value
              );
              warnedProperties$1[name] = true;
              return true;
            }
            if (typeof value === 'number' && isNaN(value)) {
              error(
                'Received NaN for the `%s` attribute. If this is expected, cast the value to a string.',
                name
              );
              warnedProperties$1[name] = true;
              return true;
            }
            var propertyInfo = getPropertyInfo(name);
            var isReserved =
              propertyInfo !== null && propertyInfo.type === RESERVED;
            if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
              var standardName = possibleStandardNames[lowerCasedName];
              if (standardName !== name) {
                error(
                  'Invalid DOM property `%s`. Did you mean `%s`?',
                  name,
                  standardName
                );
                warnedProperties$1[name] = true;
                return true;
              }
            } else if (!isReserved && name !== lowerCasedName) {
              error(
                'React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.',
                name,
                lowerCasedName
              );
              warnedProperties$1[name] = true;
              return true;
            }
            if (
              typeof value === 'boolean' &&
              shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)
            ) {
              if (value) {
                error(
                  'Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.',
                  value,
                  name,
                  name,
                  value,
                  name
                );
              } else {
                error(
                  'Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.',
                  value,
                  name,
                  name,
                  value,
                  name,
                  name,
                  name
                );
              }
              warnedProperties$1[name] = true;
              return true;
            }
            if (isReserved) {
              return true;
            }
            if (
              shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)
            ) {
              warnedProperties$1[name] = true;
              return false;
            }
            if (
              (value === 'false' || value === 'true') &&
              propertyInfo !== null &&
              propertyInfo.type === BOOLEAN
            ) {
              error(
                'Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?',
                value,
                name,
                value === 'false'
                  ? 'The browser will interpret it as a truthy value.'
                  : 'Although this works, it will not work as expected if you pass the string "false".',
                name,
                value
              );
              warnedProperties$1[name] = true;
              return true;
            }
            return true;
          };
        }
        var warnUnknownProperties = function (type, props, eventRegistry) {
          {
            var unknownProps = [];
            for (var key in props) {
              var isValid = validateProperty$1(
                type,
                key,
                props[key],
                eventRegistry
              );
              if (!isValid) {
                unknownProps.push(key);
              }
            }
            var unknownPropString = unknownProps
              .map(function (prop) {
                return '`' + prop + '`';
              })
              .join(', ');
            if (unknownProps.length === 1) {
              error(
                'Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior ',
                unknownPropString,
                type
              );
            } else if (unknownProps.length > 1) {
              error(
                'Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior ',
                unknownPropString,
                type
              );
            }
          }
        };
        function validateProperties$2(type, props, eventRegistry) {
          if (isCustomComponent(type, props)) {
            return;
          }
          warnUnknownProperties(type, props, eventRegistry);
        }
        var warnValidStyle = function () {};
        {
          var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
          var msPattern = /^-ms-/;
          var hyphenPattern = /-(.)/g;
          var badStyleValueWithSemicolonPattern = /;\s*$/;
          var warnedStyleNames = {};
          var warnedStyleValues = {};
          var warnedForNaNValue = false;
          var warnedForInfinityValue = false;
          var camelize = function (string) {
            return string.replace(hyphenPattern, function (_2, character) {
              return character.toUpperCase();
            });
          };
          var warnHyphenatedStyleName = function (name) {
            if (
              warnedStyleNames.hasOwnProperty(name) &&
              warnedStyleNames[name]
            ) {
              return;
            }
            warnedStyleNames[name] = true;
            error(
              'Unsupported style property %s. Did you mean %s?',
              name,
              // As Andi Smith suggests
              // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
              // is converted to lowercase `ms`.
              camelize(name.replace(msPattern, 'ms-'))
            );
          };
          var warnBadVendoredStyleName = function (name) {
            if (
              warnedStyleNames.hasOwnProperty(name) &&
              warnedStyleNames[name]
            ) {
              return;
            }
            warnedStyleNames[name] = true;
            error(
              'Unsupported vendor-prefixed style property %s. Did you mean %s?',
              name,
              name.charAt(0).toUpperCase() + name.slice(1)
            );
          };
          var warnStyleValueWithSemicolon = function (name, value) {
            if (
              warnedStyleValues.hasOwnProperty(value) &&
              warnedStyleValues[value]
            ) {
              return;
            }
            warnedStyleValues[value] = true;
            error(
              `Style property values shouldn't contain a semicolon. Try "%s: %s" instead.`,
              name,
              value.replace(badStyleValueWithSemicolonPattern, '')
            );
          };
          var warnStyleValueIsNaN = function (name, value) {
            if (warnedForNaNValue) {
              return;
            }
            warnedForNaNValue = true;
            error(
              '`NaN` is an invalid value for the `%s` css style property.',
              name
            );
          };
          var warnStyleValueIsInfinity = function (name, value) {
            if (warnedForInfinityValue) {
              return;
            }
            warnedForInfinityValue = true;
            error(
              '`Infinity` is an invalid value for the `%s` css style property.',
              name
            );
          };
          warnValidStyle = function (name, value) {
            if (name.indexOf('-') > -1) {
              warnHyphenatedStyleName(name);
            } else if (badVendoredStyleNamePattern.test(name)) {
              warnBadVendoredStyleName(name);
            } else if (badStyleValueWithSemicolonPattern.test(value)) {
              warnStyleValueWithSemicolon(name, value);
            }
            if (typeof value === 'number') {
              if (isNaN(value)) {
                warnStyleValueIsNaN(name, value);
              } else if (!isFinite(value)) {
                warnStyleValueIsInfinity(name, value);
              }
            }
          };
        }
        var warnValidStyle$1 = warnValidStyle;
        var matchHtmlRegExp = /["'&<>]/;
        function escapeHtml(string) {
          {
            checkHtmlStringCoercion(string);
          }
          var str = '' + string;
          var match = matchHtmlRegExp.exec(str);
          if (!match) {
            return str;
          }
          var escape3;
          var html = '';
          var index;
          var lastIndex = 0;
          for (index = match.index; index < str.length; index++) {
            switch (str.charCodeAt(index)) {
              case 34:
                escape3 = '&quot;';
                break;
              case 38:
                escape3 = '&amp;';
                break;
              case 39:
                escape3 = '&#x27;';
                break;
              case 60:
                escape3 = '&lt;';
                break;
              case 62:
                escape3 = '&gt;';
                break;
              default:
                continue;
            }
            if (lastIndex !== index) {
              html += str.substring(lastIndex, index);
            }
            lastIndex = index + 1;
            html += escape3;
          }
          return lastIndex !== index
            ? html + str.substring(lastIndex, index)
            : html;
        }
        function escapeTextForBrowser(text) {
          if (typeof text === 'boolean' || typeof text === 'number') {
            return '' + text;
          }
          return escapeHtml(text);
        }
        var uppercasePattern = /([A-Z])/g;
        var msPattern$1 = /^ms-/;
        function hyphenateStyleName(name) {
          return name
            .replace(uppercasePattern, '-$1')
            .toLowerCase()
            .replace(msPattern$1, '-ms-');
        }
        var isJavaScriptProtocol =
          /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i;
        var didWarn = false;
        function sanitizeURL(url) {
          {
            if (!didWarn && isJavaScriptProtocol.test(url)) {
              didWarn = true;
              error(
                'A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.',
                JSON.stringify(url)
              );
            }
          }
        }
        var isArrayImpl = Array.isArray;
        function isArray(a) {
          return isArrayImpl(a);
        }
        var startInlineScript = stringToPrecomputedChunk('<script>');
        var endInlineScript = stringToPrecomputedChunk('</script>');
        var startScriptSrc = stringToPrecomputedChunk('<script src="');
        var startModuleSrc = stringToPrecomputedChunk(
          '<script type="module" src="'
        );
        var endAsyncScript = stringToPrecomputedChunk('" async=""></script>');
        function escapeBootstrapScriptContent(scriptText) {
          {
            checkHtmlStringCoercion(scriptText);
          }
          return ('' + scriptText).replace(scriptRegex, scriptReplacer);
        }
        var scriptRegex = /(<\/|<)(s)(cript)/gi;
        var scriptReplacer = function (match, prefix2, s2, suffix) {
          return '' + prefix2 + (s2 === 's' ? '\\u0073' : '\\u0053') + suffix;
        };
        function createResponseState(
          identifierPrefix,
          nonce,
          bootstrapScriptContent,
          bootstrapScripts,
          bootstrapModules
        ) {
          var idPrefix = identifierPrefix === void 0 ? '' : identifierPrefix;
          var inlineScriptWithNonce =
            nonce === void 0
              ? startInlineScript
              : stringToPrecomputedChunk(
                  '<script nonce="' + escapeTextForBrowser(nonce) + '">'
                );
          var bootstrapChunks = [];
          if (bootstrapScriptContent !== void 0) {
            bootstrapChunks.push(
              inlineScriptWithNonce,
              stringToChunk(
                escapeBootstrapScriptContent(bootstrapScriptContent)
              ),
              endInlineScript
            );
          }
          if (bootstrapScripts !== void 0) {
            for (var i = 0; i < bootstrapScripts.length; i++) {
              bootstrapChunks.push(
                startScriptSrc,
                stringToChunk(escapeTextForBrowser(bootstrapScripts[i])),
                endAsyncScript
              );
            }
          }
          if (bootstrapModules !== void 0) {
            for (var _i2 = 0; _i2 < bootstrapModules.length; _i2++) {
              bootstrapChunks.push(
                startModuleSrc,
                stringToChunk(escapeTextForBrowser(bootstrapModules[_i2])),
                endAsyncScript
              );
            }
          }
          return {
            bootstrapChunks,
            startInlineScript: inlineScriptWithNonce,
            placeholderPrefix: stringToPrecomputedChunk(idPrefix + 'P:'),
            segmentPrefix: stringToPrecomputedChunk(idPrefix + 'S:'),
            boundaryPrefix: idPrefix + 'B:',
            idPrefix,
            nextSuspenseID: 0,
            sentCompleteSegmentFunction: false,
            sentCompleteBoundaryFunction: false,
            sentClientRenderFunction: false,
          };
        }
        var ROOT_HTML_MODE = 0;
        var HTML_MODE = 1;
        var SVG_MODE = 2;
        var MATHML_MODE = 3;
        var HTML_TABLE_MODE = 4;
        var HTML_TABLE_BODY_MODE = 5;
        var HTML_TABLE_ROW_MODE = 6;
        var HTML_COLGROUP_MODE = 7;
        function createFormatContext(insertionMode, selectedValue) {
          return {
            insertionMode,
            selectedValue,
          };
        }
        function getChildFormatContext(parentContext, type, props) {
          switch (type) {
            case 'select':
              return createFormatContext(
                HTML_MODE,
                props.value != null ? props.value : props.defaultValue
              );
            case 'svg':
              return createFormatContext(SVG_MODE, null);
            case 'math':
              return createFormatContext(MATHML_MODE, null);
            case 'foreignObject':
              return createFormatContext(HTML_MODE, null);
            case 'table':
              return createFormatContext(HTML_TABLE_MODE, null);
            case 'thead':
            case 'tbody':
            case 'tfoot':
              return createFormatContext(HTML_TABLE_BODY_MODE, null);
            case 'colgroup':
              return createFormatContext(HTML_COLGROUP_MODE, null);
            case 'tr':
              return createFormatContext(HTML_TABLE_ROW_MODE, null);
          }
          if (parentContext.insertionMode >= HTML_TABLE_MODE) {
            return createFormatContext(HTML_MODE, null);
          }
          if (parentContext.insertionMode === ROOT_HTML_MODE) {
            return createFormatContext(HTML_MODE, null);
          }
          return parentContext;
        }
        var UNINITIALIZED_SUSPENSE_BOUNDARY_ID = null;
        function assignSuspenseBoundaryID(responseState) {
          var generatedID = responseState.nextSuspenseID++;
          return stringToPrecomputedChunk(
            responseState.boundaryPrefix + generatedID.toString(16)
          );
        }
        function makeId(responseState, treeId, localId) {
          var idPrefix = responseState.idPrefix;
          var id = ':' + idPrefix + 'R' + treeId;
          if (localId > 0) {
            id += 'H' + localId.toString(32);
          }
          return id + ':';
        }
        function encodeHTMLTextNode(text) {
          return escapeTextForBrowser(text);
        }
        var textSeparator = stringToPrecomputedChunk('<!-- -->');
        function pushTextInstance(target, text, responseState, textEmbedded) {
          if (text === '') {
            return textEmbedded;
          }
          if (textEmbedded) {
            target.push(textSeparator);
          }
          target.push(stringToChunk(encodeHTMLTextNode(text)));
          return true;
        }
        function pushSegmentFinale(
          target,
          responseState,
          lastPushedText,
          textEmbedded
        ) {
          if (lastPushedText && textEmbedded) {
            target.push(textSeparator);
          }
        }
        var styleNameCache = /* @__PURE__ */ new Map();
        function processStyleName(styleName) {
          var chunk = styleNameCache.get(styleName);
          if (chunk !== void 0) {
            return chunk;
          }
          var result = stringToPrecomputedChunk(
            escapeTextForBrowser(hyphenateStyleName(styleName))
          );
          styleNameCache.set(styleName, result);
          return result;
        }
        var styleAttributeStart = stringToPrecomputedChunk(' style="');
        var styleAssign = stringToPrecomputedChunk(':');
        var styleSeparator = stringToPrecomputedChunk(';');
        function pushStyle(target, responseState, style) {
          if (typeof style !== 'object') {
            throw new Error(
              "The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX."
            );
          }
          var isFirst = true;
          for (var styleName in style) {
            if (!hasOwnProperty.call(style, styleName)) {
              continue;
            }
            var styleValue = style[styleName];
            if (
              styleValue == null ||
              typeof styleValue === 'boolean' ||
              styleValue === ''
            ) {
              continue;
            }
            var nameChunk = void 0;
            var valueChunk = void 0;
            var isCustomProperty = styleName.indexOf('--') === 0;
            if (isCustomProperty) {
              nameChunk = stringToChunk(escapeTextForBrowser(styleName));
              {
                checkCSSPropertyStringCoercion(styleValue, styleName);
              }
              valueChunk = stringToChunk(
                escapeTextForBrowser(('' + styleValue).trim())
              );
            } else {
              {
                warnValidStyle$1(styleName, styleValue);
              }
              nameChunk = processStyleName(styleName);
              if (typeof styleValue === 'number') {
                if (
                  styleValue !== 0 &&
                  !hasOwnProperty.call(isUnitlessNumber, styleName)
                ) {
                  valueChunk = stringToChunk(styleValue + 'px');
                } else {
                  valueChunk = stringToChunk('' + styleValue);
                }
              } else {
                {
                  checkCSSPropertyStringCoercion(styleValue, styleName);
                }
                valueChunk = stringToChunk(
                  escapeTextForBrowser(('' + styleValue).trim())
                );
              }
            }
            if (isFirst) {
              isFirst = false;
              target.push(
                styleAttributeStart,
                nameChunk,
                styleAssign,
                valueChunk
              );
            } else {
              target.push(styleSeparator, nameChunk, styleAssign, valueChunk);
            }
          }
          if (!isFirst) {
            target.push(attributeEnd);
          }
        }
        var attributeSeparator = stringToPrecomputedChunk(' ');
        var attributeAssign = stringToPrecomputedChunk('="');
        var attributeEnd = stringToPrecomputedChunk('"');
        var attributeEmptyString = stringToPrecomputedChunk('=""');
        function pushAttribute(target, responseState, name, value) {
          switch (name) {
            case 'style': {
              pushStyle(target, responseState, value);
              return;
            }
            case 'defaultValue':
            case 'defaultChecked':
            case 'innerHTML':
            case 'suppressContentEditableWarning':
            case 'suppressHydrationWarning':
              return;
          }
          if (
            // shouldIgnoreAttribute
            // We have already filtered out null/undefined and reserved words.
            name.length > 2 &&
            (name[0] === 'o' || name[0] === 'O') &&
            (name[1] === 'n' || name[1] === 'N')
          ) {
            return;
          }
          var propertyInfo = getPropertyInfo(name);
          if (propertyInfo !== null) {
            switch (typeof value) {
              case 'function':
              case 'symbol':
                return;
              case 'boolean': {
                if (!propertyInfo.acceptsBooleans) {
                  return;
                }
              }
            }
            var attributeName = propertyInfo.attributeName;
            var attributeNameChunk = stringToChunk(attributeName);
            switch (propertyInfo.type) {
              case BOOLEAN:
                if (value) {
                  target.push(
                    attributeSeparator,
                    attributeNameChunk,
                    attributeEmptyString
                  );
                }
                return;
              case OVERLOADED_BOOLEAN:
                if (value === true) {
                  target.push(
                    attributeSeparator,
                    attributeNameChunk,
                    attributeEmptyString
                  );
                } else if (value === false);
                else {
                  target.push(
                    attributeSeparator,
                    attributeNameChunk,
                    attributeAssign,
                    stringToChunk(escapeTextForBrowser(value)),
                    attributeEnd
                  );
                }
                return;
              case NUMERIC:
                if (!isNaN(value)) {
                  target.push(
                    attributeSeparator,
                    attributeNameChunk,
                    attributeAssign,
                    stringToChunk(escapeTextForBrowser(value)),
                    attributeEnd
                  );
                }
                break;
              case POSITIVE_NUMERIC:
                if (!isNaN(value) && value >= 1) {
                  target.push(
                    attributeSeparator,
                    attributeNameChunk,
                    attributeAssign,
                    stringToChunk(escapeTextForBrowser(value)),
                    attributeEnd
                  );
                }
                break;
              default:
                if (propertyInfo.sanitizeURL) {
                  {
                    checkAttributeStringCoercion(value, attributeName);
                  }
                  value = '' + value;
                  sanitizeURL(value);
                }
                target.push(
                  attributeSeparator,
                  attributeNameChunk,
                  attributeAssign,
                  stringToChunk(escapeTextForBrowser(value)),
                  attributeEnd
                );
            }
          } else if (isAttributeNameSafe(name)) {
            switch (typeof value) {
              case 'function':
              case 'symbol':
                return;
              case 'boolean': {
                var prefix2 = name.toLowerCase().slice(0, 5);
                if (prefix2 !== 'data-' && prefix2 !== 'aria-') {
                  return;
                }
              }
            }
            target.push(
              attributeSeparator,
              stringToChunk(name),
              attributeAssign,
              stringToChunk(escapeTextForBrowser(value)),
              attributeEnd
            );
          }
        }
        var endOfStartTag = stringToPrecomputedChunk('>');
        var endOfStartTagSelfClosing = stringToPrecomputedChunk('/>');
        function pushInnerHTML(target, innerHTML, children) {
          if (innerHTML != null) {
            if (children != null) {
              throw new Error(
                'Can only set one of `children` or `props.dangerouslySetInnerHTML`.'
              );
            }
            if (typeof innerHTML !== 'object' || !('__html' in innerHTML)) {
              throw new Error(
                '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.'
              );
            }
            var html = innerHTML.__html;
            if (html !== null && html !== void 0) {
              {
                checkHtmlStringCoercion(html);
              }
              target.push(stringToChunk('' + html));
            }
          }
        }
        var didWarnDefaultInputValue = false;
        var didWarnDefaultChecked = false;
        var didWarnDefaultSelectValue = false;
        var didWarnDefaultTextareaValue = false;
        var didWarnInvalidOptionChildren = false;
        var didWarnInvalidOptionInnerHTML = false;
        var didWarnSelectedSetOnOption = false;
        function checkSelectProp(props, propName) {
          {
            var value = props[propName];
            if (value != null) {
              var array = isArray(value);
              if (props.multiple && !array) {
                error(
                  'The `%s` prop supplied to <select> must be an array if `multiple` is true.',
                  propName
                );
              } else if (!props.multiple && array) {
                error(
                  'The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.',
                  propName
                );
              }
            }
          }
        }
        function pushStartSelect(target, props, responseState) {
          {
            checkControlledValueProps('select', props);
            checkSelectProp(props, 'value');
            checkSelectProp(props, 'defaultValue');
            if (
              props.value !== void 0 &&
              props.defaultValue !== void 0 &&
              !didWarnDefaultSelectValue
            ) {
              error(
                'Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://reactjs.org/link/controlled-components'
              );
              didWarnDefaultSelectValue = true;
            }
          }
          target.push(startChunkForTag('select'));
          var children = null;
          var innerHTML = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case 'children':
                  children = propValue;
                  break;
                case 'dangerouslySetInnerHTML':
                  innerHTML = propValue;
                  break;
                case 'defaultValue':
                case 'value':
                  break;
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          pushInnerHTML(target, innerHTML, children);
          return children;
        }
        function flattenOptionChildren(children) {
          var content = '';
          React.Children.forEach(children, function (child) {
            if (child == null) {
              return;
            }
            content += child;
            {
              if (
                !didWarnInvalidOptionChildren &&
                typeof child !== 'string' &&
                typeof child !== 'number'
              ) {
                didWarnInvalidOptionChildren = true;
                error(
                  'Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>.'
                );
              }
            }
          });
          return content;
        }
        var selectedMarkerAttribute = stringToPrecomputedChunk(' selected=""');
        function pushStartOption(target, props, responseState, formatContext) {
          var selectedValue = formatContext.selectedValue;
          target.push(startChunkForTag('option'));
          var children = null;
          var value = null;
          var selected = null;
          var innerHTML = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case 'children':
                  children = propValue;
                  break;
                case 'selected':
                  selected = propValue;
                  {
                    if (!didWarnSelectedSetOnOption) {
                      error(
                        'Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>.'
                      );
                      didWarnSelectedSetOnOption = true;
                    }
                  }
                  break;
                case 'dangerouslySetInnerHTML':
                  innerHTML = propValue;
                  break;
                case 'value':
                  value = propValue;
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          if (selectedValue != null) {
            var stringValue;
            if (value !== null) {
              {
                checkAttributeStringCoercion(value, 'value');
              }
              stringValue = '' + value;
            } else {
              {
                if (innerHTML !== null) {
                  if (!didWarnInvalidOptionInnerHTML) {
                    didWarnInvalidOptionInnerHTML = true;
                    error(
                      'Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected.'
                    );
                  }
                }
              }
              stringValue = flattenOptionChildren(children);
            }
            if (isArray(selectedValue)) {
              for (var i = 0; i < selectedValue.length; i++) {
                {
                  checkAttributeStringCoercion(selectedValue[i], 'value');
                }
                var v = '' + selectedValue[i];
                if (v === stringValue) {
                  target.push(selectedMarkerAttribute);
                  break;
                }
              }
            } else {
              {
                checkAttributeStringCoercion(selectedValue, 'select.value');
              }
              if ('' + selectedValue === stringValue) {
                target.push(selectedMarkerAttribute);
              }
            }
          } else if (selected) {
            target.push(selectedMarkerAttribute);
          }
          target.push(endOfStartTag);
          pushInnerHTML(target, innerHTML, children);
          return children;
        }
        function pushInput(target, props, responseState) {
          {
            checkControlledValueProps('input', props);
            if (
              props.checked !== void 0 &&
              props.defaultChecked !== void 0 &&
              !didWarnDefaultChecked
            ) {
              error(
                '%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components',
                'A component',
                props.type
              );
              didWarnDefaultChecked = true;
            }
            if (
              props.value !== void 0 &&
              props.defaultValue !== void 0 &&
              !didWarnDefaultInputValue
            ) {
              error(
                '%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components',
                'A component',
                props.type
              );
              didWarnDefaultInputValue = true;
            }
          }
          target.push(startChunkForTag('input'));
          var value = null;
          var defaultValue = null;
          var checked = null;
          var defaultChecked = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case 'children':
                case 'dangerouslySetInnerHTML':
                  throw new Error(
                    'input is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.'
                  );
                case 'defaultChecked':
                  defaultChecked = propValue;
                  break;
                case 'defaultValue':
                  defaultValue = propValue;
                  break;
                case 'checked':
                  checked = propValue;
                  break;
                case 'value':
                  value = propValue;
                  break;
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          if (checked !== null) {
            pushAttribute(target, responseState, 'checked', checked);
          } else if (defaultChecked !== null) {
            pushAttribute(target, responseState, 'checked', defaultChecked);
          }
          if (value !== null) {
            pushAttribute(target, responseState, 'value', value);
          } else if (defaultValue !== null) {
            pushAttribute(target, responseState, 'value', defaultValue);
          }
          target.push(endOfStartTagSelfClosing);
          return null;
        }
        function pushStartTextArea(target, props, responseState) {
          {
            checkControlledValueProps('textarea', props);
            if (
              props.value !== void 0 &&
              props.defaultValue !== void 0 &&
              !didWarnDefaultTextareaValue
            ) {
              error(
                'Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://reactjs.org/link/controlled-components'
              );
              didWarnDefaultTextareaValue = true;
            }
          }
          target.push(startChunkForTag('textarea'));
          var value = null;
          var defaultValue = null;
          var children = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case 'children':
                  children = propValue;
                  break;
                case 'value':
                  value = propValue;
                  break;
                case 'defaultValue':
                  defaultValue = propValue;
                  break;
                case 'dangerouslySetInnerHTML':
                  throw new Error(
                    '`dangerouslySetInnerHTML` does not make sense on <textarea>.'
                  );
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          if (value === null && defaultValue !== null) {
            value = defaultValue;
          }
          target.push(endOfStartTag);
          if (children != null) {
            {
              error(
                'Use the `defaultValue` or `value` props instead of setting children on <textarea>.'
              );
            }
            if (value != null) {
              throw new Error(
                'If you supply `defaultValue` on a <textarea>, do not pass children.'
              );
            }
            if (isArray(children)) {
              if (children.length > 1) {
                throw new Error('<textarea> can only have at most one child.');
              }
              {
                checkHtmlStringCoercion(children[0]);
              }
              value = '' + children[0];
            }
            {
              checkHtmlStringCoercion(children);
            }
            value = '' + children;
          }
          if (typeof value === 'string' && value[0] === '\n') {
            target.push(leadingNewline);
          }
          if (value !== null) {
            {
              checkAttributeStringCoercion(value, 'value');
            }
            target.push(stringToChunk(encodeHTMLTextNode('' + value)));
          }
          return null;
        }
        function pushSelfClosing(target, props, tag, responseState) {
          target.push(startChunkForTag(tag));
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case 'children':
                case 'dangerouslySetInnerHTML':
                  throw new Error(
                    tag +
                      ' is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.'
                  );
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTagSelfClosing);
          return null;
        }
        function pushStartMenuItem(target, props, responseState) {
          target.push(startChunkForTag('menuitem'));
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case 'children':
                case 'dangerouslySetInnerHTML':
                  throw new Error(
                    'menuitems cannot have `children` nor `dangerouslySetInnerHTML`.'
                  );
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          return null;
        }
        function pushStartTitle(target, props, responseState) {
          target.push(startChunkForTag('title'));
          var children = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case 'children':
                  children = propValue;
                  break;
                case 'dangerouslySetInnerHTML':
                  throw new Error(
                    '`dangerouslySetInnerHTML` does not make sense on <title>.'
                  );
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          {
            var child =
              Array.isArray(children) && children.length < 2
                ? children[0] || null
                : children;
            if (Array.isArray(children) && children.length > 1) {
              error(
                'A title element received an array with more than 1 element as children. In browsers title Elements can only have Text Nodes as children. If the children being rendered output more than a single text node in aggregate the browser will display markup and comments as text in the title and hydration will likely fail and fall back to client rendering'
              );
            } else if (child != null && child.$$typeof != null) {
              error(
                'A title element received a React element for children. In the browser title Elements can only have Text Nodes as children. If the children being rendered output more than a single text node in aggregate the browser will display markup and comments as text in the title and hydration will likely fail and fall back to client rendering'
              );
            } else if (
              child != null &&
              typeof child !== 'string' &&
              typeof child !== 'number'
            ) {
              error(
                'A title element received a value that was not a string or number for children. In the browser title Elements can only have Text Nodes as children. If the children being rendered output more than a single text node in aggregate the browser will display markup and comments as text in the title and hydration will likely fail and fall back to client rendering'
              );
            }
          }
          return children;
        }
        function pushStartGenericElement(target, props, tag, responseState) {
          target.push(startChunkForTag(tag));
          var children = null;
          var innerHTML = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case 'children':
                  children = propValue;
                  break;
                case 'dangerouslySetInnerHTML':
                  innerHTML = propValue;
                  break;
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          pushInnerHTML(target, innerHTML, children);
          if (typeof children === 'string') {
            target.push(stringToChunk(encodeHTMLTextNode(children)));
            return null;
          }
          return children;
        }
        function pushStartCustomElement(target, props, tag, responseState) {
          target.push(startChunkForTag(tag));
          var children = null;
          var innerHTML = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case 'children':
                  children = propValue;
                  break;
                case 'dangerouslySetInnerHTML':
                  innerHTML = propValue;
                  break;
                case 'style':
                  pushStyle(target, responseState, propValue);
                  break;
                case 'suppressContentEditableWarning':
                case 'suppressHydrationWarning':
                  break;
                default:
                  if (
                    isAttributeNameSafe(propKey) &&
                    typeof propValue !== 'function' &&
                    typeof propValue !== 'symbol'
                  ) {
                    target.push(
                      attributeSeparator,
                      stringToChunk(propKey),
                      attributeAssign,
                      stringToChunk(escapeTextForBrowser(propValue)),
                      attributeEnd
                    );
                  }
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          pushInnerHTML(target, innerHTML, children);
          return children;
        }
        var leadingNewline = stringToPrecomputedChunk('\n');
        function pushStartPreformattedElement(
          target,
          props,
          tag,
          responseState
        ) {
          target.push(startChunkForTag(tag));
          var children = null;
          var innerHTML = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case 'children':
                  children = propValue;
                  break;
                case 'dangerouslySetInnerHTML':
                  innerHTML = propValue;
                  break;
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          if (innerHTML != null) {
            if (children != null) {
              throw new Error(
                'Can only set one of `children` or `props.dangerouslySetInnerHTML`.'
              );
            }
            if (typeof innerHTML !== 'object' || !('__html' in innerHTML)) {
              throw new Error(
                '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.'
              );
            }
            var html = innerHTML.__html;
            if (html !== null && html !== void 0) {
              if (
                typeof html === 'string' &&
                html.length > 0 &&
                html[0] === '\n'
              ) {
                target.push(leadingNewline, stringToChunk(html));
              } else {
                {
                  checkHtmlStringCoercion(html);
                }
                target.push(stringToChunk('' + html));
              }
            }
          }
          if (typeof children === 'string' && children[0] === '\n') {
            target.push(leadingNewline);
          }
          return children;
        }
        var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/;
        var validatedTagCache = /* @__PURE__ */ new Map();
        function startChunkForTag(tag) {
          var tagStartChunk = validatedTagCache.get(tag);
          if (tagStartChunk === void 0) {
            if (!VALID_TAG_REGEX.test(tag)) {
              throw new Error('Invalid tag: ' + tag);
            }
            tagStartChunk = stringToPrecomputedChunk('<' + tag);
            validatedTagCache.set(tag, tagStartChunk);
          }
          return tagStartChunk;
        }
        var DOCTYPE = stringToPrecomputedChunk('<!DOCTYPE html>');
        function pushStartInstance(
          target,
          type,
          props,
          responseState,
          formatContext
        ) {
          {
            validateProperties(type, props);
            validateProperties$1(type, props);
            validateProperties$2(type, props, null);
            if (
              !props.suppressContentEditableWarning &&
              props.contentEditable &&
              props.children != null
            ) {
              error(
                'A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional.'
              );
            }
            if (
              formatContext.insertionMode !== SVG_MODE &&
              formatContext.insertionMode !== MATHML_MODE
            ) {
              if (
                type.indexOf('-') === -1 &&
                typeof props.is !== 'string' &&
                type.toLowerCase() !== type
              ) {
                error(
                  '<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.',
                  type
                );
              }
            }
          }
          switch (type) {
            case 'select':
              return pushStartSelect(target, props, responseState);
            case 'option':
              return pushStartOption(
                target,
                props,
                responseState,
                formatContext
              );
            case 'textarea':
              return pushStartTextArea(target, props, responseState);
            case 'input':
              return pushInput(target, props, responseState);
            case 'menuitem':
              return pushStartMenuItem(target, props, responseState);
            case 'title':
              return pushStartTitle(target, props, responseState);
            case 'listing':
            case 'pre': {
              return pushStartPreformattedElement(
                target,
                props,
                type,
                responseState
              );
            }
            case 'area':
            case 'base':
            case 'br':
            case 'col':
            case 'embed':
            case 'hr':
            case 'img':
            case 'keygen':
            case 'link':
            case 'meta':
            case 'param':
            case 'source':
            case 'track':
            case 'wbr': {
              return pushSelfClosing(target, props, type, responseState);
            }
            case 'annotation-xml':
            case 'color-profile':
            case 'font-face':
            case 'font-face-src':
            case 'font-face-uri':
            case 'font-face-format':
            case 'font-face-name':
            case 'missing-glyph': {
              return pushStartGenericElement(
                target,
                props,
                type,
                responseState
              );
            }
            case 'html': {
              if (formatContext.insertionMode === ROOT_HTML_MODE) {
                target.push(DOCTYPE);
              }
              return pushStartGenericElement(
                target,
                props,
                type,
                responseState
              );
            }
            default: {
              if (type.indexOf('-') === -1 && typeof props.is !== 'string') {
                return pushStartGenericElement(
                  target,
                  props,
                  type,
                  responseState
                );
              } else {
                return pushStartCustomElement(
                  target,
                  props,
                  type,
                  responseState
                );
              }
            }
          }
        }
        var endTag1 = stringToPrecomputedChunk('</');
        var endTag2 = stringToPrecomputedChunk('>');
        function pushEndInstance(target, type, props) {
          switch (type) {
            case 'area':
            case 'base':
            case 'br':
            case 'col':
            case 'embed':
            case 'hr':
            case 'img':
            case 'input':
            case 'keygen':
            case 'link':
            case 'meta':
            case 'param':
            case 'source':
            case 'track':
            case 'wbr': {
              break;
            }
            default: {
              target.push(endTag1, stringToChunk(type), endTag2);
            }
          }
        }
        function writeCompletedRoot(destination, responseState) {
          var bootstrapChunks = responseState.bootstrapChunks;
          var i = 0;
          for (; i < bootstrapChunks.length - 1; i++) {
            writeChunk(destination, bootstrapChunks[i]);
          }
          if (i < bootstrapChunks.length) {
            return writeChunkAndReturn(destination, bootstrapChunks[i]);
          }
          return true;
        }
        var placeholder1 = stringToPrecomputedChunk('<template id="');
        var placeholder2 = stringToPrecomputedChunk('"></template>');
        function writePlaceholder(destination, responseState, id) {
          writeChunk(destination, placeholder1);
          writeChunk(destination, responseState.placeholderPrefix);
          var formattedID = stringToChunk(id.toString(16));
          writeChunk(destination, formattedID);
          return writeChunkAndReturn(destination, placeholder2);
        }
        var startCompletedSuspenseBoundary =
          stringToPrecomputedChunk('<!--$-->');
        var startPendingSuspenseBoundary1 = stringToPrecomputedChunk(
          '<!--$?--><template id="'
        );
        var startPendingSuspenseBoundary2 =
          stringToPrecomputedChunk('"></template>');
        var startClientRenderedSuspenseBoundary =
          stringToPrecomputedChunk('<!--$!-->');
        var endSuspenseBoundary = stringToPrecomputedChunk('<!--/$-->');
        var clientRenderedSuspenseBoundaryError1 =
          stringToPrecomputedChunk('<template');
        var clientRenderedSuspenseBoundaryErrorAttrInterstitial =
          stringToPrecomputedChunk('"');
        var clientRenderedSuspenseBoundaryError1A =
          stringToPrecomputedChunk(' data-dgst="');
        var clientRenderedSuspenseBoundaryError1B =
          stringToPrecomputedChunk(' data-msg="');
        var clientRenderedSuspenseBoundaryError1C =
          stringToPrecomputedChunk(' data-stck="');
        var clientRenderedSuspenseBoundaryError2 =
          stringToPrecomputedChunk('></template>');
        function writeStartCompletedSuspenseBoundary(
          destination,
          responseState
        ) {
          return writeChunkAndReturn(
            destination,
            startCompletedSuspenseBoundary
          );
        }
        function writeStartPendingSuspenseBoundary(
          destination,
          responseState,
          id
        ) {
          writeChunk(destination, startPendingSuspenseBoundary1);
          if (id === null) {
            throw new Error(
              'An ID must have been assigned before we can complete the boundary.'
            );
          }
          writeChunk(destination, id);
          return writeChunkAndReturn(
            destination,
            startPendingSuspenseBoundary2
          );
        }
        function writeStartClientRenderedSuspenseBoundary(
          destination,
          responseState,
          errorDigest,
          errorMesssage,
          errorComponentStack
        ) {
          var result;
          result = writeChunkAndReturn(
            destination,
            startClientRenderedSuspenseBoundary
          );
          writeChunk(destination, clientRenderedSuspenseBoundaryError1);
          if (errorDigest) {
            writeChunk(destination, clientRenderedSuspenseBoundaryError1A);
            writeChunk(
              destination,
              stringToChunk(escapeTextForBrowser(errorDigest))
            );
            writeChunk(
              destination,
              clientRenderedSuspenseBoundaryErrorAttrInterstitial
            );
          }
          {
            if (errorMesssage) {
              writeChunk(destination, clientRenderedSuspenseBoundaryError1B);
              writeChunk(
                destination,
                stringToChunk(escapeTextForBrowser(errorMesssage))
              );
              writeChunk(
                destination,
                clientRenderedSuspenseBoundaryErrorAttrInterstitial
              );
            }
            if (errorComponentStack) {
              writeChunk(destination, clientRenderedSuspenseBoundaryError1C);
              writeChunk(
                destination,
                stringToChunk(escapeTextForBrowser(errorComponentStack))
              );
              writeChunk(
                destination,
                clientRenderedSuspenseBoundaryErrorAttrInterstitial
              );
            }
          }
          result = writeChunkAndReturn(
            destination,
            clientRenderedSuspenseBoundaryError2
          );
          return result;
        }
        function writeEndCompletedSuspenseBoundary(destination, responseState) {
          return writeChunkAndReturn(destination, endSuspenseBoundary);
        }
        function writeEndPendingSuspenseBoundary(destination, responseState) {
          return writeChunkAndReturn(destination, endSuspenseBoundary);
        }
        function writeEndClientRenderedSuspenseBoundary(
          destination,
          responseState
        ) {
          return writeChunkAndReturn(destination, endSuspenseBoundary);
        }
        var startSegmentHTML = stringToPrecomputedChunk('<div hidden id="');
        var startSegmentHTML2 = stringToPrecomputedChunk('">');
        var endSegmentHTML = stringToPrecomputedChunk('</div>');
        var startSegmentSVG = stringToPrecomputedChunk(
          '<svg aria-hidden="true" style="display:none" id="'
        );
        var startSegmentSVG2 = stringToPrecomputedChunk('">');
        var endSegmentSVG = stringToPrecomputedChunk('</svg>');
        var startSegmentMathML = stringToPrecomputedChunk(
          '<math aria-hidden="true" style="display:none" id="'
        );
        var startSegmentMathML2 = stringToPrecomputedChunk('">');
        var endSegmentMathML = stringToPrecomputedChunk('</math>');
        var startSegmentTable = stringToPrecomputedChunk('<table hidden id="');
        var startSegmentTable2 = stringToPrecomputedChunk('">');
        var endSegmentTable = stringToPrecomputedChunk('</table>');
        var startSegmentTableBody = stringToPrecomputedChunk(
          '<table hidden><tbody id="'
        );
        var startSegmentTableBody2 = stringToPrecomputedChunk('">');
        var endSegmentTableBody = stringToPrecomputedChunk('</tbody></table>');
        var startSegmentTableRow = stringToPrecomputedChunk(
          '<table hidden><tr id="'
        );
        var startSegmentTableRow2 = stringToPrecomputedChunk('">');
        var endSegmentTableRow = stringToPrecomputedChunk('</tr></table>');
        var startSegmentColGroup = stringToPrecomputedChunk(
          '<table hidden><colgroup id="'
        );
        var startSegmentColGroup2 = stringToPrecomputedChunk('">');
        var endSegmentColGroup = stringToPrecomputedChunk(
          '</colgroup></table>'
        );
        function writeStartSegment(
          destination,
          responseState,
          formatContext,
          id
        ) {
          switch (formatContext.insertionMode) {
            case ROOT_HTML_MODE:
            case HTML_MODE: {
              writeChunk(destination, startSegmentHTML);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentHTML2);
            }
            case SVG_MODE: {
              writeChunk(destination, startSegmentSVG);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentSVG2);
            }
            case MATHML_MODE: {
              writeChunk(destination, startSegmentMathML);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentMathML2);
            }
            case HTML_TABLE_MODE: {
              writeChunk(destination, startSegmentTable);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentTable2);
            }
            case HTML_TABLE_BODY_MODE: {
              writeChunk(destination, startSegmentTableBody);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentTableBody2);
            }
            case HTML_TABLE_ROW_MODE: {
              writeChunk(destination, startSegmentTableRow);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentTableRow2);
            }
            case HTML_COLGROUP_MODE: {
              writeChunk(destination, startSegmentColGroup);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentColGroup2);
            }
            default: {
              throw new Error(
                'Unknown insertion mode. This is a bug in React.'
              );
            }
          }
        }
        function writeEndSegment(destination, formatContext) {
          switch (formatContext.insertionMode) {
            case ROOT_HTML_MODE:
            case HTML_MODE: {
              return writeChunkAndReturn(destination, endSegmentHTML);
            }
            case SVG_MODE: {
              return writeChunkAndReturn(destination, endSegmentSVG);
            }
            case MATHML_MODE: {
              return writeChunkAndReturn(destination, endSegmentMathML);
            }
            case HTML_TABLE_MODE: {
              return writeChunkAndReturn(destination, endSegmentTable);
            }
            case HTML_TABLE_BODY_MODE: {
              return writeChunkAndReturn(destination, endSegmentTableBody);
            }
            case HTML_TABLE_ROW_MODE: {
              return writeChunkAndReturn(destination, endSegmentTableRow);
            }
            case HTML_COLGROUP_MODE: {
              return writeChunkAndReturn(destination, endSegmentColGroup);
            }
            default: {
              throw new Error(
                'Unknown insertion mode. This is a bug in React.'
              );
            }
          }
        }
        var completeSegmentFunction =
          'function $RS(a,b){a=document.getElementById(a);b=document.getElementById(b);for(a.parentNode.removeChild(a);a.firstChild;)b.parentNode.insertBefore(a.firstChild,b);b.parentNode.removeChild(b)}';
        var completeBoundaryFunction =
          'function $RC(a,b){a=document.getElementById(a);b=document.getElementById(b);b.parentNode.removeChild(b);if(a){a=a.previousSibling;var f=a.parentNode,c=a.nextSibling,e=0;do{if(c&&8===c.nodeType){var d=c.data;if("/$"===d)if(0===e)break;else e--;else"$"!==d&&"$?"!==d&&"$!"!==d||e++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;b.firstChild;)f.insertBefore(b.firstChild,c);a.data="$";a._reactRetry&&a._reactRetry()}}';
        var clientRenderFunction =
          'function $RX(b,c,d,e){var a=document.getElementById(b);a&&(b=a.previousSibling,b.data="$!",a=a.dataset,c&&(a.dgst=c),d&&(a.msg=d),e&&(a.stck=e),b._reactRetry&&b._reactRetry())}';
        var completeSegmentScript1Full = stringToPrecomputedChunk(
          completeSegmentFunction + ';$RS("'
        );
        var completeSegmentScript1Partial = stringToPrecomputedChunk('$RS("');
        var completeSegmentScript2 = stringToPrecomputedChunk('","');
        var completeSegmentScript3 = stringToPrecomputedChunk('")</script>');
        function writeCompletedSegmentInstruction(
          destination,
          responseState,
          contentSegmentID
        ) {
          writeChunk(destination, responseState.startInlineScript);
          if (!responseState.sentCompleteSegmentFunction) {
            responseState.sentCompleteSegmentFunction = true;
            writeChunk(destination, completeSegmentScript1Full);
          } else {
            writeChunk(destination, completeSegmentScript1Partial);
          }
          writeChunk(destination, responseState.segmentPrefix);
          var formattedID = stringToChunk(contentSegmentID.toString(16));
          writeChunk(destination, formattedID);
          writeChunk(destination, completeSegmentScript2);
          writeChunk(destination, responseState.placeholderPrefix);
          writeChunk(destination, formattedID);
          return writeChunkAndReturn(destination, completeSegmentScript3);
        }
        var completeBoundaryScript1Full = stringToPrecomputedChunk(
          completeBoundaryFunction + ';$RC("'
        );
        var completeBoundaryScript1Partial = stringToPrecomputedChunk('$RC("');
        var completeBoundaryScript2 = stringToPrecomputedChunk('","');
        var completeBoundaryScript3 = stringToPrecomputedChunk('")</script>');
        function writeCompletedBoundaryInstruction(
          destination,
          responseState,
          boundaryID,
          contentSegmentID
        ) {
          writeChunk(destination, responseState.startInlineScript);
          if (!responseState.sentCompleteBoundaryFunction) {
            responseState.sentCompleteBoundaryFunction = true;
            writeChunk(destination, completeBoundaryScript1Full);
          } else {
            writeChunk(destination, completeBoundaryScript1Partial);
          }
          if (boundaryID === null) {
            throw new Error(
              'An ID must have been assigned before we can complete the boundary.'
            );
          }
          var formattedContentID = stringToChunk(contentSegmentID.toString(16));
          writeChunk(destination, boundaryID);
          writeChunk(destination, completeBoundaryScript2);
          writeChunk(destination, responseState.segmentPrefix);
          writeChunk(destination, formattedContentID);
          return writeChunkAndReturn(destination, completeBoundaryScript3);
        }
        var clientRenderScript1Full = stringToPrecomputedChunk(
          clientRenderFunction + ';$RX("'
        );
        var clientRenderScript1Partial = stringToPrecomputedChunk('$RX("');
        var clientRenderScript1A = stringToPrecomputedChunk('"');
        var clientRenderScript2 = stringToPrecomputedChunk(')</script>');
        var clientRenderErrorScriptArgInterstitial =
          stringToPrecomputedChunk(',');
        function writeClientRenderBoundaryInstruction(
          destination,
          responseState,
          boundaryID,
          errorDigest,
          errorMessage,
          errorComponentStack
        ) {
          writeChunk(destination, responseState.startInlineScript);
          if (!responseState.sentClientRenderFunction) {
            responseState.sentClientRenderFunction = true;
            writeChunk(destination, clientRenderScript1Full);
          } else {
            writeChunk(destination, clientRenderScript1Partial);
          }
          if (boundaryID === null) {
            throw new Error(
              'An ID must have been assigned before we can complete the boundary.'
            );
          }
          writeChunk(destination, boundaryID);
          writeChunk(destination, clientRenderScript1A);
          if (errorDigest || errorMessage || errorComponentStack) {
            writeChunk(destination, clientRenderErrorScriptArgInterstitial);
            writeChunk(
              destination,
              stringToChunk(
                escapeJSStringsForInstructionScripts(errorDigest || '')
              )
            );
          }
          if (errorMessage || errorComponentStack) {
            writeChunk(destination, clientRenderErrorScriptArgInterstitial);
            writeChunk(
              destination,
              stringToChunk(
                escapeJSStringsForInstructionScripts(errorMessage || '')
              )
            );
          }
          if (errorComponentStack) {
            writeChunk(destination, clientRenderErrorScriptArgInterstitial);
            writeChunk(
              destination,
              stringToChunk(
                escapeJSStringsForInstructionScripts(errorComponentStack)
              )
            );
          }
          return writeChunkAndReturn(destination, clientRenderScript2);
        }
        var regexForJSStringsInScripts = /[<\u2028\u2029]/g;
        function escapeJSStringsForInstructionScripts(input) {
          var escaped = JSON.stringify(input);
          return escaped.replace(regexForJSStringsInScripts, function (match) {
            switch (match) {
              case '<':
                return '\\u003c';
              case '\u2028':
                return '\\u2028';
              case '\u2029':
                return '\\u2029';
              default: {
                throw new Error(
                  'escapeJSStringsForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React'
                );
              }
            }
          });
        }
        function createResponseState$1(generateStaticMarkup, identifierPrefix) {
          var responseState = createResponseState(identifierPrefix, void 0);
          return {
            // Keep this in sync with ReactDOMServerFormatConfig
            bootstrapChunks: responseState.bootstrapChunks,
            startInlineScript: responseState.startInlineScript,
            placeholderPrefix: responseState.placeholderPrefix,
            segmentPrefix: responseState.segmentPrefix,
            boundaryPrefix: responseState.boundaryPrefix,
            idPrefix: responseState.idPrefix,
            nextSuspenseID: responseState.nextSuspenseID,
            sentCompleteSegmentFunction:
              responseState.sentCompleteSegmentFunction,
            sentCompleteBoundaryFunction:
              responseState.sentCompleteBoundaryFunction,
            sentClientRenderFunction: responseState.sentClientRenderFunction,
            // This is an extra field for the legacy renderer
            generateStaticMarkup,
          };
        }
        function createRootFormatContext() {
          return {
            insertionMode: HTML_MODE,
            // We skip the root mode because we don't want to emit the DOCTYPE in legacy mode.
            selectedValue: null,
          };
        }
        function pushTextInstance$1(target, text, responseState, textEmbedded) {
          if (responseState.generateStaticMarkup) {
            target.push(stringToChunk(escapeTextForBrowser(text)));
            return false;
          } else {
            return pushTextInstance(target, text, responseState, textEmbedded);
          }
        }
        function pushSegmentFinale$1(
          target,
          responseState,
          lastPushedText,
          textEmbedded
        ) {
          if (responseState.generateStaticMarkup) {
            return;
          } else {
            return pushSegmentFinale(
              target,
              responseState,
              lastPushedText,
              textEmbedded
            );
          }
        }
        function writeStartCompletedSuspenseBoundary$1(
          destination,
          responseState
        ) {
          if (responseState.generateStaticMarkup) {
            return true;
          }
          return writeStartCompletedSuspenseBoundary(destination);
        }
        function writeStartClientRenderedSuspenseBoundary$1(
          destination,
          responseState,
          errorDigest,
          errorMessage,
          errorComponentStack
        ) {
          if (responseState.generateStaticMarkup) {
            return true;
          }
          return writeStartClientRenderedSuspenseBoundary(
            destination,
            responseState,
            errorDigest,
            errorMessage,
            errorComponentStack
          );
        }
        function writeEndCompletedSuspenseBoundary$1(
          destination,
          responseState
        ) {
          if (responseState.generateStaticMarkup) {
            return true;
          }
          return writeEndCompletedSuspenseBoundary(destination);
        }
        function writeEndClientRenderedSuspenseBoundary$1(
          destination,
          responseState
        ) {
          if (responseState.generateStaticMarkup) {
            return true;
          }
          return writeEndClientRenderedSuspenseBoundary(destination);
        }
        var assign = Object.assign;
        var REACT_ELEMENT_TYPE = Symbol.for('react.element');
        var REACT_PORTAL_TYPE = Symbol.for('react.portal');
        var REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');
        var REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');
        var REACT_PROFILER_TYPE = Symbol.for('react.profiler');
        var REACT_PROVIDER_TYPE = Symbol.for('react.provider');
        var REACT_CONTEXT_TYPE = Symbol.for('react.context');
        var REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');
        var REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');
        var REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');
        var REACT_MEMO_TYPE = Symbol.for('react.memo');
        var REACT_LAZY_TYPE = Symbol.for('react.lazy');
        var REACT_SCOPE_TYPE = Symbol.for('react.scope');
        var REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for(
          'react.debug_trace_mode'
        );
        var REACT_LEGACY_HIDDEN_TYPE = Symbol.for('react.legacy_hidden');
        var REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED = Symbol.for(
          'react.default_value'
        );
        var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
        var FAUX_ITERATOR_SYMBOL = '@@iterator';
        function getIteratorFn(maybeIterable) {
          if (maybeIterable === null || typeof maybeIterable !== 'object') {
            return null;
          }
          var maybeIterator =
            (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||
            maybeIterable[FAUX_ITERATOR_SYMBOL];
          if (typeof maybeIterator === 'function') {
            return maybeIterator;
          }
          return null;
        }
        function getWrappedName(outerType, innerType, wrapperName) {
          var displayName = outerType.displayName;
          if (displayName) {
            return displayName;
          }
          var functionName = innerType.displayName || innerType.name || '';
          return functionName !== ''
            ? wrapperName + '(' + functionName + ')'
            : wrapperName;
        }
        function getContextName(type) {
          return type.displayName || 'Context';
        }
        function getComponentNameFromType(type) {
          if (type == null) {
            return null;
          }
          {
            if (typeof type.tag === 'number') {
              error(
                'Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.'
              );
            }
          }
          if (typeof type === 'function') {
            return type.displayName || type.name || null;
          }
          if (typeof type === 'string') {
            return type;
          }
          switch (type) {
            case REACT_FRAGMENT_TYPE:
              return 'Fragment';
            case REACT_PORTAL_TYPE:
              return 'Portal';
            case REACT_PROFILER_TYPE:
              return 'Profiler';
            case REACT_STRICT_MODE_TYPE:
              return 'StrictMode';
            case REACT_SUSPENSE_TYPE:
              return 'Suspense';
            case REACT_SUSPENSE_LIST_TYPE:
              return 'SuspenseList';
          }
          if (typeof type === 'object') {
            switch (type.$$typeof) {
              case REACT_CONTEXT_TYPE:
                var context = type;
                return getContextName(context) + '.Consumer';
              case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + '.Provider';
              case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, 'ForwardRef');
              case REACT_MEMO_TYPE:
                var outerName = type.displayName || null;
                if (outerName !== null) {
                  return outerName;
                }
                return getComponentNameFromType(type.type) || 'Memo';
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                  return getComponentNameFromType(init(payload));
                } catch (x) {
                  return null;
                }
              }
            }
          }
          return null;
        }
        var disabledDepth = 0;
        var prevLog;
        var prevInfo;
        var prevWarn;
        var prevError;
        var prevGroup;
        var prevGroupCollapsed;
        var prevGroupEnd;
        function disabledLog() {}
        disabledLog.__reactDisabledLog = true;
        function disableLogs() {
          {
            if (disabledDepth === 0) {
              prevLog = console.log;
              prevInfo = console.info;
              prevWarn = console.warn;
              prevError = console.error;
              prevGroup = console.group;
              prevGroupCollapsed = console.groupCollapsed;
              prevGroupEnd = console.groupEnd;
              var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true,
              };
              Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props,
              });
            }
            disabledDepth++;
          }
        }
        function reenableLogs() {
          {
            disabledDepth--;
            if (disabledDepth === 0) {
              var props = {
                configurable: true,
                enumerable: true,
                writable: true,
              };
              Object.defineProperties(console, {
                log: assign({}, props, {
                  value: prevLog,
                }),
                info: assign({}, props, {
                  value: prevInfo,
                }),
                warn: assign({}, props, {
                  value: prevWarn,
                }),
                error: assign({}, props, {
                  value: prevError,
                }),
                group: assign({}, props, {
                  value: prevGroup,
                }),
                groupCollapsed: assign({}, props, {
                  value: prevGroupCollapsed,
                }),
                groupEnd: assign({}, props, {
                  value: prevGroupEnd,
                }),
              });
            }
            if (disabledDepth < 0) {
              error(
                'disabledDepth fell below zero. This is a bug in React. Please file an issue.'
              );
            }
          }
        }
        var ReactCurrentDispatcher =
          ReactSharedInternals.ReactCurrentDispatcher;
        var prefix;
        function describeBuiltInComponentFrame(name, source, ownerFn) {
          {
            if (prefix === void 0) {
              try {
                throw Error();
              } catch (x) {
                var match = x.stack.trim().match(/\n( *(at )?)/);
                prefix = (match && match[1]) || '';
              }
            }
            return '\n' + prefix + name;
          }
        }
        var reentry = false;
        var componentFrameCache;
        {
          var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
          componentFrameCache = new PossiblyWeakMap();
        }
        function describeNativeComponentFrame(fn, construct) {
          if (!fn || reentry) {
            return '';
          }
          {
            var frame = componentFrameCache.get(fn);
            if (frame !== void 0) {
              return frame;
            }
          }
          var control;
          reentry = true;
          var previousPrepareStackTrace = Error.prepareStackTrace;
          Error.prepareStackTrace = void 0;
          var previousDispatcher;
          {
            previousDispatcher = ReactCurrentDispatcher.current;
            ReactCurrentDispatcher.current = null;
            disableLogs();
          }
          try {
            if (construct) {
              var Fake = function () {
                throw Error();
              };
              Object.defineProperty(Fake.prototype, 'props', {
                set: function () {
                  throw Error();
                },
              });
              if (typeof Reflect === 'object' && Reflect.construct) {
                try {
                  Reflect.construct(Fake, []);
                } catch (x) {
                  control = x;
                }
                Reflect.construct(fn, [], Fake);
              } else {
                try {
                  Fake.call();
                } catch (x) {
                  control = x;
                }
                fn.call(Fake.prototype);
              }
            } else {
              try {
                throw Error();
              } catch (x) {
                control = x;
              }
              fn();
            }
          } catch (sample) {
            if (sample && control && typeof sample.stack === 'string') {
              var sampleLines = sample.stack.split('\n');
              var controlLines = control.stack.split('\n');
              var s2 = sampleLines.length - 1;
              var c2 = controlLines.length - 1;
              while (
                s2 >= 1 &&
                c2 >= 0 &&
                sampleLines[s2] !== controlLines[c2]
              ) {
                c2--;
              }
              for (; s2 >= 1 && c2 >= 0; s2--, c2--) {
                if (sampleLines[s2] !== controlLines[c2]) {
                  if (s2 !== 1 || c2 !== 1) {
                    do {
                      s2--;
                      c2--;
                      if (c2 < 0 || sampleLines[s2] !== controlLines[c2]) {
                        var _frame =
                          '\n' + sampleLines[s2].replace(' at new ', ' at ');
                        if (fn.displayName && _frame.includes('<anonymous>')) {
                          _frame = _frame.replace(
                            '<anonymous>',
                            fn.displayName
                          );
                        }
                        {
                          if (typeof fn === 'function') {
                            componentFrameCache.set(fn, _frame);
                          }
                        }
                        return _frame;
                      }
                    } while (s2 >= 1 && c2 >= 0);
                  }
                  break;
                }
              }
            }
          } finally {
            reentry = false;
            {
              ReactCurrentDispatcher.current = previousDispatcher;
              reenableLogs();
            }
            Error.prepareStackTrace = previousPrepareStackTrace;
          }
          var name = fn ? fn.displayName || fn.name : '';
          var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';
          {
            if (typeof fn === 'function') {
              componentFrameCache.set(fn, syntheticFrame);
            }
          }
          return syntheticFrame;
        }
        function describeClassComponentFrame(ctor, source, ownerFn) {
          {
            return describeNativeComponentFrame(ctor, true);
          }
        }
        function describeFunctionComponentFrame(fn, source, ownerFn) {
          {
            return describeNativeComponentFrame(fn, false);
          }
        }
        function shouldConstruct(Component) {
          var prototype = Component.prototype;
          return !!(prototype && prototype.isReactComponent);
        }
        function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
          if (type == null) {
            return '';
          }
          if (typeof type === 'function') {
            {
              return describeNativeComponentFrame(type, shouldConstruct(type));
            }
          }
          if (typeof type === 'string') {
            return describeBuiltInComponentFrame(type);
          }
          switch (type) {
            case REACT_SUSPENSE_TYPE:
              return describeBuiltInComponentFrame('Suspense');
            case REACT_SUSPENSE_LIST_TYPE:
              return describeBuiltInComponentFrame('SuspenseList');
          }
          if (typeof type === 'object') {
            switch (type.$$typeof) {
              case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
              case REACT_MEMO_TYPE:
                return describeUnknownElementTypeFrameInDEV(
                  type.type,
                  source,
                  ownerFn
                );
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                  return describeUnknownElementTypeFrameInDEV(
                    init(payload),
                    source,
                    ownerFn
                  );
                } catch (x) {}
              }
            }
          }
          return '';
        }
        var loggedTypeFailures = {};
        var ReactDebugCurrentFrame =
          ReactSharedInternals.ReactDebugCurrentFrame;
        function setCurrentlyValidatingElement(element) {
          {
            if (element) {
              var owner = element._owner;
              var stack = describeUnknownElementTypeFrameInDEV(
                element.type,
                element._source,
                owner ? owner.type : null
              );
              ReactDebugCurrentFrame.setExtraStackFrame(stack);
            } else {
              ReactDebugCurrentFrame.setExtraStackFrame(null);
            }
          }
        }
        function checkPropTypes(
          typeSpecs,
          values,
          location,
          componentName,
          element
        ) {
          {
            var has = Function.call.bind(hasOwnProperty);
            for (var typeSpecName in typeSpecs) {
              if (has(typeSpecs, typeSpecName)) {
                var error$1 = void 0;
                try {
                  if (typeof typeSpecs[typeSpecName] !== 'function') {
                    var err = Error(
                      (componentName || 'React class') +
                        ': ' +
                        location +
                        ' type `' +
                        typeSpecName +
                        '` is invalid; it must be a function, usually from the `prop-types` package, but received `' +
                        typeof typeSpecs[typeSpecName] +
                        '`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.'
                    );
                    err.name = 'Invariant Violation';
                    throw err;
                  }
                  error$1 = typeSpecs[typeSpecName](
                    values,
                    typeSpecName,
                    componentName,
                    location,
                    null,
                    'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED'
                  );
                } catch (ex) {
                  error$1 = ex;
                }
                if (error$1 && !(error$1 instanceof Error)) {
                  setCurrentlyValidatingElement(element);
                  error(
                    '%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).',
                    componentName || 'React class',
                    location,
                    typeSpecName,
                    typeof error$1
                  );
                  setCurrentlyValidatingElement(null);
                }
                if (
                  error$1 instanceof Error &&
                  !(error$1.message in loggedTypeFailures)
                ) {
                  loggedTypeFailures[error$1.message] = true;
                  setCurrentlyValidatingElement(element);
                  error('Failed %s type: %s', location, error$1.message);
                  setCurrentlyValidatingElement(null);
                }
              }
            }
          }
        }
        var warnedAboutMissingGetChildContext;
        {
          warnedAboutMissingGetChildContext = {};
        }
        var emptyContextObject = {};
        {
          Object.freeze(emptyContextObject);
        }
        function getMaskedContext(type, unmaskedContext) {
          {
            var contextTypes = type.contextTypes;
            if (!contextTypes) {
              return emptyContextObject;
            }
            var context = {};
            for (var key in contextTypes) {
              context[key] = unmaskedContext[key];
            }
            {
              var name = getComponentNameFromType(type) || 'Unknown';
              checkPropTypes(contextTypes, context, 'context', name);
            }
            return context;
          }
        }
        function processChildContext(
          instance,
          type,
          parentContext,
          childContextTypes
        ) {
          {
            if (typeof instance.getChildContext !== 'function') {
              {
                var componentName = getComponentNameFromType(type) || 'Unknown';
                if (!warnedAboutMissingGetChildContext[componentName]) {
                  warnedAboutMissingGetChildContext[componentName] = true;
                  error(
                    '%s.childContextTypes is specified but there is no getChildContext() method on the instance. You can either define getChildContext() on %s or remove childContextTypes from it.',
                    componentName,
                    componentName
                  );
                }
              }
              return parentContext;
            }
            var childContext = instance.getChildContext();
            for (var contextKey in childContext) {
              if (!(contextKey in childContextTypes)) {
                throw new Error(
                  (getComponentNameFromType(type) || 'Unknown') +
                    '.getChildContext(): key "' +
                    contextKey +
                    '" is not defined in childContextTypes.'
                );
              }
            }
            {
              var name = getComponentNameFromType(type) || 'Unknown';
              checkPropTypes(
                childContextTypes,
                childContext,
                'child context',
                name
              );
            }
            return assign({}, parentContext, childContext);
          }
        }
        var rendererSigil;
        {
          rendererSigil = {};
        }
        var rootContextSnapshot = null;
        var currentActiveSnapshot = null;
        function popNode(prev) {
          {
            prev.context._currentValue2 = prev.parentValue;
          }
        }
        function pushNode(next) {
          {
            next.context._currentValue2 = next.value;
          }
        }
        function popToNearestCommonAncestor(prev, next) {
          if (prev === next);
          else {
            popNode(prev);
            var parentPrev = prev.parent;
            var parentNext = next.parent;
            if (parentPrev === null) {
              if (parentNext !== null) {
                throw new Error(
                  'The stacks must reach the root at the same time. This is a bug in React.'
                );
              }
            } else {
              if (parentNext === null) {
                throw new Error(
                  'The stacks must reach the root at the same time. This is a bug in React.'
                );
              }
              popToNearestCommonAncestor(parentPrev, parentNext);
            }
            pushNode(next);
          }
        }
        function popAllPrevious(prev) {
          popNode(prev);
          var parentPrev = prev.parent;
          if (parentPrev !== null) {
            popAllPrevious(parentPrev);
          }
        }
        function pushAllNext(next) {
          var parentNext = next.parent;
          if (parentNext !== null) {
            pushAllNext(parentNext);
          }
          pushNode(next);
        }
        function popPreviousToCommonLevel(prev, next) {
          popNode(prev);
          var parentPrev = prev.parent;
          if (parentPrev === null) {
            throw new Error(
              'The depth must equal at least at zero before reaching the root. This is a bug in React.'
            );
          }
          if (parentPrev.depth === next.depth) {
            popToNearestCommonAncestor(parentPrev, next);
          } else {
            popPreviousToCommonLevel(parentPrev, next);
          }
        }
        function popNextToCommonLevel(prev, next) {
          var parentNext = next.parent;
          if (parentNext === null) {
            throw new Error(
              'The depth must equal at least at zero before reaching the root. This is a bug in React.'
            );
          }
          if (prev.depth === parentNext.depth) {
            popToNearestCommonAncestor(prev, parentNext);
          } else {
            popNextToCommonLevel(prev, parentNext);
          }
          pushNode(next);
        }
        function switchContext(newSnapshot) {
          var prev = currentActiveSnapshot;
          var next = newSnapshot;
          if (prev !== next) {
            if (prev === null) {
              pushAllNext(next);
            } else if (next === null) {
              popAllPrevious(prev);
            } else if (prev.depth === next.depth) {
              popToNearestCommonAncestor(prev, next);
            } else if (prev.depth > next.depth) {
              popPreviousToCommonLevel(prev, next);
            } else {
              popNextToCommonLevel(prev, next);
            }
            currentActiveSnapshot = next;
          }
        }
        function pushProvider(context, nextValue) {
          var prevValue;
          {
            prevValue = context._currentValue2;
            context._currentValue2 = nextValue;
            {
              if (
                context._currentRenderer2 !== void 0 &&
                context._currentRenderer2 !== null &&
                context._currentRenderer2 !== rendererSigil
              ) {
                error(
                  'Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.'
                );
              }
              context._currentRenderer2 = rendererSigil;
            }
          }
          var prevNode = currentActiveSnapshot;
          var newNode = {
            parent: prevNode,
            depth: prevNode === null ? 0 : prevNode.depth + 1,
            context,
            parentValue: prevValue,
            value: nextValue,
          };
          currentActiveSnapshot = newNode;
          return newNode;
        }
        function popProvider(context) {
          var prevSnapshot = currentActiveSnapshot;
          if (prevSnapshot === null) {
            throw new Error(
              'Tried to pop a Context at the root of the app. This is a bug in React.'
            );
          }
          {
            if (prevSnapshot.context !== context) {
              error(
                'The parent context is not the expected context. This is probably a bug in React.'
              );
            }
          }
          {
            var _value = prevSnapshot.parentValue;
            if (_value === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {
              prevSnapshot.context._currentValue2 =
                prevSnapshot.context._defaultValue;
            } else {
              prevSnapshot.context._currentValue2 = _value;
            }
            {
              if (
                context._currentRenderer2 !== void 0 &&
                context._currentRenderer2 !== null &&
                context._currentRenderer2 !== rendererSigil
              ) {
                error(
                  'Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.'
                );
              }
              context._currentRenderer2 = rendererSigil;
            }
          }
          return (currentActiveSnapshot = prevSnapshot.parent);
        }
        function getActiveContext() {
          return currentActiveSnapshot;
        }
        function readContext(context) {
          var value = context._currentValue2;
          return value;
        }
        function get2(key) {
          return key._reactInternals;
        }
        function set(key, value) {
          key._reactInternals = value;
        }
        var didWarnAboutNoopUpdateForComponent = {};
        var didWarnAboutDeprecatedWillMount = {};
        var didWarnAboutUninitializedState;
        var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;
        var didWarnAboutLegacyLifecyclesAndDerivedState;
        var didWarnAboutUndefinedDerivedState;
        var warnOnUndefinedDerivedState;
        var warnOnInvalidCallback;
        var didWarnAboutDirectlyAssigningPropsToState;
        var didWarnAboutContextTypeAndContextTypes;
        var didWarnAboutInvalidateContextType;
        {
          didWarnAboutUninitializedState = /* @__PURE__ */ new Set();
          didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate =
            /* @__PURE__ */ new Set();
          didWarnAboutLegacyLifecyclesAndDerivedState =
            /* @__PURE__ */ new Set();
          didWarnAboutDirectlyAssigningPropsToState = /* @__PURE__ */ new Set();
          didWarnAboutUndefinedDerivedState = /* @__PURE__ */ new Set();
          didWarnAboutContextTypeAndContextTypes = /* @__PURE__ */ new Set();
          didWarnAboutInvalidateContextType = /* @__PURE__ */ new Set();
          var didWarnOnInvalidCallback = /* @__PURE__ */ new Set();
          warnOnInvalidCallback = function (callback, callerName) {
            if (callback === null || typeof callback === 'function') {
              return;
            }
            var key = callerName + '_' + callback;
            if (!didWarnOnInvalidCallback.has(key)) {
              didWarnOnInvalidCallback.add(key);
              error(
                '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.',
                callerName,
                callback
              );
            }
          };
          warnOnUndefinedDerivedState = function (type, partialState) {
            if (partialState === void 0) {
              var componentName = getComponentNameFromType(type) || 'Component';
              if (!didWarnAboutUndefinedDerivedState.has(componentName)) {
                didWarnAboutUndefinedDerivedState.add(componentName);
                error(
                  '%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.',
                  componentName
                );
              }
            }
          };
        }
        function warnNoop(publicInstance, callerName) {
          {
            var _constructor = publicInstance.constructor;
            var componentName =
              (_constructor && getComponentNameFromType(_constructor)) ||
              'ReactClass';
            var warningKey = componentName + '.' + callerName;
            if (didWarnAboutNoopUpdateForComponent[warningKey]) {
              return;
            }
            error(
              '%s(...): Can only update a mounting component. This usually means you called %s() outside componentWillMount() on the server. This is a no-op.\n\nPlease check the code for the %s component.',
              callerName,
              callerName,
              componentName
            );
            didWarnAboutNoopUpdateForComponent[warningKey] = true;
          }
        }
        var classComponentUpdater = {
          isMounted: function (inst) {
            return false;
          },
          enqueueSetState: function (inst, payload, callback) {
            var internals = get2(inst);
            if (internals.queue === null) {
              warnNoop(inst, 'setState');
            } else {
              internals.queue.push(payload);
              {
                if (callback !== void 0 && callback !== null) {
                  warnOnInvalidCallback(callback, 'setState');
                }
              }
            }
          },
          enqueueReplaceState: function (inst, payload, callback) {
            var internals = get2(inst);
            internals.replace = true;
            internals.queue = [payload];
            {
              if (callback !== void 0 && callback !== null) {
                warnOnInvalidCallback(callback, 'setState');
              }
            }
          },
          enqueueForceUpdate: function (inst, callback) {
            var internals = get2(inst);
            if (internals.queue === null) {
              warnNoop(inst, 'forceUpdate');
            } else {
              {
                if (callback !== void 0 && callback !== null) {
                  warnOnInvalidCallback(callback, 'setState');
                }
              }
            }
          },
        };
        function applyDerivedStateFromProps(
          instance,
          ctor,
          getDerivedStateFromProps,
          prevState,
          nextProps
        ) {
          var partialState = getDerivedStateFromProps(nextProps, prevState);
          {
            warnOnUndefinedDerivedState(ctor, partialState);
          }
          var newState =
            partialState === null || partialState === void 0
              ? prevState
              : assign({}, prevState, partialState);
          return newState;
        }
        function constructClassInstance(ctor, props, maskedLegacyContext) {
          var context = emptyContextObject;
          var contextType = ctor.contextType;
          {
            if ('contextType' in ctor) {
              var isValid =
                // Allow null for conditional declaration
                contextType === null ||
                (contextType !== void 0 &&
                  contextType.$$typeof === REACT_CONTEXT_TYPE &&
                  contextType._context === void 0);
              if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {
                didWarnAboutInvalidateContextType.add(ctor);
                var addendum = '';
                if (contextType === void 0) {
                  addendum =
                    ' However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file.';
                } else if (typeof contextType !== 'object') {
                  addendum =
                    ' However, it is set to a ' + typeof contextType + '.';
                } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {
                  addendum =
                    ' Did you accidentally pass the Context.Provider instead?';
                } else if (contextType._context !== void 0) {
                  addendum =
                    ' Did you accidentally pass the Context.Consumer instead?';
                } else {
                  addendum =
                    ' However, it is set to an object with keys {' +
                    Object.keys(contextType).join(', ') +
                    '}.';
                }
                error(
                  '%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s',
                  getComponentNameFromType(ctor) || 'Component',
                  addendum
                );
              }
            }
          }
          if (typeof contextType === 'object' && contextType !== null) {
            context = readContext(contextType);
          } else {
            context = maskedLegacyContext;
          }
          var instance = new ctor(props, context);
          {
            if (
              typeof ctor.getDerivedStateFromProps === 'function' &&
              (instance.state === null || instance.state === void 0)
            ) {
              var componentName = getComponentNameFromType(ctor) || 'Component';
              if (!didWarnAboutUninitializedState.has(componentName)) {
                didWarnAboutUninitializedState.add(componentName);
                error(
                  '`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.',
                  componentName,
                  instance.state === null ? 'null' : 'undefined',
                  componentName
                );
              }
            }
            if (
              typeof ctor.getDerivedStateFromProps === 'function' ||
              typeof instance.getSnapshotBeforeUpdate === 'function'
            ) {
              var foundWillMountName = null;
              var foundWillReceivePropsName = null;
              var foundWillUpdateName = null;
              if (
                typeof instance.componentWillMount === 'function' &&
                instance.componentWillMount.__suppressDeprecationWarning !==
                  true
              ) {
                foundWillMountName = 'componentWillMount';
              } else if (
                typeof instance.UNSAFE_componentWillMount === 'function'
              ) {
                foundWillMountName = 'UNSAFE_componentWillMount';
              }
              if (
                typeof instance.componentWillReceiveProps === 'function' &&
                instance.componentWillReceiveProps
                  .__suppressDeprecationWarning !== true
              ) {
                foundWillReceivePropsName = 'componentWillReceiveProps';
              } else if (
                typeof instance.UNSAFE_componentWillReceiveProps === 'function'
              ) {
                foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
              }
              if (
                typeof instance.componentWillUpdate === 'function' &&
                instance.componentWillUpdate.__suppressDeprecationWarning !==
                  true
              ) {
                foundWillUpdateName = 'componentWillUpdate';
              } else if (
                typeof instance.UNSAFE_componentWillUpdate === 'function'
              ) {
                foundWillUpdateName = 'UNSAFE_componentWillUpdate';
              }
              if (
                foundWillMountName !== null ||
                foundWillReceivePropsName !== null ||
                foundWillUpdateName !== null
              ) {
                var _componentName =
                  getComponentNameFromType(ctor) || 'Component';
                var newApiName =
                  typeof ctor.getDerivedStateFromProps === 'function'
                    ? 'getDerivedStateFromProps()'
                    : 'getSnapshotBeforeUpdate()';
                if (
                  !didWarnAboutLegacyLifecyclesAndDerivedState.has(
                    _componentName
                  )
                ) {
                  didWarnAboutLegacyLifecyclesAndDerivedState.add(
                    _componentName
                  );
                  error(
                    'Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://reactjs.org/link/unsafe-component-lifecycles',
                    _componentName,
                    newApiName,
                    foundWillMountName !== null
                      ? '\n  ' + foundWillMountName
                      : '',
                    foundWillReceivePropsName !== null
                      ? '\n  ' + foundWillReceivePropsName
                      : '',
                    foundWillUpdateName !== null
                      ? '\n  ' + foundWillUpdateName
                      : ''
                  );
                }
              }
            }
          }
          return instance;
        }
        function checkClassInstance(instance, ctor, newProps) {
          {
            var name = getComponentNameFromType(ctor) || 'Component';
            var renderPresent = instance.render;
            if (!renderPresent) {
              if (
                ctor.prototype &&
                typeof ctor.prototype.render === 'function'
              ) {
                error(
                  '%s(...): No `render` method found on the returned component instance: did you accidentally return an object from the constructor?',
                  name
                );
              } else {
                error(
                  '%s(...): No `render` method found on the returned component instance: you may have forgotten to define `render`.',
                  name
                );
              }
            }
            if (
              instance.getInitialState &&
              !instance.getInitialState.isReactClassApproved &&
              !instance.state
            ) {
              error(
                'getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?',
                name
              );
            }
            if (
              instance.getDefaultProps &&
              !instance.getDefaultProps.isReactClassApproved
            ) {
              error(
                'getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.',
                name
              );
            }
            if (instance.propTypes) {
              error(
                'propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.',
                name
              );
            }
            if (instance.contextType) {
              error(
                'contextType was defined as an instance property on %s. Use a static property to define contextType instead.',
                name
              );
            }
            {
              if (instance.contextTypes) {
                error(
                  'contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.',
                  name
                );
              }
              if (
                ctor.contextType &&
                ctor.contextTypes &&
                !didWarnAboutContextTypeAndContextTypes.has(ctor)
              ) {
                didWarnAboutContextTypeAndContextTypes.add(ctor);
                error(
                  '%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.',
                  name
                );
              }
            }
            if (typeof instance.componentShouldUpdate === 'function') {
              error(
                '%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.',
                name
              );
            }
            if (
              ctor.prototype &&
              ctor.prototype.isPureReactComponent &&
              typeof instance.shouldComponentUpdate !== 'undefined'
            ) {
              error(
                '%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.',
                getComponentNameFromType(ctor) || 'A pure component'
              );
            }
            if (typeof instance.componentDidUnmount === 'function') {
              error(
                '%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?',
                name
              );
            }
            if (typeof instance.componentDidReceiveProps === 'function') {
              error(
                '%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().',
                name
              );
            }
            if (typeof instance.componentWillRecieveProps === 'function') {
              error(
                '%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',
                name
              );
            }
            if (
              typeof instance.UNSAFE_componentWillRecieveProps === 'function'
            ) {
              error(
                '%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?',
                name
              );
            }
            var hasMutatedProps = instance.props !== newProps;
            if (instance.props !== void 0 && hasMutatedProps) {
              error(
                "%s(...): When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.",
                name,
                name
              );
            }
            if (instance.defaultProps) {
              error(
                'Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.',
                name,
                name
              );
            }
            if (
              typeof instance.getSnapshotBeforeUpdate === 'function' &&
              typeof instance.componentDidUpdate !== 'function' &&
              !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)
            ) {
              didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);
              error(
                '%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.',
                getComponentNameFromType(ctor)
              );
            }
            if (typeof instance.getDerivedStateFromProps === 'function') {
              error(
                '%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.',
                name
              );
            }
            if (typeof instance.getDerivedStateFromError === 'function') {
              error(
                '%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.',
                name
              );
            }
            if (typeof ctor.getSnapshotBeforeUpdate === 'function') {
              error(
                '%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.',
                name
              );
            }
            var _state = instance.state;
            if (_state && (typeof _state !== 'object' || isArray(_state))) {
              error('%s.state: must be set to an object or null', name);
            }
            if (
              typeof instance.getChildContext === 'function' &&
              typeof ctor.childContextTypes !== 'object'
            ) {
              error(
                '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().',
                name
              );
            }
          }
        }
        function callComponentWillMount(type, instance) {
          var oldState = instance.state;
          if (typeof instance.componentWillMount === 'function') {
            {
              if (
                instance.componentWillMount.__suppressDeprecationWarning !==
                true
              ) {
                var componentName = getComponentNameFromType(type) || 'Unknown';
                if (!didWarnAboutDeprecatedWillMount[componentName]) {
                  warn(
                    // keep this warning in sync with ReactStrictModeWarning.js
                    'componentWillMount has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move code from componentWillMount to componentDidMount (preferred in most cases) or the constructor.\n\nPlease update the following components: %s',
                    componentName
                  );
                  didWarnAboutDeprecatedWillMount[componentName] = true;
                }
              }
            }
            instance.componentWillMount();
          }
          if (typeof instance.UNSAFE_componentWillMount === 'function') {
            instance.UNSAFE_componentWillMount();
          }
          if (oldState !== instance.state) {
            {
              error(
                "%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.",
                getComponentNameFromType(type) || 'Component'
              );
            }
            classComponentUpdater.enqueueReplaceState(
              instance,
              instance.state,
              null
            );
          }
        }
        function processUpdateQueue(
          internalInstance,
          inst,
          props,
          maskedLegacyContext
        ) {
          if (
            internalInstance.queue !== null &&
            internalInstance.queue.length > 0
          ) {
            var oldQueue = internalInstance.queue;
            var oldReplace = internalInstance.replace;
            internalInstance.queue = null;
            internalInstance.replace = false;
            if (oldReplace && oldQueue.length === 1) {
              inst.state = oldQueue[0];
            } else {
              var nextState = oldReplace ? oldQueue[0] : inst.state;
              var dontMutate = true;
              for (var i = oldReplace ? 1 : 0; i < oldQueue.length; i++) {
                var partial = oldQueue[i];
                var partialState =
                  typeof partial === 'function'
                    ? partial.call(inst, nextState, props, maskedLegacyContext)
                    : partial;
                if (partialState != null) {
                  if (dontMutate) {
                    dontMutate = false;
                    nextState = assign({}, nextState, partialState);
                  } else {
                    assign(nextState, partialState);
                  }
                }
              }
              inst.state = nextState;
            }
          } else {
            internalInstance.queue = null;
          }
        }
        function mountClassInstance(
          instance,
          ctor,
          newProps,
          maskedLegacyContext
        ) {
          {
            checkClassInstance(instance, ctor, newProps);
          }
          var initialState = instance.state !== void 0 ? instance.state : null;
          instance.updater = classComponentUpdater;
          instance.props = newProps;
          instance.state = initialState;
          var internalInstance = {
            queue: [],
            replace: false,
          };
          set(instance, internalInstance);
          var contextType = ctor.contextType;
          if (typeof contextType === 'object' && contextType !== null) {
            instance.context = readContext(contextType);
          } else {
            instance.context = maskedLegacyContext;
          }
          {
            if (instance.state === newProps) {
              var componentName = getComponentNameFromType(ctor) || 'Component';
              if (
                !didWarnAboutDirectlyAssigningPropsToState.has(componentName)
              ) {
                didWarnAboutDirectlyAssigningPropsToState.add(componentName);
                error(
                  "%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.",
                  componentName
                );
              }
            }
          }
          var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
          if (typeof getDerivedStateFromProps === 'function') {
            instance.state = applyDerivedStateFromProps(
              instance,
              ctor,
              getDerivedStateFromProps,
              initialState,
              newProps
            );
          }
          if (
            typeof ctor.getDerivedStateFromProps !== 'function' &&
            typeof instance.getSnapshotBeforeUpdate !== 'function' &&
            (typeof instance.UNSAFE_componentWillMount === 'function' ||
              typeof instance.componentWillMount === 'function')
          ) {
            callComponentWillMount(ctor, instance);
            processUpdateQueue(
              internalInstance,
              instance,
              newProps,
              maskedLegacyContext
            );
          }
        }
        var emptyTreeContext = {
          id: 1,
          overflow: '',
        };
        function getTreeId(context) {
          var overflow = context.overflow;
          var idWithLeadingBit = context.id;
          var id = idWithLeadingBit & ~getLeadingBit(idWithLeadingBit);
          return id.toString(32) + overflow;
        }
        function pushTreeContext(baseContext, totalChildren, index) {
          var baseIdWithLeadingBit = baseContext.id;
          var baseOverflow = baseContext.overflow;
          var baseLength = getBitLength(baseIdWithLeadingBit) - 1;
          var baseId = baseIdWithLeadingBit & ~(1 << baseLength);
          var slot = index + 1;
          var length = getBitLength(totalChildren) + baseLength;
          if (length > 30) {
            var numberOfOverflowBits = baseLength - (baseLength % 5);
            var newOverflowBits = (1 << numberOfOverflowBits) - 1;
            var newOverflow = (baseId & newOverflowBits).toString(32);
            var restOfBaseId = baseId >> numberOfOverflowBits;
            var restOfBaseLength = baseLength - numberOfOverflowBits;
            var restOfLength = getBitLength(totalChildren) + restOfBaseLength;
            var restOfNewBits = slot << restOfBaseLength;
            var id = restOfNewBits | restOfBaseId;
            var overflow = newOverflow + baseOverflow;
            return {
              id: (1 << restOfLength) | id,
              overflow,
            };
          } else {
            var newBits = slot << baseLength;
            var _id = newBits | baseId;
            var _overflow = baseOverflow;
            return {
              id: (1 << length) | _id,
              overflow: _overflow,
            };
          }
        }
        function getBitLength(number) {
          return 32 - clz32(number);
        }
        function getLeadingBit(id) {
          return 1 << (getBitLength(id) - 1);
        }
        var clz32 = Math.clz32 ? Math.clz32 : clz32Fallback;
        var log2 = Math.log;
        var LN2 = Math.LN2;
        function clz32Fallback(x) {
          var asUint = x >>> 0;
          if (asUint === 0) {
            return 32;
          }
          return (31 - ((log2(asUint) / LN2) | 0)) | 0;
        }
        function is2(x, y) {
          return (
            (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y)
          );
        }
        var objectIs = typeof Object.is === 'function' ? Object.is : is2;
        var currentlyRenderingComponent = null;
        var currentlyRenderingTask = null;
        var firstWorkInProgressHook = null;
        var workInProgressHook = null;
        var isReRender = false;
        var didScheduleRenderPhaseUpdate = false;
        var localIdCounter = 0;
        var renderPhaseUpdates = null;
        var numberOfReRenders = 0;
        var RE_RENDER_LIMIT = 25;
        var isInHookUserCodeInDev = false;
        var currentHookNameInDev;
        function resolveCurrentlyRenderingComponent() {
          if (currentlyRenderingComponent === null) {
            throw new Error(
              'Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.'
            );
          }
          {
            if (isInHookUserCodeInDev) {
              error(
                'Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://reactjs.org/link/rules-of-hooks'
              );
            }
          }
          return currentlyRenderingComponent;
        }
        function areHookInputsEqual(nextDeps, prevDeps) {
          if (prevDeps === null) {
            {
              error(
                '%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.',
                currentHookNameInDev
              );
            }
            return false;
          }
          {
            if (nextDeps.length !== prevDeps.length) {
              error(
                'The final argument passed to %s changed size between renders. The order and size of this array must remain constant.\n\nPrevious: %s\nIncoming: %s',
                currentHookNameInDev,
                '[' + nextDeps.join(', ') + ']',
                '[' + prevDeps.join(', ') + ']'
              );
            }
          }
          for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {
            if (objectIs(nextDeps[i], prevDeps[i])) {
              continue;
            }
            return false;
          }
          return true;
        }
        function createHook() {
          if (numberOfReRenders > 0) {
            throw new Error(
              'Rendered more hooks than during the previous render'
            );
          }
          return {
            memoizedState: null,
            queue: null,
            next: null,
          };
        }
        function createWorkInProgressHook() {
          if (workInProgressHook === null) {
            if (firstWorkInProgressHook === null) {
              isReRender = false;
              firstWorkInProgressHook = workInProgressHook = createHook();
            } else {
              isReRender = true;
              workInProgressHook = firstWorkInProgressHook;
            }
          } else {
            if (workInProgressHook.next === null) {
              isReRender = false;
              workInProgressHook = workInProgressHook.next = createHook();
            } else {
              isReRender = true;
              workInProgressHook = workInProgressHook.next;
            }
          }
          return workInProgressHook;
        }
        function prepareToUseHooks(task, componentIdentity) {
          currentlyRenderingComponent = componentIdentity;
          currentlyRenderingTask = task;
          {
            isInHookUserCodeInDev = false;
          }
          localIdCounter = 0;
        }
        function finishHooks(Component, props, children, refOrContext) {
          while (didScheduleRenderPhaseUpdate) {
            didScheduleRenderPhaseUpdate = false;
            localIdCounter = 0;
            numberOfReRenders += 1;
            workInProgressHook = null;
            children = Component(props, refOrContext);
          }
          resetHooksState();
          return children;
        }
        function checkDidRenderIdHook() {
          var didRenderIdHook = localIdCounter !== 0;
          return didRenderIdHook;
        }
        function resetHooksState() {
          {
            isInHookUserCodeInDev = false;
          }
          currentlyRenderingComponent = null;
          currentlyRenderingTask = null;
          didScheduleRenderPhaseUpdate = false;
          firstWorkInProgressHook = null;
          numberOfReRenders = 0;
          renderPhaseUpdates = null;
          workInProgressHook = null;
        }
        function readContext$1(context) {
          {
            if (isInHookUserCodeInDev) {
              error(
                'Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().'
              );
            }
          }
          return readContext(context);
        }
        function useContext(context) {
          {
            currentHookNameInDev = 'useContext';
          }
          resolveCurrentlyRenderingComponent();
          return readContext(context);
        }
        function basicStateReducer(state, action) {
          return typeof action === 'function' ? action(state) : action;
        }
        function useState(initialState) {
          {
            currentHookNameInDev = 'useState';
          }
          return useReducer(
            basicStateReducer,
            // useReducer has a special case to support lazy useState initializers
            initialState
          );
        }
        function useReducer(reducer, initialArg, init) {
          {
            if (reducer !== basicStateReducer) {
              currentHookNameInDev = 'useReducer';
            }
          }
          currentlyRenderingComponent = resolveCurrentlyRenderingComponent();
          workInProgressHook = createWorkInProgressHook();
          if (isReRender) {
            var queue = workInProgressHook.queue;
            var dispatch = queue.dispatch;
            if (renderPhaseUpdates !== null) {
              var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);
              if (firstRenderPhaseUpdate !== void 0) {
                renderPhaseUpdates.delete(queue);
                var newState = workInProgressHook.memoizedState;
                var update = firstRenderPhaseUpdate;
                do {
                  var action = update.action;
                  {
                    isInHookUserCodeInDev = true;
                  }
                  newState = reducer(newState, action);
                  {
                    isInHookUserCodeInDev = false;
                  }
                  update = update.next;
                } while (update !== null);
                workInProgressHook.memoizedState = newState;
                return [newState, dispatch];
              }
            }
            return [workInProgressHook.memoizedState, dispatch];
          } else {
            {
              isInHookUserCodeInDev = true;
            }
            var initialState;
            if (reducer === basicStateReducer) {
              initialState =
                typeof initialArg === 'function' ? initialArg() : initialArg;
            } else {
              initialState = init !== void 0 ? init(initialArg) : initialArg;
            }
            {
              isInHookUserCodeInDev = false;
            }
            workInProgressHook.memoizedState = initialState;
            var _queue = (workInProgressHook.queue = {
              last: null,
              dispatch: null,
            });
            var _dispatch = (_queue.dispatch = dispatchAction.bind(
              null,
              currentlyRenderingComponent,
              _queue
            ));
            return [workInProgressHook.memoizedState, _dispatch];
          }
        }
        function useMemo(nextCreate, deps) {
          currentlyRenderingComponent = resolveCurrentlyRenderingComponent();
          workInProgressHook = createWorkInProgressHook();
          var nextDeps = deps === void 0 ? null : deps;
          if (workInProgressHook !== null) {
            var prevState = workInProgressHook.memoizedState;
            if (prevState !== null) {
              if (nextDeps !== null) {
                var prevDeps = prevState[1];
                if (areHookInputsEqual(nextDeps, prevDeps)) {
                  return prevState[0];
                }
              }
            }
          }
          {
            isInHookUserCodeInDev = true;
          }
          var nextValue = nextCreate();
          {
            isInHookUserCodeInDev = false;
          }
          workInProgressHook.memoizedState = [nextValue, nextDeps];
          return nextValue;
        }
        function useRef(initialValue) {
          currentlyRenderingComponent = resolveCurrentlyRenderingComponent();
          workInProgressHook = createWorkInProgressHook();
          var previousRef = workInProgressHook.memoizedState;
          if (previousRef === null) {
            var ref = {
              current: initialValue,
            };
            {
              Object.seal(ref);
            }
            workInProgressHook.memoizedState = ref;
            return ref;
          } else {
            return previousRef;
          }
        }
        function useLayoutEffect(create, inputs) {
          {
            currentHookNameInDev = 'useLayoutEffect';
            error(
              "useLayoutEffect does nothing on the server, because its effect cannot be encoded into the server renderer's output format. This will lead to a mismatch between the initial, non-hydrated UI and the intended UI. To avoid this, useLayoutEffect should only be used in components that render exclusively on the client. See https://reactjs.org/link/uselayouteffect-ssr for common fixes."
            );
          }
        }
        function dispatchAction(componentIdentity, queue, action) {
          if (numberOfReRenders >= RE_RENDER_LIMIT) {
            throw new Error(
              'Too many re-renders. React limits the number of renders to prevent an infinite loop.'
            );
          }
          if (componentIdentity === currentlyRenderingComponent) {
            didScheduleRenderPhaseUpdate = true;
            var update = {
              action,
              next: null,
            };
            if (renderPhaseUpdates === null) {
              renderPhaseUpdates = /* @__PURE__ */ new Map();
            }
            var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);
            if (firstRenderPhaseUpdate === void 0) {
              renderPhaseUpdates.set(queue, update);
            } else {
              var lastRenderPhaseUpdate = firstRenderPhaseUpdate;
              while (lastRenderPhaseUpdate.next !== null) {
                lastRenderPhaseUpdate = lastRenderPhaseUpdate.next;
              }
              lastRenderPhaseUpdate.next = update;
            }
          }
        }
        function useCallback(callback, deps) {
          return useMemo(function () {
            return callback;
          }, deps);
        }
        function useMutableSource(source, getSnapshot, subscribe) {
          resolveCurrentlyRenderingComponent();
          return getSnapshot(source._source);
        }
        function useSyncExternalStore(
          subscribe,
          getSnapshot,
          getServerSnapshot
        ) {
          if (getServerSnapshot === void 0) {
            throw new Error(
              'Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.'
            );
          }
          return getServerSnapshot();
        }
        function useDeferredValue(value) {
          resolveCurrentlyRenderingComponent();
          return value;
        }
        function unsupportedStartTransition() {
          throw new Error(
            'startTransition cannot be called during server rendering.'
          );
        }
        function useTransition() {
          resolveCurrentlyRenderingComponent();
          return [false, unsupportedStartTransition];
        }
        function useId() {
          var task = currentlyRenderingTask;
          var treeId = getTreeId(task.treeContext);
          var responseState = currentResponseState;
          if (responseState === null) {
            throw new Error(
              'Invalid hook call. Hooks can only be called inside of the body of a function component.'
            );
          }
          var localId = localIdCounter++;
          return makeId(responseState, treeId, localId);
        }
        function noop() {}
        var Dispatcher = {
          readContext: readContext$1,
          useContext,
          useMemo,
          useReducer,
          useRef,
          useState,
          useInsertionEffect: noop,
          useLayoutEffect,
          useCallback,
          // useImperativeHandle is not run in the server environment
          useImperativeHandle: noop,
          // Effects are not run in the server environment.
          useEffect: noop,
          // Debugging effect
          useDebugValue: noop,
          useDeferredValue,
          useTransition,
          useId,
          // Subscriptions are not setup in a server environment.
          useMutableSource,
          useSyncExternalStore,
        };
        var currentResponseState = null;
        function setCurrentResponseState(responseState) {
          currentResponseState = responseState;
        }
        function getStackByComponentStackNode(componentStack) {
          try {
            var info = '';
            var node = componentStack;
            do {
              switch (node.tag) {
                case 0:
                  info += describeBuiltInComponentFrame(node.type, null, null);
                  break;
                case 1:
                  info += describeFunctionComponentFrame(node.type, null, null);
                  break;
                case 2:
                  info += describeClassComponentFrame(node.type, null, null);
                  break;
              }
              node = node.parent;
            } while (node);
            return info;
          } catch (x) {
            return '\nError generating stack: ' + x.message + '\n' + x.stack;
          }
        }
        var ReactCurrentDispatcher$1 =
          ReactSharedInternals.ReactCurrentDispatcher;
        var ReactDebugCurrentFrame$1 =
          ReactSharedInternals.ReactDebugCurrentFrame;
        var PENDING = 0;
        var COMPLETED = 1;
        var FLUSHED = 2;
        var ABORTED = 3;
        var ERRORED = 4;
        var OPEN = 0;
        var CLOSING = 1;
        var CLOSED = 2;
        var DEFAULT_PROGRESSIVE_CHUNK_SIZE = 12800;
        function defaultErrorHandler(error2) {
          console['error'](error2);
          return null;
        }
        function noop$1() {}
        function createRequest(
          children,
          responseState,
          rootFormatContext,
          progressiveChunkSize,
          onError2,
          onAllReady,
          onShellReady,
          onShellError,
          onFatalError
        ) {
          var pingedTasks = [];
          var abortSet = /* @__PURE__ */ new Set();
          var request2 = {
            destination: null,
            responseState,
            progressiveChunkSize:
              progressiveChunkSize === void 0
                ? DEFAULT_PROGRESSIVE_CHUNK_SIZE
                : progressiveChunkSize,
            status: OPEN,
            fatalError: null,
            nextSegmentId: 0,
            allPendingTasks: 0,
            pendingRootTasks: 0,
            completedRootSegment: null,
            abortableTasks: abortSet,
            pingedTasks,
            clientRenderedBoundaries: [],
            completedBoundaries: [],
            partialBoundaries: [],
            onError: onError2 === void 0 ? defaultErrorHandler : onError2,
            onAllReady: onAllReady === void 0 ? noop$1 : onAllReady,
            onShellReady: onShellReady === void 0 ? noop$1 : onShellReady,
            onShellError: onShellError === void 0 ? noop$1 : onShellError,
            onFatalError: onFatalError === void 0 ? noop$1 : onFatalError,
          };
          var rootSegment = createPendingSegment(
            request2,
            0,
            null,
            rootFormatContext,
            // Root segments are never embedded in Text on either edge
            false,
            false
          );
          rootSegment.parentFlushed = true;
          var rootTask = createTask(
            request2,
            children,
            null,
            rootSegment,
            abortSet,
            emptyContextObject,
            rootContextSnapshot,
            emptyTreeContext
          );
          pingedTasks.push(rootTask);
          return request2;
        }
        function pingTask(request2, task) {
          var pingedTasks = request2.pingedTasks;
          pingedTasks.push(task);
          if (pingedTasks.length === 1) {
            scheduleWork(function () {
              return performWork(request2);
            });
          }
        }
        function createSuspenseBoundary(request2, fallbackAbortableTasks) {
          return {
            id: UNINITIALIZED_SUSPENSE_BOUNDARY_ID,
            rootSegmentID: -1,
            parentFlushed: false,
            pendingTasks: 0,
            forceClientRender: false,
            completedSegments: [],
            byteSize: 0,
            fallbackAbortableTasks,
            errorDigest: null,
          };
        }
        function createTask(
          request2,
          node,
          blockedBoundary,
          blockedSegment,
          abortSet,
          legacyContext,
          context,
          treeContext
        ) {
          request2.allPendingTasks++;
          if (blockedBoundary === null) {
            request2.pendingRootTasks++;
          } else {
            blockedBoundary.pendingTasks++;
          }
          var task = {
            node,
            ping: function () {
              return pingTask(request2, task);
            },
            blockedBoundary,
            blockedSegment,
            abortSet,
            legacyContext,
            context,
            treeContext,
          };
          {
            task.componentStack = null;
          }
          abortSet.add(task);
          return task;
        }
        function createPendingSegment(
          request2,
          index,
          boundary,
          formatContext,
          lastPushedText,
          textEmbedded
        ) {
          return {
            status: PENDING,
            id: -1,
            // lazily assigned later
            index,
            parentFlushed: false,
            chunks: [],
            children: [],
            formatContext,
            boundary,
            lastPushedText,
            textEmbedded,
          };
        }
        var currentTaskInDEV = null;
        function getCurrentStackInDEV() {
          {
            if (
              currentTaskInDEV === null ||
              currentTaskInDEV.componentStack === null
            ) {
              return '';
            }
            return getStackByComponentStackNode(
              currentTaskInDEV.componentStack
            );
          }
        }
        function pushBuiltInComponentStackInDEV(task, type) {
          {
            task.componentStack = {
              tag: 0,
              parent: task.componentStack,
              type,
            };
          }
        }
        function pushFunctionComponentStackInDEV(task, type) {
          {
            task.componentStack = {
              tag: 1,
              parent: task.componentStack,
              type,
            };
          }
        }
        function pushClassComponentStackInDEV(task, type) {
          {
            task.componentStack = {
              tag: 2,
              parent: task.componentStack,
              type,
            };
          }
        }
        function popComponentStackInDEV(task) {
          {
            if (task.componentStack === null) {
              error(
                'Unexpectedly popped too many stack frames. This is a bug in React.'
              );
            } else {
              task.componentStack = task.componentStack.parent;
            }
          }
        }
        var lastBoundaryErrorComponentStackDev = null;
        function captureBoundaryErrorDetailsDev(boundary, error2) {
          {
            var errorMessage;
            if (typeof error2 === 'string') {
              errorMessage = error2;
            } else if (error2 && typeof error2.message === 'string') {
              errorMessage = error2.message;
            } else {
              errorMessage = String(error2);
            }
            var errorComponentStack =
              lastBoundaryErrorComponentStackDev || getCurrentStackInDEV();
            lastBoundaryErrorComponentStackDev = null;
            boundary.errorMessage = errorMessage;
            boundary.errorComponentStack = errorComponentStack;
          }
        }
        function logRecoverableError(request2, error2) {
          var errorDigest = request2.onError(error2);
          if (errorDigest != null && typeof errorDigest !== 'string') {
            throw new Error(
              'onError returned something with a type other than "string". onError should return a string and may return null or undefined but must not return anything else. It received something of type "' +
                typeof errorDigest +
                '" instead'
            );
          }
          return errorDigest;
        }
        function fatalError(request2, error2) {
          var onShellError = request2.onShellError;
          onShellError(error2);
          var onFatalError = request2.onFatalError;
          onFatalError(error2);
          if (request2.destination !== null) {
            request2.status = CLOSED;
            closeWithError(request2.destination, error2);
          } else {
            request2.status = CLOSING;
            request2.fatalError = error2;
          }
        }
        function renderSuspenseBoundary(request2, task, props) {
          pushBuiltInComponentStackInDEV(task, 'Suspense');
          var parentBoundary = task.blockedBoundary;
          var parentSegment = task.blockedSegment;
          var fallback = props.fallback;
          var content = props.children;
          var fallbackAbortSet = /* @__PURE__ */ new Set();
          var newBoundary = createSuspenseBoundary(request2, fallbackAbortSet);
          var insertionIndex = parentSegment.chunks.length;
          var boundarySegment = createPendingSegment(
            request2,
            insertionIndex,
            newBoundary,
            parentSegment.formatContext,
            // boundaries never require text embedding at their edges because comment nodes bound them
            false,
            false
          );
          parentSegment.children.push(boundarySegment);
          parentSegment.lastPushedText = false;
          var contentRootSegment = createPendingSegment(
            request2,
            0,
            null,
            parentSegment.formatContext,
            // boundaries never require text embedding at their edges because comment nodes bound them
            false,
            false
          );
          contentRootSegment.parentFlushed = true;
          task.blockedBoundary = newBoundary;
          task.blockedSegment = contentRootSegment;
          try {
            renderNode2(request2, task, content);
            pushSegmentFinale$1(
              contentRootSegment.chunks,
              request2.responseState,
              contentRootSegment.lastPushedText,
              contentRootSegment.textEmbedded
            );
            contentRootSegment.status = COMPLETED;
            queueCompletedSegment(newBoundary, contentRootSegment);
            if (newBoundary.pendingTasks === 0) {
              popComponentStackInDEV(task);
              return;
            }
          } catch (error2) {
            contentRootSegment.status = ERRORED;
            newBoundary.forceClientRender = true;
            newBoundary.errorDigest = logRecoverableError(request2, error2);
            {
              captureBoundaryErrorDetailsDev(newBoundary, error2);
            }
          } finally {
            task.blockedBoundary = parentBoundary;
            task.blockedSegment = parentSegment;
          }
          var suspendedFallbackTask = createTask(
            request2,
            fallback,
            parentBoundary,
            boundarySegment,
            fallbackAbortSet,
            task.legacyContext,
            task.context,
            task.treeContext
          );
          {
            suspendedFallbackTask.componentStack = task.componentStack;
          }
          request2.pingedTasks.push(suspendedFallbackTask);
          popComponentStackInDEV(task);
        }
        function renderHostElement(request2, task, type, props) {
          pushBuiltInComponentStackInDEV(task, type);
          var segment = task.blockedSegment;
          var children = pushStartInstance(
            segment.chunks,
            type,
            props,
            request2.responseState,
            segment.formatContext
          );
          segment.lastPushedText = false;
          var prevContext = segment.formatContext;
          segment.formatContext = getChildFormatContext(
            prevContext,
            type,
            props
          );
          renderNode2(request2, task, children);
          segment.formatContext = prevContext;
          pushEndInstance(segment.chunks, type);
          segment.lastPushedText = false;
          popComponentStackInDEV(task);
        }
        function shouldConstruct$1(Component) {
          return Component.prototype && Component.prototype.isReactComponent;
        }
        function renderWithHooks(request2, task, Component, props, secondArg) {
          var componentIdentity = {};
          prepareToUseHooks(task, componentIdentity);
          var result = Component(props, secondArg);
          return finishHooks(Component, props, result, secondArg);
        }
        function finishClassComponent(
          request2,
          task,
          instance,
          Component,
          props
        ) {
          var nextChildren = instance.render();
          {
            if (instance.props !== props) {
              if (!didWarnAboutReassigningProps) {
                error(
                  'It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.',
                  getComponentNameFromType(Component) || 'a component'
                );
              }
              didWarnAboutReassigningProps = true;
            }
          }
          {
            var childContextTypes = Component.childContextTypes;
            if (childContextTypes !== null && childContextTypes !== void 0) {
              var previousContext = task.legacyContext;
              var mergedContext = processChildContext(
                instance,
                Component,
                previousContext,
                childContextTypes
              );
              task.legacyContext = mergedContext;
              renderNodeDestructive(request2, task, nextChildren);
              task.legacyContext = previousContext;
              return;
            }
          }
          renderNodeDestructive(request2, task, nextChildren);
        }
        function renderClassComponent(request2, task, Component, props) {
          pushClassComponentStackInDEV(task, Component);
          var maskedContext = getMaskedContext(Component, task.legacyContext);
          var instance = constructClassInstance(
            Component,
            props,
            maskedContext
          );
          mountClassInstance(instance, Component, props, maskedContext);
          finishClassComponent(request2, task, instance, Component, props);
          popComponentStackInDEV(task);
        }
        var didWarnAboutBadClass = {};
        var didWarnAboutModulePatternComponent = {};
        var didWarnAboutContextTypeOnFunctionComponent = {};
        var didWarnAboutGetDerivedStateOnFunctionComponent = {};
        var didWarnAboutReassigningProps = false;
        var didWarnAboutGenerators = false;
        var didWarnAboutMaps = false;
        var hasWarnedAboutUsingContextAsConsumer = false;
        function renderIndeterminateComponent(
          request2,
          task,
          Component,
          props
        ) {
          var legacyContext;
          {
            legacyContext = getMaskedContext(Component, task.legacyContext);
          }
          pushFunctionComponentStackInDEV(task, Component);
          {
            if (
              Component.prototype &&
              typeof Component.prototype.render === 'function'
            ) {
              var componentName =
                getComponentNameFromType(Component) || 'Unknown';
              if (!didWarnAboutBadClass[componentName]) {
                error(
                  "The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.",
                  componentName,
                  componentName
                );
                didWarnAboutBadClass[componentName] = true;
              }
            }
          }
          var value = renderWithHooks(
            request2,
            task,
            Component,
            props,
            legacyContext
          );
          var hasId = checkDidRenderIdHook();
          {
            if (
              typeof value === 'object' &&
              value !== null &&
              typeof value.render === 'function' &&
              value.$$typeof === void 0
            ) {
              var _componentName =
                getComponentNameFromType(Component) || 'Unknown';
              if (!didWarnAboutModulePatternComponent[_componentName]) {
                error(
                  "The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.",
                  _componentName,
                  _componentName,
                  _componentName
                );
                didWarnAboutModulePatternComponent[_componentName] = true;
              }
            }
          }
          if (
            // Run these checks in production only if the flag is off.
            // Eventually we'll delete this branch altogether.
            typeof value === 'object' &&
            value !== null &&
            typeof value.render === 'function' &&
            value.$$typeof === void 0
          ) {
            {
              var _componentName2 =
                getComponentNameFromType(Component) || 'Unknown';
              if (!didWarnAboutModulePatternComponent[_componentName2]) {
                error(
                  "The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.",
                  _componentName2,
                  _componentName2,
                  _componentName2
                );
                didWarnAboutModulePatternComponent[_componentName2] = true;
              }
            }
            mountClassInstance(value, Component, props, legacyContext);
            finishClassComponent(request2, task, value, Component, props);
          } else {
            {
              validateFunctionComponentInDev(Component);
            }
            if (hasId) {
              var prevTreeContext = task.treeContext;
              var totalChildren = 1;
              var index = 0;
              task.treeContext = pushTreeContext(
                prevTreeContext,
                totalChildren,
                index
              );
              try {
                renderNodeDestructive(request2, task, value);
              } finally {
                task.treeContext = prevTreeContext;
              }
            } else {
              renderNodeDestructive(request2, task, value);
            }
          }
          popComponentStackInDEV(task);
        }
        function validateFunctionComponentInDev(Component) {
          {
            if (Component) {
              if (Component.childContextTypes) {
                error(
                  '%s(...): childContextTypes cannot be defined on a function component.',
                  Component.displayName || Component.name || 'Component'
                );
              }
            }
            if (typeof Component.getDerivedStateFromProps === 'function') {
              var _componentName3 =
                getComponentNameFromType(Component) || 'Unknown';
              if (
                !didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]
              ) {
                error(
                  '%s: Function components do not support getDerivedStateFromProps.',
                  _componentName3
                );
                didWarnAboutGetDerivedStateOnFunctionComponent[
                  _componentName3
                ] = true;
              }
            }
            if (
              typeof Component.contextType === 'object' &&
              Component.contextType !== null
            ) {
              var _componentName4 =
                getComponentNameFromType(Component) || 'Unknown';
              if (
                !didWarnAboutContextTypeOnFunctionComponent[_componentName4]
              ) {
                error(
                  '%s: Function components do not support contextType.',
                  _componentName4
                );
                didWarnAboutContextTypeOnFunctionComponent[
                  _componentName4
                ] = true;
              }
            }
          }
        }
        function resolveDefaultProps(Component, baseProps) {
          if (Component && Component.defaultProps) {
            var props = assign({}, baseProps);
            var defaultProps = Component.defaultProps;
            for (var propName in defaultProps) {
              if (props[propName] === void 0) {
                props[propName] = defaultProps[propName];
              }
            }
            return props;
          }
          return baseProps;
        }
        function renderForwardRef(request2, task, type, props, ref) {
          pushFunctionComponentStackInDEV(task, type.render);
          var children = renderWithHooks(
            request2,
            task,
            type.render,
            props,
            ref
          );
          var hasId = checkDidRenderIdHook();
          if (hasId) {
            var prevTreeContext = task.treeContext;
            var totalChildren = 1;
            var index = 0;
            task.treeContext = pushTreeContext(
              prevTreeContext,
              totalChildren,
              index
            );
            try {
              renderNodeDestructive(request2, task, children);
            } finally {
              task.treeContext = prevTreeContext;
            }
          } else {
            renderNodeDestructive(request2, task, children);
          }
          popComponentStackInDEV(task);
        }
        function renderMemo(request2, task, type, props, ref) {
          var innerType = type.type;
          var resolvedProps = resolveDefaultProps(innerType, props);
          renderElement(request2, task, innerType, resolvedProps, ref);
        }
        function renderContextConsumer(request2, task, context, props) {
          {
            if (context._context === void 0) {
              if (context !== context.Consumer) {
                if (!hasWarnedAboutUsingContextAsConsumer) {
                  hasWarnedAboutUsingContextAsConsumer = true;
                  error(
                    'Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?'
                  );
                }
              }
            } else {
              context = context._context;
            }
          }
          var render3 = props.children;
          {
            if (typeof render3 !== 'function') {
              error(
                "A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it."
              );
            }
          }
          var newValue = readContext(context);
          var newChildren = render3(newValue);
          renderNodeDestructive(request2, task, newChildren);
        }
        function renderContextProvider(request2, task, type, props) {
          var context = type._context;
          var value = props.value;
          var children = props.children;
          var prevSnapshot;
          {
            prevSnapshot = task.context;
          }
          task.context = pushProvider(context, value);
          renderNodeDestructive(request2, task, children);
          task.context = popProvider(context);
          {
            if (prevSnapshot !== task.context) {
              error(
                'Popping the context provider did not return back to the original snapshot. This is a bug in React.'
              );
            }
          }
        }
        function renderLazyComponent(
          request2,
          task,
          lazyComponent,
          props,
          ref
        ) {
          pushBuiltInComponentStackInDEV(task, 'Lazy');
          var payload = lazyComponent._payload;
          var init = lazyComponent._init;
          var Component = init(payload);
          var resolvedProps = resolveDefaultProps(Component, props);
          renderElement(request2, task, Component, resolvedProps, ref);
          popComponentStackInDEV(task);
        }
        function renderElement(request2, task, type, props, ref) {
          if (typeof type === 'function') {
            if (shouldConstruct$1(type)) {
              renderClassComponent(request2, task, type, props);
              return;
            } else {
              renderIndeterminateComponent(request2, task, type, props);
              return;
            }
          }
          if (typeof type === 'string') {
            renderHostElement(request2, task, type, props);
            return;
          }
          switch (type) {
            case REACT_LEGACY_HIDDEN_TYPE:
            case REACT_DEBUG_TRACING_MODE_TYPE:
            case REACT_STRICT_MODE_TYPE:
            case REACT_PROFILER_TYPE:
            case REACT_FRAGMENT_TYPE: {
              renderNodeDestructive(request2, task, props.children);
              return;
            }
            case REACT_SUSPENSE_LIST_TYPE: {
              pushBuiltInComponentStackInDEV(task, 'SuspenseList');
              renderNodeDestructive(request2, task, props.children);
              popComponentStackInDEV(task);
              return;
            }
            case REACT_SCOPE_TYPE: {
              throw new Error(
                'ReactDOMServer does not yet support scope components.'
              );
            }
            case REACT_SUSPENSE_TYPE: {
              {
                renderSuspenseBoundary(request2, task, props);
              }
              return;
            }
          }
          if (typeof type === 'object' && type !== null) {
            switch (type.$$typeof) {
              case REACT_FORWARD_REF_TYPE: {
                renderForwardRef(request2, task, type, props, ref);
                return;
              }
              case REACT_MEMO_TYPE: {
                renderMemo(request2, task, type, props, ref);
                return;
              }
              case REACT_PROVIDER_TYPE: {
                renderContextProvider(request2, task, type, props);
                return;
              }
              case REACT_CONTEXT_TYPE: {
                renderContextConsumer(request2, task, type, props);
                return;
              }
              case REACT_LAZY_TYPE: {
                renderLazyComponent(request2, task, type, props);
                return;
              }
            }
          }
          var info = '';
          {
            if (
              type === void 0 ||
              (typeof type === 'object' &&
                type !== null &&
                Object.keys(type).length === 0)
            ) {
              info +=
                " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
            }
          }
          throw new Error(
            'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) ' +
              ('but got: ' + (type == null ? type : typeof type) + '.' + info)
          );
        }
        function validateIterable(iterable, iteratorFn) {
          {
            if (
              typeof Symbol === 'function' && // $FlowFixMe Flow doesn't know about toStringTag
              iterable[Symbol.toStringTag] === 'Generator'
            ) {
              if (!didWarnAboutGenerators) {
                error(
                  'Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. Keep in mind you might need to polyfill these features for older browsers.'
                );
              }
              didWarnAboutGenerators = true;
            }
            if (iterable.entries === iteratorFn) {
              if (!didWarnAboutMaps) {
                error(
                  'Using Maps as children is not supported. Use an array of keyed ReactElements instead.'
                );
              }
              didWarnAboutMaps = true;
            }
          }
        }
        function renderNodeDestructive(request2, task, node) {
          {
            try {
              return renderNodeDestructiveImpl(request2, task, node);
            } catch (x) {
              if (
                typeof x === 'object' &&
                x !== null &&
                typeof x.then === 'function'
              );
              else {
                lastBoundaryErrorComponentStackDev =
                  lastBoundaryErrorComponentStackDev !== null
                    ? lastBoundaryErrorComponentStackDev
                    : getCurrentStackInDEV();
              }
              throw x;
            }
          }
        }
        function renderNodeDestructiveImpl(request2, task, node) {
          task.node = node;
          if (typeof node === 'object' && node !== null) {
            switch (node.$$typeof) {
              case REACT_ELEMENT_TYPE: {
                var element = node;
                var type = element.type;
                var props = element.props;
                var ref = element.ref;
                renderElement(request2, task, type, props, ref);
                return;
              }
              case REACT_PORTAL_TYPE:
                throw new Error(
                  'Portals are not currently supported by the server renderer. Render them conditionally so that they only appear on the client render.'
                );
              case REACT_LAZY_TYPE: {
                var lazyNode = node;
                var payload = lazyNode._payload;
                var init = lazyNode._init;
                var resolvedNode;
                {
                  try {
                    resolvedNode = init(payload);
                  } catch (x) {
                    if (
                      typeof x === 'object' &&
                      x !== null &&
                      typeof x.then === 'function'
                    ) {
                      pushBuiltInComponentStackInDEV(task, 'Lazy');
                    }
                    throw x;
                  }
                }
                renderNodeDestructive(request2, task, resolvedNode);
                return;
              }
            }
            if (isArray(node)) {
              renderChildrenArray(request2, task, node);
              return;
            }
            var iteratorFn = getIteratorFn(node);
            if (iteratorFn) {
              {
                validateIterable(node, iteratorFn);
              }
              var iterator = iteratorFn.call(node);
              if (iterator) {
                var step = iterator.next();
                if (!step.done) {
                  var children = [];
                  do {
                    children.push(step.value);
                    step = iterator.next();
                  } while (!step.done);
                  renderChildrenArray(request2, task, children);
                  return;
                }
                return;
              }
            }
            var childString = Object.prototype.toString.call(node);
            throw new Error(
              'Objects are not valid as a React child (found: ' +
                (childString === '[object Object]'
                  ? 'object with keys {' + Object.keys(node).join(', ') + '}'
                  : childString) +
                '). If you meant to render a collection of children, use an array instead.'
            );
          }
          if (typeof node === 'string') {
            var segment = task.blockedSegment;
            segment.lastPushedText = pushTextInstance$1(
              task.blockedSegment.chunks,
              node,
              request2.responseState,
              segment.lastPushedText
            );
            return;
          }
          if (typeof node === 'number') {
            var _segment = task.blockedSegment;
            _segment.lastPushedText = pushTextInstance$1(
              task.blockedSegment.chunks,
              '' + node,
              request2.responseState,
              _segment.lastPushedText
            );
            return;
          }
          {
            if (typeof node === 'function') {
              error(
                'Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.'
              );
            }
          }
        }
        function renderChildrenArray(request2, task, children) {
          var totalChildren = children.length;
          for (var i = 0; i < totalChildren; i++) {
            var prevTreeContext = task.treeContext;
            task.treeContext = pushTreeContext(
              prevTreeContext,
              totalChildren,
              i
            );
            try {
              renderNode2(request2, task, children[i]);
            } finally {
              task.treeContext = prevTreeContext;
            }
          }
        }
        function spawnNewSuspendedTask(request2, task, x) {
          var segment = task.blockedSegment;
          var insertionIndex = segment.chunks.length;
          var newSegment = createPendingSegment(
            request2,
            insertionIndex,
            null,
            segment.formatContext,
            // Adopt the parent segment's leading text embed
            segment.lastPushedText,
            // Assume we are text embedded at the trailing edge
            true
          );
          segment.children.push(newSegment);
          segment.lastPushedText = false;
          var newTask = createTask(
            request2,
            task.node,
            task.blockedBoundary,
            newSegment,
            task.abortSet,
            task.legacyContext,
            task.context,
            task.treeContext
          );
          {
            if (task.componentStack !== null) {
              newTask.componentStack = task.componentStack.parent;
            }
          }
          var ping = newTask.ping;
          x.then(ping, ping);
        }
        function renderNode2(request2, task, node) {
          var previousFormatContext = task.blockedSegment.formatContext;
          var previousLegacyContext = task.legacyContext;
          var previousContext = task.context;
          var previousComponentStack = null;
          {
            previousComponentStack = task.componentStack;
          }
          try {
            return renderNodeDestructive(request2, task, node);
          } catch (x) {
            resetHooksState();
            if (
              typeof x === 'object' &&
              x !== null &&
              typeof x.then === 'function'
            ) {
              spawnNewSuspendedTask(request2, task, x);
              task.blockedSegment.formatContext = previousFormatContext;
              task.legacyContext = previousLegacyContext;
              task.context = previousContext;
              switchContext(previousContext);
              {
                task.componentStack = previousComponentStack;
              }
              return;
            } else {
              task.blockedSegment.formatContext = previousFormatContext;
              task.legacyContext = previousLegacyContext;
              task.context = previousContext;
              switchContext(previousContext);
              {
                task.componentStack = previousComponentStack;
              }
              throw x;
            }
          }
        }
        function erroredTask(request2, boundary, segment, error2) {
          var errorDigest = logRecoverableError(request2, error2);
          if (boundary === null) {
            fatalError(request2, error2);
          } else {
            boundary.pendingTasks--;
            if (!boundary.forceClientRender) {
              boundary.forceClientRender = true;
              boundary.errorDigest = errorDigest;
              {
                captureBoundaryErrorDetailsDev(boundary, error2);
              }
              if (boundary.parentFlushed) {
                request2.clientRenderedBoundaries.push(boundary);
              }
            }
          }
          request2.allPendingTasks--;
          if (request2.allPendingTasks === 0) {
            var onAllReady = request2.onAllReady;
            onAllReady();
          }
        }
        function abortTaskSoft(task) {
          var request2 = this;
          var boundary = task.blockedBoundary;
          var segment = task.blockedSegment;
          segment.status = ABORTED;
          finishedTask(request2, boundary, segment);
        }
        function abortTask(task, request2, reason) {
          var boundary = task.blockedBoundary;
          var segment = task.blockedSegment;
          segment.status = ABORTED;
          if (boundary === null) {
            request2.allPendingTasks--;
            if (request2.status !== CLOSED) {
              request2.status = CLOSED;
              if (request2.destination !== null) {
                close(request2.destination);
              }
            }
          } else {
            boundary.pendingTasks--;
            if (!boundary.forceClientRender) {
              boundary.forceClientRender = true;
              var _error =
                reason === void 0
                  ? new Error(
                      'The render was aborted by the server without a reason.'
                    )
                  : reason;
              boundary.errorDigest = request2.onError(_error);
              {
                var errorPrefix =
                  'The server did not finish this Suspense boundary: ';
                if (_error && typeof _error.message === 'string') {
                  _error = errorPrefix + _error.message;
                } else {
                  _error = errorPrefix + String(_error);
                }
                var previousTaskInDev = currentTaskInDEV;
                currentTaskInDEV = task;
                try {
                  captureBoundaryErrorDetailsDev(boundary, _error);
                } finally {
                  currentTaskInDEV = previousTaskInDev;
                }
              }
              if (boundary.parentFlushed) {
                request2.clientRenderedBoundaries.push(boundary);
              }
            }
            boundary.fallbackAbortableTasks.forEach(function (fallbackTask) {
              return abortTask(fallbackTask, request2, reason);
            });
            boundary.fallbackAbortableTasks.clear();
            request2.allPendingTasks--;
            if (request2.allPendingTasks === 0) {
              var onAllReady = request2.onAllReady;
              onAllReady();
            }
          }
        }
        function queueCompletedSegment(boundary, segment) {
          if (
            segment.chunks.length === 0 &&
            segment.children.length === 1 &&
            segment.children[0].boundary === null
          ) {
            var childSegment = segment.children[0];
            childSegment.id = segment.id;
            childSegment.parentFlushed = true;
            if (childSegment.status === COMPLETED) {
              queueCompletedSegment(boundary, childSegment);
            }
          } else {
            var completedSegments = boundary.completedSegments;
            completedSegments.push(segment);
          }
        }
        function finishedTask(request2, boundary, segment) {
          if (boundary === null) {
            if (segment.parentFlushed) {
              if (request2.completedRootSegment !== null) {
                throw new Error(
                  'There can only be one root segment. This is a bug in React.'
                );
              }
              request2.completedRootSegment = segment;
            }
            request2.pendingRootTasks--;
            if (request2.pendingRootTasks === 0) {
              request2.onShellError = noop$1;
              var onShellReady = request2.onShellReady;
              onShellReady();
            }
          } else {
            boundary.pendingTasks--;
            if (boundary.forceClientRender);
            else if (boundary.pendingTasks === 0) {
              if (segment.parentFlushed) {
                if (segment.status === COMPLETED) {
                  queueCompletedSegment(boundary, segment);
                }
              }
              if (boundary.parentFlushed) {
                request2.completedBoundaries.push(boundary);
              }
              boundary.fallbackAbortableTasks.forEach(abortTaskSoft, request2);
              boundary.fallbackAbortableTasks.clear();
            } else {
              if (segment.parentFlushed) {
                if (segment.status === COMPLETED) {
                  queueCompletedSegment(boundary, segment);
                  var completedSegments = boundary.completedSegments;
                  if (completedSegments.length === 1) {
                    if (boundary.parentFlushed) {
                      request2.partialBoundaries.push(boundary);
                    }
                  }
                }
              }
            }
          }
          request2.allPendingTasks--;
          if (request2.allPendingTasks === 0) {
            var onAllReady = request2.onAllReady;
            onAllReady();
          }
        }
        function retryTask(request2, task) {
          var segment = task.blockedSegment;
          if (segment.status !== PENDING) {
            return;
          }
          switchContext(task.context);
          var prevTaskInDEV = null;
          {
            prevTaskInDEV = currentTaskInDEV;
            currentTaskInDEV = task;
          }
          try {
            renderNodeDestructive(request2, task, task.node);
            pushSegmentFinale$1(
              segment.chunks,
              request2.responseState,
              segment.lastPushedText,
              segment.textEmbedded
            );
            task.abortSet.delete(task);
            segment.status = COMPLETED;
            finishedTask(request2, task.blockedBoundary, segment);
          } catch (x) {
            resetHooksState();
            if (
              typeof x === 'object' &&
              x !== null &&
              typeof x.then === 'function'
            ) {
              var ping = task.ping;
              x.then(ping, ping);
            } else {
              task.abortSet.delete(task);
              segment.status = ERRORED;
              erroredTask(request2, task.blockedBoundary, segment, x);
            }
          } finally {
            {
              currentTaskInDEV = prevTaskInDEV;
            }
          }
        }
        function performWork(request2) {
          if (request2.status === CLOSED) {
            return;
          }
          var prevContext = getActiveContext();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = Dispatcher;
          var prevGetCurrentStackImpl;
          {
            prevGetCurrentStackImpl = ReactDebugCurrentFrame$1.getCurrentStack;
            ReactDebugCurrentFrame$1.getCurrentStack = getCurrentStackInDEV;
          }
          var prevResponseState = currentResponseState;
          setCurrentResponseState(request2.responseState);
          try {
            var pingedTasks = request2.pingedTasks;
            var i;
            for (i = 0; i < pingedTasks.length; i++) {
              var task = pingedTasks[i];
              retryTask(request2, task);
            }
            pingedTasks.splice(0, i);
            if (request2.destination !== null) {
              flushCompletedQueues(request2, request2.destination);
            }
          } catch (error2) {
            logRecoverableError(request2, error2);
            fatalError(request2, error2);
          } finally {
            setCurrentResponseState(prevResponseState);
            ReactCurrentDispatcher$1.current = prevDispatcher;
            {
              ReactDebugCurrentFrame$1.getCurrentStack =
                prevGetCurrentStackImpl;
            }
            if (prevDispatcher === Dispatcher) {
              switchContext(prevContext);
            }
          }
        }
        function flushSubtree(request2, destination, segment) {
          segment.parentFlushed = true;
          switch (segment.status) {
            case PENDING: {
              var segmentID = (segment.id = request2.nextSegmentId++);
              segment.lastPushedText = false;
              segment.textEmbedded = false;
              return writePlaceholder(
                destination,
                request2.responseState,
                segmentID
              );
            }
            case COMPLETED: {
              segment.status = FLUSHED;
              var r2 = true;
              var chunks = segment.chunks;
              var chunkIdx = 0;
              var children = segment.children;
              for (var childIdx = 0; childIdx < children.length; childIdx++) {
                var nextChild = children[childIdx];
                for (; chunkIdx < nextChild.index; chunkIdx++) {
                  writeChunk(destination, chunks[chunkIdx]);
                }
                r2 = flushSegment(request2, destination, nextChild);
              }
              for (; chunkIdx < chunks.length - 1; chunkIdx++) {
                writeChunk(destination, chunks[chunkIdx]);
              }
              if (chunkIdx < chunks.length) {
                r2 = writeChunkAndReturn(destination, chunks[chunkIdx]);
              }
              return r2;
            }
            default: {
              throw new Error(
                'Aborted, errored or already flushed boundaries should not be flushed again. This is a bug in React.'
              );
            }
          }
        }
        function flushSegment(request2, destination, segment) {
          var boundary = segment.boundary;
          if (boundary === null) {
            return flushSubtree(request2, destination, segment);
          }
          boundary.parentFlushed = true;
          if (boundary.forceClientRender) {
            writeStartClientRenderedSuspenseBoundary$1(
              destination,
              request2.responseState,
              boundary.errorDigest,
              boundary.errorMessage,
              boundary.errorComponentStack
            );
            flushSubtree(request2, destination, segment);
            return writeEndClientRenderedSuspenseBoundary$1(
              destination,
              request2.responseState
            );
          } else if (boundary.pendingTasks > 0) {
            boundary.rootSegmentID = request2.nextSegmentId++;
            if (boundary.completedSegments.length > 0) {
              request2.partialBoundaries.push(boundary);
            }
            var id = (boundary.id = assignSuspenseBoundaryID(
              request2.responseState
            ));
            writeStartPendingSuspenseBoundary(
              destination,
              request2.responseState,
              id
            );
            flushSubtree(request2, destination, segment);
            return writeEndPendingSuspenseBoundary(
              destination,
              request2.responseState
            );
          } else if (boundary.byteSize > request2.progressiveChunkSize) {
            boundary.rootSegmentID = request2.nextSegmentId++;
            request2.completedBoundaries.push(boundary);
            writeStartPendingSuspenseBoundary(
              destination,
              request2.responseState,
              boundary.id
            );
            flushSubtree(request2, destination, segment);
            return writeEndPendingSuspenseBoundary(
              destination,
              request2.responseState
            );
          } else {
            writeStartCompletedSuspenseBoundary$1(
              destination,
              request2.responseState
            );
            var completedSegments = boundary.completedSegments;
            if (completedSegments.length !== 1) {
              throw new Error(
                'A previously unvisited boundary must have exactly one root segment. This is a bug in React.'
              );
            }
            var contentSegment = completedSegments[0];
            flushSegment(request2, destination, contentSegment);
            return writeEndCompletedSuspenseBoundary$1(
              destination,
              request2.responseState
            );
          }
        }
        function flushClientRenderedBoundary(request2, destination, boundary) {
          return writeClientRenderBoundaryInstruction(
            destination,
            request2.responseState,
            boundary.id,
            boundary.errorDigest,
            boundary.errorMessage,
            boundary.errorComponentStack
          );
        }
        function flushSegmentContainer(request2, destination, segment) {
          writeStartSegment(
            destination,
            request2.responseState,
            segment.formatContext,
            segment.id
          );
          flushSegment(request2, destination, segment);
          return writeEndSegment(destination, segment.formatContext);
        }
        function flushCompletedBoundary(request2, destination, boundary) {
          var completedSegments = boundary.completedSegments;
          var i = 0;
          for (; i < completedSegments.length; i++) {
            var segment = completedSegments[i];
            flushPartiallyCompletedSegment(
              request2,
              destination,
              boundary,
              segment
            );
          }
          completedSegments.length = 0;
          return writeCompletedBoundaryInstruction(
            destination,
            request2.responseState,
            boundary.id,
            boundary.rootSegmentID
          );
        }
        function flushPartialBoundary(request2, destination, boundary) {
          var completedSegments = boundary.completedSegments;
          var i = 0;
          for (; i < completedSegments.length; i++) {
            var segment = completedSegments[i];
            if (
              !flushPartiallyCompletedSegment(
                request2,
                destination,
                boundary,
                segment
              )
            ) {
              i++;
              completedSegments.splice(0, i);
              return false;
            }
          }
          completedSegments.splice(0, i);
          return true;
        }
        function flushPartiallyCompletedSegment(
          request2,
          destination,
          boundary,
          segment
        ) {
          if (segment.status === FLUSHED) {
            return true;
          }
          var segmentID = segment.id;
          if (segmentID === -1) {
            var rootSegmentID = (segment.id = boundary.rootSegmentID);
            if (rootSegmentID === -1) {
              throw new Error(
                'A root segment ID must have been assigned by now. This is a bug in React.'
              );
            }
            return flushSegmentContainer(request2, destination, segment);
          } else {
            flushSegmentContainer(request2, destination, segment);
            return writeCompletedSegmentInstruction(
              destination,
              request2.responseState,
              segmentID
            );
          }
        }
        function flushCompletedQueues(request2, destination) {
          try {
            var completedRootSegment = request2.completedRootSegment;
            if (
              completedRootSegment !== null &&
              request2.pendingRootTasks === 0
            ) {
              flushSegment(request2, destination, completedRootSegment);
              request2.completedRootSegment = null;
              writeCompletedRoot(destination, request2.responseState);
            }
            var clientRenderedBoundaries = request2.clientRenderedBoundaries;
            var i;
            for (i = 0; i < clientRenderedBoundaries.length; i++) {
              var boundary = clientRenderedBoundaries[i];
              if (
                !flushClientRenderedBoundary(request2, destination, boundary)
              ) {
                request2.destination = null;
                i++;
                clientRenderedBoundaries.splice(0, i);
                return;
              }
            }
            clientRenderedBoundaries.splice(0, i);
            var completedBoundaries = request2.completedBoundaries;
            for (i = 0; i < completedBoundaries.length; i++) {
              var _boundary = completedBoundaries[i];
              if (!flushCompletedBoundary(request2, destination, _boundary)) {
                request2.destination = null;
                i++;
                completedBoundaries.splice(0, i);
                return;
              }
            }
            completedBoundaries.splice(0, i);
            completeWriting(destination);
            beginWriting(destination);
            var partialBoundaries = request2.partialBoundaries;
            for (i = 0; i < partialBoundaries.length; i++) {
              var _boundary2 = partialBoundaries[i];
              if (!flushPartialBoundary(request2, destination, _boundary2)) {
                request2.destination = null;
                i++;
                partialBoundaries.splice(0, i);
                return;
              }
            }
            partialBoundaries.splice(0, i);
            var largeBoundaries = request2.completedBoundaries;
            for (i = 0; i < largeBoundaries.length; i++) {
              var _boundary3 = largeBoundaries[i];
              if (!flushCompletedBoundary(request2, destination, _boundary3)) {
                request2.destination = null;
                i++;
                largeBoundaries.splice(0, i);
                return;
              }
            }
            largeBoundaries.splice(0, i);
          } finally {
            if (
              request2.allPendingTasks === 0 &&
              request2.pingedTasks.length === 0 &&
              request2.clientRenderedBoundaries.length === 0 &&
              request2.completedBoundaries.length === 0
            ) {
              {
                if (request2.abortableTasks.size !== 0) {
                  error(
                    'There was still abortable task at the root when we closed. This is a bug in React.'
                  );
                }
              }
              close(destination);
            }
          }
        }
        function startWork(request2) {
          scheduleWork(function () {
            return performWork(request2);
          });
        }
        function startFlowing(request2, destination) {
          if (request2.status === CLOSING) {
            request2.status = CLOSED;
            closeWithError(destination, request2.fatalError);
            return;
          }
          if (request2.status === CLOSED) {
            return;
          }
          if (request2.destination !== null) {
            return;
          }
          request2.destination = destination;
          try {
            flushCompletedQueues(request2, destination);
          } catch (error2) {
            logRecoverableError(request2, error2);
            fatalError(request2, error2);
          }
        }
        function abort(request2, reason) {
          try {
            var abortableTasks = request2.abortableTasks;
            abortableTasks.forEach(function (task) {
              return abortTask(task, request2, reason);
            });
            abortableTasks.clear();
            if (request2.destination !== null) {
              flushCompletedQueues(request2, request2.destination);
            }
          } catch (error2) {
            logRecoverableError(request2, error2);
            fatalError(request2, error2);
          }
        }
        function onError() {}
        function renderToStringImpl(
          children,
          options,
          generateStaticMarkup,
          abortReason
        ) {
          var didFatal = false;
          var fatalError2 = null;
          var result = '';
          var destination = {
            push: function (chunk) {
              if (chunk !== null) {
                result += chunk;
              }
              return true;
            },
            destroy: function (error2) {
              didFatal = true;
              fatalError2 = error2;
            },
          };
          var readyToStream = false;
          function onShellReady() {
            readyToStream = true;
          }
          var request2 = createRequest(
            children,
            createResponseState$1(
              generateStaticMarkup,
              options ? options.identifierPrefix : void 0
            ),
            createRootFormatContext(),
            Infinity,
            onError,
            void 0,
            onShellReady,
            void 0,
            void 0
          );
          startWork(request2);
          abort(request2, abortReason);
          startFlowing(request2, destination);
          if (didFatal) {
            throw fatalError2;
          }
          if (!readyToStream) {
            throw new Error(
              'A component suspended while responding to synchronous input. This will cause the UI to be replaced with a loading indicator. To fix, updates that suspend should be wrapped with startTransition.'
            );
          }
          return result;
        }
        function _inheritsLoose(subClass, superClass) {
          subClass.prototype = Object.create(superClass.prototype);
          subClass.prototype.constructor = subClass;
          subClass.__proto__ = superClass;
        }
        var ReactMarkupReadableStream = /* @__PURE__ */ (function (_Readable) {
          _inheritsLoose(ReactMarkupReadableStream2, _Readable);
          function ReactMarkupReadableStream2() {
            var _this;
            _this = _Readable.call(this, {}) || this;
            _this.request = null;
            _this.startedFlowing = false;
            return _this;
          }
          var _proto = ReactMarkupReadableStream2.prototype;
          _proto._destroy = function _destroy(err, callback) {
            abort(this.request);
            callback(err);
          };
          _proto._read = function _read(size) {
            if (this.startedFlowing) {
              startFlowing(this.request, this);
            }
          };
          return ReactMarkupReadableStream2;
        })(stream.Readable);
        function onError$1() {}
        function renderToNodeStreamImpl(
          children,
          options,
          generateStaticMarkup
        ) {
          function onAllReady() {
            destination.startedFlowing = true;
            startFlowing(request2, destination);
          }
          var destination = new ReactMarkupReadableStream();
          var request2 = createRequest(
            children,
            createResponseState$1(
              false,
              options ? options.identifierPrefix : void 0
            ),
            createRootFormatContext(),
            Infinity,
            onError$1,
            onAllReady,
            void 0,
            void 0
          );
          destination.request = request2;
          startWork(request2);
          return destination;
        }
        function renderToNodeStream(children, options) {
          {
            error(
              'renderToNodeStream is deprecated. Use renderToPipeableStream instead.'
            );
          }
          return renderToNodeStreamImpl(children, options);
        }
        function renderToStaticNodeStream(children, options) {
          return renderToNodeStreamImpl(children, options);
        }
        function renderToString2(children, options) {
          return renderToStringImpl(
            children,
            options,
            false,
            'The server used "renderToString" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to "renderToPipeableStream" which supports Suspense on the server'
          );
        }
        function renderToStaticMarkup3(children, options) {
          return renderToStringImpl(
            children,
            options,
            true,
            'The server used "renderToStaticMarkup" which does not support Suspense. If you intended to have the server wait for the suspended component please switch to "renderToPipeableStream" which supports Suspense on the server'
          );
        }
        exports2.renderToNodeStream = renderToNodeStream;
        exports2.renderToStaticMarkup = renderToStaticMarkup3;
        exports2.renderToStaticNodeStream = renderToStaticNodeStream;
        exports2.renderToString = renderToString2;
        exports2.version = ReactVersion;
      })();
    }
  },
});

// ../../node_modules/react-dom/cjs/react-dom-server.node.development.js
var require_react_dom_server_node_development = __commonJS({
  '../../node_modules/react-dom/cjs/react-dom-server.node.development.js'(
    exports2
  ) {
    'use strict';
    if (process.env.NODE_ENV !== 'production') {
      (function () {
        'use strict';
        var React = require_react();
        var util = require('util');
        var ReactVersion = '18.2.0';
        var ReactSharedInternals =
          React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
        function warn(format2) {
          {
            {
              for (
                var _len = arguments.length,
                  args = new Array(_len > 1 ? _len - 1 : 0),
                  _key = 1;
                _key < _len;
                _key++
              ) {
                args[_key - 1] = arguments[_key];
              }
              printWarning('warn', format2, args);
            }
          }
        }
        function error(format2) {
          {
            {
              for (
                var _len2 = arguments.length,
                  args = new Array(_len2 > 1 ? _len2 - 1 : 0),
                  _key2 = 1;
                _key2 < _len2;
                _key2++
              ) {
                args[_key2 - 1] = arguments[_key2];
              }
              printWarning('error', format2, args);
            }
          }
        }
        function printWarning(level, format2, args) {
          {
            var ReactDebugCurrentFrame2 =
              ReactSharedInternals.ReactDebugCurrentFrame;
            var stack = ReactDebugCurrentFrame2.getStackAddendum();
            if (stack !== '') {
              format2 += '%s';
              args = args.concat([stack]);
            }
            var argsWithFormat = args.map(function (item) {
              return String(item);
            });
            argsWithFormat.unshift('Warning: ' + format2);
            Function.prototype.apply.call(
              console[level],
              console,
              argsWithFormat
            );
          }
        }
        function scheduleWork(callback) {
          setImmediate(callback);
        }
        function flushBuffered(destination) {
          if (typeof destination.flush === 'function') {
            destination.flush();
          }
        }
        var VIEW_SIZE = 2048;
        var currentView = null;
        var writtenBytes = 0;
        var destinationHasCapacity = true;
        function beginWriting(destination) {
          currentView = new Uint8Array(VIEW_SIZE);
          writtenBytes = 0;
          destinationHasCapacity = true;
        }
        function writeStringChunk(destination, stringChunk) {
          if (stringChunk.length === 0) {
            return;
          }
          if (stringChunk.length * 3 > VIEW_SIZE) {
            if (writtenBytes > 0) {
              writeToDestination(
                destination,
                currentView.subarray(0, writtenBytes)
              );
              currentView = new Uint8Array(VIEW_SIZE);
              writtenBytes = 0;
            }
            writeToDestination(destination, textEncoder.encode(stringChunk));
            return;
          }
          var target = currentView;
          if (writtenBytes > 0) {
            target = currentView.subarray(writtenBytes);
          }
          var _textEncoder$encodeIn = textEncoder.encodeInto(
              stringChunk,
              target
            ),
            read = _textEncoder$encodeIn.read,
            written = _textEncoder$encodeIn.written;
          writtenBytes += written;
          if (read < stringChunk.length) {
            writeToDestination(destination, currentView);
            currentView = new Uint8Array(VIEW_SIZE);
            writtenBytes = textEncoder.encodeInto(
              stringChunk.slice(read),
              currentView
            ).written;
          }
          if (writtenBytes === VIEW_SIZE) {
            writeToDestination(destination, currentView);
            currentView = new Uint8Array(VIEW_SIZE);
            writtenBytes = 0;
          }
        }
        function writeViewChunk(destination, chunk) {
          if (chunk.byteLength === 0) {
            return;
          }
          if (chunk.byteLength > VIEW_SIZE) {
            if (writtenBytes > 0) {
              writeToDestination(
                destination,
                currentView.subarray(0, writtenBytes)
              );
              currentView = new Uint8Array(VIEW_SIZE);
              writtenBytes = 0;
            }
            writeToDestination(destination, chunk);
            return;
          }
          var bytesToWrite = chunk;
          var allowableBytes = currentView.length - writtenBytes;
          if (allowableBytes < bytesToWrite.byteLength) {
            if (allowableBytes === 0) {
              writeToDestination(destination, currentView);
            } else {
              currentView.set(
                bytesToWrite.subarray(0, allowableBytes),
                writtenBytes
              );
              writtenBytes += allowableBytes;
              writeToDestination(destination, currentView);
              bytesToWrite = bytesToWrite.subarray(allowableBytes);
            }
            currentView = new Uint8Array(VIEW_SIZE);
            writtenBytes = 0;
          }
          currentView.set(bytesToWrite, writtenBytes);
          writtenBytes += bytesToWrite.byteLength;
          if (writtenBytes === VIEW_SIZE) {
            writeToDestination(destination, currentView);
            currentView = new Uint8Array(VIEW_SIZE);
            writtenBytes = 0;
          }
        }
        function writeChunk(destination, chunk) {
          if (typeof chunk === 'string') {
            writeStringChunk(destination, chunk);
          } else {
            writeViewChunk(destination, chunk);
          }
        }
        function writeToDestination(destination, view) {
          var currentHasCapacity = destination.write(view);
          destinationHasCapacity = destinationHasCapacity && currentHasCapacity;
        }
        function writeChunkAndReturn(destination, chunk) {
          writeChunk(destination, chunk);
          return destinationHasCapacity;
        }
        function completeWriting(destination) {
          if (currentView && writtenBytes > 0) {
            destination.write(currentView.subarray(0, writtenBytes));
          }
          currentView = null;
          writtenBytes = 0;
          destinationHasCapacity = true;
        }
        function close(destination) {
          destination.end();
        }
        var textEncoder = new util.TextEncoder();
        function stringToChunk(content) {
          return content;
        }
        function stringToPrecomputedChunk(content) {
          return textEncoder.encode(content);
        }
        function closeWithError(destination, error2) {
          destination.destroy(error2);
        }
        function typeName(value) {
          {
            var hasToStringTag =
              typeof Symbol === 'function' && Symbol.toStringTag;
            var type =
              (hasToStringTag && value[Symbol.toStringTag]) ||
              value.constructor.name ||
              'Object';
            return type;
          }
        }
        function willCoercionThrow(value) {
          {
            try {
              testStringCoercion(value);
              return false;
            } catch (e2) {
              return true;
            }
          }
        }
        function testStringCoercion(value) {
          return '' + value;
        }
        function checkAttributeStringCoercion(value, attributeName) {
          {
            if (willCoercionThrow(value)) {
              error(
                'The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before before using it here.',
                attributeName,
                typeName(value)
              );
              return testStringCoercion(value);
            }
          }
        }
        function checkCSSPropertyStringCoercion(value, propName) {
          {
            if (willCoercionThrow(value)) {
              error(
                'The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before before using it here.',
                propName,
                typeName(value)
              );
              return testStringCoercion(value);
            }
          }
        }
        function checkHtmlStringCoercion(value) {
          {
            if (willCoercionThrow(value)) {
              error(
                'The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before before using it here.',
                typeName(value)
              );
              return testStringCoercion(value);
            }
          }
        }
        var hasOwnProperty = Object.prototype.hasOwnProperty;
        var RESERVED = 0;
        var STRING = 1;
        var BOOLEANISH_STRING = 2;
        var BOOLEAN = 3;
        var OVERLOADED_BOOLEAN = 4;
        var NUMERIC = 5;
        var POSITIVE_NUMERIC = 6;
        var ATTRIBUTE_NAME_START_CHAR =
          ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
        var ATTRIBUTE_NAME_CHAR =
          ATTRIBUTE_NAME_START_CHAR +
          '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040';
        var VALID_ATTRIBUTE_NAME_REGEX = new RegExp(
          '^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$'
        );
        var illegalAttributeNameCache = {};
        var validatedAttributeNameCache = {};
        function isAttributeNameSafe(attributeName) {
          if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) {
            return true;
          }
          if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) {
            return false;
          }
          if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
            validatedAttributeNameCache[attributeName] = true;
            return true;
          }
          illegalAttributeNameCache[attributeName] = true;
          {
            error('Invalid attribute name: `%s`', attributeName);
          }
          return false;
        }
        function shouldRemoveAttributeWithWarning(
          name,
          value,
          propertyInfo,
          isCustomComponentTag
        ) {
          if (propertyInfo !== null && propertyInfo.type === RESERVED) {
            return false;
          }
          switch (typeof value) {
            case 'function':
            case 'symbol':
              return true;
            case 'boolean': {
              if (isCustomComponentTag) {
                return false;
              }
              if (propertyInfo !== null) {
                return !propertyInfo.acceptsBooleans;
              } else {
                var prefix2 = name.toLowerCase().slice(0, 5);
                return prefix2 !== 'data-' && prefix2 !== 'aria-';
              }
            }
            default:
              return false;
          }
        }
        function getPropertyInfo(name) {
          return properties.hasOwnProperty(name) ? properties[name] : null;
        }
        function PropertyInfoRecord(
          name,
          type,
          mustUseProperty,
          attributeName,
          attributeNamespace,
          sanitizeURL2,
          removeEmptyString
        ) {
          this.acceptsBooleans =
            type === BOOLEANISH_STRING ||
            type === BOOLEAN ||
            type === OVERLOADED_BOOLEAN;
          this.attributeName = attributeName;
          this.attributeNamespace = attributeNamespace;
          this.mustUseProperty = mustUseProperty;
          this.propertyName = name;
          this.type = type;
          this.sanitizeURL = sanitizeURL2;
          this.removeEmptyString = removeEmptyString;
        }
        var properties = {};
        var reservedProps = [
          'children',
          'dangerouslySetInnerHTML',
          // TODO: This prevents the assignment of defaultValue to regular
          // elements (not just inputs). Now that ReactDOMInput assigns to the
          // defaultValue property -- do we need this?
          'defaultValue',
          'defaultChecked',
          'innerHTML',
          'suppressContentEditableWarning',
          'suppressHydrationWarning',
          'style',
        ];
        reservedProps.forEach(function (name) {
          properties[name] = new PropertyInfoRecord(
            name,
            RESERVED,
            false,
            // mustUseProperty
            name,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          ['acceptCharset', 'accept-charset'],
          ['className', 'class'],
          ['htmlFor', 'for'],
          ['httpEquiv', 'http-equiv'],
        ].forEach(function (_ref) {
          var name = _ref[0],
            attributeName = _ref[1];
          properties[name] = new PropertyInfoRecord(
            name,
            STRING,
            false,
            // mustUseProperty
            attributeName,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        ['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(
          function (name) {
            properties[name] = new PropertyInfoRecord(
              name,
              BOOLEANISH_STRING,
              false,
              // mustUseProperty
              name.toLowerCase(),
              // attributeName
              null,
              // attributeNamespace
              false,
              // sanitizeURL
              false
            );
          }
        );
        [
          'autoReverse',
          'externalResourcesRequired',
          'focusable',
          'preserveAlpha',
        ].forEach(function (name) {
          properties[name] = new PropertyInfoRecord(
            name,
            BOOLEANISH_STRING,
            false,
            // mustUseProperty
            name,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          'allowFullScreen',
          'async',
          // Note: there is a special case that prevents it from being written to the DOM
          // on the client side because the browsers are inconsistent. Instead we call focus().
          'autoFocus',
          'autoPlay',
          'controls',
          'default',
          'defer',
          'disabled',
          'disablePictureInPicture',
          'disableRemotePlayback',
          'formNoValidate',
          'hidden',
          'loop',
          'noModule',
          'noValidate',
          'open',
          'playsInline',
          'readOnly',
          'required',
          'reversed',
          'scoped',
          'seamless',
          // Microdata
          'itemScope',
        ].forEach(function (name) {
          properties[name] = new PropertyInfoRecord(
            name,
            BOOLEAN,
            false,
            // mustUseProperty
            name.toLowerCase(),
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          'checked',
          // Note: `option.selected` is not updated if `select.multiple` is
          // disabled with `removeAttribute`. We have special logic for handling this.
          'multiple',
          'muted',
          'selected',
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function (name) {
          properties[name] = new PropertyInfoRecord(
            name,
            BOOLEAN,
            true,
            // mustUseProperty
            name,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          'capture',
          'download',
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function (name) {
          properties[name] = new PropertyInfoRecord(
            name,
            OVERLOADED_BOOLEAN,
            false,
            // mustUseProperty
            name,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          'cols',
          'rows',
          'size',
          'span',
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function (name) {
          properties[name] = new PropertyInfoRecord(
            name,
            POSITIVE_NUMERIC,
            false,
            // mustUseProperty
            name,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        ['rowSpan', 'start'].forEach(function (name) {
          properties[name] = new PropertyInfoRecord(
            name,
            NUMERIC,
            false,
            // mustUseProperty
            name.toLowerCase(),
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        var CAMELIZE = /[\-\:]([a-z])/g;
        var capitalize = function (token2) {
          return token2[1].toUpperCase();
        };
        [
          'accent-height',
          'alignment-baseline',
          'arabic-form',
          'baseline-shift',
          'cap-height',
          'clip-path',
          'clip-rule',
          'color-interpolation',
          'color-interpolation-filters',
          'color-profile',
          'color-rendering',
          'dominant-baseline',
          'enable-background',
          'fill-opacity',
          'fill-rule',
          'flood-color',
          'flood-opacity',
          'font-family',
          'font-size',
          'font-size-adjust',
          'font-stretch',
          'font-style',
          'font-variant',
          'font-weight',
          'glyph-name',
          'glyph-orientation-horizontal',
          'glyph-orientation-vertical',
          'horiz-adv-x',
          'horiz-origin-x',
          'image-rendering',
          'letter-spacing',
          'lighting-color',
          'marker-end',
          'marker-mid',
          'marker-start',
          'overline-position',
          'overline-thickness',
          'paint-order',
          'panose-1',
          'pointer-events',
          'rendering-intent',
          'shape-rendering',
          'stop-color',
          'stop-opacity',
          'strikethrough-position',
          'strikethrough-thickness',
          'stroke-dasharray',
          'stroke-dashoffset',
          'stroke-linecap',
          'stroke-linejoin',
          'stroke-miterlimit',
          'stroke-opacity',
          'stroke-width',
          'text-anchor',
          'text-decoration',
          'text-rendering',
          'underline-position',
          'underline-thickness',
          'unicode-bidi',
          'unicode-range',
          'units-per-em',
          'v-alphabetic',
          'v-hanging',
          'v-ideographic',
          'v-mathematical',
          'vector-effect',
          'vert-adv-y',
          'vert-origin-x',
          'vert-origin-y',
          'word-spacing',
          'writing-mode',
          'xmlns:xlink',
          'x-height',
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function (attributeName) {
          var name = attributeName.replace(CAMELIZE, capitalize);
          properties[name] = new PropertyInfoRecord(
            name,
            STRING,
            false,
            // mustUseProperty
            attributeName,
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          'xlink:actuate',
          'xlink:arcrole',
          'xlink:role',
          'xlink:show',
          'xlink:title',
          'xlink:type',
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function (attributeName) {
          var name = attributeName.replace(CAMELIZE, capitalize);
          properties[name] = new PropertyInfoRecord(
            name,
            STRING,
            false,
            // mustUseProperty
            attributeName,
            'http://www.w3.org/1999/xlink',
            false,
            // sanitizeURL
            false
          );
        });
        [
          'xml:base',
          'xml:lang',
          'xml:space',
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function (attributeName) {
          var name = attributeName.replace(CAMELIZE, capitalize);
          properties[name] = new PropertyInfoRecord(
            name,
            STRING,
            false,
            // mustUseProperty
            attributeName,
            'http://www.w3.org/XML/1998/namespace',
            false,
            // sanitizeURL
            false
          );
        });
        ['tabIndex', 'crossOrigin'].forEach(function (attributeName) {
          properties[attributeName] = new PropertyInfoRecord(
            attributeName,
            STRING,
            false,
            // mustUseProperty
            attributeName.toLowerCase(),
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        var xlinkHref = 'xlinkHref';
        properties[xlinkHref] = new PropertyInfoRecord(
          'xlinkHref',
          STRING,
          false,
          // mustUseProperty
          'xlink:href',
          'http://www.w3.org/1999/xlink',
          true,
          // sanitizeURL
          false
        );
        ['src', 'href', 'action', 'formAction'].forEach(function (
          attributeName
        ) {
          properties[attributeName] = new PropertyInfoRecord(
            attributeName,
            STRING,
            false,
            // mustUseProperty
            attributeName.toLowerCase(),
            // attributeName
            null,
            // attributeNamespace
            true,
            // sanitizeURL
            true
          );
        });
        var isUnitlessNumber = {
          animationIterationCount: true,
          aspectRatio: true,
          borderImageOutset: true,
          borderImageSlice: true,
          borderImageWidth: true,
          boxFlex: true,
          boxFlexGroup: true,
          boxOrdinalGroup: true,
          columnCount: true,
          columns: true,
          flex: true,
          flexGrow: true,
          flexPositive: true,
          flexShrink: true,
          flexNegative: true,
          flexOrder: true,
          gridArea: true,
          gridRow: true,
          gridRowEnd: true,
          gridRowSpan: true,
          gridRowStart: true,
          gridColumn: true,
          gridColumnEnd: true,
          gridColumnSpan: true,
          gridColumnStart: true,
          fontWeight: true,
          lineClamp: true,
          lineHeight: true,
          opacity: true,
          order: true,
          orphans: true,
          tabSize: true,
          widows: true,
          zIndex: true,
          zoom: true,
          // SVG-related properties
          fillOpacity: true,
          floodOpacity: true,
          stopOpacity: true,
          strokeDasharray: true,
          strokeDashoffset: true,
          strokeMiterlimit: true,
          strokeOpacity: true,
          strokeWidth: true,
        };
        function prefixKey(prefix2, key) {
          return prefix2 + key.charAt(0).toUpperCase() + key.substring(1);
        }
        var prefixes = ['Webkit', 'ms', 'Moz', 'O'];
        Object.keys(isUnitlessNumber).forEach(function (prop) {
          prefixes.forEach(function (prefix2) {
            isUnitlessNumber[prefixKey(prefix2, prop)] = isUnitlessNumber[prop];
          });
        });
        var hasReadOnlyValue = {
          button: true,
          checkbox: true,
          image: true,
          hidden: true,
          radio: true,
          reset: true,
          submit: true,
        };
        function checkControlledValueProps(tagName, props) {
          {
            if (
              !(
                hasReadOnlyValue[props.type] ||
                props.onChange ||
                props.onInput ||
                props.readOnly ||
                props.disabled ||
                props.value == null
              )
            ) {
              error(
                'You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.'
              );
            }
            if (
              !(
                props.onChange ||
                props.readOnly ||
                props.disabled ||
                props.checked == null
              )
            ) {
              error(
                'You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.'
              );
            }
          }
        }
        function isCustomComponent(tagName, props) {
          if (tagName.indexOf('-') === -1) {
            return typeof props.is === 'string';
          }
          switch (tagName) {
            case 'annotation-xml':
            case 'color-profile':
            case 'font-face':
            case 'font-face-src':
            case 'font-face-uri':
            case 'font-face-format':
            case 'font-face-name':
            case 'missing-glyph':
              return false;
            default:
              return true;
          }
        }
        var ariaProperties = {
          'aria-current': 0,
          // state
          'aria-description': 0,
          'aria-details': 0,
          'aria-disabled': 0,
          // state
          'aria-hidden': 0,
          // state
          'aria-invalid': 0,
          // state
          'aria-keyshortcuts': 0,
          'aria-label': 0,
          'aria-roledescription': 0,
          // Widget Attributes
          'aria-autocomplete': 0,
          'aria-checked': 0,
          'aria-expanded': 0,
          'aria-haspopup': 0,
          'aria-level': 0,
          'aria-modal': 0,
          'aria-multiline': 0,
          'aria-multiselectable': 0,
          'aria-orientation': 0,
          'aria-placeholder': 0,
          'aria-pressed': 0,
          'aria-readonly': 0,
          'aria-required': 0,
          'aria-selected': 0,
          'aria-sort': 0,
          'aria-valuemax': 0,
          'aria-valuemin': 0,
          'aria-valuenow': 0,
          'aria-valuetext': 0,
          // Live Region Attributes
          'aria-atomic': 0,
          'aria-busy': 0,
          'aria-live': 0,
          'aria-relevant': 0,
          // Drag-and-Drop Attributes
          'aria-dropeffect': 0,
          'aria-grabbed': 0,
          // Relationship Attributes
          'aria-activedescendant': 0,
          'aria-colcount': 0,
          'aria-colindex': 0,
          'aria-colspan': 0,
          'aria-controls': 0,
          'aria-describedby': 0,
          'aria-errormessage': 0,
          'aria-flowto': 0,
          'aria-labelledby': 0,
          'aria-owns': 0,
          'aria-posinset': 0,
          'aria-rowcount': 0,
          'aria-rowindex': 0,
          'aria-rowspan': 0,
          'aria-setsize': 0,
        };
        var warnedProperties = {};
        var rARIA = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
        var rARIACamel = new RegExp(
          '^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$'
        );
        function validateProperty(tagName, name) {
          {
            if (
              hasOwnProperty.call(warnedProperties, name) &&
              warnedProperties[name]
            ) {
              return true;
            }
            if (rARIACamel.test(name)) {
              var ariaName = 'aria-' + name.slice(4).toLowerCase();
              var correctName = ariaProperties.hasOwnProperty(ariaName)
                ? ariaName
                : null;
              if (correctName == null) {
                error(
                  'Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.',
                  name
                );
                warnedProperties[name] = true;
                return true;
              }
              if (name !== correctName) {
                error(
                  'Invalid ARIA attribute `%s`. Did you mean `%s`?',
                  name,
                  correctName
                );
                warnedProperties[name] = true;
                return true;
              }
            }
            if (rARIA.test(name)) {
              var lowerCasedName = name.toLowerCase();
              var standardName = ariaProperties.hasOwnProperty(lowerCasedName)
                ? lowerCasedName
                : null;
              if (standardName == null) {
                warnedProperties[name] = true;
                return false;
              }
              if (name !== standardName) {
                error(
                  'Unknown ARIA attribute `%s`. Did you mean `%s`?',
                  name,
                  standardName
                );
                warnedProperties[name] = true;
                return true;
              }
            }
          }
          return true;
        }
        function warnInvalidARIAProps(type, props) {
          {
            var invalidProps = [];
            for (var key in props) {
              var isValid = validateProperty(type, key);
              if (!isValid) {
                invalidProps.push(key);
              }
            }
            var unknownPropString = invalidProps
              .map(function (prop) {
                return '`' + prop + '`';
              })
              .join(', ');
            if (invalidProps.length === 1) {
              error(
                'Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props',
                unknownPropString,
                type
              );
            } else if (invalidProps.length > 1) {
              error(
                'Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props',
                unknownPropString,
                type
              );
            }
          }
        }
        function validateProperties(type, props) {
          if (isCustomComponent(type, props)) {
            return;
          }
          warnInvalidARIAProps(type, props);
        }
        var didWarnValueNull = false;
        function validateProperties$1(type, props) {
          {
            if (type !== 'input' && type !== 'textarea' && type !== 'select') {
              return;
            }
            if (props != null && props.value === null && !didWarnValueNull) {
              didWarnValueNull = true;
              if (type === 'select' && props.multiple) {
                error(
                  '`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.',
                  type
                );
              } else {
                error(
                  '`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.',
                  type
                );
              }
            }
          }
        }
        var possibleStandardNames = {
          // HTML
          accept: 'accept',
          acceptcharset: 'acceptCharset',
          'accept-charset': 'acceptCharset',
          accesskey: 'accessKey',
          action: 'action',
          allowfullscreen: 'allowFullScreen',
          alt: 'alt',
          as: 'as',
          async: 'async',
          autocapitalize: 'autoCapitalize',
          autocomplete: 'autoComplete',
          autocorrect: 'autoCorrect',
          autofocus: 'autoFocus',
          autoplay: 'autoPlay',
          autosave: 'autoSave',
          capture: 'capture',
          cellpadding: 'cellPadding',
          cellspacing: 'cellSpacing',
          challenge: 'challenge',
          charset: 'charSet',
          checked: 'checked',
          children: 'children',
          cite: 'cite',
          class: 'className',
          classid: 'classID',
          classname: 'className',
          cols: 'cols',
          colspan: 'colSpan',
          content: 'content',
          contenteditable: 'contentEditable',
          contextmenu: 'contextMenu',
          controls: 'controls',
          controlslist: 'controlsList',
          coords: 'coords',
          crossorigin: 'crossOrigin',
          dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',
          data: 'data',
          datetime: 'dateTime',
          default: 'default',
          defaultchecked: 'defaultChecked',
          defaultvalue: 'defaultValue',
          defer: 'defer',
          dir: 'dir',
          disabled: 'disabled',
          disablepictureinpicture: 'disablePictureInPicture',
          disableremoteplayback: 'disableRemotePlayback',
          download: 'download',
          draggable: 'draggable',
          enctype: 'encType',
          enterkeyhint: 'enterKeyHint',
          for: 'htmlFor',
          form: 'form',
          formmethod: 'formMethod',
          formaction: 'formAction',
          formenctype: 'formEncType',
          formnovalidate: 'formNoValidate',
          formtarget: 'formTarget',
          frameborder: 'frameBorder',
          headers: 'headers',
          height: 'height',
          hidden: 'hidden',
          high: 'high',
          href: 'href',
          hreflang: 'hrefLang',
          htmlfor: 'htmlFor',
          httpequiv: 'httpEquiv',
          'http-equiv': 'httpEquiv',
          icon: 'icon',
          id: 'id',
          imagesizes: 'imageSizes',
          imagesrcset: 'imageSrcSet',
          innerhtml: 'innerHTML',
          inputmode: 'inputMode',
          integrity: 'integrity',
          is: 'is',
          itemid: 'itemID',
          itemprop: 'itemProp',
          itemref: 'itemRef',
          itemscope: 'itemScope',
          itemtype: 'itemType',
          keyparams: 'keyParams',
          keytype: 'keyType',
          kind: 'kind',
          label: 'label',
          lang: 'lang',
          list: 'list',
          loop: 'loop',
          low: 'low',
          manifest: 'manifest',
          marginwidth: 'marginWidth',
          marginheight: 'marginHeight',
          max: 'max',
          maxlength: 'maxLength',
          media: 'media',
          mediagroup: 'mediaGroup',
          method: 'method',
          min: 'min',
          minlength: 'minLength',
          multiple: 'multiple',
          muted: 'muted',
          name: 'name',
          nomodule: 'noModule',
          nonce: 'nonce',
          novalidate: 'noValidate',
          open: 'open',
          optimum: 'optimum',
          pattern: 'pattern',
          placeholder: 'placeholder',
          playsinline: 'playsInline',
          poster: 'poster',
          preload: 'preload',
          profile: 'profile',
          radiogroup: 'radioGroup',
          readonly: 'readOnly',
          referrerpolicy: 'referrerPolicy',
          rel: 'rel',
          required: 'required',
          reversed: 'reversed',
          role: 'role',
          rows: 'rows',
          rowspan: 'rowSpan',
          sandbox: 'sandbox',
          scope: 'scope',
          scoped: 'scoped',
          scrolling: 'scrolling',
          seamless: 'seamless',
          selected: 'selected',
          shape: 'shape',
          size: 'size',
          sizes: 'sizes',
          span: 'span',
          spellcheck: 'spellCheck',
          src: 'src',
          srcdoc: 'srcDoc',
          srclang: 'srcLang',
          srcset: 'srcSet',
          start: 'start',
          step: 'step',
          style: 'style',
          summary: 'summary',
          tabindex: 'tabIndex',
          target: 'target',
          title: 'title',
          type: 'type',
          usemap: 'useMap',
          value: 'value',
          width: 'width',
          wmode: 'wmode',
          wrap: 'wrap',
          // SVG
          about: 'about',
          accentheight: 'accentHeight',
          'accent-height': 'accentHeight',
          accumulate: 'accumulate',
          additive: 'additive',
          alignmentbaseline: 'alignmentBaseline',
          'alignment-baseline': 'alignmentBaseline',
          allowreorder: 'allowReorder',
          alphabetic: 'alphabetic',
          amplitude: 'amplitude',
          arabicform: 'arabicForm',
          'arabic-form': 'arabicForm',
          ascent: 'ascent',
          attributename: 'attributeName',
          attributetype: 'attributeType',
          autoreverse: 'autoReverse',
          azimuth: 'azimuth',
          basefrequency: 'baseFrequency',
          baselineshift: 'baselineShift',
          'baseline-shift': 'baselineShift',
          baseprofile: 'baseProfile',
          bbox: 'bbox',
          begin: 'begin',
          bias: 'bias',
          by: 'by',
          calcmode: 'calcMode',
          capheight: 'capHeight',
          'cap-height': 'capHeight',
          clip: 'clip',
          clippath: 'clipPath',
          'clip-path': 'clipPath',
          clippathunits: 'clipPathUnits',
          cliprule: 'clipRule',
          'clip-rule': 'clipRule',
          color: 'color',
          colorinterpolation: 'colorInterpolation',
          'color-interpolation': 'colorInterpolation',
          colorinterpolationfilters: 'colorInterpolationFilters',
          'color-interpolation-filters': 'colorInterpolationFilters',
          colorprofile: 'colorProfile',
          'color-profile': 'colorProfile',
          colorrendering: 'colorRendering',
          'color-rendering': 'colorRendering',
          contentscripttype: 'contentScriptType',
          contentstyletype: 'contentStyleType',
          cursor: 'cursor',
          cx: 'cx',
          cy: 'cy',
          d: 'd',
          datatype: 'datatype',
          decelerate: 'decelerate',
          descent: 'descent',
          diffuseconstant: 'diffuseConstant',
          direction: 'direction',
          display: 'display',
          divisor: 'divisor',
          dominantbaseline: 'dominantBaseline',
          'dominant-baseline': 'dominantBaseline',
          dur: 'dur',
          dx: 'dx',
          dy: 'dy',
          edgemode: 'edgeMode',
          elevation: 'elevation',
          enablebackground: 'enableBackground',
          'enable-background': 'enableBackground',
          end: 'end',
          exponent: 'exponent',
          externalresourcesrequired: 'externalResourcesRequired',
          fill: 'fill',
          fillopacity: 'fillOpacity',
          'fill-opacity': 'fillOpacity',
          fillrule: 'fillRule',
          'fill-rule': 'fillRule',
          filter: 'filter',
          filterres: 'filterRes',
          filterunits: 'filterUnits',
          floodopacity: 'floodOpacity',
          'flood-opacity': 'floodOpacity',
          floodcolor: 'floodColor',
          'flood-color': 'floodColor',
          focusable: 'focusable',
          fontfamily: 'fontFamily',
          'font-family': 'fontFamily',
          fontsize: 'fontSize',
          'font-size': 'fontSize',
          fontsizeadjust: 'fontSizeAdjust',
          'font-size-adjust': 'fontSizeAdjust',
          fontstretch: 'fontStretch',
          'font-stretch': 'fontStretch',
          fontstyle: 'fontStyle',
          'font-style': 'fontStyle',
          fontvariant: 'fontVariant',
          'font-variant': 'fontVariant',
          fontweight: 'fontWeight',
          'font-weight': 'fontWeight',
          format: 'format',
          from: 'from',
          fx: 'fx',
          fy: 'fy',
          g1: 'g1',
          g2: 'g2',
          glyphname: 'glyphName',
          'glyph-name': 'glyphName',
          glyphorientationhorizontal: 'glyphOrientationHorizontal',
          'glyph-orientation-horizontal': 'glyphOrientationHorizontal',
          glyphorientationvertical: 'glyphOrientationVertical',
          'glyph-orientation-vertical': 'glyphOrientationVertical',
          glyphref: 'glyphRef',
          gradienttransform: 'gradientTransform',
          gradientunits: 'gradientUnits',
          hanging: 'hanging',
          horizadvx: 'horizAdvX',
          'horiz-adv-x': 'horizAdvX',
          horizoriginx: 'horizOriginX',
          'horiz-origin-x': 'horizOriginX',
          ideographic: 'ideographic',
          imagerendering: 'imageRendering',
          'image-rendering': 'imageRendering',
          in2: 'in2',
          in: 'in',
          inlist: 'inlist',
          intercept: 'intercept',
          k1: 'k1',
          k2: 'k2',
          k3: 'k3',
          k4: 'k4',
          k: 'k',
          kernelmatrix: 'kernelMatrix',
          kernelunitlength: 'kernelUnitLength',
          kerning: 'kerning',
          keypoints: 'keyPoints',
          keysplines: 'keySplines',
          keytimes: 'keyTimes',
          lengthadjust: 'lengthAdjust',
          letterspacing: 'letterSpacing',
          'letter-spacing': 'letterSpacing',
          lightingcolor: 'lightingColor',
          'lighting-color': 'lightingColor',
          limitingconeangle: 'limitingConeAngle',
          local: 'local',
          markerend: 'markerEnd',
          'marker-end': 'markerEnd',
          markerheight: 'markerHeight',
          markermid: 'markerMid',
          'marker-mid': 'markerMid',
          markerstart: 'markerStart',
          'marker-start': 'markerStart',
          markerunits: 'markerUnits',
          markerwidth: 'markerWidth',
          mask: 'mask',
          maskcontentunits: 'maskContentUnits',
          maskunits: 'maskUnits',
          mathematical: 'mathematical',
          mode: 'mode',
          numoctaves: 'numOctaves',
          offset: 'offset',
          opacity: 'opacity',
          operator: 'operator',
          order: 'order',
          orient: 'orient',
          orientation: 'orientation',
          origin: 'origin',
          overflow: 'overflow',
          overlineposition: 'overlinePosition',
          'overline-position': 'overlinePosition',
          overlinethickness: 'overlineThickness',
          'overline-thickness': 'overlineThickness',
          paintorder: 'paintOrder',
          'paint-order': 'paintOrder',
          panose1: 'panose1',
          'panose-1': 'panose1',
          pathlength: 'pathLength',
          patterncontentunits: 'patternContentUnits',
          patterntransform: 'patternTransform',
          patternunits: 'patternUnits',
          pointerevents: 'pointerEvents',
          'pointer-events': 'pointerEvents',
          points: 'points',
          pointsatx: 'pointsAtX',
          pointsaty: 'pointsAtY',
          pointsatz: 'pointsAtZ',
          prefix: 'prefix',
          preservealpha: 'preserveAlpha',
          preserveaspectratio: 'preserveAspectRatio',
          primitiveunits: 'primitiveUnits',
          property: 'property',
          r: 'r',
          radius: 'radius',
          refx: 'refX',
          refy: 'refY',
          renderingintent: 'renderingIntent',
          'rendering-intent': 'renderingIntent',
          repeatcount: 'repeatCount',
          repeatdur: 'repeatDur',
          requiredextensions: 'requiredExtensions',
          requiredfeatures: 'requiredFeatures',
          resource: 'resource',
          restart: 'restart',
          result: 'result',
          results: 'results',
          rotate: 'rotate',
          rx: 'rx',
          ry: 'ry',
          scale: 'scale',
          security: 'security',
          seed: 'seed',
          shaperendering: 'shapeRendering',
          'shape-rendering': 'shapeRendering',
          slope: 'slope',
          spacing: 'spacing',
          specularconstant: 'specularConstant',
          specularexponent: 'specularExponent',
          speed: 'speed',
          spreadmethod: 'spreadMethod',
          startoffset: 'startOffset',
          stddeviation: 'stdDeviation',
          stemh: 'stemh',
          stemv: 'stemv',
          stitchtiles: 'stitchTiles',
          stopcolor: 'stopColor',
          'stop-color': 'stopColor',
          stopopacity: 'stopOpacity',
          'stop-opacity': 'stopOpacity',
          strikethroughposition: 'strikethroughPosition',
          'strikethrough-position': 'strikethroughPosition',
          strikethroughthickness: 'strikethroughThickness',
          'strikethrough-thickness': 'strikethroughThickness',
          string: 'string',
          stroke: 'stroke',
          strokedasharray: 'strokeDasharray',
          'stroke-dasharray': 'strokeDasharray',
          strokedashoffset: 'strokeDashoffset',
          'stroke-dashoffset': 'strokeDashoffset',
          strokelinecap: 'strokeLinecap',
          'stroke-linecap': 'strokeLinecap',
          strokelinejoin: 'strokeLinejoin',
          'stroke-linejoin': 'strokeLinejoin',
          strokemiterlimit: 'strokeMiterlimit',
          'stroke-miterlimit': 'strokeMiterlimit',
          strokewidth: 'strokeWidth',
          'stroke-width': 'strokeWidth',
          strokeopacity: 'strokeOpacity',
          'stroke-opacity': 'strokeOpacity',
          suppresscontenteditablewarning: 'suppressContentEditableWarning',
          suppresshydrationwarning: 'suppressHydrationWarning',
          surfacescale: 'surfaceScale',
          systemlanguage: 'systemLanguage',
          tablevalues: 'tableValues',
          targetx: 'targetX',
          targety: 'targetY',
          textanchor: 'textAnchor',
          'text-anchor': 'textAnchor',
          textdecoration: 'textDecoration',
          'text-decoration': 'textDecoration',
          textlength: 'textLength',
          textrendering: 'textRendering',
          'text-rendering': 'textRendering',
          to: 'to',
          transform: 'transform',
          typeof: 'typeof',
          u1: 'u1',
          u2: 'u2',
          underlineposition: 'underlinePosition',
          'underline-position': 'underlinePosition',
          underlinethickness: 'underlineThickness',
          'underline-thickness': 'underlineThickness',
          unicode: 'unicode',
          unicodebidi: 'unicodeBidi',
          'unicode-bidi': 'unicodeBidi',
          unicoderange: 'unicodeRange',
          'unicode-range': 'unicodeRange',
          unitsperem: 'unitsPerEm',
          'units-per-em': 'unitsPerEm',
          unselectable: 'unselectable',
          valphabetic: 'vAlphabetic',
          'v-alphabetic': 'vAlphabetic',
          values: 'values',
          vectoreffect: 'vectorEffect',
          'vector-effect': 'vectorEffect',
          version: 'version',
          vertadvy: 'vertAdvY',
          'vert-adv-y': 'vertAdvY',
          vertoriginx: 'vertOriginX',
          'vert-origin-x': 'vertOriginX',
          vertoriginy: 'vertOriginY',
          'vert-origin-y': 'vertOriginY',
          vhanging: 'vHanging',
          'v-hanging': 'vHanging',
          videographic: 'vIdeographic',
          'v-ideographic': 'vIdeographic',
          viewbox: 'viewBox',
          viewtarget: 'viewTarget',
          visibility: 'visibility',
          vmathematical: 'vMathematical',
          'v-mathematical': 'vMathematical',
          vocab: 'vocab',
          widths: 'widths',
          wordspacing: 'wordSpacing',
          'word-spacing': 'wordSpacing',
          writingmode: 'writingMode',
          'writing-mode': 'writingMode',
          x1: 'x1',
          x2: 'x2',
          x: 'x',
          xchannelselector: 'xChannelSelector',
          xheight: 'xHeight',
          'x-height': 'xHeight',
          xlinkactuate: 'xlinkActuate',
          'xlink:actuate': 'xlinkActuate',
          xlinkarcrole: 'xlinkArcrole',
          'xlink:arcrole': 'xlinkArcrole',
          xlinkhref: 'xlinkHref',
          'xlink:href': 'xlinkHref',
          xlinkrole: 'xlinkRole',
          'xlink:role': 'xlinkRole',
          xlinkshow: 'xlinkShow',
          'xlink:show': 'xlinkShow',
          xlinktitle: 'xlinkTitle',
          'xlink:title': 'xlinkTitle',
          xlinktype: 'xlinkType',
          'xlink:type': 'xlinkType',
          xmlbase: 'xmlBase',
          'xml:base': 'xmlBase',
          xmllang: 'xmlLang',
          'xml:lang': 'xmlLang',
          xmlns: 'xmlns',
          'xml:space': 'xmlSpace',
          xmlnsxlink: 'xmlnsXlink',
          'xmlns:xlink': 'xmlnsXlink',
          xmlspace: 'xmlSpace',
          y1: 'y1',
          y2: 'y2',
          y: 'y',
          ychannelselector: 'yChannelSelector',
          z: 'z',
          zoomandpan: 'zoomAndPan',
        };
        var validateProperty$1 = function () {};
        {
          var warnedProperties$1 = {};
          var EVENT_NAME_REGEX = /^on./;
          var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
          var rARIA$1 = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
          var rARIACamel$1 = new RegExp(
            '^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$'
          );
          validateProperty$1 = function (tagName, name, value, eventRegistry) {
            if (
              hasOwnProperty.call(warnedProperties$1, name) &&
              warnedProperties$1[name]
            ) {
              return true;
            }
            var lowerCasedName = name.toLowerCase();
            if (
              lowerCasedName === 'onfocusin' ||
              lowerCasedName === 'onfocusout'
            ) {
              error(
                'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React.'
              );
              warnedProperties$1[name] = true;
              return true;
            }
            if (eventRegistry != null) {
              var registrationNameDependencies =
                  eventRegistry.registrationNameDependencies,
                possibleRegistrationNames =
                  eventRegistry.possibleRegistrationNames;
              if (registrationNameDependencies.hasOwnProperty(name)) {
                return true;
              }
              var registrationName = possibleRegistrationNames.hasOwnProperty(
                lowerCasedName
              )
                ? possibleRegistrationNames[lowerCasedName]
                : null;
              if (registrationName != null) {
                error(
                  'Invalid event handler property `%s`. Did you mean `%s`?',
                  name,
                  registrationName
                );
                warnedProperties$1[name] = true;
                return true;
              }
              if (EVENT_NAME_REGEX.test(name)) {
                error(
                  'Unknown event handler property `%s`. It will be ignored.',
                  name
                );
                warnedProperties$1[name] = true;
                return true;
              }
            } else if (EVENT_NAME_REGEX.test(name)) {
              if (INVALID_EVENT_NAME_REGEX.test(name)) {
                error(
                  'Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.',
                  name
                );
              }
              warnedProperties$1[name] = true;
              return true;
            }
            if (rARIA$1.test(name) || rARIACamel$1.test(name)) {
              return true;
            }
            if (lowerCasedName === 'innerhtml') {
              error(
                'Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`.'
              );
              warnedProperties$1[name] = true;
              return true;
            }
            if (lowerCasedName === 'aria') {
              error(
                'The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead.'
              );
              warnedProperties$1[name] = true;
              return true;
            }
            if (
              lowerCasedName === 'is' &&
              value !== null &&
              value !== void 0 &&
              typeof value !== 'string'
            ) {
              error(
                'Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.',
                typeof value
              );
              warnedProperties$1[name] = true;
              return true;
            }
            if (typeof value === 'number' && isNaN(value)) {
              error(
                'Received NaN for the `%s` attribute. If this is expected, cast the value to a string.',
                name
              );
              warnedProperties$1[name] = true;
              return true;
            }
            var propertyInfo = getPropertyInfo(name);
            var isReserved =
              propertyInfo !== null && propertyInfo.type === RESERVED;
            if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
              var standardName = possibleStandardNames[lowerCasedName];
              if (standardName !== name) {
                error(
                  'Invalid DOM property `%s`. Did you mean `%s`?',
                  name,
                  standardName
                );
                warnedProperties$1[name] = true;
                return true;
              }
            } else if (!isReserved && name !== lowerCasedName) {
              error(
                'React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.',
                name,
                lowerCasedName
              );
              warnedProperties$1[name] = true;
              return true;
            }
            if (
              typeof value === 'boolean' &&
              shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)
            ) {
              if (value) {
                error(
                  'Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.',
                  value,
                  name,
                  name,
                  value,
                  name
                );
              } else {
                error(
                  'Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.',
                  value,
                  name,
                  name,
                  value,
                  name,
                  name,
                  name
                );
              }
              warnedProperties$1[name] = true;
              return true;
            }
            if (isReserved) {
              return true;
            }
            if (
              shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)
            ) {
              warnedProperties$1[name] = true;
              return false;
            }
            if (
              (value === 'false' || value === 'true') &&
              propertyInfo !== null &&
              propertyInfo.type === BOOLEAN
            ) {
              error(
                'Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?',
                value,
                name,
                value === 'false'
                  ? 'The browser will interpret it as a truthy value.'
                  : 'Although this works, it will not work as expected if you pass the string "false".',
                name,
                value
              );
              warnedProperties$1[name] = true;
              return true;
            }
            return true;
          };
        }
        var warnUnknownProperties = function (type, props, eventRegistry) {
          {
            var unknownProps = [];
            for (var key in props) {
              var isValid = validateProperty$1(
                type,
                key,
                props[key],
                eventRegistry
              );
              if (!isValid) {
                unknownProps.push(key);
              }
            }
            var unknownPropString = unknownProps
              .map(function (prop) {
                return '`' + prop + '`';
              })
              .join(', ');
            if (unknownProps.length === 1) {
              error(
                'Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior ',
                unknownPropString,
                type
              );
            } else if (unknownProps.length > 1) {
              error(
                'Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior ',
                unknownPropString,
                type
              );
            }
          }
        };
        function validateProperties$2(type, props, eventRegistry) {
          if (isCustomComponent(type, props)) {
            return;
          }
          warnUnknownProperties(type, props, eventRegistry);
        }
        var warnValidStyle = function () {};
        {
          var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
          var msPattern = /^-ms-/;
          var hyphenPattern = /-(.)/g;
          var badStyleValueWithSemicolonPattern = /;\s*$/;
          var warnedStyleNames = {};
          var warnedStyleValues = {};
          var warnedForNaNValue = false;
          var warnedForInfinityValue = false;
          var camelize = function (string) {
            return string.replace(hyphenPattern, function (_2, character) {
              return character.toUpperCase();
            });
          };
          var warnHyphenatedStyleName = function (name) {
            if (
              warnedStyleNames.hasOwnProperty(name) &&
              warnedStyleNames[name]
            ) {
              return;
            }
            warnedStyleNames[name] = true;
            error(
              'Unsupported style property %s. Did you mean %s?',
              name,
              // As Andi Smith suggests
              // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
              // is converted to lowercase `ms`.
              camelize(name.replace(msPattern, 'ms-'))
            );
          };
          var warnBadVendoredStyleName = function (name) {
            if (
              warnedStyleNames.hasOwnProperty(name) &&
              warnedStyleNames[name]
            ) {
              return;
            }
            warnedStyleNames[name] = true;
            error(
              'Unsupported vendor-prefixed style property %s. Did you mean %s?',
              name,
              name.charAt(0).toUpperCase() + name.slice(1)
            );
          };
          var warnStyleValueWithSemicolon = function (name, value) {
            if (
              warnedStyleValues.hasOwnProperty(value) &&
              warnedStyleValues[value]
            ) {
              return;
            }
            warnedStyleValues[value] = true;
            error(
              `Style property values shouldn't contain a semicolon. Try "%s: %s" instead.`,
              name,
              value.replace(badStyleValueWithSemicolonPattern, '')
            );
          };
          var warnStyleValueIsNaN = function (name, value) {
            if (warnedForNaNValue) {
              return;
            }
            warnedForNaNValue = true;
            error(
              '`NaN` is an invalid value for the `%s` css style property.',
              name
            );
          };
          var warnStyleValueIsInfinity = function (name, value) {
            if (warnedForInfinityValue) {
              return;
            }
            warnedForInfinityValue = true;
            error(
              '`Infinity` is an invalid value for the `%s` css style property.',
              name
            );
          };
          warnValidStyle = function (name, value) {
            if (name.indexOf('-') > -1) {
              warnHyphenatedStyleName(name);
            } else if (badVendoredStyleNamePattern.test(name)) {
              warnBadVendoredStyleName(name);
            } else if (badStyleValueWithSemicolonPattern.test(value)) {
              warnStyleValueWithSemicolon(name, value);
            }
            if (typeof value === 'number') {
              if (isNaN(value)) {
                warnStyleValueIsNaN(name, value);
              } else if (!isFinite(value)) {
                warnStyleValueIsInfinity(name, value);
              }
            }
          };
        }
        var warnValidStyle$1 = warnValidStyle;
        var matchHtmlRegExp = /["'&<>]/;
        function escapeHtml(string) {
          {
            checkHtmlStringCoercion(string);
          }
          var str = '' + string;
          var match = matchHtmlRegExp.exec(str);
          if (!match) {
            return str;
          }
          var escape3;
          var html = '';
          var index;
          var lastIndex = 0;
          for (index = match.index; index < str.length; index++) {
            switch (str.charCodeAt(index)) {
              case 34:
                escape3 = '&quot;';
                break;
              case 38:
                escape3 = '&amp;';
                break;
              case 39:
                escape3 = '&#x27;';
                break;
              case 60:
                escape3 = '&lt;';
                break;
              case 62:
                escape3 = '&gt;';
                break;
              default:
                continue;
            }
            if (lastIndex !== index) {
              html += str.substring(lastIndex, index);
            }
            lastIndex = index + 1;
            html += escape3;
          }
          return lastIndex !== index
            ? html + str.substring(lastIndex, index)
            : html;
        }
        function escapeTextForBrowser(text) {
          if (typeof text === 'boolean' || typeof text === 'number') {
            return '' + text;
          }
          return escapeHtml(text);
        }
        var uppercasePattern = /([A-Z])/g;
        var msPattern$1 = /^ms-/;
        function hyphenateStyleName(name) {
          return name
            .replace(uppercasePattern, '-$1')
            .toLowerCase()
            .replace(msPattern$1, '-ms-');
        }
        var isJavaScriptProtocol =
          /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i;
        var didWarn = false;
        function sanitizeURL(url) {
          {
            if (!didWarn && isJavaScriptProtocol.test(url)) {
              didWarn = true;
              error(
                'A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.',
                JSON.stringify(url)
              );
            }
          }
        }
        var isArrayImpl = Array.isArray;
        function isArray(a) {
          return isArrayImpl(a);
        }
        var startInlineScript = stringToPrecomputedChunk('<script>');
        var endInlineScript = stringToPrecomputedChunk('</script>');
        var startScriptSrc = stringToPrecomputedChunk('<script src="');
        var startModuleSrc = stringToPrecomputedChunk(
          '<script type="module" src="'
        );
        var endAsyncScript = stringToPrecomputedChunk('" async=""></script>');
        function escapeBootstrapScriptContent(scriptText) {
          {
            checkHtmlStringCoercion(scriptText);
          }
          return ('' + scriptText).replace(scriptRegex, scriptReplacer);
        }
        var scriptRegex = /(<\/|<)(s)(cript)/gi;
        var scriptReplacer = function (match, prefix2, s2, suffix) {
          return '' + prefix2 + (s2 === 's' ? '\\u0073' : '\\u0053') + suffix;
        };
        function createResponseState(
          identifierPrefix,
          nonce,
          bootstrapScriptContent,
          bootstrapScripts,
          bootstrapModules
        ) {
          var idPrefix = identifierPrefix === void 0 ? '' : identifierPrefix;
          var inlineScriptWithNonce =
            nonce === void 0
              ? startInlineScript
              : stringToPrecomputedChunk(
                  '<script nonce="' + escapeTextForBrowser(nonce) + '">'
                );
          var bootstrapChunks = [];
          if (bootstrapScriptContent !== void 0) {
            bootstrapChunks.push(
              inlineScriptWithNonce,
              stringToChunk(
                escapeBootstrapScriptContent(bootstrapScriptContent)
              ),
              endInlineScript
            );
          }
          if (bootstrapScripts !== void 0) {
            for (var i = 0; i < bootstrapScripts.length; i++) {
              bootstrapChunks.push(
                startScriptSrc,
                stringToChunk(escapeTextForBrowser(bootstrapScripts[i])),
                endAsyncScript
              );
            }
          }
          if (bootstrapModules !== void 0) {
            for (var _i2 = 0; _i2 < bootstrapModules.length; _i2++) {
              bootstrapChunks.push(
                startModuleSrc,
                stringToChunk(escapeTextForBrowser(bootstrapModules[_i2])),
                endAsyncScript
              );
            }
          }
          return {
            bootstrapChunks,
            startInlineScript: inlineScriptWithNonce,
            placeholderPrefix: stringToPrecomputedChunk(idPrefix + 'P:'),
            segmentPrefix: stringToPrecomputedChunk(idPrefix + 'S:'),
            boundaryPrefix: idPrefix + 'B:',
            idPrefix,
            nextSuspenseID: 0,
            sentCompleteSegmentFunction: false,
            sentCompleteBoundaryFunction: false,
            sentClientRenderFunction: false,
          };
        }
        var ROOT_HTML_MODE = 0;
        var HTML_MODE = 1;
        var SVG_MODE = 2;
        var MATHML_MODE = 3;
        var HTML_TABLE_MODE = 4;
        var HTML_TABLE_BODY_MODE = 5;
        var HTML_TABLE_ROW_MODE = 6;
        var HTML_COLGROUP_MODE = 7;
        function createFormatContext(insertionMode, selectedValue) {
          return {
            insertionMode,
            selectedValue,
          };
        }
        function createRootFormatContext(namespaceURI) {
          var insertionMode =
            namespaceURI === 'http://www.w3.org/2000/svg'
              ? SVG_MODE
              : namespaceURI === 'http://www.w3.org/1998/Math/MathML'
              ? MATHML_MODE
              : ROOT_HTML_MODE;
          return createFormatContext(insertionMode, null);
        }
        function getChildFormatContext(parentContext, type, props) {
          switch (type) {
            case 'select':
              return createFormatContext(
                HTML_MODE,
                props.value != null ? props.value : props.defaultValue
              );
            case 'svg':
              return createFormatContext(SVG_MODE, null);
            case 'math':
              return createFormatContext(MATHML_MODE, null);
            case 'foreignObject':
              return createFormatContext(HTML_MODE, null);
            case 'table':
              return createFormatContext(HTML_TABLE_MODE, null);
            case 'thead':
            case 'tbody':
            case 'tfoot':
              return createFormatContext(HTML_TABLE_BODY_MODE, null);
            case 'colgroup':
              return createFormatContext(HTML_COLGROUP_MODE, null);
            case 'tr':
              return createFormatContext(HTML_TABLE_ROW_MODE, null);
          }
          if (parentContext.insertionMode >= HTML_TABLE_MODE) {
            return createFormatContext(HTML_MODE, null);
          }
          if (parentContext.insertionMode === ROOT_HTML_MODE) {
            return createFormatContext(HTML_MODE, null);
          }
          return parentContext;
        }
        var UNINITIALIZED_SUSPENSE_BOUNDARY_ID = null;
        function assignSuspenseBoundaryID(responseState) {
          var generatedID = responseState.nextSuspenseID++;
          return stringToPrecomputedChunk(
            responseState.boundaryPrefix + generatedID.toString(16)
          );
        }
        function makeId(responseState, treeId, localId) {
          var idPrefix = responseState.idPrefix;
          var id = ':' + idPrefix + 'R' + treeId;
          if (localId > 0) {
            id += 'H' + localId.toString(32);
          }
          return id + ':';
        }
        function encodeHTMLTextNode(text) {
          return escapeTextForBrowser(text);
        }
        var textSeparator = stringToPrecomputedChunk('<!-- -->');
        function pushTextInstance(target, text, responseState, textEmbedded) {
          if (text === '') {
            return textEmbedded;
          }
          if (textEmbedded) {
            target.push(textSeparator);
          }
          target.push(stringToChunk(encodeHTMLTextNode(text)));
          return true;
        }
        function pushSegmentFinale(
          target,
          responseState,
          lastPushedText,
          textEmbedded
        ) {
          if (lastPushedText && textEmbedded) {
            target.push(textSeparator);
          }
        }
        var styleNameCache = /* @__PURE__ */ new Map();
        function processStyleName(styleName) {
          var chunk = styleNameCache.get(styleName);
          if (chunk !== void 0) {
            return chunk;
          }
          var result = stringToPrecomputedChunk(
            escapeTextForBrowser(hyphenateStyleName(styleName))
          );
          styleNameCache.set(styleName, result);
          return result;
        }
        var styleAttributeStart = stringToPrecomputedChunk(' style="');
        var styleAssign = stringToPrecomputedChunk(':');
        var styleSeparator = stringToPrecomputedChunk(';');
        function pushStyle(target, responseState, style) {
          if (typeof style !== 'object') {
            throw new Error(
              "The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX."
            );
          }
          var isFirst = true;
          for (var styleName in style) {
            if (!hasOwnProperty.call(style, styleName)) {
              continue;
            }
            var styleValue = style[styleName];
            if (
              styleValue == null ||
              typeof styleValue === 'boolean' ||
              styleValue === ''
            ) {
              continue;
            }
            var nameChunk = void 0;
            var valueChunk = void 0;
            var isCustomProperty = styleName.indexOf('--') === 0;
            if (isCustomProperty) {
              nameChunk = stringToChunk(escapeTextForBrowser(styleName));
              {
                checkCSSPropertyStringCoercion(styleValue, styleName);
              }
              valueChunk = stringToChunk(
                escapeTextForBrowser(('' + styleValue).trim())
              );
            } else {
              {
                warnValidStyle$1(styleName, styleValue);
              }
              nameChunk = processStyleName(styleName);
              if (typeof styleValue === 'number') {
                if (
                  styleValue !== 0 &&
                  !hasOwnProperty.call(isUnitlessNumber, styleName)
                ) {
                  valueChunk = stringToChunk(styleValue + 'px');
                } else {
                  valueChunk = stringToChunk('' + styleValue);
                }
              } else {
                {
                  checkCSSPropertyStringCoercion(styleValue, styleName);
                }
                valueChunk = stringToChunk(
                  escapeTextForBrowser(('' + styleValue).trim())
                );
              }
            }
            if (isFirst) {
              isFirst = false;
              target.push(
                styleAttributeStart,
                nameChunk,
                styleAssign,
                valueChunk
              );
            } else {
              target.push(styleSeparator, nameChunk, styleAssign, valueChunk);
            }
          }
          if (!isFirst) {
            target.push(attributeEnd);
          }
        }
        var attributeSeparator = stringToPrecomputedChunk(' ');
        var attributeAssign = stringToPrecomputedChunk('="');
        var attributeEnd = stringToPrecomputedChunk('"');
        var attributeEmptyString = stringToPrecomputedChunk('=""');
        function pushAttribute(target, responseState, name, value) {
          switch (name) {
            case 'style': {
              pushStyle(target, responseState, value);
              return;
            }
            case 'defaultValue':
            case 'defaultChecked':
            case 'innerHTML':
            case 'suppressContentEditableWarning':
            case 'suppressHydrationWarning':
              return;
          }
          if (
            // shouldIgnoreAttribute
            // We have already filtered out null/undefined and reserved words.
            name.length > 2 &&
            (name[0] === 'o' || name[0] === 'O') &&
            (name[1] === 'n' || name[1] === 'N')
          ) {
            return;
          }
          var propertyInfo = getPropertyInfo(name);
          if (propertyInfo !== null) {
            switch (typeof value) {
              case 'function':
              case 'symbol':
                return;
              case 'boolean': {
                if (!propertyInfo.acceptsBooleans) {
                  return;
                }
              }
            }
            var attributeName = propertyInfo.attributeName;
            var attributeNameChunk = stringToChunk(attributeName);
            switch (propertyInfo.type) {
              case BOOLEAN:
                if (value) {
                  target.push(
                    attributeSeparator,
                    attributeNameChunk,
                    attributeEmptyString
                  );
                }
                return;
              case OVERLOADED_BOOLEAN:
                if (value === true) {
                  target.push(
                    attributeSeparator,
                    attributeNameChunk,
                    attributeEmptyString
                  );
                } else if (value === false);
                else {
                  target.push(
                    attributeSeparator,
                    attributeNameChunk,
                    attributeAssign,
                    stringToChunk(escapeTextForBrowser(value)),
                    attributeEnd
                  );
                }
                return;
              case NUMERIC:
                if (!isNaN(value)) {
                  target.push(
                    attributeSeparator,
                    attributeNameChunk,
                    attributeAssign,
                    stringToChunk(escapeTextForBrowser(value)),
                    attributeEnd
                  );
                }
                break;
              case POSITIVE_NUMERIC:
                if (!isNaN(value) && value >= 1) {
                  target.push(
                    attributeSeparator,
                    attributeNameChunk,
                    attributeAssign,
                    stringToChunk(escapeTextForBrowser(value)),
                    attributeEnd
                  );
                }
                break;
              default:
                if (propertyInfo.sanitizeURL) {
                  {
                    checkAttributeStringCoercion(value, attributeName);
                  }
                  value = '' + value;
                  sanitizeURL(value);
                }
                target.push(
                  attributeSeparator,
                  attributeNameChunk,
                  attributeAssign,
                  stringToChunk(escapeTextForBrowser(value)),
                  attributeEnd
                );
            }
          } else if (isAttributeNameSafe(name)) {
            switch (typeof value) {
              case 'function':
              case 'symbol':
                return;
              case 'boolean': {
                var prefix2 = name.toLowerCase().slice(0, 5);
                if (prefix2 !== 'data-' && prefix2 !== 'aria-') {
                  return;
                }
              }
            }
            target.push(
              attributeSeparator,
              stringToChunk(name),
              attributeAssign,
              stringToChunk(escapeTextForBrowser(value)),
              attributeEnd
            );
          }
        }
        var endOfStartTag = stringToPrecomputedChunk('>');
        var endOfStartTagSelfClosing = stringToPrecomputedChunk('/>');
        function pushInnerHTML(target, innerHTML, children) {
          if (innerHTML != null) {
            if (children != null) {
              throw new Error(
                'Can only set one of `children` or `props.dangerouslySetInnerHTML`.'
              );
            }
            if (typeof innerHTML !== 'object' || !('__html' in innerHTML)) {
              throw new Error(
                '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.'
              );
            }
            var html = innerHTML.__html;
            if (html !== null && html !== void 0) {
              {
                checkHtmlStringCoercion(html);
              }
              target.push(stringToChunk('' + html));
            }
          }
        }
        var didWarnDefaultInputValue = false;
        var didWarnDefaultChecked = false;
        var didWarnDefaultSelectValue = false;
        var didWarnDefaultTextareaValue = false;
        var didWarnInvalidOptionChildren = false;
        var didWarnInvalidOptionInnerHTML = false;
        var didWarnSelectedSetOnOption = false;
        function checkSelectProp(props, propName) {
          {
            var value = props[propName];
            if (value != null) {
              var array = isArray(value);
              if (props.multiple && !array) {
                error(
                  'The `%s` prop supplied to <select> must be an array if `multiple` is true.',
                  propName
                );
              } else if (!props.multiple && array) {
                error(
                  'The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.',
                  propName
                );
              }
            }
          }
        }
        function pushStartSelect(target, props, responseState) {
          {
            checkControlledValueProps('select', props);
            checkSelectProp(props, 'value');
            checkSelectProp(props, 'defaultValue');
            if (
              props.value !== void 0 &&
              props.defaultValue !== void 0 &&
              !didWarnDefaultSelectValue
            ) {
              error(
                'Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://reactjs.org/link/controlled-components'
              );
              didWarnDefaultSelectValue = true;
            }
          }
          target.push(startChunkForTag('select'));
          var children = null;
          var innerHTML = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case 'children':
                  children = propValue;
                  break;
                case 'dangerouslySetInnerHTML':
                  innerHTML = propValue;
                  break;
                case 'defaultValue':
                case 'value':
                  break;
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          pushInnerHTML(target, innerHTML, children);
          return children;
        }
        function flattenOptionChildren(children) {
          var content = '';
          React.Children.forEach(children, function (child) {
            if (child == null) {
              return;
            }
            content += child;
            {
              if (
                !didWarnInvalidOptionChildren &&
                typeof child !== 'string' &&
                typeof child !== 'number'
              ) {
                didWarnInvalidOptionChildren = true;
                error(
                  'Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>.'
                );
              }
            }
          });
          return content;
        }
        var selectedMarkerAttribute = stringToPrecomputedChunk(' selected=""');
        function pushStartOption(target, props, responseState, formatContext) {
          var selectedValue = formatContext.selectedValue;
          target.push(startChunkForTag('option'));
          var children = null;
          var value = null;
          var selected = null;
          var innerHTML = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case 'children':
                  children = propValue;
                  break;
                case 'selected':
                  selected = propValue;
                  {
                    if (!didWarnSelectedSetOnOption) {
                      error(
                        'Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>.'
                      );
                      didWarnSelectedSetOnOption = true;
                    }
                  }
                  break;
                case 'dangerouslySetInnerHTML':
                  innerHTML = propValue;
                  break;
                case 'value':
                  value = propValue;
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          if (selectedValue != null) {
            var stringValue;
            if (value !== null) {
              {
                checkAttributeStringCoercion(value, 'value');
              }
              stringValue = '' + value;
            } else {
              {
                if (innerHTML !== null) {
                  if (!didWarnInvalidOptionInnerHTML) {
                    didWarnInvalidOptionInnerHTML = true;
                    error(
                      'Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected.'
                    );
                  }
                }
              }
              stringValue = flattenOptionChildren(children);
            }
            if (isArray(selectedValue)) {
              for (var i = 0; i < selectedValue.length; i++) {
                {
                  checkAttributeStringCoercion(selectedValue[i], 'value');
                }
                var v = '' + selectedValue[i];
                if (v === stringValue) {
                  target.push(selectedMarkerAttribute);
                  break;
                }
              }
            } else {
              {
                checkAttributeStringCoercion(selectedValue, 'select.value');
              }
              if ('' + selectedValue === stringValue) {
                target.push(selectedMarkerAttribute);
              }
            }
          } else if (selected) {
            target.push(selectedMarkerAttribute);
          }
          target.push(endOfStartTag);
          pushInnerHTML(target, innerHTML, children);
          return children;
        }
        function pushInput(target, props, responseState) {
          {
            checkControlledValueProps('input', props);
            if (
              props.checked !== void 0 &&
              props.defaultChecked !== void 0 &&
              !didWarnDefaultChecked
            ) {
              error(
                '%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components',
                'A component',
                props.type
              );
              didWarnDefaultChecked = true;
            }
            if (
              props.value !== void 0 &&
              props.defaultValue !== void 0 &&
              !didWarnDefaultInputValue
            ) {
              error(
                '%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components',
                'A component',
                props.type
              );
              didWarnDefaultInputValue = true;
            }
          }
          target.push(startChunkForTag('input'));
          var value = null;
          var defaultValue = null;
          var checked = null;
          var defaultChecked = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case 'children':
                case 'dangerouslySetInnerHTML':
                  throw new Error(
                    'input is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.'
                  );
                case 'defaultChecked':
                  defaultChecked = propValue;
                  break;
                case 'defaultValue':
                  defaultValue = propValue;
                  break;
                case 'checked':
                  checked = propValue;
                  break;
                case 'value':
                  value = propValue;
                  break;
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          if (checked !== null) {
            pushAttribute(target, responseState, 'checked', checked);
          } else if (defaultChecked !== null) {
            pushAttribute(target, responseState, 'checked', defaultChecked);
          }
          if (value !== null) {
            pushAttribute(target, responseState, 'value', value);
          } else if (defaultValue !== null) {
            pushAttribute(target, responseState, 'value', defaultValue);
          }
          target.push(endOfStartTagSelfClosing);
          return null;
        }
        function pushStartTextArea(target, props, responseState) {
          {
            checkControlledValueProps('textarea', props);
            if (
              props.value !== void 0 &&
              props.defaultValue !== void 0 &&
              !didWarnDefaultTextareaValue
            ) {
              error(
                'Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://reactjs.org/link/controlled-components'
              );
              didWarnDefaultTextareaValue = true;
            }
          }
          target.push(startChunkForTag('textarea'));
          var value = null;
          var defaultValue = null;
          var children = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case 'children':
                  children = propValue;
                  break;
                case 'value':
                  value = propValue;
                  break;
                case 'defaultValue':
                  defaultValue = propValue;
                  break;
                case 'dangerouslySetInnerHTML':
                  throw new Error(
                    '`dangerouslySetInnerHTML` does not make sense on <textarea>.'
                  );
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          if (value === null && defaultValue !== null) {
            value = defaultValue;
          }
          target.push(endOfStartTag);
          if (children != null) {
            {
              error(
                'Use the `defaultValue` or `value` props instead of setting children on <textarea>.'
              );
            }
            if (value != null) {
              throw new Error(
                'If you supply `defaultValue` on a <textarea>, do not pass children.'
              );
            }
            if (isArray(children)) {
              if (children.length > 1) {
                throw new Error('<textarea> can only have at most one child.');
              }
              {
                checkHtmlStringCoercion(children[0]);
              }
              value = '' + children[0];
            }
            {
              checkHtmlStringCoercion(children);
            }
            value = '' + children;
          }
          if (typeof value === 'string' && value[0] === '\n') {
            target.push(leadingNewline);
          }
          if (value !== null) {
            {
              checkAttributeStringCoercion(value, 'value');
            }
            target.push(stringToChunk(encodeHTMLTextNode('' + value)));
          }
          return null;
        }
        function pushSelfClosing(target, props, tag, responseState) {
          target.push(startChunkForTag(tag));
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case 'children':
                case 'dangerouslySetInnerHTML':
                  throw new Error(
                    tag +
                      ' is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.'
                  );
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTagSelfClosing);
          return null;
        }
        function pushStartMenuItem(target, props, responseState) {
          target.push(startChunkForTag('menuitem'));
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case 'children':
                case 'dangerouslySetInnerHTML':
                  throw new Error(
                    'menuitems cannot have `children` nor `dangerouslySetInnerHTML`.'
                  );
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          return null;
        }
        function pushStartTitle(target, props, responseState) {
          target.push(startChunkForTag('title'));
          var children = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case 'children':
                  children = propValue;
                  break;
                case 'dangerouslySetInnerHTML':
                  throw new Error(
                    '`dangerouslySetInnerHTML` does not make sense on <title>.'
                  );
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          {
            var child =
              Array.isArray(children) && children.length < 2
                ? children[0] || null
                : children;
            if (Array.isArray(children) && children.length > 1) {
              error(
                'A title element received an array with more than 1 element as children. In browsers title Elements can only have Text Nodes as children. If the children being rendered output more than a single text node in aggregate the browser will display markup and comments as text in the title and hydration will likely fail and fall back to client rendering'
              );
            } else if (child != null && child.$$typeof != null) {
              error(
                'A title element received a React element for children. In the browser title Elements can only have Text Nodes as children. If the children being rendered output more than a single text node in aggregate the browser will display markup and comments as text in the title and hydration will likely fail and fall back to client rendering'
              );
            } else if (
              child != null &&
              typeof child !== 'string' &&
              typeof child !== 'number'
            ) {
              error(
                'A title element received a value that was not a string or number for children. In the browser title Elements can only have Text Nodes as children. If the children being rendered output more than a single text node in aggregate the browser will display markup and comments as text in the title and hydration will likely fail and fall back to client rendering'
              );
            }
          }
          return children;
        }
        function pushStartGenericElement(target, props, tag, responseState) {
          target.push(startChunkForTag(tag));
          var children = null;
          var innerHTML = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case 'children':
                  children = propValue;
                  break;
                case 'dangerouslySetInnerHTML':
                  innerHTML = propValue;
                  break;
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          pushInnerHTML(target, innerHTML, children);
          if (typeof children === 'string') {
            target.push(stringToChunk(encodeHTMLTextNode(children)));
            return null;
          }
          return children;
        }
        function pushStartCustomElement(target, props, tag, responseState) {
          target.push(startChunkForTag(tag));
          var children = null;
          var innerHTML = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case 'children':
                  children = propValue;
                  break;
                case 'dangerouslySetInnerHTML':
                  innerHTML = propValue;
                  break;
                case 'style':
                  pushStyle(target, responseState, propValue);
                  break;
                case 'suppressContentEditableWarning':
                case 'suppressHydrationWarning':
                  break;
                default:
                  if (
                    isAttributeNameSafe(propKey) &&
                    typeof propValue !== 'function' &&
                    typeof propValue !== 'symbol'
                  ) {
                    target.push(
                      attributeSeparator,
                      stringToChunk(propKey),
                      attributeAssign,
                      stringToChunk(escapeTextForBrowser(propValue)),
                      attributeEnd
                    );
                  }
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          pushInnerHTML(target, innerHTML, children);
          return children;
        }
        var leadingNewline = stringToPrecomputedChunk('\n');
        function pushStartPreformattedElement(
          target,
          props,
          tag,
          responseState
        ) {
          target.push(startChunkForTag(tag));
          var children = null;
          var innerHTML = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case 'children':
                  children = propValue;
                  break;
                case 'dangerouslySetInnerHTML':
                  innerHTML = propValue;
                  break;
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          if (innerHTML != null) {
            if (children != null) {
              throw new Error(
                'Can only set one of `children` or `props.dangerouslySetInnerHTML`.'
              );
            }
            if (typeof innerHTML !== 'object' || !('__html' in innerHTML)) {
              throw new Error(
                '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.'
              );
            }
            var html = innerHTML.__html;
            if (html !== null && html !== void 0) {
              if (
                typeof html === 'string' &&
                html.length > 0 &&
                html[0] === '\n'
              ) {
                target.push(leadingNewline, stringToChunk(html));
              } else {
                {
                  checkHtmlStringCoercion(html);
                }
                target.push(stringToChunk('' + html));
              }
            }
          }
          if (typeof children === 'string' && children[0] === '\n') {
            target.push(leadingNewline);
          }
          return children;
        }
        var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/;
        var validatedTagCache = /* @__PURE__ */ new Map();
        function startChunkForTag(tag) {
          var tagStartChunk = validatedTagCache.get(tag);
          if (tagStartChunk === void 0) {
            if (!VALID_TAG_REGEX.test(tag)) {
              throw new Error('Invalid tag: ' + tag);
            }
            tagStartChunk = stringToPrecomputedChunk('<' + tag);
            validatedTagCache.set(tag, tagStartChunk);
          }
          return tagStartChunk;
        }
        var DOCTYPE = stringToPrecomputedChunk('<!DOCTYPE html>');
        function pushStartInstance(
          target,
          type,
          props,
          responseState,
          formatContext
        ) {
          {
            validateProperties(type, props);
            validateProperties$1(type, props);
            validateProperties$2(type, props, null);
            if (
              !props.suppressContentEditableWarning &&
              props.contentEditable &&
              props.children != null
            ) {
              error(
                'A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional.'
              );
            }
            if (
              formatContext.insertionMode !== SVG_MODE &&
              formatContext.insertionMode !== MATHML_MODE
            ) {
              if (
                type.indexOf('-') === -1 &&
                typeof props.is !== 'string' &&
                type.toLowerCase() !== type
              ) {
                error(
                  '<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.',
                  type
                );
              }
            }
          }
          switch (type) {
            case 'select':
              return pushStartSelect(target, props, responseState);
            case 'option':
              return pushStartOption(
                target,
                props,
                responseState,
                formatContext
              );
            case 'textarea':
              return pushStartTextArea(target, props, responseState);
            case 'input':
              return pushInput(target, props, responseState);
            case 'menuitem':
              return pushStartMenuItem(target, props, responseState);
            case 'title':
              return pushStartTitle(target, props, responseState);
            case 'listing':
            case 'pre': {
              return pushStartPreformattedElement(
                target,
                props,
                type,
                responseState
              );
            }
            case 'area':
            case 'base':
            case 'br':
            case 'col':
            case 'embed':
            case 'hr':
            case 'img':
            case 'keygen':
            case 'link':
            case 'meta':
            case 'param':
            case 'source':
            case 'track':
            case 'wbr': {
              return pushSelfClosing(target, props, type, responseState);
            }
            case 'annotation-xml':
            case 'color-profile':
            case 'font-face':
            case 'font-face-src':
            case 'font-face-uri':
            case 'font-face-format':
            case 'font-face-name':
            case 'missing-glyph': {
              return pushStartGenericElement(
                target,
                props,
                type,
                responseState
              );
            }
            case 'html': {
              if (formatContext.insertionMode === ROOT_HTML_MODE) {
                target.push(DOCTYPE);
              }
              return pushStartGenericElement(
                target,
                props,
                type,
                responseState
              );
            }
            default: {
              if (type.indexOf('-') === -1 && typeof props.is !== 'string') {
                return pushStartGenericElement(
                  target,
                  props,
                  type,
                  responseState
                );
              } else {
                return pushStartCustomElement(
                  target,
                  props,
                  type,
                  responseState
                );
              }
            }
          }
        }
        var endTag1 = stringToPrecomputedChunk('</');
        var endTag2 = stringToPrecomputedChunk('>');
        function pushEndInstance(target, type, props) {
          switch (type) {
            case 'area':
            case 'base':
            case 'br':
            case 'col':
            case 'embed':
            case 'hr':
            case 'img':
            case 'input':
            case 'keygen':
            case 'link':
            case 'meta':
            case 'param':
            case 'source':
            case 'track':
            case 'wbr': {
              break;
            }
            default: {
              target.push(endTag1, stringToChunk(type), endTag2);
            }
          }
        }
        function writeCompletedRoot(destination, responseState) {
          var bootstrapChunks = responseState.bootstrapChunks;
          var i = 0;
          for (; i < bootstrapChunks.length - 1; i++) {
            writeChunk(destination, bootstrapChunks[i]);
          }
          if (i < bootstrapChunks.length) {
            return writeChunkAndReturn(destination, bootstrapChunks[i]);
          }
          return true;
        }
        var placeholder1 = stringToPrecomputedChunk('<template id="');
        var placeholder2 = stringToPrecomputedChunk('"></template>');
        function writePlaceholder(destination, responseState, id) {
          writeChunk(destination, placeholder1);
          writeChunk(destination, responseState.placeholderPrefix);
          var formattedID = stringToChunk(id.toString(16));
          writeChunk(destination, formattedID);
          return writeChunkAndReturn(destination, placeholder2);
        }
        var startCompletedSuspenseBoundary =
          stringToPrecomputedChunk('<!--$-->');
        var startPendingSuspenseBoundary1 = stringToPrecomputedChunk(
          '<!--$?--><template id="'
        );
        var startPendingSuspenseBoundary2 =
          stringToPrecomputedChunk('"></template>');
        var startClientRenderedSuspenseBoundary =
          stringToPrecomputedChunk('<!--$!-->');
        var endSuspenseBoundary = stringToPrecomputedChunk('<!--/$-->');
        var clientRenderedSuspenseBoundaryError1 =
          stringToPrecomputedChunk('<template');
        var clientRenderedSuspenseBoundaryErrorAttrInterstitial =
          stringToPrecomputedChunk('"');
        var clientRenderedSuspenseBoundaryError1A =
          stringToPrecomputedChunk(' data-dgst="');
        var clientRenderedSuspenseBoundaryError1B =
          stringToPrecomputedChunk(' data-msg="');
        var clientRenderedSuspenseBoundaryError1C =
          stringToPrecomputedChunk(' data-stck="');
        var clientRenderedSuspenseBoundaryError2 =
          stringToPrecomputedChunk('></template>');
        function writeStartCompletedSuspenseBoundary(
          destination,
          responseState
        ) {
          return writeChunkAndReturn(
            destination,
            startCompletedSuspenseBoundary
          );
        }
        function writeStartPendingSuspenseBoundary(
          destination,
          responseState,
          id
        ) {
          writeChunk(destination, startPendingSuspenseBoundary1);
          if (id === null) {
            throw new Error(
              'An ID must have been assigned before we can complete the boundary.'
            );
          }
          writeChunk(destination, id);
          return writeChunkAndReturn(
            destination,
            startPendingSuspenseBoundary2
          );
        }
        function writeStartClientRenderedSuspenseBoundary(
          destination,
          responseState,
          errorDigest,
          errorMesssage,
          errorComponentStack
        ) {
          var result;
          result = writeChunkAndReturn(
            destination,
            startClientRenderedSuspenseBoundary
          );
          writeChunk(destination, clientRenderedSuspenseBoundaryError1);
          if (errorDigest) {
            writeChunk(destination, clientRenderedSuspenseBoundaryError1A);
            writeChunk(
              destination,
              stringToChunk(escapeTextForBrowser(errorDigest))
            );
            writeChunk(
              destination,
              clientRenderedSuspenseBoundaryErrorAttrInterstitial
            );
          }
          {
            if (errorMesssage) {
              writeChunk(destination, clientRenderedSuspenseBoundaryError1B);
              writeChunk(
                destination,
                stringToChunk(escapeTextForBrowser(errorMesssage))
              );
              writeChunk(
                destination,
                clientRenderedSuspenseBoundaryErrorAttrInterstitial
              );
            }
            if (errorComponentStack) {
              writeChunk(destination, clientRenderedSuspenseBoundaryError1C);
              writeChunk(
                destination,
                stringToChunk(escapeTextForBrowser(errorComponentStack))
              );
              writeChunk(
                destination,
                clientRenderedSuspenseBoundaryErrorAttrInterstitial
              );
            }
          }
          result = writeChunkAndReturn(
            destination,
            clientRenderedSuspenseBoundaryError2
          );
          return result;
        }
        function writeEndCompletedSuspenseBoundary(destination, responseState) {
          return writeChunkAndReturn(destination, endSuspenseBoundary);
        }
        function writeEndPendingSuspenseBoundary(destination, responseState) {
          return writeChunkAndReturn(destination, endSuspenseBoundary);
        }
        function writeEndClientRenderedSuspenseBoundary(
          destination,
          responseState
        ) {
          return writeChunkAndReturn(destination, endSuspenseBoundary);
        }
        var startSegmentHTML = stringToPrecomputedChunk('<div hidden id="');
        var startSegmentHTML2 = stringToPrecomputedChunk('">');
        var endSegmentHTML = stringToPrecomputedChunk('</div>');
        var startSegmentSVG = stringToPrecomputedChunk(
          '<svg aria-hidden="true" style="display:none" id="'
        );
        var startSegmentSVG2 = stringToPrecomputedChunk('">');
        var endSegmentSVG = stringToPrecomputedChunk('</svg>');
        var startSegmentMathML = stringToPrecomputedChunk(
          '<math aria-hidden="true" style="display:none" id="'
        );
        var startSegmentMathML2 = stringToPrecomputedChunk('">');
        var endSegmentMathML = stringToPrecomputedChunk('</math>');
        var startSegmentTable = stringToPrecomputedChunk('<table hidden id="');
        var startSegmentTable2 = stringToPrecomputedChunk('">');
        var endSegmentTable = stringToPrecomputedChunk('</table>');
        var startSegmentTableBody = stringToPrecomputedChunk(
          '<table hidden><tbody id="'
        );
        var startSegmentTableBody2 = stringToPrecomputedChunk('">');
        var endSegmentTableBody = stringToPrecomputedChunk('</tbody></table>');
        var startSegmentTableRow = stringToPrecomputedChunk(
          '<table hidden><tr id="'
        );
        var startSegmentTableRow2 = stringToPrecomputedChunk('">');
        var endSegmentTableRow = stringToPrecomputedChunk('</tr></table>');
        var startSegmentColGroup = stringToPrecomputedChunk(
          '<table hidden><colgroup id="'
        );
        var startSegmentColGroup2 = stringToPrecomputedChunk('">');
        var endSegmentColGroup = stringToPrecomputedChunk(
          '</colgroup></table>'
        );
        function writeStartSegment(
          destination,
          responseState,
          formatContext,
          id
        ) {
          switch (formatContext.insertionMode) {
            case ROOT_HTML_MODE:
            case HTML_MODE: {
              writeChunk(destination, startSegmentHTML);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentHTML2);
            }
            case SVG_MODE: {
              writeChunk(destination, startSegmentSVG);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentSVG2);
            }
            case MATHML_MODE: {
              writeChunk(destination, startSegmentMathML);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentMathML2);
            }
            case HTML_TABLE_MODE: {
              writeChunk(destination, startSegmentTable);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentTable2);
            }
            case HTML_TABLE_BODY_MODE: {
              writeChunk(destination, startSegmentTableBody);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentTableBody2);
            }
            case HTML_TABLE_ROW_MODE: {
              writeChunk(destination, startSegmentTableRow);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentTableRow2);
            }
            case HTML_COLGROUP_MODE: {
              writeChunk(destination, startSegmentColGroup);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentColGroup2);
            }
            default: {
              throw new Error(
                'Unknown insertion mode. This is a bug in React.'
              );
            }
          }
        }
        function writeEndSegment(destination, formatContext) {
          switch (formatContext.insertionMode) {
            case ROOT_HTML_MODE:
            case HTML_MODE: {
              return writeChunkAndReturn(destination, endSegmentHTML);
            }
            case SVG_MODE: {
              return writeChunkAndReturn(destination, endSegmentSVG);
            }
            case MATHML_MODE: {
              return writeChunkAndReturn(destination, endSegmentMathML);
            }
            case HTML_TABLE_MODE: {
              return writeChunkAndReturn(destination, endSegmentTable);
            }
            case HTML_TABLE_BODY_MODE: {
              return writeChunkAndReturn(destination, endSegmentTableBody);
            }
            case HTML_TABLE_ROW_MODE: {
              return writeChunkAndReturn(destination, endSegmentTableRow);
            }
            case HTML_COLGROUP_MODE: {
              return writeChunkAndReturn(destination, endSegmentColGroup);
            }
            default: {
              throw new Error(
                'Unknown insertion mode. This is a bug in React.'
              );
            }
          }
        }
        var completeSegmentFunction =
          'function $RS(a,b){a=document.getElementById(a);b=document.getElementById(b);for(a.parentNode.removeChild(a);a.firstChild;)b.parentNode.insertBefore(a.firstChild,b);b.parentNode.removeChild(b)}';
        var completeBoundaryFunction =
          'function $RC(a,b){a=document.getElementById(a);b=document.getElementById(b);b.parentNode.removeChild(b);if(a){a=a.previousSibling;var f=a.parentNode,c=a.nextSibling,e=0;do{if(c&&8===c.nodeType){var d=c.data;if("/$"===d)if(0===e)break;else e--;else"$"!==d&&"$?"!==d&&"$!"!==d||e++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;b.firstChild;)f.insertBefore(b.firstChild,c);a.data="$";a._reactRetry&&a._reactRetry()}}';
        var clientRenderFunction =
          'function $RX(b,c,d,e){var a=document.getElementById(b);a&&(b=a.previousSibling,b.data="$!",a=a.dataset,c&&(a.dgst=c),d&&(a.msg=d),e&&(a.stck=e),b._reactRetry&&b._reactRetry())}';
        var completeSegmentScript1Full = stringToPrecomputedChunk(
          completeSegmentFunction + ';$RS("'
        );
        var completeSegmentScript1Partial = stringToPrecomputedChunk('$RS("');
        var completeSegmentScript2 = stringToPrecomputedChunk('","');
        var completeSegmentScript3 = stringToPrecomputedChunk('")</script>');
        function writeCompletedSegmentInstruction(
          destination,
          responseState,
          contentSegmentID
        ) {
          writeChunk(destination, responseState.startInlineScript);
          if (!responseState.sentCompleteSegmentFunction) {
            responseState.sentCompleteSegmentFunction = true;
            writeChunk(destination, completeSegmentScript1Full);
          } else {
            writeChunk(destination, completeSegmentScript1Partial);
          }
          writeChunk(destination, responseState.segmentPrefix);
          var formattedID = stringToChunk(contentSegmentID.toString(16));
          writeChunk(destination, formattedID);
          writeChunk(destination, completeSegmentScript2);
          writeChunk(destination, responseState.placeholderPrefix);
          writeChunk(destination, formattedID);
          return writeChunkAndReturn(destination, completeSegmentScript3);
        }
        var completeBoundaryScript1Full = stringToPrecomputedChunk(
          completeBoundaryFunction + ';$RC("'
        );
        var completeBoundaryScript1Partial = stringToPrecomputedChunk('$RC("');
        var completeBoundaryScript2 = stringToPrecomputedChunk('","');
        var completeBoundaryScript3 = stringToPrecomputedChunk('")</script>');
        function writeCompletedBoundaryInstruction(
          destination,
          responseState,
          boundaryID,
          contentSegmentID
        ) {
          writeChunk(destination, responseState.startInlineScript);
          if (!responseState.sentCompleteBoundaryFunction) {
            responseState.sentCompleteBoundaryFunction = true;
            writeChunk(destination, completeBoundaryScript1Full);
          } else {
            writeChunk(destination, completeBoundaryScript1Partial);
          }
          if (boundaryID === null) {
            throw new Error(
              'An ID must have been assigned before we can complete the boundary.'
            );
          }
          var formattedContentID = stringToChunk(contentSegmentID.toString(16));
          writeChunk(destination, boundaryID);
          writeChunk(destination, completeBoundaryScript2);
          writeChunk(destination, responseState.segmentPrefix);
          writeChunk(destination, formattedContentID);
          return writeChunkAndReturn(destination, completeBoundaryScript3);
        }
        var clientRenderScript1Full = stringToPrecomputedChunk(
          clientRenderFunction + ';$RX("'
        );
        var clientRenderScript1Partial = stringToPrecomputedChunk('$RX("');
        var clientRenderScript1A = stringToPrecomputedChunk('"');
        var clientRenderScript2 = stringToPrecomputedChunk(')</script>');
        var clientRenderErrorScriptArgInterstitial =
          stringToPrecomputedChunk(',');
        function writeClientRenderBoundaryInstruction(
          destination,
          responseState,
          boundaryID,
          errorDigest,
          errorMessage,
          errorComponentStack
        ) {
          writeChunk(destination, responseState.startInlineScript);
          if (!responseState.sentClientRenderFunction) {
            responseState.sentClientRenderFunction = true;
            writeChunk(destination, clientRenderScript1Full);
          } else {
            writeChunk(destination, clientRenderScript1Partial);
          }
          if (boundaryID === null) {
            throw new Error(
              'An ID must have been assigned before we can complete the boundary.'
            );
          }
          writeChunk(destination, boundaryID);
          writeChunk(destination, clientRenderScript1A);
          if (errorDigest || errorMessage || errorComponentStack) {
            writeChunk(destination, clientRenderErrorScriptArgInterstitial);
            writeChunk(
              destination,
              stringToChunk(
                escapeJSStringsForInstructionScripts(errorDigest || '')
              )
            );
          }
          if (errorMessage || errorComponentStack) {
            writeChunk(destination, clientRenderErrorScriptArgInterstitial);
            writeChunk(
              destination,
              stringToChunk(
                escapeJSStringsForInstructionScripts(errorMessage || '')
              )
            );
          }
          if (errorComponentStack) {
            writeChunk(destination, clientRenderErrorScriptArgInterstitial);
            writeChunk(
              destination,
              stringToChunk(
                escapeJSStringsForInstructionScripts(errorComponentStack)
              )
            );
          }
          return writeChunkAndReturn(destination, clientRenderScript2);
        }
        var regexForJSStringsInScripts = /[<\u2028\u2029]/g;
        function escapeJSStringsForInstructionScripts(input) {
          var escaped = JSON.stringify(input);
          return escaped.replace(regexForJSStringsInScripts, function (match) {
            switch (match) {
              case '<':
                return '\\u003c';
              case '\u2028':
                return '\\u2028';
              case '\u2029':
                return '\\u2029';
              default: {
                throw new Error(
                  'escapeJSStringsForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React'
                );
              }
            }
          });
        }
        var assign = Object.assign;
        var REACT_ELEMENT_TYPE = Symbol.for('react.element');
        var REACT_PORTAL_TYPE = Symbol.for('react.portal');
        var REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');
        var REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');
        var REACT_PROFILER_TYPE = Symbol.for('react.profiler');
        var REACT_PROVIDER_TYPE = Symbol.for('react.provider');
        var REACT_CONTEXT_TYPE = Symbol.for('react.context');
        var REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');
        var REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');
        var REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');
        var REACT_MEMO_TYPE = Symbol.for('react.memo');
        var REACT_LAZY_TYPE = Symbol.for('react.lazy');
        var REACT_SCOPE_TYPE = Symbol.for('react.scope');
        var REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for(
          'react.debug_trace_mode'
        );
        var REACT_LEGACY_HIDDEN_TYPE = Symbol.for('react.legacy_hidden');
        var REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED = Symbol.for(
          'react.default_value'
        );
        var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
        var FAUX_ITERATOR_SYMBOL = '@@iterator';
        function getIteratorFn(maybeIterable) {
          if (maybeIterable === null || typeof maybeIterable !== 'object') {
            return null;
          }
          var maybeIterator =
            (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||
            maybeIterable[FAUX_ITERATOR_SYMBOL];
          if (typeof maybeIterator === 'function') {
            return maybeIterator;
          }
          return null;
        }
        function getWrappedName(outerType, innerType, wrapperName) {
          var displayName = outerType.displayName;
          if (displayName) {
            return displayName;
          }
          var functionName = innerType.displayName || innerType.name || '';
          return functionName !== ''
            ? wrapperName + '(' + functionName + ')'
            : wrapperName;
        }
        function getContextName(type) {
          return type.displayName || 'Context';
        }
        function getComponentNameFromType(type) {
          if (type == null) {
            return null;
          }
          {
            if (typeof type.tag === 'number') {
              error(
                'Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.'
              );
            }
          }
          if (typeof type === 'function') {
            return type.displayName || type.name || null;
          }
          if (typeof type === 'string') {
            return type;
          }
          switch (type) {
            case REACT_FRAGMENT_TYPE:
              return 'Fragment';
            case REACT_PORTAL_TYPE:
              return 'Portal';
            case REACT_PROFILER_TYPE:
              return 'Profiler';
            case REACT_STRICT_MODE_TYPE:
              return 'StrictMode';
            case REACT_SUSPENSE_TYPE:
              return 'Suspense';
            case REACT_SUSPENSE_LIST_TYPE:
              return 'SuspenseList';
          }
          if (typeof type === 'object') {
            switch (type.$$typeof) {
              case REACT_CONTEXT_TYPE:
                var context = type;
                return getContextName(context) + '.Consumer';
              case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + '.Provider';
              case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, 'ForwardRef');
              case REACT_MEMO_TYPE:
                var outerName = type.displayName || null;
                if (outerName !== null) {
                  return outerName;
                }
                return getComponentNameFromType(type.type) || 'Memo';
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                  return getComponentNameFromType(init(payload));
                } catch (x) {
                  return null;
                }
              }
            }
          }
          return null;
        }
        var disabledDepth = 0;
        var prevLog;
        var prevInfo;
        var prevWarn;
        var prevError;
        var prevGroup;
        var prevGroupCollapsed;
        var prevGroupEnd;
        function disabledLog() {}
        disabledLog.__reactDisabledLog = true;
        function disableLogs() {
          {
            if (disabledDepth === 0) {
              prevLog = console.log;
              prevInfo = console.info;
              prevWarn = console.warn;
              prevError = console.error;
              prevGroup = console.group;
              prevGroupCollapsed = console.groupCollapsed;
              prevGroupEnd = console.groupEnd;
              var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true,
              };
              Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props,
              });
            }
            disabledDepth++;
          }
        }
        function reenableLogs() {
          {
            disabledDepth--;
            if (disabledDepth === 0) {
              var props = {
                configurable: true,
                enumerable: true,
                writable: true,
              };
              Object.defineProperties(console, {
                log: assign({}, props, {
                  value: prevLog,
                }),
                info: assign({}, props, {
                  value: prevInfo,
                }),
                warn: assign({}, props, {
                  value: prevWarn,
                }),
                error: assign({}, props, {
                  value: prevError,
                }),
                group: assign({}, props, {
                  value: prevGroup,
                }),
                groupCollapsed: assign({}, props, {
                  value: prevGroupCollapsed,
                }),
                groupEnd: assign({}, props, {
                  value: prevGroupEnd,
                }),
              });
            }
            if (disabledDepth < 0) {
              error(
                'disabledDepth fell below zero. This is a bug in React. Please file an issue.'
              );
            }
          }
        }
        var ReactCurrentDispatcher =
          ReactSharedInternals.ReactCurrentDispatcher;
        var prefix;
        function describeBuiltInComponentFrame(name, source, ownerFn) {
          {
            if (prefix === void 0) {
              try {
                throw Error();
              } catch (x) {
                var match = x.stack.trim().match(/\n( *(at )?)/);
                prefix = (match && match[1]) || '';
              }
            }
            return '\n' + prefix + name;
          }
        }
        var reentry = false;
        var componentFrameCache;
        {
          var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
          componentFrameCache = new PossiblyWeakMap();
        }
        function describeNativeComponentFrame(fn, construct) {
          if (!fn || reentry) {
            return '';
          }
          {
            var frame = componentFrameCache.get(fn);
            if (frame !== void 0) {
              return frame;
            }
          }
          var control;
          reentry = true;
          var previousPrepareStackTrace = Error.prepareStackTrace;
          Error.prepareStackTrace = void 0;
          var previousDispatcher;
          {
            previousDispatcher = ReactCurrentDispatcher.current;
            ReactCurrentDispatcher.current = null;
            disableLogs();
          }
          try {
            if (construct) {
              var Fake = function () {
                throw Error();
              };
              Object.defineProperty(Fake.prototype, 'props', {
                set: function () {
                  throw Error();
                },
              });
              if (typeof Reflect === 'object' && Reflect.construct) {
                try {
                  Reflect.construct(Fake, []);
                } catch (x) {
                  control = x;
                }
                Reflect.construct(fn, [], Fake);
              } else {
                try {
                  Fake.call();
                } catch (x) {
                  control = x;
                }
                fn.call(Fake.prototype);
              }
            } else {
              try {
                throw Error();
              } catch (x) {
                control = x;
              }
              fn();
            }
          } catch (sample) {
            if (sample && control && typeof sample.stack === 'string') {
              var sampleLines = sample.stack.split('\n');
              var controlLines = control.stack.split('\n');
              var s2 = sampleLines.length - 1;
              var c2 = controlLines.length - 1;
              while (
                s2 >= 1 &&
                c2 >= 0 &&
                sampleLines[s2] !== controlLines[c2]
              ) {
                c2--;
              }
              for (; s2 >= 1 && c2 >= 0; s2--, c2--) {
                if (sampleLines[s2] !== controlLines[c2]) {
                  if (s2 !== 1 || c2 !== 1) {
                    do {
                      s2--;
                      c2--;
                      if (c2 < 0 || sampleLines[s2] !== controlLines[c2]) {
                        var _frame =
                          '\n' + sampleLines[s2].replace(' at new ', ' at ');
                        if (fn.displayName && _frame.includes('<anonymous>')) {
                          _frame = _frame.replace(
                            '<anonymous>',
                            fn.displayName
                          );
                        }
                        {
                          if (typeof fn === 'function') {
                            componentFrameCache.set(fn, _frame);
                          }
                        }
                        return _frame;
                      }
                    } while (s2 >= 1 && c2 >= 0);
                  }
                  break;
                }
              }
            }
          } finally {
            reentry = false;
            {
              ReactCurrentDispatcher.current = previousDispatcher;
              reenableLogs();
            }
            Error.prepareStackTrace = previousPrepareStackTrace;
          }
          var name = fn ? fn.displayName || fn.name : '';
          var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';
          {
            if (typeof fn === 'function') {
              componentFrameCache.set(fn, syntheticFrame);
            }
          }
          return syntheticFrame;
        }
        function describeClassComponentFrame(ctor, source, ownerFn) {
          {
            return describeNativeComponentFrame(ctor, true);
          }
        }
        function describeFunctionComponentFrame(fn, source, ownerFn) {
          {
            return describeNativeComponentFrame(fn, false);
          }
        }
        function shouldConstruct(Component) {
          var prototype = Component.prototype;
          return !!(prototype && prototype.isReactComponent);
        }
        function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
          if (type == null) {
            return '';
          }
          if (typeof type === 'function') {
            {
              return describeNativeComponentFrame(type, shouldConstruct(type));
            }
          }
          if (typeof type === 'string') {
            return describeBuiltInComponentFrame(type);
          }
          switch (type) {
            case REACT_SUSPENSE_TYPE:
              return describeBuiltInComponentFrame('Suspense');
            case REACT_SUSPENSE_LIST_TYPE:
              return describeBuiltInComponentFrame('SuspenseList');
          }
          if (typeof type === 'object') {
            switch (type.$$typeof) {
              case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
              case REACT_MEMO_TYPE:
                return describeUnknownElementTypeFrameInDEV(
                  type.type,
                  source,
                  ownerFn
                );
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                  return describeUnknownElementTypeFrameInDEV(
                    init(payload),
                    source,
                    ownerFn
                  );
                } catch (x) {}
              }
            }
          }
          return '';
        }
        var loggedTypeFailures = {};
        var ReactDebugCurrentFrame =
          ReactSharedInternals.ReactDebugCurrentFrame;
        function setCurrentlyValidatingElement(element) {
          {
            if (element) {
              var owner = element._owner;
              var stack = describeUnknownElementTypeFrameInDEV(
                element.type,
                element._source,
                owner ? owner.type : null
              );
              ReactDebugCurrentFrame.setExtraStackFrame(stack);
            } else {
              ReactDebugCurrentFrame.setExtraStackFrame(null);
            }
          }
        }
        function checkPropTypes(
          typeSpecs,
          values,
          location,
          componentName,
          element
        ) {
          {
            var has = Function.call.bind(hasOwnProperty);
            for (var typeSpecName in typeSpecs) {
              if (has(typeSpecs, typeSpecName)) {
                var error$1 = void 0;
                try {
                  if (typeof typeSpecs[typeSpecName] !== 'function') {
                    var err = Error(
                      (componentName || 'React class') +
                        ': ' +
                        location +
                        ' type `' +
                        typeSpecName +
                        '` is invalid; it must be a function, usually from the `prop-types` package, but received `' +
                        typeof typeSpecs[typeSpecName] +
                        '`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.'
                    );
                    err.name = 'Invariant Violation';
                    throw err;
                  }
                  error$1 = typeSpecs[typeSpecName](
                    values,
                    typeSpecName,
                    componentName,
                    location,
                    null,
                    'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED'
                  );
                } catch (ex) {
                  error$1 = ex;
                }
                if (error$1 && !(error$1 instanceof Error)) {
                  setCurrentlyValidatingElement(element);
                  error(
                    '%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).',
                    componentName || 'React class',
                    location,
                    typeSpecName,
                    typeof error$1
                  );
                  setCurrentlyValidatingElement(null);
                }
                if (
                  error$1 instanceof Error &&
                  !(error$1.message in loggedTypeFailures)
                ) {
                  loggedTypeFailures[error$1.message] = true;
                  setCurrentlyValidatingElement(element);
                  error('Failed %s type: %s', location, error$1.message);
                  setCurrentlyValidatingElement(null);
                }
              }
            }
          }
        }
        var warnedAboutMissingGetChildContext;
        {
          warnedAboutMissingGetChildContext = {};
        }
        var emptyContextObject = {};
        {
          Object.freeze(emptyContextObject);
        }
        function getMaskedContext(type, unmaskedContext) {
          {
            var contextTypes = type.contextTypes;
            if (!contextTypes) {
              return emptyContextObject;
            }
            var context = {};
            for (var key in contextTypes) {
              context[key] = unmaskedContext[key];
            }
            {
              var name = getComponentNameFromType(type) || 'Unknown';
              checkPropTypes(contextTypes, context, 'context', name);
            }
            return context;
          }
        }
        function processChildContext(
          instance,
          type,
          parentContext,
          childContextTypes
        ) {
          {
            if (typeof instance.getChildContext !== 'function') {
              {
                var componentName = getComponentNameFromType(type) || 'Unknown';
                if (!warnedAboutMissingGetChildContext[componentName]) {
                  warnedAboutMissingGetChildContext[componentName] = true;
                  error(
                    '%s.childContextTypes is specified but there is no getChildContext() method on the instance. You can either define getChildContext() on %s or remove childContextTypes from it.',
                    componentName,
                    componentName
                  );
                }
              }
              return parentContext;
            }
            var childContext = instance.getChildContext();
            for (var contextKey in childContext) {
              if (!(contextKey in childContextTypes)) {
                throw new Error(
                  (getComponentNameFromType(type) || 'Unknown') +
                    '.getChildContext(): key "' +
                    contextKey +
                    '" is not defined in childContextTypes.'
                );
              }
            }
            {
              var name = getComponentNameFromType(type) || 'Unknown';
              checkPropTypes(
                childContextTypes,
                childContext,
                'child context',
                name
              );
            }
            return assign({}, parentContext, childContext);
          }
        }
        var rendererSigil;
        {
          rendererSigil = {};
        }
        var rootContextSnapshot = null;
        var currentActiveSnapshot = null;
        function popNode(prev) {
          {
            prev.context._currentValue = prev.parentValue;
          }
        }
        function pushNode(next) {
          {
            next.context._currentValue = next.value;
          }
        }
        function popToNearestCommonAncestor(prev, next) {
          if (prev === next);
          else {
            popNode(prev);
            var parentPrev = prev.parent;
            var parentNext = next.parent;
            if (parentPrev === null) {
              if (parentNext !== null) {
                throw new Error(
                  'The stacks must reach the root at the same time. This is a bug in React.'
                );
              }
            } else {
              if (parentNext === null) {
                throw new Error(
                  'The stacks must reach the root at the same time. This is a bug in React.'
                );
              }
              popToNearestCommonAncestor(parentPrev, parentNext);
            }
            pushNode(next);
          }
        }
        function popAllPrevious(prev) {
          popNode(prev);
          var parentPrev = prev.parent;
          if (parentPrev !== null) {
            popAllPrevious(parentPrev);
          }
        }
        function pushAllNext(next) {
          var parentNext = next.parent;
          if (parentNext !== null) {
            pushAllNext(parentNext);
          }
          pushNode(next);
        }
        function popPreviousToCommonLevel(prev, next) {
          popNode(prev);
          var parentPrev = prev.parent;
          if (parentPrev === null) {
            throw new Error(
              'The depth must equal at least at zero before reaching the root. This is a bug in React.'
            );
          }
          if (parentPrev.depth === next.depth) {
            popToNearestCommonAncestor(parentPrev, next);
          } else {
            popPreviousToCommonLevel(parentPrev, next);
          }
        }
        function popNextToCommonLevel(prev, next) {
          var parentNext = next.parent;
          if (parentNext === null) {
            throw new Error(
              'The depth must equal at least at zero before reaching the root. This is a bug in React.'
            );
          }
          if (prev.depth === parentNext.depth) {
            popToNearestCommonAncestor(prev, parentNext);
          } else {
            popNextToCommonLevel(prev, parentNext);
          }
          pushNode(next);
        }
        function switchContext(newSnapshot) {
          var prev = currentActiveSnapshot;
          var next = newSnapshot;
          if (prev !== next) {
            if (prev === null) {
              pushAllNext(next);
            } else if (next === null) {
              popAllPrevious(prev);
            } else if (prev.depth === next.depth) {
              popToNearestCommonAncestor(prev, next);
            } else if (prev.depth > next.depth) {
              popPreviousToCommonLevel(prev, next);
            } else {
              popNextToCommonLevel(prev, next);
            }
            currentActiveSnapshot = next;
          }
        }
        function pushProvider(context, nextValue) {
          var prevValue;
          {
            prevValue = context._currentValue;
            context._currentValue = nextValue;
            {
              if (
                context._currentRenderer !== void 0 &&
                context._currentRenderer !== null &&
                context._currentRenderer !== rendererSigil
              ) {
                error(
                  'Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.'
                );
              }
              context._currentRenderer = rendererSigil;
            }
          }
          var prevNode = currentActiveSnapshot;
          var newNode = {
            parent: prevNode,
            depth: prevNode === null ? 0 : prevNode.depth + 1,
            context,
            parentValue: prevValue,
            value: nextValue,
          };
          currentActiveSnapshot = newNode;
          return newNode;
        }
        function popProvider(context) {
          var prevSnapshot = currentActiveSnapshot;
          if (prevSnapshot === null) {
            throw new Error(
              'Tried to pop a Context at the root of the app. This is a bug in React.'
            );
          }
          {
            if (prevSnapshot.context !== context) {
              error(
                'The parent context is not the expected context. This is probably a bug in React.'
              );
            }
          }
          {
            var value = prevSnapshot.parentValue;
            if (value === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {
              prevSnapshot.context._currentValue =
                prevSnapshot.context._defaultValue;
            } else {
              prevSnapshot.context._currentValue = value;
            }
            {
              if (
                context._currentRenderer !== void 0 &&
                context._currentRenderer !== null &&
                context._currentRenderer !== rendererSigil
              ) {
                error(
                  'Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.'
                );
              }
              context._currentRenderer = rendererSigil;
            }
          }
          return (currentActiveSnapshot = prevSnapshot.parent);
        }
        function getActiveContext() {
          return currentActiveSnapshot;
        }
        function readContext(context) {
          var value = context._currentValue;
          return value;
        }
        function get2(key) {
          return key._reactInternals;
        }
        function set(key, value) {
          key._reactInternals = value;
        }
        var didWarnAboutNoopUpdateForComponent = {};
        var didWarnAboutDeprecatedWillMount = {};
        var didWarnAboutUninitializedState;
        var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;
        var didWarnAboutLegacyLifecyclesAndDerivedState;
        var didWarnAboutUndefinedDerivedState;
        var warnOnUndefinedDerivedState;
        var warnOnInvalidCallback;
        var didWarnAboutDirectlyAssigningPropsToState;
        var didWarnAboutContextTypeAndContextTypes;
        var didWarnAboutInvalidateContextType;
        {
          didWarnAboutUninitializedState = /* @__PURE__ */ new Set();
          didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate =
            /* @__PURE__ */ new Set();
          didWarnAboutLegacyLifecyclesAndDerivedState =
            /* @__PURE__ */ new Set();
          didWarnAboutDirectlyAssigningPropsToState = /* @__PURE__ */ new Set();
          didWarnAboutUndefinedDerivedState = /* @__PURE__ */ new Set();
          didWarnAboutContextTypeAndContextTypes = /* @__PURE__ */ new Set();
          didWarnAboutInvalidateContextType = /* @__PURE__ */ new Set();
          var didWarnOnInvalidCallback = /* @__PURE__ */ new Set();
          warnOnInvalidCallback = function (callback, callerName) {
            if (callback === null || typeof callback === 'function') {
              return;
            }
            var key = callerName + '_' + callback;
            if (!didWarnOnInvalidCallback.has(key)) {
              didWarnOnInvalidCallback.add(key);
              error(
                '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.',
                callerName,
                callback
              );
            }
          };
          warnOnUndefinedDerivedState = function (type, partialState) {
            if (partialState === void 0) {
              var componentName = getComponentNameFromType(type) || 'Component';
              if (!didWarnAboutUndefinedDerivedState.has(componentName)) {
                didWarnAboutUndefinedDerivedState.add(componentName);
                error(
                  '%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.',
                  componentName
                );
              }
            }
          };
        }
        function warnNoop(publicInstance, callerName) {
          {
            var _constructor = publicInstance.constructor;
            var componentName =
              (_constructor && getComponentNameFromType(_constructor)) ||
              'ReactClass';
            var warningKey = componentName + '.' + callerName;
            if (didWarnAboutNoopUpdateForComponent[warningKey]) {
              return;
            }
            error(
              '%s(...): Can only update a mounting component. This usually means you called %s() outside componentWillMount() on the server. This is a no-op.\n\nPlease check the code for the %s component.',
              callerName,
              callerName,
              componentName
            );
            didWarnAboutNoopUpdateForComponent[warningKey] = true;
          }
        }
        var classComponentUpdater = {
          isMounted: function (inst) {
            return false;
          },
          enqueueSetState: function (inst, payload, callback) {
            var internals = get2(inst);
            if (internals.queue === null) {
              warnNoop(inst, 'setState');
            } else {
              internals.queue.push(payload);
              {
                if (callback !== void 0 && callback !== null) {
                  warnOnInvalidCallback(callback, 'setState');
                }
              }
            }
          },
          enqueueReplaceState: function (inst, payload, callback) {
            var internals = get2(inst);
            internals.replace = true;
            internals.queue = [payload];
            {
              if (callback !== void 0 && callback !== null) {
                warnOnInvalidCallback(callback, 'setState');
              }
            }
          },
          enqueueForceUpdate: function (inst, callback) {
            var internals = get2(inst);
            if (internals.queue === null) {
              warnNoop(inst, 'forceUpdate');
            } else {
              {
                if (callback !== void 0 && callback !== null) {
                  warnOnInvalidCallback(callback, 'setState');
                }
              }
            }
          },
        };
        function applyDerivedStateFromProps(
          instance,
          ctor,
          getDerivedStateFromProps,
          prevState,
          nextProps
        ) {
          var partialState = getDerivedStateFromProps(nextProps, prevState);
          {
            warnOnUndefinedDerivedState(ctor, partialState);
          }
          var newState =
            partialState === null || partialState === void 0
              ? prevState
              : assign({}, prevState, partialState);
          return newState;
        }
        function constructClassInstance(ctor, props, maskedLegacyContext) {
          var context = emptyContextObject;
          var contextType = ctor.contextType;
          {
            if ('contextType' in ctor) {
              var isValid =
                // Allow null for conditional declaration
                contextType === null ||
                (contextType !== void 0 &&
                  contextType.$$typeof === REACT_CONTEXT_TYPE &&
                  contextType._context === void 0);
              if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {
                didWarnAboutInvalidateContextType.add(ctor);
                var addendum = '';
                if (contextType === void 0) {
                  addendum =
                    ' However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file.';
                } else if (typeof contextType !== 'object') {
                  addendum =
                    ' However, it is set to a ' + typeof contextType + '.';
                } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {
                  addendum =
                    ' Did you accidentally pass the Context.Provider instead?';
                } else if (contextType._context !== void 0) {
                  addendum =
                    ' Did you accidentally pass the Context.Consumer instead?';
                } else {
                  addendum =
                    ' However, it is set to an object with keys {' +
                    Object.keys(contextType).join(', ') +
                    '}.';
                }
                error(
                  '%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s',
                  getComponentNameFromType(ctor) || 'Component',
                  addendum
                );
              }
            }
          }
          if (typeof contextType === 'object' && contextType !== null) {
            context = readContext(contextType);
          } else {
            context = maskedLegacyContext;
          }
          var instance = new ctor(props, context);
          {
            if (
              typeof ctor.getDerivedStateFromProps === 'function' &&
              (instance.state === null || instance.state === void 0)
            ) {
              var componentName = getComponentNameFromType(ctor) || 'Component';
              if (!didWarnAboutUninitializedState.has(componentName)) {
                didWarnAboutUninitializedState.add(componentName);
                error(
                  '`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.',
                  componentName,
                  instance.state === null ? 'null' : 'undefined',
                  componentName
                );
              }
            }
            if (
              typeof ctor.getDerivedStateFromProps === 'function' ||
              typeof instance.getSnapshotBeforeUpdate === 'function'
            ) {
              var foundWillMountName = null;
              var foundWillReceivePropsName = null;
              var foundWillUpdateName = null;
              if (
                typeof instance.componentWillMount === 'function' &&
                instance.componentWillMount.__suppressDeprecationWarning !==
                  true
              ) {
                foundWillMountName = 'componentWillMount';
              } else if (
                typeof instance.UNSAFE_componentWillMount === 'function'
              ) {
                foundWillMountName = 'UNSAFE_componentWillMount';
              }
              if (
                typeof instance.componentWillReceiveProps === 'function' &&
                instance.componentWillReceiveProps
                  .__suppressDeprecationWarning !== true
              ) {
                foundWillReceivePropsName = 'componentWillReceiveProps';
              } else if (
                typeof instance.UNSAFE_componentWillReceiveProps === 'function'
              ) {
                foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
              }
              if (
                typeof instance.componentWillUpdate === 'function' &&
                instance.componentWillUpdate.__suppressDeprecationWarning !==
                  true
              ) {
                foundWillUpdateName = 'componentWillUpdate';
              } else if (
                typeof instance.UNSAFE_componentWillUpdate === 'function'
              ) {
                foundWillUpdateName = 'UNSAFE_componentWillUpdate';
              }
              if (
                foundWillMountName !== null ||
                foundWillReceivePropsName !== null ||
                foundWillUpdateName !== null
              ) {
                var _componentName =
                  getComponentNameFromType(ctor) || 'Component';
                var newApiName =
                  typeof ctor.getDerivedStateFromProps === 'function'
                    ? 'getDerivedStateFromProps()'
                    : 'getSnapshotBeforeUpdate()';
                if (
                  !didWarnAboutLegacyLifecyclesAndDerivedState.has(
                    _componentName
                  )
                ) {
                  didWarnAboutLegacyLifecyclesAndDerivedState.add(
                    _componentName
                  );
                  error(
                    'Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://reactjs.org/link/unsafe-component-lifecycles',
                    _componentName,
                    newApiName,
                    foundWillMountName !== null
                      ? '\n  ' + foundWillMountName
                      : '',
                    foundWillReceivePropsName !== null
                      ? '\n  ' + foundWillReceivePropsName
                      : '',
                    foundWillUpdateName !== null
                      ? '\n  ' + foundWillUpdateName
                      : ''
                  );
                }
              }
            }
          }
          return instance;
        }
        function checkClassInstance(instance, ctor, newProps) {
          {
            var name = getComponentNameFromType(ctor) || 'Component';
            var renderPresent = instance.render;
            if (!renderPresent) {
              if (
                ctor.prototype &&
                typeof ctor.prototype.render === 'function'
              ) {
                error(
                  '%s(...): No `render` method found on the returned component instance: did you accidentally return an object from the constructor?',
                  name
                );
              } else {
                error(
                  '%s(...): No `render` method found on the returned component instance: you may have forgotten to define `render`.',
                  name
                );
              }
            }
            if (
              instance.getInitialState &&
              !instance.getInitialState.isReactClassApproved &&
              !instance.state
            ) {
              error(
                'getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?',
                name
              );
            }
            if (
              instance.getDefaultProps &&
              !instance.getDefaultProps.isReactClassApproved
            ) {
              error(
                'getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.',
                name
              );
            }
            if (instance.propTypes) {
              error(
                'propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.',
                name
              );
            }
            if (instance.contextType) {
              error(
                'contextType was defined as an instance property on %s. Use a static property to define contextType instead.',
                name
              );
            }
            {
              if (instance.contextTypes) {
                error(
                  'contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.',
                  name
                );
              }
              if (
                ctor.contextType &&
                ctor.contextTypes &&
                !didWarnAboutContextTypeAndContextTypes.has(ctor)
              ) {
                didWarnAboutContextTypeAndContextTypes.add(ctor);
                error(
                  '%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.',
                  name
                );
              }
            }
            if (typeof instance.componentShouldUpdate === 'function') {
              error(
                '%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.',
                name
              );
            }
            if (
              ctor.prototype &&
              ctor.prototype.isPureReactComponent &&
              typeof instance.shouldComponentUpdate !== 'undefined'
            ) {
              error(
                '%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.',
                getComponentNameFromType(ctor) || 'A pure component'
              );
            }
            if (typeof instance.componentDidUnmount === 'function') {
              error(
                '%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?',
                name
              );
            }
            if (typeof instance.componentDidReceiveProps === 'function') {
              error(
                '%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().',
                name
              );
            }
            if (typeof instance.componentWillRecieveProps === 'function') {
              error(
                '%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',
                name
              );
            }
            if (
              typeof instance.UNSAFE_componentWillRecieveProps === 'function'
            ) {
              error(
                '%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?',
                name
              );
            }
            var hasMutatedProps = instance.props !== newProps;
            if (instance.props !== void 0 && hasMutatedProps) {
              error(
                "%s(...): When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.",
                name,
                name
              );
            }
            if (instance.defaultProps) {
              error(
                'Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.',
                name,
                name
              );
            }
            if (
              typeof instance.getSnapshotBeforeUpdate === 'function' &&
              typeof instance.componentDidUpdate !== 'function' &&
              !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)
            ) {
              didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);
              error(
                '%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.',
                getComponentNameFromType(ctor)
              );
            }
            if (typeof instance.getDerivedStateFromProps === 'function') {
              error(
                '%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.',
                name
              );
            }
            if (typeof instance.getDerivedStateFromError === 'function') {
              error(
                '%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.',
                name
              );
            }
            if (typeof ctor.getSnapshotBeforeUpdate === 'function') {
              error(
                '%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.',
                name
              );
            }
            var _state = instance.state;
            if (_state && (typeof _state !== 'object' || isArray(_state))) {
              error('%s.state: must be set to an object or null', name);
            }
            if (
              typeof instance.getChildContext === 'function' &&
              typeof ctor.childContextTypes !== 'object'
            ) {
              error(
                '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().',
                name
              );
            }
          }
        }
        function callComponentWillMount(type, instance) {
          var oldState = instance.state;
          if (typeof instance.componentWillMount === 'function') {
            {
              if (
                instance.componentWillMount.__suppressDeprecationWarning !==
                true
              ) {
                var componentName = getComponentNameFromType(type) || 'Unknown';
                if (!didWarnAboutDeprecatedWillMount[componentName]) {
                  warn(
                    // keep this warning in sync with ReactStrictModeWarning.js
                    'componentWillMount has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move code from componentWillMount to componentDidMount (preferred in most cases) or the constructor.\n\nPlease update the following components: %s',
                    componentName
                  );
                  didWarnAboutDeprecatedWillMount[componentName] = true;
                }
              }
            }
            instance.componentWillMount();
          }
          if (typeof instance.UNSAFE_componentWillMount === 'function') {
            instance.UNSAFE_componentWillMount();
          }
          if (oldState !== instance.state) {
            {
              error(
                "%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.",
                getComponentNameFromType(type) || 'Component'
              );
            }
            classComponentUpdater.enqueueReplaceState(
              instance,
              instance.state,
              null
            );
          }
        }
        function processUpdateQueue(
          internalInstance,
          inst,
          props,
          maskedLegacyContext
        ) {
          if (
            internalInstance.queue !== null &&
            internalInstance.queue.length > 0
          ) {
            var oldQueue = internalInstance.queue;
            var oldReplace = internalInstance.replace;
            internalInstance.queue = null;
            internalInstance.replace = false;
            if (oldReplace && oldQueue.length === 1) {
              inst.state = oldQueue[0];
            } else {
              var nextState = oldReplace ? oldQueue[0] : inst.state;
              var dontMutate = true;
              for (var i = oldReplace ? 1 : 0; i < oldQueue.length; i++) {
                var partial = oldQueue[i];
                var partialState =
                  typeof partial === 'function'
                    ? partial.call(inst, nextState, props, maskedLegacyContext)
                    : partial;
                if (partialState != null) {
                  if (dontMutate) {
                    dontMutate = false;
                    nextState = assign({}, nextState, partialState);
                  } else {
                    assign(nextState, partialState);
                  }
                }
              }
              inst.state = nextState;
            }
          } else {
            internalInstance.queue = null;
          }
        }
        function mountClassInstance(
          instance,
          ctor,
          newProps,
          maskedLegacyContext
        ) {
          {
            checkClassInstance(instance, ctor, newProps);
          }
          var initialState = instance.state !== void 0 ? instance.state : null;
          instance.updater = classComponentUpdater;
          instance.props = newProps;
          instance.state = initialState;
          var internalInstance = {
            queue: [],
            replace: false,
          };
          set(instance, internalInstance);
          var contextType = ctor.contextType;
          if (typeof contextType === 'object' && contextType !== null) {
            instance.context = readContext(contextType);
          } else {
            instance.context = maskedLegacyContext;
          }
          {
            if (instance.state === newProps) {
              var componentName = getComponentNameFromType(ctor) || 'Component';
              if (
                !didWarnAboutDirectlyAssigningPropsToState.has(componentName)
              ) {
                didWarnAboutDirectlyAssigningPropsToState.add(componentName);
                error(
                  "%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.",
                  componentName
                );
              }
            }
          }
          var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
          if (typeof getDerivedStateFromProps === 'function') {
            instance.state = applyDerivedStateFromProps(
              instance,
              ctor,
              getDerivedStateFromProps,
              initialState,
              newProps
            );
          }
          if (
            typeof ctor.getDerivedStateFromProps !== 'function' &&
            typeof instance.getSnapshotBeforeUpdate !== 'function' &&
            (typeof instance.UNSAFE_componentWillMount === 'function' ||
              typeof instance.componentWillMount === 'function')
          ) {
            callComponentWillMount(ctor, instance);
            processUpdateQueue(
              internalInstance,
              instance,
              newProps,
              maskedLegacyContext
            );
          }
        }
        var emptyTreeContext = {
          id: 1,
          overflow: '',
        };
        function getTreeId(context) {
          var overflow = context.overflow;
          var idWithLeadingBit = context.id;
          var id = idWithLeadingBit & ~getLeadingBit(idWithLeadingBit);
          return id.toString(32) + overflow;
        }
        function pushTreeContext(baseContext, totalChildren, index) {
          var baseIdWithLeadingBit = baseContext.id;
          var baseOverflow = baseContext.overflow;
          var baseLength = getBitLength(baseIdWithLeadingBit) - 1;
          var baseId = baseIdWithLeadingBit & ~(1 << baseLength);
          var slot = index + 1;
          var length = getBitLength(totalChildren) + baseLength;
          if (length > 30) {
            var numberOfOverflowBits = baseLength - (baseLength % 5);
            var newOverflowBits = (1 << numberOfOverflowBits) - 1;
            var newOverflow = (baseId & newOverflowBits).toString(32);
            var restOfBaseId = baseId >> numberOfOverflowBits;
            var restOfBaseLength = baseLength - numberOfOverflowBits;
            var restOfLength = getBitLength(totalChildren) + restOfBaseLength;
            var restOfNewBits = slot << restOfBaseLength;
            var id = restOfNewBits | restOfBaseId;
            var overflow = newOverflow + baseOverflow;
            return {
              id: (1 << restOfLength) | id,
              overflow,
            };
          } else {
            var newBits = slot << baseLength;
            var _id = newBits | baseId;
            var _overflow = baseOverflow;
            return {
              id: (1 << length) | _id,
              overflow: _overflow,
            };
          }
        }
        function getBitLength(number) {
          return 32 - clz32(number);
        }
        function getLeadingBit(id) {
          return 1 << (getBitLength(id) - 1);
        }
        var clz32 = Math.clz32 ? Math.clz32 : clz32Fallback;
        var log2 = Math.log;
        var LN2 = Math.LN2;
        function clz32Fallback(x) {
          var asUint = x >>> 0;
          if (asUint === 0) {
            return 32;
          }
          return (31 - ((log2(asUint) / LN2) | 0)) | 0;
        }
        function is2(x, y) {
          return (
            (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y)
          );
        }
        var objectIs = typeof Object.is === 'function' ? Object.is : is2;
        var currentlyRenderingComponent = null;
        var currentlyRenderingTask = null;
        var firstWorkInProgressHook = null;
        var workInProgressHook = null;
        var isReRender = false;
        var didScheduleRenderPhaseUpdate = false;
        var localIdCounter = 0;
        var renderPhaseUpdates = null;
        var numberOfReRenders = 0;
        var RE_RENDER_LIMIT = 25;
        var isInHookUserCodeInDev = false;
        var currentHookNameInDev;
        function resolveCurrentlyRenderingComponent() {
          if (currentlyRenderingComponent === null) {
            throw new Error(
              'Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.'
            );
          }
          {
            if (isInHookUserCodeInDev) {
              error(
                'Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://reactjs.org/link/rules-of-hooks'
              );
            }
          }
          return currentlyRenderingComponent;
        }
        function areHookInputsEqual(nextDeps, prevDeps) {
          if (prevDeps === null) {
            {
              error(
                '%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.',
                currentHookNameInDev
              );
            }
            return false;
          }
          {
            if (nextDeps.length !== prevDeps.length) {
              error(
                'The final argument passed to %s changed size between renders. The order and size of this array must remain constant.\n\nPrevious: %s\nIncoming: %s',
                currentHookNameInDev,
                '[' + nextDeps.join(', ') + ']',
                '[' + prevDeps.join(', ') + ']'
              );
            }
          }
          for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {
            if (objectIs(nextDeps[i], prevDeps[i])) {
              continue;
            }
            return false;
          }
          return true;
        }
        function createHook() {
          if (numberOfReRenders > 0) {
            throw new Error(
              'Rendered more hooks than during the previous render'
            );
          }
          return {
            memoizedState: null,
            queue: null,
            next: null,
          };
        }
        function createWorkInProgressHook() {
          if (workInProgressHook === null) {
            if (firstWorkInProgressHook === null) {
              isReRender = false;
              firstWorkInProgressHook = workInProgressHook = createHook();
            } else {
              isReRender = true;
              workInProgressHook = firstWorkInProgressHook;
            }
          } else {
            if (workInProgressHook.next === null) {
              isReRender = false;
              workInProgressHook = workInProgressHook.next = createHook();
            } else {
              isReRender = true;
              workInProgressHook = workInProgressHook.next;
            }
          }
          return workInProgressHook;
        }
        function prepareToUseHooks(task, componentIdentity) {
          currentlyRenderingComponent = componentIdentity;
          currentlyRenderingTask = task;
          {
            isInHookUserCodeInDev = false;
          }
          localIdCounter = 0;
        }
        function finishHooks(Component, props, children, refOrContext) {
          while (didScheduleRenderPhaseUpdate) {
            didScheduleRenderPhaseUpdate = false;
            localIdCounter = 0;
            numberOfReRenders += 1;
            workInProgressHook = null;
            children = Component(props, refOrContext);
          }
          resetHooksState();
          return children;
        }
        function checkDidRenderIdHook() {
          var didRenderIdHook = localIdCounter !== 0;
          return didRenderIdHook;
        }
        function resetHooksState() {
          {
            isInHookUserCodeInDev = false;
          }
          currentlyRenderingComponent = null;
          currentlyRenderingTask = null;
          didScheduleRenderPhaseUpdate = false;
          firstWorkInProgressHook = null;
          numberOfReRenders = 0;
          renderPhaseUpdates = null;
          workInProgressHook = null;
        }
        function readContext$1(context) {
          {
            if (isInHookUserCodeInDev) {
              error(
                'Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().'
              );
            }
          }
          return readContext(context);
        }
        function useContext(context) {
          {
            currentHookNameInDev = 'useContext';
          }
          resolveCurrentlyRenderingComponent();
          return readContext(context);
        }
        function basicStateReducer(state, action) {
          return typeof action === 'function' ? action(state) : action;
        }
        function useState(initialState) {
          {
            currentHookNameInDev = 'useState';
          }
          return useReducer(
            basicStateReducer,
            // useReducer has a special case to support lazy useState initializers
            initialState
          );
        }
        function useReducer(reducer, initialArg, init) {
          {
            if (reducer !== basicStateReducer) {
              currentHookNameInDev = 'useReducer';
            }
          }
          currentlyRenderingComponent = resolveCurrentlyRenderingComponent();
          workInProgressHook = createWorkInProgressHook();
          if (isReRender) {
            var queue = workInProgressHook.queue;
            var dispatch = queue.dispatch;
            if (renderPhaseUpdates !== null) {
              var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);
              if (firstRenderPhaseUpdate !== void 0) {
                renderPhaseUpdates.delete(queue);
                var newState = workInProgressHook.memoizedState;
                var update = firstRenderPhaseUpdate;
                do {
                  var action = update.action;
                  {
                    isInHookUserCodeInDev = true;
                  }
                  newState = reducer(newState, action);
                  {
                    isInHookUserCodeInDev = false;
                  }
                  update = update.next;
                } while (update !== null);
                workInProgressHook.memoizedState = newState;
                return [newState, dispatch];
              }
            }
            return [workInProgressHook.memoizedState, dispatch];
          } else {
            {
              isInHookUserCodeInDev = true;
            }
            var initialState;
            if (reducer === basicStateReducer) {
              initialState =
                typeof initialArg === 'function' ? initialArg() : initialArg;
            } else {
              initialState = init !== void 0 ? init(initialArg) : initialArg;
            }
            {
              isInHookUserCodeInDev = false;
            }
            workInProgressHook.memoizedState = initialState;
            var _queue = (workInProgressHook.queue = {
              last: null,
              dispatch: null,
            });
            var _dispatch = (_queue.dispatch = dispatchAction.bind(
              null,
              currentlyRenderingComponent,
              _queue
            ));
            return [workInProgressHook.memoizedState, _dispatch];
          }
        }
        function useMemo(nextCreate, deps) {
          currentlyRenderingComponent = resolveCurrentlyRenderingComponent();
          workInProgressHook = createWorkInProgressHook();
          var nextDeps = deps === void 0 ? null : deps;
          if (workInProgressHook !== null) {
            var prevState = workInProgressHook.memoizedState;
            if (prevState !== null) {
              if (nextDeps !== null) {
                var prevDeps = prevState[1];
                if (areHookInputsEqual(nextDeps, prevDeps)) {
                  return prevState[0];
                }
              }
            }
          }
          {
            isInHookUserCodeInDev = true;
          }
          var nextValue = nextCreate();
          {
            isInHookUserCodeInDev = false;
          }
          workInProgressHook.memoizedState = [nextValue, nextDeps];
          return nextValue;
        }
        function useRef(initialValue) {
          currentlyRenderingComponent = resolveCurrentlyRenderingComponent();
          workInProgressHook = createWorkInProgressHook();
          var previousRef = workInProgressHook.memoizedState;
          if (previousRef === null) {
            var ref = {
              current: initialValue,
            };
            {
              Object.seal(ref);
            }
            workInProgressHook.memoizedState = ref;
            return ref;
          } else {
            return previousRef;
          }
        }
        function useLayoutEffect(create, inputs) {
          {
            currentHookNameInDev = 'useLayoutEffect';
            error(
              "useLayoutEffect does nothing on the server, because its effect cannot be encoded into the server renderer's output format. This will lead to a mismatch between the initial, non-hydrated UI and the intended UI. To avoid this, useLayoutEffect should only be used in components that render exclusively on the client. See https://reactjs.org/link/uselayouteffect-ssr for common fixes."
            );
          }
        }
        function dispatchAction(componentIdentity, queue, action) {
          if (numberOfReRenders >= RE_RENDER_LIMIT) {
            throw new Error(
              'Too many re-renders. React limits the number of renders to prevent an infinite loop.'
            );
          }
          if (componentIdentity === currentlyRenderingComponent) {
            didScheduleRenderPhaseUpdate = true;
            var update = {
              action,
              next: null,
            };
            if (renderPhaseUpdates === null) {
              renderPhaseUpdates = /* @__PURE__ */ new Map();
            }
            var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);
            if (firstRenderPhaseUpdate === void 0) {
              renderPhaseUpdates.set(queue, update);
            } else {
              var lastRenderPhaseUpdate = firstRenderPhaseUpdate;
              while (lastRenderPhaseUpdate.next !== null) {
                lastRenderPhaseUpdate = lastRenderPhaseUpdate.next;
              }
              lastRenderPhaseUpdate.next = update;
            }
          }
        }
        function useCallback(callback, deps) {
          return useMemo(function () {
            return callback;
          }, deps);
        }
        function useMutableSource(source, getSnapshot, subscribe) {
          resolveCurrentlyRenderingComponent();
          return getSnapshot(source._source);
        }
        function useSyncExternalStore(
          subscribe,
          getSnapshot,
          getServerSnapshot
        ) {
          if (getServerSnapshot === void 0) {
            throw new Error(
              'Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.'
            );
          }
          return getServerSnapshot();
        }
        function useDeferredValue(value) {
          resolveCurrentlyRenderingComponent();
          return value;
        }
        function unsupportedStartTransition() {
          throw new Error(
            'startTransition cannot be called during server rendering.'
          );
        }
        function useTransition() {
          resolveCurrentlyRenderingComponent();
          return [false, unsupportedStartTransition];
        }
        function useId() {
          var task = currentlyRenderingTask;
          var treeId = getTreeId(task.treeContext);
          var responseState = currentResponseState;
          if (responseState === null) {
            throw new Error(
              'Invalid hook call. Hooks can only be called inside of the body of a function component.'
            );
          }
          var localId = localIdCounter++;
          return makeId(responseState, treeId, localId);
        }
        function noop() {}
        var Dispatcher = {
          readContext: readContext$1,
          useContext,
          useMemo,
          useReducer,
          useRef,
          useState,
          useInsertionEffect: noop,
          useLayoutEffect,
          useCallback,
          // useImperativeHandle is not run in the server environment
          useImperativeHandle: noop,
          // Effects are not run in the server environment.
          useEffect: noop,
          // Debugging effect
          useDebugValue: noop,
          useDeferredValue,
          useTransition,
          useId,
          // Subscriptions are not setup in a server environment.
          useMutableSource,
          useSyncExternalStore,
        };
        var currentResponseState = null;
        function setCurrentResponseState(responseState) {
          currentResponseState = responseState;
        }
        function getStackByComponentStackNode(componentStack) {
          try {
            var info = '';
            var node = componentStack;
            do {
              switch (node.tag) {
                case 0:
                  info += describeBuiltInComponentFrame(node.type, null, null);
                  break;
                case 1:
                  info += describeFunctionComponentFrame(node.type, null, null);
                  break;
                case 2:
                  info += describeClassComponentFrame(node.type, null, null);
                  break;
              }
              node = node.parent;
            } while (node);
            return info;
          } catch (x) {
            return '\nError generating stack: ' + x.message + '\n' + x.stack;
          }
        }
        var ReactCurrentDispatcher$1 =
          ReactSharedInternals.ReactCurrentDispatcher;
        var ReactDebugCurrentFrame$1 =
          ReactSharedInternals.ReactDebugCurrentFrame;
        var PENDING = 0;
        var COMPLETED = 1;
        var FLUSHED = 2;
        var ABORTED = 3;
        var ERRORED = 4;
        var OPEN = 0;
        var CLOSING = 1;
        var CLOSED = 2;
        var DEFAULT_PROGRESSIVE_CHUNK_SIZE = 12800;
        function defaultErrorHandler(error2) {
          console['error'](error2);
          return null;
        }
        function noop$1() {}
        function createRequest(
          children,
          responseState,
          rootFormatContext,
          progressiveChunkSize,
          onError,
          onAllReady,
          onShellReady,
          onShellError,
          onFatalError
        ) {
          var pingedTasks = [];
          var abortSet = /* @__PURE__ */ new Set();
          var request2 = {
            destination: null,
            responseState,
            progressiveChunkSize:
              progressiveChunkSize === void 0
                ? DEFAULT_PROGRESSIVE_CHUNK_SIZE
                : progressiveChunkSize,
            status: OPEN,
            fatalError: null,
            nextSegmentId: 0,
            allPendingTasks: 0,
            pendingRootTasks: 0,
            completedRootSegment: null,
            abortableTasks: abortSet,
            pingedTasks,
            clientRenderedBoundaries: [],
            completedBoundaries: [],
            partialBoundaries: [],
            onError: onError === void 0 ? defaultErrorHandler : onError,
            onAllReady: onAllReady === void 0 ? noop$1 : onAllReady,
            onShellReady: onShellReady === void 0 ? noop$1 : onShellReady,
            onShellError: onShellError === void 0 ? noop$1 : onShellError,
            onFatalError: onFatalError === void 0 ? noop$1 : onFatalError,
          };
          var rootSegment = createPendingSegment(
            request2,
            0,
            null,
            rootFormatContext,
            // Root segments are never embedded in Text on either edge
            false,
            false
          );
          rootSegment.parentFlushed = true;
          var rootTask = createTask(
            request2,
            children,
            null,
            rootSegment,
            abortSet,
            emptyContextObject,
            rootContextSnapshot,
            emptyTreeContext
          );
          pingedTasks.push(rootTask);
          return request2;
        }
        function pingTask(request2, task) {
          var pingedTasks = request2.pingedTasks;
          pingedTasks.push(task);
          if (pingedTasks.length === 1) {
            scheduleWork(function () {
              return performWork(request2);
            });
          }
        }
        function createSuspenseBoundary(request2, fallbackAbortableTasks) {
          return {
            id: UNINITIALIZED_SUSPENSE_BOUNDARY_ID,
            rootSegmentID: -1,
            parentFlushed: false,
            pendingTasks: 0,
            forceClientRender: false,
            completedSegments: [],
            byteSize: 0,
            fallbackAbortableTasks,
            errorDigest: null,
          };
        }
        function createTask(
          request2,
          node,
          blockedBoundary,
          blockedSegment,
          abortSet,
          legacyContext,
          context,
          treeContext
        ) {
          request2.allPendingTasks++;
          if (blockedBoundary === null) {
            request2.pendingRootTasks++;
          } else {
            blockedBoundary.pendingTasks++;
          }
          var task = {
            node,
            ping: function () {
              return pingTask(request2, task);
            },
            blockedBoundary,
            blockedSegment,
            abortSet,
            legacyContext,
            context,
            treeContext,
          };
          {
            task.componentStack = null;
          }
          abortSet.add(task);
          return task;
        }
        function createPendingSegment(
          request2,
          index,
          boundary,
          formatContext,
          lastPushedText,
          textEmbedded
        ) {
          return {
            status: PENDING,
            id: -1,
            // lazily assigned later
            index,
            parentFlushed: false,
            chunks: [],
            children: [],
            formatContext,
            boundary,
            lastPushedText,
            textEmbedded,
          };
        }
        var currentTaskInDEV = null;
        function getCurrentStackInDEV() {
          {
            if (
              currentTaskInDEV === null ||
              currentTaskInDEV.componentStack === null
            ) {
              return '';
            }
            return getStackByComponentStackNode(
              currentTaskInDEV.componentStack
            );
          }
        }
        function pushBuiltInComponentStackInDEV(task, type) {
          {
            task.componentStack = {
              tag: 0,
              parent: task.componentStack,
              type,
            };
          }
        }
        function pushFunctionComponentStackInDEV(task, type) {
          {
            task.componentStack = {
              tag: 1,
              parent: task.componentStack,
              type,
            };
          }
        }
        function pushClassComponentStackInDEV(task, type) {
          {
            task.componentStack = {
              tag: 2,
              parent: task.componentStack,
              type,
            };
          }
        }
        function popComponentStackInDEV(task) {
          {
            if (task.componentStack === null) {
              error(
                'Unexpectedly popped too many stack frames. This is a bug in React.'
              );
            } else {
              task.componentStack = task.componentStack.parent;
            }
          }
        }
        var lastBoundaryErrorComponentStackDev = null;
        function captureBoundaryErrorDetailsDev(boundary, error2) {
          {
            var errorMessage;
            if (typeof error2 === 'string') {
              errorMessage = error2;
            } else if (error2 && typeof error2.message === 'string') {
              errorMessage = error2.message;
            } else {
              errorMessage = String(error2);
            }
            var errorComponentStack =
              lastBoundaryErrorComponentStackDev || getCurrentStackInDEV();
            lastBoundaryErrorComponentStackDev = null;
            boundary.errorMessage = errorMessage;
            boundary.errorComponentStack = errorComponentStack;
          }
        }
        function logRecoverableError(request2, error2) {
          var errorDigest = request2.onError(error2);
          if (errorDigest != null && typeof errorDigest !== 'string') {
            throw new Error(
              'onError returned something with a type other than "string". onError should return a string and may return null or undefined but must not return anything else. It received something of type "' +
                typeof errorDigest +
                '" instead'
            );
          }
          return errorDigest;
        }
        function fatalError(request2, error2) {
          var onShellError = request2.onShellError;
          onShellError(error2);
          var onFatalError = request2.onFatalError;
          onFatalError(error2);
          if (request2.destination !== null) {
            request2.status = CLOSED;
            closeWithError(request2.destination, error2);
          } else {
            request2.status = CLOSING;
            request2.fatalError = error2;
          }
        }
        function renderSuspenseBoundary(request2, task, props) {
          pushBuiltInComponentStackInDEV(task, 'Suspense');
          var parentBoundary = task.blockedBoundary;
          var parentSegment = task.blockedSegment;
          var fallback = props.fallback;
          var content = props.children;
          var fallbackAbortSet = /* @__PURE__ */ new Set();
          var newBoundary = createSuspenseBoundary(request2, fallbackAbortSet);
          var insertionIndex = parentSegment.chunks.length;
          var boundarySegment = createPendingSegment(
            request2,
            insertionIndex,
            newBoundary,
            parentSegment.formatContext,
            // boundaries never require text embedding at their edges because comment nodes bound them
            false,
            false
          );
          parentSegment.children.push(boundarySegment);
          parentSegment.lastPushedText = false;
          var contentRootSegment = createPendingSegment(
            request2,
            0,
            null,
            parentSegment.formatContext,
            // boundaries never require text embedding at their edges because comment nodes bound them
            false,
            false
          );
          contentRootSegment.parentFlushed = true;
          task.blockedBoundary = newBoundary;
          task.blockedSegment = contentRootSegment;
          try {
            renderNode2(request2, task, content);
            pushSegmentFinale(
              contentRootSegment.chunks,
              request2.responseState,
              contentRootSegment.lastPushedText,
              contentRootSegment.textEmbedded
            );
            contentRootSegment.status = COMPLETED;
            queueCompletedSegment(newBoundary, contentRootSegment);
            if (newBoundary.pendingTasks === 0) {
              popComponentStackInDEV(task);
              return;
            }
          } catch (error2) {
            contentRootSegment.status = ERRORED;
            newBoundary.forceClientRender = true;
            newBoundary.errorDigest = logRecoverableError(request2, error2);
            {
              captureBoundaryErrorDetailsDev(newBoundary, error2);
            }
          } finally {
            task.blockedBoundary = parentBoundary;
            task.blockedSegment = parentSegment;
          }
          var suspendedFallbackTask = createTask(
            request2,
            fallback,
            parentBoundary,
            boundarySegment,
            fallbackAbortSet,
            task.legacyContext,
            task.context,
            task.treeContext
          );
          {
            suspendedFallbackTask.componentStack = task.componentStack;
          }
          request2.pingedTasks.push(suspendedFallbackTask);
          popComponentStackInDEV(task);
        }
        function renderHostElement(request2, task, type, props) {
          pushBuiltInComponentStackInDEV(task, type);
          var segment = task.blockedSegment;
          var children = pushStartInstance(
            segment.chunks,
            type,
            props,
            request2.responseState,
            segment.formatContext
          );
          segment.lastPushedText = false;
          var prevContext = segment.formatContext;
          segment.formatContext = getChildFormatContext(
            prevContext,
            type,
            props
          );
          renderNode2(request2, task, children);
          segment.formatContext = prevContext;
          pushEndInstance(segment.chunks, type);
          segment.lastPushedText = false;
          popComponentStackInDEV(task);
        }
        function shouldConstruct$1(Component) {
          return Component.prototype && Component.prototype.isReactComponent;
        }
        function renderWithHooks(request2, task, Component, props, secondArg) {
          var componentIdentity = {};
          prepareToUseHooks(task, componentIdentity);
          var result = Component(props, secondArg);
          return finishHooks(Component, props, result, secondArg);
        }
        function finishClassComponent(
          request2,
          task,
          instance,
          Component,
          props
        ) {
          var nextChildren = instance.render();
          {
            if (instance.props !== props) {
              if (!didWarnAboutReassigningProps) {
                error(
                  'It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.',
                  getComponentNameFromType(Component) || 'a component'
                );
              }
              didWarnAboutReassigningProps = true;
            }
          }
          {
            var childContextTypes = Component.childContextTypes;
            if (childContextTypes !== null && childContextTypes !== void 0) {
              var previousContext = task.legacyContext;
              var mergedContext = processChildContext(
                instance,
                Component,
                previousContext,
                childContextTypes
              );
              task.legacyContext = mergedContext;
              renderNodeDestructive(request2, task, nextChildren);
              task.legacyContext = previousContext;
              return;
            }
          }
          renderNodeDestructive(request2, task, nextChildren);
        }
        function renderClassComponent(request2, task, Component, props) {
          pushClassComponentStackInDEV(task, Component);
          var maskedContext = getMaskedContext(Component, task.legacyContext);
          var instance = constructClassInstance(
            Component,
            props,
            maskedContext
          );
          mountClassInstance(instance, Component, props, maskedContext);
          finishClassComponent(request2, task, instance, Component, props);
          popComponentStackInDEV(task);
        }
        var didWarnAboutBadClass = {};
        var didWarnAboutModulePatternComponent = {};
        var didWarnAboutContextTypeOnFunctionComponent = {};
        var didWarnAboutGetDerivedStateOnFunctionComponent = {};
        var didWarnAboutReassigningProps = false;
        var didWarnAboutGenerators = false;
        var didWarnAboutMaps = false;
        var hasWarnedAboutUsingContextAsConsumer = false;
        function renderIndeterminateComponent(
          request2,
          task,
          Component,
          props
        ) {
          var legacyContext;
          {
            legacyContext = getMaskedContext(Component, task.legacyContext);
          }
          pushFunctionComponentStackInDEV(task, Component);
          {
            if (
              Component.prototype &&
              typeof Component.prototype.render === 'function'
            ) {
              var componentName =
                getComponentNameFromType(Component) || 'Unknown';
              if (!didWarnAboutBadClass[componentName]) {
                error(
                  "The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.",
                  componentName,
                  componentName
                );
                didWarnAboutBadClass[componentName] = true;
              }
            }
          }
          var value = renderWithHooks(
            request2,
            task,
            Component,
            props,
            legacyContext
          );
          var hasId = checkDidRenderIdHook();
          {
            if (
              typeof value === 'object' &&
              value !== null &&
              typeof value.render === 'function' &&
              value.$$typeof === void 0
            ) {
              var _componentName =
                getComponentNameFromType(Component) || 'Unknown';
              if (!didWarnAboutModulePatternComponent[_componentName]) {
                error(
                  "The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.",
                  _componentName,
                  _componentName,
                  _componentName
                );
                didWarnAboutModulePatternComponent[_componentName] = true;
              }
            }
          }
          if (
            // Run these checks in production only if the flag is off.
            // Eventually we'll delete this branch altogether.
            typeof value === 'object' &&
            value !== null &&
            typeof value.render === 'function' &&
            value.$$typeof === void 0
          ) {
            {
              var _componentName2 =
                getComponentNameFromType(Component) || 'Unknown';
              if (!didWarnAboutModulePatternComponent[_componentName2]) {
                error(
                  "The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.",
                  _componentName2,
                  _componentName2,
                  _componentName2
                );
                didWarnAboutModulePatternComponent[_componentName2] = true;
              }
            }
            mountClassInstance(value, Component, props, legacyContext);
            finishClassComponent(request2, task, value, Component, props);
          } else {
            {
              validateFunctionComponentInDev(Component);
            }
            if (hasId) {
              var prevTreeContext = task.treeContext;
              var totalChildren = 1;
              var index = 0;
              task.treeContext = pushTreeContext(
                prevTreeContext,
                totalChildren,
                index
              );
              try {
                renderNodeDestructive(request2, task, value);
              } finally {
                task.treeContext = prevTreeContext;
              }
            } else {
              renderNodeDestructive(request2, task, value);
            }
          }
          popComponentStackInDEV(task);
        }
        function validateFunctionComponentInDev(Component) {
          {
            if (Component) {
              if (Component.childContextTypes) {
                error(
                  '%s(...): childContextTypes cannot be defined on a function component.',
                  Component.displayName || Component.name || 'Component'
                );
              }
            }
            if (typeof Component.getDerivedStateFromProps === 'function') {
              var _componentName3 =
                getComponentNameFromType(Component) || 'Unknown';
              if (
                !didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]
              ) {
                error(
                  '%s: Function components do not support getDerivedStateFromProps.',
                  _componentName3
                );
                didWarnAboutGetDerivedStateOnFunctionComponent[
                  _componentName3
                ] = true;
              }
            }
            if (
              typeof Component.contextType === 'object' &&
              Component.contextType !== null
            ) {
              var _componentName4 =
                getComponentNameFromType(Component) || 'Unknown';
              if (
                !didWarnAboutContextTypeOnFunctionComponent[_componentName4]
              ) {
                error(
                  '%s: Function components do not support contextType.',
                  _componentName4
                );
                didWarnAboutContextTypeOnFunctionComponent[
                  _componentName4
                ] = true;
              }
            }
          }
        }
        function resolveDefaultProps(Component, baseProps) {
          if (Component && Component.defaultProps) {
            var props = assign({}, baseProps);
            var defaultProps = Component.defaultProps;
            for (var propName in defaultProps) {
              if (props[propName] === void 0) {
                props[propName] = defaultProps[propName];
              }
            }
            return props;
          }
          return baseProps;
        }
        function renderForwardRef(request2, task, type, props, ref) {
          pushFunctionComponentStackInDEV(task, type.render);
          var children = renderWithHooks(
            request2,
            task,
            type.render,
            props,
            ref
          );
          var hasId = checkDidRenderIdHook();
          if (hasId) {
            var prevTreeContext = task.treeContext;
            var totalChildren = 1;
            var index = 0;
            task.treeContext = pushTreeContext(
              prevTreeContext,
              totalChildren,
              index
            );
            try {
              renderNodeDestructive(request2, task, children);
            } finally {
              task.treeContext = prevTreeContext;
            }
          } else {
            renderNodeDestructive(request2, task, children);
          }
          popComponentStackInDEV(task);
        }
        function renderMemo(request2, task, type, props, ref) {
          var innerType = type.type;
          var resolvedProps = resolveDefaultProps(innerType, props);
          renderElement(request2, task, innerType, resolvedProps, ref);
        }
        function renderContextConsumer(request2, task, context, props) {
          {
            if (context._context === void 0) {
              if (context !== context.Consumer) {
                if (!hasWarnedAboutUsingContextAsConsumer) {
                  hasWarnedAboutUsingContextAsConsumer = true;
                  error(
                    'Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?'
                  );
                }
              }
            } else {
              context = context._context;
            }
          }
          var render3 = props.children;
          {
            if (typeof render3 !== 'function') {
              error(
                "A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it."
              );
            }
          }
          var newValue = readContext(context);
          var newChildren = render3(newValue);
          renderNodeDestructive(request2, task, newChildren);
        }
        function renderContextProvider(request2, task, type, props) {
          var context = type._context;
          var value = props.value;
          var children = props.children;
          var prevSnapshot;
          {
            prevSnapshot = task.context;
          }
          task.context = pushProvider(context, value);
          renderNodeDestructive(request2, task, children);
          task.context = popProvider(context);
          {
            if (prevSnapshot !== task.context) {
              error(
                'Popping the context provider did not return back to the original snapshot. This is a bug in React.'
              );
            }
          }
        }
        function renderLazyComponent(
          request2,
          task,
          lazyComponent,
          props,
          ref
        ) {
          pushBuiltInComponentStackInDEV(task, 'Lazy');
          var payload = lazyComponent._payload;
          var init = lazyComponent._init;
          var Component = init(payload);
          var resolvedProps = resolveDefaultProps(Component, props);
          renderElement(request2, task, Component, resolvedProps, ref);
          popComponentStackInDEV(task);
        }
        function renderElement(request2, task, type, props, ref) {
          if (typeof type === 'function') {
            if (shouldConstruct$1(type)) {
              renderClassComponent(request2, task, type, props);
              return;
            } else {
              renderIndeterminateComponent(request2, task, type, props);
              return;
            }
          }
          if (typeof type === 'string') {
            renderHostElement(request2, task, type, props);
            return;
          }
          switch (type) {
            case REACT_LEGACY_HIDDEN_TYPE:
            case REACT_DEBUG_TRACING_MODE_TYPE:
            case REACT_STRICT_MODE_TYPE:
            case REACT_PROFILER_TYPE:
            case REACT_FRAGMENT_TYPE: {
              renderNodeDestructive(request2, task, props.children);
              return;
            }
            case REACT_SUSPENSE_LIST_TYPE: {
              pushBuiltInComponentStackInDEV(task, 'SuspenseList');
              renderNodeDestructive(request2, task, props.children);
              popComponentStackInDEV(task);
              return;
            }
            case REACT_SCOPE_TYPE: {
              throw new Error(
                'ReactDOMServer does not yet support scope components.'
              );
            }
            case REACT_SUSPENSE_TYPE: {
              {
                renderSuspenseBoundary(request2, task, props);
              }
              return;
            }
          }
          if (typeof type === 'object' && type !== null) {
            switch (type.$$typeof) {
              case REACT_FORWARD_REF_TYPE: {
                renderForwardRef(request2, task, type, props, ref);
                return;
              }
              case REACT_MEMO_TYPE: {
                renderMemo(request2, task, type, props, ref);
                return;
              }
              case REACT_PROVIDER_TYPE: {
                renderContextProvider(request2, task, type, props);
                return;
              }
              case REACT_CONTEXT_TYPE: {
                renderContextConsumer(request2, task, type, props);
                return;
              }
              case REACT_LAZY_TYPE: {
                renderLazyComponent(request2, task, type, props);
                return;
              }
            }
          }
          var info = '';
          {
            if (
              type === void 0 ||
              (typeof type === 'object' &&
                type !== null &&
                Object.keys(type).length === 0)
            ) {
              info +=
                " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
            }
          }
          throw new Error(
            'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) ' +
              ('but got: ' + (type == null ? type : typeof type) + '.' + info)
          );
        }
        function validateIterable(iterable, iteratorFn) {
          {
            if (
              typeof Symbol === 'function' && // $FlowFixMe Flow doesn't know about toStringTag
              iterable[Symbol.toStringTag] === 'Generator'
            ) {
              if (!didWarnAboutGenerators) {
                error(
                  'Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. Keep in mind you might need to polyfill these features for older browsers.'
                );
              }
              didWarnAboutGenerators = true;
            }
            if (iterable.entries === iteratorFn) {
              if (!didWarnAboutMaps) {
                error(
                  'Using Maps as children is not supported. Use an array of keyed ReactElements instead.'
                );
              }
              didWarnAboutMaps = true;
            }
          }
        }
        function renderNodeDestructive(request2, task, node) {
          {
            try {
              return renderNodeDestructiveImpl(request2, task, node);
            } catch (x) {
              if (
                typeof x === 'object' &&
                x !== null &&
                typeof x.then === 'function'
              );
              else {
                lastBoundaryErrorComponentStackDev =
                  lastBoundaryErrorComponentStackDev !== null
                    ? lastBoundaryErrorComponentStackDev
                    : getCurrentStackInDEV();
              }
              throw x;
            }
          }
        }
        function renderNodeDestructiveImpl(request2, task, node) {
          task.node = node;
          if (typeof node === 'object' && node !== null) {
            switch (node.$$typeof) {
              case REACT_ELEMENT_TYPE: {
                var element = node;
                var type = element.type;
                var props = element.props;
                var ref = element.ref;
                renderElement(request2, task, type, props, ref);
                return;
              }
              case REACT_PORTAL_TYPE:
                throw new Error(
                  'Portals are not currently supported by the server renderer. Render them conditionally so that they only appear on the client render.'
                );
              case REACT_LAZY_TYPE: {
                var lazyNode = node;
                var payload = lazyNode._payload;
                var init = lazyNode._init;
                var resolvedNode;
                {
                  try {
                    resolvedNode = init(payload);
                  } catch (x) {
                    if (
                      typeof x === 'object' &&
                      x !== null &&
                      typeof x.then === 'function'
                    ) {
                      pushBuiltInComponentStackInDEV(task, 'Lazy');
                    }
                    throw x;
                  }
                }
                renderNodeDestructive(request2, task, resolvedNode);
                return;
              }
            }
            if (isArray(node)) {
              renderChildrenArray(request2, task, node);
              return;
            }
            var iteratorFn = getIteratorFn(node);
            if (iteratorFn) {
              {
                validateIterable(node, iteratorFn);
              }
              var iterator = iteratorFn.call(node);
              if (iterator) {
                var step = iterator.next();
                if (!step.done) {
                  var children = [];
                  do {
                    children.push(step.value);
                    step = iterator.next();
                  } while (!step.done);
                  renderChildrenArray(request2, task, children);
                  return;
                }
                return;
              }
            }
            var childString = Object.prototype.toString.call(node);
            throw new Error(
              'Objects are not valid as a React child (found: ' +
                (childString === '[object Object]'
                  ? 'object with keys {' + Object.keys(node).join(', ') + '}'
                  : childString) +
                '). If you meant to render a collection of children, use an array instead.'
            );
          }
          if (typeof node === 'string') {
            var segment = task.blockedSegment;
            segment.lastPushedText = pushTextInstance(
              task.blockedSegment.chunks,
              node,
              request2.responseState,
              segment.lastPushedText
            );
            return;
          }
          if (typeof node === 'number') {
            var _segment = task.blockedSegment;
            _segment.lastPushedText = pushTextInstance(
              task.blockedSegment.chunks,
              '' + node,
              request2.responseState,
              _segment.lastPushedText
            );
            return;
          }
          {
            if (typeof node === 'function') {
              error(
                'Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.'
              );
            }
          }
        }
        function renderChildrenArray(request2, task, children) {
          var totalChildren = children.length;
          for (var i = 0; i < totalChildren; i++) {
            var prevTreeContext = task.treeContext;
            task.treeContext = pushTreeContext(
              prevTreeContext,
              totalChildren,
              i
            );
            try {
              renderNode2(request2, task, children[i]);
            } finally {
              task.treeContext = prevTreeContext;
            }
          }
        }
        function spawnNewSuspendedTask(request2, task, x) {
          var segment = task.blockedSegment;
          var insertionIndex = segment.chunks.length;
          var newSegment = createPendingSegment(
            request2,
            insertionIndex,
            null,
            segment.formatContext,
            // Adopt the parent segment's leading text embed
            segment.lastPushedText,
            // Assume we are text embedded at the trailing edge
            true
          );
          segment.children.push(newSegment);
          segment.lastPushedText = false;
          var newTask = createTask(
            request2,
            task.node,
            task.blockedBoundary,
            newSegment,
            task.abortSet,
            task.legacyContext,
            task.context,
            task.treeContext
          );
          {
            if (task.componentStack !== null) {
              newTask.componentStack = task.componentStack.parent;
            }
          }
          var ping = newTask.ping;
          x.then(ping, ping);
        }
        function renderNode2(request2, task, node) {
          var previousFormatContext = task.blockedSegment.formatContext;
          var previousLegacyContext = task.legacyContext;
          var previousContext = task.context;
          var previousComponentStack = null;
          {
            previousComponentStack = task.componentStack;
          }
          try {
            return renderNodeDestructive(request2, task, node);
          } catch (x) {
            resetHooksState();
            if (
              typeof x === 'object' &&
              x !== null &&
              typeof x.then === 'function'
            ) {
              spawnNewSuspendedTask(request2, task, x);
              task.blockedSegment.formatContext = previousFormatContext;
              task.legacyContext = previousLegacyContext;
              task.context = previousContext;
              switchContext(previousContext);
              {
                task.componentStack = previousComponentStack;
              }
              return;
            } else {
              task.blockedSegment.formatContext = previousFormatContext;
              task.legacyContext = previousLegacyContext;
              task.context = previousContext;
              switchContext(previousContext);
              {
                task.componentStack = previousComponentStack;
              }
              throw x;
            }
          }
        }
        function erroredTask(request2, boundary, segment, error2) {
          var errorDigest = logRecoverableError(request2, error2);
          if (boundary === null) {
            fatalError(request2, error2);
          } else {
            boundary.pendingTasks--;
            if (!boundary.forceClientRender) {
              boundary.forceClientRender = true;
              boundary.errorDigest = errorDigest;
              {
                captureBoundaryErrorDetailsDev(boundary, error2);
              }
              if (boundary.parentFlushed) {
                request2.clientRenderedBoundaries.push(boundary);
              }
            }
          }
          request2.allPendingTasks--;
          if (request2.allPendingTasks === 0) {
            var onAllReady = request2.onAllReady;
            onAllReady();
          }
        }
        function abortTaskSoft(task) {
          var request2 = this;
          var boundary = task.blockedBoundary;
          var segment = task.blockedSegment;
          segment.status = ABORTED;
          finishedTask(request2, boundary, segment);
        }
        function abortTask(task, request2, reason) {
          var boundary = task.blockedBoundary;
          var segment = task.blockedSegment;
          segment.status = ABORTED;
          if (boundary === null) {
            request2.allPendingTasks--;
            if (request2.status !== CLOSED) {
              request2.status = CLOSED;
              if (request2.destination !== null) {
                close(request2.destination);
              }
            }
          } else {
            boundary.pendingTasks--;
            if (!boundary.forceClientRender) {
              boundary.forceClientRender = true;
              var _error =
                reason === void 0
                  ? new Error(
                      'The render was aborted by the server without a reason.'
                    )
                  : reason;
              boundary.errorDigest = request2.onError(_error);
              {
                var errorPrefix =
                  'The server did not finish this Suspense boundary: ';
                if (_error && typeof _error.message === 'string') {
                  _error = errorPrefix + _error.message;
                } else {
                  _error = errorPrefix + String(_error);
                }
                var previousTaskInDev = currentTaskInDEV;
                currentTaskInDEV = task;
                try {
                  captureBoundaryErrorDetailsDev(boundary, _error);
                } finally {
                  currentTaskInDEV = previousTaskInDev;
                }
              }
              if (boundary.parentFlushed) {
                request2.clientRenderedBoundaries.push(boundary);
              }
            }
            boundary.fallbackAbortableTasks.forEach(function (fallbackTask) {
              return abortTask(fallbackTask, request2, reason);
            });
            boundary.fallbackAbortableTasks.clear();
            request2.allPendingTasks--;
            if (request2.allPendingTasks === 0) {
              var onAllReady = request2.onAllReady;
              onAllReady();
            }
          }
        }
        function queueCompletedSegment(boundary, segment) {
          if (
            segment.chunks.length === 0 &&
            segment.children.length === 1 &&
            segment.children[0].boundary === null
          ) {
            var childSegment = segment.children[0];
            childSegment.id = segment.id;
            childSegment.parentFlushed = true;
            if (childSegment.status === COMPLETED) {
              queueCompletedSegment(boundary, childSegment);
            }
          } else {
            var completedSegments = boundary.completedSegments;
            completedSegments.push(segment);
          }
        }
        function finishedTask(request2, boundary, segment) {
          if (boundary === null) {
            if (segment.parentFlushed) {
              if (request2.completedRootSegment !== null) {
                throw new Error(
                  'There can only be one root segment. This is a bug in React.'
                );
              }
              request2.completedRootSegment = segment;
            }
            request2.pendingRootTasks--;
            if (request2.pendingRootTasks === 0) {
              request2.onShellError = noop$1;
              var onShellReady = request2.onShellReady;
              onShellReady();
            }
          } else {
            boundary.pendingTasks--;
            if (boundary.forceClientRender);
            else if (boundary.pendingTasks === 0) {
              if (segment.parentFlushed) {
                if (segment.status === COMPLETED) {
                  queueCompletedSegment(boundary, segment);
                }
              }
              if (boundary.parentFlushed) {
                request2.completedBoundaries.push(boundary);
              }
              boundary.fallbackAbortableTasks.forEach(abortTaskSoft, request2);
              boundary.fallbackAbortableTasks.clear();
            } else {
              if (segment.parentFlushed) {
                if (segment.status === COMPLETED) {
                  queueCompletedSegment(boundary, segment);
                  var completedSegments = boundary.completedSegments;
                  if (completedSegments.length === 1) {
                    if (boundary.parentFlushed) {
                      request2.partialBoundaries.push(boundary);
                    }
                  }
                }
              }
            }
          }
          request2.allPendingTasks--;
          if (request2.allPendingTasks === 0) {
            var onAllReady = request2.onAllReady;
            onAllReady();
          }
        }
        function retryTask(request2, task) {
          var segment = task.blockedSegment;
          if (segment.status !== PENDING) {
            return;
          }
          switchContext(task.context);
          var prevTaskInDEV = null;
          {
            prevTaskInDEV = currentTaskInDEV;
            currentTaskInDEV = task;
          }
          try {
            renderNodeDestructive(request2, task, task.node);
            pushSegmentFinale(
              segment.chunks,
              request2.responseState,
              segment.lastPushedText,
              segment.textEmbedded
            );
            task.abortSet.delete(task);
            segment.status = COMPLETED;
            finishedTask(request2, task.blockedBoundary, segment);
          } catch (x) {
            resetHooksState();
            if (
              typeof x === 'object' &&
              x !== null &&
              typeof x.then === 'function'
            ) {
              var ping = task.ping;
              x.then(ping, ping);
            } else {
              task.abortSet.delete(task);
              segment.status = ERRORED;
              erroredTask(request2, task.blockedBoundary, segment, x);
            }
          } finally {
            {
              currentTaskInDEV = prevTaskInDEV;
            }
          }
        }
        function performWork(request2) {
          if (request2.status === CLOSED) {
            return;
          }
          var prevContext = getActiveContext();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = Dispatcher;
          var prevGetCurrentStackImpl;
          {
            prevGetCurrentStackImpl = ReactDebugCurrentFrame$1.getCurrentStack;
            ReactDebugCurrentFrame$1.getCurrentStack = getCurrentStackInDEV;
          }
          var prevResponseState = currentResponseState;
          setCurrentResponseState(request2.responseState);
          try {
            var pingedTasks = request2.pingedTasks;
            var i;
            for (i = 0; i < pingedTasks.length; i++) {
              var task = pingedTasks[i];
              retryTask(request2, task);
            }
            pingedTasks.splice(0, i);
            if (request2.destination !== null) {
              flushCompletedQueues(request2, request2.destination);
            }
          } catch (error2) {
            logRecoverableError(request2, error2);
            fatalError(request2, error2);
          } finally {
            setCurrentResponseState(prevResponseState);
            ReactCurrentDispatcher$1.current = prevDispatcher;
            {
              ReactDebugCurrentFrame$1.getCurrentStack =
                prevGetCurrentStackImpl;
            }
            if (prevDispatcher === Dispatcher) {
              switchContext(prevContext);
            }
          }
        }
        function flushSubtree(request2, destination, segment) {
          segment.parentFlushed = true;
          switch (segment.status) {
            case PENDING: {
              var segmentID = (segment.id = request2.nextSegmentId++);
              segment.lastPushedText = false;
              segment.textEmbedded = false;
              return writePlaceholder(
                destination,
                request2.responseState,
                segmentID
              );
            }
            case COMPLETED: {
              segment.status = FLUSHED;
              var r2 = true;
              var chunks = segment.chunks;
              var chunkIdx = 0;
              var children = segment.children;
              for (var childIdx = 0; childIdx < children.length; childIdx++) {
                var nextChild = children[childIdx];
                for (; chunkIdx < nextChild.index; chunkIdx++) {
                  writeChunk(destination, chunks[chunkIdx]);
                }
                r2 = flushSegment(request2, destination, nextChild);
              }
              for (; chunkIdx < chunks.length - 1; chunkIdx++) {
                writeChunk(destination, chunks[chunkIdx]);
              }
              if (chunkIdx < chunks.length) {
                r2 = writeChunkAndReturn(destination, chunks[chunkIdx]);
              }
              return r2;
            }
            default: {
              throw new Error(
                'Aborted, errored or already flushed boundaries should not be flushed again. This is a bug in React.'
              );
            }
          }
        }
        function flushSegment(request2, destination, segment) {
          var boundary = segment.boundary;
          if (boundary === null) {
            return flushSubtree(request2, destination, segment);
          }
          boundary.parentFlushed = true;
          if (boundary.forceClientRender) {
            writeStartClientRenderedSuspenseBoundary(
              destination,
              request2.responseState,
              boundary.errorDigest,
              boundary.errorMessage,
              boundary.errorComponentStack
            );
            flushSubtree(request2, destination, segment);
            return writeEndClientRenderedSuspenseBoundary(
              destination,
              request2.responseState
            );
          } else if (boundary.pendingTasks > 0) {
            boundary.rootSegmentID = request2.nextSegmentId++;
            if (boundary.completedSegments.length > 0) {
              request2.partialBoundaries.push(boundary);
            }
            var id = (boundary.id = assignSuspenseBoundaryID(
              request2.responseState
            ));
            writeStartPendingSuspenseBoundary(
              destination,
              request2.responseState,
              id
            );
            flushSubtree(request2, destination, segment);
            return writeEndPendingSuspenseBoundary(
              destination,
              request2.responseState
            );
          } else if (boundary.byteSize > request2.progressiveChunkSize) {
            boundary.rootSegmentID = request2.nextSegmentId++;
            request2.completedBoundaries.push(boundary);
            writeStartPendingSuspenseBoundary(
              destination,
              request2.responseState,
              boundary.id
            );
            flushSubtree(request2, destination, segment);
            return writeEndPendingSuspenseBoundary(
              destination,
              request2.responseState
            );
          } else {
            writeStartCompletedSuspenseBoundary(
              destination,
              request2.responseState
            );
            var completedSegments = boundary.completedSegments;
            if (completedSegments.length !== 1) {
              throw new Error(
                'A previously unvisited boundary must have exactly one root segment. This is a bug in React.'
              );
            }
            var contentSegment = completedSegments[0];
            flushSegment(request2, destination, contentSegment);
            return writeEndCompletedSuspenseBoundary(
              destination,
              request2.responseState
            );
          }
        }
        function flushClientRenderedBoundary(request2, destination, boundary) {
          return writeClientRenderBoundaryInstruction(
            destination,
            request2.responseState,
            boundary.id,
            boundary.errorDigest,
            boundary.errorMessage,
            boundary.errorComponentStack
          );
        }
        function flushSegmentContainer(request2, destination, segment) {
          writeStartSegment(
            destination,
            request2.responseState,
            segment.formatContext,
            segment.id
          );
          flushSegment(request2, destination, segment);
          return writeEndSegment(destination, segment.formatContext);
        }
        function flushCompletedBoundary(request2, destination, boundary) {
          var completedSegments = boundary.completedSegments;
          var i = 0;
          for (; i < completedSegments.length; i++) {
            var segment = completedSegments[i];
            flushPartiallyCompletedSegment(
              request2,
              destination,
              boundary,
              segment
            );
          }
          completedSegments.length = 0;
          return writeCompletedBoundaryInstruction(
            destination,
            request2.responseState,
            boundary.id,
            boundary.rootSegmentID
          );
        }
        function flushPartialBoundary(request2, destination, boundary) {
          var completedSegments = boundary.completedSegments;
          var i = 0;
          for (; i < completedSegments.length; i++) {
            var segment = completedSegments[i];
            if (
              !flushPartiallyCompletedSegment(
                request2,
                destination,
                boundary,
                segment
              )
            ) {
              i++;
              completedSegments.splice(0, i);
              return false;
            }
          }
          completedSegments.splice(0, i);
          return true;
        }
        function flushPartiallyCompletedSegment(
          request2,
          destination,
          boundary,
          segment
        ) {
          if (segment.status === FLUSHED) {
            return true;
          }
          var segmentID = segment.id;
          if (segmentID === -1) {
            var rootSegmentID = (segment.id = boundary.rootSegmentID);
            if (rootSegmentID === -1) {
              throw new Error(
                'A root segment ID must have been assigned by now. This is a bug in React.'
              );
            }
            return flushSegmentContainer(request2, destination, segment);
          } else {
            flushSegmentContainer(request2, destination, segment);
            return writeCompletedSegmentInstruction(
              destination,
              request2.responseState,
              segmentID
            );
          }
        }
        function flushCompletedQueues(request2, destination) {
          beginWriting();
          try {
            var completedRootSegment = request2.completedRootSegment;
            if (
              completedRootSegment !== null &&
              request2.pendingRootTasks === 0
            ) {
              flushSegment(request2, destination, completedRootSegment);
              request2.completedRootSegment = null;
              writeCompletedRoot(destination, request2.responseState);
            }
            var clientRenderedBoundaries = request2.clientRenderedBoundaries;
            var i;
            for (i = 0; i < clientRenderedBoundaries.length; i++) {
              var boundary = clientRenderedBoundaries[i];
              if (
                !flushClientRenderedBoundary(request2, destination, boundary)
              ) {
                request2.destination = null;
                i++;
                clientRenderedBoundaries.splice(0, i);
                return;
              }
            }
            clientRenderedBoundaries.splice(0, i);
            var completedBoundaries = request2.completedBoundaries;
            for (i = 0; i < completedBoundaries.length; i++) {
              var _boundary = completedBoundaries[i];
              if (!flushCompletedBoundary(request2, destination, _boundary)) {
                request2.destination = null;
                i++;
                completedBoundaries.splice(0, i);
                return;
              }
            }
            completedBoundaries.splice(0, i);
            completeWriting(destination);
            beginWriting(destination);
            var partialBoundaries = request2.partialBoundaries;
            for (i = 0; i < partialBoundaries.length; i++) {
              var _boundary2 = partialBoundaries[i];
              if (!flushPartialBoundary(request2, destination, _boundary2)) {
                request2.destination = null;
                i++;
                partialBoundaries.splice(0, i);
                return;
              }
            }
            partialBoundaries.splice(0, i);
            var largeBoundaries = request2.completedBoundaries;
            for (i = 0; i < largeBoundaries.length; i++) {
              var _boundary3 = largeBoundaries[i];
              if (!flushCompletedBoundary(request2, destination, _boundary3)) {
                request2.destination = null;
                i++;
                largeBoundaries.splice(0, i);
                return;
              }
            }
            largeBoundaries.splice(0, i);
          } finally {
            completeWriting(destination);
            flushBuffered(destination);
            if (
              request2.allPendingTasks === 0 &&
              request2.pingedTasks.length === 0 &&
              request2.clientRenderedBoundaries.length === 0 &&
              request2.completedBoundaries.length === 0
            ) {
              {
                if (request2.abortableTasks.size !== 0) {
                  error(
                    'There was still abortable task at the root when we closed. This is a bug in React.'
                  );
                }
              }
              close(destination);
            }
          }
        }
        function startWork(request2) {
          scheduleWork(function () {
            return performWork(request2);
          });
        }
        function startFlowing(request2, destination) {
          if (request2.status === CLOSING) {
            request2.status = CLOSED;
            closeWithError(destination, request2.fatalError);
            return;
          }
          if (request2.status === CLOSED) {
            return;
          }
          if (request2.destination !== null) {
            return;
          }
          request2.destination = destination;
          try {
            flushCompletedQueues(request2, destination);
          } catch (error2) {
            logRecoverableError(request2, error2);
            fatalError(request2, error2);
          }
        }
        function abort(request2, reason) {
          try {
            var abortableTasks = request2.abortableTasks;
            abortableTasks.forEach(function (task) {
              return abortTask(task, request2, reason);
            });
            abortableTasks.clear();
            if (request2.destination !== null) {
              flushCompletedQueues(request2, request2.destination);
            }
          } catch (error2) {
            logRecoverableError(request2, error2);
            fatalError(request2, error2);
          }
        }
        function createDrainHandler(destination, request2) {
          return function () {
            return startFlowing(request2, destination);
          };
        }
        function createAbortHandler(request2, reason) {
          return function () {
            return abort(request2, reason);
          };
        }
        function createRequestImpl(children, options) {
          return createRequest(
            children,
            createResponseState(
              options ? options.identifierPrefix : void 0,
              options ? options.nonce : void 0,
              options ? options.bootstrapScriptContent : void 0,
              options ? options.bootstrapScripts : void 0,
              options ? options.bootstrapModules : void 0
            ),
            createRootFormatContext(options ? options.namespaceURI : void 0),
            options ? options.progressiveChunkSize : void 0,
            options ? options.onError : void 0,
            options ? options.onAllReady : void 0,
            options ? options.onShellReady : void 0,
            options ? options.onShellError : void 0,
            void 0
          );
        }
        function renderToPipeableStream(children, options) {
          var request2 = createRequestImpl(children, options);
          var hasStartedFlowing = false;
          startWork(request2);
          return {
            pipe: function (destination) {
              if (hasStartedFlowing) {
                throw new Error(
                  'React currently only supports piping to one writable stream.'
                );
              }
              hasStartedFlowing = true;
              startFlowing(request2, destination);
              destination.on(
                'drain',
                createDrainHandler(destination, request2)
              );
              destination.on(
                'error',
                createAbortHandler(
                  request2,
                  // eslint-disable-next-line react-internal/prod-error-codes
                  new Error(
                    'The destination stream errored while writing data.'
                  )
                )
              );
              destination.on(
                'close',
                createAbortHandler(
                  request2,
                  // eslint-disable-next-line react-internal/prod-error-codes
                  new Error('The destination stream closed early.')
                )
              );
              return destination;
            },
            abort: function (reason) {
              abort(request2, reason);
            },
          };
        }
        exports2.renderToPipeableStream = renderToPipeableStream;
        exports2.version = ReactVersion;
      })();
    }
  },
});

// ../../node_modules/react-dom/server.node.js
var require_server_node = __commonJS({
  '../../node_modules/react-dom/server.node.js'(exports2) {
    'use strict';
    var l2;
    var s2;
    if (process.env.NODE_ENV === 'production') {
      l2 = require_react_dom_server_legacy_node_production_min();
      s2 = require_react_dom_server_node_production_min();
    } else {
      l2 = require_react_dom_server_legacy_node_development();
      s2 = require_react_dom_server_node_development();
    }
    exports2.version = l2.version;
    exports2.renderToString = l2.renderToString;
    exports2.renderToStaticMarkup = l2.renderToStaticMarkup;
    exports2.renderToNodeStream = l2.renderToNodeStream;
    exports2.renderToStaticNodeStream = l2.renderToStaticNodeStream;
    exports2.renderToPipeableStream = s2.renderToPipeableStream;
  },
});

// ../../node_modules/domelementtype/lib/esm/index.js
function isTag(elem) {
  return (
    elem.type === ElementType.Tag ||
    elem.type === ElementType.Script ||
    elem.type === ElementType.Style
  );
}
var ElementType,
  Root,
  Text,
  Directive,
  Comment,
  Script,
  Style,
  Tag,
  CDATA,
  Doctype;
var init_esm = __esm({
  '../../node_modules/domelementtype/lib/esm/index.js'() {
    'use strict';
    (function (ElementType2) {
      ElementType2['Root'] = 'root';
      ElementType2['Text'] = 'text';
      ElementType2['Directive'] = 'directive';
      ElementType2['Comment'] = 'comment';
      ElementType2['Script'] = 'script';
      ElementType2['Style'] = 'style';
      ElementType2['Tag'] = 'tag';
      ElementType2['CDATA'] = 'cdata';
      ElementType2['Doctype'] = 'doctype';
    })(ElementType || (ElementType = {}));
    Root = ElementType.Root;
    Text = ElementType.Text;
    Directive = ElementType.Directive;
    Comment = ElementType.Comment;
    Script = ElementType.Script;
    Style = ElementType.Style;
    Tag = ElementType.Tag;
    CDATA = ElementType.CDATA;
    Doctype = ElementType.Doctype;
  },
});

// ../../node_modules/@selderee/plugin-htmlparser2/node_modules/domhandler/lib/esm/node.js
function isTag2(node) {
  return isTag(node);
}
var init_node = __esm({
  '../../node_modules/@selderee/plugin-htmlparser2/node_modules/domhandler/lib/esm/node.js'() {
    'use strict';
    init_esm();
  },
});

// ../../node_modules/@selderee/plugin-htmlparser2/node_modules/domhandler/lib/esm/index.js
var init_esm2 = __esm({
  '../../node_modules/@selderee/plugin-htmlparser2/node_modules/domhandler/lib/esm/index.js'() {
    'use strict';
    init_esm();
    init_node();
    init_node();
  },
});

// ../../node_modules/leac/lib/leac.mjs
function n(n2) {
  const o2 = [...n2.matchAll(e)].map((e2) => e2.index || 0);
  o2.unshift(-1);
  const s2 = t(o2, 0, o2.length);
  return (e2) => r(s2, e2);
}
function t(e2, n2, r2) {
  if (r2 - n2 == 1) return { offset: e2[n2], index: n2 + 1 };
  const o2 = Math.ceil((n2 + r2) / 2),
    s2 = t(e2, n2, o2),
    l2 = t(e2, o2, r2);
  return { offset: s2.offset, low: s2, high: l2 };
}
function r(e2, n2) {
  return (function (e3) {
    return Object.prototype.hasOwnProperty.call(e3, 'index');
  })(e2)
    ? { line: e2.index, column: n2 - e2.offset }
    : r(e2.high.offset < n2 ? e2.high : e2.low, n2);
}
function o(e2, t2 = '', r2 = {}) {
  const o2 = 'string' != typeof t2 ? t2 : r2,
    l2 = 'string' == typeof t2 ? t2 : '',
    c2 = e2.map(s),
    f = !!o2.lineNumbers;
  return function (e3, t3 = 0) {
    const r3 = f ? n(e3) : () => ({ line: 0, column: 0 });
    let o3 = t3;
    const s2 = [];
    e: for (; o3 < e3.length; ) {
      let n2 = false;
      for (const t4 of c2) {
        t4.regex.lastIndex = o3;
        const c3 = t4.regex.exec(e3);
        if (c3 && c3[0].length > 0) {
          if (!t4.discard) {
            const e4 = r3(o3),
              n3 =
                'string' == typeof t4.replace
                  ? c3[0].replace(
                      new RegExp(t4.regex.source, t4.regex.flags),
                      t4.replace
                    )
                  : c3[0];
            s2.push({
              state: l2,
              name: t4.name,
              text: n3,
              offset: o3,
              len: c3[0].length,
              line: e4.line,
              column: e4.column,
            });
          }
          if (((o3 = t4.regex.lastIndex), (n2 = true), t4.push)) {
            const n3 = t4.push(e3, o3);
            s2.push(...n3.tokens), (o3 = n3.offset);
          }
          if (t4.pop) break e;
          break;
        }
      }
      if (!n2) break;
    }
    return { tokens: s2, offset: o3, complete: e3.length <= o3 };
  };
}
function s(e2, n2) {
  return { ...e2, regex: l(e2, n2) };
}
function l(e2, n2) {
  if (0 === e2.name.length)
    throw new Error(`Rule #${n2} has empty name, which is not allowed.`);
  if (
    (function (e3) {
      return Object.prototype.hasOwnProperty.call(e3, 'regex');
    })(e2)
  )
    return (function (e3) {
      if (e3.global)
        throw new Error(
          `Regular expression /${e3.source}/${e3.flags} contains the global flag, which is not allowed.`
        );
      return e3.sticky ? e3 : new RegExp(e3.source, e3.flags + 'y');
    })(e2.regex);
  if (
    (function (e3) {
      return Object.prototype.hasOwnProperty.call(e3, 'str');
    })(e2)
  ) {
    if (0 === e2.str.length)
      throw new Error(
        `Rule #${n2} ("${e2.name}") has empty "str" property, which is not allowed.`
      );
    return new RegExp(c(e2.str), 'y');
  }
  return new RegExp(c(e2.name), 'y');
}
function c(e2) {
  return e2.replace(/[-[\]{}()*+!<=:?./\\^$|#\s,]/g, '\\$&');
}
var e;
var init_leac = __esm({
  '../../node_modules/leac/lib/leac.mjs'() {
    'use strict';
    e = /\n/g;
  },
});

// ../../node_modules/peberminta/lib/core.mjs
function token(onToken, onEnd) {
  return (data, i) => {
    let position = i;
    let value = void 0;
    if (i < data.tokens.length) {
      value = onToken(data.tokens[i], data, i);
      if (value !== void 0) {
        position++;
      }
    } else {
      onEnd?.(data, i);
    }
    return value === void 0
      ? { matched: false }
      : {
          matched: true,
          position,
          value,
        };
  };
}
function mapInner(r2, f) {
  return r2.matched
    ? {
        matched: true,
        position: r2.position,
        value: f(r2.value, r2.position),
      }
    : r2;
}
function mapOuter(r2, f) {
  return r2.matched ? f(r2) : r2;
}
function map(p, mapper) {
  return (data, i) => mapInner(p(data, i), (v, j2) => mapper(v, data, i, j2));
}
function option(p, def) {
  return (data, i) => {
    const r2 = p(data, i);
    return r2.matched
      ? r2
      : {
          matched: true,
          position: i,
          value: def,
        };
  };
}
function choice(...ps2) {
  return (data, i) => {
    for (const p of ps2) {
      const result = p(data, i);
      if (result.matched) {
        return result;
      }
    }
    return { matched: false };
  };
}
function otherwise(pa2, pb) {
  return (data, i) => {
    const r1 = pa2(data, i);
    return r1.matched ? r1 : pb(data, i);
  };
}
function takeWhile(p, test2) {
  return (data, i) => {
    const values = [];
    let success = true;
    do {
      const r2 = p(data, i);
      if (
        r2.matched &&
        test2(r2.value, values.length + 1, data, i, r2.position)
      ) {
        values.push(r2.value);
        i = r2.position;
      } else {
        success = false;
      }
    } while (success);
    return {
      matched: true,
      position: i,
      value: values,
    };
  };
}
function many(p) {
  return takeWhile(p, () => true);
}
function many1(p) {
  return ab(p, many(p), (head, tail) => [head, ...tail]);
}
function ab(pa2, pb, join2) {
  return (data, i) =>
    mapOuter(pa2(data, i), (ma2) =>
      mapInner(pb(data, ma2.position), (vb, j2) =>
        join2(ma2.value, vb, data, i, j2)
      )
    );
}
function left(pa2, pb) {
  return ab(pa2, pb, (va2) => va2);
}
function right(pa2, pb) {
  return ab(pa2, pb, (va2, vb) => vb);
}
function abc(pa2, pb, pc2, join2) {
  return (data, i) =>
    mapOuter(pa2(data, i), (ma2) =>
      mapOuter(pb(data, ma2.position), (mb) =>
        mapInner(pc2(data, mb.position), (vc2, j2) =>
          join2(ma2.value, mb.value, vc2, data, i, j2)
        )
      )
    );
}
function middle(pa2, pb, pc2) {
  return abc(pa2, pb, pc2, (ra2, rb) => rb);
}
function all(...ps2) {
  return (data, i) => {
    const result = [];
    let position = i;
    for (const p of ps2) {
      const r1 = p(data, position);
      if (r1.matched) {
        result.push(r1.value);
        position = r1.position;
      } else {
        return { matched: false };
      }
    }
    return {
      matched: true,
      position,
      value: result,
    };
  };
}
function flatten(...ps2) {
  return flatten1(all(...ps2));
}
function flatten1(p) {
  return map(p, (vs2) => vs2.flatMap((v) => v));
}
function chainReduce(acc, f) {
  return (data, i) => {
    let loop = true;
    let acc1 = acc;
    let pos = i;
    do {
      const r2 = f(acc1, data, pos)(data, pos);
      if (r2.matched) {
        acc1 = r2.value;
        pos = r2.position;
      } else {
        loop = false;
      }
    } while (loop);
    return {
      matched: true,
      position: pos,
      value: acc1,
    };
  };
}
function reduceLeft(acc, p, reducer) {
  return chainReduce(acc, (acc2) =>
    map(p, (v, data, i, j2) => reducer(acc2, v, data, i, j2))
  );
}
function leftAssoc2(pLeft, pOper, pRight) {
  return chain(pLeft, (v0) =>
    reduceLeft(
      v0,
      ab(pOper, pRight, (f, y) => [f, y]),
      (acc, [f, y]) => f(acc, y)
    )
  );
}
function chain(p, f) {
  return (data, i) =>
    mapOuter(p(data, i), (m1) =>
      f(m1.value, data, i, m1.position)(data, m1.position)
    );
}
var init_core = __esm({
  '../../node_modules/peberminta/lib/core.mjs'() {
    'use strict';
  },
});

// ../../node_modules/parseley/lib/parseley.mjs
function sumSpec([a0, a1, a2], [b0, b1, b2]) {
  return [a0 + b0, a1 + b1, a2 + b2];
}
function sumAllSpec(ss2) {
  return ss2.reduce(sumSpec, [0, 0, 0]);
}
function literal(name) {
  return token((t2) => (t2.name === name ? true : void 0));
}
function optionallySpaced(parser) {
  return middle(optionalWhitespace_, parser, optionalWhitespace_);
}
function parse_(parser, str) {
  const lexerResult = lex(str);
  if (!lexerResult.complete) {
    throw new Error(
      `The input "${str}" was only partially tokenized, stopped at offset ${lexerResult.offset}!
` + prettyPrintPosition(str, lexerResult.offset)
    );
  }
  const result = optionallySpaced(parser)(
    { tokens: lexerResult.tokens, options: void 0 },
    0
  );
  if (!result.matched) {
    throw new Error(`No match for "${str}" input!`);
  }
  if (result.position < lexerResult.tokens.length) {
    const token2 = lexerResult.tokens[result.position];
    throw new Error(
      `The input "${str}" was only partially parsed, stopped at offset ${token2.offset}!
` + prettyPrintPosition(str, token2.offset, token2.len)
    );
  }
  return result.value;
}
function prettyPrintPosition(str, offset, len = 1) {
  return `${str.replace(/(\t)|(\r)|(\n)/g, (m2, t2, r2) =>
    t2 ? '\u2409' : r2 ? '\u240D' : '\u240A'
  )}
${''.padEnd(offset)}${'^'.repeat(len)}`;
}
function parse1(str) {
  return parse_(complexSelector_, str);
}
function serialize(selector) {
  if (!selector.type) {
    throw new Error('This is not an AST node.');
  }
  switch (selector.type) {
    case 'universal':
      return _serNs(selector.namespace) + '*';
    case 'tag':
      return _serNs(selector.namespace) + selector.name;
    case 'class':
      return '.' + selector.name;
    case 'id':
      return '#' + selector.name;
    case 'attrPresence':
      return `[${_serNs(selector.namespace)}${selector.name}]`;
    case 'attrValue':
      return `[${_serNs(selector.namespace)}${selector.name}${
        selector.matcher
      }${_serStr(selector.value)}${
        selector.modifier ? selector.modifier : ''
      }]`;
    case 'combinator':
      return serialize(selector.left) + selector.combinator;
    case 'compound':
      return selector.list.reduce((acc, node) => {
        if (node.type === 'combinator') {
          return serialize(node) + acc;
        } else {
          return acc + serialize(node);
        }
      }, '');
    case 'list':
      return selector.list.map(serialize).join(',');
  }
}
function _serNs(ns2) {
  return ns2 || ns2 === '' ? ns2 + '|' : '';
}
function _serStr(str) {
  if (str.indexOf('"') === -1) {
    return `"${str}"`;
  } else if (str.indexOf("'") === -1) {
    return `'${str}'`;
  } else {
    return `"${str.replace('"', '\\"')}"`;
  }
}
function normalize(selector) {
  if (!selector.type) {
    throw new Error('This is not an AST node.');
  }
  switch (selector.type) {
    case 'compound': {
      selector.list.forEach(normalize);
      selector.list.sort((a, b) =>
        _compareArrays(_getSelectorPriority(a), _getSelectorPriority(b))
      );
      break;
    }
    case 'combinator': {
      normalize(selector.left);
      break;
    }
    case 'list': {
      selector.list.forEach(normalize);
      selector.list.sort((a, b) => (serialize(a) < serialize(b) ? -1 : 1));
      break;
    }
  }
  return selector;
}
function _getSelectorPriority(selector) {
  switch (selector.type) {
    case 'universal':
      return [1];
    case 'tag':
      return [1];
    case 'id':
      return [2];
    case 'class':
      return [3, selector.name];
    case 'attrPresence':
      return [4, serialize(selector)];
    case 'attrValue':
      return [5, serialize(selector)];
    case 'combinator':
      return [15, serialize(selector)];
  }
}
function compareSpecificity(a, b) {
  return _compareArrays(a, b);
}
function _compareArrays(a, b) {
  if (!Array.isArray(a) || !Array.isArray(b)) {
    throw new Error('Arguments must be arrays.');
  }
  const shorter = a.length < b.length ? a.length : b.length;
  for (let i = 0; i < shorter; i++) {
    if (a[i] === b[i]) {
      continue;
    }
    return a[i] < b[i] ? -1 : 1;
  }
  return a.length - b.length;
}
var lex,
  whitespace_,
  optionalWhitespace_,
  identifier_,
  hashId_,
  string_,
  namespace_,
  qualifiedName_,
  uniSelector_,
  tagSelector_,
  classSelector_,
  idSelector_,
  attrModifier_,
  attrValue_,
  attrMatcher_,
  attrPresenceSelector_,
  attrValueSelector_,
  attrSelector_,
  typeSelector_,
  subclassSelector_,
  compoundSelector_,
  combinator_,
  combinatorSeparator_,
  complexSelector_,
  listSelector_;
var init_parseley = __esm({
  '../../node_modules/parseley/lib/parseley.mjs'() {
    'use strict';
    init_leac();
    init_core();
    lex = o([
      { name: 'ws', regex: /[ \t\r\n\f]+/ },
      { name: 'idn', regex: /[a-zA-Z_-][a-zA-Z0-9_-]*/ },
      { name: '#id', regex: /#[a-zA-Z0-9_-]+/ },
      { name: 'str1', regex: /'(?:\\['\\]|[^\n'\\])*'/ },
      { name: 'str2', regex: /"(?:\\["\\]|[^\n"\\])*"/ },
      { name: '*' },
      { name: '.' },
      { name: ',' },
      { name: '[' },
      { name: ']' },
      { name: '=' },
      { name: '>' },
      { name: '|' },
      { name: '+' },
      { name: '~' },
      { name: '^' },
      { name: '$' },
    ]);
    whitespace_ = token((t2) => (t2.name === 'ws' ? null : void 0));
    optionalWhitespace_ = option(whitespace_, null);
    identifier_ = token((t2) => (t2.name === 'idn' ? t2.text : void 0));
    hashId_ = token((t2) => (t2.name === '#id' ? t2.text.slice(1) : void 0));
    string_ = token((t2) =>
      t2.name.startsWith('str') ? t2.text.slice(1, -1) : void 0
    );
    namespace_ = left(option(identifier_, ''), literal('|'));
    qualifiedName_ = otherwise(
      ab(namespace_, identifier_, (ns2, name) => ({ name, namespace: ns2 })),
      map(identifier_, (name) => ({ name, namespace: null }))
    );
    uniSelector_ = otherwise(
      ab(namespace_, literal('*'), (ns2) => ({
        type: 'universal',
        namespace: ns2,
        specificity: [0, 0, 0],
      })),
      map(literal('*'), () => ({
        type: 'universal',
        namespace: null,
        specificity: [0, 0, 0],
      }))
    );
    tagSelector_ = map(qualifiedName_, ({ name, namespace }) => ({
      type: 'tag',
      name,
      namespace,
      specificity: [0, 0, 1],
    }));
    classSelector_ = ab(literal('.'), identifier_, (fullstop, name) => ({
      type: 'class',
      name,
      specificity: [0, 1, 0],
    }));
    idSelector_ = map(hashId_, (name) => ({
      type: 'id',
      name,
      specificity: [1, 0, 0],
    }));
    attrModifier_ = token((t2) => {
      if (t2.name === 'idn') {
        if (t2.text === 'i' || t2.text === 'I') {
          return 'i';
        }
        if (t2.text === 's' || t2.text === 'S') {
          return 's';
        }
      }
      return void 0;
    });
    attrValue_ = otherwise(
      ab(
        string_,
        option(right(optionalWhitespace_, attrModifier_), null),
        (v, mod) => ({ value: v, modifier: mod })
      ),
      ab(
        identifier_,
        option(right(whitespace_, attrModifier_), null),
        (v, mod) => ({ value: v, modifier: mod })
      )
    );
    attrMatcher_ = choice(
      map(literal('='), () => '='),
      ab(literal('~'), literal('='), () => '~='),
      ab(literal('|'), literal('='), () => '|='),
      ab(literal('^'), literal('='), () => '^='),
      ab(literal('$'), literal('='), () => '$='),
      ab(literal('*'), literal('='), () => '*=')
    );
    attrPresenceSelector_ = abc(
      literal('['),
      optionallySpaced(qualifiedName_),
      literal(']'),
      (lbr, { name, namespace }) => ({
        type: 'attrPresence',
        name,
        namespace,
        specificity: [0, 1, 0],
      })
    );
    attrValueSelector_ = middle(
      literal('['),
      abc(
        optionallySpaced(qualifiedName_),
        attrMatcher_,
        optionallySpaced(attrValue_),
        ({ name, namespace }, matcher, { value, modifier }) => ({
          type: 'attrValue',
          name,
          namespace,
          matcher,
          value,
          modifier,
          specificity: [0, 1, 0],
        })
      ),
      literal(']')
    );
    attrSelector_ = otherwise(attrPresenceSelector_, attrValueSelector_);
    typeSelector_ = otherwise(uniSelector_, tagSelector_);
    subclassSelector_ = choice(idSelector_, classSelector_, attrSelector_);
    compoundSelector_ = map(
      otherwise(
        flatten(typeSelector_, many(subclassSelector_)),
        many1(subclassSelector_)
      ),
      (ss2) => {
        return {
          type: 'compound',
          list: ss2,
          specificity: sumAllSpec(ss2.map((s2) => s2.specificity)),
        };
      }
    );
    combinator_ = choice(
      map(literal('>'), () => '>'),
      map(literal('+'), () => '+'),
      map(literal('~'), () => '~'),
      ab(literal('|'), literal('|'), () => '||')
    );
    combinatorSeparator_ = otherwise(
      optionallySpaced(combinator_),
      map(whitespace_, () => ' ')
    );
    complexSelector_ = leftAssoc2(
      compoundSelector_,
      map(combinatorSeparator_, (c2) => (left2, right2) => ({
        type: 'compound',
        list: [
          ...right2.list,
          {
            type: 'combinator',
            combinator: c2,
            left: left2,
            specificity: left2.specificity,
          },
        ],
        specificity: sumSpec(left2.specificity, right2.specificity),
      })),
      compoundSelector_
    );
    listSelector_ = leftAssoc2(
      map(complexSelector_, (s2) => ({ type: 'list', list: [s2] })),
      map(optionallySpaced(literal(',')), () => (acc, next) => ({
        type: 'list',
        list: [...acc.list, next],
      })),
      complexSelector_
    );
  },
});

// ../../node_modules/selderee/lib/selderee.mjs
function toAstTerminalPairs(array) {
  const len = array.length;
  const results = new Array(len);
  for (let i = 0; i < len; i++) {
    const [selectorString, val] = array[i];
    const ast = preprocess(parse1(selectorString));
    results[i] = {
      ast,
      terminal: {
        type: 'terminal',
        valueContainer: { index: i, value: val, specificity: ast.specificity },
      },
    };
  }
  return results;
}
function preprocess(ast) {
  reduceSelectorVariants(ast);
  normalize(ast);
  return ast;
}
function reduceSelectorVariants(ast) {
  const newList = [];
  ast.list.forEach((sel) => {
    switch (sel.type) {
      case 'class':
        newList.push({
          matcher: '~=',
          modifier: null,
          name: 'class',
          namespace: null,
          specificity: sel.specificity,
          type: 'attrValue',
          value: sel.name,
        });
        break;
      case 'id':
        newList.push({
          matcher: '=',
          modifier: null,
          name: 'id',
          namespace: null,
          specificity: sel.specificity,
          type: 'attrValue',
          value: sel.name,
        });
        break;
      case 'combinator':
        reduceSelectorVariants(sel.left);
        newList.push(sel);
        break;
      case 'universal':
        break;
      default:
        newList.push(sel);
        break;
    }
  });
  ast.list = newList;
}
function weave(items) {
  const branches = [];
  while (items.length) {
    const topKind = findTopKey(items, (sel) => true, getSelectorKind);
    const { matches, nonmatches, empty: empty2 } = breakByKind(items, topKind);
    items = nonmatches;
    if (matches.length) {
      branches.push(branchOfKind(topKind, matches));
    }
    if (empty2.length) {
      branches.push(...terminate(empty2));
    }
  }
  return branches;
}
function terminate(items) {
  const results = [];
  for (const item of items) {
    const terminal = item.terminal;
    if (terminal.type === 'terminal') {
      results.push(terminal);
    } else {
      const { matches, rest } = partition(
        terminal.cont,
        (node) => node.type === 'terminal'
      );
      matches.forEach((node) => results.push(node));
      if (rest.length) {
        terminal.cont = rest;
        results.push(terminal);
      }
    }
  }
  return results;
}
function breakByKind(items, selectedKind) {
  const matches = [];
  const nonmatches = [];
  const empty2 = [];
  for (const item of items) {
    const simpsels = item.ast.list;
    if (simpsels.length) {
      const isMatch = simpsels.some(
        (node) => getSelectorKind(node) === selectedKind
      );
      (isMatch ? matches : nonmatches).push(item);
    } else {
      empty2.push(item);
    }
  }
  return { matches, nonmatches, empty: empty2 };
}
function getSelectorKind(sel) {
  switch (sel.type) {
    case 'attrPresence':
      return `attrPresence ${sel.name}`;
    case 'attrValue':
      return `attrValue ${sel.name}`;
    case 'combinator':
      return `combinator ${sel.combinator}`;
    default:
      return sel.type;
  }
}
function branchOfKind(kind, items) {
  if (kind === 'tag') {
    return tagNameBranch(items);
  }
  if (kind.startsWith('attrValue ')) {
    return attrValueBranch(kind.substring(10), items);
  }
  if (kind.startsWith('attrPresence ')) {
    return attrPresenceBranch(kind.substring(13), items);
  }
  if (kind === 'combinator >') {
    return combinatorBranch('>', items);
  }
  if (kind === 'combinator +') {
    return combinatorBranch('+', items);
  }
  throw new Error(`Unsupported selector kind: ${kind}`);
}
function tagNameBranch(items) {
  const groups = spliceAndGroup(
    items,
    (x) => x.type === 'tag',
    (x) => x.name
  );
  const variants = Object.entries(groups).map(([name, group]) => ({
    type: 'variant',
    value: name,
    cont: weave(group.items),
  }));
  return {
    type: 'tagName',
    variants,
  };
}
function attrPresenceBranch(name, items) {
  for (const item of items) {
    spliceSimpleSelector(
      item,
      (x) => x.type === 'attrPresence' && x.name === name
    );
  }
  return {
    type: 'attrPresence',
    name,
    cont: weave(items),
  };
}
function attrValueBranch(name, items) {
  const groups = spliceAndGroup(
    items,
    (x) => x.type === 'attrValue' && x.name === name,
    (x) => `${x.matcher} ${x.modifier || ''} ${x.value}`
  );
  const matchers = [];
  for (const group of Object.values(groups)) {
    const sel = group.oneSimpleSelector;
    const predicate = getAttrPredicate(sel);
    const continuation = weave(group.items);
    matchers.push({
      type: 'matcher',
      matcher: sel.matcher,
      modifier: sel.modifier,
      value: sel.value,
      predicate,
      cont: continuation,
    });
  }
  return {
    type: 'attrValue',
    name,
    matchers,
  };
}
function getAttrPredicate(sel) {
  if (sel.modifier === 'i') {
    const expected = sel.value.toLowerCase();
    switch (sel.matcher) {
      case '=':
        return (actual) => expected === actual.toLowerCase();
      case '~=':
        return (actual) =>
          actual
            .toLowerCase()
            .split(/[ \t]+/)
            .includes(expected);
      case '^=':
        return (actual) => actual.toLowerCase().startsWith(expected);
      case '$=':
        return (actual) => actual.toLowerCase().endsWith(expected);
      case '*=':
        return (actual) => actual.toLowerCase().includes(expected);
      case '|=':
        return (actual) => {
          const lower = actual.toLowerCase();
          return (
            expected === lower ||
            (lower.startsWith(expected) && lower[expected.length] === '-')
          );
        };
    }
  } else {
    const expected = sel.value;
    switch (sel.matcher) {
      case '=':
        return (actual) => expected === actual;
      case '~=':
        return (actual) => actual.split(/[ \t]+/).includes(expected);
      case '^=':
        return (actual) => actual.startsWith(expected);
      case '$=':
        return (actual) => actual.endsWith(expected);
      case '*=':
        return (actual) => actual.includes(expected);
      case '|=':
        return (actual) =>
          expected === actual ||
          (actual.startsWith(expected) && actual[expected.length] === '-');
    }
  }
}
function combinatorBranch(combinator, items) {
  const groups = spliceAndGroup(
    items,
    (x) => x.type === 'combinator' && x.combinator === combinator,
    (x) => serialize(x.left)
  );
  const leftItems = [];
  for (const group of Object.values(groups)) {
    const rightCont = weave(group.items);
    const leftAst = group.oneSimpleSelector.left;
    leftItems.push({
      ast: leftAst,
      terminal: { type: 'popElement', cont: rightCont },
    });
  }
  return {
    type: 'pushElement',
    combinator,
    cont: weave(leftItems),
  };
}
function spliceAndGroup(items, predicate, keyCallback) {
  const groups = {};
  while (items.length) {
    const bestKey = findTopKey(items, predicate, keyCallback);
    const bestKeyPredicate = (sel) =>
      predicate(sel) && keyCallback(sel) === bestKey;
    const hasBestKeyPredicate = (item) => item.ast.list.some(bestKeyPredicate);
    const { matches, rest } = partition1(items, hasBestKeyPredicate);
    let oneSimpleSelector = null;
    for (const item of matches) {
      const splicedNode = spliceSimpleSelector(item, bestKeyPredicate);
      if (!oneSimpleSelector) {
        oneSimpleSelector = splicedNode;
      }
    }
    if (oneSimpleSelector == null) {
      throw new Error('No simple selector is found.');
    }
    groups[bestKey] = { oneSimpleSelector, items: matches };
    items = rest;
  }
  return groups;
}
function spliceSimpleSelector(item, predicate) {
  const simpsels = item.ast.list;
  const matches = new Array(simpsels.length);
  let firstIndex = -1;
  for (let i = simpsels.length; i-- > 0; ) {
    if (predicate(simpsels[i])) {
      matches[i] = true;
      firstIndex = i;
    }
  }
  if (firstIndex == -1) {
    throw new Error(`Couldn't find the required simple selector.`);
  }
  const result = simpsels[firstIndex];
  item.ast.list = simpsels.filter((sel, i) => !matches[i]);
  return result;
}
function findTopKey(items, predicate, keyCallback) {
  const candidates = {};
  for (const item of items) {
    const candidates1 = {};
    for (const node of item.ast.list.filter(predicate)) {
      candidates1[keyCallback(node)] = true;
    }
    for (const key of Object.keys(candidates1)) {
      if (candidates[key]) {
        candidates[key]++;
      } else {
        candidates[key] = 1;
      }
    }
  }
  let topKind = '';
  let topCounter = 0;
  for (const entry of Object.entries(candidates)) {
    if (entry[1] > topCounter) {
      topKind = entry[0];
      topCounter = entry[1];
    }
  }
  return topKind;
}
function partition(src, predicate) {
  const matches = [];
  const rest = [];
  for (const x of src) {
    if (predicate(x)) {
      matches.push(x);
    } else {
      rest.push(x);
    }
  }
  return { matches, rest };
}
function partition1(src, predicate) {
  const matches = [];
  const rest = [];
  for (const x of src) {
    if (predicate(x)) {
      matches.push(x);
    } else {
      rest.push(x);
    }
  }
  return { matches, rest };
}
function comparatorPreferFirst(acc, next) {
  const diff = compareSpecificity(next.specificity, acc.specificity);
  return diff > 0 || (diff === 0 && next.index < acc.index);
}
function comparatorPreferLast(acc, next) {
  const diff = compareSpecificity(next.specificity, acc.specificity);
  return diff > 0 || (diff === 0 && next.index > acc.index);
}
var DecisionTree, Picker;
var init_selderee = __esm({
  '../../node_modules/selderee/lib/selderee.mjs'() {
    'use strict';
    init_parseley();
    init_parseley();
    DecisionTree = class {
      constructor(input) {
        this.branches = weave(toAstTerminalPairs(input));
      }
      build(builder) {
        return builder(this.branches);
      }
    };
    Picker = class {
      constructor(f) {
        this.f = f;
      }
      pickAll(el) {
        return this.f(el);
      }
      pick1(el, preferFirst = false) {
        const results = this.f(el);
        const len = results.length;
        if (len === 0) {
          return null;
        }
        if (len === 1) {
          return results[0].value;
        }
        const comparator = preferFirst
          ? comparatorPreferFirst
          : comparatorPreferLast;
        let result = results[0];
        for (let i = 1; i < len; i++) {
          const next = results[i];
          if (comparator(result, next)) {
            result = next;
          }
        }
        return result.value;
      }
    };
  },
});

// ../../node_modules/@selderee/plugin-htmlparser2/lib/hp2-builder.mjs
function hp2Builder(nodes) {
  return new Picker(handleArray(nodes));
}
function handleArray(nodes) {
  const matchers = nodes.map(handleNode);
  return (el, ...tail) => matchers.flatMap((m2) => m2(el, ...tail));
}
function handleNode(node) {
  switch (node.type) {
    case 'terminal': {
      const result = [node.valueContainer];
      return (el, ...tail) => result;
    }
    case 'tagName':
      return handleTagName(node);
    case 'attrValue':
      return handleAttrValueName(node);
    case 'attrPresence':
      return handleAttrPresenceName(node);
    case 'pushElement':
      return handlePushElementNode(node);
    case 'popElement':
      return handlePopElementNode(node);
  }
}
function handleTagName(node) {
  const variants = {};
  for (const variant of node.variants) {
    variants[variant.value] = handleArray(variant.cont);
  }
  return (el, ...tail) => {
    const continuation = variants[el.name];
    return continuation ? continuation(el, ...tail) : [];
  };
}
function handleAttrPresenceName(node) {
  const attrName = node.name;
  const continuation = handleArray(node.cont);
  return (el, ...tail) =>
    Object.prototype.hasOwnProperty.call(el.attribs, attrName)
      ? continuation(el, ...tail)
      : [];
}
function handleAttrValueName(node) {
  const callbacks = [];
  for (const matcher of node.matchers) {
    const predicate = matcher.predicate;
    const continuation = handleArray(matcher.cont);
    callbacks.push((attr, el, ...tail) =>
      predicate(attr) ? continuation(el, ...tail) : []
    );
  }
  const attrName = node.name;
  return (el, ...tail) => {
    const attr = el.attribs[attrName];
    return attr || attr === ''
      ? callbacks.flatMap((cb) => cb(attr, el, ...tail))
      : [];
  };
}
function handlePushElementNode(node) {
  const continuation = handleArray(node.cont);
  const leftElementGetter =
    node.combinator === '+' ? getPrecedingElement : getParentElement;
  return (el, ...tail) => {
    const next = leftElementGetter(el);
    if (next === null) {
      return [];
    }
    return continuation(next, el, ...tail);
  };
}
function handlePopElementNode(node) {
  const continuation = handleArray(node.cont);
  return (el, next, ...tail) => continuation(next, ...tail);
}
var getPrecedingElement, getParentElement;
var init_hp2_builder = __esm({
  '../../node_modules/@selderee/plugin-htmlparser2/lib/hp2-builder.mjs'() {
    'use strict';
    init_esm2();
    init_selderee();
    getPrecedingElement = (el) => {
      const prev = el.prev;
      if (prev === null) {
        return null;
      }
      return isTag2(prev) ? prev : getPrecedingElement(prev);
    };
    getParentElement = (el) => {
      const parent = el.parent;
      return parent && isTag2(parent) ? parent : null;
    };
  },
});

// ../../node_modules/html-to-text/node_modules/entities/lib/esm/generated/decode-data-html.js
var decode_data_html_default;
var init_decode_data_html = __esm({
  '../../node_modules/html-to-text/node_modules/entities/lib/esm/generated/decode-data-html.js'() {
    'use strict';
    decode_data_html_default = new Uint16Array(
      // prettier-ignore
      '\u1D41<\xD5\u0131\u028A\u049D\u057B\u05D0\u0675\u06DE\u07A2\u07D6\u080F\u0A4A\u0A91\u0DA1\u0E6D\u0F09\u0F26\u10CA\u1228\u12E1\u1415\u149D\u14C3\u14DF\u1525\0\0\0\0\0\0\u156B\u16CD\u198D\u1C12\u1DDD\u1F7E\u2060\u21B0\u228D\u23C0\u23FB\u2442\u2824\u2912\u2D08\u2E48\u2FCE\u3016\u32BA\u3639\u37AC\u38FE\u3A28\u3A71\u3AE0\u3B2E\u0800EMabcfglmnoprstu\\bfms\x7F\x84\x8B\x90\x95\x98\xA6\xB3\xB9\xC8\xCFlig\u803B\xC6\u40C6P\u803B&\u4026cute\u803B\xC1\u40C1reve;\u4102\u0100iyx}rc\u803B\xC2\u40C2;\u4410r;\uC000\u{1D504}rave\u803B\xC0\u40C0pha;\u4391acr;\u4100d;\u6A53\u0100gp\x9D\xA1on;\u4104f;\uC000\u{1D538}plyFunction;\u6061ing\u803B\xC5\u40C5\u0100cs\xBE\xC3r;\uC000\u{1D49C}ign;\u6254ilde\u803B\xC3\u40C3ml\u803B\xC4\u40C4\u0400aceforsu\xE5\xFB\xFE\u0117\u011C\u0122\u0127\u012A\u0100cr\xEA\xF2kslash;\u6216\u0176\xF6\xF8;\u6AE7ed;\u6306y;\u4411\u0180crt\u0105\u010B\u0114ause;\u6235noullis;\u612Ca;\u4392r;\uC000\u{1D505}pf;\uC000\u{1D539}eve;\u42D8c\xF2\u0113mpeq;\u624E\u0700HOacdefhilorsu\u014D\u0151\u0156\u0180\u019E\u01A2\u01B5\u01B7\u01BA\u01DC\u0215\u0273\u0278\u027Ecy;\u4427PY\u803B\xA9\u40A9\u0180cpy\u015D\u0162\u017Aute;\u4106\u0100;i\u0167\u0168\u62D2talDifferentialD;\u6145leys;\u612D\u0200aeio\u0189\u018E\u0194\u0198ron;\u410Cdil\u803B\xC7\u40C7rc;\u4108nint;\u6230ot;\u410A\u0100dn\u01A7\u01ADilla;\u40B8terDot;\u40B7\xF2\u017Fi;\u43A7rcle\u0200DMPT\u01C7\u01CB\u01D1\u01D6ot;\u6299inus;\u6296lus;\u6295imes;\u6297o\u0100cs\u01E2\u01F8kwiseContourIntegral;\u6232eCurly\u0100DQ\u0203\u020FoubleQuote;\u601Duote;\u6019\u0200lnpu\u021E\u0228\u0247\u0255on\u0100;e\u0225\u0226\u6237;\u6A74\u0180git\u022F\u0236\u023Aruent;\u6261nt;\u622FourIntegral;\u622E\u0100fr\u024C\u024E;\u6102oduct;\u6210nterClockwiseContourIntegral;\u6233oss;\u6A2Fcr;\uC000\u{1D49E}p\u0100;C\u0284\u0285\u62D3ap;\u624D\u0580DJSZacefios\u02A0\u02AC\u02B0\u02B4\u02B8\u02CB\u02D7\u02E1\u02E6\u0333\u048D\u0100;o\u0179\u02A5trahd;\u6911cy;\u4402cy;\u4405cy;\u440F\u0180grs\u02BF\u02C4\u02C7ger;\u6021r;\u61A1hv;\u6AE4\u0100ay\u02D0\u02D5ron;\u410E;\u4414l\u0100;t\u02DD\u02DE\u6207a;\u4394r;\uC000\u{1D507}\u0100af\u02EB\u0327\u0100cm\u02F0\u0322ritical\u0200ADGT\u0300\u0306\u0316\u031Ccute;\u40B4o\u0174\u030B\u030D;\u42D9bleAcute;\u42DDrave;\u4060ilde;\u42DCond;\u62C4ferentialD;\u6146\u0470\u033D\0\0\0\u0342\u0354\0\u0405f;\uC000\u{1D53B}\u0180;DE\u0348\u0349\u034D\u40A8ot;\u60DCqual;\u6250ble\u0300CDLRUV\u0363\u0372\u0382\u03CF\u03E2\u03F8ontourIntegra\xEC\u0239o\u0274\u0379\0\0\u037B\xBB\u0349nArrow;\u61D3\u0100eo\u0387\u03A4ft\u0180ART\u0390\u0396\u03A1rrow;\u61D0ightArrow;\u61D4e\xE5\u02CAng\u0100LR\u03AB\u03C4eft\u0100AR\u03B3\u03B9rrow;\u67F8ightArrow;\u67FAightArrow;\u67F9ight\u0100AT\u03D8\u03DErrow;\u61D2ee;\u62A8p\u0241\u03E9\0\0\u03EFrrow;\u61D1ownArrow;\u61D5erticalBar;\u6225n\u0300ABLRTa\u0412\u042A\u0430\u045E\u047F\u037Crrow\u0180;BU\u041D\u041E\u0422\u6193ar;\u6913pArrow;\u61F5reve;\u4311eft\u02D2\u043A\0\u0446\0\u0450ightVector;\u6950eeVector;\u695Eector\u0100;B\u0459\u045A\u61BDar;\u6956ight\u01D4\u0467\0\u0471eeVector;\u695Fector\u0100;B\u047A\u047B\u61C1ar;\u6957ee\u0100;A\u0486\u0487\u62A4rrow;\u61A7\u0100ct\u0492\u0497r;\uC000\u{1D49F}rok;\u4110\u0800NTacdfglmopqstux\u04BD\u04C0\u04C4\u04CB\u04DE\u04E2\u04E7\u04EE\u04F5\u0521\u052F\u0536\u0552\u055D\u0560\u0565G;\u414AH\u803B\xD0\u40D0cute\u803B\xC9\u40C9\u0180aiy\u04D2\u04D7\u04DCron;\u411Arc\u803B\xCA\u40CA;\u442Dot;\u4116r;\uC000\u{1D508}rave\u803B\xC8\u40C8ement;\u6208\u0100ap\u04FA\u04FEcr;\u4112ty\u0253\u0506\0\0\u0512mallSquare;\u65FBerySmallSquare;\u65AB\u0100gp\u0526\u052Aon;\u4118f;\uC000\u{1D53C}silon;\u4395u\u0100ai\u053C\u0549l\u0100;T\u0542\u0543\u6A75ilde;\u6242librium;\u61CC\u0100ci\u0557\u055Ar;\u6130m;\u6A73a;\u4397ml\u803B\xCB\u40CB\u0100ip\u056A\u056Fsts;\u6203onentialE;\u6147\u0280cfios\u0585\u0588\u058D\u05B2\u05CCy;\u4424r;\uC000\u{1D509}lled\u0253\u0597\0\0\u05A3mallSquare;\u65FCerySmallSquare;\u65AA\u0370\u05BA\0\u05BF\0\0\u05C4f;\uC000\u{1D53D}All;\u6200riertrf;\u6131c\xF2\u05CB\u0600JTabcdfgorst\u05E8\u05EC\u05EF\u05FA\u0600\u0612\u0616\u061B\u061D\u0623\u066C\u0672cy;\u4403\u803B>\u403Emma\u0100;d\u05F7\u05F8\u4393;\u43DCreve;\u411E\u0180eiy\u0607\u060C\u0610dil;\u4122rc;\u411C;\u4413ot;\u4120r;\uC000\u{1D50A};\u62D9pf;\uC000\u{1D53E}eater\u0300EFGLST\u0635\u0644\u064E\u0656\u065B\u0666qual\u0100;L\u063E\u063F\u6265ess;\u62DBullEqual;\u6267reater;\u6AA2ess;\u6277lantEqual;\u6A7Eilde;\u6273cr;\uC000\u{1D4A2};\u626B\u0400Aacfiosu\u0685\u068B\u0696\u069B\u069E\u06AA\u06BE\u06CARDcy;\u442A\u0100ct\u0690\u0694ek;\u42C7;\u405Eirc;\u4124r;\u610ClbertSpace;\u610B\u01F0\u06AF\0\u06B2f;\u610DizontalLine;\u6500\u0100ct\u06C3\u06C5\xF2\u06A9rok;\u4126mp\u0144\u06D0\u06D8ownHum\xF0\u012Fqual;\u624F\u0700EJOacdfgmnostu\u06FA\u06FE\u0703\u0707\u070E\u071A\u071E\u0721\u0728\u0744\u0778\u078B\u078F\u0795cy;\u4415lig;\u4132cy;\u4401cute\u803B\xCD\u40CD\u0100iy\u0713\u0718rc\u803B\xCE\u40CE;\u4418ot;\u4130r;\u6111rave\u803B\xCC\u40CC\u0180;ap\u0720\u072F\u073F\u0100cg\u0734\u0737r;\u412AinaryI;\u6148lie\xF3\u03DD\u01F4\u0749\0\u0762\u0100;e\u074D\u074E\u622C\u0100gr\u0753\u0758ral;\u622Bsection;\u62C2isible\u0100CT\u076C\u0772omma;\u6063imes;\u6062\u0180gpt\u077F\u0783\u0788on;\u412Ef;\uC000\u{1D540}a;\u4399cr;\u6110ilde;\u4128\u01EB\u079A\0\u079Ecy;\u4406l\u803B\xCF\u40CF\u0280cfosu\u07AC\u07B7\u07BC\u07C2\u07D0\u0100iy\u07B1\u07B5rc;\u4134;\u4419r;\uC000\u{1D50D}pf;\uC000\u{1D541}\u01E3\u07C7\0\u07CCr;\uC000\u{1D4A5}rcy;\u4408kcy;\u4404\u0380HJacfos\u07E4\u07E8\u07EC\u07F1\u07FD\u0802\u0808cy;\u4425cy;\u440Cppa;\u439A\u0100ey\u07F6\u07FBdil;\u4136;\u441Ar;\uC000\u{1D50E}pf;\uC000\u{1D542}cr;\uC000\u{1D4A6}\u0580JTaceflmost\u0825\u0829\u082C\u0850\u0863\u09B3\u09B8\u09C7\u09CD\u0A37\u0A47cy;\u4409\u803B<\u403C\u0280cmnpr\u0837\u083C\u0841\u0844\u084Dute;\u4139bda;\u439Bg;\u67EAlacetrf;\u6112r;\u619E\u0180aey\u0857\u085C\u0861ron;\u413Ddil;\u413B;\u441B\u0100fs\u0868\u0970t\u0500ACDFRTUVar\u087E\u08A9\u08B1\u08E0\u08E6\u08FC\u092F\u095B\u0390\u096A\u0100nr\u0883\u088FgleBracket;\u67E8row\u0180;BR\u0899\u089A\u089E\u6190ar;\u61E4ightArrow;\u61C6eiling;\u6308o\u01F5\u08B7\0\u08C3bleBracket;\u67E6n\u01D4\u08C8\0\u08D2eeVector;\u6961ector\u0100;B\u08DB\u08DC\u61C3ar;\u6959loor;\u630Aight\u0100AV\u08EF\u08F5rrow;\u6194ector;\u694E\u0100er\u0901\u0917e\u0180;AV\u0909\u090A\u0910\u62A3rrow;\u61A4ector;\u695Aiangle\u0180;BE\u0924\u0925\u0929\u62B2ar;\u69CFqual;\u62B4p\u0180DTV\u0937\u0942\u094CownVector;\u6951eeVector;\u6960ector\u0100;B\u0956\u0957\u61BFar;\u6958ector\u0100;B\u0965\u0966\u61BCar;\u6952ight\xE1\u039Cs\u0300EFGLST\u097E\u098B\u0995\u099D\u09A2\u09ADqualGreater;\u62DAullEqual;\u6266reater;\u6276ess;\u6AA1lantEqual;\u6A7Dilde;\u6272r;\uC000\u{1D50F}\u0100;e\u09BD\u09BE\u62D8ftarrow;\u61DAidot;\u413F\u0180npw\u09D4\u0A16\u0A1Bg\u0200LRlr\u09DE\u09F7\u0A02\u0A10eft\u0100AR\u09E6\u09ECrrow;\u67F5ightArrow;\u67F7ightArrow;\u67F6eft\u0100ar\u03B3\u0A0Aight\xE1\u03BFight\xE1\u03CAf;\uC000\u{1D543}er\u0100LR\u0A22\u0A2CeftArrow;\u6199ightArrow;\u6198\u0180cht\u0A3E\u0A40\u0A42\xF2\u084C;\u61B0rok;\u4141;\u626A\u0400acefiosu\u0A5A\u0A5D\u0A60\u0A77\u0A7C\u0A85\u0A8B\u0A8Ep;\u6905y;\u441C\u0100dl\u0A65\u0A6FiumSpace;\u605Flintrf;\u6133r;\uC000\u{1D510}nusPlus;\u6213pf;\uC000\u{1D544}c\xF2\u0A76;\u439C\u0480Jacefostu\u0AA3\u0AA7\u0AAD\u0AC0\u0B14\u0B19\u0D91\u0D97\u0D9Ecy;\u440Acute;\u4143\u0180aey\u0AB4\u0AB9\u0ABEron;\u4147dil;\u4145;\u441D\u0180gsw\u0AC7\u0AF0\u0B0Eative\u0180MTV\u0AD3\u0ADF\u0AE8ediumSpace;\u600Bhi\u0100cn\u0AE6\u0AD8\xEB\u0AD9eryThi\xEE\u0AD9ted\u0100GL\u0AF8\u0B06reaterGreate\xF2\u0673essLes\xF3\u0A48Line;\u400Ar;\uC000\u{1D511}\u0200Bnpt\u0B22\u0B28\u0B37\u0B3Areak;\u6060BreakingSpace;\u40A0f;\u6115\u0680;CDEGHLNPRSTV\u0B55\u0B56\u0B6A\u0B7C\u0BA1\u0BEB\u0C04\u0C5E\u0C84\u0CA6\u0CD8\u0D61\u0D85\u6AEC\u0100ou\u0B5B\u0B64ngruent;\u6262pCap;\u626DoubleVerticalBar;\u6226\u0180lqx\u0B83\u0B8A\u0B9Bement;\u6209ual\u0100;T\u0B92\u0B93\u6260ilde;\uC000\u2242\u0338ists;\u6204reater\u0380;EFGLST\u0BB6\u0BB7\u0BBD\u0BC9\u0BD3\u0BD8\u0BE5\u626Fqual;\u6271ullEqual;\uC000\u2267\u0338reater;\uC000\u226B\u0338ess;\u6279lantEqual;\uC000\u2A7E\u0338ilde;\u6275ump\u0144\u0BF2\u0BFDownHump;\uC000\u224E\u0338qual;\uC000\u224F\u0338e\u0100fs\u0C0A\u0C27tTriangle\u0180;BE\u0C1A\u0C1B\u0C21\u62EAar;\uC000\u29CF\u0338qual;\u62ECs\u0300;EGLST\u0C35\u0C36\u0C3C\u0C44\u0C4B\u0C58\u626Equal;\u6270reater;\u6278ess;\uC000\u226A\u0338lantEqual;\uC000\u2A7D\u0338ilde;\u6274ested\u0100GL\u0C68\u0C79reaterGreater;\uC000\u2AA2\u0338essLess;\uC000\u2AA1\u0338recedes\u0180;ES\u0C92\u0C93\u0C9B\u6280qual;\uC000\u2AAF\u0338lantEqual;\u62E0\u0100ei\u0CAB\u0CB9verseElement;\u620CghtTriangle\u0180;BE\u0CCB\u0CCC\u0CD2\u62EBar;\uC000\u29D0\u0338qual;\u62ED\u0100qu\u0CDD\u0D0CuareSu\u0100bp\u0CE8\u0CF9set\u0100;E\u0CF0\u0CF3\uC000\u228F\u0338qual;\u62E2erset\u0100;E\u0D03\u0D06\uC000\u2290\u0338qual;\u62E3\u0180bcp\u0D13\u0D24\u0D4Eset\u0100;E\u0D1B\u0D1E\uC000\u2282\u20D2qual;\u6288ceeds\u0200;EST\u0D32\u0D33\u0D3B\u0D46\u6281qual;\uC000\u2AB0\u0338lantEqual;\u62E1ilde;\uC000\u227F\u0338erset\u0100;E\u0D58\u0D5B\uC000\u2283\u20D2qual;\u6289ilde\u0200;EFT\u0D6E\u0D6F\u0D75\u0D7F\u6241qual;\u6244ullEqual;\u6247ilde;\u6249erticalBar;\u6224cr;\uC000\u{1D4A9}ilde\u803B\xD1\u40D1;\u439D\u0700Eacdfgmoprstuv\u0DBD\u0DC2\u0DC9\u0DD5\u0DDB\u0DE0\u0DE7\u0DFC\u0E02\u0E20\u0E22\u0E32\u0E3F\u0E44lig;\u4152cute\u803B\xD3\u40D3\u0100iy\u0DCE\u0DD3rc\u803B\xD4\u40D4;\u441Eblac;\u4150r;\uC000\u{1D512}rave\u803B\xD2\u40D2\u0180aei\u0DEE\u0DF2\u0DF6cr;\u414Cga;\u43A9cron;\u439Fpf;\uC000\u{1D546}enCurly\u0100DQ\u0E0E\u0E1AoubleQuote;\u601Cuote;\u6018;\u6A54\u0100cl\u0E27\u0E2Cr;\uC000\u{1D4AA}ash\u803B\xD8\u40D8i\u016C\u0E37\u0E3Cde\u803B\xD5\u40D5es;\u6A37ml\u803B\xD6\u40D6er\u0100BP\u0E4B\u0E60\u0100ar\u0E50\u0E53r;\u603Eac\u0100ek\u0E5A\u0E5C;\u63DEet;\u63B4arenthesis;\u63DC\u0480acfhilors\u0E7F\u0E87\u0E8A\u0E8F\u0E92\u0E94\u0E9D\u0EB0\u0EFCrtialD;\u6202y;\u441Fr;\uC000\u{1D513}i;\u43A6;\u43A0usMinus;\u40B1\u0100ip\u0EA2\u0EADncareplan\xE5\u069Df;\u6119\u0200;eio\u0EB9\u0EBA\u0EE0\u0EE4\u6ABBcedes\u0200;EST\u0EC8\u0EC9\u0ECF\u0EDA\u627Aqual;\u6AAFlantEqual;\u627Cilde;\u627Eme;\u6033\u0100dp\u0EE9\u0EEEuct;\u620Fortion\u0100;a\u0225\u0EF9l;\u621D\u0100ci\u0F01\u0F06r;\uC000\u{1D4AB};\u43A8\u0200Ufos\u0F11\u0F16\u0F1B\u0F1FOT\u803B"\u4022r;\uC000\u{1D514}pf;\u611Acr;\uC000\u{1D4AC}\u0600BEacefhiorsu\u0F3E\u0F43\u0F47\u0F60\u0F73\u0FA7\u0FAA\u0FAD\u1096\u10A9\u10B4\u10BEarr;\u6910G\u803B\xAE\u40AE\u0180cnr\u0F4E\u0F53\u0F56ute;\u4154g;\u67EBr\u0100;t\u0F5C\u0F5D\u61A0l;\u6916\u0180aey\u0F67\u0F6C\u0F71ron;\u4158dil;\u4156;\u4420\u0100;v\u0F78\u0F79\u611Cerse\u0100EU\u0F82\u0F99\u0100lq\u0F87\u0F8Eement;\u620Builibrium;\u61CBpEquilibrium;\u696Fr\xBB\u0F79o;\u43A1ght\u0400ACDFTUVa\u0FC1\u0FEB\u0FF3\u1022\u1028\u105B\u1087\u03D8\u0100nr\u0FC6\u0FD2gleBracket;\u67E9row\u0180;BL\u0FDC\u0FDD\u0FE1\u6192ar;\u61E5eftArrow;\u61C4eiling;\u6309o\u01F5\u0FF9\0\u1005bleBracket;\u67E7n\u01D4\u100A\0\u1014eeVector;\u695Dector\u0100;B\u101D\u101E\u61C2ar;\u6955loor;\u630B\u0100er\u102D\u1043e\u0180;AV\u1035\u1036\u103C\u62A2rrow;\u61A6ector;\u695Biangle\u0180;BE\u1050\u1051\u1055\u62B3ar;\u69D0qual;\u62B5p\u0180DTV\u1063\u106E\u1078ownVector;\u694FeeVector;\u695Cector\u0100;B\u1082\u1083\u61BEar;\u6954ector\u0100;B\u1091\u1092\u61C0ar;\u6953\u0100pu\u109B\u109Ef;\u611DndImplies;\u6970ightarrow;\u61DB\u0100ch\u10B9\u10BCr;\u611B;\u61B1leDelayed;\u69F4\u0680HOacfhimoqstu\u10E4\u10F1\u10F7\u10FD\u1119\u111E\u1151\u1156\u1161\u1167\u11B5\u11BB\u11BF\u0100Cc\u10E9\u10EEHcy;\u4429y;\u4428FTcy;\u442Ccute;\u415A\u0280;aeiy\u1108\u1109\u110E\u1113\u1117\u6ABCron;\u4160dil;\u415Erc;\u415C;\u4421r;\uC000\u{1D516}ort\u0200DLRU\u112A\u1134\u113E\u1149ownArrow\xBB\u041EeftArrow\xBB\u089AightArrow\xBB\u0FDDpArrow;\u6191gma;\u43A3allCircle;\u6218pf;\uC000\u{1D54A}\u0272\u116D\0\0\u1170t;\u621Aare\u0200;ISU\u117B\u117C\u1189\u11AF\u65A1ntersection;\u6293u\u0100bp\u118F\u119Eset\u0100;E\u1197\u1198\u628Fqual;\u6291erset\u0100;E\u11A8\u11A9\u6290qual;\u6292nion;\u6294cr;\uC000\u{1D4AE}ar;\u62C6\u0200bcmp\u11C8\u11DB\u1209\u120B\u0100;s\u11CD\u11CE\u62D0et\u0100;E\u11CD\u11D5qual;\u6286\u0100ch\u11E0\u1205eeds\u0200;EST\u11ED\u11EE\u11F4\u11FF\u627Bqual;\u6AB0lantEqual;\u627Dilde;\u627FTh\xE1\u0F8C;\u6211\u0180;es\u1212\u1213\u1223\u62D1rset\u0100;E\u121C\u121D\u6283qual;\u6287et\xBB\u1213\u0580HRSacfhiors\u123E\u1244\u1249\u1255\u125E\u1271\u1276\u129F\u12C2\u12C8\u12D1ORN\u803B\xDE\u40DEADE;\u6122\u0100Hc\u124E\u1252cy;\u440By;\u4426\u0100bu\u125A\u125C;\u4009;\u43A4\u0180aey\u1265\u126A\u126Fron;\u4164dil;\u4162;\u4422r;\uC000\u{1D517}\u0100ei\u127B\u1289\u01F2\u1280\0\u1287efore;\u6234a;\u4398\u0100cn\u128E\u1298kSpace;\uC000\u205F\u200ASpace;\u6009lde\u0200;EFT\u12AB\u12AC\u12B2\u12BC\u623Cqual;\u6243ullEqual;\u6245ilde;\u6248pf;\uC000\u{1D54B}ipleDot;\u60DB\u0100ct\u12D6\u12DBr;\uC000\u{1D4AF}rok;\u4166\u0AE1\u12F7\u130E\u131A\u1326\0\u132C\u1331\0\0\0\0\0\u1338\u133D\u1377\u1385\0\u13FF\u1404\u140A\u1410\u0100cr\u12FB\u1301ute\u803B\xDA\u40DAr\u0100;o\u1307\u1308\u619Fcir;\u6949r\u01E3\u1313\0\u1316y;\u440Eve;\u416C\u0100iy\u131E\u1323rc\u803B\xDB\u40DB;\u4423blac;\u4170r;\uC000\u{1D518}rave\u803B\xD9\u40D9acr;\u416A\u0100di\u1341\u1369er\u0100BP\u1348\u135D\u0100ar\u134D\u1350r;\u405Fac\u0100ek\u1357\u1359;\u63DFet;\u63B5arenthesis;\u63DDon\u0100;P\u1370\u1371\u62C3lus;\u628E\u0100gp\u137B\u137Fon;\u4172f;\uC000\u{1D54C}\u0400ADETadps\u1395\u13AE\u13B8\u13C4\u03E8\u13D2\u13D7\u13F3rrow\u0180;BD\u1150\u13A0\u13A4ar;\u6912ownArrow;\u61C5ownArrow;\u6195quilibrium;\u696Eee\u0100;A\u13CB\u13CC\u62A5rrow;\u61A5own\xE1\u03F3er\u0100LR\u13DE\u13E8eftArrow;\u6196ightArrow;\u6197i\u0100;l\u13F9\u13FA\u43D2on;\u43A5ing;\u416Ecr;\uC000\u{1D4B0}ilde;\u4168ml\u803B\xDC\u40DC\u0480Dbcdefosv\u1427\u142C\u1430\u1433\u143E\u1485\u148A\u1490\u1496ash;\u62ABar;\u6AEBy;\u4412ash\u0100;l\u143B\u143C\u62A9;\u6AE6\u0100er\u1443\u1445;\u62C1\u0180bty\u144C\u1450\u147Aar;\u6016\u0100;i\u144F\u1455cal\u0200BLST\u1461\u1465\u146A\u1474ar;\u6223ine;\u407Ceparator;\u6758ilde;\u6240ThinSpace;\u600Ar;\uC000\u{1D519}pf;\uC000\u{1D54D}cr;\uC000\u{1D4B1}dash;\u62AA\u0280cefos\u14A7\u14AC\u14B1\u14B6\u14BCirc;\u4174dge;\u62C0r;\uC000\u{1D51A}pf;\uC000\u{1D54E}cr;\uC000\u{1D4B2}\u0200fios\u14CB\u14D0\u14D2\u14D8r;\uC000\u{1D51B};\u439Epf;\uC000\u{1D54F}cr;\uC000\u{1D4B3}\u0480AIUacfosu\u14F1\u14F5\u14F9\u14FD\u1504\u150F\u1514\u151A\u1520cy;\u442Fcy;\u4407cy;\u442Ecute\u803B\xDD\u40DD\u0100iy\u1509\u150Drc;\u4176;\u442Br;\uC000\u{1D51C}pf;\uC000\u{1D550}cr;\uC000\u{1D4B4}ml;\u4178\u0400Hacdefos\u1535\u1539\u153F\u154B\u154F\u155D\u1560\u1564cy;\u4416cute;\u4179\u0100ay\u1544\u1549ron;\u417D;\u4417ot;\u417B\u01F2\u1554\0\u155BoWidt\xE8\u0AD9a;\u4396r;\u6128pf;\u6124cr;\uC000\u{1D4B5}\u0BE1\u1583\u158A\u1590\0\u15B0\u15B6\u15BF\0\0\0\0\u15C6\u15DB\u15EB\u165F\u166D\0\u1695\u169B\u16B2\u16B9\0\u16BEcute\u803B\xE1\u40E1reve;\u4103\u0300;Ediuy\u159C\u159D\u15A1\u15A3\u15A8\u15AD\u623E;\uC000\u223E\u0333;\u623Frc\u803B\xE2\u40E2te\u80BB\xB4\u0306;\u4430lig\u803B\xE6\u40E6\u0100;r\xB2\u15BA;\uC000\u{1D51E}rave\u803B\xE0\u40E0\u0100ep\u15CA\u15D6\u0100fp\u15CF\u15D4sym;\u6135\xE8\u15D3ha;\u43B1\u0100ap\u15DFc\u0100cl\u15E4\u15E7r;\u4101g;\u6A3F\u0264\u15F0\0\0\u160A\u0280;adsv\u15FA\u15FB\u15FF\u1601\u1607\u6227nd;\u6A55;\u6A5Clope;\u6A58;\u6A5A\u0380;elmrsz\u1618\u1619\u161B\u161E\u163F\u164F\u1659\u6220;\u69A4e\xBB\u1619sd\u0100;a\u1625\u1626\u6221\u0461\u1630\u1632\u1634\u1636\u1638\u163A\u163C\u163E;\u69A8;\u69A9;\u69AA;\u69AB;\u69AC;\u69AD;\u69AE;\u69AFt\u0100;v\u1645\u1646\u621Fb\u0100;d\u164C\u164D\u62BE;\u699D\u0100pt\u1654\u1657h;\u6222\xBB\xB9arr;\u637C\u0100gp\u1663\u1667on;\u4105f;\uC000\u{1D552}\u0380;Eaeiop\u12C1\u167B\u167D\u1682\u1684\u1687\u168A;\u6A70cir;\u6A6F;\u624Ad;\u624Bs;\u4027rox\u0100;e\u12C1\u1692\xF1\u1683ing\u803B\xE5\u40E5\u0180cty\u16A1\u16A6\u16A8r;\uC000\u{1D4B6};\u402Amp\u0100;e\u12C1\u16AF\xF1\u0288ilde\u803B\xE3\u40E3ml\u803B\xE4\u40E4\u0100ci\u16C2\u16C8onin\xF4\u0272nt;\u6A11\u0800Nabcdefiklnoprsu\u16ED\u16F1\u1730\u173C\u1743\u1748\u1778\u177D\u17E0\u17E6\u1839\u1850\u170D\u193D\u1948\u1970ot;\u6AED\u0100cr\u16F6\u171Ek\u0200ceps\u1700\u1705\u170D\u1713ong;\u624Cpsilon;\u43F6rime;\u6035im\u0100;e\u171A\u171B\u623Dq;\u62CD\u0176\u1722\u1726ee;\u62BDed\u0100;g\u172C\u172D\u6305e\xBB\u172Drk\u0100;t\u135C\u1737brk;\u63B6\u0100oy\u1701\u1741;\u4431quo;\u601E\u0280cmprt\u1753\u175B\u1761\u1764\u1768aus\u0100;e\u010A\u0109ptyv;\u69B0s\xE9\u170Cno\xF5\u0113\u0180ahw\u176F\u1771\u1773;\u43B2;\u6136een;\u626Cr;\uC000\u{1D51F}g\u0380costuvw\u178D\u179D\u17B3\u17C1\u17D5\u17DB\u17DE\u0180aiu\u1794\u1796\u179A\xF0\u0760rc;\u65EFp\xBB\u1371\u0180dpt\u17A4\u17A8\u17ADot;\u6A00lus;\u6A01imes;\u6A02\u0271\u17B9\0\0\u17BEcup;\u6A06ar;\u6605riangle\u0100du\u17CD\u17D2own;\u65BDp;\u65B3plus;\u6A04e\xE5\u1444\xE5\u14ADarow;\u690D\u0180ako\u17ED\u1826\u1835\u0100cn\u17F2\u1823k\u0180lst\u17FA\u05AB\u1802ozenge;\u69EBriangle\u0200;dlr\u1812\u1813\u1818\u181D\u65B4own;\u65BEeft;\u65C2ight;\u65B8k;\u6423\u01B1\u182B\0\u1833\u01B2\u182F\0\u1831;\u6592;\u65914;\u6593ck;\u6588\u0100eo\u183E\u184D\u0100;q\u1843\u1846\uC000=\u20E5uiv;\uC000\u2261\u20E5t;\u6310\u0200ptwx\u1859\u185E\u1867\u186Cf;\uC000\u{1D553}\u0100;t\u13CB\u1863om\xBB\u13CCtie;\u62C8\u0600DHUVbdhmptuv\u1885\u1896\u18AA\u18BB\u18D7\u18DB\u18EC\u18FF\u1905\u190A\u1910\u1921\u0200LRlr\u188E\u1890\u1892\u1894;\u6557;\u6554;\u6556;\u6553\u0280;DUdu\u18A1\u18A2\u18A4\u18A6\u18A8\u6550;\u6566;\u6569;\u6564;\u6567\u0200LRlr\u18B3\u18B5\u18B7\u18B9;\u655D;\u655A;\u655C;\u6559\u0380;HLRhlr\u18CA\u18CB\u18CD\u18CF\u18D1\u18D3\u18D5\u6551;\u656C;\u6563;\u6560;\u656B;\u6562;\u655Fox;\u69C9\u0200LRlr\u18E4\u18E6\u18E8\u18EA;\u6555;\u6552;\u6510;\u650C\u0280;DUdu\u06BD\u18F7\u18F9\u18FB\u18FD;\u6565;\u6568;\u652C;\u6534inus;\u629Flus;\u629Eimes;\u62A0\u0200LRlr\u1919\u191B\u191D\u191F;\u655B;\u6558;\u6518;\u6514\u0380;HLRhlr\u1930\u1931\u1933\u1935\u1937\u1939\u193B\u6502;\u656A;\u6561;\u655E;\u653C;\u6524;\u651C\u0100ev\u0123\u1942bar\u803B\xA6\u40A6\u0200ceio\u1951\u1956\u195A\u1960r;\uC000\u{1D4B7}mi;\u604Fm\u0100;e\u171A\u171Cl\u0180;bh\u1968\u1969\u196B\u405C;\u69C5sub;\u67C8\u016C\u1974\u197El\u0100;e\u1979\u197A\u6022t\xBB\u197Ap\u0180;Ee\u012F\u1985\u1987;\u6AAE\u0100;q\u06DC\u06DB\u0CE1\u19A7\0\u19E8\u1A11\u1A15\u1A32\0\u1A37\u1A50\0\0\u1AB4\0\0\u1AC1\0\0\u1B21\u1B2E\u1B4D\u1B52\0\u1BFD\0\u1C0C\u0180cpr\u19AD\u19B2\u19DDute;\u4107\u0300;abcds\u19BF\u19C0\u19C4\u19CA\u19D5\u19D9\u6229nd;\u6A44rcup;\u6A49\u0100au\u19CF\u19D2p;\u6A4Bp;\u6A47ot;\u6A40;\uC000\u2229\uFE00\u0100eo\u19E2\u19E5t;\u6041\xEE\u0693\u0200aeiu\u19F0\u19FB\u1A01\u1A05\u01F0\u19F5\0\u19F8s;\u6A4Don;\u410Ddil\u803B\xE7\u40E7rc;\u4109ps\u0100;s\u1A0C\u1A0D\u6A4Cm;\u6A50ot;\u410B\u0180dmn\u1A1B\u1A20\u1A26il\u80BB\xB8\u01ADptyv;\u69B2t\u8100\xA2;e\u1A2D\u1A2E\u40A2r\xE4\u01B2r;\uC000\u{1D520}\u0180cei\u1A3D\u1A40\u1A4Dy;\u4447ck\u0100;m\u1A47\u1A48\u6713ark\xBB\u1A48;\u43C7r\u0380;Ecefms\u1A5F\u1A60\u1A62\u1A6B\u1AA4\u1AAA\u1AAE\u65CB;\u69C3\u0180;el\u1A69\u1A6A\u1A6D\u42C6q;\u6257e\u0261\u1A74\0\0\u1A88rrow\u0100lr\u1A7C\u1A81eft;\u61BAight;\u61BB\u0280RSacd\u1A92\u1A94\u1A96\u1A9A\u1A9F\xBB\u0F47;\u64C8st;\u629Birc;\u629Aash;\u629Dnint;\u6A10id;\u6AEFcir;\u69C2ubs\u0100;u\u1ABB\u1ABC\u6663it\xBB\u1ABC\u02EC\u1AC7\u1AD4\u1AFA\0\u1B0Aon\u0100;e\u1ACD\u1ACE\u403A\u0100;q\xC7\xC6\u026D\u1AD9\0\0\u1AE2a\u0100;t\u1ADE\u1ADF\u402C;\u4040\u0180;fl\u1AE8\u1AE9\u1AEB\u6201\xEE\u1160e\u0100mx\u1AF1\u1AF6ent\xBB\u1AE9e\xF3\u024D\u01E7\u1AFE\0\u1B07\u0100;d\u12BB\u1B02ot;\u6A6Dn\xF4\u0246\u0180fry\u1B10\u1B14\u1B17;\uC000\u{1D554}o\xE4\u0254\u8100\xA9;s\u0155\u1B1Dr;\u6117\u0100ao\u1B25\u1B29rr;\u61B5ss;\u6717\u0100cu\u1B32\u1B37r;\uC000\u{1D4B8}\u0100bp\u1B3C\u1B44\u0100;e\u1B41\u1B42\u6ACF;\u6AD1\u0100;e\u1B49\u1B4A\u6AD0;\u6AD2dot;\u62EF\u0380delprvw\u1B60\u1B6C\u1B77\u1B82\u1BAC\u1BD4\u1BF9arr\u0100lr\u1B68\u1B6A;\u6938;\u6935\u0270\u1B72\0\0\u1B75r;\u62DEc;\u62DFarr\u0100;p\u1B7F\u1B80\u61B6;\u693D\u0300;bcdos\u1B8F\u1B90\u1B96\u1BA1\u1BA5\u1BA8\u622Arcap;\u6A48\u0100au\u1B9B\u1B9Ep;\u6A46p;\u6A4Aot;\u628Dr;\u6A45;\uC000\u222A\uFE00\u0200alrv\u1BB5\u1BBF\u1BDE\u1BE3rr\u0100;m\u1BBC\u1BBD\u61B7;\u693Cy\u0180evw\u1BC7\u1BD4\u1BD8q\u0270\u1BCE\0\0\u1BD2re\xE3\u1B73u\xE3\u1B75ee;\u62CEedge;\u62CFen\u803B\xA4\u40A4earrow\u0100lr\u1BEE\u1BF3eft\xBB\u1B80ight\xBB\u1BBDe\xE4\u1BDD\u0100ci\u1C01\u1C07onin\xF4\u01F7nt;\u6231lcty;\u632D\u0980AHabcdefhijlorstuwz\u1C38\u1C3B\u1C3F\u1C5D\u1C69\u1C75\u1C8A\u1C9E\u1CAC\u1CB7\u1CFB\u1CFF\u1D0D\u1D7B\u1D91\u1DAB\u1DBB\u1DC6\u1DCDr\xF2\u0381ar;\u6965\u0200glrs\u1C48\u1C4D\u1C52\u1C54ger;\u6020eth;\u6138\xF2\u1133h\u0100;v\u1C5A\u1C5B\u6010\xBB\u090A\u016B\u1C61\u1C67arow;\u690Fa\xE3\u0315\u0100ay\u1C6E\u1C73ron;\u410F;\u4434\u0180;ao\u0332\u1C7C\u1C84\u0100gr\u02BF\u1C81r;\u61CAtseq;\u6A77\u0180glm\u1C91\u1C94\u1C98\u803B\xB0\u40B0ta;\u43B4ptyv;\u69B1\u0100ir\u1CA3\u1CA8sht;\u697F;\uC000\u{1D521}ar\u0100lr\u1CB3\u1CB5\xBB\u08DC\xBB\u101E\u0280aegsv\u1CC2\u0378\u1CD6\u1CDC\u1CE0m\u0180;os\u0326\u1CCA\u1CD4nd\u0100;s\u0326\u1CD1uit;\u6666amma;\u43DDin;\u62F2\u0180;io\u1CE7\u1CE8\u1CF8\u40F7de\u8100\xF7;o\u1CE7\u1CF0ntimes;\u62C7n\xF8\u1CF7cy;\u4452c\u026F\u1D06\0\0\u1D0Arn;\u631Eop;\u630D\u0280lptuw\u1D18\u1D1D\u1D22\u1D49\u1D55lar;\u4024f;\uC000\u{1D555}\u0280;emps\u030B\u1D2D\u1D37\u1D3D\u1D42q\u0100;d\u0352\u1D33ot;\u6251inus;\u6238lus;\u6214quare;\u62A1blebarwedg\xE5\xFAn\u0180adh\u112E\u1D5D\u1D67ownarrow\xF3\u1C83arpoon\u0100lr\u1D72\u1D76ef\xF4\u1CB4igh\xF4\u1CB6\u0162\u1D7F\u1D85karo\xF7\u0F42\u026F\u1D8A\0\0\u1D8Ern;\u631Fop;\u630C\u0180cot\u1D98\u1DA3\u1DA6\u0100ry\u1D9D\u1DA1;\uC000\u{1D4B9};\u4455l;\u69F6rok;\u4111\u0100dr\u1DB0\u1DB4ot;\u62F1i\u0100;f\u1DBA\u1816\u65BF\u0100ah\u1DC0\u1DC3r\xF2\u0429a\xF2\u0FA6angle;\u69A6\u0100ci\u1DD2\u1DD5y;\u445Fgrarr;\u67FF\u0900Dacdefglmnopqrstux\u1E01\u1E09\u1E19\u1E38\u0578\u1E3C\u1E49\u1E61\u1E7E\u1EA5\u1EAF\u1EBD\u1EE1\u1F2A\u1F37\u1F44\u1F4E\u1F5A\u0100Do\u1E06\u1D34o\xF4\u1C89\u0100cs\u1E0E\u1E14ute\u803B\xE9\u40E9ter;\u6A6E\u0200aioy\u1E22\u1E27\u1E31\u1E36ron;\u411Br\u0100;c\u1E2D\u1E2E\u6256\u803B\xEA\u40EAlon;\u6255;\u444Dot;\u4117\u0100Dr\u1E41\u1E45ot;\u6252;\uC000\u{1D522}\u0180;rs\u1E50\u1E51\u1E57\u6A9Aave\u803B\xE8\u40E8\u0100;d\u1E5C\u1E5D\u6A96ot;\u6A98\u0200;ils\u1E6A\u1E6B\u1E72\u1E74\u6A99nters;\u63E7;\u6113\u0100;d\u1E79\u1E7A\u6A95ot;\u6A97\u0180aps\u1E85\u1E89\u1E97cr;\u4113ty\u0180;sv\u1E92\u1E93\u1E95\u6205et\xBB\u1E93p\u01001;\u1E9D\u1EA4\u0133\u1EA1\u1EA3;\u6004;\u6005\u6003\u0100gs\u1EAA\u1EAC;\u414Bp;\u6002\u0100gp\u1EB4\u1EB8on;\u4119f;\uC000\u{1D556}\u0180als\u1EC4\u1ECE\u1ED2r\u0100;s\u1ECA\u1ECB\u62D5l;\u69E3us;\u6A71i\u0180;lv\u1EDA\u1EDB\u1EDF\u43B5on\xBB\u1EDB;\u43F5\u0200csuv\u1EEA\u1EF3\u1F0B\u1F23\u0100io\u1EEF\u1E31rc\xBB\u1E2E\u0269\u1EF9\0\0\u1EFB\xED\u0548ant\u0100gl\u1F02\u1F06tr\xBB\u1E5Dess\xBB\u1E7A\u0180aei\u1F12\u1F16\u1F1Als;\u403Dst;\u625Fv\u0100;D\u0235\u1F20D;\u6A78parsl;\u69E5\u0100Da\u1F2F\u1F33ot;\u6253rr;\u6971\u0180cdi\u1F3E\u1F41\u1EF8r;\u612Fo\xF4\u0352\u0100ah\u1F49\u1F4B;\u43B7\u803B\xF0\u40F0\u0100mr\u1F53\u1F57l\u803B\xEB\u40EBo;\u60AC\u0180cip\u1F61\u1F64\u1F67l;\u4021s\xF4\u056E\u0100eo\u1F6C\u1F74ctatio\xEE\u0559nential\xE5\u0579\u09E1\u1F92\0\u1F9E\0\u1FA1\u1FA7\0\0\u1FC6\u1FCC\0\u1FD3\0\u1FE6\u1FEA\u2000\0\u2008\u205Allingdotse\xF1\u1E44y;\u4444male;\u6640\u0180ilr\u1FAD\u1FB3\u1FC1lig;\u8000\uFB03\u0269\u1FB9\0\0\u1FBDg;\u8000\uFB00ig;\u8000\uFB04;\uC000\u{1D523}lig;\u8000\uFB01lig;\uC000fj\u0180alt\u1FD9\u1FDC\u1FE1t;\u666Dig;\u8000\uFB02ns;\u65B1of;\u4192\u01F0\u1FEE\0\u1FF3f;\uC000\u{1D557}\u0100ak\u05BF\u1FF7\u0100;v\u1FFC\u1FFD\u62D4;\u6AD9artint;\u6A0D\u0100ao\u200C\u2055\u0100cs\u2011\u2052\u03B1\u201A\u2030\u2038\u2045\u2048\0\u2050\u03B2\u2022\u2025\u2027\u202A\u202C\0\u202E\u803B\xBD\u40BD;\u6153\u803B\xBC\u40BC;\u6155;\u6159;\u615B\u01B3\u2034\0\u2036;\u6154;\u6156\u02B4\u203E\u2041\0\0\u2043\u803B\xBE\u40BE;\u6157;\u615C5;\u6158\u01B6\u204C\0\u204E;\u615A;\u615D8;\u615El;\u6044wn;\u6322cr;\uC000\u{1D4BB}\u0880Eabcdefgijlnorstv\u2082\u2089\u209F\u20A5\u20B0\u20B4\u20F0\u20F5\u20FA\u20FF\u2103\u2112\u2138\u0317\u213E\u2152\u219E\u0100;l\u064D\u2087;\u6A8C\u0180cmp\u2090\u2095\u209Dute;\u41F5ma\u0100;d\u209C\u1CDA\u43B3;\u6A86reve;\u411F\u0100iy\u20AA\u20AErc;\u411D;\u4433ot;\u4121\u0200;lqs\u063E\u0642\u20BD\u20C9\u0180;qs\u063E\u064C\u20C4lan\xF4\u0665\u0200;cdl\u0665\u20D2\u20D5\u20E5c;\u6AA9ot\u0100;o\u20DC\u20DD\u6A80\u0100;l\u20E2\u20E3\u6A82;\u6A84\u0100;e\u20EA\u20ED\uC000\u22DB\uFE00s;\u6A94r;\uC000\u{1D524}\u0100;g\u0673\u061Bmel;\u6137cy;\u4453\u0200;Eaj\u065A\u210C\u210E\u2110;\u6A92;\u6AA5;\u6AA4\u0200Eaes\u211B\u211D\u2129\u2134;\u6269p\u0100;p\u2123\u2124\u6A8Arox\xBB\u2124\u0100;q\u212E\u212F\u6A88\u0100;q\u212E\u211Bim;\u62E7pf;\uC000\u{1D558}\u0100ci\u2143\u2146r;\u610Am\u0180;el\u066B\u214E\u2150;\u6A8E;\u6A90\u8300>;cdlqr\u05EE\u2160\u216A\u216E\u2173\u2179\u0100ci\u2165\u2167;\u6AA7r;\u6A7Aot;\u62D7Par;\u6995uest;\u6A7C\u0280adels\u2184\u216A\u2190\u0656\u219B\u01F0\u2189\0\u218Epro\xF8\u209Er;\u6978q\u0100lq\u063F\u2196les\xF3\u2088i\xED\u066B\u0100en\u21A3\u21ADrtneqq;\uC000\u2269\uFE00\xC5\u21AA\u0500Aabcefkosy\u21C4\u21C7\u21F1\u21F5\u21FA\u2218\u221D\u222F\u2268\u227Dr\xF2\u03A0\u0200ilmr\u21D0\u21D4\u21D7\u21DBrs\xF0\u1484f\xBB\u2024il\xF4\u06A9\u0100dr\u21E0\u21E4cy;\u444A\u0180;cw\u08F4\u21EB\u21EFir;\u6948;\u61ADar;\u610Firc;\u4125\u0180alr\u2201\u220E\u2213rts\u0100;u\u2209\u220A\u6665it\xBB\u220Alip;\u6026con;\u62B9r;\uC000\u{1D525}s\u0100ew\u2223\u2229arow;\u6925arow;\u6926\u0280amopr\u223A\u223E\u2243\u225E\u2263rr;\u61FFtht;\u623Bk\u0100lr\u2249\u2253eftarrow;\u61A9ightarrow;\u61AAf;\uC000\u{1D559}bar;\u6015\u0180clt\u226F\u2274\u2278r;\uC000\u{1D4BD}as\xE8\u21F4rok;\u4127\u0100bp\u2282\u2287ull;\u6043hen\xBB\u1C5B\u0AE1\u22A3\0\u22AA\0\u22B8\u22C5\u22CE\0\u22D5\u22F3\0\0\u22F8\u2322\u2367\u2362\u237F\0\u2386\u23AA\u23B4cute\u803B\xED\u40ED\u0180;iy\u0771\u22B0\u22B5rc\u803B\xEE\u40EE;\u4438\u0100cx\u22BC\u22BFy;\u4435cl\u803B\xA1\u40A1\u0100fr\u039F\u22C9;\uC000\u{1D526}rave\u803B\xEC\u40EC\u0200;ino\u073E\u22DD\u22E9\u22EE\u0100in\u22E2\u22E6nt;\u6A0Ct;\u622Dfin;\u69DCta;\u6129lig;\u4133\u0180aop\u22FE\u231A\u231D\u0180cgt\u2305\u2308\u2317r;\u412B\u0180elp\u071F\u230F\u2313in\xE5\u078Ear\xF4\u0720h;\u4131f;\u62B7ed;\u41B5\u0280;cfot\u04F4\u232C\u2331\u233D\u2341are;\u6105in\u0100;t\u2338\u2339\u621Eie;\u69DDdo\xF4\u2319\u0280;celp\u0757\u234C\u2350\u235B\u2361al;\u62BA\u0100gr\u2355\u2359er\xF3\u1563\xE3\u234Darhk;\u6A17rod;\u6A3C\u0200cgpt\u236F\u2372\u2376\u237By;\u4451on;\u412Ff;\uC000\u{1D55A}a;\u43B9uest\u803B\xBF\u40BF\u0100ci\u238A\u238Fr;\uC000\u{1D4BE}n\u0280;Edsv\u04F4\u239B\u239D\u23A1\u04F3;\u62F9ot;\u62F5\u0100;v\u23A6\u23A7\u62F4;\u62F3\u0100;i\u0777\u23AElde;\u4129\u01EB\u23B8\0\u23BCcy;\u4456l\u803B\xEF\u40EF\u0300cfmosu\u23CC\u23D7\u23DC\u23E1\u23E7\u23F5\u0100iy\u23D1\u23D5rc;\u4135;\u4439r;\uC000\u{1D527}ath;\u4237pf;\uC000\u{1D55B}\u01E3\u23EC\0\u23F1r;\uC000\u{1D4BF}rcy;\u4458kcy;\u4454\u0400acfghjos\u240B\u2416\u2422\u2427\u242D\u2431\u2435\u243Bppa\u0100;v\u2413\u2414\u43BA;\u43F0\u0100ey\u241B\u2420dil;\u4137;\u443Ar;\uC000\u{1D528}reen;\u4138cy;\u4445cy;\u445Cpf;\uC000\u{1D55C}cr;\uC000\u{1D4C0}\u0B80ABEHabcdefghjlmnoprstuv\u2470\u2481\u2486\u248D\u2491\u250E\u253D\u255A\u2580\u264E\u265E\u2665\u2679\u267D\u269A\u26B2\u26D8\u275D\u2768\u278B\u27C0\u2801\u2812\u0180art\u2477\u247A\u247Cr\xF2\u09C6\xF2\u0395ail;\u691Barr;\u690E\u0100;g\u0994\u248B;\u6A8Bar;\u6962\u0963\u24A5\0\u24AA\0\u24B1\0\0\0\0\0\u24B5\u24BA\0\u24C6\u24C8\u24CD\0\u24F9ute;\u413Amptyv;\u69B4ra\xEE\u084Cbda;\u43BBg\u0180;dl\u088E\u24C1\u24C3;\u6991\xE5\u088E;\u6A85uo\u803B\xAB\u40ABr\u0400;bfhlpst\u0899\u24DE\u24E6\u24E9\u24EB\u24EE\u24F1\u24F5\u0100;f\u089D\u24E3s;\u691Fs;\u691D\xEB\u2252p;\u61ABl;\u6939im;\u6973l;\u61A2\u0180;ae\u24FF\u2500\u2504\u6AABil;\u6919\u0100;s\u2509\u250A\u6AAD;\uC000\u2AAD\uFE00\u0180abr\u2515\u2519\u251Drr;\u690Crk;\u6772\u0100ak\u2522\u252Cc\u0100ek\u2528\u252A;\u407B;\u405B\u0100es\u2531\u2533;\u698Bl\u0100du\u2539\u253B;\u698F;\u698D\u0200aeuy\u2546\u254B\u2556\u2558ron;\u413E\u0100di\u2550\u2554il;\u413C\xEC\u08B0\xE2\u2529;\u443B\u0200cqrs\u2563\u2566\u256D\u257Da;\u6936uo\u0100;r\u0E19\u1746\u0100du\u2572\u2577har;\u6967shar;\u694Bh;\u61B2\u0280;fgqs\u258B\u258C\u0989\u25F3\u25FF\u6264t\u0280ahlrt\u2598\u25A4\u25B7\u25C2\u25E8rrow\u0100;t\u0899\u25A1a\xE9\u24F6arpoon\u0100du\u25AF\u25B4own\xBB\u045Ap\xBB\u0966eftarrows;\u61C7ight\u0180ahs\u25CD\u25D6\u25DErrow\u0100;s\u08F4\u08A7arpoon\xF3\u0F98quigarro\xF7\u21F0hreetimes;\u62CB\u0180;qs\u258B\u0993\u25FAlan\xF4\u09AC\u0280;cdgs\u09AC\u260A\u260D\u261D\u2628c;\u6AA8ot\u0100;o\u2614\u2615\u6A7F\u0100;r\u261A\u261B\u6A81;\u6A83\u0100;e\u2622\u2625\uC000\u22DA\uFE00s;\u6A93\u0280adegs\u2633\u2639\u263D\u2649\u264Bppro\xF8\u24C6ot;\u62D6q\u0100gq\u2643\u2645\xF4\u0989gt\xF2\u248C\xF4\u099Bi\xED\u09B2\u0180ilr\u2655\u08E1\u265Asht;\u697C;\uC000\u{1D529}\u0100;E\u099C\u2663;\u6A91\u0161\u2669\u2676r\u0100du\u25B2\u266E\u0100;l\u0965\u2673;\u696Alk;\u6584cy;\u4459\u0280;acht\u0A48\u2688\u268B\u2691\u2696r\xF2\u25C1orne\xF2\u1D08ard;\u696Bri;\u65FA\u0100io\u269F\u26A4dot;\u4140ust\u0100;a\u26AC\u26AD\u63B0che\xBB\u26AD\u0200Eaes\u26BB\u26BD\u26C9\u26D4;\u6268p\u0100;p\u26C3\u26C4\u6A89rox\xBB\u26C4\u0100;q\u26CE\u26CF\u6A87\u0100;q\u26CE\u26BBim;\u62E6\u0400abnoptwz\u26E9\u26F4\u26F7\u271A\u272F\u2741\u2747\u2750\u0100nr\u26EE\u26F1g;\u67ECr;\u61FDr\xEB\u08C1g\u0180lmr\u26FF\u270D\u2714eft\u0100ar\u09E6\u2707ight\xE1\u09F2apsto;\u67FCight\xE1\u09FDparrow\u0100lr\u2725\u2729ef\xF4\u24EDight;\u61AC\u0180afl\u2736\u2739\u273Dr;\u6985;\uC000\u{1D55D}us;\u6A2Dimes;\u6A34\u0161\u274B\u274Fst;\u6217\xE1\u134E\u0180;ef\u2757\u2758\u1800\u65CAnge\xBB\u2758ar\u0100;l\u2764\u2765\u4028t;\u6993\u0280achmt\u2773\u2776\u277C\u2785\u2787r\xF2\u08A8orne\xF2\u1D8Car\u0100;d\u0F98\u2783;\u696D;\u600Eri;\u62BF\u0300achiqt\u2798\u279D\u0A40\u27A2\u27AE\u27BBquo;\u6039r;\uC000\u{1D4C1}m\u0180;eg\u09B2\u27AA\u27AC;\u6A8D;\u6A8F\u0100bu\u252A\u27B3o\u0100;r\u0E1F\u27B9;\u601Arok;\u4142\u8400<;cdhilqr\u082B\u27D2\u2639\u27DC\u27E0\u27E5\u27EA\u27F0\u0100ci\u27D7\u27D9;\u6AA6r;\u6A79re\xE5\u25F2mes;\u62C9arr;\u6976uest;\u6A7B\u0100Pi\u27F5\u27F9ar;\u6996\u0180;ef\u2800\u092D\u181B\u65C3r\u0100du\u2807\u280Dshar;\u694Ahar;\u6966\u0100en\u2817\u2821rtneqq;\uC000\u2268\uFE00\xC5\u281E\u0700Dacdefhilnopsu\u2840\u2845\u2882\u288E\u2893\u28A0\u28A5\u28A8\u28DA\u28E2\u28E4\u0A83\u28F3\u2902Dot;\u623A\u0200clpr\u284E\u2852\u2863\u287Dr\u803B\xAF\u40AF\u0100et\u2857\u2859;\u6642\u0100;e\u285E\u285F\u6720se\xBB\u285F\u0100;s\u103B\u2868to\u0200;dlu\u103B\u2873\u2877\u287Bow\xEE\u048Cef\xF4\u090F\xF0\u13D1ker;\u65AE\u0100oy\u2887\u288Cmma;\u6A29;\u443Cash;\u6014asuredangle\xBB\u1626r;\uC000\u{1D52A}o;\u6127\u0180cdn\u28AF\u28B4\u28C9ro\u803B\xB5\u40B5\u0200;acd\u1464\u28BD\u28C0\u28C4s\xF4\u16A7ir;\u6AF0ot\u80BB\xB7\u01B5us\u0180;bd\u28D2\u1903\u28D3\u6212\u0100;u\u1D3C\u28D8;\u6A2A\u0163\u28DE\u28E1p;\u6ADB\xF2\u2212\xF0\u0A81\u0100dp\u28E9\u28EEels;\u62A7f;\uC000\u{1D55E}\u0100ct\u28F8\u28FDr;\uC000\u{1D4C2}pos\xBB\u159D\u0180;lm\u2909\u290A\u290D\u43BCtimap;\u62B8\u0C00GLRVabcdefghijlmoprstuvw\u2942\u2953\u297E\u2989\u2998\u29DA\u29E9\u2A15\u2A1A\u2A58\u2A5D\u2A83\u2A95\u2AA4\u2AA8\u2B04\u2B07\u2B44\u2B7F\u2BAE\u2C34\u2C67\u2C7C\u2CE9\u0100gt\u2947\u294B;\uC000\u22D9\u0338\u0100;v\u2950\u0BCF\uC000\u226B\u20D2\u0180elt\u295A\u2972\u2976ft\u0100ar\u2961\u2967rrow;\u61CDightarrow;\u61CE;\uC000\u22D8\u0338\u0100;v\u297B\u0C47\uC000\u226A\u20D2ightarrow;\u61CF\u0100Dd\u298E\u2993ash;\u62AFash;\u62AE\u0280bcnpt\u29A3\u29A7\u29AC\u29B1\u29CCla\xBB\u02DEute;\u4144g;\uC000\u2220\u20D2\u0280;Eiop\u0D84\u29BC\u29C0\u29C5\u29C8;\uC000\u2A70\u0338d;\uC000\u224B\u0338s;\u4149ro\xF8\u0D84ur\u0100;a\u29D3\u29D4\u666El\u0100;s\u29D3\u0B38\u01F3\u29DF\0\u29E3p\u80BB\xA0\u0B37mp\u0100;e\u0BF9\u0C00\u0280aeouy\u29F4\u29FE\u2A03\u2A10\u2A13\u01F0\u29F9\0\u29FB;\u6A43on;\u4148dil;\u4146ng\u0100;d\u0D7E\u2A0Aot;\uC000\u2A6D\u0338p;\u6A42;\u443Dash;\u6013\u0380;Aadqsx\u0B92\u2A29\u2A2D\u2A3B\u2A41\u2A45\u2A50rr;\u61D7r\u0100hr\u2A33\u2A36k;\u6924\u0100;o\u13F2\u13F0ot;\uC000\u2250\u0338ui\xF6\u0B63\u0100ei\u2A4A\u2A4Ear;\u6928\xED\u0B98ist\u0100;s\u0BA0\u0B9Fr;\uC000\u{1D52B}\u0200Eest\u0BC5\u2A66\u2A79\u2A7C\u0180;qs\u0BBC\u2A6D\u0BE1\u0180;qs\u0BBC\u0BC5\u2A74lan\xF4\u0BE2i\xED\u0BEA\u0100;r\u0BB6\u2A81\xBB\u0BB7\u0180Aap\u2A8A\u2A8D\u2A91r\xF2\u2971rr;\u61AEar;\u6AF2\u0180;sv\u0F8D\u2A9C\u0F8C\u0100;d\u2AA1\u2AA2\u62FC;\u62FAcy;\u445A\u0380AEadest\u2AB7\u2ABA\u2ABE\u2AC2\u2AC5\u2AF6\u2AF9r\xF2\u2966;\uC000\u2266\u0338rr;\u619Ar;\u6025\u0200;fqs\u0C3B\u2ACE\u2AE3\u2AEFt\u0100ar\u2AD4\u2AD9rro\xF7\u2AC1ightarro\xF7\u2A90\u0180;qs\u0C3B\u2ABA\u2AEAlan\xF4\u0C55\u0100;s\u0C55\u2AF4\xBB\u0C36i\xED\u0C5D\u0100;r\u0C35\u2AFEi\u0100;e\u0C1A\u0C25i\xE4\u0D90\u0100pt\u2B0C\u2B11f;\uC000\u{1D55F}\u8180\xAC;in\u2B19\u2B1A\u2B36\u40ACn\u0200;Edv\u0B89\u2B24\u2B28\u2B2E;\uC000\u22F9\u0338ot;\uC000\u22F5\u0338\u01E1\u0B89\u2B33\u2B35;\u62F7;\u62F6i\u0100;v\u0CB8\u2B3C\u01E1\u0CB8\u2B41\u2B43;\u62FE;\u62FD\u0180aor\u2B4B\u2B63\u2B69r\u0200;ast\u0B7B\u2B55\u2B5A\u2B5Flle\xEC\u0B7Bl;\uC000\u2AFD\u20E5;\uC000\u2202\u0338lint;\u6A14\u0180;ce\u0C92\u2B70\u2B73u\xE5\u0CA5\u0100;c\u0C98\u2B78\u0100;e\u0C92\u2B7D\xF1\u0C98\u0200Aait\u2B88\u2B8B\u2B9D\u2BA7r\xF2\u2988rr\u0180;cw\u2B94\u2B95\u2B99\u619B;\uC000\u2933\u0338;\uC000\u219D\u0338ghtarrow\xBB\u2B95ri\u0100;e\u0CCB\u0CD6\u0380chimpqu\u2BBD\u2BCD\u2BD9\u2B04\u0B78\u2BE4\u2BEF\u0200;cer\u0D32\u2BC6\u0D37\u2BC9u\xE5\u0D45;\uC000\u{1D4C3}ort\u026D\u2B05\0\0\u2BD6ar\xE1\u2B56m\u0100;e\u0D6E\u2BDF\u0100;q\u0D74\u0D73su\u0100bp\u2BEB\u2BED\xE5\u0CF8\xE5\u0D0B\u0180bcp\u2BF6\u2C11\u2C19\u0200;Ees\u2BFF\u2C00\u0D22\u2C04\u6284;\uC000\u2AC5\u0338et\u0100;e\u0D1B\u2C0Bq\u0100;q\u0D23\u2C00c\u0100;e\u0D32\u2C17\xF1\u0D38\u0200;Ees\u2C22\u2C23\u0D5F\u2C27\u6285;\uC000\u2AC6\u0338et\u0100;e\u0D58\u2C2Eq\u0100;q\u0D60\u2C23\u0200gilr\u2C3D\u2C3F\u2C45\u2C47\xEC\u0BD7lde\u803B\xF1\u40F1\xE7\u0C43iangle\u0100lr\u2C52\u2C5Ceft\u0100;e\u0C1A\u2C5A\xF1\u0C26ight\u0100;e\u0CCB\u2C65\xF1\u0CD7\u0100;m\u2C6C\u2C6D\u43BD\u0180;es\u2C74\u2C75\u2C79\u4023ro;\u6116p;\u6007\u0480DHadgilrs\u2C8F\u2C94\u2C99\u2C9E\u2CA3\u2CB0\u2CB6\u2CD3\u2CE3ash;\u62ADarr;\u6904p;\uC000\u224D\u20D2ash;\u62AC\u0100et\u2CA8\u2CAC;\uC000\u2265\u20D2;\uC000>\u20D2nfin;\u69DE\u0180Aet\u2CBD\u2CC1\u2CC5rr;\u6902;\uC000\u2264\u20D2\u0100;r\u2CCA\u2CCD\uC000<\u20D2ie;\uC000\u22B4\u20D2\u0100At\u2CD8\u2CDCrr;\u6903rie;\uC000\u22B5\u20D2im;\uC000\u223C\u20D2\u0180Aan\u2CF0\u2CF4\u2D02rr;\u61D6r\u0100hr\u2CFA\u2CFDk;\u6923\u0100;o\u13E7\u13E5ear;\u6927\u1253\u1A95\0\0\0\0\0\0\0\0\0\0\0\0\0\u2D2D\0\u2D38\u2D48\u2D60\u2D65\u2D72\u2D84\u1B07\0\0\u2D8D\u2DAB\0\u2DC8\u2DCE\0\u2DDC\u2E19\u2E2B\u2E3E\u2E43\u0100cs\u2D31\u1A97ute\u803B\xF3\u40F3\u0100iy\u2D3C\u2D45r\u0100;c\u1A9E\u2D42\u803B\xF4\u40F4;\u443E\u0280abios\u1AA0\u2D52\u2D57\u01C8\u2D5Alac;\u4151v;\u6A38old;\u69BClig;\u4153\u0100cr\u2D69\u2D6Dir;\u69BF;\uC000\u{1D52C}\u036F\u2D79\0\0\u2D7C\0\u2D82n;\u42DBave\u803B\xF2\u40F2;\u69C1\u0100bm\u2D88\u0DF4ar;\u69B5\u0200acit\u2D95\u2D98\u2DA5\u2DA8r\xF2\u1A80\u0100ir\u2D9D\u2DA0r;\u69BEoss;\u69BBn\xE5\u0E52;\u69C0\u0180aei\u2DB1\u2DB5\u2DB9cr;\u414Dga;\u43C9\u0180cdn\u2DC0\u2DC5\u01CDron;\u43BF;\u69B6pf;\uC000\u{1D560}\u0180ael\u2DD4\u2DD7\u01D2r;\u69B7rp;\u69B9\u0380;adiosv\u2DEA\u2DEB\u2DEE\u2E08\u2E0D\u2E10\u2E16\u6228r\xF2\u1A86\u0200;efm\u2DF7\u2DF8\u2E02\u2E05\u6A5Dr\u0100;o\u2DFE\u2DFF\u6134f\xBB\u2DFF\u803B\xAA\u40AA\u803B\xBA\u40BAgof;\u62B6r;\u6A56lope;\u6A57;\u6A5B\u0180clo\u2E1F\u2E21\u2E27\xF2\u2E01ash\u803B\xF8\u40F8l;\u6298i\u016C\u2E2F\u2E34de\u803B\xF5\u40F5es\u0100;a\u01DB\u2E3As;\u6A36ml\u803B\xF6\u40F6bar;\u633D\u0AE1\u2E5E\0\u2E7D\0\u2E80\u2E9D\0\u2EA2\u2EB9\0\0\u2ECB\u0E9C\0\u2F13\0\0\u2F2B\u2FBC\0\u2FC8r\u0200;ast\u0403\u2E67\u2E72\u0E85\u8100\xB6;l\u2E6D\u2E6E\u40B6le\xEC\u0403\u0269\u2E78\0\0\u2E7Bm;\u6AF3;\u6AFDy;\u443Fr\u0280cimpt\u2E8B\u2E8F\u2E93\u1865\u2E97nt;\u4025od;\u402Eil;\u6030enk;\u6031r;\uC000\u{1D52D}\u0180imo\u2EA8\u2EB0\u2EB4\u0100;v\u2EAD\u2EAE\u43C6;\u43D5ma\xF4\u0A76ne;\u660E\u0180;tv\u2EBF\u2EC0\u2EC8\u43C0chfork\xBB\u1FFD;\u43D6\u0100au\u2ECF\u2EDFn\u0100ck\u2ED5\u2EDDk\u0100;h\u21F4\u2EDB;\u610E\xF6\u21F4s\u0480;abcdemst\u2EF3\u2EF4\u1908\u2EF9\u2EFD\u2F04\u2F06\u2F0A\u2F0E\u402Bcir;\u6A23ir;\u6A22\u0100ou\u1D40\u2F02;\u6A25;\u6A72n\u80BB\xB1\u0E9Dim;\u6A26wo;\u6A27\u0180ipu\u2F19\u2F20\u2F25ntint;\u6A15f;\uC000\u{1D561}nd\u803B\xA3\u40A3\u0500;Eaceinosu\u0EC8\u2F3F\u2F41\u2F44\u2F47\u2F81\u2F89\u2F92\u2F7E\u2FB6;\u6AB3p;\u6AB7u\xE5\u0ED9\u0100;c\u0ECE\u2F4C\u0300;acens\u0EC8\u2F59\u2F5F\u2F66\u2F68\u2F7Eppro\xF8\u2F43urlye\xF1\u0ED9\xF1\u0ECE\u0180aes\u2F6F\u2F76\u2F7Approx;\u6AB9qq;\u6AB5im;\u62E8i\xED\u0EDFme\u0100;s\u2F88\u0EAE\u6032\u0180Eas\u2F78\u2F90\u2F7A\xF0\u2F75\u0180dfp\u0EEC\u2F99\u2FAF\u0180als\u2FA0\u2FA5\u2FAAlar;\u632Eine;\u6312urf;\u6313\u0100;t\u0EFB\u2FB4\xEF\u0EFBrel;\u62B0\u0100ci\u2FC0\u2FC5r;\uC000\u{1D4C5};\u43C8ncsp;\u6008\u0300fiopsu\u2FDA\u22E2\u2FDF\u2FE5\u2FEB\u2FF1r;\uC000\u{1D52E}pf;\uC000\u{1D562}rime;\u6057cr;\uC000\u{1D4C6}\u0180aeo\u2FF8\u3009\u3013t\u0100ei\u2FFE\u3005rnion\xF3\u06B0nt;\u6A16st\u0100;e\u3010\u3011\u403F\xF1\u1F19\xF4\u0F14\u0A80ABHabcdefhilmnoprstux\u3040\u3051\u3055\u3059\u30E0\u310E\u312B\u3147\u3162\u3172\u318E\u3206\u3215\u3224\u3229\u3258\u326E\u3272\u3290\u32B0\u32B7\u0180art\u3047\u304A\u304Cr\xF2\u10B3\xF2\u03DDail;\u691Car\xF2\u1C65ar;\u6964\u0380cdenqrt\u3068\u3075\u3078\u307F\u308F\u3094\u30CC\u0100eu\u306D\u3071;\uC000\u223D\u0331te;\u4155i\xE3\u116Emptyv;\u69B3g\u0200;del\u0FD1\u3089\u308B\u308D;\u6992;\u69A5\xE5\u0FD1uo\u803B\xBB\u40BBr\u0580;abcfhlpstw\u0FDC\u30AC\u30AF\u30B7\u30B9\u30BC\u30BE\u30C0\u30C3\u30C7\u30CAp;\u6975\u0100;f\u0FE0\u30B4s;\u6920;\u6933s;\u691E\xEB\u225D\xF0\u272El;\u6945im;\u6974l;\u61A3;\u619D\u0100ai\u30D1\u30D5il;\u691Ao\u0100;n\u30DB\u30DC\u6236al\xF3\u0F1E\u0180abr\u30E7\u30EA\u30EEr\xF2\u17E5rk;\u6773\u0100ak\u30F3\u30FDc\u0100ek\u30F9\u30FB;\u407D;\u405D\u0100es\u3102\u3104;\u698Cl\u0100du\u310A\u310C;\u698E;\u6990\u0200aeuy\u3117\u311C\u3127\u3129ron;\u4159\u0100di\u3121\u3125il;\u4157\xEC\u0FF2\xE2\u30FA;\u4440\u0200clqs\u3134\u3137\u313D\u3144a;\u6937dhar;\u6969uo\u0100;r\u020E\u020Dh;\u61B3\u0180acg\u314E\u315F\u0F44l\u0200;ips\u0F78\u3158\u315B\u109Cn\xE5\u10BBar\xF4\u0FA9t;\u65AD\u0180ilr\u3169\u1023\u316Esht;\u697D;\uC000\u{1D52F}\u0100ao\u3177\u3186r\u0100du\u317D\u317F\xBB\u047B\u0100;l\u1091\u3184;\u696C\u0100;v\u318B\u318C\u43C1;\u43F1\u0180gns\u3195\u31F9\u31FCht\u0300ahlrst\u31A4\u31B0\u31C2\u31D8\u31E4\u31EErrow\u0100;t\u0FDC\u31ADa\xE9\u30C8arpoon\u0100du\u31BB\u31BFow\xEE\u317Ep\xBB\u1092eft\u0100ah\u31CA\u31D0rrow\xF3\u0FEAarpoon\xF3\u0551ightarrows;\u61C9quigarro\xF7\u30CBhreetimes;\u62CCg;\u42DAingdotse\xF1\u1F32\u0180ahm\u320D\u3210\u3213r\xF2\u0FEAa\xF2\u0551;\u600Foust\u0100;a\u321E\u321F\u63B1che\xBB\u321Fmid;\u6AEE\u0200abpt\u3232\u323D\u3240\u3252\u0100nr\u3237\u323Ag;\u67EDr;\u61FEr\xEB\u1003\u0180afl\u3247\u324A\u324Er;\u6986;\uC000\u{1D563}us;\u6A2Eimes;\u6A35\u0100ap\u325D\u3267r\u0100;g\u3263\u3264\u4029t;\u6994olint;\u6A12ar\xF2\u31E3\u0200achq\u327B\u3280\u10BC\u3285quo;\u603Ar;\uC000\u{1D4C7}\u0100bu\u30FB\u328Ao\u0100;r\u0214\u0213\u0180hir\u3297\u329B\u32A0re\xE5\u31F8mes;\u62CAi\u0200;efl\u32AA\u1059\u1821\u32AB\u65B9tri;\u69CEluhar;\u6968;\u611E\u0D61\u32D5\u32DB\u32DF\u332C\u3338\u3371\0\u337A\u33A4\0\0\u33EC\u33F0\0\u3428\u3448\u345A\u34AD\u34B1\u34CA\u34F1\0\u3616\0\0\u3633cute;\u415Bqu\xEF\u27BA\u0500;Eaceinpsy\u11ED\u32F3\u32F5\u32FF\u3302\u330B\u330F\u331F\u3326\u3329;\u6AB4\u01F0\u32FA\0\u32FC;\u6AB8on;\u4161u\xE5\u11FE\u0100;d\u11F3\u3307il;\u415Frc;\u415D\u0180Eas\u3316\u3318\u331B;\u6AB6p;\u6ABAim;\u62E9olint;\u6A13i\xED\u1204;\u4441ot\u0180;be\u3334\u1D47\u3335\u62C5;\u6A66\u0380Aacmstx\u3346\u334A\u3357\u335B\u335E\u3363\u336Drr;\u61D8r\u0100hr\u3350\u3352\xEB\u2228\u0100;o\u0A36\u0A34t\u803B\xA7\u40A7i;\u403Bwar;\u6929m\u0100in\u3369\xF0nu\xF3\xF1t;\u6736r\u0100;o\u3376\u2055\uC000\u{1D530}\u0200acoy\u3382\u3386\u3391\u33A0rp;\u666F\u0100hy\u338B\u338Fcy;\u4449;\u4448rt\u026D\u3399\0\0\u339Ci\xE4\u1464ara\xEC\u2E6F\u803B\xAD\u40AD\u0100gm\u33A8\u33B4ma\u0180;fv\u33B1\u33B2\u33B2\u43C3;\u43C2\u0400;deglnpr\u12AB\u33C5\u33C9\u33CE\u33D6\u33DE\u33E1\u33E6ot;\u6A6A\u0100;q\u12B1\u12B0\u0100;E\u33D3\u33D4\u6A9E;\u6AA0\u0100;E\u33DB\u33DC\u6A9D;\u6A9Fe;\u6246lus;\u6A24arr;\u6972ar\xF2\u113D\u0200aeit\u33F8\u3408\u340F\u3417\u0100ls\u33FD\u3404lsetm\xE9\u336Ahp;\u6A33parsl;\u69E4\u0100dl\u1463\u3414e;\u6323\u0100;e\u341C\u341D\u6AAA\u0100;s\u3422\u3423\u6AAC;\uC000\u2AAC\uFE00\u0180flp\u342E\u3433\u3442tcy;\u444C\u0100;b\u3438\u3439\u402F\u0100;a\u343E\u343F\u69C4r;\u633Ff;\uC000\u{1D564}a\u0100dr\u344D\u0402es\u0100;u\u3454\u3455\u6660it\xBB\u3455\u0180csu\u3460\u3479\u349F\u0100au\u3465\u346Fp\u0100;s\u1188\u346B;\uC000\u2293\uFE00p\u0100;s\u11B4\u3475;\uC000\u2294\uFE00u\u0100bp\u347F\u348F\u0180;es\u1197\u119C\u3486et\u0100;e\u1197\u348D\xF1\u119D\u0180;es\u11A8\u11AD\u3496et\u0100;e\u11A8\u349D\xF1\u11AE\u0180;af\u117B\u34A6\u05B0r\u0165\u34AB\u05B1\xBB\u117Car\xF2\u1148\u0200cemt\u34B9\u34BE\u34C2\u34C5r;\uC000\u{1D4C8}tm\xEE\xF1i\xEC\u3415ar\xE6\u11BE\u0100ar\u34CE\u34D5r\u0100;f\u34D4\u17BF\u6606\u0100an\u34DA\u34EDight\u0100ep\u34E3\u34EApsilo\xEE\u1EE0h\xE9\u2EAFs\xBB\u2852\u0280bcmnp\u34FB\u355E\u1209\u358B\u358E\u0480;Edemnprs\u350E\u350F\u3511\u3515\u351E\u3523\u352C\u3531\u3536\u6282;\u6AC5ot;\u6ABD\u0100;d\u11DA\u351Aot;\u6AC3ult;\u6AC1\u0100Ee\u3528\u352A;\u6ACB;\u628Alus;\u6ABFarr;\u6979\u0180eiu\u353D\u3552\u3555t\u0180;en\u350E\u3545\u354Bq\u0100;q\u11DA\u350Feq\u0100;q\u352B\u3528m;\u6AC7\u0100bp\u355A\u355C;\u6AD5;\u6AD3c\u0300;acens\u11ED\u356C\u3572\u3579\u357B\u3326ppro\xF8\u32FAurlye\xF1\u11FE\xF1\u11F3\u0180aes\u3582\u3588\u331Bppro\xF8\u331Aq\xF1\u3317g;\u666A\u0680123;Edehlmnps\u35A9\u35AC\u35AF\u121C\u35B2\u35B4\u35C0\u35C9\u35D5\u35DA\u35DF\u35E8\u35ED\u803B\xB9\u40B9\u803B\xB2\u40B2\u803B\xB3\u40B3;\u6AC6\u0100os\u35B9\u35BCt;\u6ABEub;\u6AD8\u0100;d\u1222\u35C5ot;\u6AC4s\u0100ou\u35CF\u35D2l;\u67C9b;\u6AD7arr;\u697Bult;\u6AC2\u0100Ee\u35E4\u35E6;\u6ACC;\u628Blus;\u6AC0\u0180eiu\u35F4\u3609\u360Ct\u0180;en\u121C\u35FC\u3602q\u0100;q\u1222\u35B2eq\u0100;q\u35E7\u35E4m;\u6AC8\u0100bp\u3611\u3613;\u6AD4;\u6AD6\u0180Aan\u361C\u3620\u362Drr;\u61D9r\u0100hr\u3626\u3628\xEB\u222E\u0100;o\u0A2B\u0A29war;\u692Alig\u803B\xDF\u40DF\u0BE1\u3651\u365D\u3660\u12CE\u3673\u3679\0\u367E\u36C2\0\0\0\0\0\u36DB\u3703\0\u3709\u376C\0\0\0\u3787\u0272\u3656\0\0\u365Bget;\u6316;\u43C4r\xEB\u0E5F\u0180aey\u3666\u366B\u3670ron;\u4165dil;\u4163;\u4442lrec;\u6315r;\uC000\u{1D531}\u0200eiko\u3686\u369D\u36B5\u36BC\u01F2\u368B\0\u3691e\u01004f\u1284\u1281a\u0180;sv\u3698\u3699\u369B\u43B8ym;\u43D1\u0100cn\u36A2\u36B2k\u0100as\u36A8\u36AEppro\xF8\u12C1im\xBB\u12ACs\xF0\u129E\u0100as\u36BA\u36AE\xF0\u12C1rn\u803B\xFE\u40FE\u01EC\u031F\u36C6\u22E7es\u8180\xD7;bd\u36CF\u36D0\u36D8\u40D7\u0100;a\u190F\u36D5r;\u6A31;\u6A30\u0180eps\u36E1\u36E3\u3700\xE1\u2A4D\u0200;bcf\u0486\u36EC\u36F0\u36F4ot;\u6336ir;\u6AF1\u0100;o\u36F9\u36FC\uC000\u{1D565}rk;\u6ADA\xE1\u3362rime;\u6034\u0180aip\u370F\u3712\u3764d\xE5\u1248\u0380adempst\u3721\u374D\u3740\u3751\u3757\u375C\u375Fngle\u0280;dlqr\u3730\u3731\u3736\u3740\u3742\u65B5own\xBB\u1DBBeft\u0100;e\u2800\u373E\xF1\u092E;\u625Cight\u0100;e\u32AA\u374B\xF1\u105Aot;\u65ECinus;\u6A3Alus;\u6A39b;\u69CDime;\u6A3Bezium;\u63E2\u0180cht\u3772\u377D\u3781\u0100ry\u3777\u377B;\uC000\u{1D4C9};\u4446cy;\u445Brok;\u4167\u0100io\u378B\u378Ex\xF4\u1777head\u0100lr\u3797\u37A0eftarro\xF7\u084Fightarrow\xBB\u0F5D\u0900AHabcdfghlmoprstuw\u37D0\u37D3\u37D7\u37E4\u37F0\u37FC\u380E\u381C\u3823\u3834\u3851\u385D\u386B\u38A9\u38CC\u38D2\u38EA\u38F6r\xF2\u03EDar;\u6963\u0100cr\u37DC\u37E2ute\u803B\xFA\u40FA\xF2\u1150r\u01E3\u37EA\0\u37EDy;\u445Eve;\u416D\u0100iy\u37F5\u37FArc\u803B\xFB\u40FB;\u4443\u0180abh\u3803\u3806\u380Br\xF2\u13ADlac;\u4171a\xF2\u13C3\u0100ir\u3813\u3818sht;\u697E;\uC000\u{1D532}rave\u803B\xF9\u40F9\u0161\u3827\u3831r\u0100lr\u382C\u382E\xBB\u0957\xBB\u1083lk;\u6580\u0100ct\u3839\u384D\u026F\u383F\0\0\u384Arn\u0100;e\u3845\u3846\u631Cr\xBB\u3846op;\u630Fri;\u65F8\u0100al\u3856\u385Acr;\u416B\u80BB\xA8\u0349\u0100gp\u3862\u3866on;\u4173f;\uC000\u{1D566}\u0300adhlsu\u114B\u3878\u387D\u1372\u3891\u38A0own\xE1\u13B3arpoon\u0100lr\u3888\u388Cef\xF4\u382Digh\xF4\u382Fi\u0180;hl\u3899\u389A\u389C\u43C5\xBB\u13FAon\xBB\u389Aparrows;\u61C8\u0180cit\u38B0\u38C4\u38C8\u026F\u38B6\0\0\u38C1rn\u0100;e\u38BC\u38BD\u631Dr\xBB\u38BDop;\u630Eng;\u416Fri;\u65F9cr;\uC000\u{1D4CA}\u0180dir\u38D9\u38DD\u38E2ot;\u62F0lde;\u4169i\u0100;f\u3730\u38E8\xBB\u1813\u0100am\u38EF\u38F2r\xF2\u38A8l\u803B\xFC\u40FCangle;\u69A7\u0780ABDacdeflnoprsz\u391C\u391F\u3929\u392D\u39B5\u39B8\u39BD\u39DF\u39E4\u39E8\u39F3\u39F9\u39FD\u3A01\u3A20r\xF2\u03F7ar\u0100;v\u3926\u3927\u6AE8;\u6AE9as\xE8\u03E1\u0100nr\u3932\u3937grt;\u699C\u0380eknprst\u34E3\u3946\u394B\u3952\u395D\u3964\u3996app\xE1\u2415othin\xE7\u1E96\u0180hir\u34EB\u2EC8\u3959op\xF4\u2FB5\u0100;h\u13B7\u3962\xEF\u318D\u0100iu\u3969\u396Dgm\xE1\u33B3\u0100bp\u3972\u3984setneq\u0100;q\u397D\u3980\uC000\u228A\uFE00;\uC000\u2ACB\uFE00setneq\u0100;q\u398F\u3992\uC000\u228B\uFE00;\uC000\u2ACC\uFE00\u0100hr\u399B\u399Fet\xE1\u369Ciangle\u0100lr\u39AA\u39AFeft\xBB\u0925ight\xBB\u1051y;\u4432ash\xBB\u1036\u0180elr\u39C4\u39D2\u39D7\u0180;be\u2DEA\u39CB\u39CFar;\u62BBq;\u625Alip;\u62EE\u0100bt\u39DC\u1468a\xF2\u1469r;\uC000\u{1D533}tr\xE9\u39AEsu\u0100bp\u39EF\u39F1\xBB\u0D1C\xBB\u0D59pf;\uC000\u{1D567}ro\xF0\u0EFBtr\xE9\u39B4\u0100cu\u3A06\u3A0Br;\uC000\u{1D4CB}\u0100bp\u3A10\u3A18n\u0100Ee\u3980\u3A16\xBB\u397En\u0100Ee\u3992\u3A1E\xBB\u3990igzag;\u699A\u0380cefoprs\u3A36\u3A3B\u3A56\u3A5B\u3A54\u3A61\u3A6Airc;\u4175\u0100di\u3A40\u3A51\u0100bg\u3A45\u3A49ar;\u6A5Fe\u0100;q\u15FA\u3A4F;\u6259erp;\u6118r;\uC000\u{1D534}pf;\uC000\u{1D568}\u0100;e\u1479\u3A66at\xE8\u1479cr;\uC000\u{1D4CC}\u0AE3\u178E\u3A87\0\u3A8B\0\u3A90\u3A9B\0\0\u3A9D\u3AA8\u3AAB\u3AAF\0\0\u3AC3\u3ACE\0\u3AD8\u17DC\u17DFtr\xE9\u17D1r;\uC000\u{1D535}\u0100Aa\u3A94\u3A97r\xF2\u03C3r\xF2\u09F6;\u43BE\u0100Aa\u3AA1\u3AA4r\xF2\u03B8r\xF2\u09EBa\xF0\u2713is;\u62FB\u0180dpt\u17A4\u3AB5\u3ABE\u0100fl\u3ABA\u17A9;\uC000\u{1D569}im\xE5\u17B2\u0100Aa\u3AC7\u3ACAr\xF2\u03CEr\xF2\u0A01\u0100cq\u3AD2\u17B8r;\uC000\u{1D4CD}\u0100pt\u17D6\u3ADCr\xE9\u17D4\u0400acefiosu\u3AF0\u3AFD\u3B08\u3B0C\u3B11\u3B15\u3B1B\u3B21c\u0100uy\u3AF6\u3AFBte\u803B\xFD\u40FD;\u444F\u0100iy\u3B02\u3B06rc;\u4177;\u444Bn\u803B\xA5\u40A5r;\uC000\u{1D536}cy;\u4457pf;\uC000\u{1D56A}cr;\uC000\u{1D4CE}\u0100cm\u3B26\u3B29y;\u444El\u803B\xFF\u40FF\u0500acdefhiosw\u3B42\u3B48\u3B54\u3B58\u3B64\u3B69\u3B6D\u3B74\u3B7A\u3B80cute;\u417A\u0100ay\u3B4D\u3B52ron;\u417E;\u4437ot;\u417C\u0100et\u3B5D\u3B61tr\xE6\u155Fa;\u43B6r;\uC000\u{1D537}cy;\u4436grarr;\u61DDpf;\uC000\u{1D56B}cr;\uC000\u{1D4CF}\u0100jn\u3B85\u3B87;\u600Dj;\u600C'.split("").map((c2) => c2.charCodeAt(0))
    );
  },
});

// ../../node_modules/html-to-text/node_modules/entities/lib/esm/generated/decode-data-xml.js
var decode_data_xml_default;
var init_decode_data_xml = __esm({
  '../../node_modules/html-to-text/node_modules/entities/lib/esm/generated/decode-data-xml.js'() {
    'use strict';
    decode_data_xml_default = new Uint16Array(
      // prettier-ignore
      "\u0200aglq	\x1B\u026D\0\0p;\u4026os;\u4027t;\u403Et;\u403Cuot;\u4022".split("").map((c2) => c2.charCodeAt(0))
    );
  },
});

// ../../node_modules/html-to-text/node_modules/entities/lib/esm/decode_codepoint.js
function replaceCodePoint(codePoint) {
  var _a4;
  if ((codePoint >= 55296 && codePoint <= 57343) || codePoint > 1114111) {
    return 65533;
  }
  return (_a4 = decodeMap.get(codePoint)) !== null && _a4 !== void 0
    ? _a4
    : codePoint;
}
function decodeCodePoint(codePoint) {
  return fromCodePoint(replaceCodePoint(codePoint));
}
var _a2, decodeMap, fromCodePoint;
var init_decode_codepoint = __esm({
  '../../node_modules/html-to-text/node_modules/entities/lib/esm/decode_codepoint.js'() {
    'use strict';
    decodeMap = /* @__PURE__ */ new Map([
      [0, 65533],
      [128, 8364],
      [130, 8218],
      [131, 402],
      [132, 8222],
      [133, 8230],
      [134, 8224],
      [135, 8225],
      [136, 710],
      [137, 8240],
      [138, 352],
      [139, 8249],
      [140, 338],
      [142, 381],
      [145, 8216],
      [146, 8217],
      [147, 8220],
      [148, 8221],
      [149, 8226],
      [150, 8211],
      [151, 8212],
      [152, 732],
      [153, 8482],
      [154, 353],
      [155, 8250],
      [156, 339],
      [158, 382],
      [159, 376],
    ]);
    fromCodePoint = // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, node/no-unsupported-features/es-builtins
      (_a2 = String.fromCodePoint) !== null && _a2 !== void 0
        ? _a2
        : function (codePoint) {
            let output = '';
            if (codePoint > 65535) {
              codePoint -= 65536;
              output += String.fromCharCode(
                ((codePoint >>> 10) & 1023) | 55296
              );
              codePoint = 56320 | (codePoint & 1023);
            }
            output += String.fromCharCode(codePoint);
            return output;
          };
  },
});

// ../../node_modules/html-to-text/node_modules/entities/lib/esm/decode.js
function getDecoder(decodeTree) {
  return function decodeHTMLBinary(str, strict) {
    let ret = '';
    let lastIdx = 0;
    let strIdx = 0;
    while ((strIdx = str.indexOf('&', strIdx)) >= 0) {
      ret += str.slice(lastIdx, strIdx);
      lastIdx = strIdx;
      strIdx += 1;
      if (str.charCodeAt(strIdx) === CharCodes.NUM) {
        let start = strIdx + 1;
        let base = 10;
        let cp2 = str.charCodeAt(start);
        if ((cp2 | CharCodes.To_LOWER_BIT) === CharCodes.LOWER_X) {
          base = 16;
          strIdx += 1;
          start += 1;
        }
        do cp2 = str.charCodeAt(++strIdx);
        while (
          (cp2 >= CharCodes.ZERO && cp2 <= CharCodes.NINE) ||
          (base === 16 &&
            (cp2 | CharCodes.To_LOWER_BIT) >= CharCodes.LOWER_A &&
            (cp2 | CharCodes.To_LOWER_BIT) <= CharCodes.LOWER_F)
        );
        if (start !== strIdx) {
          const entity = str.substring(start, strIdx);
          const parsed = parseInt(entity, base);
          if (str.charCodeAt(strIdx) === CharCodes.SEMI) {
            strIdx += 1;
          } else if (strict) {
            continue;
          }
          ret += decodeCodePoint(parsed);
          lastIdx = strIdx;
        }
        continue;
      }
      let resultIdx = 0;
      let excess = 1;
      let treeIdx = 0;
      let current = decodeTree[treeIdx];
      for (; strIdx < str.length; strIdx++, excess++) {
        treeIdx = determineBranch(
          decodeTree,
          current,
          treeIdx + 1,
          str.charCodeAt(strIdx)
        );
        if (treeIdx < 0) break;
        current = decodeTree[treeIdx];
        const masked = current & BinTrieFlags.VALUE_LENGTH;
        if (masked) {
          if (!strict || str.charCodeAt(strIdx) === CharCodes.SEMI) {
            resultIdx = treeIdx;
            excess = 0;
          }
          const valueLength = (masked >> 14) - 1;
          if (valueLength === 0) break;
          treeIdx += valueLength;
        }
      }
      if (resultIdx !== 0) {
        const valueLength =
          (decodeTree[resultIdx] & BinTrieFlags.VALUE_LENGTH) >> 14;
        ret +=
          valueLength === 1
            ? String.fromCharCode(
                decodeTree[resultIdx] & ~BinTrieFlags.VALUE_LENGTH
              )
            : valueLength === 2
            ? String.fromCharCode(decodeTree[resultIdx + 1])
            : String.fromCharCode(
                decodeTree[resultIdx + 1],
                decodeTree[resultIdx + 2]
              );
        lastIdx = strIdx - excess + 1;
      }
    }
    return ret + str.slice(lastIdx);
  };
}
function determineBranch(decodeTree, current, nodeIdx, char) {
  const branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;
  const jumpOffset = current & BinTrieFlags.JUMP_TABLE;
  if (branchCount === 0) {
    return jumpOffset !== 0 && char === jumpOffset ? nodeIdx : -1;
  }
  if (jumpOffset) {
    const value = char - jumpOffset;
    return value < 0 || value >= branchCount
      ? -1
      : decodeTree[nodeIdx + value] - 1;
  }
  let lo2 = nodeIdx;
  let hi2 = lo2 + branchCount - 1;
  while (lo2 <= hi2) {
    const mid = (lo2 + hi2) >>> 1;
    const midVal = decodeTree[mid];
    if (midVal < char) {
      lo2 = mid + 1;
    } else if (midVal > char) {
      hi2 = mid - 1;
    } else {
      return decodeTree[mid + branchCount];
    }
  }
  return -1;
}
var CharCodes, BinTrieFlags, htmlDecoder, xmlDecoder;
var init_decode = __esm({
  '../../node_modules/html-to-text/node_modules/entities/lib/esm/decode.js'() {
    'use strict';
    init_decode_data_html();
    init_decode_data_xml();
    init_decode_codepoint();
    init_decode_codepoint();
    (function (CharCodes4) {
      CharCodes4[(CharCodes4['NUM'] = 35)] = 'NUM';
      CharCodes4[(CharCodes4['SEMI'] = 59)] = 'SEMI';
      CharCodes4[(CharCodes4['ZERO'] = 48)] = 'ZERO';
      CharCodes4[(CharCodes4['NINE'] = 57)] = 'NINE';
      CharCodes4[(CharCodes4['LOWER_A'] = 97)] = 'LOWER_A';
      CharCodes4[(CharCodes4['LOWER_F'] = 102)] = 'LOWER_F';
      CharCodes4[(CharCodes4['LOWER_X'] = 120)] = 'LOWER_X';
      CharCodes4[(CharCodes4['To_LOWER_BIT'] = 32)] = 'To_LOWER_BIT';
    })(CharCodes || (CharCodes = {}));
    (function (BinTrieFlags3) {
      BinTrieFlags3[(BinTrieFlags3['VALUE_LENGTH'] = 49152)] = 'VALUE_LENGTH';
      BinTrieFlags3[(BinTrieFlags3['BRANCH_LENGTH'] = 16256)] = 'BRANCH_LENGTH';
      BinTrieFlags3[(BinTrieFlags3['JUMP_TABLE'] = 127)] = 'JUMP_TABLE';
    })(BinTrieFlags || (BinTrieFlags = {}));
    htmlDecoder = getDecoder(decode_data_html_default);
    xmlDecoder = getDecoder(decode_data_xml_default);
  },
});

// ../../node_modules/html-to-text/node_modules/htmlparser2/lib/esm/Tokenizer.js
function isWhitespace(c2) {
  return (
    c2 === CharCodes2.Space ||
    c2 === CharCodes2.NewLine ||
    c2 === CharCodes2.Tab ||
    c2 === CharCodes2.FormFeed ||
    c2 === CharCodes2.CarriageReturn
  );
}
function isEndOfTagSection(c2) {
  return c2 === CharCodes2.Slash || c2 === CharCodes2.Gt || isWhitespace(c2);
}
function isNumber(c2) {
  return c2 >= CharCodes2.Zero && c2 <= CharCodes2.Nine;
}
function isASCIIAlpha(c2) {
  return (
    (c2 >= CharCodes2.LowerA && c2 <= CharCodes2.LowerZ) ||
    (c2 >= CharCodes2.UpperA && c2 <= CharCodes2.UpperZ)
  );
}
function isHexDigit(c2) {
  return (
    (c2 >= CharCodes2.UpperA && c2 <= CharCodes2.UpperF) ||
    (c2 >= CharCodes2.LowerA && c2 <= CharCodes2.LowerF)
  );
}
var CharCodes2, State, QuoteType, Sequences, Tokenizer;
var init_Tokenizer = __esm({
  '../../node_modules/html-to-text/node_modules/htmlparser2/lib/esm/Tokenizer.js'() {
    'use strict';
    init_decode();
    (function (CharCodes4) {
      CharCodes4[(CharCodes4['Tab'] = 9)] = 'Tab';
      CharCodes4[(CharCodes4['NewLine'] = 10)] = 'NewLine';
      CharCodes4[(CharCodes4['FormFeed'] = 12)] = 'FormFeed';
      CharCodes4[(CharCodes4['CarriageReturn'] = 13)] = 'CarriageReturn';
      CharCodes4[(CharCodes4['Space'] = 32)] = 'Space';
      CharCodes4[(CharCodes4['ExclamationMark'] = 33)] = 'ExclamationMark';
      CharCodes4[(CharCodes4['Number'] = 35)] = 'Number';
      CharCodes4[(CharCodes4['Amp'] = 38)] = 'Amp';
      CharCodes4[(CharCodes4['SingleQuote'] = 39)] = 'SingleQuote';
      CharCodes4[(CharCodes4['DoubleQuote'] = 34)] = 'DoubleQuote';
      CharCodes4[(CharCodes4['Dash'] = 45)] = 'Dash';
      CharCodes4[(CharCodes4['Slash'] = 47)] = 'Slash';
      CharCodes4[(CharCodes4['Zero'] = 48)] = 'Zero';
      CharCodes4[(CharCodes4['Nine'] = 57)] = 'Nine';
      CharCodes4[(CharCodes4['Semi'] = 59)] = 'Semi';
      CharCodes4[(CharCodes4['Lt'] = 60)] = 'Lt';
      CharCodes4[(CharCodes4['Eq'] = 61)] = 'Eq';
      CharCodes4[(CharCodes4['Gt'] = 62)] = 'Gt';
      CharCodes4[(CharCodes4['Questionmark'] = 63)] = 'Questionmark';
      CharCodes4[(CharCodes4['UpperA'] = 65)] = 'UpperA';
      CharCodes4[(CharCodes4['LowerA'] = 97)] = 'LowerA';
      CharCodes4[(CharCodes4['UpperF'] = 70)] = 'UpperF';
      CharCodes4[(CharCodes4['LowerF'] = 102)] = 'LowerF';
      CharCodes4[(CharCodes4['UpperZ'] = 90)] = 'UpperZ';
      CharCodes4[(CharCodes4['LowerZ'] = 122)] = 'LowerZ';
      CharCodes4[(CharCodes4['LowerX'] = 120)] = 'LowerX';
      CharCodes4[(CharCodes4['OpeningSquareBracket'] = 91)] =
        'OpeningSquareBracket';
    })(CharCodes2 || (CharCodes2 = {}));
    (function (State2) {
      State2[(State2['Text'] = 1)] = 'Text';
      State2[(State2['BeforeTagName'] = 2)] = 'BeforeTagName';
      State2[(State2['InTagName'] = 3)] = 'InTagName';
      State2[(State2['InSelfClosingTag'] = 4)] = 'InSelfClosingTag';
      State2[(State2['BeforeClosingTagName'] = 5)] = 'BeforeClosingTagName';
      State2[(State2['InClosingTagName'] = 6)] = 'InClosingTagName';
      State2[(State2['AfterClosingTagName'] = 7)] = 'AfterClosingTagName';
      State2[(State2['BeforeAttributeName'] = 8)] = 'BeforeAttributeName';
      State2[(State2['InAttributeName'] = 9)] = 'InAttributeName';
      State2[(State2['AfterAttributeName'] = 10)] = 'AfterAttributeName';
      State2[(State2['BeforeAttributeValue'] = 11)] = 'BeforeAttributeValue';
      State2[(State2['InAttributeValueDq'] = 12)] = 'InAttributeValueDq';
      State2[(State2['InAttributeValueSq'] = 13)] = 'InAttributeValueSq';
      State2[(State2['InAttributeValueNq'] = 14)] = 'InAttributeValueNq';
      State2[(State2['BeforeDeclaration'] = 15)] = 'BeforeDeclaration';
      State2[(State2['InDeclaration'] = 16)] = 'InDeclaration';
      State2[(State2['InProcessingInstruction'] = 17)] =
        'InProcessingInstruction';
      State2[(State2['BeforeComment'] = 18)] = 'BeforeComment';
      State2[(State2['CDATASequence'] = 19)] = 'CDATASequence';
      State2[(State2['InSpecialComment'] = 20)] = 'InSpecialComment';
      State2[(State2['InCommentLike'] = 21)] = 'InCommentLike';
      State2[(State2['BeforeSpecialS'] = 22)] = 'BeforeSpecialS';
      State2[(State2['SpecialStartSequence'] = 23)] = 'SpecialStartSequence';
      State2[(State2['InSpecialTag'] = 24)] = 'InSpecialTag';
      State2[(State2['BeforeEntity'] = 25)] = 'BeforeEntity';
      State2[(State2['BeforeNumericEntity'] = 26)] = 'BeforeNumericEntity';
      State2[(State2['InNamedEntity'] = 27)] = 'InNamedEntity';
      State2[(State2['InNumericEntity'] = 28)] = 'InNumericEntity';
      State2[(State2['InHexEntity'] = 29)] = 'InHexEntity';
    })(State || (State = {}));
    (function (QuoteType2) {
      QuoteType2[(QuoteType2['NoValue'] = 0)] = 'NoValue';
      QuoteType2[(QuoteType2['Unquoted'] = 1)] = 'Unquoted';
      QuoteType2[(QuoteType2['Single'] = 2)] = 'Single';
      QuoteType2[(QuoteType2['Double'] = 3)] = 'Double';
    })(QuoteType || (QuoteType = {}));
    Sequences = {
      Cdata: new Uint8Array([67, 68, 65, 84, 65, 91]),
      CdataEnd: new Uint8Array([93, 93, 62]),
      CommentEnd: new Uint8Array([45, 45, 62]),
      ScriptEnd: new Uint8Array([60, 47, 115, 99, 114, 105, 112, 116]),
      StyleEnd: new Uint8Array([60, 47, 115, 116, 121, 108, 101]),
      TitleEnd: new Uint8Array([60, 47, 116, 105, 116, 108, 101]),
      // `</title`
    };
    Tokenizer = class {
      constructor({ xmlMode = false, decodeEntities = true }, cbs) {
        this.cbs = cbs;
        this.state = State.Text;
        this.buffer = '';
        this.sectionStart = 0;
        this.index = 0;
        this.baseState = State.Text;
        this.isSpecial = false;
        this.running = true;
        this.offset = 0;
        this.currentSequence = void 0;
        this.sequenceIndex = 0;
        this.trieIndex = 0;
        this.trieCurrent = 0;
        this.entityResult = 0;
        this.entityExcess = 0;
        this.xmlMode = xmlMode;
        this.decodeEntities = decodeEntities;
        this.entityTrie = xmlMode
          ? decode_data_xml_default
          : decode_data_html_default;
      }
      reset() {
        this.state = State.Text;
        this.buffer = '';
        this.sectionStart = 0;
        this.index = 0;
        this.baseState = State.Text;
        this.currentSequence = void 0;
        this.running = true;
        this.offset = 0;
      }
      write(chunk) {
        this.offset += this.buffer.length;
        this.buffer = chunk;
        this.parse();
      }
      end() {
        if (this.running) this.finish();
      }
      pause() {
        this.running = false;
      }
      resume() {
        this.running = true;
        if (this.index < this.buffer.length + this.offset) {
          this.parse();
        }
      }
      /**
       * The current index within all of the written data.
       */
      getIndex() {
        return this.index;
      }
      /**
       * The start of the current section.
       */
      getSectionStart() {
        return this.sectionStart;
      }
      stateText(c2) {
        if (
          c2 === CharCodes2.Lt ||
          (!this.decodeEntities && this.fastForwardTo(CharCodes2.Lt))
        ) {
          if (this.index > this.sectionStart) {
            this.cbs.ontext(this.sectionStart, this.index);
          }
          this.state = State.BeforeTagName;
          this.sectionStart = this.index;
        } else if (this.decodeEntities && c2 === CharCodes2.Amp) {
          this.state = State.BeforeEntity;
        }
      }
      stateSpecialStartSequence(c2) {
        const isEnd = this.sequenceIndex === this.currentSequence.length;
        const isMatch = isEnd
          ? // If we are at the end of the sequence, make sure the tag name has ended
            isEndOfTagSection(c2)
          : // Otherwise, do a case-insensitive comparison
            (c2 | 32) === this.currentSequence[this.sequenceIndex];
        if (!isMatch) {
          this.isSpecial = false;
        } else if (!isEnd) {
          this.sequenceIndex++;
          return;
        }
        this.sequenceIndex = 0;
        this.state = State.InTagName;
        this.stateInTagName(c2);
      }
      /** Look for an end tag. For <title> tags, also decode entities. */
      stateInSpecialTag(c2) {
        if (this.sequenceIndex === this.currentSequence.length) {
          if (c2 === CharCodes2.Gt || isWhitespace(c2)) {
            const endOfText = this.index - this.currentSequence.length;
            if (this.sectionStart < endOfText) {
              const actualIndex = this.index;
              this.index = endOfText;
              this.cbs.ontext(this.sectionStart, endOfText);
              this.index = actualIndex;
            }
            this.isSpecial = false;
            this.sectionStart = endOfText + 2;
            this.stateInClosingTagName(c2);
            return;
          }
          this.sequenceIndex = 0;
        }
        if ((c2 | 32) === this.currentSequence[this.sequenceIndex]) {
          this.sequenceIndex += 1;
        } else if (this.sequenceIndex === 0) {
          if (this.currentSequence === Sequences.TitleEnd) {
            if (this.decodeEntities && c2 === CharCodes2.Amp) {
              this.state = State.BeforeEntity;
            }
          } else if (this.fastForwardTo(CharCodes2.Lt)) {
            this.sequenceIndex = 1;
          }
        } else {
          this.sequenceIndex = Number(c2 === CharCodes2.Lt);
        }
      }
      stateCDATASequence(c2) {
        if (c2 === Sequences.Cdata[this.sequenceIndex]) {
          if (++this.sequenceIndex === Sequences.Cdata.length) {
            this.state = State.InCommentLike;
            this.currentSequence = Sequences.CdataEnd;
            this.sequenceIndex = 0;
            this.sectionStart = this.index + 1;
          }
        } else {
          this.sequenceIndex = 0;
          this.state = State.InDeclaration;
          this.stateInDeclaration(c2);
        }
      }
      /**
       * When we wait for one specific character, we can speed things up
       * by skipping through the buffer until we find it.
       *
       * @returns Whether the character was found.
       */
      fastForwardTo(c2) {
        while (++this.index < this.buffer.length + this.offset) {
          if (this.buffer.charCodeAt(this.index - this.offset) === c2) {
            return true;
          }
        }
        this.index = this.buffer.length + this.offset - 1;
        return false;
      }
      /**
       * Comments and CDATA end with `-->` and `]]>`.
       *
       * Their common qualities are:
       * - Their end sequences have a distinct character they start with.
       * - That character is then repeated, so we have to check multiple repeats.
       * - All characters but the start character of the sequence can be skipped.
       */
      stateInCommentLike(c2) {
        if (c2 === this.currentSequence[this.sequenceIndex]) {
          if (++this.sequenceIndex === this.currentSequence.length) {
            if (this.currentSequence === Sequences.CdataEnd) {
              this.cbs.oncdata(this.sectionStart, this.index, 2);
            } else {
              this.cbs.oncomment(this.sectionStart, this.index, 2);
            }
            this.sequenceIndex = 0;
            this.sectionStart = this.index + 1;
            this.state = State.Text;
          }
        } else if (this.sequenceIndex === 0) {
          if (this.fastForwardTo(this.currentSequence[0])) {
            this.sequenceIndex = 1;
          }
        } else if (c2 !== this.currentSequence[this.sequenceIndex - 1]) {
          this.sequenceIndex = 0;
        }
      }
      /**
       * HTML only allows ASCII alpha characters (a-z and A-Z) at the beginning of a tag name.
       *
       * XML allows a lot more characters here (@see https://www.w3.org/TR/REC-xml/#NT-NameStartChar).
       * We allow anything that wouldn't end the tag.
       */
      isTagStartChar(c2) {
        return this.xmlMode ? !isEndOfTagSection(c2) : isASCIIAlpha(c2);
      }
      startSpecial(sequence, offset) {
        this.isSpecial = true;
        this.currentSequence = sequence;
        this.sequenceIndex = offset;
        this.state = State.SpecialStartSequence;
      }
      stateBeforeTagName(c2) {
        if (c2 === CharCodes2.ExclamationMark) {
          this.state = State.BeforeDeclaration;
          this.sectionStart = this.index + 1;
        } else if (c2 === CharCodes2.Questionmark) {
          this.state = State.InProcessingInstruction;
          this.sectionStart = this.index + 1;
        } else if (this.isTagStartChar(c2)) {
          const lower = c2 | 32;
          this.sectionStart = this.index;
          if (!this.xmlMode && lower === Sequences.TitleEnd[2]) {
            this.startSpecial(Sequences.TitleEnd, 3);
          } else {
            this.state =
              !this.xmlMode && lower === Sequences.ScriptEnd[2]
                ? State.BeforeSpecialS
                : State.InTagName;
          }
        } else if (c2 === CharCodes2.Slash) {
          this.state = State.BeforeClosingTagName;
        } else {
          this.state = State.Text;
          this.stateText(c2);
        }
      }
      stateInTagName(c2) {
        if (isEndOfTagSection(c2)) {
          this.cbs.onopentagname(this.sectionStart, this.index);
          this.sectionStart = -1;
          this.state = State.BeforeAttributeName;
          this.stateBeforeAttributeName(c2);
        }
      }
      stateBeforeClosingTagName(c2) {
        if (isWhitespace(c2)) {
        } else if (c2 === CharCodes2.Gt) {
          this.state = State.Text;
        } else {
          this.state = this.isTagStartChar(c2)
            ? State.InClosingTagName
            : State.InSpecialComment;
          this.sectionStart = this.index;
        }
      }
      stateInClosingTagName(c2) {
        if (c2 === CharCodes2.Gt || isWhitespace(c2)) {
          this.cbs.onclosetag(this.sectionStart, this.index);
          this.sectionStart = -1;
          this.state = State.AfterClosingTagName;
          this.stateAfterClosingTagName(c2);
        }
      }
      stateAfterClosingTagName(c2) {
        if (c2 === CharCodes2.Gt || this.fastForwardTo(CharCodes2.Gt)) {
          this.state = State.Text;
          this.baseState = State.Text;
          this.sectionStart = this.index + 1;
        }
      }
      stateBeforeAttributeName(c2) {
        if (c2 === CharCodes2.Gt) {
          this.cbs.onopentagend(this.index);
          if (this.isSpecial) {
            this.state = State.InSpecialTag;
            this.sequenceIndex = 0;
          } else {
            this.state = State.Text;
          }
          this.baseState = this.state;
          this.sectionStart = this.index + 1;
        } else if (c2 === CharCodes2.Slash) {
          this.state = State.InSelfClosingTag;
        } else if (!isWhitespace(c2)) {
          this.state = State.InAttributeName;
          this.sectionStart = this.index;
        }
      }
      stateInSelfClosingTag(c2) {
        if (c2 === CharCodes2.Gt) {
          this.cbs.onselfclosingtag(this.index);
          this.state = State.Text;
          this.baseState = State.Text;
          this.sectionStart = this.index + 1;
          this.isSpecial = false;
        } else if (!isWhitespace(c2)) {
          this.state = State.BeforeAttributeName;
          this.stateBeforeAttributeName(c2);
        }
      }
      stateInAttributeName(c2) {
        if (c2 === CharCodes2.Eq || isEndOfTagSection(c2)) {
          this.cbs.onattribname(this.sectionStart, this.index);
          this.sectionStart = -1;
          this.state = State.AfterAttributeName;
          this.stateAfterAttributeName(c2);
        }
      }
      stateAfterAttributeName(c2) {
        if (c2 === CharCodes2.Eq) {
          this.state = State.BeforeAttributeValue;
        } else if (c2 === CharCodes2.Slash || c2 === CharCodes2.Gt) {
          this.cbs.onattribend(QuoteType.NoValue, this.index);
          this.state = State.BeforeAttributeName;
          this.stateBeforeAttributeName(c2);
        } else if (!isWhitespace(c2)) {
          this.cbs.onattribend(QuoteType.NoValue, this.index);
          this.state = State.InAttributeName;
          this.sectionStart = this.index;
        }
      }
      stateBeforeAttributeValue(c2) {
        if (c2 === CharCodes2.DoubleQuote) {
          this.state = State.InAttributeValueDq;
          this.sectionStart = this.index + 1;
        } else if (c2 === CharCodes2.SingleQuote) {
          this.state = State.InAttributeValueSq;
          this.sectionStart = this.index + 1;
        } else if (!isWhitespace(c2)) {
          this.sectionStart = this.index;
          this.state = State.InAttributeValueNq;
          this.stateInAttributeValueNoQuotes(c2);
        }
      }
      handleInAttributeValue(c2, quote) {
        if (
          c2 === quote ||
          (!this.decodeEntities && this.fastForwardTo(quote))
        ) {
          this.cbs.onattribdata(this.sectionStart, this.index);
          this.sectionStart = -1;
          this.cbs.onattribend(
            quote === CharCodes2.DoubleQuote
              ? QuoteType.Double
              : QuoteType.Single,
            this.index
          );
          this.state = State.BeforeAttributeName;
        } else if (this.decodeEntities && c2 === CharCodes2.Amp) {
          this.baseState = this.state;
          this.state = State.BeforeEntity;
        }
      }
      stateInAttributeValueDoubleQuotes(c2) {
        this.handleInAttributeValue(c2, CharCodes2.DoubleQuote);
      }
      stateInAttributeValueSingleQuotes(c2) {
        this.handleInAttributeValue(c2, CharCodes2.SingleQuote);
      }
      stateInAttributeValueNoQuotes(c2) {
        if (isWhitespace(c2) || c2 === CharCodes2.Gt) {
          this.cbs.onattribdata(this.sectionStart, this.index);
          this.sectionStart = -1;
          this.cbs.onattribend(QuoteType.Unquoted, this.index);
          this.state = State.BeforeAttributeName;
          this.stateBeforeAttributeName(c2);
        } else if (this.decodeEntities && c2 === CharCodes2.Amp) {
          this.baseState = this.state;
          this.state = State.BeforeEntity;
        }
      }
      stateBeforeDeclaration(c2) {
        if (c2 === CharCodes2.OpeningSquareBracket) {
          this.state = State.CDATASequence;
          this.sequenceIndex = 0;
        } else {
          this.state =
            c2 === CharCodes2.Dash ? State.BeforeComment : State.InDeclaration;
        }
      }
      stateInDeclaration(c2) {
        if (c2 === CharCodes2.Gt || this.fastForwardTo(CharCodes2.Gt)) {
          this.cbs.ondeclaration(this.sectionStart, this.index);
          this.state = State.Text;
          this.sectionStart = this.index + 1;
        }
      }
      stateInProcessingInstruction(c2) {
        if (c2 === CharCodes2.Gt || this.fastForwardTo(CharCodes2.Gt)) {
          this.cbs.onprocessinginstruction(this.sectionStart, this.index);
          this.state = State.Text;
          this.sectionStart = this.index + 1;
        }
      }
      stateBeforeComment(c2) {
        if (c2 === CharCodes2.Dash) {
          this.state = State.InCommentLike;
          this.currentSequence = Sequences.CommentEnd;
          this.sequenceIndex = 2;
          this.sectionStart = this.index + 1;
        } else {
          this.state = State.InDeclaration;
        }
      }
      stateInSpecialComment(c2) {
        if (c2 === CharCodes2.Gt || this.fastForwardTo(CharCodes2.Gt)) {
          this.cbs.oncomment(this.sectionStart, this.index, 0);
          this.state = State.Text;
          this.sectionStart = this.index + 1;
        }
      }
      stateBeforeSpecialS(c2) {
        const lower = c2 | 32;
        if (lower === Sequences.ScriptEnd[3]) {
          this.startSpecial(Sequences.ScriptEnd, 4);
        } else if (lower === Sequences.StyleEnd[3]) {
          this.startSpecial(Sequences.StyleEnd, 4);
        } else {
          this.state = State.InTagName;
          this.stateInTagName(c2);
        }
      }
      stateBeforeEntity(c2) {
        this.entityExcess = 1;
        this.entityResult = 0;
        if (c2 === CharCodes2.Number) {
          this.state = State.BeforeNumericEntity;
        } else if (c2 === CharCodes2.Amp) {
        } else {
          this.trieIndex = 0;
          this.trieCurrent = this.entityTrie[0];
          this.state = State.InNamedEntity;
          this.stateInNamedEntity(c2);
        }
      }
      stateInNamedEntity(c2) {
        this.entityExcess += 1;
        this.trieIndex = determineBranch(
          this.entityTrie,
          this.trieCurrent,
          this.trieIndex + 1,
          c2
        );
        if (this.trieIndex < 0) {
          this.emitNamedEntity();
          this.index--;
          return;
        }
        this.trieCurrent = this.entityTrie[this.trieIndex];
        const masked = this.trieCurrent & BinTrieFlags.VALUE_LENGTH;
        if (masked) {
          const valueLength = (masked >> 14) - 1;
          if (!this.allowLegacyEntity() && c2 !== CharCodes2.Semi) {
            this.trieIndex += valueLength;
          } else {
            const entityStart = this.index - this.entityExcess + 1;
            if (entityStart > this.sectionStart) {
              this.emitPartial(this.sectionStart, entityStart);
            }
            this.entityResult = this.trieIndex;
            this.trieIndex += valueLength;
            this.entityExcess = 0;
            this.sectionStart = this.index + 1;
            if (valueLength === 0) {
              this.emitNamedEntity();
            }
          }
        }
      }
      emitNamedEntity() {
        this.state = this.baseState;
        if (this.entityResult === 0) {
          return;
        }
        const valueLength =
          (this.entityTrie[this.entityResult] & BinTrieFlags.VALUE_LENGTH) >>
          14;
        switch (valueLength) {
          case 1: {
            this.emitCodePoint(
              this.entityTrie[this.entityResult] & ~BinTrieFlags.VALUE_LENGTH
            );
            break;
          }
          case 2: {
            this.emitCodePoint(this.entityTrie[this.entityResult + 1]);
            break;
          }
          case 3: {
            this.emitCodePoint(this.entityTrie[this.entityResult + 1]);
            this.emitCodePoint(this.entityTrie[this.entityResult + 2]);
          }
        }
      }
      stateBeforeNumericEntity(c2) {
        if ((c2 | 32) === CharCodes2.LowerX) {
          this.entityExcess++;
          this.state = State.InHexEntity;
        } else {
          this.state = State.InNumericEntity;
          this.stateInNumericEntity(c2);
        }
      }
      emitNumericEntity(strict) {
        const entityStart = this.index - this.entityExcess - 1;
        const numberStart =
          entityStart + 2 + Number(this.state === State.InHexEntity);
        if (numberStart !== this.index) {
          if (entityStart > this.sectionStart) {
            this.emitPartial(this.sectionStart, entityStart);
          }
          this.sectionStart = this.index + Number(strict);
          this.emitCodePoint(replaceCodePoint(this.entityResult));
        }
        this.state = this.baseState;
      }
      stateInNumericEntity(c2) {
        if (c2 === CharCodes2.Semi) {
          this.emitNumericEntity(true);
        } else if (isNumber(c2)) {
          this.entityResult = this.entityResult * 10 + (c2 - CharCodes2.Zero);
          this.entityExcess++;
        } else {
          if (this.allowLegacyEntity()) {
            this.emitNumericEntity(false);
          } else {
            this.state = this.baseState;
          }
          this.index--;
        }
      }
      stateInHexEntity(c2) {
        if (c2 === CharCodes2.Semi) {
          this.emitNumericEntity(true);
        } else if (isNumber(c2)) {
          this.entityResult = this.entityResult * 16 + (c2 - CharCodes2.Zero);
          this.entityExcess++;
        } else if (isHexDigit(c2)) {
          this.entityResult =
            this.entityResult * 16 + ((c2 | 32) - CharCodes2.LowerA + 10);
          this.entityExcess++;
        } else {
          if (this.allowLegacyEntity()) {
            this.emitNumericEntity(false);
          } else {
            this.state = this.baseState;
          }
          this.index--;
        }
      }
      allowLegacyEntity() {
        return (
          !this.xmlMode &&
          (this.baseState === State.Text ||
            this.baseState === State.InSpecialTag)
        );
      }
      /**
       * Remove data that has already been consumed from the buffer.
       */
      cleanup() {
        if (this.running && this.sectionStart !== this.index) {
          if (
            this.state === State.Text ||
            (this.state === State.InSpecialTag && this.sequenceIndex === 0)
          ) {
            this.cbs.ontext(this.sectionStart, this.index);
            this.sectionStart = this.index;
          } else if (
            this.state === State.InAttributeValueDq ||
            this.state === State.InAttributeValueSq ||
            this.state === State.InAttributeValueNq
          ) {
            this.cbs.onattribdata(this.sectionStart, this.index);
            this.sectionStart = this.index;
          }
        }
      }
      shouldContinue() {
        return this.index < this.buffer.length + this.offset && this.running;
      }
      /**
       * Iterates through the buffer, calling the function corresponding to the current state.
       *
       * States that are more likely to be hit are higher up, as a performance improvement.
       */
      parse() {
        while (this.shouldContinue()) {
          const c2 = this.buffer.charCodeAt(this.index - this.offset);
          switch (this.state) {
            case State.Text: {
              this.stateText(c2);
              break;
            }
            case State.SpecialStartSequence: {
              this.stateSpecialStartSequence(c2);
              break;
            }
            case State.InSpecialTag: {
              this.stateInSpecialTag(c2);
              break;
            }
            case State.CDATASequence: {
              this.stateCDATASequence(c2);
              break;
            }
            case State.InAttributeValueDq: {
              this.stateInAttributeValueDoubleQuotes(c2);
              break;
            }
            case State.InAttributeName: {
              this.stateInAttributeName(c2);
              break;
            }
            case State.InCommentLike: {
              this.stateInCommentLike(c2);
              break;
            }
            case State.InSpecialComment: {
              this.stateInSpecialComment(c2);
              break;
            }
            case State.BeforeAttributeName: {
              this.stateBeforeAttributeName(c2);
              break;
            }
            case State.InTagName: {
              this.stateInTagName(c2);
              break;
            }
            case State.InClosingTagName: {
              this.stateInClosingTagName(c2);
              break;
            }
            case State.BeforeTagName: {
              this.stateBeforeTagName(c2);
              break;
            }
            case State.AfterAttributeName: {
              this.stateAfterAttributeName(c2);
              break;
            }
            case State.InAttributeValueSq: {
              this.stateInAttributeValueSingleQuotes(c2);
              break;
            }
            case State.BeforeAttributeValue: {
              this.stateBeforeAttributeValue(c2);
              break;
            }
            case State.BeforeClosingTagName: {
              this.stateBeforeClosingTagName(c2);
              break;
            }
            case State.AfterClosingTagName: {
              this.stateAfterClosingTagName(c2);
              break;
            }
            case State.BeforeSpecialS: {
              this.stateBeforeSpecialS(c2);
              break;
            }
            case State.InAttributeValueNq: {
              this.stateInAttributeValueNoQuotes(c2);
              break;
            }
            case State.InSelfClosingTag: {
              this.stateInSelfClosingTag(c2);
              break;
            }
            case State.InDeclaration: {
              this.stateInDeclaration(c2);
              break;
            }
            case State.BeforeDeclaration: {
              this.stateBeforeDeclaration(c2);
              break;
            }
            case State.BeforeComment: {
              this.stateBeforeComment(c2);
              break;
            }
            case State.InProcessingInstruction: {
              this.stateInProcessingInstruction(c2);
              break;
            }
            case State.InNamedEntity: {
              this.stateInNamedEntity(c2);
              break;
            }
            case State.BeforeEntity: {
              this.stateBeforeEntity(c2);
              break;
            }
            case State.InHexEntity: {
              this.stateInHexEntity(c2);
              break;
            }
            case State.InNumericEntity: {
              this.stateInNumericEntity(c2);
              break;
            }
            default: {
              this.stateBeforeNumericEntity(c2);
            }
          }
          this.index++;
        }
        this.cleanup();
      }
      finish() {
        if (this.state === State.InNamedEntity) {
          this.emitNamedEntity();
        }
        if (this.sectionStart < this.index) {
          this.handleTrailingData();
        }
        this.cbs.onend();
      }
      /** Handle any trailing data. */
      handleTrailingData() {
        const endIndex = this.buffer.length + this.offset;
        if (this.state === State.InCommentLike) {
          if (this.currentSequence === Sequences.CdataEnd) {
            this.cbs.oncdata(this.sectionStart, endIndex, 0);
          } else {
            this.cbs.oncomment(this.sectionStart, endIndex, 0);
          }
        } else if (
          this.state === State.InNumericEntity &&
          this.allowLegacyEntity()
        ) {
          this.emitNumericEntity(false);
        } else if (
          this.state === State.InHexEntity &&
          this.allowLegacyEntity()
        ) {
          this.emitNumericEntity(false);
        } else if (
          this.state === State.InTagName ||
          this.state === State.BeforeAttributeName ||
          this.state === State.BeforeAttributeValue ||
          this.state === State.AfterAttributeName ||
          this.state === State.InAttributeName ||
          this.state === State.InAttributeValueSq ||
          this.state === State.InAttributeValueDq ||
          this.state === State.InAttributeValueNq ||
          this.state === State.InClosingTagName
        ) {
        } else {
          this.cbs.ontext(this.sectionStart, endIndex);
        }
      }
      emitPartial(start, endIndex) {
        if (
          this.baseState !== State.Text &&
          this.baseState !== State.InSpecialTag
        ) {
          this.cbs.onattribdata(start, endIndex);
        } else {
          this.cbs.ontext(start, endIndex);
        }
      }
      emitCodePoint(cp2) {
        if (
          this.baseState !== State.Text &&
          this.baseState !== State.InSpecialTag
        ) {
          this.cbs.onattribentity(cp2);
        } else {
          this.cbs.ontextentity(cp2);
        }
      }
    };
  },
});

// ../../node_modules/html-to-text/node_modules/htmlparser2/lib/esm/Parser.js
var formTags,
  pTag,
  tableSectionTags,
  ddtTags,
  rtpTags,
  openImpliesClose,
  voidElements,
  foreignContextElements,
  htmlIntegrationElements,
  reNameEnd,
  Parser;
var init_Parser = __esm({
  '../../node_modules/html-to-text/node_modules/htmlparser2/lib/esm/Parser.js'() {
    'use strict';
    init_Tokenizer();
    init_decode();
    formTags = /* @__PURE__ */ new Set([
      'input',
      'option',
      'optgroup',
      'select',
      'button',
      'datalist',
      'textarea',
    ]);
    pTag = /* @__PURE__ */ new Set(['p']);
    tableSectionTags = /* @__PURE__ */ new Set(['thead', 'tbody']);
    ddtTags = /* @__PURE__ */ new Set(['dd', 'dt']);
    rtpTags = /* @__PURE__ */ new Set(['rt', 'rp']);
    openImpliesClose = /* @__PURE__ */ new Map([
      ['tr', /* @__PURE__ */ new Set(['tr', 'th', 'td'])],
      ['th', /* @__PURE__ */ new Set(['th'])],
      ['td', /* @__PURE__ */ new Set(['thead', 'th', 'td'])],
      ['body', /* @__PURE__ */ new Set(['head', 'link', 'script'])],
      ['li', /* @__PURE__ */ new Set(['li'])],
      ['p', pTag],
      ['h1', pTag],
      ['h2', pTag],
      ['h3', pTag],
      ['h4', pTag],
      ['h5', pTag],
      ['h6', pTag],
      ['select', formTags],
      ['input', formTags],
      ['output', formTags],
      ['button', formTags],
      ['datalist', formTags],
      ['textarea', formTags],
      ['option', /* @__PURE__ */ new Set(['option'])],
      ['optgroup', /* @__PURE__ */ new Set(['optgroup', 'option'])],
      ['dd', ddtTags],
      ['dt', ddtTags],
      ['address', pTag],
      ['article', pTag],
      ['aside', pTag],
      ['blockquote', pTag],
      ['details', pTag],
      ['div', pTag],
      ['dl', pTag],
      ['fieldset', pTag],
      ['figcaption', pTag],
      ['figure', pTag],
      ['footer', pTag],
      ['form', pTag],
      ['header', pTag],
      ['hr', pTag],
      ['main', pTag],
      ['nav', pTag],
      ['ol', pTag],
      ['pre', pTag],
      ['section', pTag],
      ['table', pTag],
      ['ul', pTag],
      ['rt', rtpTags],
      ['rp', rtpTags],
      ['tbody', tableSectionTags],
      ['tfoot', tableSectionTags],
    ]);
    voidElements = /* @__PURE__ */ new Set([
      'area',
      'base',
      'basefont',
      'br',
      'col',
      'command',
      'embed',
      'frame',
      'hr',
      'img',
      'input',
      'isindex',
      'keygen',
      'link',
      'meta',
      'param',
      'source',
      'track',
      'wbr',
    ]);
    foreignContextElements = /* @__PURE__ */ new Set(['math', 'svg']);
    htmlIntegrationElements = /* @__PURE__ */ new Set([
      'mi',
      'mo',
      'mn',
      'ms',
      'mtext',
      'annotation-xml',
      'foreignobject',
      'desc',
      'title',
    ]);
    reNameEnd = /\s|\//;
    Parser = class {
      constructor(cbs, options = {}) {
        var _a4, _b, _c2, _d, _e2;
        this.options = options;
        this.startIndex = 0;
        this.endIndex = 0;
        this.openTagStart = 0;
        this.tagname = '';
        this.attribname = '';
        this.attribvalue = '';
        this.attribs = null;
        this.stack = [];
        this.foreignContext = [];
        this.buffers = [];
        this.bufferOffset = 0;
        this.writeIndex = 0;
        this.ended = false;
        this.cbs = cbs !== null && cbs !== void 0 ? cbs : {};
        this.lowerCaseTagNames =
          (_a4 = options.lowerCaseTags) !== null && _a4 !== void 0
            ? _a4
            : !options.xmlMode;
        this.lowerCaseAttributeNames =
          (_b = options.lowerCaseAttributeNames) !== null && _b !== void 0
            ? _b
            : !options.xmlMode;
        this.tokenizer = new (
          (_c2 = options.Tokenizer) !== null && _c2 !== void 0 ? _c2 : Tokenizer
        )(this.options, this);
        (_e2 = (_d = this.cbs).onparserinit) === null || _e2 === void 0
          ? void 0
          : _e2.call(_d, this);
      }
      // Tokenizer event handlers
      /** @internal */
      ontext(start, endIndex) {
        var _a4, _b;
        const data = this.getSlice(start, endIndex);
        this.endIndex = endIndex - 1;
        (_b = (_a4 = this.cbs).ontext) === null || _b === void 0
          ? void 0
          : _b.call(_a4, data);
        this.startIndex = endIndex;
      }
      /** @internal */
      ontextentity(cp2) {
        var _a4, _b;
        const index = this.tokenizer.getSectionStart();
        this.endIndex = index - 1;
        (_b = (_a4 = this.cbs).ontext) === null || _b === void 0
          ? void 0
          : _b.call(_a4, fromCodePoint(cp2));
        this.startIndex = index;
      }
      isVoidElement(name) {
        return !this.options.xmlMode && voidElements.has(name);
      }
      /** @internal */
      onopentagname(start, endIndex) {
        this.endIndex = endIndex;
        let name = this.getSlice(start, endIndex);
        if (this.lowerCaseTagNames) {
          name = name.toLowerCase();
        }
        this.emitOpenTag(name);
      }
      emitOpenTag(name) {
        var _a4, _b, _c2, _d;
        this.openTagStart = this.startIndex;
        this.tagname = name;
        const impliesClose =
          !this.options.xmlMode && openImpliesClose.get(name);
        if (impliesClose) {
          while (
            this.stack.length > 0 &&
            impliesClose.has(this.stack[this.stack.length - 1])
          ) {
            const element = this.stack.pop();
            (_b = (_a4 = this.cbs).onclosetag) === null || _b === void 0
              ? void 0
              : _b.call(_a4, element, true);
          }
        }
        if (!this.isVoidElement(name)) {
          this.stack.push(name);
          if (foreignContextElements.has(name)) {
            this.foreignContext.push(true);
          } else if (htmlIntegrationElements.has(name)) {
            this.foreignContext.push(false);
          }
        }
        (_d = (_c2 = this.cbs).onopentagname) === null || _d === void 0
          ? void 0
          : _d.call(_c2, name);
        if (this.cbs.onopentag) this.attribs = {};
      }
      endOpenTag(isImplied) {
        var _a4, _b;
        this.startIndex = this.openTagStart;
        if (this.attribs) {
          (_b = (_a4 = this.cbs).onopentag) === null || _b === void 0
            ? void 0
            : _b.call(_a4, this.tagname, this.attribs, isImplied);
          this.attribs = null;
        }
        if (this.cbs.onclosetag && this.isVoidElement(this.tagname)) {
          this.cbs.onclosetag(this.tagname, true);
        }
        this.tagname = '';
      }
      /** @internal */
      onopentagend(endIndex) {
        this.endIndex = endIndex;
        this.endOpenTag(false);
        this.startIndex = endIndex + 1;
      }
      /** @internal */
      onclosetag(start, endIndex) {
        var _a4, _b, _c2, _d, _e2, _f;
        this.endIndex = endIndex;
        let name = this.getSlice(start, endIndex);
        if (this.lowerCaseTagNames) {
          name = name.toLowerCase();
        }
        if (
          foreignContextElements.has(name) ||
          htmlIntegrationElements.has(name)
        ) {
          this.foreignContext.pop();
        }
        if (!this.isVoidElement(name)) {
          const pos = this.stack.lastIndexOf(name);
          if (pos !== -1) {
            if (this.cbs.onclosetag) {
              let count = this.stack.length - pos;
              while (count--) {
                this.cbs.onclosetag(this.stack.pop(), count !== 0);
              }
            } else this.stack.length = pos;
          } else if (!this.options.xmlMode && name === 'p') {
            this.emitOpenTag('p');
            this.closeCurrentTag(true);
          }
        } else if (!this.options.xmlMode && name === 'br') {
          (_b = (_a4 = this.cbs).onopentagname) === null || _b === void 0
            ? void 0
            : _b.call(_a4, 'br');
          (_d = (_c2 = this.cbs).onopentag) === null || _d === void 0
            ? void 0
            : _d.call(_c2, 'br', {}, true);
          (_f = (_e2 = this.cbs).onclosetag) === null || _f === void 0
            ? void 0
            : _f.call(_e2, 'br', false);
        }
        this.startIndex = endIndex + 1;
      }
      /** @internal */
      onselfclosingtag(endIndex) {
        this.endIndex = endIndex;
        if (
          this.options.xmlMode ||
          this.options.recognizeSelfClosing ||
          this.foreignContext[this.foreignContext.length - 1]
        ) {
          this.closeCurrentTag(false);
          this.startIndex = endIndex + 1;
        } else {
          this.onopentagend(endIndex);
        }
      }
      closeCurrentTag(isOpenImplied) {
        var _a4, _b;
        const name = this.tagname;
        this.endOpenTag(isOpenImplied);
        if (this.stack[this.stack.length - 1] === name) {
          (_b = (_a4 = this.cbs).onclosetag) === null || _b === void 0
            ? void 0
            : _b.call(_a4, name, !isOpenImplied);
          this.stack.pop();
        }
      }
      /** @internal */
      onattribname(start, endIndex) {
        this.startIndex = start;
        const name = this.getSlice(start, endIndex);
        this.attribname = this.lowerCaseAttributeNames
          ? name.toLowerCase()
          : name;
      }
      /** @internal */
      onattribdata(start, endIndex) {
        this.attribvalue += this.getSlice(start, endIndex);
      }
      /** @internal */
      onattribentity(cp2) {
        this.attribvalue += fromCodePoint(cp2);
      }
      /** @internal */
      onattribend(quote, endIndex) {
        var _a4, _b;
        this.endIndex = endIndex;
        (_b = (_a4 = this.cbs).onattribute) === null || _b === void 0
          ? void 0
          : _b.call(
              _a4,
              this.attribname,
              this.attribvalue,
              quote === QuoteType.Double
                ? '"'
                : quote === QuoteType.Single
                ? "'"
                : quote === QuoteType.NoValue
                ? void 0
                : null
            );
        if (
          this.attribs &&
          !Object.prototype.hasOwnProperty.call(this.attribs, this.attribname)
        ) {
          this.attribs[this.attribname] = this.attribvalue;
        }
        this.attribvalue = '';
      }
      getInstructionName(value) {
        const index = value.search(reNameEnd);
        let name = index < 0 ? value : value.substr(0, index);
        if (this.lowerCaseTagNames) {
          name = name.toLowerCase();
        }
        return name;
      }
      /** @internal */
      ondeclaration(start, endIndex) {
        this.endIndex = endIndex;
        const value = this.getSlice(start, endIndex);
        if (this.cbs.onprocessinginstruction) {
          const name = this.getInstructionName(value);
          this.cbs.onprocessinginstruction(`!${name}`, `!${value}`);
        }
        this.startIndex = endIndex + 1;
      }
      /** @internal */
      onprocessinginstruction(start, endIndex) {
        this.endIndex = endIndex;
        const value = this.getSlice(start, endIndex);
        if (this.cbs.onprocessinginstruction) {
          const name = this.getInstructionName(value);
          this.cbs.onprocessinginstruction(`?${name}`, `?${value}`);
        }
        this.startIndex = endIndex + 1;
      }
      /** @internal */
      oncomment(start, endIndex, offset) {
        var _a4, _b, _c2, _d;
        this.endIndex = endIndex;
        (_b = (_a4 = this.cbs).oncomment) === null || _b === void 0
          ? void 0
          : _b.call(_a4, this.getSlice(start, endIndex - offset));
        (_d = (_c2 = this.cbs).oncommentend) === null || _d === void 0
          ? void 0
          : _d.call(_c2);
        this.startIndex = endIndex + 1;
      }
      /** @internal */
      oncdata(start, endIndex, offset) {
        var _a4, _b, _c2, _d, _e2, _f, _g, _h, _j, _k;
        this.endIndex = endIndex;
        const value = this.getSlice(start, endIndex - offset);
        if (this.options.xmlMode || this.options.recognizeCDATA) {
          (_b = (_a4 = this.cbs).oncdatastart) === null || _b === void 0
            ? void 0
            : _b.call(_a4);
          (_d = (_c2 = this.cbs).ontext) === null || _d === void 0
            ? void 0
            : _d.call(_c2, value);
          (_f = (_e2 = this.cbs).oncdataend) === null || _f === void 0
            ? void 0
            : _f.call(_e2);
        } else {
          (_h = (_g = this.cbs).oncomment) === null || _h === void 0
            ? void 0
            : _h.call(_g, `[CDATA[${value}]]`);
          (_k = (_j = this.cbs).oncommentend) === null || _k === void 0
            ? void 0
            : _k.call(_j);
        }
        this.startIndex = endIndex + 1;
      }
      /** @internal */
      onend() {
        var _a4, _b;
        if (this.cbs.onclosetag) {
          this.endIndex = this.startIndex;
          for (
            let index = this.stack.length;
            index > 0;
            this.cbs.onclosetag(this.stack[--index], true)
          );
        }
        (_b = (_a4 = this.cbs).onend) === null || _b === void 0
          ? void 0
          : _b.call(_a4);
      }
      /**
       * Resets the parser to a blank state, ready to parse a new HTML document
       */
      reset() {
        var _a4, _b, _c2, _d;
        (_b = (_a4 = this.cbs).onreset) === null || _b === void 0
          ? void 0
          : _b.call(_a4);
        this.tokenizer.reset();
        this.tagname = '';
        this.attribname = '';
        this.attribs = null;
        this.stack.length = 0;
        this.startIndex = 0;
        this.endIndex = 0;
        (_d = (_c2 = this.cbs).onparserinit) === null || _d === void 0
          ? void 0
          : _d.call(_c2, this);
        this.buffers.length = 0;
        this.bufferOffset = 0;
        this.writeIndex = 0;
        this.ended = false;
      }
      /**
       * Resets the parser, then parses a complete document and
       * pushes it to the handler.
       *
       * @param data Document to parse.
       */
      parseComplete(data) {
        this.reset();
        this.end(data);
      }
      getSlice(start, end) {
        while (start - this.bufferOffset >= this.buffers[0].length) {
          this.shiftBuffer();
        }
        let slice = this.buffers[0].slice(
          start - this.bufferOffset,
          end - this.bufferOffset
        );
        while (end - this.bufferOffset > this.buffers[0].length) {
          this.shiftBuffer();
          slice += this.buffers[0].slice(0, end - this.bufferOffset);
        }
        return slice;
      }
      shiftBuffer() {
        this.bufferOffset += this.buffers[0].length;
        this.writeIndex--;
        this.buffers.shift();
      }
      /**
       * Parses a chunk of data and calls the corresponding callbacks.
       *
       * @param chunk Chunk to parse.
       */
      write(chunk) {
        var _a4, _b;
        if (this.ended) {
          (_b = (_a4 = this.cbs).onerror) === null || _b === void 0
            ? void 0
            : _b.call(_a4, new Error('.write() after done!'));
          return;
        }
        this.buffers.push(chunk);
        if (this.tokenizer.running) {
          this.tokenizer.write(chunk);
          this.writeIndex++;
        }
      }
      /**
       * Parses the end of the buffer and clears the stack, calls onend.
       *
       * @param chunk Optional final chunk to parse.
       */
      end(chunk) {
        var _a4, _b;
        if (this.ended) {
          (_b = (_a4 = this.cbs).onerror) === null || _b === void 0
            ? void 0
            : _b.call(_a4, new Error('.end() after done!'));
          return;
        }
        if (chunk) this.write(chunk);
        this.ended = true;
        this.tokenizer.end();
      }
      /**
       * Pauses parsing. The parser won't emit events until `resume` is called.
       */
      pause() {
        this.tokenizer.pause();
      }
      /**
       * Resumes parsing after `pause` was called.
       */
      resume() {
        this.tokenizer.resume();
        while (
          this.tokenizer.running &&
          this.writeIndex < this.buffers.length
        ) {
          this.tokenizer.write(this.buffers[this.writeIndex++]);
        }
        if (this.ended) this.tokenizer.end();
      }
      /**
       * Alias of `write`, for backwards compatibility.
       *
       * @param chunk Chunk to parse.
       * @deprecated
       */
      parseChunk(chunk) {
        this.write(chunk);
      }
      /**
       * Alias of `end`, for backwards compatibility.
       *
       * @param chunk Optional final chunk to parse.
       * @deprecated
       */
      done(chunk) {
        this.end(chunk);
      }
    };
  },
});

// ../../node_modules/html-to-text/node_modules/domhandler/lib/esm/node.js
function isTag3(node) {
  return isTag(node);
}
function isCDATA(node) {
  return node.type === ElementType.CDATA;
}
function isText(node) {
  return node.type === ElementType.Text;
}
function isComment(node) {
  return node.type === ElementType.Comment;
}
function isDirective(node) {
  return node.type === ElementType.Directive;
}
function isDocument(node) {
  return node.type === ElementType.Root;
}
function cloneNode(node, recursive = false) {
  let result;
  if (isText(node)) {
    result = new Text3(node.data);
  } else if (isComment(node)) {
    result = new Comment3(node.data);
  } else if (isTag3(node)) {
    const children = recursive ? cloneChildren(node.children) : [];
    const clone = new Element2(node.name, { ...node.attribs }, children);
    children.forEach((child) => (child.parent = clone));
    if (node.namespace != null) {
      clone.namespace = node.namespace;
    }
    if (node['x-attribsNamespace']) {
      clone['x-attribsNamespace'] = { ...node['x-attribsNamespace'] };
    }
    if (node['x-attribsPrefix']) {
      clone['x-attribsPrefix'] = { ...node['x-attribsPrefix'] };
    }
    result = clone;
  } else if (isCDATA(node)) {
    const children = recursive ? cloneChildren(node.children) : [];
    const clone = new CDATA3(children);
    children.forEach((child) => (child.parent = clone));
    result = clone;
  } else if (isDocument(node)) {
    const children = recursive ? cloneChildren(node.children) : [];
    const clone = new Document2(children);
    children.forEach((child) => (child.parent = clone));
    if (node['x-mode']) {
      clone['x-mode'] = node['x-mode'];
    }
    result = clone;
  } else if (isDirective(node)) {
    const instruction = new ProcessingInstruction2(node.name, node.data);
    if (node['x-name'] != null) {
      instruction['x-name'] = node['x-name'];
      instruction['x-publicId'] = node['x-publicId'];
      instruction['x-systemId'] = node['x-systemId'];
    }
    result = instruction;
  } else {
    throw new Error(`Not implemented yet: ${node.type}`);
  }
  result.startIndex = node.startIndex;
  result.endIndex = node.endIndex;
  if (node.sourceCodeLocation != null) {
    result.sourceCodeLocation = node.sourceCodeLocation;
  }
  return result;
}
function cloneChildren(childs) {
  const children = childs.map((child) => cloneNode(child, true));
  for (let i = 1; i < children.length; i++) {
    children[i].prev = children[i - 1];
    children[i - 1].next = children[i];
  }
  return children;
}
var Node,
  DataNode,
  Text3,
  Comment3,
  ProcessingInstruction2,
  NodeWithChildren,
  CDATA3,
  Document2,
  Element2;
var init_node2 = __esm({
  '../../node_modules/html-to-text/node_modules/domhandler/lib/esm/node.js'() {
    'use strict';
    init_esm();
    Node = class {
      constructor() {
        this.parent = null;
        this.prev = null;
        this.next = null;
        this.startIndex = null;
        this.endIndex = null;
      }
      // Read-write aliases for properties
      /**
       * Same as {@link parent}.
       * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.
       */
      get parentNode() {
        return this.parent;
      }
      set parentNode(parent) {
        this.parent = parent;
      }
      /**
       * Same as {@link prev}.
       * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.
       */
      get previousSibling() {
        return this.prev;
      }
      set previousSibling(prev) {
        this.prev = prev;
      }
      /**
       * Same as {@link next}.
       * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.
       */
      get nextSibling() {
        return this.next;
      }
      set nextSibling(next) {
        this.next = next;
      }
      /**
       * Clone this node, and optionally its children.
       *
       * @param recursive Clone child nodes as well.
       * @returns A clone of the node.
       */
      cloneNode(recursive = false) {
        return cloneNode(this, recursive);
      }
    };
    DataNode = class extends Node {
      /**
       * @param data The content of the data node
       */
      constructor(data) {
        super();
        this.data = data;
      }
      /**
       * Same as {@link data}.
       * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.
       */
      get nodeValue() {
        return this.data;
      }
      set nodeValue(data) {
        this.data = data;
      }
    };
    Text3 = class extends DataNode {
      constructor() {
        super(...arguments);
        this.type = ElementType.Text;
      }
      get nodeType() {
        return 3;
      }
    };
    Comment3 = class extends DataNode {
      constructor() {
        super(...arguments);
        this.type = ElementType.Comment;
      }
      get nodeType() {
        return 8;
      }
    };
    ProcessingInstruction2 = class extends DataNode {
      constructor(name, data) {
        super(data);
        this.name = name;
        this.type = ElementType.Directive;
      }
      get nodeType() {
        return 1;
      }
    };
    NodeWithChildren = class extends Node {
      /**
       * @param children Children of the node. Only certain node types can have children.
       */
      constructor(children) {
        super();
        this.children = children;
      }
      // Aliases
      /** First child of the node. */
      get firstChild() {
        var _a4;
        return (_a4 = this.children[0]) !== null && _a4 !== void 0 ? _a4 : null;
      }
      /** Last child of the node. */
      get lastChild() {
        return this.children.length > 0
          ? this.children[this.children.length - 1]
          : null;
      }
      /**
       * Same as {@link children}.
       * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.
       */
      get childNodes() {
        return this.children;
      }
      set childNodes(children) {
        this.children = children;
      }
    };
    CDATA3 = class extends NodeWithChildren {
      constructor() {
        super(...arguments);
        this.type = ElementType.CDATA;
      }
      get nodeType() {
        return 4;
      }
    };
    Document2 = class extends NodeWithChildren {
      constructor() {
        super(...arguments);
        this.type = ElementType.Root;
      }
      get nodeType() {
        return 9;
      }
    };
    Element2 = class extends NodeWithChildren {
      /**
       * @param name Name of the tag, eg. `div`, `span`.
       * @param attribs Object mapping attribute names to attribute values.
       * @param children Children of the node.
       */
      constructor(
        name,
        attribs,
        children = [],
        type = name === 'script'
          ? ElementType.Script
          : name === 'style'
          ? ElementType.Style
          : ElementType.Tag
      ) {
        super(children);
        this.name = name;
        this.attribs = attribs;
        this.type = type;
      }
      get nodeType() {
        return 1;
      }
      // DOM Level 1 aliases
      /**
       * Same as {@link name}.
       * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.
       */
      get tagName() {
        return this.name;
      }
      set tagName(name) {
        this.name = name;
      }
      get attributes() {
        return Object.keys(this.attribs).map((name) => {
          var _a4, _b;
          return {
            name,
            value: this.attribs[name],
            namespace:
              (_a4 = this['x-attribsNamespace']) === null || _a4 === void 0
                ? void 0
                : _a4[name],
            prefix:
              (_b = this['x-attribsPrefix']) === null || _b === void 0
                ? void 0
                : _b[name],
          };
        });
      }
    };
  },
});

// ../../node_modules/html-to-text/node_modules/domhandler/lib/esm/index.js
var defaultOpts, DomHandler;
var init_esm3 = __esm({
  '../../node_modules/html-to-text/node_modules/domhandler/lib/esm/index.js'() {
    'use strict';
    init_esm();
    init_node2();
    init_node2();
    defaultOpts = {
      withStartIndices: false,
      withEndIndices: false,
      xmlMode: false,
    };
    DomHandler = class {
      /**
       * @param callback Called once parsing has completed.
       * @param options Settings for the handler.
       * @param elementCB Callback whenever a tag is closed.
       */
      constructor(callback, options, elementCB) {
        this.dom = [];
        this.root = new Document2(this.dom);
        this.done = false;
        this.tagStack = [this.root];
        this.lastNode = null;
        this.parser = null;
        if (typeof options === 'function') {
          elementCB = options;
          options = defaultOpts;
        }
        if (typeof callback === 'object') {
          options = callback;
          callback = void 0;
        }
        this.callback =
          callback !== null && callback !== void 0 ? callback : null;
        this.options =
          options !== null && options !== void 0 ? options : defaultOpts;
        this.elementCB =
          elementCB !== null && elementCB !== void 0 ? elementCB : null;
      }
      onparserinit(parser) {
        this.parser = parser;
      }
      // Resets the handler back to starting state
      onreset() {
        this.dom = [];
        this.root = new Document2(this.dom);
        this.done = false;
        this.tagStack = [this.root];
        this.lastNode = null;
        this.parser = null;
      }
      // Signals the handler that parsing is done
      onend() {
        if (this.done) return;
        this.done = true;
        this.parser = null;
        this.handleCallback(null);
      }
      onerror(error) {
        this.handleCallback(error);
      }
      onclosetag() {
        this.lastNode = null;
        const elem = this.tagStack.pop();
        if (this.options.withEndIndices) {
          elem.endIndex = this.parser.endIndex;
        }
        if (this.elementCB) this.elementCB(elem);
      }
      onopentag(name, attribs) {
        const type = this.options.xmlMode ? ElementType.Tag : void 0;
        const element = new Element2(name, attribs, void 0, type);
        this.addNode(element);
        this.tagStack.push(element);
      }
      ontext(data) {
        const { lastNode } = this;
        if (lastNode && lastNode.type === ElementType.Text) {
          lastNode.data += data;
          if (this.options.withEndIndices) {
            lastNode.endIndex = this.parser.endIndex;
          }
        } else {
          const node = new Text3(data);
          this.addNode(node);
          this.lastNode = node;
        }
      }
      oncomment(data) {
        if (this.lastNode && this.lastNode.type === ElementType.Comment) {
          this.lastNode.data += data;
          return;
        }
        const node = new Comment3(data);
        this.addNode(node);
        this.lastNode = node;
      }
      oncommentend() {
        this.lastNode = null;
      }
      oncdatastart() {
        const text = new Text3('');
        const node = new CDATA3([text]);
        this.addNode(node);
        text.parent = node;
        this.lastNode = text;
      }
      oncdataend() {
        this.lastNode = null;
      }
      onprocessinginstruction(name, data) {
        const node = new ProcessingInstruction2(name, data);
        this.addNode(node);
      }
      handleCallback(error) {
        if (typeof this.callback === 'function') {
          this.callback(error, this.dom);
        } else if (error) {
          throw error;
        }
      }
      addNode(node) {
        const parent = this.tagStack[this.tagStack.length - 1];
        const previousSibling = parent.children[parent.children.length - 1];
        if (this.options.withStartIndices) {
          node.startIndex = this.parser.startIndex;
        }
        if (this.options.withEndIndices) {
          node.endIndex = this.parser.endIndex;
        }
        parent.children.push(node);
        if (previousSibling) {
          node.prev = previousSibling;
          previousSibling.next = node;
        }
        node.parent = parent;
        this.lastNode = null;
      }
    };
  },
});

// ../../node_modules/dom-serializer/node_modules/entities/lib/esm/generated/decode-data-html.js
var decode_data_html_default2;
var init_decode_data_html2 = __esm({
  '../../node_modules/dom-serializer/node_modules/entities/lib/esm/generated/decode-data-html.js'() {
    'use strict';
    decode_data_html_default2 = new Uint16Array(
      // prettier-ignore
      '\u1D41<\xD5\u0131\u028A\u049D\u057B\u05D0\u0675\u06DE\u07A2\u07D6\u080F\u0A4A\u0A91\u0DA1\u0E6D\u0F09\u0F26\u10CA\u1228\u12E1\u1415\u149D\u14C3\u14DF\u1525\0\0\0\0\0\0\u156B\u16CD\u198D\u1C12\u1DDD\u1F7E\u2060\u21B0\u228D\u23C0\u23FB\u2442\u2824\u2912\u2D08\u2E48\u2FCE\u3016\u32BA\u3639\u37AC\u38FE\u3A28\u3A71\u3AE0\u3B2E\u0800EMabcfglmnoprstu\\bfms\x7F\x84\x8B\x90\x95\x98\xA6\xB3\xB9\xC8\xCFlig\u803B\xC6\u40C6P\u803B&\u4026cute\u803B\xC1\u40C1reve;\u4102\u0100iyx}rc\u803B\xC2\u40C2;\u4410r;\uC000\u{1D504}rave\u803B\xC0\u40C0pha;\u4391acr;\u4100d;\u6A53\u0100gp\x9D\xA1on;\u4104f;\uC000\u{1D538}plyFunction;\u6061ing\u803B\xC5\u40C5\u0100cs\xBE\xC3r;\uC000\u{1D49C}ign;\u6254ilde\u803B\xC3\u40C3ml\u803B\xC4\u40C4\u0400aceforsu\xE5\xFB\xFE\u0117\u011C\u0122\u0127\u012A\u0100cr\xEA\xF2kslash;\u6216\u0176\xF6\xF8;\u6AE7ed;\u6306y;\u4411\u0180crt\u0105\u010B\u0114ause;\u6235noullis;\u612Ca;\u4392r;\uC000\u{1D505}pf;\uC000\u{1D539}eve;\u42D8c\xF2\u0113mpeq;\u624E\u0700HOacdefhilorsu\u014D\u0151\u0156\u0180\u019E\u01A2\u01B5\u01B7\u01BA\u01DC\u0215\u0273\u0278\u027Ecy;\u4427PY\u803B\xA9\u40A9\u0180cpy\u015D\u0162\u017Aute;\u4106\u0100;i\u0167\u0168\u62D2talDifferentialD;\u6145leys;\u612D\u0200aeio\u0189\u018E\u0194\u0198ron;\u410Cdil\u803B\xC7\u40C7rc;\u4108nint;\u6230ot;\u410A\u0100dn\u01A7\u01ADilla;\u40B8terDot;\u40B7\xF2\u017Fi;\u43A7rcle\u0200DMPT\u01C7\u01CB\u01D1\u01D6ot;\u6299inus;\u6296lus;\u6295imes;\u6297o\u0100cs\u01E2\u01F8kwiseContourIntegral;\u6232eCurly\u0100DQ\u0203\u020FoubleQuote;\u601Duote;\u6019\u0200lnpu\u021E\u0228\u0247\u0255on\u0100;e\u0225\u0226\u6237;\u6A74\u0180git\u022F\u0236\u023Aruent;\u6261nt;\u622FourIntegral;\u622E\u0100fr\u024C\u024E;\u6102oduct;\u6210nterClockwiseContourIntegral;\u6233oss;\u6A2Fcr;\uC000\u{1D49E}p\u0100;C\u0284\u0285\u62D3ap;\u624D\u0580DJSZacefios\u02A0\u02AC\u02B0\u02B4\u02B8\u02CB\u02D7\u02E1\u02E6\u0333\u048D\u0100;o\u0179\u02A5trahd;\u6911cy;\u4402cy;\u4405cy;\u440F\u0180grs\u02BF\u02C4\u02C7ger;\u6021r;\u61A1hv;\u6AE4\u0100ay\u02D0\u02D5ron;\u410E;\u4414l\u0100;t\u02DD\u02DE\u6207a;\u4394r;\uC000\u{1D507}\u0100af\u02EB\u0327\u0100cm\u02F0\u0322ritical\u0200ADGT\u0300\u0306\u0316\u031Ccute;\u40B4o\u0174\u030B\u030D;\u42D9bleAcute;\u42DDrave;\u4060ilde;\u42DCond;\u62C4ferentialD;\u6146\u0470\u033D\0\0\0\u0342\u0354\0\u0405f;\uC000\u{1D53B}\u0180;DE\u0348\u0349\u034D\u40A8ot;\u60DCqual;\u6250ble\u0300CDLRUV\u0363\u0372\u0382\u03CF\u03E2\u03F8ontourIntegra\xEC\u0239o\u0274\u0379\0\0\u037B\xBB\u0349nArrow;\u61D3\u0100eo\u0387\u03A4ft\u0180ART\u0390\u0396\u03A1rrow;\u61D0ightArrow;\u61D4e\xE5\u02CAng\u0100LR\u03AB\u03C4eft\u0100AR\u03B3\u03B9rrow;\u67F8ightArrow;\u67FAightArrow;\u67F9ight\u0100AT\u03D8\u03DErrow;\u61D2ee;\u62A8p\u0241\u03E9\0\0\u03EFrrow;\u61D1ownArrow;\u61D5erticalBar;\u6225n\u0300ABLRTa\u0412\u042A\u0430\u045E\u047F\u037Crrow\u0180;BU\u041D\u041E\u0422\u6193ar;\u6913pArrow;\u61F5reve;\u4311eft\u02D2\u043A\0\u0446\0\u0450ightVector;\u6950eeVector;\u695Eector\u0100;B\u0459\u045A\u61BDar;\u6956ight\u01D4\u0467\0\u0471eeVector;\u695Fector\u0100;B\u047A\u047B\u61C1ar;\u6957ee\u0100;A\u0486\u0487\u62A4rrow;\u61A7\u0100ct\u0492\u0497r;\uC000\u{1D49F}rok;\u4110\u0800NTacdfglmopqstux\u04BD\u04C0\u04C4\u04CB\u04DE\u04E2\u04E7\u04EE\u04F5\u0521\u052F\u0536\u0552\u055D\u0560\u0565G;\u414AH\u803B\xD0\u40D0cute\u803B\xC9\u40C9\u0180aiy\u04D2\u04D7\u04DCron;\u411Arc\u803B\xCA\u40CA;\u442Dot;\u4116r;\uC000\u{1D508}rave\u803B\xC8\u40C8ement;\u6208\u0100ap\u04FA\u04FEcr;\u4112ty\u0253\u0506\0\0\u0512mallSquare;\u65FBerySmallSquare;\u65AB\u0100gp\u0526\u052Aon;\u4118f;\uC000\u{1D53C}silon;\u4395u\u0100ai\u053C\u0549l\u0100;T\u0542\u0543\u6A75ilde;\u6242librium;\u61CC\u0100ci\u0557\u055Ar;\u6130m;\u6A73a;\u4397ml\u803B\xCB\u40CB\u0100ip\u056A\u056Fsts;\u6203onentialE;\u6147\u0280cfios\u0585\u0588\u058D\u05B2\u05CCy;\u4424r;\uC000\u{1D509}lled\u0253\u0597\0\0\u05A3mallSquare;\u65FCerySmallSquare;\u65AA\u0370\u05BA\0\u05BF\0\0\u05C4f;\uC000\u{1D53D}All;\u6200riertrf;\u6131c\xF2\u05CB\u0600JTabcdfgorst\u05E8\u05EC\u05EF\u05FA\u0600\u0612\u0616\u061B\u061D\u0623\u066C\u0672cy;\u4403\u803B>\u403Emma\u0100;d\u05F7\u05F8\u4393;\u43DCreve;\u411E\u0180eiy\u0607\u060C\u0610dil;\u4122rc;\u411C;\u4413ot;\u4120r;\uC000\u{1D50A};\u62D9pf;\uC000\u{1D53E}eater\u0300EFGLST\u0635\u0644\u064E\u0656\u065B\u0666qual\u0100;L\u063E\u063F\u6265ess;\u62DBullEqual;\u6267reater;\u6AA2ess;\u6277lantEqual;\u6A7Eilde;\u6273cr;\uC000\u{1D4A2};\u626B\u0400Aacfiosu\u0685\u068B\u0696\u069B\u069E\u06AA\u06BE\u06CARDcy;\u442A\u0100ct\u0690\u0694ek;\u42C7;\u405Eirc;\u4124r;\u610ClbertSpace;\u610B\u01F0\u06AF\0\u06B2f;\u610DizontalLine;\u6500\u0100ct\u06C3\u06C5\xF2\u06A9rok;\u4126mp\u0144\u06D0\u06D8ownHum\xF0\u012Fqual;\u624F\u0700EJOacdfgmnostu\u06FA\u06FE\u0703\u0707\u070E\u071A\u071E\u0721\u0728\u0744\u0778\u078B\u078F\u0795cy;\u4415lig;\u4132cy;\u4401cute\u803B\xCD\u40CD\u0100iy\u0713\u0718rc\u803B\xCE\u40CE;\u4418ot;\u4130r;\u6111rave\u803B\xCC\u40CC\u0180;ap\u0720\u072F\u073F\u0100cg\u0734\u0737r;\u412AinaryI;\u6148lie\xF3\u03DD\u01F4\u0749\0\u0762\u0100;e\u074D\u074E\u622C\u0100gr\u0753\u0758ral;\u622Bsection;\u62C2isible\u0100CT\u076C\u0772omma;\u6063imes;\u6062\u0180gpt\u077F\u0783\u0788on;\u412Ef;\uC000\u{1D540}a;\u4399cr;\u6110ilde;\u4128\u01EB\u079A\0\u079Ecy;\u4406l\u803B\xCF\u40CF\u0280cfosu\u07AC\u07B7\u07BC\u07C2\u07D0\u0100iy\u07B1\u07B5rc;\u4134;\u4419r;\uC000\u{1D50D}pf;\uC000\u{1D541}\u01E3\u07C7\0\u07CCr;\uC000\u{1D4A5}rcy;\u4408kcy;\u4404\u0380HJacfos\u07E4\u07E8\u07EC\u07F1\u07FD\u0802\u0808cy;\u4425cy;\u440Cppa;\u439A\u0100ey\u07F6\u07FBdil;\u4136;\u441Ar;\uC000\u{1D50E}pf;\uC000\u{1D542}cr;\uC000\u{1D4A6}\u0580JTaceflmost\u0825\u0829\u082C\u0850\u0863\u09B3\u09B8\u09C7\u09CD\u0A37\u0A47cy;\u4409\u803B<\u403C\u0280cmnpr\u0837\u083C\u0841\u0844\u084Dute;\u4139bda;\u439Bg;\u67EAlacetrf;\u6112r;\u619E\u0180aey\u0857\u085C\u0861ron;\u413Ddil;\u413B;\u441B\u0100fs\u0868\u0970t\u0500ACDFRTUVar\u087E\u08A9\u08B1\u08E0\u08E6\u08FC\u092F\u095B\u0390\u096A\u0100nr\u0883\u088FgleBracket;\u67E8row\u0180;BR\u0899\u089A\u089E\u6190ar;\u61E4ightArrow;\u61C6eiling;\u6308o\u01F5\u08B7\0\u08C3bleBracket;\u67E6n\u01D4\u08C8\0\u08D2eeVector;\u6961ector\u0100;B\u08DB\u08DC\u61C3ar;\u6959loor;\u630Aight\u0100AV\u08EF\u08F5rrow;\u6194ector;\u694E\u0100er\u0901\u0917e\u0180;AV\u0909\u090A\u0910\u62A3rrow;\u61A4ector;\u695Aiangle\u0180;BE\u0924\u0925\u0929\u62B2ar;\u69CFqual;\u62B4p\u0180DTV\u0937\u0942\u094CownVector;\u6951eeVector;\u6960ector\u0100;B\u0956\u0957\u61BFar;\u6958ector\u0100;B\u0965\u0966\u61BCar;\u6952ight\xE1\u039Cs\u0300EFGLST\u097E\u098B\u0995\u099D\u09A2\u09ADqualGreater;\u62DAullEqual;\u6266reater;\u6276ess;\u6AA1lantEqual;\u6A7Dilde;\u6272r;\uC000\u{1D50F}\u0100;e\u09BD\u09BE\u62D8ftarrow;\u61DAidot;\u413F\u0180npw\u09D4\u0A16\u0A1Bg\u0200LRlr\u09DE\u09F7\u0A02\u0A10eft\u0100AR\u09E6\u09ECrrow;\u67F5ightArrow;\u67F7ightArrow;\u67F6eft\u0100ar\u03B3\u0A0Aight\xE1\u03BFight\xE1\u03CAf;\uC000\u{1D543}er\u0100LR\u0A22\u0A2CeftArrow;\u6199ightArrow;\u6198\u0180cht\u0A3E\u0A40\u0A42\xF2\u084C;\u61B0rok;\u4141;\u626A\u0400acefiosu\u0A5A\u0A5D\u0A60\u0A77\u0A7C\u0A85\u0A8B\u0A8Ep;\u6905y;\u441C\u0100dl\u0A65\u0A6FiumSpace;\u605Flintrf;\u6133r;\uC000\u{1D510}nusPlus;\u6213pf;\uC000\u{1D544}c\xF2\u0A76;\u439C\u0480Jacefostu\u0AA3\u0AA7\u0AAD\u0AC0\u0B14\u0B19\u0D91\u0D97\u0D9Ecy;\u440Acute;\u4143\u0180aey\u0AB4\u0AB9\u0ABEron;\u4147dil;\u4145;\u441D\u0180gsw\u0AC7\u0AF0\u0B0Eative\u0180MTV\u0AD3\u0ADF\u0AE8ediumSpace;\u600Bhi\u0100cn\u0AE6\u0AD8\xEB\u0AD9eryThi\xEE\u0AD9ted\u0100GL\u0AF8\u0B06reaterGreate\xF2\u0673essLes\xF3\u0A48Line;\u400Ar;\uC000\u{1D511}\u0200Bnpt\u0B22\u0B28\u0B37\u0B3Areak;\u6060BreakingSpace;\u40A0f;\u6115\u0680;CDEGHLNPRSTV\u0B55\u0B56\u0B6A\u0B7C\u0BA1\u0BEB\u0C04\u0C5E\u0C84\u0CA6\u0CD8\u0D61\u0D85\u6AEC\u0100ou\u0B5B\u0B64ngruent;\u6262pCap;\u626DoubleVerticalBar;\u6226\u0180lqx\u0B83\u0B8A\u0B9Bement;\u6209ual\u0100;T\u0B92\u0B93\u6260ilde;\uC000\u2242\u0338ists;\u6204reater\u0380;EFGLST\u0BB6\u0BB7\u0BBD\u0BC9\u0BD3\u0BD8\u0BE5\u626Fqual;\u6271ullEqual;\uC000\u2267\u0338reater;\uC000\u226B\u0338ess;\u6279lantEqual;\uC000\u2A7E\u0338ilde;\u6275ump\u0144\u0BF2\u0BFDownHump;\uC000\u224E\u0338qual;\uC000\u224F\u0338e\u0100fs\u0C0A\u0C27tTriangle\u0180;BE\u0C1A\u0C1B\u0C21\u62EAar;\uC000\u29CF\u0338qual;\u62ECs\u0300;EGLST\u0C35\u0C36\u0C3C\u0C44\u0C4B\u0C58\u626Equal;\u6270reater;\u6278ess;\uC000\u226A\u0338lantEqual;\uC000\u2A7D\u0338ilde;\u6274ested\u0100GL\u0C68\u0C79reaterGreater;\uC000\u2AA2\u0338essLess;\uC000\u2AA1\u0338recedes\u0180;ES\u0C92\u0C93\u0C9B\u6280qual;\uC000\u2AAF\u0338lantEqual;\u62E0\u0100ei\u0CAB\u0CB9verseElement;\u620CghtTriangle\u0180;BE\u0CCB\u0CCC\u0CD2\u62EBar;\uC000\u29D0\u0338qual;\u62ED\u0100qu\u0CDD\u0D0CuareSu\u0100bp\u0CE8\u0CF9set\u0100;E\u0CF0\u0CF3\uC000\u228F\u0338qual;\u62E2erset\u0100;E\u0D03\u0D06\uC000\u2290\u0338qual;\u62E3\u0180bcp\u0D13\u0D24\u0D4Eset\u0100;E\u0D1B\u0D1E\uC000\u2282\u20D2qual;\u6288ceeds\u0200;EST\u0D32\u0D33\u0D3B\u0D46\u6281qual;\uC000\u2AB0\u0338lantEqual;\u62E1ilde;\uC000\u227F\u0338erset\u0100;E\u0D58\u0D5B\uC000\u2283\u20D2qual;\u6289ilde\u0200;EFT\u0D6E\u0D6F\u0D75\u0D7F\u6241qual;\u6244ullEqual;\u6247ilde;\u6249erticalBar;\u6224cr;\uC000\u{1D4A9}ilde\u803B\xD1\u40D1;\u439D\u0700Eacdfgmoprstuv\u0DBD\u0DC2\u0DC9\u0DD5\u0DDB\u0DE0\u0DE7\u0DFC\u0E02\u0E20\u0E22\u0E32\u0E3F\u0E44lig;\u4152cute\u803B\xD3\u40D3\u0100iy\u0DCE\u0DD3rc\u803B\xD4\u40D4;\u441Eblac;\u4150r;\uC000\u{1D512}rave\u803B\xD2\u40D2\u0180aei\u0DEE\u0DF2\u0DF6cr;\u414Cga;\u43A9cron;\u439Fpf;\uC000\u{1D546}enCurly\u0100DQ\u0E0E\u0E1AoubleQuote;\u601Cuote;\u6018;\u6A54\u0100cl\u0E27\u0E2Cr;\uC000\u{1D4AA}ash\u803B\xD8\u40D8i\u016C\u0E37\u0E3Cde\u803B\xD5\u40D5es;\u6A37ml\u803B\xD6\u40D6er\u0100BP\u0E4B\u0E60\u0100ar\u0E50\u0E53r;\u603Eac\u0100ek\u0E5A\u0E5C;\u63DEet;\u63B4arenthesis;\u63DC\u0480acfhilors\u0E7F\u0E87\u0E8A\u0E8F\u0E92\u0E94\u0E9D\u0EB0\u0EFCrtialD;\u6202y;\u441Fr;\uC000\u{1D513}i;\u43A6;\u43A0usMinus;\u40B1\u0100ip\u0EA2\u0EADncareplan\xE5\u069Df;\u6119\u0200;eio\u0EB9\u0EBA\u0EE0\u0EE4\u6ABBcedes\u0200;EST\u0EC8\u0EC9\u0ECF\u0EDA\u627Aqual;\u6AAFlantEqual;\u627Cilde;\u627Eme;\u6033\u0100dp\u0EE9\u0EEEuct;\u620Fortion\u0100;a\u0225\u0EF9l;\u621D\u0100ci\u0F01\u0F06r;\uC000\u{1D4AB};\u43A8\u0200Ufos\u0F11\u0F16\u0F1B\u0F1FOT\u803B"\u4022r;\uC000\u{1D514}pf;\u611Acr;\uC000\u{1D4AC}\u0600BEacefhiorsu\u0F3E\u0F43\u0F47\u0F60\u0F73\u0FA7\u0FAA\u0FAD\u1096\u10A9\u10B4\u10BEarr;\u6910G\u803B\xAE\u40AE\u0180cnr\u0F4E\u0F53\u0F56ute;\u4154g;\u67EBr\u0100;t\u0F5C\u0F5D\u61A0l;\u6916\u0180aey\u0F67\u0F6C\u0F71ron;\u4158dil;\u4156;\u4420\u0100;v\u0F78\u0F79\u611Cerse\u0100EU\u0F82\u0F99\u0100lq\u0F87\u0F8Eement;\u620Builibrium;\u61CBpEquilibrium;\u696Fr\xBB\u0F79o;\u43A1ght\u0400ACDFTUVa\u0FC1\u0FEB\u0FF3\u1022\u1028\u105B\u1087\u03D8\u0100nr\u0FC6\u0FD2gleBracket;\u67E9row\u0180;BL\u0FDC\u0FDD\u0FE1\u6192ar;\u61E5eftArrow;\u61C4eiling;\u6309o\u01F5\u0FF9\0\u1005bleBracket;\u67E7n\u01D4\u100A\0\u1014eeVector;\u695Dector\u0100;B\u101D\u101E\u61C2ar;\u6955loor;\u630B\u0100er\u102D\u1043e\u0180;AV\u1035\u1036\u103C\u62A2rrow;\u61A6ector;\u695Biangle\u0180;BE\u1050\u1051\u1055\u62B3ar;\u69D0qual;\u62B5p\u0180DTV\u1063\u106E\u1078ownVector;\u694FeeVector;\u695Cector\u0100;B\u1082\u1083\u61BEar;\u6954ector\u0100;B\u1091\u1092\u61C0ar;\u6953\u0100pu\u109B\u109Ef;\u611DndImplies;\u6970ightarrow;\u61DB\u0100ch\u10B9\u10BCr;\u611B;\u61B1leDelayed;\u69F4\u0680HOacfhimoqstu\u10E4\u10F1\u10F7\u10FD\u1119\u111E\u1151\u1156\u1161\u1167\u11B5\u11BB\u11BF\u0100Cc\u10E9\u10EEHcy;\u4429y;\u4428FTcy;\u442Ccute;\u415A\u0280;aeiy\u1108\u1109\u110E\u1113\u1117\u6ABCron;\u4160dil;\u415Erc;\u415C;\u4421r;\uC000\u{1D516}ort\u0200DLRU\u112A\u1134\u113E\u1149ownArrow\xBB\u041EeftArrow\xBB\u089AightArrow\xBB\u0FDDpArrow;\u6191gma;\u43A3allCircle;\u6218pf;\uC000\u{1D54A}\u0272\u116D\0\0\u1170t;\u621Aare\u0200;ISU\u117B\u117C\u1189\u11AF\u65A1ntersection;\u6293u\u0100bp\u118F\u119Eset\u0100;E\u1197\u1198\u628Fqual;\u6291erset\u0100;E\u11A8\u11A9\u6290qual;\u6292nion;\u6294cr;\uC000\u{1D4AE}ar;\u62C6\u0200bcmp\u11C8\u11DB\u1209\u120B\u0100;s\u11CD\u11CE\u62D0et\u0100;E\u11CD\u11D5qual;\u6286\u0100ch\u11E0\u1205eeds\u0200;EST\u11ED\u11EE\u11F4\u11FF\u627Bqual;\u6AB0lantEqual;\u627Dilde;\u627FTh\xE1\u0F8C;\u6211\u0180;es\u1212\u1213\u1223\u62D1rset\u0100;E\u121C\u121D\u6283qual;\u6287et\xBB\u1213\u0580HRSacfhiors\u123E\u1244\u1249\u1255\u125E\u1271\u1276\u129F\u12C2\u12C8\u12D1ORN\u803B\xDE\u40DEADE;\u6122\u0100Hc\u124E\u1252cy;\u440By;\u4426\u0100bu\u125A\u125C;\u4009;\u43A4\u0180aey\u1265\u126A\u126Fron;\u4164dil;\u4162;\u4422r;\uC000\u{1D517}\u0100ei\u127B\u1289\u01F2\u1280\0\u1287efore;\u6234a;\u4398\u0100cn\u128E\u1298kSpace;\uC000\u205F\u200ASpace;\u6009lde\u0200;EFT\u12AB\u12AC\u12B2\u12BC\u623Cqual;\u6243ullEqual;\u6245ilde;\u6248pf;\uC000\u{1D54B}ipleDot;\u60DB\u0100ct\u12D6\u12DBr;\uC000\u{1D4AF}rok;\u4166\u0AE1\u12F7\u130E\u131A\u1326\0\u132C\u1331\0\0\0\0\0\u1338\u133D\u1377\u1385\0\u13FF\u1404\u140A\u1410\u0100cr\u12FB\u1301ute\u803B\xDA\u40DAr\u0100;o\u1307\u1308\u619Fcir;\u6949r\u01E3\u1313\0\u1316y;\u440Eve;\u416C\u0100iy\u131E\u1323rc\u803B\xDB\u40DB;\u4423blac;\u4170r;\uC000\u{1D518}rave\u803B\xD9\u40D9acr;\u416A\u0100di\u1341\u1369er\u0100BP\u1348\u135D\u0100ar\u134D\u1350r;\u405Fac\u0100ek\u1357\u1359;\u63DFet;\u63B5arenthesis;\u63DDon\u0100;P\u1370\u1371\u62C3lus;\u628E\u0100gp\u137B\u137Fon;\u4172f;\uC000\u{1D54C}\u0400ADETadps\u1395\u13AE\u13B8\u13C4\u03E8\u13D2\u13D7\u13F3rrow\u0180;BD\u1150\u13A0\u13A4ar;\u6912ownArrow;\u61C5ownArrow;\u6195quilibrium;\u696Eee\u0100;A\u13CB\u13CC\u62A5rrow;\u61A5own\xE1\u03F3er\u0100LR\u13DE\u13E8eftArrow;\u6196ightArrow;\u6197i\u0100;l\u13F9\u13FA\u43D2on;\u43A5ing;\u416Ecr;\uC000\u{1D4B0}ilde;\u4168ml\u803B\xDC\u40DC\u0480Dbcdefosv\u1427\u142C\u1430\u1433\u143E\u1485\u148A\u1490\u1496ash;\u62ABar;\u6AEBy;\u4412ash\u0100;l\u143B\u143C\u62A9;\u6AE6\u0100er\u1443\u1445;\u62C1\u0180bty\u144C\u1450\u147Aar;\u6016\u0100;i\u144F\u1455cal\u0200BLST\u1461\u1465\u146A\u1474ar;\u6223ine;\u407Ceparator;\u6758ilde;\u6240ThinSpace;\u600Ar;\uC000\u{1D519}pf;\uC000\u{1D54D}cr;\uC000\u{1D4B1}dash;\u62AA\u0280cefos\u14A7\u14AC\u14B1\u14B6\u14BCirc;\u4174dge;\u62C0r;\uC000\u{1D51A}pf;\uC000\u{1D54E}cr;\uC000\u{1D4B2}\u0200fios\u14CB\u14D0\u14D2\u14D8r;\uC000\u{1D51B};\u439Epf;\uC000\u{1D54F}cr;\uC000\u{1D4B3}\u0480AIUacfosu\u14F1\u14F5\u14F9\u14FD\u1504\u150F\u1514\u151A\u1520cy;\u442Fcy;\u4407cy;\u442Ecute\u803B\xDD\u40DD\u0100iy\u1509\u150Drc;\u4176;\u442Br;\uC000\u{1D51C}pf;\uC000\u{1D550}cr;\uC000\u{1D4B4}ml;\u4178\u0400Hacdefos\u1535\u1539\u153F\u154B\u154F\u155D\u1560\u1564cy;\u4416cute;\u4179\u0100ay\u1544\u1549ron;\u417D;\u4417ot;\u417B\u01F2\u1554\0\u155BoWidt\xE8\u0AD9a;\u4396r;\u6128pf;\u6124cr;\uC000\u{1D4B5}\u0BE1\u1583\u158A\u1590\0\u15B0\u15B6\u15BF\0\0\0\0\u15C6\u15DB\u15EB\u165F\u166D\0\u1695\u169B\u16B2\u16B9\0\u16BEcute\u803B\xE1\u40E1reve;\u4103\u0300;Ediuy\u159C\u159D\u15A1\u15A3\u15A8\u15AD\u623E;\uC000\u223E\u0333;\u623Frc\u803B\xE2\u40E2te\u80BB\xB4\u0306;\u4430lig\u803B\xE6\u40E6\u0100;r\xB2\u15BA;\uC000\u{1D51E}rave\u803B\xE0\u40E0\u0100ep\u15CA\u15D6\u0100fp\u15CF\u15D4sym;\u6135\xE8\u15D3ha;\u43B1\u0100ap\u15DFc\u0100cl\u15E4\u15E7r;\u4101g;\u6A3F\u0264\u15F0\0\0\u160A\u0280;adsv\u15FA\u15FB\u15FF\u1601\u1607\u6227nd;\u6A55;\u6A5Clope;\u6A58;\u6A5A\u0380;elmrsz\u1618\u1619\u161B\u161E\u163F\u164F\u1659\u6220;\u69A4e\xBB\u1619sd\u0100;a\u1625\u1626\u6221\u0461\u1630\u1632\u1634\u1636\u1638\u163A\u163C\u163E;\u69A8;\u69A9;\u69AA;\u69AB;\u69AC;\u69AD;\u69AE;\u69AFt\u0100;v\u1645\u1646\u621Fb\u0100;d\u164C\u164D\u62BE;\u699D\u0100pt\u1654\u1657h;\u6222\xBB\xB9arr;\u637C\u0100gp\u1663\u1667on;\u4105f;\uC000\u{1D552}\u0380;Eaeiop\u12C1\u167B\u167D\u1682\u1684\u1687\u168A;\u6A70cir;\u6A6F;\u624Ad;\u624Bs;\u4027rox\u0100;e\u12C1\u1692\xF1\u1683ing\u803B\xE5\u40E5\u0180cty\u16A1\u16A6\u16A8r;\uC000\u{1D4B6};\u402Amp\u0100;e\u12C1\u16AF\xF1\u0288ilde\u803B\xE3\u40E3ml\u803B\xE4\u40E4\u0100ci\u16C2\u16C8onin\xF4\u0272nt;\u6A11\u0800Nabcdefiklnoprsu\u16ED\u16F1\u1730\u173C\u1743\u1748\u1778\u177D\u17E0\u17E6\u1839\u1850\u170D\u193D\u1948\u1970ot;\u6AED\u0100cr\u16F6\u171Ek\u0200ceps\u1700\u1705\u170D\u1713ong;\u624Cpsilon;\u43F6rime;\u6035im\u0100;e\u171A\u171B\u623Dq;\u62CD\u0176\u1722\u1726ee;\u62BDed\u0100;g\u172C\u172D\u6305e\xBB\u172Drk\u0100;t\u135C\u1737brk;\u63B6\u0100oy\u1701\u1741;\u4431quo;\u601E\u0280cmprt\u1753\u175B\u1761\u1764\u1768aus\u0100;e\u010A\u0109ptyv;\u69B0s\xE9\u170Cno\xF5\u0113\u0180ahw\u176F\u1771\u1773;\u43B2;\u6136een;\u626Cr;\uC000\u{1D51F}g\u0380costuvw\u178D\u179D\u17B3\u17C1\u17D5\u17DB\u17DE\u0180aiu\u1794\u1796\u179A\xF0\u0760rc;\u65EFp\xBB\u1371\u0180dpt\u17A4\u17A8\u17ADot;\u6A00lus;\u6A01imes;\u6A02\u0271\u17B9\0\0\u17BEcup;\u6A06ar;\u6605riangle\u0100du\u17CD\u17D2own;\u65BDp;\u65B3plus;\u6A04e\xE5\u1444\xE5\u14ADarow;\u690D\u0180ako\u17ED\u1826\u1835\u0100cn\u17F2\u1823k\u0180lst\u17FA\u05AB\u1802ozenge;\u69EBriangle\u0200;dlr\u1812\u1813\u1818\u181D\u65B4own;\u65BEeft;\u65C2ight;\u65B8k;\u6423\u01B1\u182B\0\u1833\u01B2\u182F\0\u1831;\u6592;\u65914;\u6593ck;\u6588\u0100eo\u183E\u184D\u0100;q\u1843\u1846\uC000=\u20E5uiv;\uC000\u2261\u20E5t;\u6310\u0200ptwx\u1859\u185E\u1867\u186Cf;\uC000\u{1D553}\u0100;t\u13CB\u1863om\xBB\u13CCtie;\u62C8\u0600DHUVbdhmptuv\u1885\u1896\u18AA\u18BB\u18D7\u18DB\u18EC\u18FF\u1905\u190A\u1910\u1921\u0200LRlr\u188E\u1890\u1892\u1894;\u6557;\u6554;\u6556;\u6553\u0280;DUdu\u18A1\u18A2\u18A4\u18A6\u18A8\u6550;\u6566;\u6569;\u6564;\u6567\u0200LRlr\u18B3\u18B5\u18B7\u18B9;\u655D;\u655A;\u655C;\u6559\u0380;HLRhlr\u18CA\u18CB\u18CD\u18CF\u18D1\u18D3\u18D5\u6551;\u656C;\u6563;\u6560;\u656B;\u6562;\u655Fox;\u69C9\u0200LRlr\u18E4\u18E6\u18E8\u18EA;\u6555;\u6552;\u6510;\u650C\u0280;DUdu\u06BD\u18F7\u18F9\u18FB\u18FD;\u6565;\u6568;\u652C;\u6534inus;\u629Flus;\u629Eimes;\u62A0\u0200LRlr\u1919\u191B\u191D\u191F;\u655B;\u6558;\u6518;\u6514\u0380;HLRhlr\u1930\u1931\u1933\u1935\u1937\u1939\u193B\u6502;\u656A;\u6561;\u655E;\u653C;\u6524;\u651C\u0100ev\u0123\u1942bar\u803B\xA6\u40A6\u0200ceio\u1951\u1956\u195A\u1960r;\uC000\u{1D4B7}mi;\u604Fm\u0100;e\u171A\u171Cl\u0180;bh\u1968\u1969\u196B\u405C;\u69C5sub;\u67C8\u016C\u1974\u197El\u0100;e\u1979\u197A\u6022t\xBB\u197Ap\u0180;Ee\u012F\u1985\u1987;\u6AAE\u0100;q\u06DC\u06DB\u0CE1\u19A7\0\u19E8\u1A11\u1A15\u1A32\0\u1A37\u1A50\0\0\u1AB4\0\0\u1AC1\0\0\u1B21\u1B2E\u1B4D\u1B52\0\u1BFD\0\u1C0C\u0180cpr\u19AD\u19B2\u19DDute;\u4107\u0300;abcds\u19BF\u19C0\u19C4\u19CA\u19D5\u19D9\u6229nd;\u6A44rcup;\u6A49\u0100au\u19CF\u19D2p;\u6A4Bp;\u6A47ot;\u6A40;\uC000\u2229\uFE00\u0100eo\u19E2\u19E5t;\u6041\xEE\u0693\u0200aeiu\u19F0\u19FB\u1A01\u1A05\u01F0\u19F5\0\u19F8s;\u6A4Don;\u410Ddil\u803B\xE7\u40E7rc;\u4109ps\u0100;s\u1A0C\u1A0D\u6A4Cm;\u6A50ot;\u410B\u0180dmn\u1A1B\u1A20\u1A26il\u80BB\xB8\u01ADptyv;\u69B2t\u8100\xA2;e\u1A2D\u1A2E\u40A2r\xE4\u01B2r;\uC000\u{1D520}\u0180cei\u1A3D\u1A40\u1A4Dy;\u4447ck\u0100;m\u1A47\u1A48\u6713ark\xBB\u1A48;\u43C7r\u0380;Ecefms\u1A5F\u1A60\u1A62\u1A6B\u1AA4\u1AAA\u1AAE\u65CB;\u69C3\u0180;el\u1A69\u1A6A\u1A6D\u42C6q;\u6257e\u0261\u1A74\0\0\u1A88rrow\u0100lr\u1A7C\u1A81eft;\u61BAight;\u61BB\u0280RSacd\u1A92\u1A94\u1A96\u1A9A\u1A9F\xBB\u0F47;\u64C8st;\u629Birc;\u629Aash;\u629Dnint;\u6A10id;\u6AEFcir;\u69C2ubs\u0100;u\u1ABB\u1ABC\u6663it\xBB\u1ABC\u02EC\u1AC7\u1AD4\u1AFA\0\u1B0Aon\u0100;e\u1ACD\u1ACE\u403A\u0100;q\xC7\xC6\u026D\u1AD9\0\0\u1AE2a\u0100;t\u1ADE\u1ADF\u402C;\u4040\u0180;fl\u1AE8\u1AE9\u1AEB\u6201\xEE\u1160e\u0100mx\u1AF1\u1AF6ent\xBB\u1AE9e\xF3\u024D\u01E7\u1AFE\0\u1B07\u0100;d\u12BB\u1B02ot;\u6A6Dn\xF4\u0246\u0180fry\u1B10\u1B14\u1B17;\uC000\u{1D554}o\xE4\u0254\u8100\xA9;s\u0155\u1B1Dr;\u6117\u0100ao\u1B25\u1B29rr;\u61B5ss;\u6717\u0100cu\u1B32\u1B37r;\uC000\u{1D4B8}\u0100bp\u1B3C\u1B44\u0100;e\u1B41\u1B42\u6ACF;\u6AD1\u0100;e\u1B49\u1B4A\u6AD0;\u6AD2dot;\u62EF\u0380delprvw\u1B60\u1B6C\u1B77\u1B82\u1BAC\u1BD4\u1BF9arr\u0100lr\u1B68\u1B6A;\u6938;\u6935\u0270\u1B72\0\0\u1B75r;\u62DEc;\u62DFarr\u0100;p\u1B7F\u1B80\u61B6;\u693D\u0300;bcdos\u1B8F\u1B90\u1B96\u1BA1\u1BA5\u1BA8\u622Arcap;\u6A48\u0100au\u1B9B\u1B9Ep;\u6A46p;\u6A4Aot;\u628Dr;\u6A45;\uC000\u222A\uFE00\u0200alrv\u1BB5\u1BBF\u1BDE\u1BE3rr\u0100;m\u1BBC\u1BBD\u61B7;\u693Cy\u0180evw\u1BC7\u1BD4\u1BD8q\u0270\u1BCE\0\0\u1BD2re\xE3\u1B73u\xE3\u1B75ee;\u62CEedge;\u62CFen\u803B\xA4\u40A4earrow\u0100lr\u1BEE\u1BF3eft\xBB\u1B80ight\xBB\u1BBDe\xE4\u1BDD\u0100ci\u1C01\u1C07onin\xF4\u01F7nt;\u6231lcty;\u632D\u0980AHabcdefhijlorstuwz\u1C38\u1C3B\u1C3F\u1C5D\u1C69\u1C75\u1C8A\u1C9E\u1CAC\u1CB7\u1CFB\u1CFF\u1D0D\u1D7B\u1D91\u1DAB\u1DBB\u1DC6\u1DCDr\xF2\u0381ar;\u6965\u0200glrs\u1C48\u1C4D\u1C52\u1C54ger;\u6020eth;\u6138\xF2\u1133h\u0100;v\u1C5A\u1C5B\u6010\xBB\u090A\u016B\u1C61\u1C67arow;\u690Fa\xE3\u0315\u0100ay\u1C6E\u1C73ron;\u410F;\u4434\u0180;ao\u0332\u1C7C\u1C84\u0100gr\u02BF\u1C81r;\u61CAtseq;\u6A77\u0180glm\u1C91\u1C94\u1C98\u803B\xB0\u40B0ta;\u43B4ptyv;\u69B1\u0100ir\u1CA3\u1CA8sht;\u697F;\uC000\u{1D521}ar\u0100lr\u1CB3\u1CB5\xBB\u08DC\xBB\u101E\u0280aegsv\u1CC2\u0378\u1CD6\u1CDC\u1CE0m\u0180;os\u0326\u1CCA\u1CD4nd\u0100;s\u0326\u1CD1uit;\u6666amma;\u43DDin;\u62F2\u0180;io\u1CE7\u1CE8\u1CF8\u40F7de\u8100\xF7;o\u1CE7\u1CF0ntimes;\u62C7n\xF8\u1CF7cy;\u4452c\u026F\u1D06\0\0\u1D0Arn;\u631Eop;\u630D\u0280lptuw\u1D18\u1D1D\u1D22\u1D49\u1D55lar;\u4024f;\uC000\u{1D555}\u0280;emps\u030B\u1D2D\u1D37\u1D3D\u1D42q\u0100;d\u0352\u1D33ot;\u6251inus;\u6238lus;\u6214quare;\u62A1blebarwedg\xE5\xFAn\u0180adh\u112E\u1D5D\u1D67ownarrow\xF3\u1C83arpoon\u0100lr\u1D72\u1D76ef\xF4\u1CB4igh\xF4\u1CB6\u0162\u1D7F\u1D85karo\xF7\u0F42\u026F\u1D8A\0\0\u1D8Ern;\u631Fop;\u630C\u0180cot\u1D98\u1DA3\u1DA6\u0100ry\u1D9D\u1DA1;\uC000\u{1D4B9};\u4455l;\u69F6rok;\u4111\u0100dr\u1DB0\u1DB4ot;\u62F1i\u0100;f\u1DBA\u1816\u65BF\u0100ah\u1DC0\u1DC3r\xF2\u0429a\xF2\u0FA6angle;\u69A6\u0100ci\u1DD2\u1DD5y;\u445Fgrarr;\u67FF\u0900Dacdefglmnopqrstux\u1E01\u1E09\u1E19\u1E38\u0578\u1E3C\u1E49\u1E61\u1E7E\u1EA5\u1EAF\u1EBD\u1EE1\u1F2A\u1F37\u1F44\u1F4E\u1F5A\u0100Do\u1E06\u1D34o\xF4\u1C89\u0100cs\u1E0E\u1E14ute\u803B\xE9\u40E9ter;\u6A6E\u0200aioy\u1E22\u1E27\u1E31\u1E36ron;\u411Br\u0100;c\u1E2D\u1E2E\u6256\u803B\xEA\u40EAlon;\u6255;\u444Dot;\u4117\u0100Dr\u1E41\u1E45ot;\u6252;\uC000\u{1D522}\u0180;rs\u1E50\u1E51\u1E57\u6A9Aave\u803B\xE8\u40E8\u0100;d\u1E5C\u1E5D\u6A96ot;\u6A98\u0200;ils\u1E6A\u1E6B\u1E72\u1E74\u6A99nters;\u63E7;\u6113\u0100;d\u1E79\u1E7A\u6A95ot;\u6A97\u0180aps\u1E85\u1E89\u1E97cr;\u4113ty\u0180;sv\u1E92\u1E93\u1E95\u6205et\xBB\u1E93p\u01001;\u1E9D\u1EA4\u0133\u1EA1\u1EA3;\u6004;\u6005\u6003\u0100gs\u1EAA\u1EAC;\u414Bp;\u6002\u0100gp\u1EB4\u1EB8on;\u4119f;\uC000\u{1D556}\u0180als\u1EC4\u1ECE\u1ED2r\u0100;s\u1ECA\u1ECB\u62D5l;\u69E3us;\u6A71i\u0180;lv\u1EDA\u1EDB\u1EDF\u43B5on\xBB\u1EDB;\u43F5\u0200csuv\u1EEA\u1EF3\u1F0B\u1F23\u0100io\u1EEF\u1E31rc\xBB\u1E2E\u0269\u1EF9\0\0\u1EFB\xED\u0548ant\u0100gl\u1F02\u1F06tr\xBB\u1E5Dess\xBB\u1E7A\u0180aei\u1F12\u1F16\u1F1Als;\u403Dst;\u625Fv\u0100;D\u0235\u1F20D;\u6A78parsl;\u69E5\u0100Da\u1F2F\u1F33ot;\u6253rr;\u6971\u0180cdi\u1F3E\u1F41\u1EF8r;\u612Fo\xF4\u0352\u0100ah\u1F49\u1F4B;\u43B7\u803B\xF0\u40F0\u0100mr\u1F53\u1F57l\u803B\xEB\u40EBo;\u60AC\u0180cip\u1F61\u1F64\u1F67l;\u4021s\xF4\u056E\u0100eo\u1F6C\u1F74ctatio\xEE\u0559nential\xE5\u0579\u09E1\u1F92\0\u1F9E\0\u1FA1\u1FA7\0\0\u1FC6\u1FCC\0\u1FD3\0\u1FE6\u1FEA\u2000\0\u2008\u205Allingdotse\xF1\u1E44y;\u4444male;\u6640\u0180ilr\u1FAD\u1FB3\u1FC1lig;\u8000\uFB03\u0269\u1FB9\0\0\u1FBDg;\u8000\uFB00ig;\u8000\uFB04;\uC000\u{1D523}lig;\u8000\uFB01lig;\uC000fj\u0180alt\u1FD9\u1FDC\u1FE1t;\u666Dig;\u8000\uFB02ns;\u65B1of;\u4192\u01F0\u1FEE\0\u1FF3f;\uC000\u{1D557}\u0100ak\u05BF\u1FF7\u0100;v\u1FFC\u1FFD\u62D4;\u6AD9artint;\u6A0D\u0100ao\u200C\u2055\u0100cs\u2011\u2052\u03B1\u201A\u2030\u2038\u2045\u2048\0\u2050\u03B2\u2022\u2025\u2027\u202A\u202C\0\u202E\u803B\xBD\u40BD;\u6153\u803B\xBC\u40BC;\u6155;\u6159;\u615B\u01B3\u2034\0\u2036;\u6154;\u6156\u02B4\u203E\u2041\0\0\u2043\u803B\xBE\u40BE;\u6157;\u615C5;\u6158\u01B6\u204C\0\u204E;\u615A;\u615D8;\u615El;\u6044wn;\u6322cr;\uC000\u{1D4BB}\u0880Eabcdefgijlnorstv\u2082\u2089\u209F\u20A5\u20B0\u20B4\u20F0\u20F5\u20FA\u20FF\u2103\u2112\u2138\u0317\u213E\u2152\u219E\u0100;l\u064D\u2087;\u6A8C\u0180cmp\u2090\u2095\u209Dute;\u41F5ma\u0100;d\u209C\u1CDA\u43B3;\u6A86reve;\u411F\u0100iy\u20AA\u20AErc;\u411D;\u4433ot;\u4121\u0200;lqs\u063E\u0642\u20BD\u20C9\u0180;qs\u063E\u064C\u20C4lan\xF4\u0665\u0200;cdl\u0665\u20D2\u20D5\u20E5c;\u6AA9ot\u0100;o\u20DC\u20DD\u6A80\u0100;l\u20E2\u20E3\u6A82;\u6A84\u0100;e\u20EA\u20ED\uC000\u22DB\uFE00s;\u6A94r;\uC000\u{1D524}\u0100;g\u0673\u061Bmel;\u6137cy;\u4453\u0200;Eaj\u065A\u210C\u210E\u2110;\u6A92;\u6AA5;\u6AA4\u0200Eaes\u211B\u211D\u2129\u2134;\u6269p\u0100;p\u2123\u2124\u6A8Arox\xBB\u2124\u0100;q\u212E\u212F\u6A88\u0100;q\u212E\u211Bim;\u62E7pf;\uC000\u{1D558}\u0100ci\u2143\u2146r;\u610Am\u0180;el\u066B\u214E\u2150;\u6A8E;\u6A90\u8300>;cdlqr\u05EE\u2160\u216A\u216E\u2173\u2179\u0100ci\u2165\u2167;\u6AA7r;\u6A7Aot;\u62D7Par;\u6995uest;\u6A7C\u0280adels\u2184\u216A\u2190\u0656\u219B\u01F0\u2189\0\u218Epro\xF8\u209Er;\u6978q\u0100lq\u063F\u2196les\xF3\u2088i\xED\u066B\u0100en\u21A3\u21ADrtneqq;\uC000\u2269\uFE00\xC5\u21AA\u0500Aabcefkosy\u21C4\u21C7\u21F1\u21F5\u21FA\u2218\u221D\u222F\u2268\u227Dr\xF2\u03A0\u0200ilmr\u21D0\u21D4\u21D7\u21DBrs\xF0\u1484f\xBB\u2024il\xF4\u06A9\u0100dr\u21E0\u21E4cy;\u444A\u0180;cw\u08F4\u21EB\u21EFir;\u6948;\u61ADar;\u610Firc;\u4125\u0180alr\u2201\u220E\u2213rts\u0100;u\u2209\u220A\u6665it\xBB\u220Alip;\u6026con;\u62B9r;\uC000\u{1D525}s\u0100ew\u2223\u2229arow;\u6925arow;\u6926\u0280amopr\u223A\u223E\u2243\u225E\u2263rr;\u61FFtht;\u623Bk\u0100lr\u2249\u2253eftarrow;\u61A9ightarrow;\u61AAf;\uC000\u{1D559}bar;\u6015\u0180clt\u226F\u2274\u2278r;\uC000\u{1D4BD}as\xE8\u21F4rok;\u4127\u0100bp\u2282\u2287ull;\u6043hen\xBB\u1C5B\u0AE1\u22A3\0\u22AA\0\u22B8\u22C5\u22CE\0\u22D5\u22F3\0\0\u22F8\u2322\u2367\u2362\u237F\0\u2386\u23AA\u23B4cute\u803B\xED\u40ED\u0180;iy\u0771\u22B0\u22B5rc\u803B\xEE\u40EE;\u4438\u0100cx\u22BC\u22BFy;\u4435cl\u803B\xA1\u40A1\u0100fr\u039F\u22C9;\uC000\u{1D526}rave\u803B\xEC\u40EC\u0200;ino\u073E\u22DD\u22E9\u22EE\u0100in\u22E2\u22E6nt;\u6A0Ct;\u622Dfin;\u69DCta;\u6129lig;\u4133\u0180aop\u22FE\u231A\u231D\u0180cgt\u2305\u2308\u2317r;\u412B\u0180elp\u071F\u230F\u2313in\xE5\u078Ear\xF4\u0720h;\u4131f;\u62B7ed;\u41B5\u0280;cfot\u04F4\u232C\u2331\u233D\u2341are;\u6105in\u0100;t\u2338\u2339\u621Eie;\u69DDdo\xF4\u2319\u0280;celp\u0757\u234C\u2350\u235B\u2361al;\u62BA\u0100gr\u2355\u2359er\xF3\u1563\xE3\u234Darhk;\u6A17rod;\u6A3C\u0200cgpt\u236F\u2372\u2376\u237By;\u4451on;\u412Ff;\uC000\u{1D55A}a;\u43B9uest\u803B\xBF\u40BF\u0100ci\u238A\u238Fr;\uC000\u{1D4BE}n\u0280;Edsv\u04F4\u239B\u239D\u23A1\u04F3;\u62F9ot;\u62F5\u0100;v\u23A6\u23A7\u62F4;\u62F3\u0100;i\u0777\u23AElde;\u4129\u01EB\u23B8\0\u23BCcy;\u4456l\u803B\xEF\u40EF\u0300cfmosu\u23CC\u23D7\u23DC\u23E1\u23E7\u23F5\u0100iy\u23D1\u23D5rc;\u4135;\u4439r;\uC000\u{1D527}ath;\u4237pf;\uC000\u{1D55B}\u01E3\u23EC\0\u23F1r;\uC000\u{1D4BF}rcy;\u4458kcy;\u4454\u0400acfghjos\u240B\u2416\u2422\u2427\u242D\u2431\u2435\u243Bppa\u0100;v\u2413\u2414\u43BA;\u43F0\u0100ey\u241B\u2420dil;\u4137;\u443Ar;\uC000\u{1D528}reen;\u4138cy;\u4445cy;\u445Cpf;\uC000\u{1D55C}cr;\uC000\u{1D4C0}\u0B80ABEHabcdefghjlmnoprstuv\u2470\u2481\u2486\u248D\u2491\u250E\u253D\u255A\u2580\u264E\u265E\u2665\u2679\u267D\u269A\u26B2\u26D8\u275D\u2768\u278B\u27C0\u2801\u2812\u0180art\u2477\u247A\u247Cr\xF2\u09C6\xF2\u0395ail;\u691Barr;\u690E\u0100;g\u0994\u248B;\u6A8Bar;\u6962\u0963\u24A5\0\u24AA\0\u24B1\0\0\0\0\0\u24B5\u24BA\0\u24C6\u24C8\u24CD\0\u24F9ute;\u413Amptyv;\u69B4ra\xEE\u084Cbda;\u43BBg\u0180;dl\u088E\u24C1\u24C3;\u6991\xE5\u088E;\u6A85uo\u803B\xAB\u40ABr\u0400;bfhlpst\u0899\u24DE\u24E6\u24E9\u24EB\u24EE\u24F1\u24F5\u0100;f\u089D\u24E3s;\u691Fs;\u691D\xEB\u2252p;\u61ABl;\u6939im;\u6973l;\u61A2\u0180;ae\u24FF\u2500\u2504\u6AABil;\u6919\u0100;s\u2509\u250A\u6AAD;\uC000\u2AAD\uFE00\u0180abr\u2515\u2519\u251Drr;\u690Crk;\u6772\u0100ak\u2522\u252Cc\u0100ek\u2528\u252A;\u407B;\u405B\u0100es\u2531\u2533;\u698Bl\u0100du\u2539\u253B;\u698F;\u698D\u0200aeuy\u2546\u254B\u2556\u2558ron;\u413E\u0100di\u2550\u2554il;\u413C\xEC\u08B0\xE2\u2529;\u443B\u0200cqrs\u2563\u2566\u256D\u257Da;\u6936uo\u0100;r\u0E19\u1746\u0100du\u2572\u2577har;\u6967shar;\u694Bh;\u61B2\u0280;fgqs\u258B\u258C\u0989\u25F3\u25FF\u6264t\u0280ahlrt\u2598\u25A4\u25B7\u25C2\u25E8rrow\u0100;t\u0899\u25A1a\xE9\u24F6arpoon\u0100du\u25AF\u25B4own\xBB\u045Ap\xBB\u0966eftarrows;\u61C7ight\u0180ahs\u25CD\u25D6\u25DErrow\u0100;s\u08F4\u08A7arpoon\xF3\u0F98quigarro\xF7\u21F0hreetimes;\u62CB\u0180;qs\u258B\u0993\u25FAlan\xF4\u09AC\u0280;cdgs\u09AC\u260A\u260D\u261D\u2628c;\u6AA8ot\u0100;o\u2614\u2615\u6A7F\u0100;r\u261A\u261B\u6A81;\u6A83\u0100;e\u2622\u2625\uC000\u22DA\uFE00s;\u6A93\u0280adegs\u2633\u2639\u263D\u2649\u264Bppro\xF8\u24C6ot;\u62D6q\u0100gq\u2643\u2645\xF4\u0989gt\xF2\u248C\xF4\u099Bi\xED\u09B2\u0180ilr\u2655\u08E1\u265Asht;\u697C;\uC000\u{1D529}\u0100;E\u099C\u2663;\u6A91\u0161\u2669\u2676r\u0100du\u25B2\u266E\u0100;l\u0965\u2673;\u696Alk;\u6584cy;\u4459\u0280;acht\u0A48\u2688\u268B\u2691\u2696r\xF2\u25C1orne\xF2\u1D08ard;\u696Bri;\u65FA\u0100io\u269F\u26A4dot;\u4140ust\u0100;a\u26AC\u26AD\u63B0che\xBB\u26AD\u0200Eaes\u26BB\u26BD\u26C9\u26D4;\u6268p\u0100;p\u26C3\u26C4\u6A89rox\xBB\u26C4\u0100;q\u26CE\u26CF\u6A87\u0100;q\u26CE\u26BBim;\u62E6\u0400abnoptwz\u26E9\u26F4\u26F7\u271A\u272F\u2741\u2747\u2750\u0100nr\u26EE\u26F1g;\u67ECr;\u61FDr\xEB\u08C1g\u0180lmr\u26FF\u270D\u2714eft\u0100ar\u09E6\u2707ight\xE1\u09F2apsto;\u67FCight\xE1\u09FDparrow\u0100lr\u2725\u2729ef\xF4\u24EDight;\u61AC\u0180afl\u2736\u2739\u273Dr;\u6985;\uC000\u{1D55D}us;\u6A2Dimes;\u6A34\u0161\u274B\u274Fst;\u6217\xE1\u134E\u0180;ef\u2757\u2758\u1800\u65CAnge\xBB\u2758ar\u0100;l\u2764\u2765\u4028t;\u6993\u0280achmt\u2773\u2776\u277C\u2785\u2787r\xF2\u08A8orne\xF2\u1D8Car\u0100;d\u0F98\u2783;\u696D;\u600Eri;\u62BF\u0300achiqt\u2798\u279D\u0A40\u27A2\u27AE\u27BBquo;\u6039r;\uC000\u{1D4C1}m\u0180;eg\u09B2\u27AA\u27AC;\u6A8D;\u6A8F\u0100bu\u252A\u27B3o\u0100;r\u0E1F\u27B9;\u601Arok;\u4142\u8400<;cdhilqr\u082B\u27D2\u2639\u27DC\u27E0\u27E5\u27EA\u27F0\u0100ci\u27D7\u27D9;\u6AA6r;\u6A79re\xE5\u25F2mes;\u62C9arr;\u6976uest;\u6A7B\u0100Pi\u27F5\u27F9ar;\u6996\u0180;ef\u2800\u092D\u181B\u65C3r\u0100du\u2807\u280Dshar;\u694Ahar;\u6966\u0100en\u2817\u2821rtneqq;\uC000\u2268\uFE00\xC5\u281E\u0700Dacdefhilnopsu\u2840\u2845\u2882\u288E\u2893\u28A0\u28A5\u28A8\u28DA\u28E2\u28E4\u0A83\u28F3\u2902Dot;\u623A\u0200clpr\u284E\u2852\u2863\u287Dr\u803B\xAF\u40AF\u0100et\u2857\u2859;\u6642\u0100;e\u285E\u285F\u6720se\xBB\u285F\u0100;s\u103B\u2868to\u0200;dlu\u103B\u2873\u2877\u287Bow\xEE\u048Cef\xF4\u090F\xF0\u13D1ker;\u65AE\u0100oy\u2887\u288Cmma;\u6A29;\u443Cash;\u6014asuredangle\xBB\u1626r;\uC000\u{1D52A}o;\u6127\u0180cdn\u28AF\u28B4\u28C9ro\u803B\xB5\u40B5\u0200;acd\u1464\u28BD\u28C0\u28C4s\xF4\u16A7ir;\u6AF0ot\u80BB\xB7\u01B5us\u0180;bd\u28D2\u1903\u28D3\u6212\u0100;u\u1D3C\u28D8;\u6A2A\u0163\u28DE\u28E1p;\u6ADB\xF2\u2212\xF0\u0A81\u0100dp\u28E9\u28EEels;\u62A7f;\uC000\u{1D55E}\u0100ct\u28F8\u28FDr;\uC000\u{1D4C2}pos\xBB\u159D\u0180;lm\u2909\u290A\u290D\u43BCtimap;\u62B8\u0C00GLRVabcdefghijlmoprstuvw\u2942\u2953\u297E\u2989\u2998\u29DA\u29E9\u2A15\u2A1A\u2A58\u2A5D\u2A83\u2A95\u2AA4\u2AA8\u2B04\u2B07\u2B44\u2B7F\u2BAE\u2C34\u2C67\u2C7C\u2CE9\u0100gt\u2947\u294B;\uC000\u22D9\u0338\u0100;v\u2950\u0BCF\uC000\u226B\u20D2\u0180elt\u295A\u2972\u2976ft\u0100ar\u2961\u2967rrow;\u61CDightarrow;\u61CE;\uC000\u22D8\u0338\u0100;v\u297B\u0C47\uC000\u226A\u20D2ightarrow;\u61CF\u0100Dd\u298E\u2993ash;\u62AFash;\u62AE\u0280bcnpt\u29A3\u29A7\u29AC\u29B1\u29CCla\xBB\u02DEute;\u4144g;\uC000\u2220\u20D2\u0280;Eiop\u0D84\u29BC\u29C0\u29C5\u29C8;\uC000\u2A70\u0338d;\uC000\u224B\u0338s;\u4149ro\xF8\u0D84ur\u0100;a\u29D3\u29D4\u666El\u0100;s\u29D3\u0B38\u01F3\u29DF\0\u29E3p\u80BB\xA0\u0B37mp\u0100;e\u0BF9\u0C00\u0280aeouy\u29F4\u29FE\u2A03\u2A10\u2A13\u01F0\u29F9\0\u29FB;\u6A43on;\u4148dil;\u4146ng\u0100;d\u0D7E\u2A0Aot;\uC000\u2A6D\u0338p;\u6A42;\u443Dash;\u6013\u0380;Aadqsx\u0B92\u2A29\u2A2D\u2A3B\u2A41\u2A45\u2A50rr;\u61D7r\u0100hr\u2A33\u2A36k;\u6924\u0100;o\u13F2\u13F0ot;\uC000\u2250\u0338ui\xF6\u0B63\u0100ei\u2A4A\u2A4Ear;\u6928\xED\u0B98ist\u0100;s\u0BA0\u0B9Fr;\uC000\u{1D52B}\u0200Eest\u0BC5\u2A66\u2A79\u2A7C\u0180;qs\u0BBC\u2A6D\u0BE1\u0180;qs\u0BBC\u0BC5\u2A74lan\xF4\u0BE2i\xED\u0BEA\u0100;r\u0BB6\u2A81\xBB\u0BB7\u0180Aap\u2A8A\u2A8D\u2A91r\xF2\u2971rr;\u61AEar;\u6AF2\u0180;sv\u0F8D\u2A9C\u0F8C\u0100;d\u2AA1\u2AA2\u62FC;\u62FAcy;\u445A\u0380AEadest\u2AB7\u2ABA\u2ABE\u2AC2\u2AC5\u2AF6\u2AF9r\xF2\u2966;\uC000\u2266\u0338rr;\u619Ar;\u6025\u0200;fqs\u0C3B\u2ACE\u2AE3\u2AEFt\u0100ar\u2AD4\u2AD9rro\xF7\u2AC1ightarro\xF7\u2A90\u0180;qs\u0C3B\u2ABA\u2AEAlan\xF4\u0C55\u0100;s\u0C55\u2AF4\xBB\u0C36i\xED\u0C5D\u0100;r\u0C35\u2AFEi\u0100;e\u0C1A\u0C25i\xE4\u0D90\u0100pt\u2B0C\u2B11f;\uC000\u{1D55F}\u8180\xAC;in\u2B19\u2B1A\u2B36\u40ACn\u0200;Edv\u0B89\u2B24\u2B28\u2B2E;\uC000\u22F9\u0338ot;\uC000\u22F5\u0338\u01E1\u0B89\u2B33\u2B35;\u62F7;\u62F6i\u0100;v\u0CB8\u2B3C\u01E1\u0CB8\u2B41\u2B43;\u62FE;\u62FD\u0180aor\u2B4B\u2B63\u2B69r\u0200;ast\u0B7B\u2B55\u2B5A\u2B5Flle\xEC\u0B7Bl;\uC000\u2AFD\u20E5;\uC000\u2202\u0338lint;\u6A14\u0180;ce\u0C92\u2B70\u2B73u\xE5\u0CA5\u0100;c\u0C98\u2B78\u0100;e\u0C92\u2B7D\xF1\u0C98\u0200Aait\u2B88\u2B8B\u2B9D\u2BA7r\xF2\u2988rr\u0180;cw\u2B94\u2B95\u2B99\u619B;\uC000\u2933\u0338;\uC000\u219D\u0338ghtarrow\xBB\u2B95ri\u0100;e\u0CCB\u0CD6\u0380chimpqu\u2BBD\u2BCD\u2BD9\u2B04\u0B78\u2BE4\u2BEF\u0200;cer\u0D32\u2BC6\u0D37\u2BC9u\xE5\u0D45;\uC000\u{1D4C3}ort\u026D\u2B05\0\0\u2BD6ar\xE1\u2B56m\u0100;e\u0D6E\u2BDF\u0100;q\u0D74\u0D73su\u0100bp\u2BEB\u2BED\xE5\u0CF8\xE5\u0D0B\u0180bcp\u2BF6\u2C11\u2C19\u0200;Ees\u2BFF\u2C00\u0D22\u2C04\u6284;\uC000\u2AC5\u0338et\u0100;e\u0D1B\u2C0Bq\u0100;q\u0D23\u2C00c\u0100;e\u0D32\u2C17\xF1\u0D38\u0200;Ees\u2C22\u2C23\u0D5F\u2C27\u6285;\uC000\u2AC6\u0338et\u0100;e\u0D58\u2C2Eq\u0100;q\u0D60\u2C23\u0200gilr\u2C3D\u2C3F\u2C45\u2C47\xEC\u0BD7lde\u803B\xF1\u40F1\xE7\u0C43iangle\u0100lr\u2C52\u2C5Ceft\u0100;e\u0C1A\u2C5A\xF1\u0C26ight\u0100;e\u0CCB\u2C65\xF1\u0CD7\u0100;m\u2C6C\u2C6D\u43BD\u0180;es\u2C74\u2C75\u2C79\u4023ro;\u6116p;\u6007\u0480DHadgilrs\u2C8F\u2C94\u2C99\u2C9E\u2CA3\u2CB0\u2CB6\u2CD3\u2CE3ash;\u62ADarr;\u6904p;\uC000\u224D\u20D2ash;\u62AC\u0100et\u2CA8\u2CAC;\uC000\u2265\u20D2;\uC000>\u20D2nfin;\u69DE\u0180Aet\u2CBD\u2CC1\u2CC5rr;\u6902;\uC000\u2264\u20D2\u0100;r\u2CCA\u2CCD\uC000<\u20D2ie;\uC000\u22B4\u20D2\u0100At\u2CD8\u2CDCrr;\u6903rie;\uC000\u22B5\u20D2im;\uC000\u223C\u20D2\u0180Aan\u2CF0\u2CF4\u2D02rr;\u61D6r\u0100hr\u2CFA\u2CFDk;\u6923\u0100;o\u13E7\u13E5ear;\u6927\u1253\u1A95\0\0\0\0\0\0\0\0\0\0\0\0\0\u2D2D\0\u2D38\u2D48\u2D60\u2D65\u2D72\u2D84\u1B07\0\0\u2D8D\u2DAB\0\u2DC8\u2DCE\0\u2DDC\u2E19\u2E2B\u2E3E\u2E43\u0100cs\u2D31\u1A97ute\u803B\xF3\u40F3\u0100iy\u2D3C\u2D45r\u0100;c\u1A9E\u2D42\u803B\xF4\u40F4;\u443E\u0280abios\u1AA0\u2D52\u2D57\u01C8\u2D5Alac;\u4151v;\u6A38old;\u69BClig;\u4153\u0100cr\u2D69\u2D6Dir;\u69BF;\uC000\u{1D52C}\u036F\u2D79\0\0\u2D7C\0\u2D82n;\u42DBave\u803B\xF2\u40F2;\u69C1\u0100bm\u2D88\u0DF4ar;\u69B5\u0200acit\u2D95\u2D98\u2DA5\u2DA8r\xF2\u1A80\u0100ir\u2D9D\u2DA0r;\u69BEoss;\u69BBn\xE5\u0E52;\u69C0\u0180aei\u2DB1\u2DB5\u2DB9cr;\u414Dga;\u43C9\u0180cdn\u2DC0\u2DC5\u01CDron;\u43BF;\u69B6pf;\uC000\u{1D560}\u0180ael\u2DD4\u2DD7\u01D2r;\u69B7rp;\u69B9\u0380;adiosv\u2DEA\u2DEB\u2DEE\u2E08\u2E0D\u2E10\u2E16\u6228r\xF2\u1A86\u0200;efm\u2DF7\u2DF8\u2E02\u2E05\u6A5Dr\u0100;o\u2DFE\u2DFF\u6134f\xBB\u2DFF\u803B\xAA\u40AA\u803B\xBA\u40BAgof;\u62B6r;\u6A56lope;\u6A57;\u6A5B\u0180clo\u2E1F\u2E21\u2E27\xF2\u2E01ash\u803B\xF8\u40F8l;\u6298i\u016C\u2E2F\u2E34de\u803B\xF5\u40F5es\u0100;a\u01DB\u2E3As;\u6A36ml\u803B\xF6\u40F6bar;\u633D\u0AE1\u2E5E\0\u2E7D\0\u2E80\u2E9D\0\u2EA2\u2EB9\0\0\u2ECB\u0E9C\0\u2F13\0\0\u2F2B\u2FBC\0\u2FC8r\u0200;ast\u0403\u2E67\u2E72\u0E85\u8100\xB6;l\u2E6D\u2E6E\u40B6le\xEC\u0403\u0269\u2E78\0\0\u2E7Bm;\u6AF3;\u6AFDy;\u443Fr\u0280cimpt\u2E8B\u2E8F\u2E93\u1865\u2E97nt;\u4025od;\u402Eil;\u6030enk;\u6031r;\uC000\u{1D52D}\u0180imo\u2EA8\u2EB0\u2EB4\u0100;v\u2EAD\u2EAE\u43C6;\u43D5ma\xF4\u0A76ne;\u660E\u0180;tv\u2EBF\u2EC0\u2EC8\u43C0chfork\xBB\u1FFD;\u43D6\u0100au\u2ECF\u2EDFn\u0100ck\u2ED5\u2EDDk\u0100;h\u21F4\u2EDB;\u610E\xF6\u21F4s\u0480;abcdemst\u2EF3\u2EF4\u1908\u2EF9\u2EFD\u2F04\u2F06\u2F0A\u2F0E\u402Bcir;\u6A23ir;\u6A22\u0100ou\u1D40\u2F02;\u6A25;\u6A72n\u80BB\xB1\u0E9Dim;\u6A26wo;\u6A27\u0180ipu\u2F19\u2F20\u2F25ntint;\u6A15f;\uC000\u{1D561}nd\u803B\xA3\u40A3\u0500;Eaceinosu\u0EC8\u2F3F\u2F41\u2F44\u2F47\u2F81\u2F89\u2F92\u2F7E\u2FB6;\u6AB3p;\u6AB7u\xE5\u0ED9\u0100;c\u0ECE\u2F4C\u0300;acens\u0EC8\u2F59\u2F5F\u2F66\u2F68\u2F7Eppro\xF8\u2F43urlye\xF1\u0ED9\xF1\u0ECE\u0180aes\u2F6F\u2F76\u2F7Approx;\u6AB9qq;\u6AB5im;\u62E8i\xED\u0EDFme\u0100;s\u2F88\u0EAE\u6032\u0180Eas\u2F78\u2F90\u2F7A\xF0\u2F75\u0180dfp\u0EEC\u2F99\u2FAF\u0180als\u2FA0\u2FA5\u2FAAlar;\u632Eine;\u6312urf;\u6313\u0100;t\u0EFB\u2FB4\xEF\u0EFBrel;\u62B0\u0100ci\u2FC0\u2FC5r;\uC000\u{1D4C5};\u43C8ncsp;\u6008\u0300fiopsu\u2FDA\u22E2\u2FDF\u2FE5\u2FEB\u2FF1r;\uC000\u{1D52E}pf;\uC000\u{1D562}rime;\u6057cr;\uC000\u{1D4C6}\u0180aeo\u2FF8\u3009\u3013t\u0100ei\u2FFE\u3005rnion\xF3\u06B0nt;\u6A16st\u0100;e\u3010\u3011\u403F\xF1\u1F19\xF4\u0F14\u0A80ABHabcdefhilmnoprstux\u3040\u3051\u3055\u3059\u30E0\u310E\u312B\u3147\u3162\u3172\u318E\u3206\u3215\u3224\u3229\u3258\u326E\u3272\u3290\u32B0\u32B7\u0180art\u3047\u304A\u304Cr\xF2\u10B3\xF2\u03DDail;\u691Car\xF2\u1C65ar;\u6964\u0380cdenqrt\u3068\u3075\u3078\u307F\u308F\u3094\u30CC\u0100eu\u306D\u3071;\uC000\u223D\u0331te;\u4155i\xE3\u116Emptyv;\u69B3g\u0200;del\u0FD1\u3089\u308B\u308D;\u6992;\u69A5\xE5\u0FD1uo\u803B\xBB\u40BBr\u0580;abcfhlpstw\u0FDC\u30AC\u30AF\u30B7\u30B9\u30BC\u30BE\u30C0\u30C3\u30C7\u30CAp;\u6975\u0100;f\u0FE0\u30B4s;\u6920;\u6933s;\u691E\xEB\u225D\xF0\u272El;\u6945im;\u6974l;\u61A3;\u619D\u0100ai\u30D1\u30D5il;\u691Ao\u0100;n\u30DB\u30DC\u6236al\xF3\u0F1E\u0180abr\u30E7\u30EA\u30EEr\xF2\u17E5rk;\u6773\u0100ak\u30F3\u30FDc\u0100ek\u30F9\u30FB;\u407D;\u405D\u0100es\u3102\u3104;\u698Cl\u0100du\u310A\u310C;\u698E;\u6990\u0200aeuy\u3117\u311C\u3127\u3129ron;\u4159\u0100di\u3121\u3125il;\u4157\xEC\u0FF2\xE2\u30FA;\u4440\u0200clqs\u3134\u3137\u313D\u3144a;\u6937dhar;\u6969uo\u0100;r\u020E\u020Dh;\u61B3\u0180acg\u314E\u315F\u0F44l\u0200;ips\u0F78\u3158\u315B\u109Cn\xE5\u10BBar\xF4\u0FA9t;\u65AD\u0180ilr\u3169\u1023\u316Esht;\u697D;\uC000\u{1D52F}\u0100ao\u3177\u3186r\u0100du\u317D\u317F\xBB\u047B\u0100;l\u1091\u3184;\u696C\u0100;v\u318B\u318C\u43C1;\u43F1\u0180gns\u3195\u31F9\u31FCht\u0300ahlrst\u31A4\u31B0\u31C2\u31D8\u31E4\u31EErrow\u0100;t\u0FDC\u31ADa\xE9\u30C8arpoon\u0100du\u31BB\u31BFow\xEE\u317Ep\xBB\u1092eft\u0100ah\u31CA\u31D0rrow\xF3\u0FEAarpoon\xF3\u0551ightarrows;\u61C9quigarro\xF7\u30CBhreetimes;\u62CCg;\u42DAingdotse\xF1\u1F32\u0180ahm\u320D\u3210\u3213r\xF2\u0FEAa\xF2\u0551;\u600Foust\u0100;a\u321E\u321F\u63B1che\xBB\u321Fmid;\u6AEE\u0200abpt\u3232\u323D\u3240\u3252\u0100nr\u3237\u323Ag;\u67EDr;\u61FEr\xEB\u1003\u0180afl\u3247\u324A\u324Er;\u6986;\uC000\u{1D563}us;\u6A2Eimes;\u6A35\u0100ap\u325D\u3267r\u0100;g\u3263\u3264\u4029t;\u6994olint;\u6A12ar\xF2\u31E3\u0200achq\u327B\u3280\u10BC\u3285quo;\u603Ar;\uC000\u{1D4C7}\u0100bu\u30FB\u328Ao\u0100;r\u0214\u0213\u0180hir\u3297\u329B\u32A0re\xE5\u31F8mes;\u62CAi\u0200;efl\u32AA\u1059\u1821\u32AB\u65B9tri;\u69CEluhar;\u6968;\u611E\u0D61\u32D5\u32DB\u32DF\u332C\u3338\u3371\0\u337A\u33A4\0\0\u33EC\u33F0\0\u3428\u3448\u345A\u34AD\u34B1\u34CA\u34F1\0\u3616\0\0\u3633cute;\u415Bqu\xEF\u27BA\u0500;Eaceinpsy\u11ED\u32F3\u32F5\u32FF\u3302\u330B\u330F\u331F\u3326\u3329;\u6AB4\u01F0\u32FA\0\u32FC;\u6AB8on;\u4161u\xE5\u11FE\u0100;d\u11F3\u3307il;\u415Frc;\u415D\u0180Eas\u3316\u3318\u331B;\u6AB6p;\u6ABAim;\u62E9olint;\u6A13i\xED\u1204;\u4441ot\u0180;be\u3334\u1D47\u3335\u62C5;\u6A66\u0380Aacmstx\u3346\u334A\u3357\u335B\u335E\u3363\u336Drr;\u61D8r\u0100hr\u3350\u3352\xEB\u2228\u0100;o\u0A36\u0A34t\u803B\xA7\u40A7i;\u403Bwar;\u6929m\u0100in\u3369\xF0nu\xF3\xF1t;\u6736r\u0100;o\u3376\u2055\uC000\u{1D530}\u0200acoy\u3382\u3386\u3391\u33A0rp;\u666F\u0100hy\u338B\u338Fcy;\u4449;\u4448rt\u026D\u3399\0\0\u339Ci\xE4\u1464ara\xEC\u2E6F\u803B\xAD\u40AD\u0100gm\u33A8\u33B4ma\u0180;fv\u33B1\u33B2\u33B2\u43C3;\u43C2\u0400;deglnpr\u12AB\u33C5\u33C9\u33CE\u33D6\u33DE\u33E1\u33E6ot;\u6A6A\u0100;q\u12B1\u12B0\u0100;E\u33D3\u33D4\u6A9E;\u6AA0\u0100;E\u33DB\u33DC\u6A9D;\u6A9Fe;\u6246lus;\u6A24arr;\u6972ar\xF2\u113D\u0200aeit\u33F8\u3408\u340F\u3417\u0100ls\u33FD\u3404lsetm\xE9\u336Ahp;\u6A33parsl;\u69E4\u0100dl\u1463\u3414e;\u6323\u0100;e\u341C\u341D\u6AAA\u0100;s\u3422\u3423\u6AAC;\uC000\u2AAC\uFE00\u0180flp\u342E\u3433\u3442tcy;\u444C\u0100;b\u3438\u3439\u402F\u0100;a\u343E\u343F\u69C4r;\u633Ff;\uC000\u{1D564}a\u0100dr\u344D\u0402es\u0100;u\u3454\u3455\u6660it\xBB\u3455\u0180csu\u3460\u3479\u349F\u0100au\u3465\u346Fp\u0100;s\u1188\u346B;\uC000\u2293\uFE00p\u0100;s\u11B4\u3475;\uC000\u2294\uFE00u\u0100bp\u347F\u348F\u0180;es\u1197\u119C\u3486et\u0100;e\u1197\u348D\xF1\u119D\u0180;es\u11A8\u11AD\u3496et\u0100;e\u11A8\u349D\xF1\u11AE\u0180;af\u117B\u34A6\u05B0r\u0165\u34AB\u05B1\xBB\u117Car\xF2\u1148\u0200cemt\u34B9\u34BE\u34C2\u34C5r;\uC000\u{1D4C8}tm\xEE\xF1i\xEC\u3415ar\xE6\u11BE\u0100ar\u34CE\u34D5r\u0100;f\u34D4\u17BF\u6606\u0100an\u34DA\u34EDight\u0100ep\u34E3\u34EApsilo\xEE\u1EE0h\xE9\u2EAFs\xBB\u2852\u0280bcmnp\u34FB\u355E\u1209\u358B\u358E\u0480;Edemnprs\u350E\u350F\u3511\u3515\u351E\u3523\u352C\u3531\u3536\u6282;\u6AC5ot;\u6ABD\u0100;d\u11DA\u351Aot;\u6AC3ult;\u6AC1\u0100Ee\u3528\u352A;\u6ACB;\u628Alus;\u6ABFarr;\u6979\u0180eiu\u353D\u3552\u3555t\u0180;en\u350E\u3545\u354Bq\u0100;q\u11DA\u350Feq\u0100;q\u352B\u3528m;\u6AC7\u0100bp\u355A\u355C;\u6AD5;\u6AD3c\u0300;acens\u11ED\u356C\u3572\u3579\u357B\u3326ppro\xF8\u32FAurlye\xF1\u11FE\xF1\u11F3\u0180aes\u3582\u3588\u331Bppro\xF8\u331Aq\xF1\u3317g;\u666A\u0680123;Edehlmnps\u35A9\u35AC\u35AF\u121C\u35B2\u35B4\u35C0\u35C9\u35D5\u35DA\u35DF\u35E8\u35ED\u803B\xB9\u40B9\u803B\xB2\u40B2\u803B\xB3\u40B3;\u6AC6\u0100os\u35B9\u35BCt;\u6ABEub;\u6AD8\u0100;d\u1222\u35C5ot;\u6AC4s\u0100ou\u35CF\u35D2l;\u67C9b;\u6AD7arr;\u697Bult;\u6AC2\u0100Ee\u35E4\u35E6;\u6ACC;\u628Blus;\u6AC0\u0180eiu\u35F4\u3609\u360Ct\u0180;en\u121C\u35FC\u3602q\u0100;q\u1222\u35B2eq\u0100;q\u35E7\u35E4m;\u6AC8\u0100bp\u3611\u3613;\u6AD4;\u6AD6\u0180Aan\u361C\u3620\u362Drr;\u61D9r\u0100hr\u3626\u3628\xEB\u222E\u0100;o\u0A2B\u0A29war;\u692Alig\u803B\xDF\u40DF\u0BE1\u3651\u365D\u3660\u12CE\u3673\u3679\0\u367E\u36C2\0\0\0\0\0\u36DB\u3703\0\u3709\u376C\0\0\0\u3787\u0272\u3656\0\0\u365Bget;\u6316;\u43C4r\xEB\u0E5F\u0180aey\u3666\u366B\u3670ron;\u4165dil;\u4163;\u4442lrec;\u6315r;\uC000\u{1D531}\u0200eiko\u3686\u369D\u36B5\u36BC\u01F2\u368B\0\u3691e\u01004f\u1284\u1281a\u0180;sv\u3698\u3699\u369B\u43B8ym;\u43D1\u0100cn\u36A2\u36B2k\u0100as\u36A8\u36AEppro\xF8\u12C1im\xBB\u12ACs\xF0\u129E\u0100as\u36BA\u36AE\xF0\u12C1rn\u803B\xFE\u40FE\u01EC\u031F\u36C6\u22E7es\u8180\xD7;bd\u36CF\u36D0\u36D8\u40D7\u0100;a\u190F\u36D5r;\u6A31;\u6A30\u0180eps\u36E1\u36E3\u3700\xE1\u2A4D\u0200;bcf\u0486\u36EC\u36F0\u36F4ot;\u6336ir;\u6AF1\u0100;o\u36F9\u36FC\uC000\u{1D565}rk;\u6ADA\xE1\u3362rime;\u6034\u0180aip\u370F\u3712\u3764d\xE5\u1248\u0380adempst\u3721\u374D\u3740\u3751\u3757\u375C\u375Fngle\u0280;dlqr\u3730\u3731\u3736\u3740\u3742\u65B5own\xBB\u1DBBeft\u0100;e\u2800\u373E\xF1\u092E;\u625Cight\u0100;e\u32AA\u374B\xF1\u105Aot;\u65ECinus;\u6A3Alus;\u6A39b;\u69CDime;\u6A3Bezium;\u63E2\u0180cht\u3772\u377D\u3781\u0100ry\u3777\u377B;\uC000\u{1D4C9};\u4446cy;\u445Brok;\u4167\u0100io\u378B\u378Ex\xF4\u1777head\u0100lr\u3797\u37A0eftarro\xF7\u084Fightarrow\xBB\u0F5D\u0900AHabcdfghlmoprstuw\u37D0\u37D3\u37D7\u37E4\u37F0\u37FC\u380E\u381C\u3823\u3834\u3851\u385D\u386B\u38A9\u38CC\u38D2\u38EA\u38F6r\xF2\u03EDar;\u6963\u0100cr\u37DC\u37E2ute\u803B\xFA\u40FA\xF2\u1150r\u01E3\u37EA\0\u37EDy;\u445Eve;\u416D\u0100iy\u37F5\u37FArc\u803B\xFB\u40FB;\u4443\u0180abh\u3803\u3806\u380Br\xF2\u13ADlac;\u4171a\xF2\u13C3\u0100ir\u3813\u3818sht;\u697E;\uC000\u{1D532}rave\u803B\xF9\u40F9\u0161\u3827\u3831r\u0100lr\u382C\u382E\xBB\u0957\xBB\u1083lk;\u6580\u0100ct\u3839\u384D\u026F\u383F\0\0\u384Arn\u0100;e\u3845\u3846\u631Cr\xBB\u3846op;\u630Fri;\u65F8\u0100al\u3856\u385Acr;\u416B\u80BB\xA8\u0349\u0100gp\u3862\u3866on;\u4173f;\uC000\u{1D566}\u0300adhlsu\u114B\u3878\u387D\u1372\u3891\u38A0own\xE1\u13B3arpoon\u0100lr\u3888\u388Cef\xF4\u382Digh\xF4\u382Fi\u0180;hl\u3899\u389A\u389C\u43C5\xBB\u13FAon\xBB\u389Aparrows;\u61C8\u0180cit\u38B0\u38C4\u38C8\u026F\u38B6\0\0\u38C1rn\u0100;e\u38BC\u38BD\u631Dr\xBB\u38BDop;\u630Eng;\u416Fri;\u65F9cr;\uC000\u{1D4CA}\u0180dir\u38D9\u38DD\u38E2ot;\u62F0lde;\u4169i\u0100;f\u3730\u38E8\xBB\u1813\u0100am\u38EF\u38F2r\xF2\u38A8l\u803B\xFC\u40FCangle;\u69A7\u0780ABDacdeflnoprsz\u391C\u391F\u3929\u392D\u39B5\u39B8\u39BD\u39DF\u39E4\u39E8\u39F3\u39F9\u39FD\u3A01\u3A20r\xF2\u03F7ar\u0100;v\u3926\u3927\u6AE8;\u6AE9as\xE8\u03E1\u0100nr\u3932\u3937grt;\u699C\u0380eknprst\u34E3\u3946\u394B\u3952\u395D\u3964\u3996app\xE1\u2415othin\xE7\u1E96\u0180hir\u34EB\u2EC8\u3959op\xF4\u2FB5\u0100;h\u13B7\u3962\xEF\u318D\u0100iu\u3969\u396Dgm\xE1\u33B3\u0100bp\u3972\u3984setneq\u0100;q\u397D\u3980\uC000\u228A\uFE00;\uC000\u2ACB\uFE00setneq\u0100;q\u398F\u3992\uC000\u228B\uFE00;\uC000\u2ACC\uFE00\u0100hr\u399B\u399Fet\xE1\u369Ciangle\u0100lr\u39AA\u39AFeft\xBB\u0925ight\xBB\u1051y;\u4432ash\xBB\u1036\u0180elr\u39C4\u39D2\u39D7\u0180;be\u2DEA\u39CB\u39CFar;\u62BBq;\u625Alip;\u62EE\u0100bt\u39DC\u1468a\xF2\u1469r;\uC000\u{1D533}tr\xE9\u39AEsu\u0100bp\u39EF\u39F1\xBB\u0D1C\xBB\u0D59pf;\uC000\u{1D567}ro\xF0\u0EFBtr\xE9\u39B4\u0100cu\u3A06\u3A0Br;\uC000\u{1D4CB}\u0100bp\u3A10\u3A18n\u0100Ee\u3980\u3A16\xBB\u397En\u0100Ee\u3992\u3A1E\xBB\u3990igzag;\u699A\u0380cefoprs\u3A36\u3A3B\u3A56\u3A5B\u3A54\u3A61\u3A6Airc;\u4175\u0100di\u3A40\u3A51\u0100bg\u3A45\u3A49ar;\u6A5Fe\u0100;q\u15FA\u3A4F;\u6259erp;\u6118r;\uC000\u{1D534}pf;\uC000\u{1D568}\u0100;e\u1479\u3A66at\xE8\u1479cr;\uC000\u{1D4CC}\u0AE3\u178E\u3A87\0\u3A8B\0\u3A90\u3A9B\0\0\u3A9D\u3AA8\u3AAB\u3AAF\0\0\u3AC3\u3ACE\0\u3AD8\u17DC\u17DFtr\xE9\u17D1r;\uC000\u{1D535}\u0100Aa\u3A94\u3A97r\xF2\u03C3r\xF2\u09F6;\u43BE\u0100Aa\u3AA1\u3AA4r\xF2\u03B8r\xF2\u09EBa\xF0\u2713is;\u62FB\u0180dpt\u17A4\u3AB5\u3ABE\u0100fl\u3ABA\u17A9;\uC000\u{1D569}im\xE5\u17B2\u0100Aa\u3AC7\u3ACAr\xF2\u03CEr\xF2\u0A01\u0100cq\u3AD2\u17B8r;\uC000\u{1D4CD}\u0100pt\u17D6\u3ADCr\xE9\u17D4\u0400acefiosu\u3AF0\u3AFD\u3B08\u3B0C\u3B11\u3B15\u3B1B\u3B21c\u0100uy\u3AF6\u3AFBte\u803B\xFD\u40FD;\u444F\u0100iy\u3B02\u3B06rc;\u4177;\u444Bn\u803B\xA5\u40A5r;\uC000\u{1D536}cy;\u4457pf;\uC000\u{1D56A}cr;\uC000\u{1D4CE}\u0100cm\u3B26\u3B29y;\u444El\u803B\xFF\u40FF\u0500acdefhiosw\u3B42\u3B48\u3B54\u3B58\u3B64\u3B69\u3B6D\u3B74\u3B7A\u3B80cute;\u417A\u0100ay\u3B4D\u3B52ron;\u417E;\u4437ot;\u417C\u0100et\u3B5D\u3B61tr\xE6\u155Fa;\u43B6r;\uC000\u{1D537}cy;\u4436grarr;\u61DDpf;\uC000\u{1D56B}cr;\uC000\u{1D4CF}\u0100jn\u3B85\u3B87;\u600Dj;\u600C'.split("").map((c2) => c2.charCodeAt(0))
    );
  },
});

// ../../node_modules/dom-serializer/node_modules/entities/lib/esm/generated/decode-data-xml.js
var decode_data_xml_default2;
var init_decode_data_xml2 = __esm({
  '../../node_modules/dom-serializer/node_modules/entities/lib/esm/generated/decode-data-xml.js'() {
    'use strict';
    decode_data_xml_default2 = new Uint16Array(
      // prettier-ignore
      "\u0200aglq	\x1B\u026D\0\0p;\u4026os;\u4027t;\u403Et;\u403Cuot;\u4022".split("").map((c2) => c2.charCodeAt(0))
    );
  },
});

// ../../node_modules/dom-serializer/node_modules/entities/lib/esm/decode_codepoint.js
function replaceCodePoint2(codePoint) {
  var _a4;
  if ((codePoint >= 55296 && codePoint <= 57343) || codePoint > 1114111) {
    return 65533;
  }
  return (_a4 = decodeMap2.get(codePoint)) !== null && _a4 !== void 0
    ? _a4
    : codePoint;
}
var _a3, decodeMap2, fromCodePoint2;
var init_decode_codepoint2 = __esm({
  '../../node_modules/dom-serializer/node_modules/entities/lib/esm/decode_codepoint.js'() {
    'use strict';
    decodeMap2 = /* @__PURE__ */ new Map([
      [0, 65533],
      // C1 Unicode control character reference replacements
      [128, 8364],
      [130, 8218],
      [131, 402],
      [132, 8222],
      [133, 8230],
      [134, 8224],
      [135, 8225],
      [136, 710],
      [137, 8240],
      [138, 352],
      [139, 8249],
      [140, 338],
      [142, 381],
      [145, 8216],
      [146, 8217],
      [147, 8220],
      [148, 8221],
      [149, 8226],
      [150, 8211],
      [151, 8212],
      [152, 732],
      [153, 8482],
      [154, 353],
      [155, 8250],
      [156, 339],
      [158, 382],
      [159, 376],
    ]);
    fromCodePoint2 = // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, node/no-unsupported-features/es-builtins
      (_a3 = String.fromCodePoint) !== null && _a3 !== void 0
        ? _a3
        : function (codePoint) {
            let output = '';
            if (codePoint > 65535) {
              codePoint -= 65536;
              output += String.fromCharCode(
                ((codePoint >>> 10) & 1023) | 55296
              );
              codePoint = 56320 | (codePoint & 1023);
            }
            output += String.fromCharCode(codePoint);
            return output;
          };
  },
});

// ../../node_modules/dom-serializer/node_modules/entities/lib/esm/decode.js
function isNumber2(code) {
  return code >= CharCodes3.ZERO && code <= CharCodes3.NINE;
}
function isHexadecimalCharacter(code) {
  return (
    (code >= CharCodes3.UPPER_A && code <= CharCodes3.UPPER_F) ||
    (code >= CharCodes3.LOWER_A && code <= CharCodes3.LOWER_F)
  );
}
function isAsciiAlphaNumeric(code) {
  return (
    (code >= CharCodes3.UPPER_A && code <= CharCodes3.UPPER_Z) ||
    (code >= CharCodes3.LOWER_A && code <= CharCodes3.LOWER_Z) ||
    isNumber2(code)
  );
}
function isEntityInAttributeInvalidEnd(code) {
  return code === CharCodes3.EQUALS || isAsciiAlphaNumeric(code);
}
function getDecoder2(decodeTree) {
  let ret = '';
  const decoder = new EntityDecoder(
    decodeTree,
    (str) => (ret += fromCodePoint2(str))
  );
  return function decodeWithTrie(str, decodeMode) {
    let lastIndex = 0;
    let offset = 0;
    while ((offset = str.indexOf('&', offset)) >= 0) {
      ret += str.slice(lastIndex, offset);
      decoder.startEntity(decodeMode);
      const len = decoder.write(
        str,
        // Skip the "&"
        offset + 1
      );
      if (len < 0) {
        lastIndex = offset + decoder.end();
        break;
      }
      lastIndex = offset + len;
      offset = len === 0 ? lastIndex + 1 : lastIndex;
    }
    const result = ret + str.slice(lastIndex);
    ret = '';
    return result;
  };
}
function determineBranch2(decodeTree, current, nodeIdx, char) {
  const branchCount = (current & BinTrieFlags2.BRANCH_LENGTH) >> 7;
  const jumpOffset = current & BinTrieFlags2.JUMP_TABLE;
  if (branchCount === 0) {
    return jumpOffset !== 0 && char === jumpOffset ? nodeIdx : -1;
  }
  if (jumpOffset) {
    const value = char - jumpOffset;
    return value < 0 || value >= branchCount
      ? -1
      : decodeTree[nodeIdx + value] - 1;
  }
  let lo2 = nodeIdx;
  let hi2 = lo2 + branchCount - 1;
  while (lo2 <= hi2) {
    const mid = (lo2 + hi2) >>> 1;
    const midVal = decodeTree[mid];
    if (midVal < char) {
      lo2 = mid + 1;
    } else if (midVal > char) {
      hi2 = mid - 1;
    } else {
      return decodeTree[mid + branchCount];
    }
  }
  return -1;
}
var CharCodes3,
  TO_LOWER_BIT,
  BinTrieFlags2,
  EntityDecoderState,
  DecodingMode,
  EntityDecoder,
  htmlDecoder2,
  xmlDecoder2;
var init_decode2 = __esm({
  '../../node_modules/dom-serializer/node_modules/entities/lib/esm/decode.js'() {
    'use strict';
    init_decode_data_html2();
    init_decode_data_xml2();
    init_decode_codepoint2();
    init_decode_codepoint2();
    (function (CharCodes4) {
      CharCodes4[(CharCodes4['NUM'] = 35)] = 'NUM';
      CharCodes4[(CharCodes4['SEMI'] = 59)] = 'SEMI';
      CharCodes4[(CharCodes4['EQUALS'] = 61)] = 'EQUALS';
      CharCodes4[(CharCodes4['ZERO'] = 48)] = 'ZERO';
      CharCodes4[(CharCodes4['NINE'] = 57)] = 'NINE';
      CharCodes4[(CharCodes4['LOWER_A'] = 97)] = 'LOWER_A';
      CharCodes4[(CharCodes4['LOWER_F'] = 102)] = 'LOWER_F';
      CharCodes4[(CharCodes4['LOWER_X'] = 120)] = 'LOWER_X';
      CharCodes4[(CharCodes4['LOWER_Z'] = 122)] = 'LOWER_Z';
      CharCodes4[(CharCodes4['UPPER_A'] = 65)] = 'UPPER_A';
      CharCodes4[(CharCodes4['UPPER_F'] = 70)] = 'UPPER_F';
      CharCodes4[(CharCodes4['UPPER_Z'] = 90)] = 'UPPER_Z';
    })(CharCodes3 || (CharCodes3 = {}));
    TO_LOWER_BIT = 32;
    (function (BinTrieFlags3) {
      BinTrieFlags3[(BinTrieFlags3['VALUE_LENGTH'] = 49152)] = 'VALUE_LENGTH';
      BinTrieFlags3[(BinTrieFlags3['BRANCH_LENGTH'] = 16256)] = 'BRANCH_LENGTH';
      BinTrieFlags3[(BinTrieFlags3['JUMP_TABLE'] = 127)] = 'JUMP_TABLE';
    })(BinTrieFlags2 || (BinTrieFlags2 = {}));
    (function (EntityDecoderState2) {
      EntityDecoderState2[(EntityDecoderState2['EntityStart'] = 0)] =
        'EntityStart';
      EntityDecoderState2[(EntityDecoderState2['NumericStart'] = 1)] =
        'NumericStart';
      EntityDecoderState2[(EntityDecoderState2['NumericDecimal'] = 2)] =
        'NumericDecimal';
      EntityDecoderState2[(EntityDecoderState2['NumericHex'] = 3)] =
        'NumericHex';
      EntityDecoderState2[(EntityDecoderState2['NamedEntity'] = 4)] =
        'NamedEntity';
    })(EntityDecoderState || (EntityDecoderState = {}));
    (function (DecodingMode2) {
      DecodingMode2[(DecodingMode2['Legacy'] = 0)] = 'Legacy';
      DecodingMode2[(DecodingMode2['Strict'] = 1)] = 'Strict';
      DecodingMode2[(DecodingMode2['Attribute'] = 2)] = 'Attribute';
    })(DecodingMode || (DecodingMode = {}));
    EntityDecoder = class {
      constructor(decodeTree, emitCodePoint, errors) {
        this.decodeTree = decodeTree;
        this.emitCodePoint = emitCodePoint;
        this.errors = errors;
        this.state = EntityDecoderState.EntityStart;
        this.consumed = 1;
        this.result = 0;
        this.treeIndex = 0;
        this.excess = 1;
        this.decodeMode = DecodingMode.Strict;
      }
      /** Resets the instance to make it reusable. */
      startEntity(decodeMode) {
        this.decodeMode = decodeMode;
        this.state = EntityDecoderState.EntityStart;
        this.result = 0;
        this.treeIndex = 0;
        this.excess = 1;
        this.consumed = 1;
      }
      /**
       * Write an entity to the decoder. This can be called multiple times with partial entities.
       * If the entity is incomplete, the decoder will return -1.
       *
       * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the
       * entity is incomplete, and resume when the next string is written.
       *
       * @param string The string containing the entity (or a continuation of the entity).
       * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.
       * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
       */
      write(str, offset) {
        switch (this.state) {
          case EntityDecoderState.EntityStart: {
            if (str.charCodeAt(offset) === CharCodes3.NUM) {
              this.state = EntityDecoderState.NumericStart;
              this.consumed += 1;
              return this.stateNumericStart(str, offset + 1);
            }
            this.state = EntityDecoderState.NamedEntity;
            return this.stateNamedEntity(str, offset);
          }
          case EntityDecoderState.NumericStart: {
            return this.stateNumericStart(str, offset);
          }
          case EntityDecoderState.NumericDecimal: {
            return this.stateNumericDecimal(str, offset);
          }
          case EntityDecoderState.NumericHex: {
            return this.stateNumericHex(str, offset);
          }
          case EntityDecoderState.NamedEntity: {
            return this.stateNamedEntity(str, offset);
          }
        }
      }
      /**
       * Switches between the numeric decimal and hexadecimal states.
       *
       * Equivalent to the `Numeric character reference state` in the HTML spec.
       *
       * @param str The string containing the entity (or a continuation of the entity).
       * @param offset The current offset.
       * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
       */
      stateNumericStart(str, offset) {
        if (offset >= str.length) {
          return -1;
        }
        if ((str.charCodeAt(offset) | TO_LOWER_BIT) === CharCodes3.LOWER_X) {
          this.state = EntityDecoderState.NumericHex;
          this.consumed += 1;
          return this.stateNumericHex(str, offset + 1);
        }
        this.state = EntityDecoderState.NumericDecimal;
        return this.stateNumericDecimal(str, offset);
      }
      addToNumericResult(str, start, end, base) {
        if (start !== end) {
          const digitCount = end - start;
          this.result =
            this.result * Math.pow(base, digitCount) +
            parseInt(str.substr(start, digitCount), base);
          this.consumed += digitCount;
        }
      }
      /**
       * Parses a hexadecimal numeric entity.
       *
       * Equivalent to the `Hexademical character reference state` in the HTML spec.
       *
       * @param str The string containing the entity (or a continuation of the entity).
       * @param offset The current offset.
       * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
       */
      stateNumericHex(str, offset) {
        const startIdx = offset;
        while (offset < str.length) {
          const char = str.charCodeAt(offset);
          if (isNumber2(char) || isHexadecimalCharacter(char)) {
            offset += 1;
          } else {
            this.addToNumericResult(str, startIdx, offset, 16);
            return this.emitNumericEntity(char, 3);
          }
        }
        this.addToNumericResult(str, startIdx, offset, 16);
        return -1;
      }
      /**
       * Parses a decimal numeric entity.
       *
       * Equivalent to the `Decimal character reference state` in the HTML spec.
       *
       * @param str The string containing the entity (or a continuation of the entity).
       * @param offset The current offset.
       * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
       */
      stateNumericDecimal(str, offset) {
        const startIdx = offset;
        while (offset < str.length) {
          const char = str.charCodeAt(offset);
          if (isNumber2(char)) {
            offset += 1;
          } else {
            this.addToNumericResult(str, startIdx, offset, 10);
            return this.emitNumericEntity(char, 2);
          }
        }
        this.addToNumericResult(str, startIdx, offset, 10);
        return -1;
      }
      /**
       * Validate and emit a numeric entity.
       *
       * Implements the logic from the `Hexademical character reference start
       * state` and `Numeric character reference end state` in the HTML spec.
       *
       * @param lastCp The last code point of the entity. Used to see if the
       *               entity was terminated with a semicolon.
       * @param expectedLength The minimum number of characters that should be
       *                       consumed. Used to validate that at least one digit
       *                       was consumed.
       * @returns The number of characters that were consumed.
       */
      emitNumericEntity(lastCp, expectedLength) {
        var _a4;
        if (this.consumed <= expectedLength) {
          (_a4 = this.errors) === null || _a4 === void 0
            ? void 0
            : _a4.absenceOfDigitsInNumericCharacterReference(this.consumed);
          return 0;
        }
        if (lastCp === CharCodes3.SEMI) {
          this.consumed += 1;
        } else if (this.decodeMode === DecodingMode.Strict) {
          return 0;
        }
        this.emitCodePoint(replaceCodePoint2(this.result), this.consumed);
        if (this.errors) {
          if (lastCp !== CharCodes3.SEMI) {
            this.errors.missingSemicolonAfterCharacterReference();
          }
          this.errors.validateNumericCharacterReference(this.result);
        }
        return this.consumed;
      }
      /**
       * Parses a named entity.
       *
       * Equivalent to the `Named character reference state` in the HTML spec.
       *
       * @param str The string containing the entity (or a continuation of the entity).
       * @param offset The current offset.
       * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
       */
      stateNamedEntity(str, offset) {
        const { decodeTree } = this;
        let current = decodeTree[this.treeIndex];
        let valueLength = (current & BinTrieFlags2.VALUE_LENGTH) >> 14;
        for (; offset < str.length; offset++, this.excess++) {
          const char = str.charCodeAt(offset);
          this.treeIndex = determineBranch2(
            decodeTree,
            current,
            this.treeIndex + Math.max(1, valueLength),
            char
          );
          if (this.treeIndex < 0) {
            return this.result === 0 || // If we are parsing an attribute
              (this.decodeMode === DecodingMode.Attribute && // We shouldn't have consumed any characters after the entity,
                (valueLength === 0 || // And there should be no invalid characters.
                  isEntityInAttributeInvalidEnd(char)))
              ? 0
              : this.emitNotTerminatedNamedEntity();
          }
          current = decodeTree[this.treeIndex];
          valueLength = (current & BinTrieFlags2.VALUE_LENGTH) >> 14;
          if (valueLength !== 0) {
            if (char === CharCodes3.SEMI) {
              return this.emitNamedEntityData(
                this.treeIndex,
                valueLength,
                this.consumed + this.excess
              );
            }
            if (this.decodeMode !== DecodingMode.Strict) {
              this.result = this.treeIndex;
              this.consumed += this.excess;
              this.excess = 0;
            }
          }
        }
        return -1;
      }
      /**
       * Emit a named entity that was not terminated with a semicolon.
       *
       * @returns The number of characters consumed.
       */
      emitNotTerminatedNamedEntity() {
        var _a4;
        const { result, decodeTree } = this;
        const valueLength =
          (decodeTree[result] & BinTrieFlags2.VALUE_LENGTH) >> 14;
        this.emitNamedEntityData(result, valueLength, this.consumed);
        (_a4 = this.errors) === null || _a4 === void 0
          ? void 0
          : _a4.missingSemicolonAfterCharacterReference();
        return this.consumed;
      }
      /**
       * Emit a named entity.
       *
       * @param result The index of the entity in the decode tree.
       * @param valueLength The number of bytes in the entity.
       * @param consumed The number of characters consumed.
       *
       * @returns The number of characters consumed.
       */
      emitNamedEntityData(result, valueLength, consumed) {
        const { decodeTree } = this;
        this.emitCodePoint(
          valueLength === 1
            ? decodeTree[result] & ~BinTrieFlags2.VALUE_LENGTH
            : decodeTree[result + 1],
          consumed
        );
        if (valueLength === 3) {
          this.emitCodePoint(decodeTree[result + 2], consumed);
        }
        return consumed;
      }
      /**
       * Signal to the parser that the end of the input was reached.
       *
       * Remaining data will be emitted and relevant errors will be produced.
       *
       * @returns The number of characters consumed.
       */
      end() {
        var _a4;
        switch (this.state) {
          case EntityDecoderState.NamedEntity: {
            return this.result !== 0 &&
              (this.decodeMode !== DecodingMode.Attribute ||
                this.result === this.treeIndex)
              ? this.emitNotTerminatedNamedEntity()
              : 0;
          }
          case EntityDecoderState.NumericDecimal: {
            return this.emitNumericEntity(0, 2);
          }
          case EntityDecoderState.NumericHex: {
            return this.emitNumericEntity(0, 3);
          }
          case EntityDecoderState.NumericStart: {
            (_a4 = this.errors) === null || _a4 === void 0
              ? void 0
              : _a4.absenceOfDigitsInNumericCharacterReference(this.consumed);
            return 0;
          }
          case EntityDecoderState.EntityStart: {
            return 0;
          }
        }
      }
    };
    htmlDecoder2 = getDecoder2(decode_data_html_default2);
    xmlDecoder2 = getDecoder2(decode_data_xml_default2);
  },
});

// ../../node_modules/dom-serializer/node_modules/entities/lib/esm/generated/encode-html.js
function restoreDiff(arr) {
  for (let i = 1; i < arr.length; i++) {
    arr[i][0] += arr[i - 1][0] + 1;
  }
  return arr;
}
var encode_html_default;
var init_encode_html = __esm({
  '../../node_modules/dom-serializer/node_modules/entities/lib/esm/generated/encode-html.js'() {
    'use strict';
    encode_html_default = new Map(
      /* @__PURE__ */ restoreDiff([
        [9, '&Tab;'],
        [0, '&NewLine;'],
        [22, '&excl;'],
        [0, '&quot;'],
        [0, '&num;'],
        [0, '&dollar;'],
        [0, '&percnt;'],
        [0, '&amp;'],
        [0, '&apos;'],
        [0, '&lpar;'],
        [0, '&rpar;'],
        [0, '&ast;'],
        [0, '&plus;'],
        [0, '&comma;'],
        [1, '&period;'],
        [0, '&sol;'],
        [10, '&colon;'],
        [0, '&semi;'],
        [0, { v: '&lt;', n: 8402, o: '&nvlt;' }],
        [0, { v: '&equals;', n: 8421, o: '&bne;' }],
        [0, { v: '&gt;', n: 8402, o: '&nvgt;' }],
        [0, '&quest;'],
        [0, '&commat;'],
        [26, '&lbrack;'],
        [0, '&bsol;'],
        [0, '&rbrack;'],
        [0, '&Hat;'],
        [0, '&lowbar;'],
        [0, '&DiacriticalGrave;'],
        [5, { n: 106, o: '&fjlig;' }],
        [20, '&lbrace;'],
        [0, '&verbar;'],
        [0, '&rbrace;'],
        [34, '&nbsp;'],
        [0, '&iexcl;'],
        [0, '&cent;'],
        [0, '&pound;'],
        [0, '&curren;'],
        [0, '&yen;'],
        [0, '&brvbar;'],
        [0, '&sect;'],
        [0, '&die;'],
        [0, '&copy;'],
        [0, '&ordf;'],
        [0, '&laquo;'],
        [0, '&not;'],
        [0, '&shy;'],
        [0, '&circledR;'],
        [0, '&macr;'],
        [0, '&deg;'],
        [0, '&PlusMinus;'],
        [0, '&sup2;'],
        [0, '&sup3;'],
        [0, '&acute;'],
        [0, '&micro;'],
        [0, '&para;'],
        [0, '&centerdot;'],
        [0, '&cedil;'],
        [0, '&sup1;'],
        [0, '&ordm;'],
        [0, '&raquo;'],
        [0, '&frac14;'],
        [0, '&frac12;'],
        [0, '&frac34;'],
        [0, '&iquest;'],
        [0, '&Agrave;'],
        [0, '&Aacute;'],
        [0, '&Acirc;'],
        [0, '&Atilde;'],
        [0, '&Auml;'],
        [0, '&angst;'],
        [0, '&AElig;'],
        [0, '&Ccedil;'],
        [0, '&Egrave;'],
        [0, '&Eacute;'],
        [0, '&Ecirc;'],
        [0, '&Euml;'],
        [0, '&Igrave;'],
        [0, '&Iacute;'],
        [0, '&Icirc;'],
        [0, '&Iuml;'],
        [0, '&ETH;'],
        [0, '&Ntilde;'],
        [0, '&Ograve;'],
        [0, '&Oacute;'],
        [0, '&Ocirc;'],
        [0, '&Otilde;'],
        [0, '&Ouml;'],
        [0, '&times;'],
        [0, '&Oslash;'],
        [0, '&Ugrave;'],
        [0, '&Uacute;'],
        [0, '&Ucirc;'],
        [0, '&Uuml;'],
        [0, '&Yacute;'],
        [0, '&THORN;'],
        [0, '&szlig;'],
        [0, '&agrave;'],
        [0, '&aacute;'],
        [0, '&acirc;'],
        [0, '&atilde;'],
        [0, '&auml;'],
        [0, '&aring;'],
        [0, '&aelig;'],
        [0, '&ccedil;'],
        [0, '&egrave;'],
        [0, '&eacute;'],
        [0, '&ecirc;'],
        [0, '&euml;'],
        [0, '&igrave;'],
        [0, '&iacute;'],
        [0, '&icirc;'],
        [0, '&iuml;'],
        [0, '&eth;'],
        [0, '&ntilde;'],
        [0, '&ograve;'],
        [0, '&oacute;'],
        [0, '&ocirc;'],
        [0, '&otilde;'],
        [0, '&ouml;'],
        [0, '&div;'],
        [0, '&oslash;'],
        [0, '&ugrave;'],
        [0, '&uacute;'],
        [0, '&ucirc;'],
        [0, '&uuml;'],
        [0, '&yacute;'],
        [0, '&thorn;'],
        [0, '&yuml;'],
        [0, '&Amacr;'],
        [0, '&amacr;'],
        [0, '&Abreve;'],
        [0, '&abreve;'],
        [0, '&Aogon;'],
        [0, '&aogon;'],
        [0, '&Cacute;'],
        [0, '&cacute;'],
        [0, '&Ccirc;'],
        [0, '&ccirc;'],
        [0, '&Cdot;'],
        [0, '&cdot;'],
        [0, '&Ccaron;'],
        [0, '&ccaron;'],
        [0, '&Dcaron;'],
        [0, '&dcaron;'],
        [0, '&Dstrok;'],
        [0, '&dstrok;'],
        [0, '&Emacr;'],
        [0, '&emacr;'],
        [2, '&Edot;'],
        [0, '&edot;'],
        [0, '&Eogon;'],
        [0, '&eogon;'],
        [0, '&Ecaron;'],
        [0, '&ecaron;'],
        [0, '&Gcirc;'],
        [0, '&gcirc;'],
        [0, '&Gbreve;'],
        [0, '&gbreve;'],
        [0, '&Gdot;'],
        [0, '&gdot;'],
        [0, '&Gcedil;'],
        [1, '&Hcirc;'],
        [0, '&hcirc;'],
        [0, '&Hstrok;'],
        [0, '&hstrok;'],
        [0, '&Itilde;'],
        [0, '&itilde;'],
        [0, '&Imacr;'],
        [0, '&imacr;'],
        [2, '&Iogon;'],
        [0, '&iogon;'],
        [0, '&Idot;'],
        [0, '&imath;'],
        [0, '&IJlig;'],
        [0, '&ijlig;'],
        [0, '&Jcirc;'],
        [0, '&jcirc;'],
        [0, '&Kcedil;'],
        [0, '&kcedil;'],
        [0, '&kgreen;'],
        [0, '&Lacute;'],
        [0, '&lacute;'],
        [0, '&Lcedil;'],
        [0, '&lcedil;'],
        [0, '&Lcaron;'],
        [0, '&lcaron;'],
        [0, '&Lmidot;'],
        [0, '&lmidot;'],
        [0, '&Lstrok;'],
        [0, '&lstrok;'],
        [0, '&Nacute;'],
        [0, '&nacute;'],
        [0, '&Ncedil;'],
        [0, '&ncedil;'],
        [0, '&Ncaron;'],
        [0, '&ncaron;'],
        [0, '&napos;'],
        [0, '&ENG;'],
        [0, '&eng;'],
        [0, '&Omacr;'],
        [0, '&omacr;'],
        [2, '&Odblac;'],
        [0, '&odblac;'],
        [0, '&OElig;'],
        [0, '&oelig;'],
        [0, '&Racute;'],
        [0, '&racute;'],
        [0, '&Rcedil;'],
        [0, '&rcedil;'],
        [0, '&Rcaron;'],
        [0, '&rcaron;'],
        [0, '&Sacute;'],
        [0, '&sacute;'],
        [0, '&Scirc;'],
        [0, '&scirc;'],
        [0, '&Scedil;'],
        [0, '&scedil;'],
        [0, '&Scaron;'],
        [0, '&scaron;'],
        [0, '&Tcedil;'],
        [0, '&tcedil;'],
        [0, '&Tcaron;'],
        [0, '&tcaron;'],
        [0, '&Tstrok;'],
        [0, '&tstrok;'],
        [0, '&Utilde;'],
        [0, '&utilde;'],
        [0, '&Umacr;'],
        [0, '&umacr;'],
        [0, '&Ubreve;'],
        [0, '&ubreve;'],
        [0, '&Uring;'],
        [0, '&uring;'],
        [0, '&Udblac;'],
        [0, '&udblac;'],
        [0, '&Uogon;'],
        [0, '&uogon;'],
        [0, '&Wcirc;'],
        [0, '&wcirc;'],
        [0, '&Ycirc;'],
        [0, '&ycirc;'],
        [0, '&Yuml;'],
        [0, '&Zacute;'],
        [0, '&zacute;'],
        [0, '&Zdot;'],
        [0, '&zdot;'],
        [0, '&Zcaron;'],
        [0, '&zcaron;'],
        [19, '&fnof;'],
        [34, '&imped;'],
        [63, '&gacute;'],
        [65, '&jmath;'],
        [142, '&circ;'],
        [0, '&caron;'],
        [16, '&breve;'],
        [0, '&DiacriticalDot;'],
        [0, '&ring;'],
        [0, '&ogon;'],
        [0, '&DiacriticalTilde;'],
        [0, '&dblac;'],
        [51, '&DownBreve;'],
        [127, '&Alpha;'],
        [0, '&Beta;'],
        [0, '&Gamma;'],
        [0, '&Delta;'],
        [0, '&Epsilon;'],
        [0, '&Zeta;'],
        [0, '&Eta;'],
        [0, '&Theta;'],
        [0, '&Iota;'],
        [0, '&Kappa;'],
        [0, '&Lambda;'],
        [0, '&Mu;'],
        [0, '&Nu;'],
        [0, '&Xi;'],
        [0, '&Omicron;'],
        [0, '&Pi;'],
        [0, '&Rho;'],
        [1, '&Sigma;'],
        [0, '&Tau;'],
        [0, '&Upsilon;'],
        [0, '&Phi;'],
        [0, '&Chi;'],
        [0, '&Psi;'],
        [0, '&ohm;'],
        [7, '&alpha;'],
        [0, '&beta;'],
        [0, '&gamma;'],
        [0, '&delta;'],
        [0, '&epsi;'],
        [0, '&zeta;'],
        [0, '&eta;'],
        [0, '&theta;'],
        [0, '&iota;'],
        [0, '&kappa;'],
        [0, '&lambda;'],
        [0, '&mu;'],
        [0, '&nu;'],
        [0, '&xi;'],
        [0, '&omicron;'],
        [0, '&pi;'],
        [0, '&rho;'],
        [0, '&sigmaf;'],
        [0, '&sigma;'],
        [0, '&tau;'],
        [0, '&upsi;'],
        [0, '&phi;'],
        [0, '&chi;'],
        [0, '&psi;'],
        [0, '&omega;'],
        [7, '&thetasym;'],
        [0, '&Upsi;'],
        [2, '&phiv;'],
        [0, '&piv;'],
        [5, '&Gammad;'],
        [0, '&digamma;'],
        [18, '&kappav;'],
        [0, '&rhov;'],
        [3, '&epsiv;'],
        [0, '&backepsilon;'],
        [10, '&IOcy;'],
        [0, '&DJcy;'],
        [0, '&GJcy;'],
        [0, '&Jukcy;'],
        [0, '&DScy;'],
        [0, '&Iukcy;'],
        [0, '&YIcy;'],
        [0, '&Jsercy;'],
        [0, '&LJcy;'],
        [0, '&NJcy;'],
        [0, '&TSHcy;'],
        [0, '&KJcy;'],
        [1, '&Ubrcy;'],
        [0, '&DZcy;'],
        [0, '&Acy;'],
        [0, '&Bcy;'],
        [0, '&Vcy;'],
        [0, '&Gcy;'],
        [0, '&Dcy;'],
        [0, '&IEcy;'],
        [0, '&ZHcy;'],
        [0, '&Zcy;'],
        [0, '&Icy;'],
        [0, '&Jcy;'],
        [0, '&Kcy;'],
        [0, '&Lcy;'],
        [0, '&Mcy;'],
        [0, '&Ncy;'],
        [0, '&Ocy;'],
        [0, '&Pcy;'],
        [0, '&Rcy;'],
        [0, '&Scy;'],
        [0, '&Tcy;'],
        [0, '&Ucy;'],
        [0, '&Fcy;'],
        [0, '&KHcy;'],
        [0, '&TScy;'],
        [0, '&CHcy;'],
        [0, '&SHcy;'],
        [0, '&SHCHcy;'],
        [0, '&HARDcy;'],
        [0, '&Ycy;'],
        [0, '&SOFTcy;'],
        [0, '&Ecy;'],
        [0, '&YUcy;'],
        [0, '&YAcy;'],
        [0, '&acy;'],
        [0, '&bcy;'],
        [0, '&vcy;'],
        [0, '&gcy;'],
        [0, '&dcy;'],
        [0, '&iecy;'],
        [0, '&zhcy;'],
        [0, '&zcy;'],
        [0, '&icy;'],
        [0, '&jcy;'],
        [0, '&kcy;'],
        [0, '&lcy;'],
        [0, '&mcy;'],
        [0, '&ncy;'],
        [0, '&ocy;'],
        [0, '&pcy;'],
        [0, '&rcy;'],
        [0, '&scy;'],
        [0, '&tcy;'],
        [0, '&ucy;'],
        [0, '&fcy;'],
        [0, '&khcy;'],
        [0, '&tscy;'],
        [0, '&chcy;'],
        [0, '&shcy;'],
        [0, '&shchcy;'],
        [0, '&hardcy;'],
        [0, '&ycy;'],
        [0, '&softcy;'],
        [0, '&ecy;'],
        [0, '&yucy;'],
        [0, '&yacy;'],
        [1, '&iocy;'],
        [0, '&djcy;'],
        [0, '&gjcy;'],
        [0, '&jukcy;'],
        [0, '&dscy;'],
        [0, '&iukcy;'],
        [0, '&yicy;'],
        [0, '&jsercy;'],
        [0, '&ljcy;'],
        [0, '&njcy;'],
        [0, '&tshcy;'],
        [0, '&kjcy;'],
        [1, '&ubrcy;'],
        [0, '&dzcy;'],
        [7074, '&ensp;'],
        [0, '&emsp;'],
        [0, '&emsp13;'],
        [0, '&emsp14;'],
        [1, '&numsp;'],
        [0, '&puncsp;'],
        [0, '&ThinSpace;'],
        [0, '&hairsp;'],
        [0, '&NegativeMediumSpace;'],
        [0, '&zwnj;'],
        [0, '&zwj;'],
        [0, '&lrm;'],
        [0, '&rlm;'],
        [0, '&dash;'],
        [2, '&ndash;'],
        [0, '&mdash;'],
        [0, '&horbar;'],
        [0, '&Verbar;'],
        [1, '&lsquo;'],
        [0, '&CloseCurlyQuote;'],
        [0, '&lsquor;'],
        [1, '&ldquo;'],
        [0, '&CloseCurlyDoubleQuote;'],
        [0, '&bdquo;'],
        [1, '&dagger;'],
        [0, '&Dagger;'],
        [0, '&bull;'],
        [2, '&nldr;'],
        [0, '&hellip;'],
        [9, '&permil;'],
        [0, '&pertenk;'],
        [0, '&prime;'],
        [0, '&Prime;'],
        [0, '&tprime;'],
        [0, '&backprime;'],
        [3, '&lsaquo;'],
        [0, '&rsaquo;'],
        [3, '&oline;'],
        [2, '&caret;'],
        [1, '&hybull;'],
        [0, '&frasl;'],
        [10, '&bsemi;'],
        [7, '&qprime;'],
        [7, { v: '&MediumSpace;', n: 8202, o: '&ThickSpace;' }],
        [0, '&NoBreak;'],
        [0, '&af;'],
        [0, '&InvisibleTimes;'],
        [0, '&ic;'],
        [72, '&euro;'],
        [46, '&tdot;'],
        [0, '&DotDot;'],
        [37, '&complexes;'],
        [2, '&incare;'],
        [4, '&gscr;'],
        [0, '&hamilt;'],
        [0, '&Hfr;'],
        [0, '&Hopf;'],
        [0, '&planckh;'],
        [0, '&hbar;'],
        [0, '&imagline;'],
        [0, '&Ifr;'],
        [0, '&lagran;'],
        [0, '&ell;'],
        [1, '&naturals;'],
        [0, '&numero;'],
        [0, '&copysr;'],
        [0, '&weierp;'],
        [0, '&Popf;'],
        [0, '&Qopf;'],
        [0, '&realine;'],
        [0, '&real;'],
        [0, '&reals;'],
        [0, '&rx;'],
        [3, '&trade;'],
        [1, '&integers;'],
        [2, '&mho;'],
        [0, '&zeetrf;'],
        [0, '&iiota;'],
        [2, '&bernou;'],
        [0, '&Cayleys;'],
        [1, '&escr;'],
        [0, '&Escr;'],
        [0, '&Fouriertrf;'],
        [1, '&Mellintrf;'],
        [0, '&order;'],
        [0, '&alefsym;'],
        [0, '&beth;'],
        [0, '&gimel;'],
        [0, '&daleth;'],
        [12, '&CapitalDifferentialD;'],
        [0, '&dd;'],
        [0, '&ee;'],
        [0, '&ii;'],
        [10, '&frac13;'],
        [0, '&frac23;'],
        [0, '&frac15;'],
        [0, '&frac25;'],
        [0, '&frac35;'],
        [0, '&frac45;'],
        [0, '&frac16;'],
        [0, '&frac56;'],
        [0, '&frac18;'],
        [0, '&frac38;'],
        [0, '&frac58;'],
        [0, '&frac78;'],
        [49, '&larr;'],
        [0, '&ShortUpArrow;'],
        [0, '&rarr;'],
        [0, '&darr;'],
        [0, '&harr;'],
        [0, '&updownarrow;'],
        [0, '&nwarr;'],
        [0, '&nearr;'],
        [0, '&LowerRightArrow;'],
        [0, '&LowerLeftArrow;'],
        [0, '&nlarr;'],
        [0, '&nrarr;'],
        [1, { v: '&rarrw;', n: 824, o: '&nrarrw;' }],
        [0, '&Larr;'],
        [0, '&Uarr;'],
        [0, '&Rarr;'],
        [0, '&Darr;'],
        [0, '&larrtl;'],
        [0, '&rarrtl;'],
        [0, '&LeftTeeArrow;'],
        [0, '&mapstoup;'],
        [0, '&map;'],
        [0, '&DownTeeArrow;'],
        [1, '&hookleftarrow;'],
        [0, '&hookrightarrow;'],
        [0, '&larrlp;'],
        [0, '&looparrowright;'],
        [0, '&harrw;'],
        [0, '&nharr;'],
        [1, '&lsh;'],
        [0, '&rsh;'],
        [0, '&ldsh;'],
        [0, '&rdsh;'],
        [1, '&crarr;'],
        [0, '&cularr;'],
        [0, '&curarr;'],
        [2, '&circlearrowleft;'],
        [0, '&circlearrowright;'],
        [0, '&leftharpoonup;'],
        [0, '&DownLeftVector;'],
        [0, '&RightUpVector;'],
        [0, '&LeftUpVector;'],
        [0, '&rharu;'],
        [0, '&DownRightVector;'],
        [0, '&dharr;'],
        [0, '&dharl;'],
        [0, '&RightArrowLeftArrow;'],
        [0, '&udarr;'],
        [0, '&LeftArrowRightArrow;'],
        [0, '&leftleftarrows;'],
        [0, '&upuparrows;'],
        [0, '&rightrightarrows;'],
        [0, '&ddarr;'],
        [0, '&leftrightharpoons;'],
        [0, '&Equilibrium;'],
        [0, '&nlArr;'],
        [0, '&nhArr;'],
        [0, '&nrArr;'],
        [0, '&DoubleLeftArrow;'],
        [0, '&DoubleUpArrow;'],
        [0, '&DoubleRightArrow;'],
        [0, '&dArr;'],
        [0, '&DoubleLeftRightArrow;'],
        [0, '&DoubleUpDownArrow;'],
        [0, '&nwArr;'],
        [0, '&neArr;'],
        [0, '&seArr;'],
        [0, '&swArr;'],
        [0, '&lAarr;'],
        [0, '&rAarr;'],
        [1, '&zigrarr;'],
        [6, '&larrb;'],
        [0, '&rarrb;'],
        [15, '&DownArrowUpArrow;'],
        [7, '&loarr;'],
        [0, '&roarr;'],
        [0, '&hoarr;'],
        [0, '&forall;'],
        [0, '&comp;'],
        [0, { v: '&part;', n: 824, o: '&npart;' }],
        [0, '&exist;'],
        [0, '&nexist;'],
        [0, '&empty;'],
        [1, '&Del;'],
        [0, '&Element;'],
        [0, '&NotElement;'],
        [1, '&ni;'],
        [0, '&notni;'],
        [2, '&prod;'],
        [0, '&coprod;'],
        [0, '&sum;'],
        [0, '&minus;'],
        [0, '&MinusPlus;'],
        [0, '&dotplus;'],
        [1, '&Backslash;'],
        [0, '&lowast;'],
        [0, '&compfn;'],
        [1, '&radic;'],
        [2, '&prop;'],
        [0, '&infin;'],
        [0, '&angrt;'],
        [0, { v: '&ang;', n: 8402, o: '&nang;' }],
        [0, '&angmsd;'],
        [0, '&angsph;'],
        [0, '&mid;'],
        [0, '&nmid;'],
        [0, '&DoubleVerticalBar;'],
        [0, '&NotDoubleVerticalBar;'],
        [0, '&and;'],
        [0, '&or;'],
        [0, { v: '&cap;', n: 65024, o: '&caps;' }],
        [0, { v: '&cup;', n: 65024, o: '&cups;' }],
        [0, '&int;'],
        [0, '&Int;'],
        [0, '&iiint;'],
        [0, '&conint;'],
        [0, '&Conint;'],
        [0, '&Cconint;'],
        [0, '&cwint;'],
        [0, '&ClockwiseContourIntegral;'],
        [0, '&awconint;'],
        [0, '&there4;'],
        [0, '&becaus;'],
        [0, '&ratio;'],
        [0, '&Colon;'],
        [0, '&dotminus;'],
        [1, '&mDDot;'],
        [0, '&homtht;'],
        [0, { v: '&sim;', n: 8402, o: '&nvsim;' }],
        [0, { v: '&backsim;', n: 817, o: '&race;' }],
        [0, { v: '&ac;', n: 819, o: '&acE;' }],
        [0, '&acd;'],
        [0, '&VerticalTilde;'],
        [0, '&NotTilde;'],
        [0, { v: '&eqsim;', n: 824, o: '&nesim;' }],
        [0, '&sime;'],
        [0, '&NotTildeEqual;'],
        [0, '&cong;'],
        [0, '&simne;'],
        [0, '&ncong;'],
        [0, '&ap;'],
        [0, '&nap;'],
        [0, '&ape;'],
        [0, { v: '&apid;', n: 824, o: '&napid;' }],
        [0, '&backcong;'],
        [0, { v: '&asympeq;', n: 8402, o: '&nvap;' }],
        [0, { v: '&bump;', n: 824, o: '&nbump;' }],
        [0, { v: '&bumpe;', n: 824, o: '&nbumpe;' }],
        [0, { v: '&doteq;', n: 824, o: '&nedot;' }],
        [0, '&doteqdot;'],
        [0, '&efDot;'],
        [0, '&erDot;'],
        [0, '&Assign;'],
        [0, '&ecolon;'],
        [0, '&ecir;'],
        [0, '&circeq;'],
        [1, '&wedgeq;'],
        [0, '&veeeq;'],
        [1, '&triangleq;'],
        [2, '&equest;'],
        [0, '&ne;'],
        [0, { v: '&Congruent;', n: 8421, o: '&bnequiv;' }],
        [0, '&nequiv;'],
        [1, { v: '&le;', n: 8402, o: '&nvle;' }],
        [0, { v: '&ge;', n: 8402, o: '&nvge;' }],
        [0, { v: '&lE;', n: 824, o: '&nlE;' }],
        [0, { v: '&gE;', n: 824, o: '&ngE;' }],
        [0, { v: '&lnE;', n: 65024, o: '&lvertneqq;' }],
        [0, { v: '&gnE;', n: 65024, o: '&gvertneqq;' }],
        [
          0,
          {
            v: '&ll;',
            n: new Map(
              /* @__PURE__ */ restoreDiff([
                [824, '&nLtv;'],
                [7577, '&nLt;'],
              ])
            ),
          },
        ],
        [
          0,
          {
            v: '&gg;',
            n: new Map(
              /* @__PURE__ */ restoreDiff([
                [824, '&nGtv;'],
                [7577, '&nGt;'],
              ])
            ),
          },
        ],
        [0, '&between;'],
        [0, '&NotCupCap;'],
        [0, '&nless;'],
        [0, '&ngt;'],
        [0, '&nle;'],
        [0, '&nge;'],
        [0, '&lesssim;'],
        [0, '&GreaterTilde;'],
        [0, '&nlsim;'],
        [0, '&ngsim;'],
        [0, '&LessGreater;'],
        [0, '&gl;'],
        [0, '&NotLessGreater;'],
        [0, '&NotGreaterLess;'],
        [0, '&pr;'],
        [0, '&sc;'],
        [0, '&prcue;'],
        [0, '&sccue;'],
        [0, '&PrecedesTilde;'],
        [0, { v: '&scsim;', n: 824, o: '&NotSucceedsTilde;' }],
        [0, '&NotPrecedes;'],
        [0, '&NotSucceeds;'],
        [0, { v: '&sub;', n: 8402, o: '&NotSubset;' }],
        [0, { v: '&sup;', n: 8402, o: '&NotSuperset;' }],
        [0, '&nsub;'],
        [0, '&nsup;'],
        [0, '&sube;'],
        [0, '&supe;'],
        [0, '&NotSubsetEqual;'],
        [0, '&NotSupersetEqual;'],
        [0, { v: '&subne;', n: 65024, o: '&varsubsetneq;' }],
        [0, { v: '&supne;', n: 65024, o: '&varsupsetneq;' }],
        [1, '&cupdot;'],
        [0, '&UnionPlus;'],
        [0, { v: '&sqsub;', n: 824, o: '&NotSquareSubset;' }],
        [0, { v: '&sqsup;', n: 824, o: '&NotSquareSuperset;' }],
        [0, '&sqsube;'],
        [0, '&sqsupe;'],
        [0, { v: '&sqcap;', n: 65024, o: '&sqcaps;' }],
        [0, { v: '&sqcup;', n: 65024, o: '&sqcups;' }],
        [0, '&CirclePlus;'],
        [0, '&CircleMinus;'],
        [0, '&CircleTimes;'],
        [0, '&osol;'],
        [0, '&CircleDot;'],
        [0, '&circledcirc;'],
        [0, '&circledast;'],
        [1, '&circleddash;'],
        [0, '&boxplus;'],
        [0, '&boxminus;'],
        [0, '&boxtimes;'],
        [0, '&dotsquare;'],
        [0, '&RightTee;'],
        [0, '&dashv;'],
        [0, '&DownTee;'],
        [0, '&bot;'],
        [1, '&models;'],
        [0, '&DoubleRightTee;'],
        [0, '&Vdash;'],
        [0, '&Vvdash;'],
        [0, '&VDash;'],
        [0, '&nvdash;'],
        [0, '&nvDash;'],
        [0, '&nVdash;'],
        [0, '&nVDash;'],
        [0, '&prurel;'],
        [1, '&LeftTriangle;'],
        [0, '&RightTriangle;'],
        [0, { v: '&LeftTriangleEqual;', n: 8402, o: '&nvltrie;' }],
        [0, { v: '&RightTriangleEqual;', n: 8402, o: '&nvrtrie;' }],
        [0, '&origof;'],
        [0, '&imof;'],
        [0, '&multimap;'],
        [0, '&hercon;'],
        [0, '&intcal;'],
        [0, '&veebar;'],
        [1, '&barvee;'],
        [0, '&angrtvb;'],
        [0, '&lrtri;'],
        [0, '&bigwedge;'],
        [0, '&bigvee;'],
        [0, '&bigcap;'],
        [0, '&bigcup;'],
        [0, '&diam;'],
        [0, '&sdot;'],
        [0, '&sstarf;'],
        [0, '&divideontimes;'],
        [0, '&bowtie;'],
        [0, '&ltimes;'],
        [0, '&rtimes;'],
        [0, '&leftthreetimes;'],
        [0, '&rightthreetimes;'],
        [0, '&backsimeq;'],
        [0, '&curlyvee;'],
        [0, '&curlywedge;'],
        [0, '&Sub;'],
        [0, '&Sup;'],
        [0, '&Cap;'],
        [0, '&Cup;'],
        [0, '&fork;'],
        [0, '&epar;'],
        [0, '&lessdot;'],
        [0, '&gtdot;'],
        [0, { v: '&Ll;', n: 824, o: '&nLl;' }],
        [0, { v: '&Gg;', n: 824, o: '&nGg;' }],
        [0, { v: '&leg;', n: 65024, o: '&lesg;' }],
        [0, { v: '&gel;', n: 65024, o: '&gesl;' }],
        [2, '&cuepr;'],
        [0, '&cuesc;'],
        [0, '&NotPrecedesSlantEqual;'],
        [0, '&NotSucceedsSlantEqual;'],
        [0, '&NotSquareSubsetEqual;'],
        [0, '&NotSquareSupersetEqual;'],
        [2, '&lnsim;'],
        [0, '&gnsim;'],
        [0, '&precnsim;'],
        [0, '&scnsim;'],
        [0, '&nltri;'],
        [0, '&NotRightTriangle;'],
        [0, '&nltrie;'],
        [0, '&NotRightTriangleEqual;'],
        [0, '&vellip;'],
        [0, '&ctdot;'],
        [0, '&utdot;'],
        [0, '&dtdot;'],
        [0, '&disin;'],
        [0, '&isinsv;'],
        [0, '&isins;'],
        [0, { v: '&isindot;', n: 824, o: '&notindot;' }],
        [0, '&notinvc;'],
        [0, '&notinvb;'],
        [1, { v: '&isinE;', n: 824, o: '&notinE;' }],
        [0, '&nisd;'],
        [0, '&xnis;'],
        [0, '&nis;'],
        [0, '&notnivc;'],
        [0, '&notnivb;'],
        [6, '&barwed;'],
        [0, '&Barwed;'],
        [1, '&lceil;'],
        [0, '&rceil;'],
        [0, '&LeftFloor;'],
        [0, '&rfloor;'],
        [0, '&drcrop;'],
        [0, '&dlcrop;'],
        [0, '&urcrop;'],
        [0, '&ulcrop;'],
        [0, '&bnot;'],
        [1, '&profline;'],
        [0, '&profsurf;'],
        [1, '&telrec;'],
        [0, '&target;'],
        [5, '&ulcorn;'],
        [0, '&urcorn;'],
        [0, '&dlcorn;'],
        [0, '&drcorn;'],
        [2, '&frown;'],
        [0, '&smile;'],
        [9, '&cylcty;'],
        [0, '&profalar;'],
        [7, '&topbot;'],
        [6, '&ovbar;'],
        [1, '&solbar;'],
        [60, '&angzarr;'],
        [51, '&lmoustache;'],
        [0, '&rmoustache;'],
        [2, '&OverBracket;'],
        [0, '&bbrk;'],
        [0, '&bbrktbrk;'],
        [37, '&OverParenthesis;'],
        [0, '&UnderParenthesis;'],
        [0, '&OverBrace;'],
        [0, '&UnderBrace;'],
        [2, '&trpezium;'],
        [4, '&elinters;'],
        [59, '&blank;'],
        [164, '&circledS;'],
        [55, '&boxh;'],
        [1, '&boxv;'],
        [9, '&boxdr;'],
        [3, '&boxdl;'],
        [3, '&boxur;'],
        [3, '&boxul;'],
        [3, '&boxvr;'],
        [7, '&boxvl;'],
        [7, '&boxhd;'],
        [7, '&boxhu;'],
        [7, '&boxvh;'],
        [19, '&boxH;'],
        [0, '&boxV;'],
        [0, '&boxdR;'],
        [0, '&boxDr;'],
        [0, '&boxDR;'],
        [0, '&boxdL;'],
        [0, '&boxDl;'],
        [0, '&boxDL;'],
        [0, '&boxuR;'],
        [0, '&boxUr;'],
        [0, '&boxUR;'],
        [0, '&boxuL;'],
        [0, '&boxUl;'],
        [0, '&boxUL;'],
        [0, '&boxvR;'],
        [0, '&boxVr;'],
        [0, '&boxVR;'],
        [0, '&boxvL;'],
        [0, '&boxVl;'],
        [0, '&boxVL;'],
        [0, '&boxHd;'],
        [0, '&boxhD;'],
        [0, '&boxHD;'],
        [0, '&boxHu;'],
        [0, '&boxhU;'],
        [0, '&boxHU;'],
        [0, '&boxvH;'],
        [0, '&boxVh;'],
        [0, '&boxVH;'],
        [19, '&uhblk;'],
        [3, '&lhblk;'],
        [3, '&block;'],
        [8, '&blk14;'],
        [0, '&blk12;'],
        [0, '&blk34;'],
        [13, '&square;'],
        [8, '&blacksquare;'],
        [0, '&EmptyVerySmallSquare;'],
        [1, '&rect;'],
        [0, '&marker;'],
        [2, '&fltns;'],
        [1, '&bigtriangleup;'],
        [0, '&blacktriangle;'],
        [0, '&triangle;'],
        [2, '&blacktriangleright;'],
        [0, '&rtri;'],
        [3, '&bigtriangledown;'],
        [0, '&blacktriangledown;'],
        [0, '&dtri;'],
        [2, '&blacktriangleleft;'],
        [0, '&ltri;'],
        [6, '&loz;'],
        [0, '&cir;'],
        [32, '&tridot;'],
        [2, '&bigcirc;'],
        [8, '&ultri;'],
        [0, '&urtri;'],
        [0, '&lltri;'],
        [0, '&EmptySmallSquare;'],
        [0, '&FilledSmallSquare;'],
        [8, '&bigstar;'],
        [0, '&star;'],
        [7, '&phone;'],
        [49, '&female;'],
        [1, '&male;'],
        [29, '&spades;'],
        [2, '&clubs;'],
        [1, '&hearts;'],
        [0, '&diamondsuit;'],
        [3, '&sung;'],
        [2, '&flat;'],
        [0, '&natural;'],
        [0, '&sharp;'],
        [163, '&check;'],
        [3, '&cross;'],
        [8, '&malt;'],
        [21, '&sext;'],
        [33, '&VerticalSeparator;'],
        [25, '&lbbrk;'],
        [0, '&rbbrk;'],
        [84, '&bsolhsub;'],
        [0, '&suphsol;'],
        [28, '&LeftDoubleBracket;'],
        [0, '&RightDoubleBracket;'],
        [0, '&lang;'],
        [0, '&rang;'],
        [0, '&Lang;'],
        [0, '&Rang;'],
        [0, '&loang;'],
        [0, '&roang;'],
        [7, '&longleftarrow;'],
        [0, '&longrightarrow;'],
        [0, '&longleftrightarrow;'],
        [0, '&DoubleLongLeftArrow;'],
        [0, '&DoubleLongRightArrow;'],
        [0, '&DoubleLongLeftRightArrow;'],
        [1, '&longmapsto;'],
        [2, '&dzigrarr;'],
        [258, '&nvlArr;'],
        [0, '&nvrArr;'],
        [0, '&nvHarr;'],
        [0, '&Map;'],
        [6, '&lbarr;'],
        [0, '&bkarow;'],
        [0, '&lBarr;'],
        [0, '&dbkarow;'],
        [0, '&drbkarow;'],
        [0, '&DDotrahd;'],
        [0, '&UpArrowBar;'],
        [0, '&DownArrowBar;'],
        [2, '&Rarrtl;'],
        [2, '&latail;'],
        [0, '&ratail;'],
        [0, '&lAtail;'],
        [0, '&rAtail;'],
        [0, '&larrfs;'],
        [0, '&rarrfs;'],
        [0, '&larrbfs;'],
        [0, '&rarrbfs;'],
        [2, '&nwarhk;'],
        [0, '&nearhk;'],
        [0, '&hksearow;'],
        [0, '&hkswarow;'],
        [0, '&nwnear;'],
        [0, '&nesear;'],
        [0, '&seswar;'],
        [0, '&swnwar;'],
        [8, { v: '&rarrc;', n: 824, o: '&nrarrc;' }],
        [1, '&cudarrr;'],
        [0, '&ldca;'],
        [0, '&rdca;'],
        [0, '&cudarrl;'],
        [0, '&larrpl;'],
        [2, '&curarrm;'],
        [0, '&cularrp;'],
        [7, '&rarrpl;'],
        [2, '&harrcir;'],
        [0, '&Uarrocir;'],
        [0, '&lurdshar;'],
        [0, '&ldrushar;'],
        [2, '&LeftRightVector;'],
        [0, '&RightUpDownVector;'],
        [0, '&DownLeftRightVector;'],
        [0, '&LeftUpDownVector;'],
        [0, '&LeftVectorBar;'],
        [0, '&RightVectorBar;'],
        [0, '&RightUpVectorBar;'],
        [0, '&RightDownVectorBar;'],
        [0, '&DownLeftVectorBar;'],
        [0, '&DownRightVectorBar;'],
        [0, '&LeftUpVectorBar;'],
        [0, '&LeftDownVectorBar;'],
        [0, '&LeftTeeVector;'],
        [0, '&RightTeeVector;'],
        [0, '&RightUpTeeVector;'],
        [0, '&RightDownTeeVector;'],
        [0, '&DownLeftTeeVector;'],
        [0, '&DownRightTeeVector;'],
        [0, '&LeftUpTeeVector;'],
        [0, '&LeftDownTeeVector;'],
        [0, '&lHar;'],
        [0, '&uHar;'],
        [0, '&rHar;'],
        [0, '&dHar;'],
        [0, '&luruhar;'],
        [0, '&ldrdhar;'],
        [0, '&ruluhar;'],
        [0, '&rdldhar;'],
        [0, '&lharul;'],
        [0, '&llhard;'],
        [0, '&rharul;'],
        [0, '&lrhard;'],
        [0, '&udhar;'],
        [0, '&duhar;'],
        [0, '&RoundImplies;'],
        [0, '&erarr;'],
        [0, '&simrarr;'],
        [0, '&larrsim;'],
        [0, '&rarrsim;'],
        [0, '&rarrap;'],
        [0, '&ltlarr;'],
        [1, '&gtrarr;'],
        [0, '&subrarr;'],
        [1, '&suplarr;'],
        [0, '&lfisht;'],
        [0, '&rfisht;'],
        [0, '&ufisht;'],
        [0, '&dfisht;'],
        [5, '&lopar;'],
        [0, '&ropar;'],
        [4, '&lbrke;'],
        [0, '&rbrke;'],
        [0, '&lbrkslu;'],
        [0, '&rbrksld;'],
        [0, '&lbrksld;'],
        [0, '&rbrkslu;'],
        [0, '&langd;'],
        [0, '&rangd;'],
        [0, '&lparlt;'],
        [0, '&rpargt;'],
        [0, '&gtlPar;'],
        [0, '&ltrPar;'],
        [3, '&vzigzag;'],
        [1, '&vangrt;'],
        [0, '&angrtvbd;'],
        [6, '&ange;'],
        [0, '&range;'],
        [0, '&dwangle;'],
        [0, '&uwangle;'],
        [0, '&angmsdaa;'],
        [0, '&angmsdab;'],
        [0, '&angmsdac;'],
        [0, '&angmsdad;'],
        [0, '&angmsdae;'],
        [0, '&angmsdaf;'],
        [0, '&angmsdag;'],
        [0, '&angmsdah;'],
        [0, '&bemptyv;'],
        [0, '&demptyv;'],
        [0, '&cemptyv;'],
        [0, '&raemptyv;'],
        [0, '&laemptyv;'],
        [0, '&ohbar;'],
        [0, '&omid;'],
        [0, '&opar;'],
        [1, '&operp;'],
        [1, '&olcross;'],
        [0, '&odsold;'],
        [1, '&olcir;'],
        [0, '&ofcir;'],
        [0, '&olt;'],
        [0, '&ogt;'],
        [0, '&cirscir;'],
        [0, '&cirE;'],
        [0, '&solb;'],
        [0, '&bsolb;'],
        [3, '&boxbox;'],
        [3, '&trisb;'],
        [0, '&rtriltri;'],
        [0, { v: '&LeftTriangleBar;', n: 824, o: '&NotLeftTriangleBar;' }],
        [0, { v: '&RightTriangleBar;', n: 824, o: '&NotRightTriangleBar;' }],
        [11, '&iinfin;'],
        [0, '&infintie;'],
        [0, '&nvinfin;'],
        [4, '&eparsl;'],
        [0, '&smeparsl;'],
        [0, '&eqvparsl;'],
        [5, '&blacklozenge;'],
        [8, '&RuleDelayed;'],
        [1, '&dsol;'],
        [9, '&bigodot;'],
        [0, '&bigoplus;'],
        [0, '&bigotimes;'],
        [1, '&biguplus;'],
        [1, '&bigsqcup;'],
        [5, '&iiiint;'],
        [0, '&fpartint;'],
        [2, '&cirfnint;'],
        [0, '&awint;'],
        [0, '&rppolint;'],
        [0, '&scpolint;'],
        [0, '&npolint;'],
        [0, '&pointint;'],
        [0, '&quatint;'],
        [0, '&intlarhk;'],
        [10, '&pluscir;'],
        [0, '&plusacir;'],
        [0, '&simplus;'],
        [0, '&plusdu;'],
        [0, '&plussim;'],
        [0, '&plustwo;'],
        [1, '&mcomma;'],
        [0, '&minusdu;'],
        [2, '&loplus;'],
        [0, '&roplus;'],
        [0, '&Cross;'],
        [0, '&timesd;'],
        [0, '&timesbar;'],
        [1, '&smashp;'],
        [0, '&lotimes;'],
        [0, '&rotimes;'],
        [0, '&otimesas;'],
        [0, '&Otimes;'],
        [0, '&odiv;'],
        [0, '&triplus;'],
        [0, '&triminus;'],
        [0, '&tritime;'],
        [0, '&intprod;'],
        [2, '&amalg;'],
        [0, '&capdot;'],
        [1, '&ncup;'],
        [0, '&ncap;'],
        [0, '&capand;'],
        [0, '&cupor;'],
        [0, '&cupcap;'],
        [0, '&capcup;'],
        [0, '&cupbrcap;'],
        [0, '&capbrcup;'],
        [0, '&cupcup;'],
        [0, '&capcap;'],
        [0, '&ccups;'],
        [0, '&ccaps;'],
        [2, '&ccupssm;'],
        [2, '&And;'],
        [0, '&Or;'],
        [0, '&andand;'],
        [0, '&oror;'],
        [0, '&orslope;'],
        [0, '&andslope;'],
        [1, '&andv;'],
        [0, '&orv;'],
        [0, '&andd;'],
        [0, '&ord;'],
        [1, '&wedbar;'],
        [6, '&sdote;'],
        [3, '&simdot;'],
        [2, { v: '&congdot;', n: 824, o: '&ncongdot;' }],
        [0, '&easter;'],
        [0, '&apacir;'],
        [0, { v: '&apE;', n: 824, o: '&napE;' }],
        [0, '&eplus;'],
        [0, '&pluse;'],
        [0, '&Esim;'],
        [0, '&Colone;'],
        [0, '&Equal;'],
        [1, '&ddotseq;'],
        [0, '&equivDD;'],
        [0, '&ltcir;'],
        [0, '&gtcir;'],
        [0, '&ltquest;'],
        [0, '&gtquest;'],
        [0, { v: '&leqslant;', n: 824, o: '&nleqslant;' }],
        [0, { v: '&geqslant;', n: 824, o: '&ngeqslant;' }],
        [0, '&lesdot;'],
        [0, '&gesdot;'],
        [0, '&lesdoto;'],
        [0, '&gesdoto;'],
        [0, '&lesdotor;'],
        [0, '&gesdotol;'],
        [0, '&lap;'],
        [0, '&gap;'],
        [0, '&lne;'],
        [0, '&gne;'],
        [0, '&lnap;'],
        [0, '&gnap;'],
        [0, '&lEg;'],
        [0, '&gEl;'],
        [0, '&lsime;'],
        [0, '&gsime;'],
        [0, '&lsimg;'],
        [0, '&gsiml;'],
        [0, '&lgE;'],
        [0, '&glE;'],
        [0, '&lesges;'],
        [0, '&gesles;'],
        [0, '&els;'],
        [0, '&egs;'],
        [0, '&elsdot;'],
        [0, '&egsdot;'],
        [0, '&el;'],
        [0, '&eg;'],
        [2, '&siml;'],
        [0, '&simg;'],
        [0, '&simlE;'],
        [0, '&simgE;'],
        [0, { v: '&LessLess;', n: 824, o: '&NotNestedLessLess;' }],
        [0, { v: '&GreaterGreater;', n: 824, o: '&NotNestedGreaterGreater;' }],
        [1, '&glj;'],
        [0, '&gla;'],
        [0, '&ltcc;'],
        [0, '&gtcc;'],
        [0, '&lescc;'],
        [0, '&gescc;'],
        [0, '&smt;'],
        [0, '&lat;'],
        [0, { v: '&smte;', n: 65024, o: '&smtes;' }],
        [0, { v: '&late;', n: 65024, o: '&lates;' }],
        [0, '&bumpE;'],
        [0, { v: '&PrecedesEqual;', n: 824, o: '&NotPrecedesEqual;' }],
        [0, { v: '&sce;', n: 824, o: '&NotSucceedsEqual;' }],
        [2, '&prE;'],
        [0, '&scE;'],
        [0, '&precneqq;'],
        [0, '&scnE;'],
        [0, '&prap;'],
        [0, '&scap;'],
        [0, '&precnapprox;'],
        [0, '&scnap;'],
        [0, '&Pr;'],
        [0, '&Sc;'],
        [0, '&subdot;'],
        [0, '&supdot;'],
        [0, '&subplus;'],
        [0, '&supplus;'],
        [0, '&submult;'],
        [0, '&supmult;'],
        [0, '&subedot;'],
        [0, '&supedot;'],
        [0, { v: '&subE;', n: 824, o: '&nsubE;' }],
        [0, { v: '&supE;', n: 824, o: '&nsupE;' }],
        [0, '&subsim;'],
        [0, '&supsim;'],
        [2, { v: '&subnE;', n: 65024, o: '&varsubsetneqq;' }],
        [0, { v: '&supnE;', n: 65024, o: '&varsupsetneqq;' }],
        [2, '&csub;'],
        [0, '&csup;'],
        [0, '&csube;'],
        [0, '&csupe;'],
        [0, '&subsup;'],
        [0, '&supsub;'],
        [0, '&subsub;'],
        [0, '&supsup;'],
        [0, '&suphsub;'],
        [0, '&supdsub;'],
        [0, '&forkv;'],
        [0, '&topfork;'],
        [0, '&mlcp;'],
        [8, '&Dashv;'],
        [1, '&Vdashl;'],
        [0, '&Barv;'],
        [0, '&vBar;'],
        [0, '&vBarv;'],
        [1, '&Vbar;'],
        [0, '&Not;'],
        [0, '&bNot;'],
        [0, '&rnmid;'],
        [0, '&cirmid;'],
        [0, '&midcir;'],
        [0, '&topcir;'],
        [0, '&nhpar;'],
        [0, '&parsim;'],
        [9, { v: '&parsl;', n: 8421, o: '&nparsl;' }],
        [
          44343,
          {
            n: new Map(
              /* @__PURE__ */ restoreDiff([
                [56476, '&Ascr;'],
                [1, '&Cscr;'],
                [0, '&Dscr;'],
                [2, '&Gscr;'],
                [2, '&Jscr;'],
                [0, '&Kscr;'],
                [2, '&Nscr;'],
                [0, '&Oscr;'],
                [0, '&Pscr;'],
                [0, '&Qscr;'],
                [1, '&Sscr;'],
                [0, '&Tscr;'],
                [0, '&Uscr;'],
                [0, '&Vscr;'],
                [0, '&Wscr;'],
                [0, '&Xscr;'],
                [0, '&Yscr;'],
                [0, '&Zscr;'],
                [0, '&ascr;'],
                [0, '&bscr;'],
                [0, '&cscr;'],
                [0, '&dscr;'],
                [1, '&fscr;'],
                [1, '&hscr;'],
                [0, '&iscr;'],
                [0, '&jscr;'],
                [0, '&kscr;'],
                [0, '&lscr;'],
                [0, '&mscr;'],
                [0, '&nscr;'],
                [1, '&pscr;'],
                [0, '&qscr;'],
                [0, '&rscr;'],
                [0, '&sscr;'],
                [0, '&tscr;'],
                [0, '&uscr;'],
                [0, '&vscr;'],
                [0, '&wscr;'],
                [0, '&xscr;'],
                [0, '&yscr;'],
                [0, '&zscr;'],
                [52, '&Afr;'],
                [0, '&Bfr;'],
                [1, '&Dfr;'],
                [0, '&Efr;'],
                [0, '&Ffr;'],
                [0, '&Gfr;'],
                [2, '&Jfr;'],
                [0, '&Kfr;'],
                [0, '&Lfr;'],
                [0, '&Mfr;'],
                [0, '&Nfr;'],
                [0, '&Ofr;'],
                [0, '&Pfr;'],
                [0, '&Qfr;'],
                [1, '&Sfr;'],
                [0, '&Tfr;'],
                [0, '&Ufr;'],
                [0, '&Vfr;'],
                [0, '&Wfr;'],
                [0, '&Xfr;'],
                [0, '&Yfr;'],
                [1, '&afr;'],
                [0, '&bfr;'],
                [0, '&cfr;'],
                [0, '&dfr;'],
                [0, '&efr;'],
                [0, '&ffr;'],
                [0, '&gfr;'],
                [0, '&hfr;'],
                [0, '&ifr;'],
                [0, '&jfr;'],
                [0, '&kfr;'],
                [0, '&lfr;'],
                [0, '&mfr;'],
                [0, '&nfr;'],
                [0, '&ofr;'],
                [0, '&pfr;'],
                [0, '&qfr;'],
                [0, '&rfr;'],
                [0, '&sfr;'],
                [0, '&tfr;'],
                [0, '&ufr;'],
                [0, '&vfr;'],
                [0, '&wfr;'],
                [0, '&xfr;'],
                [0, '&yfr;'],
                [0, '&zfr;'],
                [0, '&Aopf;'],
                [0, '&Bopf;'],
                [1, '&Dopf;'],
                [0, '&Eopf;'],
                [0, '&Fopf;'],
                [0, '&Gopf;'],
                [1, '&Iopf;'],
                [0, '&Jopf;'],
                [0, '&Kopf;'],
                [0, '&Lopf;'],
                [0, '&Mopf;'],
                [1, '&Oopf;'],
                [3, '&Sopf;'],
                [0, '&Topf;'],
                [0, '&Uopf;'],
                [0, '&Vopf;'],
                [0, '&Wopf;'],
                [0, '&Xopf;'],
                [0, '&Yopf;'],
                [1, '&aopf;'],
                [0, '&bopf;'],
                [0, '&copf;'],
                [0, '&dopf;'],
                [0, '&eopf;'],
                [0, '&fopf;'],
                [0, '&gopf;'],
                [0, '&hopf;'],
                [0, '&iopf;'],
                [0, '&jopf;'],
                [0, '&kopf;'],
                [0, '&lopf;'],
                [0, '&mopf;'],
                [0, '&nopf;'],
                [0, '&oopf;'],
                [0, '&popf;'],
                [0, '&qopf;'],
                [0, '&ropf;'],
                [0, '&sopf;'],
                [0, '&topf;'],
                [0, '&uopf;'],
                [0, '&vopf;'],
                [0, '&wopf;'],
                [0, '&xopf;'],
                [0, '&yopf;'],
                [0, '&zopf;'],
              ])
            ),
          },
        ],
        [8906, '&fflig;'],
        [0, '&filig;'],
        [0, '&fllig;'],
        [0, '&ffilig;'],
        [0, '&ffllig;'],
      ])
    );
  },
});

// ../../node_modules/dom-serializer/node_modules/entities/lib/esm/escape.js
function encodeXML(str) {
  let ret = '';
  let lastIdx = 0;
  let match;
  while ((match = xmlReplacer.exec(str)) !== null) {
    const i = match.index;
    const char = str.charCodeAt(i);
    const next = xmlCodeMap.get(char);
    if (next !== void 0) {
      ret += str.substring(lastIdx, i) + next;
      lastIdx = i + 1;
    } else {
      ret += `${str.substring(lastIdx, i)}&#x${getCodePoint(str, i).toString(
        16
      )};`;
      lastIdx = xmlReplacer.lastIndex += Number((char & 64512) === 55296);
    }
  }
  return ret + str.substr(lastIdx);
}
function getEscaper(regex, map2) {
  return function escape3(data) {
    let match;
    let lastIdx = 0;
    let result = '';
    while ((match = regex.exec(data))) {
      if (lastIdx !== match.index) {
        result += data.substring(lastIdx, match.index);
      }
      result += map2.get(match[0].charCodeAt(0));
      lastIdx = match.index + 1;
    }
    return result + data.substring(lastIdx);
  };
}
var xmlReplacer,
  xmlCodeMap,
  getCodePoint,
  escapeUTF8,
  escapeAttribute,
  escapeText;
var init_escape = __esm({
  '../../node_modules/dom-serializer/node_modules/entities/lib/esm/escape.js'() {
    'use strict';
    xmlReplacer = /["&'<>$\x80-\uFFFF]/g;
    xmlCodeMap = /* @__PURE__ */ new Map([
      [34, '&quot;'],
      [38, '&amp;'],
      [39, '&apos;'],
      [60, '&lt;'],
      [62, '&gt;'],
    ]);
    getCodePoint = // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition
      String.prototype.codePointAt != null
        ? (str, index) => str.codePointAt(index)
        : // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
          (c2, index) =>
            (c2.charCodeAt(index) & 64512) === 55296
              ? (c2.charCodeAt(index) - 55296) * 1024 +
                c2.charCodeAt(index + 1) -
                56320 +
                65536
              : c2.charCodeAt(index);
    escapeUTF8 = getEscaper(/[&<>'"]/g, xmlCodeMap);
    escapeAttribute = getEscaper(
      /["&\u00A0]/g,
      /* @__PURE__ */ new Map([
        [34, '&quot;'],
        [38, '&amp;'],
        [160, '&nbsp;'],
      ])
    );
    escapeText = getEscaper(
      /[&<>\u00A0]/g,
      /* @__PURE__ */ new Map([
        [38, '&amp;'],
        [60, '&lt;'],
        [62, '&gt;'],
        [160, '&nbsp;'],
      ])
    );
  },
});

// ../../node_modules/dom-serializer/node_modules/entities/lib/esm/encode.js
var init_encode = __esm({
  '../../node_modules/dom-serializer/node_modules/entities/lib/esm/encode.js'() {
    'use strict';
    init_encode_html();
    init_escape();
  },
});

// ../../node_modules/dom-serializer/node_modules/entities/lib/esm/index.js
var EntityLevel, EncodingMode;
var init_esm4 = __esm({
  '../../node_modules/dom-serializer/node_modules/entities/lib/esm/index.js'() {
    'use strict';
    init_decode2();
    init_encode();
    init_escape();
    init_escape();
    init_encode();
    init_decode2();
    (function (EntityLevel2) {
      EntityLevel2[(EntityLevel2['XML'] = 0)] = 'XML';
      EntityLevel2[(EntityLevel2['HTML'] = 1)] = 'HTML';
    })(EntityLevel || (EntityLevel = {}));
    (function (EncodingMode2) {
      EncodingMode2[(EncodingMode2['UTF8'] = 0)] = 'UTF8';
      EncodingMode2[(EncodingMode2['ASCII'] = 1)] = 'ASCII';
      EncodingMode2[(EncodingMode2['Extensive'] = 2)] = 'Extensive';
      EncodingMode2[(EncodingMode2['Attribute'] = 3)] = 'Attribute';
      EncodingMode2[(EncodingMode2['Text'] = 4)] = 'Text';
    })(EncodingMode || (EncodingMode = {}));
  },
});

// ../../node_modules/dom-serializer/lib/esm/foreignNames.js
var elementNames, attributeNames;
var init_foreignNames = __esm({
  '../../node_modules/dom-serializer/lib/esm/foreignNames.js'() {
    'use strict';
    elementNames = new Map(
      [
        'altGlyph',
        'altGlyphDef',
        'altGlyphItem',
        'animateColor',
        'animateMotion',
        'animateTransform',
        'clipPath',
        'feBlend',
        'feColorMatrix',
        'feComponentTransfer',
        'feComposite',
        'feConvolveMatrix',
        'feDiffuseLighting',
        'feDisplacementMap',
        'feDistantLight',
        'feDropShadow',
        'feFlood',
        'feFuncA',
        'feFuncB',
        'feFuncG',
        'feFuncR',
        'feGaussianBlur',
        'feImage',
        'feMerge',
        'feMergeNode',
        'feMorphology',
        'feOffset',
        'fePointLight',
        'feSpecularLighting',
        'feSpotLight',
        'feTile',
        'feTurbulence',
        'foreignObject',
        'glyphRef',
        'linearGradient',
        'radialGradient',
        'textPath',
      ].map((val) => [val.toLowerCase(), val])
    );
    attributeNames = new Map(
      [
        'definitionURL',
        'attributeName',
        'attributeType',
        'baseFrequency',
        'baseProfile',
        'calcMode',
        'clipPathUnits',
        'diffuseConstant',
        'edgeMode',
        'filterUnits',
        'glyphRef',
        'gradientTransform',
        'gradientUnits',
        'kernelMatrix',
        'kernelUnitLength',
        'keyPoints',
        'keySplines',
        'keyTimes',
        'lengthAdjust',
        'limitingConeAngle',
        'markerHeight',
        'markerUnits',
        'markerWidth',
        'maskContentUnits',
        'maskUnits',
        'numOctaves',
        'pathLength',
        'patternContentUnits',
        'patternTransform',
        'patternUnits',
        'pointsAtX',
        'pointsAtY',
        'pointsAtZ',
        'preserveAlpha',
        'preserveAspectRatio',
        'primitiveUnits',
        'refX',
        'refY',
        'repeatCount',
        'repeatDur',
        'requiredExtensions',
        'requiredFeatures',
        'specularConstant',
        'specularExponent',
        'spreadMethod',
        'startOffset',
        'stdDeviation',
        'stitchTiles',
        'surfaceScale',
        'systemLanguage',
        'tableValues',
        'targetX',
        'targetY',
        'textLength',
        'viewBox',
        'viewTarget',
        'xChannelSelector',
        'yChannelSelector',
        'zoomAndPan',
      ].map((val) => [val.toLowerCase(), val])
    );
  },
});

// ../../node_modules/dom-serializer/lib/esm/index.js
function replaceQuotes(value) {
  return value.replace(/"/g, '&quot;');
}
function formatAttributes(attributes, opts) {
  var _a4;
  if (!attributes) return;
  const encode =
    ((_a4 = opts.encodeEntities) !== null && _a4 !== void 0
      ? _a4
      : opts.decodeEntities) === false
      ? replaceQuotes
      : opts.xmlMode || opts.encodeEntities !== 'utf8'
      ? encodeXML
      : escapeAttribute;
  return Object.keys(attributes)
    .map((key) => {
      var _a5, _b;
      const value =
        (_a5 = attributes[key]) !== null && _a5 !== void 0 ? _a5 : '';
      if (opts.xmlMode === 'foreign') {
        key =
          (_b = attributeNames.get(key)) !== null && _b !== void 0 ? _b : key;
      }
      if (!opts.emptyAttrs && !opts.xmlMode && value === '') {
        return key;
      }
      return `${key}="${encode(value)}"`;
    })
    .join(' ');
}
function render(node, options = {}) {
  const nodes = 'length' in node ? node : [node];
  let output = '';
  for (let i = 0; i < nodes.length; i++) {
    output += renderNode(nodes[i], options);
  }
  return output;
}
function renderNode(node, options) {
  switch (node.type) {
    case Root:
      return render(node.children, options);
    case Doctype:
    case Directive:
      return renderDirective(node);
    case Comment:
      return renderComment(node);
    case CDATA:
      return renderCdata(node);
    case Script:
    case Style:
    case Tag:
      return renderTag(node, options);
    case Text:
      return renderText(node, options);
  }
}
function renderTag(elem, opts) {
  var _a4;
  if (opts.xmlMode === 'foreign') {
    elem.name =
      (_a4 = elementNames.get(elem.name)) !== null && _a4 !== void 0
        ? _a4
        : elem.name;
    if (elem.parent && foreignModeIntegrationPoints.has(elem.parent.name)) {
      opts = { ...opts, xmlMode: false };
    }
  }
  if (!opts.xmlMode && foreignElements.has(elem.name)) {
    opts = { ...opts, xmlMode: 'foreign' };
  }
  let tag = `<${elem.name}`;
  const attribs = formatAttributes(elem.attribs, opts);
  if (attribs) {
    tag += ` ${attribs}`;
  }
  if (
    elem.children.length === 0 &&
    (opts.xmlMode
      ? // In XML mode or foreign mode, and user hasn't explicitly turned off self-closing tags
        opts.selfClosingTags !== false
      : // User explicitly asked for self-closing tags, even in HTML mode
        opts.selfClosingTags && singleTag.has(elem.name))
  ) {
    if (!opts.xmlMode) tag += ' ';
    tag += '/>';
  } else {
    tag += '>';
    if (elem.children.length > 0) {
      tag += render(elem.children, opts);
    }
    if (opts.xmlMode || !singleTag.has(elem.name)) {
      tag += `</${elem.name}>`;
    }
  }
  return tag;
}
function renderDirective(elem) {
  return `<${elem.data}>`;
}
function renderText(elem, opts) {
  var _a4;
  let data = elem.data || '';
  if (
    ((_a4 = opts.encodeEntities) !== null && _a4 !== void 0
      ? _a4
      : opts.decodeEntities) !== false &&
    !(!opts.xmlMode && elem.parent && unencodedElements.has(elem.parent.name))
  ) {
    data =
      opts.xmlMode || opts.encodeEntities !== 'utf8'
        ? encodeXML(data)
        : escapeText(data);
  }
  return data;
}
function renderCdata(elem) {
  return `<![CDATA[${elem.children[0].data}]]>`;
}
function renderComment(elem) {
  return `<!--${elem.data}-->`;
}
var unencodedElements, singleTag, foreignModeIntegrationPoints, foreignElements;
var init_esm5 = __esm({
  '../../node_modules/dom-serializer/lib/esm/index.js'() {
    'use strict';
    init_esm();
    init_esm4();
    init_foreignNames();
    unencodedElements = /* @__PURE__ */ new Set([
      'style',
      'script',
      'xmp',
      'iframe',
      'noembed',
      'noframes',
      'plaintext',
      'noscript',
    ]);
    singleTag = /* @__PURE__ */ new Set([
      'area',
      'base',
      'basefont',
      'br',
      'col',
      'command',
      'embed',
      'frame',
      'hr',
      'img',
      'input',
      'isindex',
      'keygen',
      'link',
      'meta',
      'param',
      'source',
      'track',
      'wbr',
    ]);
    foreignModeIntegrationPoints = /* @__PURE__ */ new Set([
      'mi',
      'mo',
      'mn',
      'ms',
      'mtext',
      'annotation-xml',
      'foreignObject',
      'desc',
      'title',
    ]);
    foreignElements = /* @__PURE__ */ new Set(['svg', 'math']);
  },
});

// ../../node_modules/html-to-text/node_modules/domutils/lib/esm/stringify.js
var init_stringify = __esm({
  '../../node_modules/html-to-text/node_modules/domutils/lib/esm/stringify.js'() {
    'use strict';
    init_esm3();
    init_esm5();
    init_esm();
  },
});

// ../../node_modules/html-to-text/node_modules/domutils/lib/esm/traversal.js
var init_traversal = __esm({
  '../../node_modules/html-to-text/node_modules/domutils/lib/esm/traversal.js'() {
    'use strict';
    init_esm3();
  },
});

// ../../node_modules/html-to-text/node_modules/domutils/lib/esm/manipulation.js
var init_manipulation = __esm({
  '../../node_modules/html-to-text/node_modules/domutils/lib/esm/manipulation.js'() {
    'use strict';
  },
});

// ../../node_modules/html-to-text/node_modules/domutils/lib/esm/querying.js
var init_querying = __esm({
  '../../node_modules/html-to-text/node_modules/domutils/lib/esm/querying.js'() {
    'use strict';
    init_esm3();
  },
});

// ../../node_modules/html-to-text/node_modules/domutils/lib/esm/legacy.js
var init_legacy = __esm({
  '../../node_modules/html-to-text/node_modules/domutils/lib/esm/legacy.js'() {
    'use strict';
    init_esm3();
    init_querying();
  },
});

// ../../node_modules/html-to-text/node_modules/domutils/lib/esm/helpers.js
var DocumentPosition;
var init_helpers = __esm({
  '../../node_modules/html-to-text/node_modules/domutils/lib/esm/helpers.js'() {
    'use strict';
    init_esm3();
    (function (DocumentPosition2) {
      DocumentPosition2[(DocumentPosition2['DISCONNECTED'] = 1)] =
        'DISCONNECTED';
      DocumentPosition2[(DocumentPosition2['PRECEDING'] = 2)] = 'PRECEDING';
      DocumentPosition2[(DocumentPosition2['FOLLOWING'] = 4)] = 'FOLLOWING';
      DocumentPosition2[(DocumentPosition2['CONTAINS'] = 8)] = 'CONTAINS';
      DocumentPosition2[(DocumentPosition2['CONTAINED_BY'] = 16)] =
        'CONTAINED_BY';
    })(DocumentPosition || (DocumentPosition = {}));
  },
});

// ../../node_modules/html-to-text/node_modules/domutils/lib/esm/feeds.js
var init_feeds = __esm({
  '../../node_modules/html-to-text/node_modules/domutils/lib/esm/feeds.js'() {
    'use strict';
    init_stringify();
    init_legacy();
  },
});

// ../../node_modules/html-to-text/node_modules/domutils/lib/esm/index.js
var init_esm6 = __esm({
  '../../node_modules/html-to-text/node_modules/domutils/lib/esm/index.js'() {
    'use strict';
    init_stringify();
    init_traversal();
    init_manipulation();
    init_querying();
    init_legacy();
    init_helpers();
    init_feeds();
    init_esm3();
  },
});

// ../../node_modules/html-to-text/node_modules/htmlparser2/lib/esm/index.js
function parseDocument(data, options) {
  const handler = new DomHandler(void 0, options);
  new Parser(handler, options).end(data);
  return handler.root;
}
var init_esm7 = __esm({
  '../../node_modules/html-to-text/node_modules/htmlparser2/lib/esm/index.js'() {
    'use strict';
    init_Parser();
    init_Parser();
    init_esm3();
    init_esm3();
    init_Tokenizer();
    init_esm();
    init_esm6();
    init_esm6();
    init_esm6();
  },
});

// ../../node_modules/deepmerge/dist/cjs.js
var require_cjs = __commonJS({
  '../../node_modules/deepmerge/dist/cjs.js'(exports2, module2) {
    'use strict';
    var isMergeableObject = function isMergeableObject2(value) {
      return isNonNullObject(value) && !isSpecial(value);
    };
    function isNonNullObject(value) {
      return !!value && typeof value === 'object';
    }
    function isSpecial(value) {
      var stringValue = Object.prototype.toString.call(value);
      return (
        stringValue === '[object RegExp]' ||
        stringValue === '[object Date]' ||
        isReactElement(value)
      );
    }
    var canUseSymbol = typeof Symbol === 'function' && Symbol.for;
    var REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 60103;
    function isReactElement(value) {
      return value.$$typeof === REACT_ELEMENT_TYPE;
    }
    function emptyTarget(val) {
      return Array.isArray(val) ? [] : {};
    }
    function cloneUnlessOtherwiseSpecified(value, options) {
      return options.clone !== false && options.isMergeableObject(value)
        ? deepmerge(emptyTarget(value), value, options)
        : value;
    }
    function defaultArrayMerge(target, source, options) {
      return target.concat(source).map(function (element) {
        return cloneUnlessOtherwiseSpecified(element, options);
      });
    }
    function getMergeFunction(key, options) {
      if (!options.customMerge) {
        return deepmerge;
      }
      var customMerge = options.customMerge(key);
      return typeof customMerge === 'function' ? customMerge : deepmerge;
    }
    function getEnumerableOwnPropertySymbols(target) {
      return Object.getOwnPropertySymbols
        ? Object.getOwnPropertySymbols(target).filter(function (symbol) {
            return Object.propertyIsEnumerable.call(target, symbol);
          })
        : [];
    }
    function getKeys(target) {
      return Object.keys(target).concat(
        getEnumerableOwnPropertySymbols(target)
      );
    }
    function propertyIsOnObject(object, property) {
      try {
        return property in object;
      } catch (_2) {
        return false;
      }
    }
    function propertyIsUnsafe(target, key) {
      return (
        propertyIsOnObject(target, key) &&
        !(
          Object.hasOwnProperty.call(target, key) &&
          Object.propertyIsEnumerable.call(target, key)
        )
      );
    }
    function mergeObject(target, source, options) {
      var destination = {};
      if (options.isMergeableObject(target)) {
        getKeys(target).forEach(function (key) {
          destination[key] = cloneUnlessOtherwiseSpecified(
            target[key],
            options
          );
        });
      }
      getKeys(source).forEach(function (key) {
        if (propertyIsUnsafe(target, key)) {
          return;
        }
        if (
          propertyIsOnObject(target, key) &&
          options.isMergeableObject(source[key])
        ) {
          destination[key] = getMergeFunction(key, options)(
            target[key],
            source[key],
            options
          );
        } else {
          destination[key] = cloneUnlessOtherwiseSpecified(
            source[key],
            options
          );
        }
      });
      return destination;
    }
    function deepmerge(target, source, options) {
      options = options || {};
      options.arrayMerge = options.arrayMerge || defaultArrayMerge;
      options.isMergeableObject =
        options.isMergeableObject || isMergeableObject;
      options.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;
      var sourceIsArray = Array.isArray(source);
      var targetIsArray = Array.isArray(target);
      var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;
      if (!sourceAndTargetTypesMatch) {
        return cloneUnlessOtherwiseSpecified(source, options);
      } else if (sourceIsArray) {
        return options.arrayMerge(target, source, options);
      } else {
        return mergeObject(target, source, options);
      }
    }
    deepmerge.all = function deepmergeAll(array, options) {
      if (!Array.isArray(array)) {
        throw new Error('first argument should be an array');
      }
      return array.reduce(function (prev, next) {
        return deepmerge(prev, next, options);
      }, {});
    };
    var deepmerge_1 = deepmerge;
    module2.exports = deepmerge_1;
  },
});

// ../../node_modules/html-to-text/lib/html-to-text.mjs
function limitedDepthRecursive(n2, f, g = () => void 0) {
  if (n2 === void 0) {
    const f1 = function (...args) {
      return f(f1, ...args);
    };
    return f1;
  }
  if (n2 >= 0) {
    return function (...args) {
      return f(limitedDepthRecursive(n2 - 1, f, g), ...args);
    };
  }
  return g;
}
function trimCharacter(str, char) {
  let start = 0;
  let end = str.length;
  while (start < end && str[start] === char) {
    ++start;
  }
  while (end > start && str[end - 1] === char) {
    --end;
  }
  return start > 0 || end < str.length ? str.substring(start, end) : str;
}
function trimCharacterEnd(str, char) {
  let end = str.length;
  while (end > 0 && str[end - 1] === char) {
    --end;
  }
  return end < str.length ? str.substring(0, end) : str;
}
function unicodeEscape(str) {
  return str.replace(
    /[\s\S]/g,
    (c2) => '\\u' + c2.charCodeAt().toString(16).padStart(4, '0')
  );
}
function mergeDuplicatesPreferLast(items, getKey) {
  const map2 = /* @__PURE__ */ new Map();
  for (let i = items.length; i-- > 0; ) {
    const item = items[i];
    const key = getKey(item);
    map2.set(
      key,
      map2.has(key)
        ? (0, import_deepmerge.default)(item, map2.get(key), {
            arrayMerge: overwriteMerge$1,
          })
        : item
    );
  }
  return [...map2.values()].reverse();
}
function get(obj, path) {
  for (const key of path) {
    if (!obj) {
      return void 0;
    }
    obj = obj[key];
  }
  return obj;
}
function numberToLetterSequence(num, baseChar = 'a', base = 26) {
  const digits = [];
  do {
    num -= 1;
    digits.push(num % base);
    num = (num / base) >> 0;
  } while (num > 0);
  const baseCode = baseChar.charCodeAt(0);
  return digits
    .reverse()
    .map((n2) => String.fromCharCode(baseCode + n2))
    .join('');
}
function numberToRoman(num) {
  return [...(num + '')]
    .map((n2) => +n2)
    .reverse()
    .map((v, i) =>
      v % 5 < 4
        ? (v < 5 ? '' : V[i]) + I[i].repeat(v % 5)
        : I[i] + (v < 5 ? V[i] : I[i + 1])
    )
    .reverse()
    .join('');
}
function charactersToCodes(str) {
  return [...str]
    .map((c2) => '\\u' + c2.charCodeAt(0).toString(16).padStart(4, '0'))
    .join('');
}
function getText(stackItem) {
  if (
    !(
      stackItem instanceof BlockStackItem ||
      stackItem instanceof ListItemStackItem ||
      stackItem instanceof TableCellStackItem
    )
  ) {
    throw new Error(
      'Only blocks, list items and table cells can be requested for text contents.'
    );
  }
  return stackItem.inlineTextBuilder.isEmpty()
    ? stackItem.rawText
    : stackItem.rawText + stackItem.inlineTextBuilder.toString();
}
function addText(stackItem, text, leadingLineBreaks, trailingLineBreaks) {
  if (
    !(
      stackItem instanceof BlockStackItem ||
      stackItem instanceof ListItemStackItem ||
      stackItem instanceof TableCellStackItem
    )
  ) {
    throw new Error(
      'Only blocks, list items and table cells can contain text.'
    );
  }
  const parentText = getText(stackItem);
  const lineBreaks = Math.max(stackItem.stashedLineBreaks, leadingLineBreaks);
  stackItem.inlineTextBuilder.clear();
  if (parentText) {
    stackItem.rawText = parentText + '\n'.repeat(lineBreaks) + text;
  } else {
    stackItem.rawText = text;
    stackItem.leadingLineBreaks = lineBreaks;
  }
  stackItem.stashedLineBreaks = trailingLineBreaks;
}
function applyTransformer(str, transformer) {
  return transformer
    ? applyTransformer(transformer.transform(str), transformer.next)
    : str;
}
function compile$1(options = {}) {
  const selectorsWithoutFormat = options.selectors.filter((s2) => !s2.format);
  if (selectorsWithoutFormat.length) {
    throw new Error(
      'Following selectors have no specified format: ' +
        selectorsWithoutFormat.map((s2) => `\`${s2.selector}\``).join(', ')
    );
  }
  const picker = new DecisionTree(
    options.selectors.map((s2) => [s2.selector, s2])
  ).build(hp2Builder);
  if (typeof options.encodeCharacters !== 'function') {
    options.encodeCharacters = makeReplacerFromDict(options.encodeCharacters);
  }
  const baseSelectorsPicker = new DecisionTree(
    options.baseElements.selectors.map((s2, i) => [s2, i + 1])
  ).build(hp2Builder);
  function findBaseElements(dom) {
    return findBases(dom, options, baseSelectorsPicker);
  }
  const limitedWalk = limitedDepthRecursive(
    options.limits.maxDepth,
    recursiveWalk,
    function (dom, builder) {
      builder.addInline(options.limits.ellipsis || '');
    }
  );
  return function (html, metadata = void 0) {
    return process2(
      html,
      metadata,
      options,
      picker,
      findBaseElements,
      limitedWalk
    );
  };
}
function process2(html, metadata, options, picker, findBaseElements, walk) {
  const maxInputLength = options.limits.maxInputLength;
  if (maxInputLength && html && html.length > maxInputLength) {
    console.warn(
      `Input length ${html.length} is above allowed limit of ${maxInputLength}. Truncating without ellipsis.`
    );
    html = html.substring(0, maxInputLength);
  }
  const document2 = parseDocument(html, {
    decodeEntities: options.decodeEntities,
  });
  const bases = findBaseElements(document2.children);
  const builder = new BlockTextBuilder(options, picker, metadata);
  walk(bases, builder);
  return builder.toString();
}
function findBases(dom, options, baseSelectorsPicker) {
  const results = [];
  function recursiveWalk2(walk, dom2) {
    dom2 = dom2.slice(0, options.limits.maxChildNodes);
    for (const elem of dom2) {
      if (elem.type !== 'tag') {
        continue;
      }
      const pickedSelectorIndex = baseSelectorsPicker.pick1(elem);
      if (pickedSelectorIndex > 0) {
        results.push({ selectorIndex: pickedSelectorIndex, element: elem });
      } else if (elem.children) {
        walk(elem.children);
      }
      if (results.length >= options.limits.maxBaseElements) {
        return;
      }
    }
  }
  const limitedWalk = limitedDepthRecursive(
    options.limits.maxDepth,
    recursiveWalk2
  );
  limitedWalk(dom);
  if (options.baseElements.orderBy !== 'occurrence') {
    results.sort((a, b) => a.selectorIndex - b.selectorIndex);
  }
  return options.baseElements.returnDomByDefault && results.length === 0
    ? dom
    : results.map((x) => x.element);
}
function recursiveWalk(walk, dom, builder) {
  if (!dom) {
    return;
  }
  const options = builder.options;
  const tooManyChildNodes = dom.length > options.limits.maxChildNodes;
  if (tooManyChildNodes) {
    dom = dom.slice(0, options.limits.maxChildNodes);
    dom.push({
      data: options.limits.ellipsis,
      type: 'text',
    });
  }
  for (const elem of dom) {
    switch (elem.type) {
      case 'text': {
        builder.addInline(elem.data);
        break;
      }
      case 'tag': {
        const tagDefinition = builder.picker.pick1(elem);
        const format2 = options.formatters[tagDefinition.format];
        format2(elem, walk, builder, tagDefinition.options || {});
        break;
      }
    }
  }
  return;
}
function makeReplacerFromDict(dict) {
  if (!dict || Object.keys(dict).length === 0) {
    return void 0;
  }
  const entries = Object.entries(dict).filter(([, v]) => v !== false);
  const regex = new RegExp(
    entries.map(([c2]) => `(${unicodeEscape([...c2][0])})`).join('|'),
    'g'
  );
  const values = entries.map(([, v]) => v);
  const replacer = (m2, ...cgs) => values[cgs.findIndex((cg) => cg)];
  return (str) => str.replace(regex, replacer);
}
function formatSkip(elem, walk, builder, formatOptions) {}
function formatInlineString(elem, walk, builder, formatOptions) {
  builder.addLiteral(formatOptions.string || '');
}
function formatBlockString(elem, walk, builder, formatOptions) {
  builder.openBlock({
    leadingLineBreaks: formatOptions.leadingLineBreaks || 2,
  });
  builder.addLiteral(formatOptions.string || '');
  builder.closeBlock({
    trailingLineBreaks: formatOptions.trailingLineBreaks || 2,
  });
}
function formatInline(elem, walk, builder, formatOptions) {
  walk(elem.children, builder);
}
function formatBlock$1(elem, walk, builder, formatOptions) {
  builder.openBlock({
    leadingLineBreaks: formatOptions.leadingLineBreaks || 2,
  });
  walk(elem.children, builder);
  builder.closeBlock({
    trailingLineBreaks: formatOptions.trailingLineBreaks || 2,
  });
}
function renderOpenTag(elem) {
  const attrs =
    elem.attribs && elem.attribs.length
      ? ' ' +
        Object.entries(elem.attribs)
          .map(([k2, v]) =>
            v === '' ? k2 : `${k2}=${v.replace(/"/g, '&quot;')}`
          )
          .join(' ')
      : '';
  return `<${elem.name}${attrs}>`;
}
function renderCloseTag(elem) {
  return `</${elem.name}>`;
}
function formatInlineTag(elem, walk, builder, formatOptions) {
  builder.startNoWrap();
  builder.addLiteral(renderOpenTag(elem));
  builder.stopNoWrap();
  walk(elem.children, builder);
  builder.startNoWrap();
  builder.addLiteral(renderCloseTag(elem));
  builder.stopNoWrap();
}
function formatBlockTag(elem, walk, builder, formatOptions) {
  builder.openBlock({
    leadingLineBreaks: formatOptions.leadingLineBreaks || 2,
  });
  builder.startNoWrap();
  builder.addLiteral(renderOpenTag(elem));
  builder.stopNoWrap();
  walk(elem.children, builder);
  builder.startNoWrap();
  builder.addLiteral(renderCloseTag(elem));
  builder.stopNoWrap();
  builder.closeBlock({
    trailingLineBreaks: formatOptions.trailingLineBreaks || 2,
  });
}
function formatInlineHtml(elem, walk, builder, formatOptions) {
  builder.startNoWrap();
  builder.addLiteral(
    render(elem, { decodeEntities: builder.options.decodeEntities })
  );
  builder.stopNoWrap();
}
function formatBlockHtml(elem, walk, builder, formatOptions) {
  builder.openBlock({
    leadingLineBreaks: formatOptions.leadingLineBreaks || 2,
  });
  builder.startNoWrap();
  builder.addLiteral(
    render(elem, { decodeEntities: builder.options.decodeEntities })
  );
  builder.stopNoWrap();
  builder.closeBlock({
    trailingLineBreaks: formatOptions.trailingLineBreaks || 2,
  });
}
function formatInlineSurround(elem, walk, builder, formatOptions) {
  builder.addLiteral(formatOptions.prefix || '');
  walk(elem.children, builder);
  builder.addLiteral(formatOptions.suffix || '');
}
function getRow(matrix, j2) {
  if (!matrix[j2]) {
    matrix[j2] = [];
  }
  return matrix[j2];
}
function findFirstVacantIndex(row, x = 0) {
  while (row[x]) {
    x++;
  }
  return x;
}
function transposeInPlace(matrix, maxSize) {
  for (let i = 0; i < maxSize; i++) {
    const rowI = getRow(matrix, i);
    for (let j2 = 0; j2 < i; j2++) {
      const rowJ = getRow(matrix, j2);
      const temp = rowI[j2];
      rowI[j2] = rowJ[i];
      rowJ[i] = temp;
    }
  }
}
function putCellIntoLayout(cell, layout, baseRow, baseCol) {
  for (let r2 = 0; r2 < cell.rowspan; r2++) {
    const layoutRow = getRow(layout, baseRow + r2);
    for (let c2 = 0; c2 < cell.colspan; c2++) {
      layoutRow[baseCol + c2] = cell;
    }
  }
}
function updateOffset(offsets, base, span, value) {
  offsets[base + span] = Math.max(
    offsets[base + span] || 0,
    offsets[base] + value
  );
}
function tableToString(tableRows, rowSpacing, colSpacing) {
  const layout = [];
  let colNumber = 0;
  const rowNumber = tableRows.length;
  const rowOffsets = [0];
  for (let j2 = 0; j2 < rowNumber; j2++) {
    const layoutRow = getRow(layout, j2);
    const cells = tableRows[j2];
    let x = 0;
    for (let i = 0; i < cells.length; i++) {
      const cell = cells[i];
      x = findFirstVacantIndex(layoutRow, x);
      putCellIntoLayout(cell, layout, j2, x);
      x += cell.colspan;
      cell.lines = cell.text.split('\n');
      const cellHeight = cell.lines.length;
      updateOffset(rowOffsets, j2, cell.rowspan, cellHeight + rowSpacing);
    }
    colNumber = layoutRow.length > colNumber ? layoutRow.length : colNumber;
  }
  transposeInPlace(layout, rowNumber > colNumber ? rowNumber : colNumber);
  const outputLines = [];
  const colOffsets = [0];
  for (let x = 0; x < colNumber; x++) {
    let y = 0;
    let cell;
    while (y < rowNumber && (cell = layout[x][y])) {
      if (!cell.rendered) {
        let cellWidth = 0;
        for (let j2 = 0; j2 < cell.lines.length; j2++) {
          const line = cell.lines[j2];
          const lineOffset = rowOffsets[y] + j2;
          outputLines[lineOffset] =
            (outputLines[lineOffset] || '').padEnd(colOffsets[x]) + line;
          cellWidth = line.length > cellWidth ? line.length : cellWidth;
        }
        updateOffset(colOffsets, x, cell.colspan, cellWidth + colSpacing);
        cell.rendered = true;
      }
      y += cell.rowspan;
    }
  }
  return outputLines.join('\n');
}
function formatLineBreak(elem, walk, builder, formatOptions) {
  builder.addLineBreak();
}
function formatWbr(elem, walk, builder, formatOptions) {
  builder.addWordBreakOpportunity();
}
function formatHorizontalLine(elem, walk, builder, formatOptions) {
  builder.openBlock({
    leadingLineBreaks: formatOptions.leadingLineBreaks || 2,
  });
  builder.addInline(
    '-'.repeat(formatOptions.length || builder.options.wordwrap || 40)
  );
  builder.closeBlock({
    trailingLineBreaks: formatOptions.trailingLineBreaks || 2,
  });
}
function formatParagraph(elem, walk, builder, formatOptions) {
  builder.openBlock({
    leadingLineBreaks: formatOptions.leadingLineBreaks || 2,
  });
  walk(elem.children, builder);
  builder.closeBlock({
    trailingLineBreaks: formatOptions.trailingLineBreaks || 2,
  });
}
function formatPre(elem, walk, builder, formatOptions) {
  builder.openBlock({
    isPre: true,
    leadingLineBreaks: formatOptions.leadingLineBreaks || 2,
  });
  walk(elem.children, builder);
  builder.closeBlock({
    trailingLineBreaks: formatOptions.trailingLineBreaks || 2,
  });
}
function formatHeading(elem, walk, builder, formatOptions) {
  builder.openBlock({
    leadingLineBreaks: formatOptions.leadingLineBreaks || 2,
  });
  if (formatOptions.uppercase !== false) {
    builder.pushWordTransform((str) => str.toUpperCase());
    walk(elem.children, builder);
    builder.popWordTransform();
  } else {
    walk(elem.children, builder);
  }
  builder.closeBlock({
    trailingLineBreaks: formatOptions.trailingLineBreaks || 2,
  });
}
function formatBlockquote(elem, walk, builder, formatOptions) {
  builder.openBlock({
    leadingLineBreaks: formatOptions.leadingLineBreaks || 2,
    reservedLineLength: 2,
  });
  walk(elem.children, builder);
  builder.closeBlock({
    trailingLineBreaks: formatOptions.trailingLineBreaks || 2,
    blockTransform: (str) =>
      (formatOptions.trimEmptyLines !== false ? trimCharacter(str, '\n') : str)
        .split('\n')
        .map((line) => '> ' + line)
        .join('\n'),
  });
}
function withBrackets(str, brackets) {
  if (!brackets) {
    return str;
  }
  const lbr = typeof brackets[0] === 'string' ? brackets[0] : '[';
  const rbr = typeof brackets[1] === 'string' ? brackets[1] : ']';
  return lbr + str + rbr;
}
function pathRewrite(path, rewriter, baseUrl, metadata, elem) {
  const modifiedPath =
    typeof rewriter === 'function' ? rewriter(path, metadata, elem) : path;
  return modifiedPath[0] === '/' && baseUrl
    ? trimCharacterEnd(baseUrl, '/') + modifiedPath
    : modifiedPath;
}
function formatImage(elem, walk, builder, formatOptions) {
  const attribs = elem.attribs || {};
  const alt = attribs.alt ? attribs.alt : '';
  const src = !attribs.src
    ? ''
    : pathRewrite(
        attribs.src,
        formatOptions.pathRewrite,
        formatOptions.baseUrl,
        builder.metadata,
        elem
      );
  const text = !src
    ? alt
    : !alt
    ? withBrackets(src, formatOptions.linkBrackets)
    : alt + ' ' + withBrackets(src, formatOptions.linkBrackets);
  builder.addInline(text, { noWordTransform: true });
}
function formatAnchor(elem, walk, builder, formatOptions) {
  function getHref() {
    if (formatOptions.ignoreHref) {
      return '';
    }
    if (!elem.attribs || !elem.attribs.href) {
      return '';
    }
    let href2 = elem.attribs.href.replace(/^mailto:/, '');
    if (formatOptions.noAnchorUrl && href2[0] === '#') {
      return '';
    }
    href2 = pathRewrite(
      href2,
      formatOptions.pathRewrite,
      formatOptions.baseUrl,
      builder.metadata,
      elem
    );
    return href2;
  }
  const href = getHref();
  if (!href) {
    walk(elem.children, builder);
  } else {
    let text = '';
    builder.pushWordTransform((str) => {
      if (str) {
        text += str;
      }
      return str;
    });
    walk(elem.children, builder);
    builder.popWordTransform();
    const hideSameLink =
      formatOptions.hideLinkHrefIfSameAsText && href === text;
    if (!hideSameLink) {
      builder.addInline(
        !text ? href : ' ' + withBrackets(href, formatOptions.linkBrackets),
        { noWordTransform: true }
      );
    }
  }
}
function formatList(elem, walk, builder, formatOptions, nextPrefixCallback) {
  const isNestedList = get(elem, ['parent', 'name']) === 'li';
  let maxPrefixLength = 0;
  const listItems = (elem.children || [])
    .filter((child) => child.type !== 'text' || !/^\s*$/.test(child.data))
    .map(function (child) {
      if (child.name !== 'li') {
        return { node: child, prefix: '' };
      }
      const prefix = isNestedList
        ? nextPrefixCallback().trimStart()
        : nextPrefixCallback();
      if (prefix.length > maxPrefixLength) {
        maxPrefixLength = prefix.length;
      }
      return { node: child, prefix };
    });
  if (!listItems.length) {
    return;
  }
  builder.openList({
    interRowLineBreaks: 1,
    leadingLineBreaks: isNestedList ? 1 : formatOptions.leadingLineBreaks || 2,
    maxPrefixLength,
    prefixAlign: 'left',
  });
  for (const { node, prefix } of listItems) {
    builder.openListItem({ prefix });
    walk([node], builder);
    builder.closeListItem();
  }
  builder.closeList({
    trailingLineBreaks: isNestedList
      ? 1
      : formatOptions.trailingLineBreaks || 2,
  });
}
function formatUnorderedList(elem, walk, builder, formatOptions) {
  const prefix = formatOptions.itemPrefix || ' * ';
  return formatList(elem, walk, builder, formatOptions, () => prefix);
}
function formatOrderedList(elem, walk, builder, formatOptions) {
  let nextIndex = Number(elem.attribs.start || '1');
  const indexFunction = getOrderedListIndexFunction(elem.attribs.type);
  const nextPrefixCallback = () => ' ' + indexFunction(nextIndex++) + '. ';
  return formatList(elem, walk, builder, formatOptions, nextPrefixCallback);
}
function getOrderedListIndexFunction(olType = '1') {
  switch (olType) {
    case 'a':
      return (i) => numberToLetterSequence(i, 'a');
    case 'A':
      return (i) => numberToLetterSequence(i, 'A');
    case 'i':
      return (i) => numberToRoman(i).toLowerCase();
    case 'I':
      return (i) => numberToRoman(i);
    case '1':
    default:
      return (i) => i.toString();
  }
}
function splitClassesAndIds(selectors) {
  const classes = [];
  const ids = [];
  for (const selector of selectors) {
    if (selector.startsWith('.')) {
      classes.push(selector.substring(1));
    } else if (selector.startsWith('#')) {
      ids.push(selector.substring(1));
    }
  }
  return { classes, ids };
}
function isDataTable(attr, tables) {
  if (tables === true) {
    return true;
  }
  if (!attr) {
    return false;
  }
  const { classes, ids } = splitClassesAndIds(tables);
  const attrClasses = (attr['class'] || '').split(' ');
  const attrIds = (attr['id'] || '').split(' ');
  return (
    attrClasses.some((x) => classes.includes(x)) ||
    attrIds.some((x) => ids.includes(x))
  );
}
function formatTable(elem, walk, builder, formatOptions) {
  return isDataTable(elem.attribs, builder.options.tables)
    ? formatDataTable(elem, walk, builder, formatOptions)
    : formatBlock(elem, walk, builder, formatOptions);
}
function formatBlock(elem, walk, builder, formatOptions) {
  builder.openBlock({ leadingLineBreaks: formatOptions.leadingLineBreaks });
  walk(elem.children, builder);
  builder.closeBlock({ trailingLineBreaks: formatOptions.trailingLineBreaks });
}
function formatDataTable(elem, walk, builder, formatOptions) {
  builder.openTable();
  elem.children.forEach(walkTable);
  builder.closeTable({
    tableToString: (rows) =>
      tableToString(
        rows,
        formatOptions.rowSpacing ?? 0,
        formatOptions.colSpacing ?? 3
      ),
    leadingLineBreaks: formatOptions.leadingLineBreaks,
    trailingLineBreaks: formatOptions.trailingLineBreaks,
  });
  function formatCell(cellNode) {
    const colspan = +get(cellNode, ['attribs', 'colspan']) || 1;
    const rowspan = +get(cellNode, ['attribs', 'rowspan']) || 1;
    builder.openTableCell({ maxColumnWidth: formatOptions.maxColumnWidth });
    walk(cellNode.children, builder);
    builder.closeTableCell({ colspan, rowspan });
  }
  function walkTable(elem2) {
    if (elem2.type !== 'tag') {
      return;
    }
    const formatHeaderCell =
      formatOptions.uppercaseHeaderCells !== false
        ? (cellNode) => {
            builder.pushWordTransform((str) => str.toUpperCase());
            formatCell(cellNode);
            builder.popWordTransform();
          }
        : formatCell;
    switch (elem2.name) {
      case 'thead':
      case 'tbody':
      case 'tfoot':
      case 'center':
        elem2.children.forEach(walkTable);
        return;
      case 'tr': {
        builder.openTableRow();
        for (const childOfTr of elem2.children) {
          if (childOfTr.type !== 'tag') {
            continue;
          }
          switch (childOfTr.name) {
            case 'th': {
              formatHeaderCell(childOfTr);
              break;
            }
            case 'td': {
              formatCell(childOfTr);
              break;
            }
          }
        }
        builder.closeTableRow();
        break;
      }
    }
  }
}
function compile(options = {}) {
  options = (0, import_deepmerge.default)(DEFAULT_OPTIONS, options, {
    arrayMerge: overwriteMerge,
    customMerge: (key) => (key === 'selectors' ? selectorsMerge : void 0),
  });
  options.formatters = Object.assign(
    {},
    genericFormatters,
    textFormatters,
    options.formatters
  );
  options.selectors = mergeDuplicatesPreferLast(
    options.selectors,
    (s2) => s2.selector
  );
  handleDeprecatedOptions(options);
  return compile$1(options);
}
function convert(html, options = {}, metadata = void 0) {
  return compile(options)(html, metadata);
}
function handleDeprecatedOptions(options) {
  if (options.tags) {
    const tagDefinitions = Object.entries(options.tags).map(
      ([selector, definition]) => ({ ...definition, selector: selector || '*' })
    );
    options.selectors.push(...tagDefinitions);
    options.selectors = mergeDuplicatesPreferLast(
      options.selectors,
      (s2) => s2.selector
    );
  }
  function set(obj, path, value) {
    const valueKey = path.pop();
    for (const key of path) {
      let nested = obj[key];
      if (!nested) {
        nested = {};
        obj[key] = nested;
      }
      obj = nested;
    }
    obj[valueKey] = value;
  }
  if (options['baseElement']) {
    const baseElement = options['baseElement'];
    set(
      options,
      ['baseElements', 'selectors'],
      Array.isArray(baseElement) ? baseElement : [baseElement]
    );
  }
  if (options['returnDomByDefault'] !== void 0) {
    set(
      options,
      ['baseElements', 'returnDomByDefault'],
      options['returnDomByDefault']
    );
  }
  for (const definition of options.selectors) {
    if (
      definition.format === 'anchor' &&
      get(definition, ['options', 'noLinkBrackets'])
    ) {
      set(definition, ['options', 'linkBrackets'], false);
    }
  }
}
var import_deepmerge,
  overwriteMerge$1,
  I,
  V,
  InlineTextBuilder,
  StackItem,
  BlockStackItem,
  ListStackItem,
  ListItemStackItem,
  TableStackItem,
  TableRowStackItem,
  TableCellStackItem,
  TransformerStackItem,
  WhitespaceProcessor,
  BlockTextBuilder,
  genericFormatters,
  textFormatters,
  DEFAULT_OPTIONS,
  concatMerge,
  overwriteMerge,
  selectorsMerge;
var init_html_to_text = __esm({
  '../../node_modules/html-to-text/lib/html-to-text.mjs'() {
    'use strict';
    init_hp2_builder();
    init_esm7();
    init_selderee();
    import_deepmerge = __toESM(require_cjs(), 1);
    init_esm5();
    overwriteMerge$1 = (acc, src, options) => [...src];
    I = ['I', 'X', 'C', 'M'];
    V = ['V', 'L', 'D'];
    InlineTextBuilder = class {
      /**
       * Creates an instance of InlineTextBuilder.
       *
       * If `maxLineLength` is not provided then it is either `options.wordwrap` or unlimited.
       *
       * @param { Options } options           HtmlToText options.
       * @param { number }  [ maxLineLength ] This builder will try to wrap text to fit this line length.
       */
      constructor(options, maxLineLength = void 0) {
        this.lines = [];
        this.nextLineWords = [];
        this.maxLineLength =
          maxLineLength || options.wordwrap || Number.MAX_VALUE;
        this.nextLineAvailableChars = this.maxLineLength;
        this.wrapCharacters =
          get(options, ['longWordSplit', 'wrapCharacters']) || [];
        this.forceWrapOnLimit =
          get(options, ['longWordSplit', 'forceWrapOnLimit']) || false;
        this.stashedSpace = false;
        this.wordBreakOpportunity = false;
      }
      /**
       * Add a new word.
       *
       * @param { string } word A word to add.
       * @param { boolean } [noWrap] Don't wrap text even if the line is too long.
       */
      pushWord(word, noWrap = false) {
        if (this.nextLineAvailableChars <= 0 && !noWrap) {
          this.startNewLine();
        }
        const isLineStart = this.nextLineWords.length === 0;
        const cost = word.length + (isLineStart ? 0 : 1);
        if (cost <= this.nextLineAvailableChars || noWrap) {
          this.nextLineWords.push(word);
          this.nextLineAvailableChars -= cost;
        } else {
          const [first, ...rest] = this.splitLongWord(word);
          if (!isLineStart) {
            this.startNewLine();
          }
          this.nextLineWords.push(first);
          this.nextLineAvailableChars -= first.length;
          for (const part of rest) {
            this.startNewLine();
            this.nextLineWords.push(part);
            this.nextLineAvailableChars -= part.length;
          }
        }
      }
      /**
       * Pop a word from the currently built line.
       * This doesn't affect completed lines.
       *
       * @returns { string }
       */
      popWord() {
        const lastWord = this.nextLineWords.pop();
        if (lastWord !== void 0) {
          const isLineStart = this.nextLineWords.length === 0;
          const cost = lastWord.length + (isLineStart ? 0 : 1);
          this.nextLineAvailableChars += cost;
        }
        return lastWord;
      }
      /**
       * Concat a word to the last word already in the builder.
       * Adds a new word in case there are no words yet in the last line.
       *
       * @param { string } word A word to be concatenated.
       * @param { boolean } [noWrap] Don't wrap text even if the line is too long.
       */
      concatWord(word, noWrap = false) {
        if (
          this.wordBreakOpportunity &&
          word.length > this.nextLineAvailableChars
        ) {
          this.pushWord(word, noWrap);
          this.wordBreakOpportunity = false;
        } else {
          const lastWord = this.popWord();
          this.pushWord(lastWord ? lastWord.concat(word) : word, noWrap);
        }
      }
      /**
       * Add current line (and more empty lines if provided argument > 1) to the list of complete lines and start a new one.
       *
       * @param { number } n Number of line breaks that will be added to the resulting string.
       */
      startNewLine(n2 = 1) {
        this.lines.push(this.nextLineWords);
        if (n2 > 1) {
          this.lines.push(...Array.from({ length: n2 - 1 }, () => []));
        }
        this.nextLineWords = [];
        this.nextLineAvailableChars = this.maxLineLength;
      }
      /**
       * No words in this builder.
       *
       * @returns { boolean }
       */
      isEmpty() {
        return this.lines.length === 0 && this.nextLineWords.length === 0;
      }
      clear() {
        this.lines.length = 0;
        this.nextLineWords.length = 0;
        this.nextLineAvailableChars = this.maxLineLength;
      }
      /**
       * Join all lines of words inside the InlineTextBuilder into a complete string.
       *
       * @returns { string }
       */
      toString() {
        return [...this.lines, this.nextLineWords]
          .map((words) => words.join(' '))
          .join('\n');
      }
      /**
       * Split a long word up to fit within the word wrap limit.
       * Use either a character to split looking back from the word wrap limit,
       * or truncate to the word wrap limit.
       *
       * @param   { string }   word Input word.
       * @returns { string[] }      Parts of the word.
       */
      splitLongWord(word) {
        const parts = [];
        let idx = 0;
        while (word.length > this.maxLineLength) {
          const firstLine = word.substring(0, this.maxLineLength);
          const remainingChars = word.substring(this.maxLineLength);
          const splitIndex = firstLine.lastIndexOf(this.wrapCharacters[idx]);
          if (splitIndex > -1) {
            word = firstLine.substring(splitIndex + 1) + remainingChars;
            parts.push(firstLine.substring(0, splitIndex + 1));
          } else {
            idx++;
            if (idx < this.wrapCharacters.length) {
              word = firstLine + remainingChars;
            } else {
              if (this.forceWrapOnLimit) {
                parts.push(firstLine);
                word = remainingChars;
                if (word.length > this.maxLineLength) {
                  continue;
                }
              } else {
                word = firstLine + remainingChars;
              }
              break;
            }
          }
        }
        parts.push(word);
        return parts;
      }
    };
    StackItem = class {
      constructor(next = null) {
        this.next = next;
      }
      getRoot() {
        return this.next ? this.next : this;
      }
    };
    BlockStackItem = class extends StackItem {
      constructor(
        options,
        next = null,
        leadingLineBreaks = 1,
        maxLineLength = void 0
      ) {
        super(next);
        this.leadingLineBreaks = leadingLineBreaks;
        this.inlineTextBuilder = new InlineTextBuilder(options, maxLineLength);
        this.rawText = '';
        this.stashedLineBreaks = 0;
        this.isPre = next && next.isPre;
        this.isNoWrap = next && next.isNoWrap;
      }
    };
    ListStackItem = class extends BlockStackItem {
      constructor(
        options,
        next = null,
        {
          interRowLineBreaks = 1,
          leadingLineBreaks = 2,
          maxLineLength = void 0,
          maxPrefixLength = 0,
          prefixAlign = 'left',
        } = {}
      ) {
        super(options, next, leadingLineBreaks, maxLineLength);
        this.maxPrefixLength = maxPrefixLength;
        this.prefixAlign = prefixAlign;
        this.interRowLineBreaks = interRowLineBreaks;
      }
    };
    ListItemStackItem = class extends BlockStackItem {
      constructor(
        options,
        next = null,
        { leadingLineBreaks = 1, maxLineLength = void 0, prefix = '' } = {}
      ) {
        super(options, next, leadingLineBreaks, maxLineLength);
        this.prefix = prefix;
      }
    };
    TableStackItem = class extends StackItem {
      constructor(next = null) {
        super(next);
        this.rows = [];
        this.isPre = next && next.isPre;
        this.isNoWrap = next && next.isNoWrap;
      }
    };
    TableRowStackItem = class extends StackItem {
      constructor(next = null) {
        super(next);
        this.cells = [];
        this.isPre = next && next.isPre;
        this.isNoWrap = next && next.isNoWrap;
      }
    };
    TableCellStackItem = class extends StackItem {
      constructor(options, next = null, maxColumnWidth = void 0) {
        super(next);
        this.inlineTextBuilder = new InlineTextBuilder(options, maxColumnWidth);
        this.rawText = '';
        this.stashedLineBreaks = 0;
        this.isPre = next && next.isPre;
        this.isNoWrap = next && next.isNoWrap;
      }
    };
    TransformerStackItem = class extends StackItem {
      constructor(next = null, transform) {
        super(next);
        this.transform = transform;
      }
    };
    WhitespaceProcessor = class {
      /**
       * Creates an instance of WhitespaceProcessor.
       *
       * @param { Options } options    HtmlToText options.
       * @memberof WhitespaceProcessor
       */
      constructor(options) {
        this.whitespaceChars = options.preserveNewlines
          ? options.whitespaceCharacters.replace(/\n/g, '')
          : options.whitespaceCharacters;
        const whitespaceCodes = charactersToCodes(this.whitespaceChars);
        this.leadingWhitespaceRe = new RegExp(`^[${whitespaceCodes}]`);
        this.trailingWhitespaceRe = new RegExp(`[${whitespaceCodes}]$`);
        this.allWhitespaceOrEmptyRe = new RegExp(`^[${whitespaceCodes}]*$`);
        this.newlineOrNonWhitespaceRe = new RegExp(
          `(\\n|[^\\n${whitespaceCodes}])`,
          'g'
        );
        this.newlineOrNonNewlineStringRe = new RegExp(`(\\n|[^\\n]+)`, 'g');
        if (options.preserveNewlines) {
          const wordOrNewlineRe = new RegExp(
            `\\n|[^\\n${whitespaceCodes}]+`,
            'gm'
          );
          this.shrinkWrapAdd = function (
            text,
            inlineTextBuilder,
            transform = (str) => str,
            noWrap = false
          ) {
            if (!text) {
              return;
            }
            const previouslyStashedSpace = inlineTextBuilder.stashedSpace;
            let anyMatch = false;
            let m2 = wordOrNewlineRe.exec(text);
            if (m2) {
              anyMatch = true;
              if (m2[0] === '\n') {
                inlineTextBuilder.startNewLine();
              } else if (
                previouslyStashedSpace ||
                this.testLeadingWhitespace(text)
              ) {
                inlineTextBuilder.pushWord(transform(m2[0]), noWrap);
              } else {
                inlineTextBuilder.concatWord(transform(m2[0]), noWrap);
              }
              while ((m2 = wordOrNewlineRe.exec(text)) !== null) {
                if (m2[0] === '\n') {
                  inlineTextBuilder.startNewLine();
                } else {
                  inlineTextBuilder.pushWord(transform(m2[0]), noWrap);
                }
              }
            }
            inlineTextBuilder.stashedSpace =
              (previouslyStashedSpace && !anyMatch) ||
              this.testTrailingWhitespace(text);
          };
        } else {
          const wordRe = new RegExp(`[^${whitespaceCodes}]+`, 'g');
          this.shrinkWrapAdd = function (
            text,
            inlineTextBuilder,
            transform = (str) => str,
            noWrap = false
          ) {
            if (!text) {
              return;
            }
            const previouslyStashedSpace = inlineTextBuilder.stashedSpace;
            let anyMatch = false;
            let m2 = wordRe.exec(text);
            if (m2) {
              anyMatch = true;
              if (previouslyStashedSpace || this.testLeadingWhitespace(text)) {
                inlineTextBuilder.pushWord(transform(m2[0]), noWrap);
              } else {
                inlineTextBuilder.concatWord(transform(m2[0]), noWrap);
              }
              while ((m2 = wordRe.exec(text)) !== null) {
                inlineTextBuilder.pushWord(transform(m2[0]), noWrap);
              }
            }
            inlineTextBuilder.stashedSpace =
              (previouslyStashedSpace && !anyMatch) ||
              this.testTrailingWhitespace(text);
          };
        }
      }
      /**
       * Add text with only minimal processing.
       * Everything between newlines considered a single word.
       * No whitespace is trimmed.
       * Not affected by preserveNewlines option - `\n` always starts a new line.
       *
       * `noWrap` argument is `true` by default - this won't start a new line
       * even if there is not enough space left in the current line.
       *
       * @param { string }            text              Input text.
       * @param { InlineTextBuilder } inlineTextBuilder A builder to receive processed text.
       * @param { boolean }           [noWrap] Don't wrap text even if the line is too long.
       */
      addLiteral(text, inlineTextBuilder, noWrap = true) {
        if (!text) {
          return;
        }
        const previouslyStashedSpace = inlineTextBuilder.stashedSpace;
        let anyMatch = false;
        let m2 = this.newlineOrNonNewlineStringRe.exec(text);
        if (m2) {
          anyMatch = true;
          if (m2[0] === '\n') {
            inlineTextBuilder.startNewLine();
          } else if (previouslyStashedSpace) {
            inlineTextBuilder.pushWord(m2[0], noWrap);
          } else {
            inlineTextBuilder.concatWord(m2[0], noWrap);
          }
          while ((m2 = this.newlineOrNonNewlineStringRe.exec(text)) !== null) {
            if (m2[0] === '\n') {
              inlineTextBuilder.startNewLine();
            } else {
              inlineTextBuilder.pushWord(m2[0], noWrap);
            }
          }
        }
        inlineTextBuilder.stashedSpace = previouslyStashedSpace && !anyMatch;
      }
      /**
       * Test whether the given text starts with HTML whitespace character.
       *
       * @param   { string }  text  The string to test.
       * @returns { boolean }
       */
      testLeadingWhitespace(text) {
        return this.leadingWhitespaceRe.test(text);
      }
      /**
       * Test whether the given text ends with HTML whitespace character.
       *
       * @param   { string }  text  The string to test.
       * @returns { boolean }
       */
      testTrailingWhitespace(text) {
        return this.trailingWhitespaceRe.test(text);
      }
      /**
       * Test whether the given text contains any non-whitespace characters.
       *
       * @param   { string }  text  The string to test.
       * @returns { boolean }
       */
      testContainsWords(text) {
        return !this.allWhitespaceOrEmptyRe.test(text);
      }
      /**
       * Return the number of newlines if there are no words.
       *
       * If any word is found then return zero regardless of the actual number of newlines.
       *
       * @param   { string }  text  Input string.
       * @returns { number }
       */
      countNewlinesNoWords(text) {
        this.newlineOrNonWhitespaceRe.lastIndex = 0;
        let counter = 0;
        let match;
        while ((match = this.newlineOrNonWhitespaceRe.exec(text)) !== null) {
          if (match[0] === '\n') {
            counter++;
          } else {
            return 0;
          }
        }
        return counter;
      }
    };
    BlockTextBuilder = class {
      /**
       * Creates an instance of BlockTextBuilder.
       *
       * @param { Options } options HtmlToText options.
       * @param { import('selderee').Picker<DomNode, TagDefinition> } picker Selectors decision tree picker.
       * @param { any} [metadata] Optional metadata for HTML document, for use in formatters.
       */
      constructor(options, picker, metadata = void 0) {
        this.options = options;
        this.picker = picker;
        this.metadata = metadata;
        this.whitespaceProcessor = new WhitespaceProcessor(options);
        this._stackItem = new BlockStackItem(options);
        this._wordTransformer = void 0;
      }
      /**
       * Put a word-by-word transform function onto the transformations stack.
       *
       * Mainly used for uppercasing. Can be bypassed to add unformatted text such as URLs.
       *
       * Word transformations applied before wrapping.
       *
       * @param { (str: string) => string } wordTransform Word transformation function.
       */
      pushWordTransform(wordTransform) {
        this._wordTransformer = new TransformerStackItem(
          this._wordTransformer,
          wordTransform
        );
      }
      /**
       * Remove a function from the word transformations stack.
       *
       * @returns { (str: string) => string } A function that was removed.
       */
      popWordTransform() {
        if (!this._wordTransformer) {
          return void 0;
        }
        const transform = this._wordTransformer.transform;
        this._wordTransformer = this._wordTransformer.next;
        return transform;
      }
      /**
       * Ignore wordwrap option in followup inline additions and disable automatic wrapping.
       */
      startNoWrap() {
        this._stackItem.isNoWrap = true;
      }
      /**
       * Return automatic wrapping to behavior defined by options.
       */
      stopNoWrap() {
        this._stackItem.isNoWrap = false;
      }
      /** @returns { (str: string) => string } */
      _getCombinedWordTransformer() {
        const wt2 = this._wordTransformer
          ? (str) => applyTransformer(str, this._wordTransformer)
          : void 0;
        const ce = this.options.encodeCharacters;
        return wt2 ? (ce ? (str) => ce(wt2(str)) : wt2) : ce;
      }
      _popStackItem() {
        const item = this._stackItem;
        this._stackItem = item.next;
        return item;
      }
      /**
       * Add a line break into currently built block.
       */
      addLineBreak() {
        if (
          !(
            this._stackItem instanceof BlockStackItem ||
            this._stackItem instanceof ListItemStackItem ||
            this._stackItem instanceof TableCellStackItem
          )
        ) {
          return;
        }
        if (this._stackItem.isPre) {
          this._stackItem.rawText += '\n';
        } else {
          this._stackItem.inlineTextBuilder.startNewLine();
        }
      }
      /**
       * Allow to break line in case directly following text will not fit.
       */
      addWordBreakOpportunity() {
        if (
          this._stackItem instanceof BlockStackItem ||
          this._stackItem instanceof ListItemStackItem ||
          this._stackItem instanceof TableCellStackItem
        ) {
          this._stackItem.inlineTextBuilder.wordBreakOpportunity = true;
        }
      }
      /**
       * Add a node inline into the currently built block.
       *
       * @param { string } str
       * Text content of a node to add.
       *
       * @param { object } [param1]
       * Object holding the parameters of the operation.
       *
       * @param { boolean } [param1.noWordTransform]
       * Ignore word transformers if there are any.
       * Don't encode characters as well.
       * (Use this for things like URL addresses).
       */
      addInline(str, { noWordTransform = false } = {}) {
        if (
          !(
            this._stackItem instanceof BlockStackItem ||
            this._stackItem instanceof ListItemStackItem ||
            this._stackItem instanceof TableCellStackItem
          )
        ) {
          return;
        }
        if (this._stackItem.isPre) {
          this._stackItem.rawText += str;
          return;
        }
        if (
          str.length === 0 || // empty string
          (this._stackItem.stashedLineBreaks && // stashed linebreaks make whitespace irrelevant
            !this.whitespaceProcessor.testContainsWords(str))
        ) {
          return;
        }
        if (this.options.preserveNewlines) {
          const newlinesNumber =
            this.whitespaceProcessor.countNewlinesNoWords(str);
          if (newlinesNumber > 0) {
            this._stackItem.inlineTextBuilder.startNewLine(newlinesNumber);
            return;
          }
        }
        if (this._stackItem.stashedLineBreaks) {
          this._stackItem.inlineTextBuilder.startNewLine(
            this._stackItem.stashedLineBreaks
          );
        }
        this.whitespaceProcessor.shrinkWrapAdd(
          str,
          this._stackItem.inlineTextBuilder,
          noWordTransform ? void 0 : this._getCombinedWordTransformer(),
          this._stackItem.isNoWrap
        );
        this._stackItem.stashedLineBreaks = 0;
      }
      /**
       * Add a string inline into the currently built block.
       *
       * Use this for markup elements that don't have to adhere
       * to text layout rules.
       *
       * @param { string } str Text to add.
       */
      addLiteral(str) {
        if (
          !(
            this._stackItem instanceof BlockStackItem ||
            this._stackItem instanceof ListItemStackItem ||
            this._stackItem instanceof TableCellStackItem
          )
        ) {
          return;
        }
        if (str.length === 0) {
          return;
        }
        if (this._stackItem.isPre) {
          this._stackItem.rawText += str;
          return;
        }
        if (this._stackItem.stashedLineBreaks) {
          this._stackItem.inlineTextBuilder.startNewLine(
            this._stackItem.stashedLineBreaks
          );
        }
        this.whitespaceProcessor.addLiteral(
          str,
          this._stackItem.inlineTextBuilder,
          this._stackItem.isNoWrap
        );
        this._stackItem.stashedLineBreaks = 0;
      }
      /**
       * Start building a new block.
       *
       * @param { object } [param0]
       * Object holding the parameters of the block.
       *
       * @param { number } [param0.leadingLineBreaks]
       * This block should have at least this number of line breaks to separate it from any preceding block.
       *
       * @param { number }  [param0.reservedLineLength]
       * Reserve this number of characters on each line for block markup.
       *
       * @param { boolean } [param0.isPre]
       * Should HTML whitespace be preserved inside this block.
       */
      openBlock({
        leadingLineBreaks = 1,
        reservedLineLength = 0,
        isPre = false,
      } = {}) {
        const maxLineLength = Math.max(
          20,
          this._stackItem.inlineTextBuilder.maxLineLength - reservedLineLength
        );
        this._stackItem = new BlockStackItem(
          this.options,
          this._stackItem,
          leadingLineBreaks,
          maxLineLength
        );
        if (isPre) {
          this._stackItem.isPre = true;
        }
      }
      /**
       * Finalize currently built block, add it's content to the parent block.
       *
       * @param { object } [param0]
       * Object holding the parameters of the block.
       *
       * @param { number } [param0.trailingLineBreaks]
       * This block should have at least this number of line breaks to separate it from any following block.
       *
       * @param { (str: string) => string } [param0.blockTransform]
       * A function to transform the block text before adding to the parent block.
       * This happens after word wrap and should be used in combination with reserved line length
       * in order to keep line lengths correct.
       * Used for whole block markup.
       */
      closeBlock({ trailingLineBreaks = 1, blockTransform = void 0 } = {}) {
        const block = this._popStackItem();
        const blockText = blockTransform
          ? blockTransform(getText(block))
          : getText(block);
        addText(
          this._stackItem,
          blockText,
          block.leadingLineBreaks,
          Math.max(block.stashedLineBreaks, trailingLineBreaks)
        );
      }
      /**
       * Start building a new list.
       *
       * @param { object } [param0]
       * Object holding the parameters of the list.
       *
       * @param { number } [param0.maxPrefixLength]
       * Length of the longest list item prefix.
       * If not supplied or too small then list items won't be aligned properly.
       *
       * @param { 'left' | 'right' } [param0.prefixAlign]
       * Specify how prefixes of different lengths have to be aligned
       * within a column.
       *
       * @param { number } [param0.interRowLineBreaks]
       * Minimum number of line breaks between list items.
       *
       * @param { number } [param0.leadingLineBreaks]
       * This list should have at least this number of line breaks to separate it from any preceding block.
       */
      openList({
        maxPrefixLength = 0,
        prefixAlign = 'left',
        interRowLineBreaks = 1,
        leadingLineBreaks = 2,
      } = {}) {
        this._stackItem = new ListStackItem(this.options, this._stackItem, {
          interRowLineBreaks,
          leadingLineBreaks,
          maxLineLength: this._stackItem.inlineTextBuilder.maxLineLength,
          maxPrefixLength,
          prefixAlign,
        });
      }
      /**
       * Start building a new list item.
       *
       * @param {object} param0
       * Object holding the parameters of the list item.
       *
       * @param { string } [param0.prefix]
       * Prefix for this list item (item number, bullet point, etc).
       */
      openListItem({ prefix = '' } = {}) {
        if (!(this._stackItem instanceof ListStackItem)) {
          throw new Error(
            "Can't add a list item to something that is not a list! Check the formatter."
          );
        }
        const list = this._stackItem;
        const prefixLength = Math.max(prefix.length, list.maxPrefixLength);
        const maxLineLength = Math.max(
          20,
          list.inlineTextBuilder.maxLineLength - prefixLength
        );
        this._stackItem = new ListItemStackItem(this.options, list, {
          prefix,
          maxLineLength,
          leadingLineBreaks: list.interRowLineBreaks,
        });
      }
      /**
       * Finalize currently built list item, add it's content to the parent list.
       */
      closeListItem() {
        const listItem = this._popStackItem();
        const list = listItem.next;
        const prefixLength = Math.max(
          listItem.prefix.length,
          list.maxPrefixLength
        );
        const spacing = '\n' + ' '.repeat(prefixLength);
        const prefix =
          list.prefixAlign === 'right'
            ? listItem.prefix.padStart(prefixLength)
            : listItem.prefix.padEnd(prefixLength);
        const text = prefix + getText(listItem).replace(/\n/g, spacing);
        addText(
          list,
          text,
          listItem.leadingLineBreaks,
          Math.max(listItem.stashedLineBreaks, list.interRowLineBreaks)
        );
      }
      /**
       * Finalize currently built list, add it's content to the parent block.
       *
       * @param { object } param0
       * Object holding the parameters of the list.
       *
       * @param { number } [param0.trailingLineBreaks]
       * This list should have at least this number of line breaks to separate it from any following block.
       */
      closeList({ trailingLineBreaks = 2 } = {}) {
        const list = this._popStackItem();
        const text = getText(list);
        if (text) {
          addText(
            this._stackItem,
            text,
            list.leadingLineBreaks,
            trailingLineBreaks
          );
        }
      }
      /**
       * Start building a table.
       */
      openTable() {
        this._stackItem = new TableStackItem(this._stackItem);
      }
      /**
       * Start building a table row.
       */
      openTableRow() {
        if (!(this._stackItem instanceof TableStackItem)) {
          throw new Error(
            "Can't add a table row to something that is not a table! Check the formatter."
          );
        }
        this._stackItem = new TableRowStackItem(this._stackItem);
      }
      /**
       * Start building a table cell.
       *
       * @param { object } [param0]
       * Object holding the parameters of the cell.
       *
       * @param { number } [param0.maxColumnWidth]
       * Wrap cell content to this width. Fall back to global wordwrap value if undefined.
       */
      openTableCell({ maxColumnWidth = void 0 } = {}) {
        if (!(this._stackItem instanceof TableRowStackItem)) {
          throw new Error(
            "Can't add a table cell to something that is not a table row! Check the formatter."
          );
        }
        this._stackItem = new TableCellStackItem(
          this.options,
          this._stackItem,
          maxColumnWidth
        );
      }
      /**
       * Finalize currently built table cell and add it to parent table row's cells.
       *
       * @param { object } [param0]
       * Object holding the parameters of the cell.
       *
       * @param { number } [param0.colspan] How many columns this cell should occupy.
       * @param { number } [param0.rowspan] How many rows this cell should occupy.
       */
      closeTableCell({ colspan = 1, rowspan = 1 } = {}) {
        const cell = this._popStackItem();
        const text = trimCharacter(getText(cell), '\n');
        cell.next.cells.push({ colspan, rowspan, text });
      }
      /**
       * Finalize currently built table row and add it to parent table's rows.
       */
      closeTableRow() {
        const row = this._popStackItem();
        row.next.rows.push(row.cells);
      }
      /**
       * Finalize currently built table and add the rendered text to the parent block.
       *
       * @param { object } param0
       * Object holding the parameters of the table.
       *
       * @param { TablePrinter } param0.tableToString
       * A function to convert a table of stringified cells into a complete table.
       *
       * @param { number } [param0.leadingLineBreaks]
       * This table should have at least this number of line breaks to separate if from any preceding block.
       *
       * @param { number } [param0.trailingLineBreaks]
       * This table should have at least this number of line breaks to separate it from any following block.
       */
      closeTable({
        tableToString: tableToString2,
        leadingLineBreaks = 2,
        trailingLineBreaks = 2,
      }) {
        const table = this._popStackItem();
        const output = tableToString2(table.rows);
        if (output) {
          addText(
            this._stackItem,
            output,
            leadingLineBreaks,
            trailingLineBreaks
          );
        }
      }
      /**
       * Return the rendered text content of this builder.
       *
       * @returns { string }
       */
      toString() {
        return getText(this._stackItem.getRoot());
      }
    };
    genericFormatters = /* @__PURE__ */ Object.freeze({
      __proto__: null,
      block: formatBlock$1,
      blockHtml: formatBlockHtml,
      blockString: formatBlockString,
      blockTag: formatBlockTag,
      inline: formatInline,
      inlineHtml: formatInlineHtml,
      inlineString: formatInlineString,
      inlineSurround: formatInlineSurround,
      inlineTag: formatInlineTag,
      skip: formatSkip,
    });
    textFormatters = /* @__PURE__ */ Object.freeze({
      __proto__: null,
      anchor: formatAnchor,
      blockquote: formatBlockquote,
      dataTable: formatDataTable,
      heading: formatHeading,
      horizontalLine: formatHorizontalLine,
      image: formatImage,
      lineBreak: formatLineBreak,
      orderedList: formatOrderedList,
      paragraph: formatParagraph,
      pre: formatPre,
      table: formatTable,
      unorderedList: formatUnorderedList,
      wbr: formatWbr,
    });
    DEFAULT_OPTIONS = {
      baseElements: {
        selectors: ['body'],
        orderBy: 'selectors',
        // 'selectors' | 'occurrence'
        returnDomByDefault: true,
      },
      decodeEntities: true,
      encodeCharacters: {},
      formatters: {},
      limits: {
        ellipsis: '...',
        maxBaseElements: void 0,
        maxChildNodes: void 0,
        maxDepth: void 0,
        maxInputLength: 1 << 24,
        // 16_777_216
      },
      longWordSplit: {
        forceWrapOnLimit: false,
        wrapCharacters: [],
      },
      preserveNewlines: false,
      selectors: [
        { selector: '*', format: 'inline' },
        {
          selector: 'a',
          format: 'anchor',
          options: {
            baseUrl: null,
            hideLinkHrefIfSameAsText: false,
            ignoreHref: false,
            linkBrackets: ['[', ']'],
            noAnchorUrl: true,
          },
        },
        {
          selector: 'article',
          format: 'block',
          options: { leadingLineBreaks: 1, trailingLineBreaks: 1 },
        },
        {
          selector: 'aside',
          format: 'block',
          options: { leadingLineBreaks: 1, trailingLineBreaks: 1 },
        },
        {
          selector: 'blockquote',
          format: 'blockquote',
          options: {
            leadingLineBreaks: 2,
            trailingLineBreaks: 2,
            trimEmptyLines: true,
          },
        },
        { selector: 'br', format: 'lineBreak' },
        {
          selector: 'div',
          format: 'block',
          options: { leadingLineBreaks: 1, trailingLineBreaks: 1 },
        },
        {
          selector: 'footer',
          format: 'block',
          options: { leadingLineBreaks: 1, trailingLineBreaks: 1 },
        },
        {
          selector: 'form',
          format: 'block',
          options: { leadingLineBreaks: 1, trailingLineBreaks: 1 },
        },
        {
          selector: 'h1',
          format: 'heading',
          options: {
            leadingLineBreaks: 3,
            trailingLineBreaks: 2,
            uppercase: true,
          },
        },
        {
          selector: 'h2',
          format: 'heading',
          options: {
            leadingLineBreaks: 3,
            trailingLineBreaks: 2,
            uppercase: true,
          },
        },
        {
          selector: 'h3',
          format: 'heading',
          options: {
            leadingLineBreaks: 3,
            trailingLineBreaks: 2,
            uppercase: true,
          },
        },
        {
          selector: 'h4',
          format: 'heading',
          options: {
            leadingLineBreaks: 2,
            trailingLineBreaks: 2,
            uppercase: true,
          },
        },
        {
          selector: 'h5',
          format: 'heading',
          options: {
            leadingLineBreaks: 2,
            trailingLineBreaks: 2,
            uppercase: true,
          },
        },
        {
          selector: 'h6',
          format: 'heading',
          options: {
            leadingLineBreaks: 2,
            trailingLineBreaks: 2,
            uppercase: true,
          },
        },
        {
          selector: 'header',
          format: 'block',
          options: { leadingLineBreaks: 1, trailingLineBreaks: 1 },
        },
        {
          selector: 'hr',
          format: 'horizontalLine',
          options: {
            leadingLineBreaks: 2,
            length: void 0,
            trailingLineBreaks: 2,
          },
        },
        {
          selector: 'img',
          format: 'image',
          options: { baseUrl: null, linkBrackets: ['[', ']'] },
        },
        {
          selector: 'main',
          format: 'block',
          options: { leadingLineBreaks: 1, trailingLineBreaks: 1 },
        },
        {
          selector: 'nav',
          format: 'block',
          options: { leadingLineBreaks: 1, trailingLineBreaks: 1 },
        },
        {
          selector: 'ol',
          format: 'orderedList',
          options: { leadingLineBreaks: 2, trailingLineBreaks: 2 },
        },
        {
          selector: 'p',
          format: 'paragraph',
          options: { leadingLineBreaks: 2, trailingLineBreaks: 2 },
        },
        {
          selector: 'pre',
          format: 'pre',
          options: { leadingLineBreaks: 2, trailingLineBreaks: 2 },
        },
        {
          selector: 'section',
          format: 'block',
          options: { leadingLineBreaks: 1, trailingLineBreaks: 1 },
        },
        {
          selector: 'table',
          format: 'table',
          options: {
            colSpacing: 3,
            leadingLineBreaks: 2,
            maxColumnWidth: 60,
            rowSpacing: 0,
            trailingLineBreaks: 2,
            uppercaseHeaderCells: true,
          },
        },
        {
          selector: 'ul',
          format: 'unorderedList',
          options: {
            itemPrefix: ' * ',
            leadingLineBreaks: 2,
            trailingLineBreaks: 2,
          },
        },
        { selector: 'wbr', format: 'wbr' },
      ],
      tables: [],
      // deprecated
      whitespaceCharacters: ' 	\r\n\f\u200B',
      wordwrap: 80,
    };
    concatMerge = (acc, src, options) => [...acc, ...src];
    overwriteMerge = (acc, src, options) => [...src];
    selectorsMerge = (acc, src, options) =>
      acc.some((s2) => typeof s2 === 'object')
        ? concatMerge(acc, src)
        : overwriteMerge(acc, src);
  },
});

// ../../node_modules/js-beautify/js/src/core/output.js
var require_output = __commonJS({
  '../../node_modules/js-beautify/js/src/core/output.js'(exports2, module2) {
    'use strict';
    function OutputLine(parent) {
      this.__parent = parent;
      this.__character_count = 0;
      this.__indent_count = -1;
      this.__alignment_count = 0;
      this.__wrap_point_index = 0;
      this.__wrap_point_character_count = 0;
      this.__wrap_point_indent_count = -1;
      this.__wrap_point_alignment_count = 0;
      this.__items = [];
    }
    OutputLine.prototype.clone_empty = function () {
      var line = new OutputLine(this.__parent);
      line.set_indent(this.__indent_count, this.__alignment_count);
      return line;
    };
    OutputLine.prototype.item = function (index) {
      if (index < 0) {
        return this.__items[this.__items.length + index];
      } else {
        return this.__items[index];
      }
    };
    OutputLine.prototype.has_match = function (pattern) {
      for (
        var lastCheckedOutput = this.__items.length - 1;
        lastCheckedOutput >= 0;
        lastCheckedOutput--
      ) {
        if (this.__items[lastCheckedOutput].match(pattern)) {
          return true;
        }
      }
      return false;
    };
    OutputLine.prototype.set_indent = function (indent, alignment) {
      if (this.is_empty()) {
        this.__indent_count = indent || 0;
        this.__alignment_count = alignment || 0;
        this.__character_count = this.__parent.get_indent_size(
          this.__indent_count,
          this.__alignment_count
        );
      }
    };
    OutputLine.prototype._set_wrap_point = function () {
      if (this.__parent.wrap_line_length) {
        this.__wrap_point_index = this.__items.length;
        this.__wrap_point_character_count = this.__character_count;
        this.__wrap_point_indent_count = this.__parent.next_line.__indent_count;
        this.__wrap_point_alignment_count =
          this.__parent.next_line.__alignment_count;
      }
    };
    OutputLine.prototype._should_wrap = function () {
      return (
        this.__wrap_point_index &&
        this.__character_count > this.__parent.wrap_line_length &&
        this.__wrap_point_character_count >
          this.__parent.next_line.__character_count
      );
    };
    OutputLine.prototype._allow_wrap = function () {
      if (this._should_wrap()) {
        this.__parent.add_new_line();
        var next = this.__parent.current_line;
        next.set_indent(
          this.__wrap_point_indent_count,
          this.__wrap_point_alignment_count
        );
        next.__items = this.__items.slice(this.__wrap_point_index);
        this.__items = this.__items.slice(0, this.__wrap_point_index);
        next.__character_count +=
          this.__character_count - this.__wrap_point_character_count;
        this.__character_count = this.__wrap_point_character_count;
        if (next.__items[0] === ' ') {
          next.__items.splice(0, 1);
          next.__character_count -= 1;
        }
        return true;
      }
      return false;
    };
    OutputLine.prototype.is_empty = function () {
      return this.__items.length === 0;
    };
    OutputLine.prototype.last = function () {
      if (!this.is_empty()) {
        return this.__items[this.__items.length - 1];
      } else {
        return null;
      }
    };
    OutputLine.prototype.push = function (item) {
      this.__items.push(item);
      var last_newline_index = item.lastIndexOf('\n');
      if (last_newline_index !== -1) {
        this.__character_count = item.length - last_newline_index;
      } else {
        this.__character_count += item.length;
      }
    };
    OutputLine.prototype.pop = function () {
      var item = null;
      if (!this.is_empty()) {
        item = this.__items.pop();
        this.__character_count -= item.length;
      }
      return item;
    };
    OutputLine.prototype._remove_indent = function () {
      if (this.__indent_count > 0) {
        this.__indent_count -= 1;
        this.__character_count -= this.__parent.indent_size;
      }
    };
    OutputLine.prototype._remove_wrap_indent = function () {
      if (this.__wrap_point_indent_count > 0) {
        this.__wrap_point_indent_count -= 1;
      }
    };
    OutputLine.prototype.trim = function () {
      while (this.last() === ' ') {
        this.__items.pop();
        this.__character_count -= 1;
      }
    };
    OutputLine.prototype.toString = function () {
      var result = '';
      if (this.is_empty()) {
        if (this.__parent.indent_empty_lines) {
          result = this.__parent.get_indent_string(this.__indent_count);
        }
      } else {
        result = this.__parent.get_indent_string(
          this.__indent_count,
          this.__alignment_count
        );
        result += this.__items.join('');
      }
      return result;
    };
    function IndentStringCache(options, baseIndentString) {
      this.__cache = [''];
      this.__indent_size = options.indent_size;
      this.__indent_string = options.indent_char;
      if (!options.indent_with_tabs) {
        this.__indent_string = new Array(options.indent_size + 1).join(
          options.indent_char
        );
      }
      baseIndentString = baseIndentString || '';
      if (options.indent_level > 0) {
        baseIndentString = new Array(options.indent_level + 1).join(
          this.__indent_string
        );
      }
      this.__base_string = baseIndentString;
      this.__base_string_length = baseIndentString.length;
    }
    IndentStringCache.prototype.get_indent_size = function (indent, column) {
      var result = this.__base_string_length;
      column = column || 0;
      if (indent < 0) {
        result = 0;
      }
      result += indent * this.__indent_size;
      result += column;
      return result;
    };
    IndentStringCache.prototype.get_indent_string = function (
      indent_level,
      column
    ) {
      var result = this.__base_string;
      column = column || 0;
      if (indent_level < 0) {
        indent_level = 0;
        result = '';
      }
      column += indent_level * this.__indent_size;
      this.__ensure_cache(column);
      result += this.__cache[column];
      return result;
    };
    IndentStringCache.prototype.__ensure_cache = function (column) {
      while (column >= this.__cache.length) {
        this.__add_column();
      }
    };
    IndentStringCache.prototype.__add_column = function () {
      var column = this.__cache.length;
      var indent = 0;
      var result = '';
      if (this.__indent_size && column >= this.__indent_size) {
        indent = Math.floor(column / this.__indent_size);
        column -= indent * this.__indent_size;
        result = new Array(indent + 1).join(this.__indent_string);
      }
      if (column) {
        result += new Array(column + 1).join(' ');
      }
      this.__cache.push(result);
    };
    function Output(options, baseIndentString) {
      this.__indent_cache = new IndentStringCache(options, baseIndentString);
      this.raw = false;
      this._end_with_newline = options.end_with_newline;
      this.indent_size = options.indent_size;
      this.wrap_line_length = options.wrap_line_length;
      this.indent_empty_lines = options.indent_empty_lines;
      this.__lines = [];
      this.previous_line = null;
      this.current_line = null;
      this.next_line = new OutputLine(this);
      this.space_before_token = false;
      this.non_breaking_space = false;
      this.previous_token_wrapped = false;
      this.__add_outputline();
    }
    Output.prototype.__add_outputline = function () {
      this.previous_line = this.current_line;
      this.current_line = this.next_line.clone_empty();
      this.__lines.push(this.current_line);
    };
    Output.prototype.get_line_number = function () {
      return this.__lines.length;
    };
    Output.prototype.get_indent_string = function (indent, column) {
      return this.__indent_cache.get_indent_string(indent, column);
    };
    Output.prototype.get_indent_size = function (indent, column) {
      return this.__indent_cache.get_indent_size(indent, column);
    };
    Output.prototype.is_empty = function () {
      return !this.previous_line && this.current_line.is_empty();
    };
    Output.prototype.add_new_line = function (force_newline) {
      if (this.is_empty() || (!force_newline && this.just_added_newline())) {
        return false;
      }
      if (!this.raw) {
        this.__add_outputline();
      }
      return true;
    };
    Output.prototype.get_code = function (eol) {
      this.trim(true);
      var last_item = this.current_line.pop();
      if (last_item) {
        if (last_item[last_item.length - 1] === '\n') {
          last_item = last_item.replace(/\n+$/g, '');
        }
        this.current_line.push(last_item);
      }
      if (this._end_with_newline) {
        this.__add_outputline();
      }
      var sweet_code = this.__lines.join('\n');
      if (eol !== '\n') {
        sweet_code = sweet_code.replace(/[\n]/g, eol);
      }
      return sweet_code;
    };
    Output.prototype.set_wrap_point = function () {
      this.current_line._set_wrap_point();
    };
    Output.prototype.set_indent = function (indent, alignment) {
      indent = indent || 0;
      alignment = alignment || 0;
      this.next_line.set_indent(indent, alignment);
      if (this.__lines.length > 1) {
        this.current_line.set_indent(indent, alignment);
        return true;
      }
      this.current_line.set_indent();
      return false;
    };
    Output.prototype.add_raw_token = function (token2) {
      for (var x = 0; x < token2.newlines; x++) {
        this.__add_outputline();
      }
      this.current_line.set_indent(-1);
      this.current_line.push(token2.whitespace_before);
      this.current_line.push(token2.text);
      this.space_before_token = false;
      this.non_breaking_space = false;
      this.previous_token_wrapped = false;
    };
    Output.prototype.add_token = function (printable_token) {
      this.__add_space_before_token();
      this.current_line.push(printable_token);
      this.space_before_token = false;
      this.non_breaking_space = false;
      this.previous_token_wrapped = this.current_line._allow_wrap();
    };
    Output.prototype.__add_space_before_token = function () {
      if (this.space_before_token && !this.just_added_newline()) {
        if (!this.non_breaking_space) {
          this.set_wrap_point();
        }
        this.current_line.push(' ');
      }
    };
    Output.prototype.remove_indent = function (index) {
      var output_length = this.__lines.length;
      while (index < output_length) {
        this.__lines[index]._remove_indent();
        index++;
      }
      this.current_line._remove_wrap_indent();
    };
    Output.prototype.trim = function (eat_newlines) {
      eat_newlines = eat_newlines === void 0 ? false : eat_newlines;
      this.current_line.trim();
      while (
        eat_newlines &&
        this.__lines.length > 1 &&
        this.current_line.is_empty()
      ) {
        this.__lines.pop();
        this.current_line = this.__lines[this.__lines.length - 1];
        this.current_line.trim();
      }
      this.previous_line =
        this.__lines.length > 1 ? this.__lines[this.__lines.length - 2] : null;
    };
    Output.prototype.just_added_newline = function () {
      return this.current_line.is_empty();
    };
    Output.prototype.just_added_blankline = function () {
      return (
        this.is_empty() ||
        (this.current_line.is_empty() && this.previous_line.is_empty())
      );
    };
    Output.prototype.ensure_empty_line_above = function (
      starts_with,
      ends_with
    ) {
      var index = this.__lines.length - 2;
      while (index >= 0) {
        var potentialEmptyLine = this.__lines[index];
        if (potentialEmptyLine.is_empty()) {
          break;
        } else if (
          potentialEmptyLine.item(0).indexOf(starts_with) !== 0 &&
          potentialEmptyLine.item(-1) !== ends_with
        ) {
          this.__lines.splice(index + 1, 0, new OutputLine(this));
          this.previous_line = this.__lines[this.__lines.length - 2];
          break;
        }
        index--;
      }
    };
    module2.exports.Output = Output;
  },
});

// ../../node_modules/js-beautify/js/src/core/token.js
var require_token = __commonJS({
  '../../node_modules/js-beautify/js/src/core/token.js'(exports2, module2) {
    'use strict';
    function Token(type, text, newlines, whitespace_before) {
      this.type = type;
      this.text = text;
      this.comments_before = null;
      this.newlines = newlines || 0;
      this.whitespace_before = whitespace_before || '';
      this.parent = null;
      this.next = null;
      this.previous = null;
      this.opened = null;
      this.closed = null;
      this.directives = null;
    }
    module2.exports.Token = Token;
  },
});

// ../../node_modules/js-beautify/js/src/javascript/acorn.js
var require_acorn = __commonJS({
  '../../node_modules/js-beautify/js/src/javascript/acorn.js'(exports2) {
    'use strict';
    var baseASCIIidentifierStartChars =
      '\\x23\\x24\\x40\\x41-\\x5a\\x5f\\x61-\\x7a';
    var baseASCIIidentifierChars =
      '\\x24\\x30-\\x39\\x41-\\x5a\\x5f\\x61-\\x7a';
    var nonASCIIidentifierStartChars =
      '\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc';
    var nonASCIIidentifierChars =
      '\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u0620-\\u0649\\u0672-\\u06d3\\u06e7-\\u06e8\\u06fb-\\u06fc\\u0730-\\u074a\\u0800-\\u0814\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0840-\\u0857\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962-\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09d7\\u09df-\\u09e0\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2-\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b5f-\\u0b60\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62-\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2-\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d46-\\u0d48\\u0d57\\u0d62-\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e34-\\u0e3a\\u0e40-\\u0e45\\u0e50-\\u0e59\\u0eb4-\\u0eb9\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f41-\\u0f47\\u0f71-\\u0f84\\u0f86-\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1029\\u1040-\\u1049\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u170e-\\u1710\\u1720-\\u1730\\u1740-\\u1750\\u1772\\u1773\\u1780-\\u17b2\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1920-\\u192b\\u1930-\\u193b\\u1951-\\u196d\\u19b0-\\u19c0\\u19c8-\\u19c9\\u19d0-\\u19d9\\u1a00-\\u1a15\\u1a20-\\u1a53\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b46-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c00-\\u1c22\\u1c40-\\u1c49\\u1c5b-\\u1c7d\\u1cd0-\\u1cd2\\u1d00-\\u1dbe\\u1e01-\\u1f15\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2d81-\\u2d96\\u2de0-\\u2dff\\u3021-\\u3028\\u3099\\u309a\\ua640-\\ua66d\\ua674-\\ua67d\\ua69f\\ua6f0-\\ua6f1\\ua7f8-\\ua800\\ua806\\ua80b\\ua823-\\ua827\\ua880-\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8f3-\\ua8f7\\ua900-\\ua909\\ua926-\\ua92d\\ua930-\\ua945\\ua980-\\ua983\\ua9b3-\\ua9c0\\uaa00-\\uaa27\\uaa40-\\uaa41\\uaa4c-\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaae0-\\uaae9\\uaaf2-\\uaaf3\\uabc0-\\uabe1\\uabec\\uabed\\uabf0-\\uabf9\\ufb20-\\ufb28\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f';
    var identifierStart =
      '(?:\\\\u[0-9a-fA-F]{4}|[' +
      baseASCIIidentifierStartChars +
      nonASCIIidentifierStartChars +
      '])';
    var identifierChars =
      '(?:\\\\u[0-9a-fA-F]{4}|[' +
      baseASCIIidentifierChars +
      nonASCIIidentifierStartChars +
      nonASCIIidentifierChars +
      '])*';
    exports2.identifier = new RegExp(identifierStart + identifierChars, 'g');
    exports2.identifierStart = new RegExp(identifierStart);
    exports2.identifierMatch = new RegExp(
      '(?:\\\\u[0-9a-fA-F]{4}|[' +
        baseASCIIidentifierChars +
        nonASCIIidentifierStartChars +
        nonASCIIidentifierChars +
        '])+'
    );
    exports2.newline = /[\n\r\u2028\u2029]/;
    exports2.lineBreak = new RegExp('\r\n|' + exports2.newline.source);
    exports2.allLineBreaks = new RegExp(exports2.lineBreak.source, 'g');
  },
});

// ../../node_modules/js-beautify/js/src/core/options.js
var require_options = __commonJS({
  '../../node_modules/js-beautify/js/src/core/options.js'(exports2, module2) {
    'use strict';
    function Options(options, merge_child_field) {
      this.raw_options = _mergeOpts(options, merge_child_field);
      this.disabled = this._get_boolean('disabled');
      this.eol = this._get_characters('eol', 'auto');
      this.end_with_newline = this._get_boolean('end_with_newline');
      this.indent_size = this._get_number('indent_size', 4);
      this.indent_char = this._get_characters('indent_char', ' ');
      this.indent_level = this._get_number('indent_level');
      this.preserve_newlines = this._get_boolean('preserve_newlines', true);
      this.max_preserve_newlines = this._get_number(
        'max_preserve_newlines',
        32786
      );
      if (!this.preserve_newlines) {
        this.max_preserve_newlines = 0;
      }
      this.indent_with_tabs = this._get_boolean(
        'indent_with_tabs',
        this.indent_char === '	'
      );
      if (this.indent_with_tabs) {
        this.indent_char = '	';
        if (this.indent_size === 1) {
          this.indent_size = 4;
        }
      }
      this.wrap_line_length = this._get_number(
        'wrap_line_length',
        this._get_number('max_char')
      );
      this.indent_empty_lines = this._get_boolean('indent_empty_lines');
      this.templating = this._get_selection_list(
        'templating',
        ['auto', 'none', 'django', 'erb', 'handlebars', 'php', 'smarty'],
        ['auto']
      );
    }
    Options.prototype._get_array = function (name, default_value) {
      var option_value = this.raw_options[name];
      var result = default_value || [];
      if (typeof option_value === 'object') {
        if (
          option_value !== null &&
          typeof option_value.concat === 'function'
        ) {
          result = option_value.concat();
        }
      } else if (typeof option_value === 'string') {
        result = option_value.split(/[^a-zA-Z0-9_\/\-]+/);
      }
      return result;
    };
    Options.prototype._get_boolean = function (name, default_value) {
      var option_value = this.raw_options[name];
      var result = option_value === void 0 ? !!default_value : !!option_value;
      return result;
    };
    Options.prototype._get_characters = function (name, default_value) {
      var option_value = this.raw_options[name];
      var result = default_value || '';
      if (typeof option_value === 'string') {
        result = option_value
          .replace(/\\r/, '\r')
          .replace(/\\n/, '\n')
          .replace(/\\t/, '	');
      }
      return result;
    };
    Options.prototype._get_number = function (name, default_value) {
      var option_value = this.raw_options[name];
      default_value = parseInt(default_value, 10);
      if (isNaN(default_value)) {
        default_value = 0;
      }
      var result = parseInt(option_value, 10);
      if (isNaN(result)) {
        result = default_value;
      }
      return result;
    };
    Options.prototype._get_selection = function (
      name,
      selection_list,
      default_value
    ) {
      var result = this._get_selection_list(
        name,
        selection_list,
        default_value
      );
      if (result.length !== 1) {
        throw new Error(
          "Invalid Option Value: The option '" +
            name +
            "' can only be one of the following values:\n" +
            selection_list +
            "\nYou passed in: '" +
            this.raw_options[name] +
            "'"
        );
      }
      return result[0];
    };
    Options.prototype._get_selection_list = function (
      name,
      selection_list,
      default_value
    ) {
      if (!selection_list || selection_list.length === 0) {
        throw new Error('Selection list cannot be empty.');
      }
      default_value = default_value || [selection_list[0]];
      if (!this._is_valid_selection(default_value, selection_list)) {
        throw new Error('Invalid Default Value!');
      }
      var result = this._get_array(name, default_value);
      if (!this._is_valid_selection(result, selection_list)) {
        throw new Error(
          "Invalid Option Value: The option '" +
            name +
            "' can contain only the following values:\n" +
            selection_list +
            "\nYou passed in: '" +
            this.raw_options[name] +
            "'"
        );
      }
      return result;
    };
    Options.prototype._is_valid_selection = function (result, selection_list) {
      return (
        result.length &&
        selection_list.length &&
        !result.some(function (item) {
          return selection_list.indexOf(item) === -1;
        })
      );
    };
    function _mergeOpts(allOptions, childFieldName) {
      var finalOpts = {};
      allOptions = _normalizeOpts(allOptions);
      var name;
      for (name in allOptions) {
        if (name !== childFieldName) {
          finalOpts[name] = allOptions[name];
        }
      }
      if (childFieldName && allOptions[childFieldName]) {
        for (name in allOptions[childFieldName]) {
          finalOpts[name] = allOptions[childFieldName][name];
        }
      }
      return finalOpts;
    }
    function _normalizeOpts(options) {
      var convertedOpts = {};
      var key;
      for (key in options) {
        var newKey = key.replace(/-/g, '_');
        convertedOpts[newKey] = options[key];
      }
      return convertedOpts;
    }
    module2.exports.Options = Options;
    module2.exports.normalizeOpts = _normalizeOpts;
    module2.exports.mergeOpts = _mergeOpts;
  },
});

// ../../node_modules/js-beautify/js/src/javascript/options.js
var require_options2 = __commonJS({
  '../../node_modules/js-beautify/js/src/javascript/options.js'(
    exports2,
    module2
  ) {
    'use strict';
    var BaseOptions = require_options().Options;
    var validPositionValues = [
      'before-newline',
      'after-newline',
      'preserve-newline',
    ];
    function Options(options) {
      BaseOptions.call(this, options, 'js');
      var raw_brace_style = this.raw_options.brace_style || null;
      if (raw_brace_style === 'expand-strict') {
        this.raw_options.brace_style = 'expand';
      } else if (raw_brace_style === 'collapse-preserve-inline') {
        this.raw_options.brace_style = 'collapse,preserve-inline';
      } else if (this.raw_options.braces_on_own_line !== void 0) {
        this.raw_options.brace_style = this.raw_options.braces_on_own_line
          ? 'expand'
          : 'collapse';
      }
      var brace_style_split = this._get_selection_list('brace_style', [
        'collapse',
        'expand',
        'end-expand',
        'none',
        'preserve-inline',
      ]);
      this.brace_preserve_inline = false;
      this.brace_style = 'collapse';
      for (var bs2 = 0; bs2 < brace_style_split.length; bs2++) {
        if (brace_style_split[bs2] === 'preserve-inline') {
          this.brace_preserve_inline = true;
        } else {
          this.brace_style = brace_style_split[bs2];
        }
      }
      this.unindent_chained_methods = this._get_boolean(
        'unindent_chained_methods'
      );
      this.break_chained_methods = this._get_boolean('break_chained_methods');
      this.space_in_paren = this._get_boolean('space_in_paren');
      this.space_in_empty_paren = this._get_boolean('space_in_empty_paren');
      this.jslint_happy = this._get_boolean('jslint_happy');
      this.space_after_anon_function = this._get_boolean(
        'space_after_anon_function'
      );
      this.space_after_named_function = this._get_boolean(
        'space_after_named_function'
      );
      this.keep_array_indentation = this._get_boolean('keep_array_indentation');
      this.space_before_conditional = this._get_boolean(
        'space_before_conditional',
        true
      );
      this.unescape_strings = this._get_boolean('unescape_strings');
      this.e4x = this._get_boolean('e4x');
      this.comma_first = this._get_boolean('comma_first');
      this.operator_position = this._get_selection(
        'operator_position',
        validPositionValues
      );
      this.test_output_raw = this._get_boolean('test_output_raw');
      if (this.jslint_happy) {
        this.space_after_anon_function = true;
      }
    }
    Options.prototype = new BaseOptions();
    module2.exports.Options = Options;
  },
});

// ../../node_modules/js-beautify/js/src/core/inputscanner.js
var require_inputscanner = __commonJS({
  '../../node_modules/js-beautify/js/src/core/inputscanner.js'(
    exports2,
    module2
  ) {
    'use strict';
    var regexp_has_sticky = RegExp.prototype.hasOwnProperty('sticky');
    function InputScanner(input_string) {
      this.__input = input_string || '';
      this.__input_length = this.__input.length;
      this.__position = 0;
    }
    InputScanner.prototype.restart = function () {
      this.__position = 0;
    };
    InputScanner.prototype.back = function () {
      if (this.__position > 0) {
        this.__position -= 1;
      }
    };
    InputScanner.prototype.hasNext = function () {
      return this.__position < this.__input_length;
    };
    InputScanner.prototype.next = function () {
      var val = null;
      if (this.hasNext()) {
        val = this.__input.charAt(this.__position);
        this.__position += 1;
      }
      return val;
    };
    InputScanner.prototype.peek = function (index) {
      var val = null;
      index = index || 0;
      index += this.__position;
      if (index >= 0 && index < this.__input_length) {
        val = this.__input.charAt(index);
      }
      return val;
    };
    InputScanner.prototype.__match = function (pattern, index) {
      pattern.lastIndex = index;
      var pattern_match = pattern.exec(this.__input);
      if (pattern_match && !(regexp_has_sticky && pattern.sticky)) {
        if (pattern_match.index !== index) {
          pattern_match = null;
        }
      }
      return pattern_match;
    };
    InputScanner.prototype.test = function (pattern, index) {
      index = index || 0;
      index += this.__position;
      if (index >= 0 && index < this.__input_length) {
        return !!this.__match(pattern, index);
      } else {
        return false;
      }
    };
    InputScanner.prototype.testChar = function (pattern, index) {
      var val = this.peek(index);
      pattern.lastIndex = 0;
      return val !== null && pattern.test(val);
    };
    InputScanner.prototype.match = function (pattern) {
      var pattern_match = this.__match(pattern, this.__position);
      if (pattern_match) {
        this.__position += pattern_match[0].length;
      } else {
        pattern_match = null;
      }
      return pattern_match;
    };
    InputScanner.prototype.read = function (
      starting_pattern,
      until_pattern,
      until_after
    ) {
      var val = '';
      var match;
      if (starting_pattern) {
        match = this.match(starting_pattern);
        if (match) {
          val += match[0];
        }
      }
      if (until_pattern && (match || !starting_pattern)) {
        val += this.readUntil(until_pattern, until_after);
      }
      return val;
    };
    InputScanner.prototype.readUntil = function (pattern, until_after) {
      var val = '';
      var match_index = this.__position;
      pattern.lastIndex = this.__position;
      var pattern_match = pattern.exec(this.__input);
      if (pattern_match) {
        match_index = pattern_match.index;
        if (until_after) {
          match_index += pattern_match[0].length;
        }
      } else {
        match_index = this.__input_length;
      }
      val = this.__input.substring(this.__position, match_index);
      this.__position = match_index;
      return val;
    };
    InputScanner.prototype.readUntilAfter = function (pattern) {
      return this.readUntil(pattern, true);
    };
    InputScanner.prototype.get_regexp = function (pattern, match_from) {
      var result = null;
      var flags = 'g';
      if (match_from && regexp_has_sticky) {
        flags = 'y';
      }
      if (typeof pattern === 'string' && pattern !== '') {
        result = new RegExp(pattern, flags);
      } else if (pattern) {
        result = new RegExp(pattern.source, flags);
      }
      return result;
    };
    InputScanner.prototype.get_literal_regexp = function (literal_string) {
      return RegExp(literal_string.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&'));
    };
    InputScanner.prototype.peekUntilAfter = function (pattern) {
      var start = this.__position;
      var val = this.readUntilAfter(pattern);
      this.__position = start;
      return val;
    };
    InputScanner.prototype.lookBack = function (testVal) {
      var start = this.__position - 1;
      return (
        start >= testVal.length &&
        this.__input.substring(start - testVal.length, start).toLowerCase() ===
          testVal
      );
    };
    module2.exports.InputScanner = InputScanner;
  },
});

// ../../node_modules/js-beautify/js/src/core/tokenstream.js
var require_tokenstream = __commonJS({
  '../../node_modules/js-beautify/js/src/core/tokenstream.js'(
    exports2,
    module2
  ) {
    'use strict';
    function TokenStream(parent_token) {
      this.__tokens = [];
      this.__tokens_length = this.__tokens.length;
      this.__position = 0;
      this.__parent_token = parent_token;
    }
    TokenStream.prototype.restart = function () {
      this.__position = 0;
    };
    TokenStream.prototype.isEmpty = function () {
      return this.__tokens_length === 0;
    };
    TokenStream.prototype.hasNext = function () {
      return this.__position < this.__tokens_length;
    };
    TokenStream.prototype.next = function () {
      var val = null;
      if (this.hasNext()) {
        val = this.__tokens[this.__position];
        this.__position += 1;
      }
      return val;
    };
    TokenStream.prototype.peek = function (index) {
      var val = null;
      index = index || 0;
      index += this.__position;
      if (index >= 0 && index < this.__tokens_length) {
        val = this.__tokens[index];
      }
      return val;
    };
    TokenStream.prototype.add = function (token2) {
      if (this.__parent_token) {
        token2.parent = this.__parent_token;
      }
      this.__tokens.push(token2);
      this.__tokens_length += 1;
    };
    module2.exports.TokenStream = TokenStream;
  },
});

// ../../node_modules/js-beautify/js/src/core/pattern.js
var require_pattern = __commonJS({
  '../../node_modules/js-beautify/js/src/core/pattern.js'(exports2, module2) {
    'use strict';
    function Pattern(input_scanner, parent) {
      this._input = input_scanner;
      this._starting_pattern = null;
      this._match_pattern = null;
      this._until_pattern = null;
      this._until_after = false;
      if (parent) {
        this._starting_pattern = this._input.get_regexp(
          parent._starting_pattern,
          true
        );
        this._match_pattern = this._input.get_regexp(
          parent._match_pattern,
          true
        );
        this._until_pattern = this._input.get_regexp(parent._until_pattern);
        this._until_after = parent._until_after;
      }
    }
    Pattern.prototype.read = function () {
      var result = this._input.read(this._starting_pattern);
      if (!this._starting_pattern || result) {
        result += this._input.read(
          this._match_pattern,
          this._until_pattern,
          this._until_after
        );
      }
      return result;
    };
    Pattern.prototype.read_match = function () {
      return this._input.match(this._match_pattern);
    };
    Pattern.prototype.until_after = function (pattern) {
      var result = this._create();
      result._until_after = true;
      result._until_pattern = this._input.get_regexp(pattern);
      result._update();
      return result;
    };
    Pattern.prototype.until = function (pattern) {
      var result = this._create();
      result._until_after = false;
      result._until_pattern = this._input.get_regexp(pattern);
      result._update();
      return result;
    };
    Pattern.prototype.starting_with = function (pattern) {
      var result = this._create();
      result._starting_pattern = this._input.get_regexp(pattern, true);
      result._update();
      return result;
    };
    Pattern.prototype.matching = function (pattern) {
      var result = this._create();
      result._match_pattern = this._input.get_regexp(pattern, true);
      result._update();
      return result;
    };
    Pattern.prototype._create = function () {
      return new Pattern(this._input, this);
    };
    Pattern.prototype._update = function () {};
    module2.exports.Pattern = Pattern;
  },
});

// ../../node_modules/js-beautify/js/src/core/whitespacepattern.js
var require_whitespacepattern = __commonJS({
  '../../node_modules/js-beautify/js/src/core/whitespacepattern.js'(
    exports2,
    module2
  ) {
    'use strict';
    var Pattern = require_pattern().Pattern;
    function WhitespacePattern(input_scanner, parent) {
      Pattern.call(this, input_scanner, parent);
      if (parent) {
        this._line_regexp = this._input.get_regexp(parent._line_regexp);
      } else {
        this.__set_whitespace_patterns('', '');
      }
      this.newline_count = 0;
      this.whitespace_before_token = '';
    }
    WhitespacePattern.prototype = new Pattern();
    WhitespacePattern.prototype.__set_whitespace_patterns = function (
      whitespace_chars,
      newline_chars
    ) {
      whitespace_chars += '\\t ';
      newline_chars += '\\n\\r';
      this._match_pattern = this._input.get_regexp(
        '[' + whitespace_chars + newline_chars + ']+',
        true
      );
      this._newline_regexp = this._input.get_regexp(
        '\\r\\n|[' + newline_chars + ']'
      );
    };
    WhitespacePattern.prototype.read = function () {
      this.newline_count = 0;
      this.whitespace_before_token = '';
      var resulting_string = this._input.read(this._match_pattern);
      if (resulting_string === ' ') {
        this.whitespace_before_token = ' ';
      } else if (resulting_string) {
        var matches = this.__split(this._newline_regexp, resulting_string);
        this.newline_count = matches.length - 1;
        this.whitespace_before_token = matches[this.newline_count];
      }
      return resulting_string;
    };
    WhitespacePattern.prototype.matching = function (
      whitespace_chars,
      newline_chars
    ) {
      var result = this._create();
      result.__set_whitespace_patterns(whitespace_chars, newline_chars);
      result._update();
      return result;
    };
    WhitespacePattern.prototype._create = function () {
      return new WhitespacePattern(this._input, this);
    };
    WhitespacePattern.prototype.__split = function (regexp, input_string) {
      regexp.lastIndex = 0;
      var start_index = 0;
      var result = [];
      var next_match = regexp.exec(input_string);
      while (next_match) {
        result.push(input_string.substring(start_index, next_match.index));
        start_index = next_match.index + next_match[0].length;
        next_match = regexp.exec(input_string);
      }
      if (start_index < input_string.length) {
        result.push(input_string.substring(start_index, input_string.length));
      } else {
        result.push('');
      }
      return result;
    };
    module2.exports.WhitespacePattern = WhitespacePattern;
  },
});

// ../../node_modules/js-beautify/js/src/core/tokenizer.js
var require_tokenizer = __commonJS({
  '../../node_modules/js-beautify/js/src/core/tokenizer.js'(exports2, module2) {
    'use strict';
    var InputScanner = require_inputscanner().InputScanner;
    var Token = require_token().Token;
    var TokenStream = require_tokenstream().TokenStream;
    var WhitespacePattern = require_whitespacepattern().WhitespacePattern;
    var TOKEN = {
      START: 'TK_START',
      RAW: 'TK_RAW',
      EOF: 'TK_EOF',
    };
    var Tokenizer2 = function (input_string, options) {
      this._input = new InputScanner(input_string);
      this._options = options || {};
      this.__tokens = null;
      this._patterns = {};
      this._patterns.whitespace = new WhitespacePattern(this._input);
    };
    Tokenizer2.prototype.tokenize = function () {
      this._input.restart();
      this.__tokens = new TokenStream();
      this._reset();
      var current;
      var previous = new Token(TOKEN.START, '');
      var open_token = null;
      var open_stack = [];
      var comments = new TokenStream();
      while (previous.type !== TOKEN.EOF) {
        current = this._get_next_token(previous, open_token);
        while (this._is_comment(current)) {
          comments.add(current);
          current = this._get_next_token(previous, open_token);
        }
        if (!comments.isEmpty()) {
          current.comments_before = comments;
          comments = new TokenStream();
        }
        current.parent = open_token;
        if (this._is_opening(current)) {
          open_stack.push(open_token);
          open_token = current;
        } else if (open_token && this._is_closing(current, open_token)) {
          current.opened = open_token;
          open_token.closed = current;
          open_token = open_stack.pop();
          current.parent = open_token;
        }
        current.previous = previous;
        previous.next = current;
        this.__tokens.add(current);
        previous = current;
      }
      return this.__tokens;
    };
    Tokenizer2.prototype._is_first_token = function () {
      return this.__tokens.isEmpty();
    };
    Tokenizer2.prototype._reset = function () {};
    Tokenizer2.prototype._get_next_token = function (
      previous_token,
      open_token
    ) {
      this._readWhitespace();
      var resulting_string = this._input.read(/.+/g);
      if (resulting_string) {
        return this._create_token(TOKEN.RAW, resulting_string);
      } else {
        return this._create_token(TOKEN.EOF, '');
      }
    };
    Tokenizer2.prototype._is_comment = function (current_token) {
      return false;
    };
    Tokenizer2.prototype._is_opening = function (current_token) {
      return false;
    };
    Tokenizer2.prototype._is_closing = function (current_token, open_token) {
      return false;
    };
    Tokenizer2.prototype._create_token = function (type, text) {
      var token2 = new Token(
        type,
        text,
        this._patterns.whitespace.newline_count,
        this._patterns.whitespace.whitespace_before_token
      );
      return token2;
    };
    Tokenizer2.prototype._readWhitespace = function () {
      return this._patterns.whitespace.read();
    };
    module2.exports.Tokenizer = Tokenizer2;
    module2.exports.TOKEN = TOKEN;
  },
});

// ../../node_modules/js-beautify/js/src/core/directives.js
var require_directives = __commonJS({
  '../../node_modules/js-beautify/js/src/core/directives.js'(
    exports2,
    module2
  ) {
    'use strict';
    function Directives(start_block_pattern, end_block_pattern) {
      start_block_pattern =
        typeof start_block_pattern === 'string'
          ? start_block_pattern
          : start_block_pattern.source;
      end_block_pattern =
        typeof end_block_pattern === 'string'
          ? end_block_pattern
          : end_block_pattern.source;
      this.__directives_block_pattern = new RegExp(
        start_block_pattern +
          / beautify( \w+[:]\w+)+ /.source +
          end_block_pattern,
        'g'
      );
      this.__directive_pattern = / (\w+)[:](\w+)/g;
      this.__directives_end_ignore_pattern = new RegExp(
        start_block_pattern +
          /\sbeautify\signore:end\s/.source +
          end_block_pattern,
        'g'
      );
    }
    Directives.prototype.get_directives = function (text) {
      if (!text.match(this.__directives_block_pattern)) {
        return null;
      }
      var directives = {};
      this.__directive_pattern.lastIndex = 0;
      var directive_match = this.__directive_pattern.exec(text);
      while (directive_match) {
        directives[directive_match[1]] = directive_match[2];
        directive_match = this.__directive_pattern.exec(text);
      }
      return directives;
    };
    Directives.prototype.readIgnored = function (input) {
      return input.readUntilAfter(this.__directives_end_ignore_pattern);
    };
    module2.exports.Directives = Directives;
  },
});

// ../../node_modules/js-beautify/js/src/core/templatablepattern.js
var require_templatablepattern = __commonJS({
  '../../node_modules/js-beautify/js/src/core/templatablepattern.js'(
    exports2,
    module2
  ) {
    'use strict';
    var Pattern = require_pattern().Pattern;
    var template_names = {
      django: false,
      erb: false,
      handlebars: false,
      php: false,
      smarty: false,
    };
    function TemplatablePattern(input_scanner, parent) {
      Pattern.call(this, input_scanner, parent);
      this.__template_pattern = null;
      this._disabled = Object.assign({}, template_names);
      this._excluded = Object.assign({}, template_names);
      if (parent) {
        this.__template_pattern = this._input.get_regexp(
          parent.__template_pattern
        );
        this._excluded = Object.assign(this._excluded, parent._excluded);
        this._disabled = Object.assign(this._disabled, parent._disabled);
      }
      var pattern = new Pattern(input_scanner);
      this.__patterns = {
        handlebars_comment: pattern.starting_with(/{{!--/).until_after(/--}}/),
        handlebars_unescaped: pattern.starting_with(/{{{/).until_after(/}}}/),
        handlebars: pattern.starting_with(/{{/).until_after(/}}/),
        php: pattern.starting_with(/<\?(?:[= ]|php)/).until_after(/\?>/),
        erb: pattern.starting_with(/<%[^%]/).until_after(/[^%]%>/),
        // django coflicts with handlebars a bit.
        django: pattern.starting_with(/{%/).until_after(/%}/),
        django_value: pattern.starting_with(/{{/).until_after(/}}/),
        django_comment: pattern.starting_with(/{#/).until_after(/#}/),
        smarty: pattern.starting_with(/{(?=[^}{\s\n])/).until_after(/[^\s\n]}/),
        smarty_comment: pattern.starting_with(/{\*/).until_after(/\*}/),
        smarty_literal: pattern
          .starting_with(/{literal}/)
          .until_after(/{\/literal}/),
      };
    }
    TemplatablePattern.prototype = new Pattern();
    TemplatablePattern.prototype._create = function () {
      return new TemplatablePattern(this._input, this);
    };
    TemplatablePattern.prototype._update = function () {
      this.__set_templated_pattern();
    };
    TemplatablePattern.prototype.disable = function (language) {
      var result = this._create();
      result._disabled[language] = true;
      result._update();
      return result;
    };
    TemplatablePattern.prototype.read_options = function (options) {
      var result = this._create();
      for (var language in template_names) {
        result._disabled[language] =
          options.templating.indexOf(language) === -1;
      }
      result._update();
      return result;
    };
    TemplatablePattern.prototype.exclude = function (language) {
      var result = this._create();
      result._excluded[language] = true;
      result._update();
      return result;
    };
    TemplatablePattern.prototype.read = function () {
      var result = '';
      if (this._match_pattern) {
        result = this._input.read(this._starting_pattern);
      } else {
        result = this._input.read(
          this._starting_pattern,
          this.__template_pattern
        );
      }
      var next = this._read_template();
      while (next) {
        if (this._match_pattern) {
          next += this._input.read(this._match_pattern);
        } else {
          next += this._input.readUntil(this.__template_pattern);
        }
        result += next;
        next = this._read_template();
      }
      if (this._until_after) {
        result += this._input.readUntilAfter(this._until_pattern);
      }
      return result;
    };
    TemplatablePattern.prototype.__set_templated_pattern = function () {
      var items = [];
      if (!this._disabled.php) {
        items.push(this.__patterns.php._starting_pattern.source);
      }
      if (!this._disabled.handlebars) {
        items.push(this.__patterns.handlebars._starting_pattern.source);
      }
      if (!this._disabled.erb) {
        items.push(this.__patterns.erb._starting_pattern.source);
      }
      if (!this._disabled.django) {
        items.push(this.__patterns.django._starting_pattern.source);
        items.push(this.__patterns.django_value._starting_pattern.source);
        items.push(this.__patterns.django_comment._starting_pattern.source);
      }
      if (!this._disabled.smarty) {
        items.push(this.__patterns.smarty._starting_pattern.source);
      }
      if (this._until_pattern) {
        items.push(this._until_pattern.source);
      }
      this.__template_pattern = this._input.get_regexp(
        '(?:' + items.join('|') + ')'
      );
    };
    TemplatablePattern.prototype._read_template = function () {
      var resulting_string = '';
      var c2 = this._input.peek();
      if (c2 === '<') {
        var peek1 = this._input.peek(1);
        if (!this._disabled.php && !this._excluded.php && peek1 === '?') {
          resulting_string = resulting_string || this.__patterns.php.read();
        }
        if (!this._disabled.erb && !this._excluded.erb && peek1 === '%') {
          resulting_string = resulting_string || this.__patterns.erb.read();
        }
      } else if (c2 === '{') {
        if (!this._disabled.handlebars && !this._excluded.handlebars) {
          resulting_string =
            resulting_string || this.__patterns.handlebars_comment.read();
          resulting_string =
            resulting_string || this.__patterns.handlebars_unescaped.read();
          resulting_string =
            resulting_string || this.__patterns.handlebars.read();
        }
        if (!this._disabled.django) {
          if (!this._excluded.django && !this._excluded.handlebars) {
            resulting_string =
              resulting_string || this.__patterns.django_value.read();
          }
          if (!this._excluded.django) {
            resulting_string =
              resulting_string || this.__patterns.django_comment.read();
            resulting_string =
              resulting_string || this.__patterns.django.read();
          }
        }
        if (!this._disabled.smarty) {
          if (this._disabled.django && this._disabled.handlebars) {
            resulting_string =
              resulting_string || this.__patterns.smarty_comment.read();
            resulting_string =
              resulting_string || this.__patterns.smarty_literal.read();
            resulting_string =
              resulting_string || this.__patterns.smarty.read();
          }
        }
      }
      return resulting_string;
    };
    module2.exports.TemplatablePattern = TemplatablePattern;
  },
});

// ../../node_modules/js-beautify/js/src/javascript/tokenizer.js
var require_tokenizer2 = __commonJS({
  '../../node_modules/js-beautify/js/src/javascript/tokenizer.js'(
    exports2,
    module2
  ) {
    'use strict';
    var InputScanner = require_inputscanner().InputScanner;
    var BaseTokenizer = require_tokenizer().Tokenizer;
    var BASETOKEN = require_tokenizer().TOKEN;
    var Directives = require_directives().Directives;
    var acorn = require_acorn();
    var Pattern = require_pattern().Pattern;
    var TemplatablePattern = require_templatablepattern().TemplatablePattern;
    function in_array(what, arr) {
      return arr.indexOf(what) !== -1;
    }
    var TOKEN = {
      START_EXPR: 'TK_START_EXPR',
      END_EXPR: 'TK_END_EXPR',
      START_BLOCK: 'TK_START_BLOCK',
      END_BLOCK: 'TK_END_BLOCK',
      WORD: 'TK_WORD',
      RESERVED: 'TK_RESERVED',
      SEMICOLON: 'TK_SEMICOLON',
      STRING: 'TK_STRING',
      EQUALS: 'TK_EQUALS',
      OPERATOR: 'TK_OPERATOR',
      COMMA: 'TK_COMMA',
      BLOCK_COMMENT: 'TK_BLOCK_COMMENT',
      COMMENT: 'TK_COMMENT',
      DOT: 'TK_DOT',
      UNKNOWN: 'TK_UNKNOWN',
      START: BASETOKEN.START,
      RAW: BASETOKEN.RAW,
      EOF: BASETOKEN.EOF,
    };
    var directives_core = new Directives(/\/\*/, /\*\//);
    var number_pattern =
      /0[xX][0123456789abcdefABCDEF_]*n?|0[oO][01234567_]*n?|0[bB][01_]*n?|\d[\d_]*n|(?:\.\d[\d_]*|\d[\d_]*\.?[\d_]*)(?:[eE][+-]?[\d_]+)?/;
    var digit = /[0-9]/;
    var dot_pattern = /[^\d\.]/;
    var positionable_operators =
      '>>> === !== &&= ??= ||= << && >= ** != == <= >> || ?? |> < / - + > : & % ? ^ | *'.split(
        ' '
      );
    var punct =
      '>>>= ... >>= <<= === >>> !== **= &&= ??= ||= => ^= :: /= << <= == && -= >= >> != -- += ** || ?? ++ %= &= *= |= |> = ! ? > < : / ^ - + * & % ~ |';
    punct = punct.replace(/[-[\]{}()*+?.,\\^$|#]/g, '\\$&');
    punct = '\\?\\.(?!\\d) ' + punct;
    punct = punct.replace(/ /g, '|');
    var punct_pattern = new RegExp(punct);
    var line_starters =
      'continue,try,throw,return,var,let,const,if,switch,case,default,for,while,break,function,import,export'.split(
        ','
      );
    var reserved_words = line_starters.concat([
      'do',
      'in',
      'of',
      'else',
      'get',
      'set',
      'new',
      'catch',
      'finally',
      'typeof',
      'yield',
      'async',
      'await',
      'from',
      'as',
      'class',
      'extends',
    ]);
    var reserved_word_pattern = new RegExp(
      '^(?:' + reserved_words.join('|') + ')$'
    );
    var in_html_comment;
    var Tokenizer2 = function (input_string, options) {
      BaseTokenizer.call(this, input_string, options);
      this._patterns.whitespace = this._patterns.whitespace.matching(
        /\u00A0\u1680\u180e\u2000-\u200a\u202f\u205f\u3000\ufeff/.source,
        /\u2028\u2029/.source
      );
      var pattern_reader = new Pattern(this._input);
      var templatable = new TemplatablePattern(this._input).read_options(
        this._options
      );
      this.__patterns = {
        template: templatable,
        identifier: templatable
          .starting_with(acorn.identifier)
          .matching(acorn.identifierMatch),
        number: pattern_reader.matching(number_pattern),
        punct: pattern_reader.matching(punct_pattern),
        // comment ends just before nearest linefeed or end of file
        comment: pattern_reader
          .starting_with(/\/\//)
          .until(/[\n\r\u2028\u2029]/),
        //  /* ... */ comment ends with nearest */ or end of file
        block_comment: pattern_reader.starting_with(/\/\*/).until_after(/\*\//),
        html_comment_start: pattern_reader.matching(/<!--/),
        html_comment_end: pattern_reader.matching(/-->/),
        include: pattern_reader
          .starting_with(/#include/)
          .until_after(acorn.lineBreak),
        shebang: pattern_reader
          .starting_with(/#!/)
          .until_after(acorn.lineBreak),
        xml: pattern_reader.matching(
          /[\s\S]*?<(\/?)([-a-zA-Z:0-9_.]+|{[^}]+?}|!\[CDATA\[[^\]]*?\]\]|)(\s*{[^}]+?}|\s+[-a-zA-Z:0-9_.]+|\s+[-a-zA-Z:0-9_.]+\s*=\s*('[^']*'|"[^"]*"|{([^{}]|{[^}]+?})+?}))*\s*(\/?)\s*>/
        ),
        single_quote: templatable.until(/['\\\n\r\u2028\u2029]/),
        double_quote: templatable.until(/["\\\n\r\u2028\u2029]/),
        template_text: templatable.until(/[`\\$]/),
        template_expression: templatable.until(/[`}\\]/),
      };
    };
    Tokenizer2.prototype = new BaseTokenizer();
    Tokenizer2.prototype._is_comment = function (current_token) {
      return (
        current_token.type === TOKEN.COMMENT ||
        current_token.type === TOKEN.BLOCK_COMMENT ||
        current_token.type === TOKEN.UNKNOWN
      );
    };
    Tokenizer2.prototype._is_opening = function (current_token) {
      return (
        current_token.type === TOKEN.START_BLOCK ||
        current_token.type === TOKEN.START_EXPR
      );
    };
    Tokenizer2.prototype._is_closing = function (current_token, open_token) {
      return (
        (current_token.type === TOKEN.END_BLOCK ||
          current_token.type === TOKEN.END_EXPR) &&
        open_token &&
        ((current_token.text === ']' && open_token.text === '[') ||
          (current_token.text === ')' && open_token.text === '(') ||
          (current_token.text === '}' && open_token.text === '{'))
      );
    };
    Tokenizer2.prototype._reset = function () {
      in_html_comment = false;
    };
    Tokenizer2.prototype._get_next_token = function (
      previous_token,
      open_token
    ) {
      var token2 = null;
      this._readWhitespace();
      var c2 = this._input.peek();
      if (c2 === null) {
        return this._create_token(TOKEN.EOF, '');
      }
      token2 = token2 || this._read_non_javascript(c2);
      token2 = token2 || this._read_string(c2);
      token2 = token2 || this._read_pair(c2, this._input.peek(1));
      token2 = token2 || this._read_word(previous_token);
      token2 = token2 || this._read_singles(c2);
      token2 = token2 || this._read_comment(c2);
      token2 = token2 || this._read_regexp(c2, previous_token);
      token2 = token2 || this._read_xml(c2, previous_token);
      token2 = token2 || this._read_punctuation();
      token2 = token2 || this._create_token(TOKEN.UNKNOWN, this._input.next());
      return token2;
    };
    Tokenizer2.prototype._read_word = function (previous_token) {
      var resulting_string;
      resulting_string = this.__patterns.identifier.read();
      if (resulting_string !== '') {
        resulting_string = resulting_string.replace(acorn.allLineBreaks, '\n');
        if (
          !(
            previous_token.type === TOKEN.DOT ||
            (previous_token.type === TOKEN.RESERVED &&
              (previous_token.text === 'set' || previous_token.text === 'get'))
          ) &&
          reserved_word_pattern.test(resulting_string)
        ) {
          if (
            (resulting_string === 'in' || resulting_string === 'of') &&
            (previous_token.type === TOKEN.WORD ||
              previous_token.type === TOKEN.STRING)
          ) {
            return this._create_token(TOKEN.OPERATOR, resulting_string);
          }
          return this._create_token(TOKEN.RESERVED, resulting_string);
        }
        return this._create_token(TOKEN.WORD, resulting_string);
      }
      resulting_string = this.__patterns.number.read();
      if (resulting_string !== '') {
        return this._create_token(TOKEN.WORD, resulting_string);
      }
    };
    Tokenizer2.prototype._read_singles = function (c2) {
      var token2 = null;
      if (c2 === '(' || c2 === '[') {
        token2 = this._create_token(TOKEN.START_EXPR, c2);
      } else if (c2 === ')' || c2 === ']') {
        token2 = this._create_token(TOKEN.END_EXPR, c2);
      } else if (c2 === '{') {
        token2 = this._create_token(TOKEN.START_BLOCK, c2);
      } else if (c2 === '}') {
        token2 = this._create_token(TOKEN.END_BLOCK, c2);
      } else if (c2 === ';') {
        token2 = this._create_token(TOKEN.SEMICOLON, c2);
      } else if (c2 === '.' && dot_pattern.test(this._input.peek(1))) {
        token2 = this._create_token(TOKEN.DOT, c2);
      } else if (c2 === ',') {
        token2 = this._create_token(TOKEN.COMMA, c2);
      }
      if (token2) {
        this._input.next();
      }
      return token2;
    };
    Tokenizer2.prototype._read_pair = function (c2, d) {
      var token2 = null;
      if (c2 === '#' && d === '{') {
        token2 = this._create_token(TOKEN.START_BLOCK, c2 + d);
      }
      if (token2) {
        this._input.next();
        this._input.next();
      }
      return token2;
    };
    Tokenizer2.prototype._read_punctuation = function () {
      var resulting_string = this.__patterns.punct.read();
      if (resulting_string !== '') {
        if (resulting_string === '=') {
          return this._create_token(TOKEN.EQUALS, resulting_string);
        } else if (resulting_string === '?.') {
          return this._create_token(TOKEN.DOT, resulting_string);
        } else {
          return this._create_token(TOKEN.OPERATOR, resulting_string);
        }
      }
    };
    Tokenizer2.prototype._read_non_javascript = function (c2) {
      var resulting_string = '';
      if (c2 === '#') {
        if (this._is_first_token()) {
          resulting_string = this.__patterns.shebang.read();
          if (resulting_string) {
            return this._create_token(
              TOKEN.UNKNOWN,
              resulting_string.trim() + '\n'
            );
          }
        }
        resulting_string = this.__patterns.include.read();
        if (resulting_string) {
          return this._create_token(
            TOKEN.UNKNOWN,
            resulting_string.trim() + '\n'
          );
        }
        c2 = this._input.next();
        var sharp = '#';
        if (this._input.hasNext() && this._input.testChar(digit)) {
          do {
            c2 = this._input.next();
            sharp += c2;
          } while (this._input.hasNext() && c2 !== '#' && c2 !== '=');
          if (c2 === '#') {
          } else if (
            this._input.peek() === '[' &&
            this._input.peek(1) === ']'
          ) {
            sharp += '[]';
            this._input.next();
            this._input.next();
          } else if (
            this._input.peek() === '{' &&
            this._input.peek(1) === '}'
          ) {
            sharp += '{}';
            this._input.next();
            this._input.next();
          }
          return this._create_token(TOKEN.WORD, sharp);
        }
        this._input.back();
      } else if (c2 === '<' && this._is_first_token()) {
        resulting_string = this.__patterns.html_comment_start.read();
        if (resulting_string) {
          while (
            this._input.hasNext() &&
            !this._input.testChar(acorn.newline)
          ) {
            resulting_string += this._input.next();
          }
          in_html_comment = true;
          return this._create_token(TOKEN.COMMENT, resulting_string);
        }
      } else if (in_html_comment && c2 === '-') {
        resulting_string = this.__patterns.html_comment_end.read();
        if (resulting_string) {
          in_html_comment = false;
          return this._create_token(TOKEN.COMMENT, resulting_string);
        }
      }
      return null;
    };
    Tokenizer2.prototype._read_comment = function (c2) {
      var token2 = null;
      if (c2 === '/') {
        var comment = '';
        if (this._input.peek(1) === '*') {
          comment = this.__patterns.block_comment.read();
          var directives = directives_core.get_directives(comment);
          if (directives && directives.ignore === 'start') {
            comment += directives_core.readIgnored(this._input);
          }
          comment = comment.replace(acorn.allLineBreaks, '\n');
          token2 = this._create_token(TOKEN.BLOCK_COMMENT, comment);
          token2.directives = directives;
        } else if (this._input.peek(1) === '/') {
          comment = this.__patterns.comment.read();
          token2 = this._create_token(TOKEN.COMMENT, comment);
        }
      }
      return token2;
    };
    Tokenizer2.prototype._read_string = function (c2) {
      if (c2 === '`' || c2 === "'" || c2 === '"') {
        var resulting_string = this._input.next();
        this.has_char_escapes = false;
        if (c2 === '`') {
          resulting_string += this._read_string_recursive('`', true, '${');
        } else {
          resulting_string += this._read_string_recursive(c2);
        }
        if (this.has_char_escapes && this._options.unescape_strings) {
          resulting_string = unescape_string(resulting_string);
        }
        if (this._input.peek() === c2) {
          resulting_string += this._input.next();
        }
        resulting_string = resulting_string.replace(acorn.allLineBreaks, '\n');
        return this._create_token(TOKEN.STRING, resulting_string);
      }
      return null;
    };
    Tokenizer2.prototype._allow_regexp_or_xml = function (previous_token) {
      return (
        (previous_token.type === TOKEN.RESERVED &&
          in_array(previous_token.text, [
            'return',
            'case',
            'throw',
            'else',
            'do',
            'typeof',
            'yield',
          ])) ||
        (previous_token.type === TOKEN.END_EXPR &&
          previous_token.text === ')' &&
          previous_token.opened.previous.type === TOKEN.RESERVED &&
          in_array(previous_token.opened.previous.text, [
            'if',
            'while',
            'for',
          ])) ||
        in_array(previous_token.type, [
          TOKEN.COMMENT,
          TOKEN.START_EXPR,
          TOKEN.START_BLOCK,
          TOKEN.START,
          TOKEN.END_BLOCK,
          TOKEN.OPERATOR,
          TOKEN.EQUALS,
          TOKEN.EOF,
          TOKEN.SEMICOLON,
          TOKEN.COMMA,
        ])
      );
    };
    Tokenizer2.prototype._read_regexp = function (c2, previous_token) {
      if (c2 === '/' && this._allow_regexp_or_xml(previous_token)) {
        var resulting_string = this._input.next();
        var esc = false;
        var in_char_class = false;
        while (
          this._input.hasNext() &&
          (esc || in_char_class || this._input.peek() !== c2) &&
          !this._input.testChar(acorn.newline)
        ) {
          resulting_string += this._input.peek();
          if (!esc) {
            esc = this._input.peek() === '\\';
            if (this._input.peek() === '[') {
              in_char_class = true;
            } else if (this._input.peek() === ']') {
              in_char_class = false;
            }
          } else {
            esc = false;
          }
          this._input.next();
        }
        if (this._input.peek() === c2) {
          resulting_string += this._input.next();
          resulting_string += this._input.read(acorn.identifier);
        }
        return this._create_token(TOKEN.STRING, resulting_string);
      }
      return null;
    };
    Tokenizer2.prototype._read_xml = function (c2, previous_token) {
      if (
        this._options.e4x &&
        c2 === '<' &&
        this._allow_regexp_or_xml(previous_token)
      ) {
        var xmlStr = '';
        var match = this.__patterns.xml.read_match();
        if (match) {
          var rootTag = match[2].replace(/^{\s+/, '{').replace(/\s+}$/, '}');
          var isCurlyRoot = rootTag.indexOf('{') === 0;
          var depth = 0;
          while (match) {
            var isEndTag = !!match[1];
            var tagName = match[2];
            var isSingletonTag =
              !!match[match.length - 1] || tagName.slice(0, 8) === '![CDATA[';
            if (
              !isSingletonTag &&
              (tagName === rootTag ||
                (isCurlyRoot &&
                  tagName.replace(/^{\s+/, '{').replace(/\s+}$/, '}')))
            ) {
              if (isEndTag) {
                --depth;
              } else {
                ++depth;
              }
            }
            xmlStr += match[0];
            if (depth <= 0) {
              break;
            }
            match = this.__patterns.xml.read_match();
          }
          if (!match) {
            xmlStr += this._input.match(/[\s\S]*/g)[0];
          }
          xmlStr = xmlStr.replace(acorn.allLineBreaks, '\n');
          return this._create_token(TOKEN.STRING, xmlStr);
        }
      }
      return null;
    };
    function unescape_string(s2) {
      var out = '',
        escaped = 0;
      var input_scan = new InputScanner(s2);
      var matched = null;
      while (input_scan.hasNext()) {
        matched = input_scan.match(/([\s]|[^\\]|\\\\)+/g);
        if (matched) {
          out += matched[0];
        }
        if (input_scan.peek() === '\\') {
          input_scan.next();
          if (input_scan.peek() === 'x') {
            matched = input_scan.match(/x([0-9A-Fa-f]{2})/g);
          } else if (input_scan.peek() === 'u') {
            matched = input_scan.match(/u([0-9A-Fa-f]{4})/g);
          } else {
            out += '\\';
            if (input_scan.hasNext()) {
              out += input_scan.next();
            }
            continue;
          }
          if (!matched) {
            return s2;
          }
          escaped = parseInt(matched[1], 16);
          if (
            escaped > 126 &&
            escaped <= 255 &&
            matched[0].indexOf('x') === 0
          ) {
            return s2;
          } else if (escaped >= 0 && escaped < 32) {
            out += '\\' + matched[0];
            continue;
          } else if (escaped === 34 || escaped === 39 || escaped === 92) {
            out += '\\' + String.fromCharCode(escaped);
          } else {
            out += String.fromCharCode(escaped);
          }
        }
      }
      return out;
    }
    Tokenizer2.prototype._read_string_recursive = function (
      delimiter,
      allow_unescaped_newlines,
      start_sub
    ) {
      var current_char;
      var pattern;
      if (delimiter === "'") {
        pattern = this.__patterns.single_quote;
      } else if (delimiter === '"') {
        pattern = this.__patterns.double_quote;
      } else if (delimiter === '`') {
        pattern = this.__patterns.template_text;
      } else if (delimiter === '}') {
        pattern = this.__patterns.template_expression;
      }
      var resulting_string = pattern.read();
      var next = '';
      while (this._input.hasNext()) {
        next = this._input.next();
        if (
          next === delimiter ||
          (!allow_unescaped_newlines && acorn.newline.test(next))
        ) {
          this._input.back();
          break;
        } else if (next === '\\' && this._input.hasNext()) {
          current_char = this._input.peek();
          if (current_char === 'x' || current_char === 'u') {
            this.has_char_escapes = true;
          } else if (current_char === '\r' && this._input.peek(1) === '\n') {
            this._input.next();
          }
          next += this._input.next();
        } else if (start_sub) {
          if (
            start_sub === '${' &&
            next === '$' &&
            this._input.peek() === '{'
          ) {
            next += this._input.next();
          }
          if (start_sub === next) {
            if (delimiter === '`') {
              next += this._read_string_recursive(
                '}',
                allow_unescaped_newlines,
                '`'
              );
            } else {
              next += this._read_string_recursive(
                '`',
                allow_unescaped_newlines,
                '${'
              );
            }
            if (this._input.hasNext()) {
              next += this._input.next();
            }
          }
        }
        next += pattern.read();
        resulting_string += next;
      }
      return resulting_string;
    };
    module2.exports.Tokenizer = Tokenizer2;
    module2.exports.TOKEN = TOKEN;
    module2.exports.positionable_operators = positionable_operators.slice();
    module2.exports.line_starters = line_starters.slice();
  },
});

// ../../node_modules/js-beautify/js/src/javascript/beautifier.js
var require_beautifier = __commonJS({
  '../../node_modules/js-beautify/js/src/javascript/beautifier.js'(
    exports2,
    module2
  ) {
    'use strict';
    var Output = require_output().Output;
    var Token = require_token().Token;
    var acorn = require_acorn();
    var Options = require_options2().Options;
    var Tokenizer2 = require_tokenizer2().Tokenizer;
    var line_starters = require_tokenizer2().line_starters;
    var positionable_operators = require_tokenizer2().positionable_operators;
    var TOKEN = require_tokenizer2().TOKEN;
    function in_array(what, arr) {
      return arr.indexOf(what) !== -1;
    }
    function ltrim(s2) {
      return s2.replace(/^\s+/g, '');
    }
    function generateMapFromStrings(list) {
      var result = {};
      for (var x = 0; x < list.length; x++) {
        result[list[x].replace(/-/g, '_')] = list[x];
      }
      return result;
    }
    function reserved_word(token2, word) {
      return token2 && token2.type === TOKEN.RESERVED && token2.text === word;
    }
    function reserved_array(token2, words) {
      return (
        token2 && token2.type === TOKEN.RESERVED && in_array(token2.text, words)
      );
    }
    var special_words = [
      'case',
      'return',
      'do',
      'if',
      'throw',
      'else',
      'await',
      'break',
      'continue',
      'async',
    ];
    var validPositionValues = [
      'before-newline',
      'after-newline',
      'preserve-newline',
    ];
    var OPERATOR_POSITION = generateMapFromStrings(validPositionValues);
    var OPERATOR_POSITION_BEFORE_OR_PRESERVE = [
      OPERATOR_POSITION.before_newline,
      OPERATOR_POSITION.preserve_newline,
    ];
    var MODE = {
      BlockStatement: 'BlockStatement',
      // 'BLOCK'
      Statement: 'Statement',
      // 'STATEMENT'
      ObjectLiteral: 'ObjectLiteral',
      // 'OBJECT',
      ArrayLiteral: 'ArrayLiteral',
      //'[EXPRESSION]',
      ForInitializer: 'ForInitializer',
      //'(FOR-EXPRESSION)',
      Conditional: 'Conditional',
      //'(COND-EXPRESSION)',
      Expression: 'Expression',
      //'(EXPRESSION)'
    };
    function remove_redundant_indentation(output, frame) {
      if (
        frame.multiline_frame ||
        frame.mode === MODE.ForInitializer ||
        frame.mode === MODE.Conditional
      ) {
        return;
      }
      output.remove_indent(frame.start_line_index);
    }
    function split_linebreaks(s2) {
      s2 = s2.replace(acorn.allLineBreaks, '\n');
      var out = [],
        idx = s2.indexOf('\n');
      while (idx !== -1) {
        out.push(s2.substring(0, idx));
        s2 = s2.substring(idx + 1);
        idx = s2.indexOf('\n');
      }
      if (s2.length) {
        out.push(s2);
      }
      return out;
    }
    function is_array(mode) {
      return mode === MODE.ArrayLiteral;
    }
    function is_expression(mode) {
      return in_array(mode, [
        MODE.Expression,
        MODE.ForInitializer,
        MODE.Conditional,
      ]);
    }
    function all_lines_start_with(lines, c2) {
      for (var i = 0; i < lines.length; i++) {
        var line = lines[i].trim();
        if (line.charAt(0) !== c2) {
          return false;
        }
      }
      return true;
    }
    function each_line_matches_indent(lines, indent) {
      var i = 0,
        len = lines.length,
        line;
      for (; i < len; i++) {
        line = lines[i];
        if (line && line.indexOf(indent) !== 0) {
          return false;
        }
      }
      return true;
    }
    function Beautifier(source_text, options) {
      options = options || {};
      this._source_text = source_text || '';
      this._output = null;
      this._tokens = null;
      this._last_last_text = null;
      this._flags = null;
      this._previous_flags = null;
      this._flag_store = null;
      this._options = new Options(options);
    }
    Beautifier.prototype.create_flags = function (flags_base, mode) {
      var next_indent_level = 0;
      if (flags_base) {
        next_indent_level = flags_base.indentation_level;
        if (
          !this._output.just_added_newline() &&
          flags_base.line_indent_level > next_indent_level
        ) {
          next_indent_level = flags_base.line_indent_level;
        }
      }
      var next_flags = {
        mode,
        parent: flags_base,
        last_token: flags_base
          ? flags_base.last_token
          : new Token(TOKEN.START_BLOCK, ''),
        // last token text
        last_word: flags_base ? flags_base.last_word : '',
        // last TOKEN.WORD passed
        declaration_statement: false,
        declaration_assignment: false,
        multiline_frame: false,
        inline_frame: false,
        if_block: false,
        else_block: false,
        class_start_block: false,
        // class A { INSIDE HERE } or class B extends C { INSIDE HERE }
        do_block: false,
        do_while: false,
        import_block: false,
        in_case_statement: false,
        // switch(..){ INSIDE HERE }
        in_case: false,
        // we're on the exact line with "case 0:"
        case_body: false,
        // the indented case-action block
        case_block: false,
        // the indented case-action block is wrapped with {}
        indentation_level: next_indent_level,
        alignment: 0,
        line_indent_level: flags_base
          ? flags_base.line_indent_level
          : next_indent_level,
        start_line_index: this._output.get_line_number(),
        ternary_depth: 0,
      };
      return next_flags;
    };
    Beautifier.prototype._reset = function (source_text) {
      var baseIndentString = source_text.match(/^[\t ]*/)[0];
      this._last_last_text = '';
      this._output = new Output(this._options, baseIndentString);
      this._output.raw = this._options.test_output_raw;
      this._flag_store = [];
      this.set_mode(MODE.BlockStatement);
      var tokenizer = new Tokenizer2(source_text, this._options);
      this._tokens = tokenizer.tokenize();
      return source_text;
    };
    Beautifier.prototype.beautify = function () {
      if (this._options.disabled) {
        return this._source_text;
      }
      var sweet_code;
      var source_text = this._reset(this._source_text);
      var eol = this._options.eol;
      if (this._options.eol === 'auto') {
        eol = '\n';
        if (source_text && acorn.lineBreak.test(source_text || '')) {
          eol = source_text.match(acorn.lineBreak)[0];
        }
      }
      var current_token = this._tokens.next();
      while (current_token) {
        this.handle_token(current_token);
        this._last_last_text = this._flags.last_token.text;
        this._flags.last_token = current_token;
        current_token = this._tokens.next();
      }
      sweet_code = this._output.get_code(eol);
      return sweet_code;
    };
    Beautifier.prototype.handle_token = function (
      current_token,
      preserve_statement_flags
    ) {
      if (current_token.type === TOKEN.START_EXPR) {
        this.handle_start_expr(current_token);
      } else if (current_token.type === TOKEN.END_EXPR) {
        this.handle_end_expr(current_token);
      } else if (current_token.type === TOKEN.START_BLOCK) {
        this.handle_start_block(current_token);
      } else if (current_token.type === TOKEN.END_BLOCK) {
        this.handle_end_block(current_token);
      } else if (current_token.type === TOKEN.WORD) {
        this.handle_word(current_token);
      } else if (current_token.type === TOKEN.RESERVED) {
        this.handle_word(current_token);
      } else if (current_token.type === TOKEN.SEMICOLON) {
        this.handle_semicolon(current_token);
      } else if (current_token.type === TOKEN.STRING) {
        this.handle_string(current_token);
      } else if (current_token.type === TOKEN.EQUALS) {
        this.handle_equals(current_token);
      } else if (current_token.type === TOKEN.OPERATOR) {
        this.handle_operator(current_token);
      } else if (current_token.type === TOKEN.COMMA) {
        this.handle_comma(current_token);
      } else if (current_token.type === TOKEN.BLOCK_COMMENT) {
        this.handle_block_comment(current_token, preserve_statement_flags);
      } else if (current_token.type === TOKEN.COMMENT) {
        this.handle_comment(current_token, preserve_statement_flags);
      } else if (current_token.type === TOKEN.DOT) {
        this.handle_dot(current_token);
      } else if (current_token.type === TOKEN.EOF) {
        this.handle_eof(current_token);
      } else if (current_token.type === TOKEN.UNKNOWN) {
        this.handle_unknown(current_token, preserve_statement_flags);
      } else {
        this.handle_unknown(current_token, preserve_statement_flags);
      }
    };
    Beautifier.prototype.handle_whitespace_and_comments = function (
      current_token,
      preserve_statement_flags
    ) {
      var newlines = current_token.newlines;
      var keep_whitespace =
        this._options.keep_array_indentation && is_array(this._flags.mode);
      if (current_token.comments_before) {
        var comment_token = current_token.comments_before.next();
        while (comment_token) {
          this.handle_whitespace_and_comments(
            comment_token,
            preserve_statement_flags
          );
          this.handle_token(comment_token, preserve_statement_flags);
          comment_token = current_token.comments_before.next();
        }
      }
      if (keep_whitespace) {
        for (var i = 0; i < newlines; i += 1) {
          this.print_newline(i > 0, preserve_statement_flags);
        }
      } else {
        if (
          this._options.max_preserve_newlines &&
          newlines > this._options.max_preserve_newlines
        ) {
          newlines = this._options.max_preserve_newlines;
        }
        if (this._options.preserve_newlines) {
          if (newlines > 1) {
            this.print_newline(false, preserve_statement_flags);
            for (var j2 = 1; j2 < newlines; j2 += 1) {
              this.print_newline(true, preserve_statement_flags);
            }
          }
        }
      }
    };
    var newline_restricted_tokens = [
      'async',
      'break',
      'continue',
      'return',
      'throw',
      'yield',
    ];
    Beautifier.prototype.allow_wrap_or_preserved_newline = function (
      current_token,
      force_linewrap
    ) {
      force_linewrap = force_linewrap === void 0 ? false : force_linewrap;
      if (this._output.just_added_newline()) {
        return;
      }
      var shouldPreserveOrForce =
        (this._options.preserve_newlines && current_token.newlines) ||
        force_linewrap;
      var operatorLogicApplies =
        in_array(this._flags.last_token.text, positionable_operators) ||
        in_array(current_token.text, positionable_operators);
      if (operatorLogicApplies) {
        var shouldPrintOperatorNewline =
          (in_array(this._flags.last_token.text, positionable_operators) &&
            in_array(
              this._options.operator_position,
              OPERATOR_POSITION_BEFORE_OR_PRESERVE
            )) ||
          in_array(current_token.text, positionable_operators);
        shouldPreserveOrForce =
          shouldPreserveOrForce && shouldPrintOperatorNewline;
      }
      if (shouldPreserveOrForce) {
        this.print_newline(false, true);
      } else if (this._options.wrap_line_length) {
        if (reserved_array(this._flags.last_token, newline_restricted_tokens)) {
          return;
        }
        this._output.set_wrap_point();
      }
    };
    Beautifier.prototype.print_newline = function (
      force_newline,
      preserve_statement_flags
    ) {
      if (!preserve_statement_flags) {
        if (
          this._flags.last_token.text !== ';' &&
          this._flags.last_token.text !== ',' &&
          this._flags.last_token.text !== '=' &&
          (this._flags.last_token.type !== TOKEN.OPERATOR ||
            this._flags.last_token.text === '--' ||
            this._flags.last_token.text === '++')
        ) {
          var next_token = this._tokens.peek();
          while (
            this._flags.mode === MODE.Statement &&
            !(this._flags.if_block && reserved_word(next_token, 'else')) &&
            !this._flags.do_block
          ) {
            this.restore_mode();
          }
        }
      }
      if (this._output.add_new_line(force_newline)) {
        this._flags.multiline_frame = true;
      }
    };
    Beautifier.prototype.print_token_line_indentation = function (
      current_token
    ) {
      if (this._output.just_added_newline()) {
        if (
          this._options.keep_array_indentation &&
          current_token.newlines &&
          (current_token.text === '[' || is_array(this._flags.mode))
        ) {
          this._output.current_line.set_indent(-1);
          this._output.current_line.push(current_token.whitespace_before);
          this._output.space_before_token = false;
        } else if (
          this._output.set_indent(
            this._flags.indentation_level,
            this._flags.alignment
          )
        ) {
          this._flags.line_indent_level = this._flags.indentation_level;
        }
      }
    };
    Beautifier.prototype.print_token = function (current_token) {
      if (this._output.raw) {
        this._output.add_raw_token(current_token);
        return;
      }
      if (
        this._options.comma_first &&
        current_token.previous &&
        current_token.previous.type === TOKEN.COMMA &&
        this._output.just_added_newline()
      ) {
        if (this._output.previous_line.last() === ',') {
          var popped = this._output.previous_line.pop();
          if (this._output.previous_line.is_empty()) {
            this._output.previous_line.push(popped);
            this._output.trim(true);
            this._output.current_line.pop();
            this._output.trim();
          }
          this.print_token_line_indentation(current_token);
          this._output.add_token(',');
          this._output.space_before_token = true;
        }
      }
      this.print_token_line_indentation(current_token);
      this._output.non_breaking_space = true;
      this._output.add_token(current_token.text);
      if (this._output.previous_token_wrapped) {
        this._flags.multiline_frame = true;
      }
    };
    Beautifier.prototype.indent = function () {
      this._flags.indentation_level += 1;
      this._output.set_indent(
        this._flags.indentation_level,
        this._flags.alignment
      );
    };
    Beautifier.prototype.deindent = function () {
      if (
        this._flags.indentation_level > 0 &&
        (!this._flags.parent ||
          this._flags.indentation_level > this._flags.parent.indentation_level)
      ) {
        this._flags.indentation_level -= 1;
        this._output.set_indent(
          this._flags.indentation_level,
          this._flags.alignment
        );
      }
    };
    Beautifier.prototype.set_mode = function (mode) {
      if (this._flags) {
        this._flag_store.push(this._flags);
        this._previous_flags = this._flags;
      } else {
        this._previous_flags = this.create_flags(null, mode);
      }
      this._flags = this.create_flags(this._previous_flags, mode);
      this._output.set_indent(
        this._flags.indentation_level,
        this._flags.alignment
      );
    };
    Beautifier.prototype.restore_mode = function () {
      if (this._flag_store.length > 0) {
        this._previous_flags = this._flags;
        this._flags = this._flag_store.pop();
        if (this._previous_flags.mode === MODE.Statement) {
          remove_redundant_indentation(this._output, this._previous_flags);
        }
        this._output.set_indent(
          this._flags.indentation_level,
          this._flags.alignment
        );
      }
    };
    Beautifier.prototype.start_of_object_property = function () {
      return (
        this._flags.parent.mode === MODE.ObjectLiteral &&
        this._flags.mode === MODE.Statement &&
        ((this._flags.last_token.text === ':' &&
          this._flags.ternary_depth === 0) ||
          reserved_array(this._flags.last_token, ['get', 'set']))
      );
    };
    Beautifier.prototype.start_of_statement = function (current_token) {
      var start = false;
      start =
        start ||
        (reserved_array(this._flags.last_token, ['var', 'let', 'const']) &&
          current_token.type === TOKEN.WORD);
      start = start || reserved_word(this._flags.last_token, 'do');
      start =
        start ||
        (!(
          this._flags.parent.mode === MODE.ObjectLiteral &&
          this._flags.mode === MODE.Statement
        ) &&
          reserved_array(this._flags.last_token, newline_restricted_tokens) &&
          !current_token.newlines);
      start =
        start ||
        (reserved_word(this._flags.last_token, 'else') &&
          !(
            reserved_word(current_token, 'if') && !current_token.comments_before
          ));
      start =
        start ||
        (this._flags.last_token.type === TOKEN.END_EXPR &&
          (this._previous_flags.mode === MODE.ForInitializer ||
            this._previous_flags.mode === MODE.Conditional));
      start =
        start ||
        (this._flags.last_token.type === TOKEN.WORD &&
          this._flags.mode === MODE.BlockStatement &&
          !this._flags.in_case &&
          !(current_token.text === '--' || current_token.text === '++') &&
          this._last_last_text !== 'function' &&
          current_token.type !== TOKEN.WORD &&
          current_token.type !== TOKEN.RESERVED);
      start =
        start ||
        (this._flags.mode === MODE.ObjectLiteral &&
          ((this._flags.last_token.text === ':' &&
            this._flags.ternary_depth === 0) ||
            reserved_array(this._flags.last_token, ['get', 'set'])));
      if (start) {
        this.set_mode(MODE.Statement);
        this.indent();
        this.handle_whitespace_and_comments(current_token, true);
        if (!this.start_of_object_property()) {
          this.allow_wrap_or_preserved_newline(
            current_token,
            reserved_array(current_token, ['do', 'for', 'if', 'while'])
          );
        }
        return true;
      }
      return false;
    };
    Beautifier.prototype.handle_start_expr = function (current_token) {
      if (!this.start_of_statement(current_token)) {
        this.handle_whitespace_and_comments(current_token);
      }
      var next_mode = MODE.Expression;
      if (current_token.text === '[') {
        if (
          this._flags.last_token.type === TOKEN.WORD ||
          this._flags.last_token.text === ')'
        ) {
          if (reserved_array(this._flags.last_token, line_starters)) {
            this._output.space_before_token = true;
          }
          this.print_token(current_token);
          this.set_mode(next_mode);
          this.indent();
          if (this._options.space_in_paren) {
            this._output.space_before_token = true;
          }
          return;
        }
        next_mode = MODE.ArrayLiteral;
        if (is_array(this._flags.mode)) {
          if (
            this._flags.last_token.text === '[' ||
            (this._flags.last_token.text === ',' &&
              (this._last_last_text === ']' || this._last_last_text === '}'))
          ) {
            if (!this._options.keep_array_indentation) {
              this.print_newline();
            }
          }
        }
        if (
          !in_array(this._flags.last_token.type, [
            TOKEN.START_EXPR,
            TOKEN.END_EXPR,
            TOKEN.WORD,
            TOKEN.OPERATOR,
            TOKEN.DOT,
          ])
        ) {
          this._output.space_before_token = true;
        }
      } else {
        if (this._flags.last_token.type === TOKEN.RESERVED) {
          if (this._flags.last_token.text === 'for') {
            this._output.space_before_token =
              this._options.space_before_conditional;
            next_mode = MODE.ForInitializer;
          } else if (
            in_array(this._flags.last_token.text, ['if', 'while', 'switch'])
          ) {
            this._output.space_before_token =
              this._options.space_before_conditional;
            next_mode = MODE.Conditional;
          } else if (in_array(this._flags.last_word, ['await', 'async'])) {
            this._output.space_before_token = true;
          } else if (
            this._flags.last_token.text === 'import' &&
            current_token.whitespace_before === ''
          ) {
            this._output.space_before_token = false;
          } else if (
            in_array(this._flags.last_token.text, line_starters) ||
            this._flags.last_token.text === 'catch'
          ) {
            this._output.space_before_token = true;
          }
        } else if (
          this._flags.last_token.type === TOKEN.EQUALS ||
          this._flags.last_token.type === TOKEN.OPERATOR
        ) {
          if (!this.start_of_object_property()) {
            this.allow_wrap_or_preserved_newline(current_token);
          }
        } else if (this._flags.last_token.type === TOKEN.WORD) {
          this._output.space_before_token = false;
          var peek_back_two = this._tokens.peek(-3);
          if (this._options.space_after_named_function && peek_back_two) {
            var peek_back_three = this._tokens.peek(-4);
            if (
              reserved_array(peek_back_two, ['async', 'function']) ||
              (peek_back_two.text === '*' &&
                reserved_array(peek_back_three, ['async', 'function']))
            ) {
              this._output.space_before_token = true;
            } else if (this._flags.mode === MODE.ObjectLiteral) {
              if (
                peek_back_two.text === '{' ||
                peek_back_two.text === ',' ||
                (peek_back_two.text === '*' &&
                  (peek_back_three.text === '{' ||
                    peek_back_three.text === ','))
              ) {
                this._output.space_before_token = true;
              }
            } else if (
              this._flags.parent &&
              this._flags.parent.class_start_block
            ) {
              this._output.space_before_token = true;
            }
          }
        } else {
          this.allow_wrap_or_preserved_newline(current_token);
        }
        if (
          (this._flags.last_token.type === TOKEN.RESERVED &&
            (this._flags.last_word === 'function' ||
              this._flags.last_word === 'typeof')) ||
          (this._flags.last_token.text === '*' &&
            (in_array(this._last_last_text, ['function', 'yield']) ||
              (this._flags.mode === MODE.ObjectLiteral &&
                in_array(this._last_last_text, ['{', ',']))))
        ) {
          this._output.space_before_token =
            this._options.space_after_anon_function;
        }
      }
      if (
        this._flags.last_token.text === ';' ||
        this._flags.last_token.type === TOKEN.START_BLOCK
      ) {
        this.print_newline();
      } else if (
        this._flags.last_token.type === TOKEN.END_EXPR ||
        this._flags.last_token.type === TOKEN.START_EXPR ||
        this._flags.last_token.type === TOKEN.END_BLOCK ||
        this._flags.last_token.text === '.' ||
        this._flags.last_token.type === TOKEN.COMMA
      ) {
        this.allow_wrap_or_preserved_newline(
          current_token,
          current_token.newlines
        );
      }
      this.print_token(current_token);
      this.set_mode(next_mode);
      if (this._options.space_in_paren) {
        this._output.space_before_token = true;
      }
      this.indent();
    };
    Beautifier.prototype.handle_end_expr = function (current_token) {
      while (this._flags.mode === MODE.Statement) {
        this.restore_mode();
      }
      this.handle_whitespace_and_comments(current_token);
      if (this._flags.multiline_frame) {
        this.allow_wrap_or_preserved_newline(
          current_token,
          current_token.text === ']' &&
            is_array(this._flags.mode) &&
            !this._options.keep_array_indentation
        );
      }
      if (this._options.space_in_paren) {
        if (
          this._flags.last_token.type === TOKEN.START_EXPR &&
          !this._options.space_in_empty_paren
        ) {
          this._output.trim();
          this._output.space_before_token = false;
        } else {
          this._output.space_before_token = true;
        }
      }
      this.deindent();
      this.print_token(current_token);
      this.restore_mode();
      remove_redundant_indentation(this._output, this._previous_flags);
      if (
        this._flags.do_while &&
        this._previous_flags.mode === MODE.Conditional
      ) {
        this._previous_flags.mode = MODE.Expression;
        this._flags.do_block = false;
        this._flags.do_while = false;
      }
    };
    Beautifier.prototype.handle_start_block = function (current_token) {
      this.handle_whitespace_and_comments(current_token);
      var next_token = this._tokens.peek();
      var second_token = this._tokens.peek(1);
      if (
        this._flags.last_word === 'switch' &&
        this._flags.last_token.type === TOKEN.END_EXPR
      ) {
        this.set_mode(MODE.BlockStatement);
        this._flags.in_case_statement = true;
      } else if (this._flags.case_body) {
        this.set_mode(MODE.BlockStatement);
      } else if (
        second_token &&
        ((in_array(second_token.text, [':', ',']) &&
          in_array(next_token.type, [
            TOKEN.STRING,
            TOKEN.WORD,
            TOKEN.RESERVED,
          ])) ||
          (in_array(next_token.text, ['get', 'set', '...']) &&
            in_array(second_token.type, [TOKEN.WORD, TOKEN.RESERVED])))
      ) {
        if (
          in_array(this._last_last_text, ['class', 'interface']) &&
          !in_array(second_token.text, [':', ','])
        ) {
          this.set_mode(MODE.BlockStatement);
        } else {
          this.set_mode(MODE.ObjectLiteral);
        }
      } else if (
        this._flags.last_token.type === TOKEN.OPERATOR &&
        this._flags.last_token.text === '=>'
      ) {
        this.set_mode(MODE.BlockStatement);
      } else if (
        in_array(this._flags.last_token.type, [
          TOKEN.EQUALS,
          TOKEN.START_EXPR,
          TOKEN.COMMA,
          TOKEN.OPERATOR,
        ]) ||
        reserved_array(this._flags.last_token, [
          'return',
          'throw',
          'import',
          'default',
        ])
      ) {
        this.set_mode(MODE.ObjectLiteral);
      } else {
        this.set_mode(MODE.BlockStatement);
      }
      if (this._flags.last_token) {
        if (
          reserved_array(this._flags.last_token.previous, ['class', 'extends'])
        ) {
          this._flags.class_start_block = true;
        }
      }
      var empty_braces = !next_token.comments_before && next_token.text === '}';
      var empty_anonymous_function =
        empty_braces &&
        this._flags.last_word === 'function' &&
        this._flags.last_token.type === TOKEN.END_EXPR;
      if (this._options.brace_preserve_inline) {
        var index = 0;
        var check_token = null;
        this._flags.inline_frame = true;
        do {
          index += 1;
          check_token = this._tokens.peek(index - 1);
          if (check_token.newlines) {
            this._flags.inline_frame = false;
            break;
          }
        } while (
          check_token.type !== TOKEN.EOF &&
          !(
            check_token.type === TOKEN.END_BLOCK &&
            check_token.opened === current_token
          )
        );
      }
      if (
        (this._options.brace_style === 'expand' ||
          (this._options.brace_style === 'none' && current_token.newlines)) &&
        !this._flags.inline_frame
      ) {
        if (
          this._flags.last_token.type !== TOKEN.OPERATOR &&
          (empty_anonymous_function ||
            this._flags.last_token.type === TOKEN.EQUALS ||
            (reserved_array(this._flags.last_token, special_words) &&
              this._flags.last_token.text !== 'else'))
        ) {
          this._output.space_before_token = true;
        } else {
          this.print_newline(false, true);
        }
      } else {
        if (
          is_array(this._previous_flags.mode) &&
          (this._flags.last_token.type === TOKEN.START_EXPR ||
            this._flags.last_token.type === TOKEN.COMMA)
        ) {
          if (
            this._flags.last_token.type === TOKEN.COMMA ||
            this._options.space_in_paren
          ) {
            this._output.space_before_token = true;
          }
          if (
            this._flags.last_token.type === TOKEN.COMMA ||
            (this._flags.last_token.type === TOKEN.START_EXPR &&
              this._flags.inline_frame)
          ) {
            this.allow_wrap_or_preserved_newline(current_token);
            this._previous_flags.multiline_frame =
              this._previous_flags.multiline_frame ||
              this._flags.multiline_frame;
            this._flags.multiline_frame = false;
          }
        }
        if (
          this._flags.last_token.type !== TOKEN.OPERATOR &&
          this._flags.last_token.type !== TOKEN.START_EXPR
        ) {
          if (
            in_array(this._flags.last_token.type, [
              TOKEN.START_BLOCK,
              TOKEN.SEMICOLON,
            ]) &&
            !this._flags.inline_frame
          ) {
            this.print_newline();
          } else {
            this._output.space_before_token = true;
          }
        }
      }
      this.print_token(current_token);
      this.indent();
      if (
        !empty_braces &&
        !(this._options.brace_preserve_inline && this._flags.inline_frame)
      ) {
        this.print_newline();
      }
    };
    Beautifier.prototype.handle_end_block = function (current_token) {
      this.handle_whitespace_and_comments(current_token);
      while (this._flags.mode === MODE.Statement) {
        this.restore_mode();
      }
      var empty_braces = this._flags.last_token.type === TOKEN.START_BLOCK;
      if (this._flags.inline_frame && !empty_braces) {
        this._output.space_before_token = true;
      } else if (this._options.brace_style === 'expand') {
        if (!empty_braces) {
          this.print_newline();
        }
      } else {
        if (!empty_braces) {
          if (
            is_array(this._flags.mode) &&
            this._options.keep_array_indentation
          ) {
            this._options.keep_array_indentation = false;
            this.print_newline();
            this._options.keep_array_indentation = true;
          } else {
            this.print_newline();
          }
        }
      }
      this.restore_mode();
      this.print_token(current_token);
    };
    Beautifier.prototype.handle_word = function (current_token) {
      if (current_token.type === TOKEN.RESERVED) {
        if (
          in_array(current_token.text, ['set', 'get']) &&
          this._flags.mode !== MODE.ObjectLiteral
        ) {
          current_token.type = TOKEN.WORD;
        } else if (
          current_token.text === 'import' &&
          in_array(this._tokens.peek().text, ['(', '.'])
        ) {
          current_token.type = TOKEN.WORD;
        } else if (
          in_array(current_token.text, ['as', 'from']) &&
          !this._flags.import_block
        ) {
          current_token.type = TOKEN.WORD;
        } else if (this._flags.mode === MODE.ObjectLiteral) {
          var next_token = this._tokens.peek();
          if (next_token.text === ':') {
            current_token.type = TOKEN.WORD;
          }
        }
      }
      if (this.start_of_statement(current_token)) {
        if (
          reserved_array(this._flags.last_token, ['var', 'let', 'const']) &&
          current_token.type === TOKEN.WORD
        ) {
          this._flags.declaration_statement = true;
        }
      } else if (
        current_token.newlines &&
        !is_expression(this._flags.mode) &&
        (this._flags.last_token.type !== TOKEN.OPERATOR ||
          this._flags.last_token.text === '--' ||
          this._flags.last_token.text === '++') &&
        this._flags.last_token.type !== TOKEN.EQUALS &&
        (this._options.preserve_newlines ||
          !reserved_array(this._flags.last_token, [
            'var',
            'let',
            'const',
            'set',
            'get',
          ]))
      ) {
        this.handle_whitespace_and_comments(current_token);
        this.print_newline();
      } else {
        this.handle_whitespace_and_comments(current_token);
      }
      if (this._flags.do_block && !this._flags.do_while) {
        if (reserved_word(current_token, 'while')) {
          this._output.space_before_token = true;
          this.print_token(current_token);
          this._output.space_before_token = true;
          this._flags.do_while = true;
          return;
        } else {
          this.print_newline();
          this._flags.do_block = false;
        }
      }
      if (this._flags.if_block) {
        if (!this._flags.else_block && reserved_word(current_token, 'else')) {
          this._flags.else_block = true;
        } else {
          while (this._flags.mode === MODE.Statement) {
            this.restore_mode();
          }
          this._flags.if_block = false;
          this._flags.else_block = false;
        }
      }
      if (
        this._flags.in_case_statement &&
        reserved_array(current_token, ['case', 'default'])
      ) {
        this.print_newline();
        if (
          !this._flags.case_block &&
          (this._flags.case_body || this._options.jslint_happy)
        ) {
          this.deindent();
        }
        this._flags.case_body = false;
        this.print_token(current_token);
        this._flags.in_case = true;
        return;
      }
      if (
        this._flags.last_token.type === TOKEN.COMMA ||
        this._flags.last_token.type === TOKEN.START_EXPR ||
        this._flags.last_token.type === TOKEN.EQUALS ||
        this._flags.last_token.type === TOKEN.OPERATOR
      ) {
        if (!this.start_of_object_property()) {
          this.allow_wrap_or_preserved_newline(current_token);
        }
      }
      if (reserved_word(current_token, 'function')) {
        if (
          in_array(this._flags.last_token.text, ['}', ';']) ||
          (this._output.just_added_newline() &&
            !(
              in_array(this._flags.last_token.text, [
                '(',
                '[',
                '{',
                ':',
                '=',
                ',',
              ]) || this._flags.last_token.type === TOKEN.OPERATOR
            ))
        ) {
          if (
            !this._output.just_added_blankline() &&
            !current_token.comments_before
          ) {
            this.print_newline();
            this.print_newline(true);
          }
        }
        if (
          this._flags.last_token.type === TOKEN.RESERVED ||
          this._flags.last_token.type === TOKEN.WORD
        ) {
          if (
            reserved_array(this._flags.last_token, [
              'get',
              'set',
              'new',
              'export',
            ]) ||
            reserved_array(this._flags.last_token, newline_restricted_tokens)
          ) {
            this._output.space_before_token = true;
          } else if (
            reserved_word(this._flags.last_token, 'default') &&
            this._last_last_text === 'export'
          ) {
            this._output.space_before_token = true;
          } else if (this._flags.last_token.text === 'declare') {
            this._output.space_before_token = true;
          } else {
            this.print_newline();
          }
        } else if (
          this._flags.last_token.type === TOKEN.OPERATOR ||
          this._flags.last_token.text === '='
        ) {
          this._output.space_before_token = true;
        } else if (
          !this._flags.multiline_frame &&
          (is_expression(this._flags.mode) || is_array(this._flags.mode))
        ) {
        } else {
          this.print_newline();
        }
        this.print_token(current_token);
        this._flags.last_word = current_token.text;
        return;
      }
      var prefix = 'NONE';
      if (this._flags.last_token.type === TOKEN.END_BLOCK) {
        if (this._previous_flags.inline_frame) {
          prefix = 'SPACE';
        } else if (
          !reserved_array(current_token, ['else', 'catch', 'finally', 'from'])
        ) {
          prefix = 'NEWLINE';
        } else {
          if (
            this._options.brace_style === 'expand' ||
            this._options.brace_style === 'end-expand' ||
            (this._options.brace_style === 'none' && current_token.newlines)
          ) {
            prefix = 'NEWLINE';
          } else {
            prefix = 'SPACE';
            this._output.space_before_token = true;
          }
        }
      } else if (
        this._flags.last_token.type === TOKEN.SEMICOLON &&
        this._flags.mode === MODE.BlockStatement
      ) {
        prefix = 'NEWLINE';
      } else if (
        this._flags.last_token.type === TOKEN.SEMICOLON &&
        is_expression(this._flags.mode)
      ) {
        prefix = 'SPACE';
      } else if (this._flags.last_token.type === TOKEN.STRING) {
        prefix = 'NEWLINE';
      } else if (
        this._flags.last_token.type === TOKEN.RESERVED ||
        this._flags.last_token.type === TOKEN.WORD ||
        (this._flags.last_token.text === '*' &&
          (in_array(this._last_last_text, ['function', 'yield']) ||
            (this._flags.mode === MODE.ObjectLiteral &&
              in_array(this._last_last_text, ['{', ',']))))
      ) {
        prefix = 'SPACE';
      } else if (this._flags.last_token.type === TOKEN.START_BLOCK) {
        if (this._flags.inline_frame) {
          prefix = 'SPACE';
        } else {
          prefix = 'NEWLINE';
        }
      } else if (this._flags.last_token.type === TOKEN.END_EXPR) {
        this._output.space_before_token = true;
        prefix = 'NEWLINE';
      }
      if (
        reserved_array(current_token, line_starters) &&
        this._flags.last_token.text !== ')'
      ) {
        if (
          this._flags.inline_frame ||
          this._flags.last_token.text === 'else' ||
          this._flags.last_token.text === 'export'
        ) {
          prefix = 'SPACE';
        } else {
          prefix = 'NEWLINE';
        }
      }
      if (reserved_array(current_token, ['else', 'catch', 'finally'])) {
        if (
          (!(
            this._flags.last_token.type === TOKEN.END_BLOCK &&
            this._previous_flags.mode === MODE.BlockStatement
          ) ||
            this._options.brace_style === 'expand' ||
            this._options.brace_style === 'end-expand' ||
            (this._options.brace_style === 'none' && current_token.newlines)) &&
          !this._flags.inline_frame
        ) {
          this.print_newline();
        } else {
          this._output.trim(true);
          var line = this._output.current_line;
          if (line.last() !== '}') {
            this.print_newline();
          }
          this._output.space_before_token = true;
        }
      } else if (prefix === 'NEWLINE') {
        if (reserved_array(this._flags.last_token, special_words)) {
          this._output.space_before_token = true;
        } else if (
          this._flags.last_token.text === 'declare' &&
          reserved_array(current_token, ['var', 'let', 'const'])
        ) {
          this._output.space_before_token = true;
        } else if (this._flags.last_token.type !== TOKEN.END_EXPR) {
          if (
            (this._flags.last_token.type !== TOKEN.START_EXPR ||
              !reserved_array(current_token, ['var', 'let', 'const'])) &&
            this._flags.last_token.text !== ':'
          ) {
            if (
              reserved_word(current_token, 'if') &&
              reserved_word(current_token.previous, 'else')
            ) {
              this._output.space_before_token = true;
            } else {
              this.print_newline();
            }
          }
        } else if (
          reserved_array(current_token, line_starters) &&
          this._flags.last_token.text !== ')'
        ) {
          this.print_newline();
        }
      } else if (
        this._flags.multiline_frame &&
        is_array(this._flags.mode) &&
        this._flags.last_token.text === ',' &&
        this._last_last_text === '}'
      ) {
        this.print_newline();
      } else if (prefix === 'SPACE') {
        this._output.space_before_token = true;
      }
      if (
        current_token.previous &&
        (current_token.previous.type === TOKEN.WORD ||
          current_token.previous.type === TOKEN.RESERVED)
      ) {
        this._output.space_before_token = true;
      }
      this.print_token(current_token);
      this._flags.last_word = current_token.text;
      if (current_token.type === TOKEN.RESERVED) {
        if (current_token.text === 'do') {
          this._flags.do_block = true;
        } else if (current_token.text === 'if') {
          this._flags.if_block = true;
        } else if (current_token.text === 'import') {
          this._flags.import_block = true;
        } else if (
          this._flags.import_block &&
          reserved_word(current_token, 'from')
        ) {
          this._flags.import_block = false;
        }
      }
    };
    Beautifier.prototype.handle_semicolon = function (current_token) {
      if (this.start_of_statement(current_token)) {
        this._output.space_before_token = false;
      } else {
        this.handle_whitespace_and_comments(current_token);
      }
      var next_token = this._tokens.peek();
      while (
        this._flags.mode === MODE.Statement &&
        !(this._flags.if_block && reserved_word(next_token, 'else')) &&
        !this._flags.do_block
      ) {
        this.restore_mode();
      }
      if (this._flags.import_block) {
        this._flags.import_block = false;
      }
      this.print_token(current_token);
    };
    Beautifier.prototype.handle_string = function (current_token) {
      if (
        current_token.text.startsWith('`') &&
        current_token.newlines === 0 &&
        current_token.whitespace_before === '' &&
        (current_token.previous.text === ')' ||
          this._flags.last_token.type === TOKEN.WORD)
      ) {
      } else if (this.start_of_statement(current_token)) {
        this._output.space_before_token = true;
      } else {
        this.handle_whitespace_and_comments(current_token);
        if (
          this._flags.last_token.type === TOKEN.RESERVED ||
          this._flags.last_token.type === TOKEN.WORD ||
          this._flags.inline_frame
        ) {
          this._output.space_before_token = true;
        } else if (
          this._flags.last_token.type === TOKEN.COMMA ||
          this._flags.last_token.type === TOKEN.START_EXPR ||
          this._flags.last_token.type === TOKEN.EQUALS ||
          this._flags.last_token.type === TOKEN.OPERATOR
        ) {
          if (!this.start_of_object_property()) {
            this.allow_wrap_or_preserved_newline(current_token);
          }
        } else if (
          current_token.text.startsWith('`') &&
          this._flags.last_token.type === TOKEN.END_EXPR &&
          (current_token.previous.text === ']' ||
            current_token.previous.text === ')') &&
          current_token.newlines === 0
        ) {
          this._output.space_before_token = true;
        } else {
          this.print_newline();
        }
      }
      this.print_token(current_token);
    };
    Beautifier.prototype.handle_equals = function (current_token) {
      if (this.start_of_statement(current_token)) {
      } else {
        this.handle_whitespace_and_comments(current_token);
      }
      if (this._flags.declaration_statement) {
        this._flags.declaration_assignment = true;
      }
      this._output.space_before_token = true;
      this.print_token(current_token);
      this._output.space_before_token = true;
    };
    Beautifier.prototype.handle_comma = function (current_token) {
      this.handle_whitespace_and_comments(current_token, true);
      this.print_token(current_token);
      this._output.space_before_token = true;
      if (this._flags.declaration_statement) {
        if (is_expression(this._flags.parent.mode)) {
          this._flags.declaration_assignment = false;
        }
        if (this._flags.declaration_assignment) {
          this._flags.declaration_assignment = false;
          this.print_newline(false, true);
        } else if (this._options.comma_first) {
          this.allow_wrap_or_preserved_newline(current_token);
        }
      } else if (
        this._flags.mode === MODE.ObjectLiteral ||
        (this._flags.mode === MODE.Statement &&
          this._flags.parent.mode === MODE.ObjectLiteral)
      ) {
        if (this._flags.mode === MODE.Statement) {
          this.restore_mode();
        }
        if (!this._flags.inline_frame) {
          this.print_newline();
        }
      } else if (this._options.comma_first) {
        this.allow_wrap_or_preserved_newline(current_token);
      }
    };
    Beautifier.prototype.handle_operator = function (current_token) {
      var isGeneratorAsterisk =
        current_token.text === '*' &&
        (reserved_array(this._flags.last_token, ['function', 'yield']) ||
          in_array(this._flags.last_token.type, [
            TOKEN.START_BLOCK,
            TOKEN.COMMA,
            TOKEN.END_BLOCK,
            TOKEN.SEMICOLON,
          ]));
      var isUnary =
        in_array(current_token.text, ['-', '+']) &&
        (in_array(this._flags.last_token.type, [
          TOKEN.START_BLOCK,
          TOKEN.START_EXPR,
          TOKEN.EQUALS,
          TOKEN.OPERATOR,
        ]) ||
          in_array(this._flags.last_token.text, line_starters) ||
          this._flags.last_token.text === ',');
      if (this.start_of_statement(current_token)) {
      } else {
        var preserve_statement_flags = !isGeneratorAsterisk;
        this.handle_whitespace_and_comments(
          current_token,
          preserve_statement_flags
        );
      }
      if (
        current_token.text === '*' &&
        this._flags.last_token.type === TOKEN.DOT
      ) {
        this.print_token(current_token);
        return;
      }
      if (current_token.text === '::') {
        this.print_token(current_token);
        return;
      }
      if (
        this._flags.last_token.type === TOKEN.OPERATOR &&
        in_array(
          this._options.operator_position,
          OPERATOR_POSITION_BEFORE_OR_PRESERVE
        )
      ) {
        this.allow_wrap_or_preserved_newline(current_token);
      }
      if (current_token.text === ':' && this._flags.in_case) {
        this.print_token(current_token);
        this._flags.in_case = false;
        this._flags.case_body = true;
        if (this._tokens.peek().type !== TOKEN.START_BLOCK) {
          this.indent();
          this.print_newline();
          this._flags.case_block = false;
        } else {
          this._flags.case_block = true;
          this._output.space_before_token = true;
        }
        return;
      }
      var space_before = true;
      var space_after = true;
      var in_ternary = false;
      if (current_token.text === ':') {
        if (this._flags.ternary_depth === 0) {
          space_before = false;
        } else {
          this._flags.ternary_depth -= 1;
          in_ternary = true;
        }
      } else if (current_token.text === '?') {
        this._flags.ternary_depth += 1;
      }
      if (
        !isUnary &&
        !isGeneratorAsterisk &&
        this._options.preserve_newlines &&
        in_array(current_token.text, positionable_operators)
      ) {
        var isColon = current_token.text === ':';
        var isTernaryColon = isColon && in_ternary;
        var isOtherColon = isColon && !in_ternary;
        switch (this._options.operator_position) {
          case OPERATOR_POSITION.before_newline:
            this._output.space_before_token = !isOtherColon;
            this.print_token(current_token);
            if (!isColon || isTernaryColon) {
              this.allow_wrap_or_preserved_newline(current_token);
            }
            this._output.space_before_token = true;
            return;
          case OPERATOR_POSITION.after_newline:
            this._output.space_before_token = true;
            if (!isColon || isTernaryColon) {
              if (this._tokens.peek().newlines) {
                this.print_newline(false, true);
              } else {
                this.allow_wrap_or_preserved_newline(current_token);
              }
            } else {
              this._output.space_before_token = false;
            }
            this.print_token(current_token);
            this._output.space_before_token = true;
            return;
          case OPERATOR_POSITION.preserve_newline:
            if (!isOtherColon) {
              this.allow_wrap_or_preserved_newline(current_token);
            }
            space_before = !(this._output.just_added_newline() || isOtherColon);
            this._output.space_before_token = space_before;
            this.print_token(current_token);
            this._output.space_before_token = true;
            return;
        }
      }
      if (isGeneratorAsterisk) {
        this.allow_wrap_or_preserved_newline(current_token);
        space_before = false;
        var next_token = this._tokens.peek();
        space_after =
          next_token && in_array(next_token.type, [TOKEN.WORD, TOKEN.RESERVED]);
      } else if (current_token.text === '...') {
        this.allow_wrap_or_preserved_newline(current_token);
        space_before = this._flags.last_token.type === TOKEN.START_BLOCK;
        space_after = false;
      } else if (
        in_array(current_token.text, ['--', '++', '!', '~']) ||
        isUnary
      ) {
        if (
          this._flags.last_token.type === TOKEN.COMMA ||
          this._flags.last_token.type === TOKEN.START_EXPR
        ) {
          this.allow_wrap_or_preserved_newline(current_token);
        }
        space_before = false;
        space_after = false;
        if (
          current_token.newlines &&
          (current_token.text === '--' ||
            current_token.text === '++' ||
            current_token.text === '~')
        ) {
          var new_line_needed =
            reserved_array(this._flags.last_token, special_words) &&
            current_token.newlines;
          if (
            new_line_needed &&
            (this._previous_flags.if_block || this._previous_flags.else_block)
          ) {
            this.restore_mode();
          }
          this.print_newline(new_line_needed, true);
        }
        if (
          this._flags.last_token.text === ';' &&
          is_expression(this._flags.mode)
        ) {
          space_before = true;
        }
        if (this._flags.last_token.type === TOKEN.RESERVED) {
          space_before = true;
        } else if (this._flags.last_token.type === TOKEN.END_EXPR) {
          space_before = !(
            this._flags.last_token.text === ']' &&
            (current_token.text === '--' || current_token.text === '++')
          );
        } else if (this._flags.last_token.type === TOKEN.OPERATOR) {
          space_before =
            in_array(current_token.text, ['--', '-', '++', '+']) &&
            in_array(this._flags.last_token.text, ['--', '-', '++', '+']);
          if (
            in_array(current_token.text, ['+', '-']) &&
            in_array(this._flags.last_token.text, ['--', '++'])
          ) {
            space_after = true;
          }
        }
        if (
          ((this._flags.mode === MODE.BlockStatement &&
            !this._flags.inline_frame) ||
            this._flags.mode === MODE.Statement) &&
          (this._flags.last_token.text === '{' ||
            this._flags.last_token.text === ';')
        ) {
          this.print_newline();
        }
      }
      this._output.space_before_token =
        this._output.space_before_token || space_before;
      this.print_token(current_token);
      this._output.space_before_token = space_after;
    };
    Beautifier.prototype.handle_block_comment = function (
      current_token,
      preserve_statement_flags
    ) {
      if (this._output.raw) {
        this._output.add_raw_token(current_token);
        if (
          current_token.directives &&
          current_token.directives.preserve === 'end'
        ) {
          this._output.raw = this._options.test_output_raw;
        }
        return;
      }
      if (current_token.directives) {
        this.print_newline(false, preserve_statement_flags);
        this.print_token(current_token);
        if (current_token.directives.preserve === 'start') {
          this._output.raw = true;
        }
        this.print_newline(false, true);
        return;
      }
      if (!acorn.newline.test(current_token.text) && !current_token.newlines) {
        this._output.space_before_token = true;
        this.print_token(current_token);
        this._output.space_before_token = true;
        return;
      } else {
        this.print_block_commment(current_token, preserve_statement_flags);
      }
    };
    Beautifier.prototype.print_block_commment = function (
      current_token,
      preserve_statement_flags
    ) {
      var lines = split_linebreaks(current_token.text);
      var j2;
      var javadoc = false;
      var starless = false;
      var lastIndent = current_token.whitespace_before;
      var lastIndentLength = lastIndent.length;
      this.print_newline(false, preserve_statement_flags);
      this.print_token_line_indentation(current_token);
      this._output.add_token(lines[0]);
      this.print_newline(false, preserve_statement_flags);
      if (lines.length > 1) {
        lines = lines.slice(1);
        javadoc = all_lines_start_with(lines, '*');
        starless = each_line_matches_indent(lines, lastIndent);
        if (javadoc) {
          this._flags.alignment = 1;
        }
        for (j2 = 0; j2 < lines.length; j2++) {
          if (javadoc) {
            this.print_token_line_indentation(current_token);
            this._output.add_token(ltrim(lines[j2]));
          } else if (starless && lines[j2]) {
            this.print_token_line_indentation(current_token);
            this._output.add_token(lines[j2].substring(lastIndentLength));
          } else {
            this._output.current_line.set_indent(-1);
            this._output.add_token(lines[j2]);
          }
          this.print_newline(false, preserve_statement_flags);
        }
        this._flags.alignment = 0;
      }
    };
    Beautifier.prototype.handle_comment = function (
      current_token,
      preserve_statement_flags
    ) {
      if (current_token.newlines) {
        this.print_newline(false, preserve_statement_flags);
      } else {
        this._output.trim(true);
      }
      this._output.space_before_token = true;
      this.print_token(current_token);
      this.print_newline(false, preserve_statement_flags);
    };
    Beautifier.prototype.handle_dot = function (current_token) {
      if (this.start_of_statement(current_token)) {
      } else {
        this.handle_whitespace_and_comments(current_token, true);
      }
      if (this._flags.last_token.text.match('^[0-9]+$')) {
        this._output.space_before_token = true;
      }
      if (reserved_array(this._flags.last_token, special_words)) {
        this._output.space_before_token = false;
      } else {
        this.allow_wrap_or_preserved_newline(
          current_token,
          this._flags.last_token.text === ')' &&
            this._options.break_chained_methods
        );
      }
      if (
        this._options.unindent_chained_methods &&
        this._output.just_added_newline()
      ) {
        this.deindent();
      }
      this.print_token(current_token);
    };
    Beautifier.prototype.handle_unknown = function (
      current_token,
      preserve_statement_flags
    ) {
      this.print_token(current_token);
      if (current_token.text[current_token.text.length - 1] === '\n') {
        this.print_newline(false, preserve_statement_flags);
      }
    };
    Beautifier.prototype.handle_eof = function (current_token) {
      while (this._flags.mode === MODE.Statement) {
        this.restore_mode();
      }
      this.handle_whitespace_and_comments(current_token);
    };
    module2.exports.Beautifier = Beautifier;
  },
});

// ../../node_modules/js-beautify/js/src/javascript/index.js
var require_javascript = __commonJS({
  '../../node_modules/js-beautify/js/src/javascript/index.js'(
    exports2,
    module2
  ) {
    'use strict';
    var Beautifier = require_beautifier().Beautifier;
    var Options = require_options2().Options;
    function js_beautify(js_source_text, options) {
      var beautifier = new Beautifier(js_source_text, options);
      return beautifier.beautify();
    }
    module2.exports = js_beautify;
    module2.exports.defaultOptions = function () {
      return new Options();
    };
  },
});

// ../../node_modules/js-beautify/js/src/css/options.js
var require_options3 = __commonJS({
  '../../node_modules/js-beautify/js/src/css/options.js'(exports2, module2) {
    'use strict';
    var BaseOptions = require_options().Options;
    function Options(options) {
      BaseOptions.call(this, options, 'css');
      this.selector_separator_newline = this._get_boolean(
        'selector_separator_newline',
        true
      );
      this.newline_between_rules = this._get_boolean(
        'newline_between_rules',
        true
      );
      var space_around_selector_separator = this._get_boolean(
        'space_around_selector_separator'
      );
      this.space_around_combinator =
        this._get_boolean('space_around_combinator') ||
        space_around_selector_separator;
      var brace_style_split = this._get_selection_list('brace_style', [
        'collapse',
        'expand',
        'end-expand',
        'none',
        'preserve-inline',
      ]);
      this.brace_style = 'collapse';
      for (var bs2 = 0; bs2 < brace_style_split.length; bs2++) {
        if (brace_style_split[bs2] !== 'expand') {
          this.brace_style = 'collapse';
        } else {
          this.brace_style = brace_style_split[bs2];
        }
      }
    }
    Options.prototype = new BaseOptions();
    module2.exports.Options = Options;
  },
});

// ../../node_modules/js-beautify/js/src/css/beautifier.js
var require_beautifier2 = __commonJS({
  '../../node_modules/js-beautify/js/src/css/beautifier.js'(exports2, module2) {
    'use strict';
    var Options = require_options3().Options;
    var Output = require_output().Output;
    var InputScanner = require_inputscanner().InputScanner;
    var Directives = require_directives().Directives;
    var directives_core = new Directives(/\/\*/, /\*\//);
    var lineBreak = /\r\n|[\r\n]/;
    var allLineBreaks = /\r\n|[\r\n]/g;
    var whitespaceChar = /\s/;
    var whitespacePattern = /(?:\s|\n)+/g;
    var block_comment_pattern = /\/\*(?:[\s\S]*?)((?:\*\/)|$)/g;
    var comment_pattern = /\/\/(?:[^\n\r\u2028\u2029]*)/g;
    function Beautifier(source_text, options) {
      this._source_text = source_text || '';
      this._options = new Options(options);
      this._ch = null;
      this._input = null;
      this.NESTED_AT_RULE = {
        page: true,
        'font-face': true,
        keyframes: true,
        // also in CONDITIONAL_GROUP_RULE below
        media: true,
        supports: true,
        document: true,
      };
      this.CONDITIONAL_GROUP_RULE = {
        media: true,
        supports: true,
        document: true,
      };
      this.NON_SEMICOLON_NEWLINE_PROPERTY = [
        'grid-template-areas',
        'grid-template',
      ];
    }
    Beautifier.prototype.eatString = function (endChars) {
      var result = '';
      this._ch = this._input.next();
      while (this._ch) {
        result += this._ch;
        if (this._ch === '\\') {
          result += this._input.next();
        } else if (endChars.indexOf(this._ch) !== -1 || this._ch === '\n') {
          break;
        }
        this._ch = this._input.next();
      }
      return result;
    };
    Beautifier.prototype.eatWhitespace = function (allowAtLeastOneNewLine) {
      var result = whitespaceChar.test(this._input.peek());
      var newline_count = 0;
      while (whitespaceChar.test(this._input.peek())) {
        this._ch = this._input.next();
        if (allowAtLeastOneNewLine && this._ch === '\n') {
          if (
            newline_count === 0 ||
            newline_count < this._options.max_preserve_newlines
          ) {
            newline_count++;
            this._output.add_new_line(true);
          }
        }
      }
      return result;
    };
    Beautifier.prototype.foundNestedPseudoClass = function () {
      var openParen = 0;
      var i = 1;
      var ch = this._input.peek(i);
      while (ch) {
        if (ch === '{') {
          return true;
        } else if (ch === '(') {
          openParen += 1;
        } else if (ch === ')') {
          if (openParen === 0) {
            return false;
          }
          openParen -= 1;
        } else if (ch === ';' || ch === '}') {
          return false;
        }
        i++;
        ch = this._input.peek(i);
      }
      return false;
    };
    Beautifier.prototype.print_string = function (output_string) {
      this._output.set_indent(this._indentLevel);
      this._output.non_breaking_space = true;
      this._output.add_token(output_string);
    };
    Beautifier.prototype.preserveSingleSpace = function (isAfterSpace) {
      if (isAfterSpace) {
        this._output.space_before_token = true;
      }
    };
    Beautifier.prototype.indent = function () {
      this._indentLevel++;
    };
    Beautifier.prototype.outdent = function () {
      if (this._indentLevel > 0) {
        this._indentLevel--;
      }
    };
    Beautifier.prototype.beautify = function () {
      if (this._options.disabled) {
        return this._source_text;
      }
      var source_text = this._source_text;
      var eol = this._options.eol;
      if (eol === 'auto') {
        eol = '\n';
        if (source_text && lineBreak.test(source_text || '')) {
          eol = source_text.match(lineBreak)[0];
        }
      }
      source_text = source_text.replace(allLineBreaks, '\n');
      var baseIndentString = source_text.match(/^[\t ]*/)[0];
      this._output = new Output(this._options, baseIndentString);
      this._input = new InputScanner(source_text);
      this._indentLevel = 0;
      this._nestedLevel = 0;
      this._ch = null;
      var parenLevel = 0;
      var insideRule = false;
      var insidePropertyValue = false;
      var enteringConditionalGroup = false;
      var insideNonNestedAtRule = false;
      var insideScssMap = false;
      var topCharacter = this._ch;
      var insideNonSemiColonValues = false;
      var whitespace;
      var isAfterSpace;
      var previous_ch;
      while (true) {
        whitespace = this._input.read(whitespacePattern);
        isAfterSpace = whitespace !== '';
        previous_ch = topCharacter;
        this._ch = this._input.next();
        if (this._ch === '\\' && this._input.hasNext()) {
          this._ch += this._input.next();
        }
        topCharacter = this._ch;
        if (!this._ch) {
          break;
        } else if (this._ch === '/' && this._input.peek() === '*') {
          this._output.add_new_line();
          this._input.back();
          var comment = this._input.read(block_comment_pattern);
          var directives = directives_core.get_directives(comment);
          if (directives && directives.ignore === 'start') {
            comment += directives_core.readIgnored(this._input);
          }
          this.print_string(comment);
          this.eatWhitespace(true);
          this._output.add_new_line();
        } else if (this._ch === '/' && this._input.peek() === '/') {
          this._output.space_before_token = true;
          this._input.back();
          this.print_string(this._input.read(comment_pattern));
          this.eatWhitespace(true);
        } else if (this._ch === '$') {
          this.preserveSingleSpace(isAfterSpace);
          this.print_string(this._ch);
          var variable = this._input.peekUntilAfter(/[: ,;{}()[\]\/='"]/g);
          if (variable.match(/[ :]$/)) {
            variable = this.eatString(': ').replace(/\s$/, '');
            this.print_string(variable);
            this._output.space_before_token = true;
          }
          variable = variable.replace(/\s$/, '');
          if (parenLevel === 0 && variable.indexOf(':') !== -1) {
            insidePropertyValue = true;
            this.indent();
          }
        } else if (this._ch === '@') {
          this.preserveSingleSpace(isAfterSpace);
          if (this._input.peek() === '{') {
            this.print_string(this._ch + this.eatString('}'));
          } else {
            this.print_string(this._ch);
            var variableOrRule =
              this._input.peekUntilAfter(/[: ,;{}()[\]\/='"]/g);
            if (variableOrRule.match(/[ :]$/)) {
              variableOrRule = this.eatString(': ').replace(/\s$/, '');
              this.print_string(variableOrRule);
              this._output.space_before_token = true;
            }
            variableOrRule = variableOrRule.replace(/\s$/, '');
            if (parenLevel === 0 && variableOrRule.indexOf(':') !== -1) {
              insidePropertyValue = true;
              this.indent();
            } else if (variableOrRule in this.NESTED_AT_RULE) {
              this._nestedLevel += 1;
              if (variableOrRule in this.CONDITIONAL_GROUP_RULE) {
                enteringConditionalGroup = true;
              }
            } else if (parenLevel === 0 && !insidePropertyValue) {
              insideNonNestedAtRule = true;
            }
          }
        } else if (this._ch === '#' && this._input.peek() === '{') {
          this.preserveSingleSpace(isAfterSpace);
          this.print_string(this._ch + this.eatString('}'));
        } else if (this._ch === '{') {
          if (insidePropertyValue) {
            insidePropertyValue = false;
            this.outdent();
          }
          insideNonNestedAtRule = false;
          if (enteringConditionalGroup) {
            enteringConditionalGroup = false;
            insideRule = this._indentLevel >= this._nestedLevel;
          } else {
            insideRule = this._indentLevel >= this._nestedLevel - 1;
          }
          if (this._options.newline_between_rules && insideRule) {
            if (
              this._output.previous_line &&
              this._output.previous_line.item(-1) !== '{'
            ) {
              this._output.ensure_empty_line_above('/', ',');
            }
          }
          this._output.space_before_token = true;
          if (this._options.brace_style === 'expand') {
            this._output.add_new_line();
            this.print_string(this._ch);
            this.indent();
            this._output.set_indent(this._indentLevel);
          } else {
            if (previous_ch === '(') {
              this._output.space_before_token = false;
            } else if (previous_ch !== ',') {
              this.indent();
            }
            this.print_string(this._ch);
          }
          this.eatWhitespace(true);
          this._output.add_new_line();
        } else if (this._ch === '}') {
          this.outdent();
          this._output.add_new_line();
          if (previous_ch === '{') {
            this._output.trim(true);
          }
          if (insidePropertyValue) {
            this.outdent();
            insidePropertyValue = false;
          }
          this.print_string(this._ch);
          insideRule = false;
          if (this._nestedLevel) {
            this._nestedLevel--;
          }
          this.eatWhitespace(true);
          this._output.add_new_line();
          if (
            this._options.newline_between_rules &&
            !this._output.just_added_blankline()
          ) {
            if (this._input.peek() !== '}') {
              this._output.add_new_line(true);
            }
          }
          if (this._input.peek() === ')') {
            this._output.trim(true);
            if (this._options.brace_style === 'expand') {
              this._output.add_new_line(true);
            }
          }
        } else if (this._ch === ':') {
          for (var i = 0; i < this.NON_SEMICOLON_NEWLINE_PROPERTY.length; i++) {
            if (this._input.lookBack(this.NON_SEMICOLON_NEWLINE_PROPERTY[i])) {
              insideNonSemiColonValues = true;
              break;
            }
          }
          if (
            (insideRule || enteringConditionalGroup) &&
            !(this._input.lookBack('&') || this.foundNestedPseudoClass()) &&
            !this._input.lookBack('(') &&
            !insideNonNestedAtRule &&
            parenLevel === 0
          ) {
            this.print_string(':');
            if (!insidePropertyValue) {
              insidePropertyValue = true;
              this._output.space_before_token = true;
              this.eatWhitespace(true);
              this.indent();
            }
          } else {
            if (this._input.lookBack(' ')) {
              this._output.space_before_token = true;
            }
            if (this._input.peek() === ':') {
              this._ch = this._input.next();
              this.print_string('::');
            } else {
              this.print_string(':');
            }
          }
        } else if (this._ch === '"' || this._ch === "'") {
          var preserveQuoteSpace = previous_ch === '"' || previous_ch === "'";
          this.preserveSingleSpace(preserveQuoteSpace || isAfterSpace);
          this.print_string(this._ch + this.eatString(this._ch));
          this.eatWhitespace(true);
        } else if (this._ch === ';') {
          insideNonSemiColonValues = false;
          if (parenLevel === 0) {
            if (insidePropertyValue) {
              this.outdent();
              insidePropertyValue = false;
            }
            insideNonNestedAtRule = false;
            this.print_string(this._ch);
            this.eatWhitespace(true);
            if (this._input.peek() !== '/') {
              this._output.add_new_line();
            }
          } else {
            this.print_string(this._ch);
            this.eatWhitespace(true);
            this._output.space_before_token = true;
          }
        } else if (this._ch === '(') {
          if (this._input.lookBack('url')) {
            this.print_string(this._ch);
            this.eatWhitespace();
            parenLevel++;
            this.indent();
            this._ch = this._input.next();
            if (this._ch === ')' || this._ch === '"' || this._ch === "'") {
              this._input.back();
            } else if (this._ch) {
              this.print_string(this._ch + this.eatString(')'));
              if (parenLevel) {
                parenLevel--;
                this.outdent();
              }
            }
          } else {
            var space_needed = false;
            if (this._input.lookBack('with')) {
              space_needed = true;
            }
            this.preserveSingleSpace(isAfterSpace || space_needed);
            this.print_string(this._ch);
            if (
              insidePropertyValue &&
              previous_ch === '$' &&
              this._options.selector_separator_newline
            ) {
              this._output.add_new_line();
              insideScssMap = true;
            } else {
              this.eatWhitespace();
              parenLevel++;
              this.indent();
            }
          }
        } else if (this._ch === ')') {
          if (parenLevel) {
            parenLevel--;
            this.outdent();
          }
          if (
            insideScssMap &&
            this._input.peek() === ';' &&
            this._options.selector_separator_newline
          ) {
            insideScssMap = false;
            this.outdent();
            this._output.add_new_line();
          }
          this.print_string(this._ch);
        } else if (this._ch === ',') {
          this.print_string(this._ch);
          this.eatWhitespace(true);
          if (
            this._options.selector_separator_newline &&
            (!insidePropertyValue || insideScssMap) &&
            parenLevel === 0 &&
            !insideNonNestedAtRule
          ) {
            this._output.add_new_line();
          } else {
            this._output.space_before_token = true;
          }
        } else if (
          (this._ch === '>' || this._ch === '+' || this._ch === '~') &&
          !insidePropertyValue &&
          parenLevel === 0
        ) {
          if (this._options.space_around_combinator) {
            this._output.space_before_token = true;
            this.print_string(this._ch);
            this._output.space_before_token = true;
          } else {
            this.print_string(this._ch);
            this.eatWhitespace();
            if (this._ch && whitespaceChar.test(this._ch)) {
              this._ch = '';
            }
          }
        } else if (this._ch === ']') {
          this.print_string(this._ch);
        } else if (this._ch === '[') {
          this.preserveSingleSpace(isAfterSpace);
          this.print_string(this._ch);
        } else if (this._ch === '=') {
          this.eatWhitespace();
          this.print_string('=');
          if (whitespaceChar.test(this._ch)) {
            this._ch = '';
          }
        } else if (this._ch === '!' && !this._input.lookBack('\\')) {
          this._output.space_before_token = true;
          this.print_string(this._ch);
        } else {
          var preserveAfterSpace = previous_ch === '"' || previous_ch === "'";
          this.preserveSingleSpace(preserveAfterSpace || isAfterSpace);
          this.print_string(this._ch);
          if (
            !this._output.just_added_newline() &&
            this._input.peek() === '\n' &&
            insideNonSemiColonValues
          ) {
            this._output.add_new_line();
          }
        }
      }
      var sweetCode = this._output.get_code(eol);
      return sweetCode;
    };
    module2.exports.Beautifier = Beautifier;
  },
});

// ../../node_modules/js-beautify/js/src/css/index.js
var require_css = __commonJS({
  '../../node_modules/js-beautify/js/src/css/index.js'(exports2, module2) {
    'use strict';
    var Beautifier = require_beautifier2().Beautifier;
    var Options = require_options3().Options;
    function css_beautify(source_text, options) {
      var beautifier = new Beautifier(source_text, options);
      return beautifier.beautify();
    }
    module2.exports = css_beautify;
    module2.exports.defaultOptions = function () {
      return new Options();
    };
  },
});

// ../../node_modules/js-beautify/js/src/html/options.js
var require_options4 = __commonJS({
  '../../node_modules/js-beautify/js/src/html/options.js'(exports2, module2) {
    'use strict';
    var BaseOptions = require_options().Options;
    function Options(options) {
      BaseOptions.call(this, options, 'html');
      if (this.templating.length === 1 && this.templating[0] === 'auto') {
        this.templating = ['django', 'erb', 'handlebars', 'php'];
      }
      this.indent_inner_html = this._get_boolean('indent_inner_html');
      this.indent_body_inner_html = this._get_boolean(
        'indent_body_inner_html',
        true
      );
      this.indent_head_inner_html = this._get_boolean(
        'indent_head_inner_html',
        true
      );
      this.indent_handlebars = this._get_boolean('indent_handlebars', true);
      this.wrap_attributes = this._get_selection('wrap_attributes', [
        'auto',
        'force',
        'force-aligned',
        'force-expand-multiline',
        'aligned-multiple',
        'preserve',
        'preserve-aligned',
      ]);
      this.wrap_attributes_min_attrs = this._get_number(
        'wrap_attributes_min_attrs',
        2
      );
      this.wrap_attributes_indent_size = this._get_number(
        'wrap_attributes_indent_size',
        this.indent_size
      );
      this.extra_liners = this._get_array('extra_liners', [
        'head',
        'body',
        '/html',
      ]);
      this.inline = this._get_array('inline', [
        'a',
        'abbr',
        'area',
        'audio',
        'b',
        'bdi',
        'bdo',
        'br',
        'button',
        'canvas',
        'cite',
        'code',
        'data',
        'datalist',
        'del',
        'dfn',
        'em',
        'embed',
        'i',
        'iframe',
        'img',
        'input',
        'ins',
        'kbd',
        'keygen',
        'label',
        'map',
        'mark',
        'math',
        'meter',
        'noscript',
        'object',
        'output',
        'progress',
        'q',
        'ruby',
        's',
        'samp',
        /* 'script', */
        'select',
        'small',
        'span',
        'strong',
        'sub',
        'sup',
        'svg',
        'template',
        'textarea',
        'time',
        'u',
        'var',
        'video',
        'wbr',
        'text',
        // obsolete inline tags
        'acronym',
        'big',
        'strike',
        'tt',
      ]);
      this.inline_custom_elements = this._get_boolean(
        'inline_custom_elements',
        true
      );
      this.void_elements = this._get_array('void_elements', [
        // HTLM void elements - aka self-closing tags - aka singletons
        // https://www.w3.org/html/wg/drafts/html/master/syntax.html#void-elements
        'area',
        'base',
        'br',
        'col',
        'embed',
        'hr',
        'img',
        'input',
        'keygen',
        'link',
        'menuitem',
        'meta',
        'param',
        'source',
        'track',
        'wbr',
        // NOTE: Optional tags are too complex for a simple list
        // they are hard coded in _do_optional_end_element
        // Doctype and xml elements
        '!doctype',
        '?xml',
        // obsolete tags
        // basefont: https://www.computerhope.com/jargon/h/html-basefont-tag.htm
        // isndex: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/isindex
        'basefont',
        'isindex',
      ]);
      this.unformatted = this._get_array('unformatted', []);
      this.content_unformatted = this._get_array('content_unformatted', [
        'pre',
        'textarea',
      ]);
      this.unformatted_content_delimiter = this._get_characters(
        'unformatted_content_delimiter'
      );
      this.indent_scripts = this._get_selection('indent_scripts', [
        'normal',
        'keep',
        'separate',
      ]);
    }
    Options.prototype = new BaseOptions();
    module2.exports.Options = Options;
  },
});

// ../../node_modules/js-beautify/js/src/html/tokenizer.js
var require_tokenizer3 = __commonJS({
  '../../node_modules/js-beautify/js/src/html/tokenizer.js'(exports2, module2) {
    'use strict';
    var BaseTokenizer = require_tokenizer().Tokenizer;
    var BASETOKEN = require_tokenizer().TOKEN;
    var Directives = require_directives().Directives;
    var TemplatablePattern = require_templatablepattern().TemplatablePattern;
    var Pattern = require_pattern().Pattern;
    var TOKEN = {
      TAG_OPEN: 'TK_TAG_OPEN',
      TAG_CLOSE: 'TK_TAG_CLOSE',
      ATTRIBUTE: 'TK_ATTRIBUTE',
      EQUALS: 'TK_EQUALS',
      VALUE: 'TK_VALUE',
      COMMENT: 'TK_COMMENT',
      TEXT: 'TK_TEXT',
      UNKNOWN: 'TK_UNKNOWN',
      START: BASETOKEN.START,
      RAW: BASETOKEN.RAW,
      EOF: BASETOKEN.EOF,
    };
    var directives_core = new Directives(/<\!--/, /-->/);
    var Tokenizer2 = function (input_string, options) {
      BaseTokenizer.call(this, input_string, options);
      this._current_tag_name = '';
      var templatable_reader = new TemplatablePattern(this._input).read_options(
        this._options
      );
      var pattern_reader = new Pattern(this._input);
      this.__patterns = {
        word: templatable_reader.until(/[\n\r\t <]/),
        single_quote: templatable_reader.until_after(/'/),
        double_quote: templatable_reader.until_after(/"/),
        attribute: templatable_reader.until(/[\n\r\t =>]|\/>/),
        element_name: templatable_reader.until(/[\n\r\t >\/]/),
        handlebars_comment: pattern_reader
          .starting_with(/{{!--/)
          .until_after(/--}}/),
        handlebars: pattern_reader.starting_with(/{{/).until_after(/}}/),
        handlebars_open: pattern_reader.until(/[\n\r\t }]/),
        handlebars_raw_close: pattern_reader.until(/}}/),
        comment: pattern_reader.starting_with(/<!--/).until_after(/-->/),
        cdata: pattern_reader.starting_with(/<!\[CDATA\[/).until_after(/]]>/),
        // https://en.wikipedia.org/wiki/Conditional_comment
        conditional_comment: pattern_reader
          .starting_with(/<!\[/)
          .until_after(/]>/),
        processing: pattern_reader.starting_with(/<\?/).until_after(/\?>/),
      };
      if (this._options.indent_handlebars) {
        this.__patterns.word = this.__patterns.word.exclude('handlebars');
      }
      this._unformatted_content_delimiter = null;
      if (this._options.unformatted_content_delimiter) {
        var literal_regexp = this._input.get_literal_regexp(
          this._options.unformatted_content_delimiter
        );
        this.__patterns.unformatted_content_delimiter = pattern_reader
          .matching(literal_regexp)
          .until_after(literal_regexp);
      }
    };
    Tokenizer2.prototype = new BaseTokenizer();
    Tokenizer2.prototype._is_comment = function (current_token) {
      return false;
    };
    Tokenizer2.prototype._is_opening = function (current_token) {
      return current_token.type === TOKEN.TAG_OPEN;
    };
    Tokenizer2.prototype._is_closing = function (current_token, open_token) {
      return (
        current_token.type === TOKEN.TAG_CLOSE &&
        open_token &&
        (((current_token.text === '>' || current_token.text === '/>') &&
          open_token.text[0] === '<') ||
          (current_token.text === '}}' &&
            open_token.text[0] === '{' &&
            open_token.text[1] === '{'))
      );
    };
    Tokenizer2.prototype._reset = function () {
      this._current_tag_name = '';
    };
    Tokenizer2.prototype._get_next_token = function (
      previous_token,
      open_token
    ) {
      var token2 = null;
      this._readWhitespace();
      var c2 = this._input.peek();
      if (c2 === null) {
        return this._create_token(TOKEN.EOF, '');
      }
      token2 = token2 || this._read_open_handlebars(c2, open_token);
      token2 = token2 || this._read_attribute(c2, previous_token, open_token);
      token2 = token2 || this._read_close(c2, open_token);
      token2 = token2 || this._read_raw_content(c2, previous_token, open_token);
      token2 = token2 || this._read_content_word(c2);
      token2 = token2 || this._read_comment_or_cdata(c2);
      token2 = token2 || this._read_processing(c2);
      token2 = token2 || this._read_open(c2, open_token);
      token2 = token2 || this._create_token(TOKEN.UNKNOWN, this._input.next());
      return token2;
    };
    Tokenizer2.prototype._read_comment_or_cdata = function (c2) {
      var token2 = null;
      var resulting_string = null;
      var directives = null;
      if (c2 === '<') {
        var peek1 = this._input.peek(1);
        if (peek1 === '!') {
          resulting_string = this.__patterns.comment.read();
          if (resulting_string) {
            directives = directives_core.get_directives(resulting_string);
            if (directives && directives.ignore === 'start') {
              resulting_string += directives_core.readIgnored(this._input);
            }
          } else {
            resulting_string = this.__patterns.cdata.read();
          }
        }
        if (resulting_string) {
          token2 = this._create_token(TOKEN.COMMENT, resulting_string);
          token2.directives = directives;
        }
      }
      return token2;
    };
    Tokenizer2.prototype._read_processing = function (c2) {
      var token2 = null;
      var resulting_string = null;
      var directives = null;
      if (c2 === '<') {
        var peek1 = this._input.peek(1);
        if (peek1 === '!' || peek1 === '?') {
          resulting_string = this.__patterns.conditional_comment.read();
          resulting_string =
            resulting_string || this.__patterns.processing.read();
        }
        if (resulting_string) {
          token2 = this._create_token(TOKEN.COMMENT, resulting_string);
          token2.directives = directives;
        }
      }
      return token2;
    };
    Tokenizer2.prototype._read_open = function (c2, open_token) {
      var resulting_string = null;
      var token2 = null;
      if (!open_token) {
        if (c2 === '<') {
          resulting_string = this._input.next();
          if (this._input.peek() === '/') {
            resulting_string += this._input.next();
          }
          resulting_string += this.__patterns.element_name.read();
          token2 = this._create_token(TOKEN.TAG_OPEN, resulting_string);
        }
      }
      return token2;
    };
    Tokenizer2.prototype._read_open_handlebars = function (c2, open_token) {
      var resulting_string = null;
      var token2 = null;
      if (!open_token) {
        if (
          this._options.indent_handlebars &&
          c2 === '{' &&
          this._input.peek(1) === '{'
        ) {
          if (this._input.peek(2) === '!') {
            resulting_string = this.__patterns.handlebars_comment.read();
            resulting_string =
              resulting_string || this.__patterns.handlebars.read();
            token2 = this._create_token(TOKEN.COMMENT, resulting_string);
          } else {
            resulting_string = this.__patterns.handlebars_open.read();
            token2 = this._create_token(TOKEN.TAG_OPEN, resulting_string);
          }
        }
      }
      return token2;
    };
    Tokenizer2.prototype._read_close = function (c2, open_token) {
      var resulting_string = null;
      var token2 = null;
      if (open_token) {
        if (
          open_token.text[0] === '<' &&
          (c2 === '>' || (c2 === '/' && this._input.peek(1) === '>'))
        ) {
          resulting_string = this._input.next();
          if (c2 === '/') {
            resulting_string += this._input.next();
          }
          token2 = this._create_token(TOKEN.TAG_CLOSE, resulting_string);
        } else if (
          open_token.text[0] === '{' &&
          c2 === '}' &&
          this._input.peek(1) === '}'
        ) {
          this._input.next();
          this._input.next();
          token2 = this._create_token(TOKEN.TAG_CLOSE, '}}');
        }
      }
      return token2;
    };
    Tokenizer2.prototype._read_attribute = function (
      c2,
      previous_token,
      open_token
    ) {
      var token2 = null;
      var resulting_string = '';
      if (open_token && open_token.text[0] === '<') {
        if (c2 === '=') {
          token2 = this._create_token(TOKEN.EQUALS, this._input.next());
        } else if (c2 === '"' || c2 === "'") {
          var content = this._input.next();
          if (c2 === '"') {
            content += this.__patterns.double_quote.read();
          } else {
            content += this.__patterns.single_quote.read();
          }
          token2 = this._create_token(TOKEN.VALUE, content);
        } else {
          resulting_string = this.__patterns.attribute.read();
          if (resulting_string) {
            if (previous_token.type === TOKEN.EQUALS) {
              token2 = this._create_token(TOKEN.VALUE, resulting_string);
            } else {
              token2 = this._create_token(TOKEN.ATTRIBUTE, resulting_string);
            }
          }
        }
      }
      return token2;
    };
    Tokenizer2.prototype._is_content_unformatted = function (tag_name) {
      return (
        this._options.void_elements.indexOf(tag_name) === -1 &&
        (this._options.content_unformatted.indexOf(tag_name) !== -1 ||
          this._options.unformatted.indexOf(tag_name) !== -1)
      );
    };
    Tokenizer2.prototype._read_raw_content = function (
      c2,
      previous_token,
      open_token
    ) {
      var resulting_string = '';
      if (open_token && open_token.text[0] === '{') {
        resulting_string = this.__patterns.handlebars_raw_close.read();
      } else if (
        previous_token.type === TOKEN.TAG_CLOSE &&
        previous_token.opened.text[0] === '<' &&
        previous_token.text[0] !== '/'
      ) {
        var tag_name = previous_token.opened.text.substr(1).toLowerCase();
        if (tag_name === 'script' || tag_name === 'style') {
          var token2 = this._read_comment_or_cdata(c2);
          if (token2) {
            token2.type = TOKEN.TEXT;
            return token2;
          }
          resulting_string = this._input.readUntil(
            new RegExp('</' + tag_name + '[\\n\\r\\t ]*?>', 'ig')
          );
        } else if (this._is_content_unformatted(tag_name)) {
          resulting_string = this._input.readUntil(
            new RegExp('</' + tag_name + '[\\n\\r\\t ]*?>', 'ig')
          );
        }
      }
      if (resulting_string) {
        return this._create_token(TOKEN.TEXT, resulting_string);
      }
      return null;
    };
    Tokenizer2.prototype._read_content_word = function (c2) {
      var resulting_string = '';
      if (this._options.unformatted_content_delimiter) {
        if (c2 === this._options.unformatted_content_delimiter[0]) {
          resulting_string =
            this.__patterns.unformatted_content_delimiter.read();
        }
      }
      if (!resulting_string) {
        resulting_string = this.__patterns.word.read();
      }
      if (resulting_string) {
        return this._create_token(TOKEN.TEXT, resulting_string);
      }
    };
    module2.exports.Tokenizer = Tokenizer2;
    module2.exports.TOKEN = TOKEN;
  },
});

// ../../node_modules/js-beautify/js/src/html/beautifier.js
var require_beautifier3 = __commonJS({
  '../../node_modules/js-beautify/js/src/html/beautifier.js'(
    exports2,
    module2
  ) {
    'use strict';
    var Options = require_options4().Options;
    var Output = require_output().Output;
    var Tokenizer2 = require_tokenizer3().Tokenizer;
    var TOKEN = require_tokenizer3().TOKEN;
    var lineBreak = /\r\n|[\r\n]/;
    var allLineBreaks = /\r\n|[\r\n]/g;
    var Printer = function (options, base_indent_string) {
      this.indent_level = 0;
      this.alignment_size = 0;
      this.max_preserve_newlines = options.max_preserve_newlines;
      this.preserve_newlines = options.preserve_newlines;
      this._output = new Output(options, base_indent_string);
    };
    Printer.prototype.current_line_has_match = function (pattern) {
      return this._output.current_line.has_match(pattern);
    };
    Printer.prototype.set_space_before_token = function (value, non_breaking) {
      this._output.space_before_token = value;
      this._output.non_breaking_space = non_breaking;
    };
    Printer.prototype.set_wrap_point = function () {
      this._output.set_indent(this.indent_level, this.alignment_size);
      this._output.set_wrap_point();
    };
    Printer.prototype.add_raw_token = function (token2) {
      this._output.add_raw_token(token2);
    };
    Printer.prototype.print_preserved_newlines = function (raw_token) {
      var newlines = 0;
      if (
        raw_token.type !== TOKEN.TEXT &&
        raw_token.previous.type !== TOKEN.TEXT
      ) {
        newlines = raw_token.newlines ? 1 : 0;
      }
      if (this.preserve_newlines) {
        newlines =
          raw_token.newlines < this.max_preserve_newlines + 1
            ? raw_token.newlines
            : this.max_preserve_newlines + 1;
      }
      for (var n2 = 0; n2 < newlines; n2++) {
        this.print_newline(n2 > 0);
      }
      return newlines !== 0;
    };
    Printer.prototype.traverse_whitespace = function (raw_token) {
      if (raw_token.whitespace_before || raw_token.newlines) {
        if (!this.print_preserved_newlines(raw_token)) {
          this._output.space_before_token = true;
        }
        return true;
      }
      return false;
    };
    Printer.prototype.previous_token_wrapped = function () {
      return this._output.previous_token_wrapped;
    };
    Printer.prototype.print_newline = function (force) {
      this._output.add_new_line(force);
    };
    Printer.prototype.print_token = function (token2) {
      if (token2.text) {
        this._output.set_indent(this.indent_level, this.alignment_size);
        this._output.add_token(token2.text);
      }
    };
    Printer.prototype.indent = function () {
      this.indent_level++;
    };
    Printer.prototype.get_full_indent = function (level) {
      level = this.indent_level + (level || 0);
      if (level < 1) {
        return '';
      }
      return this._output.get_indent_string(level);
    };
    var get_type_attribute = function (start_token) {
      var result = null;
      var raw_token = start_token.next;
      while (raw_token.type !== TOKEN.EOF && start_token.closed !== raw_token) {
        if (raw_token.type === TOKEN.ATTRIBUTE && raw_token.text === 'type') {
          if (
            raw_token.next &&
            raw_token.next.type === TOKEN.EQUALS &&
            raw_token.next.next &&
            raw_token.next.next.type === TOKEN.VALUE
          ) {
            result = raw_token.next.next.text;
          }
          break;
        }
        raw_token = raw_token.next;
      }
      return result;
    };
    var get_custom_beautifier_name = function (tag_check, raw_token) {
      var typeAttribute = null;
      var result = null;
      if (!raw_token.closed) {
        return null;
      }
      if (tag_check === 'script') {
        typeAttribute = 'text/javascript';
      } else if (tag_check === 'style') {
        typeAttribute = 'text/css';
      }
      typeAttribute = get_type_attribute(raw_token) || typeAttribute;
      if (typeAttribute.search('text/css') > -1) {
        result = 'css';
      } else if (
        typeAttribute.search(
          /module|((text|application|dojo)\/(x-)?(javascript|ecmascript|jscript|livescript|(ld\+)?json|method|aspect))/
        ) > -1
      ) {
        result = 'javascript';
      } else if (
        typeAttribute.search(/(text|application|dojo)\/(x-)?(html)/) > -1
      ) {
        result = 'html';
      } else if (typeAttribute.search(/test\/null/) > -1) {
        result = 'null';
      }
      return result;
    };
    function in_array(what, arr) {
      return arr.indexOf(what) !== -1;
    }
    function TagFrame(parent, parser_token, indent_level) {
      this.parent = parent || null;
      this.tag = parser_token ? parser_token.tag_name : '';
      this.indent_level = indent_level || 0;
      this.parser_token = parser_token || null;
    }
    function TagStack(printer) {
      this._printer = printer;
      this._current_frame = null;
    }
    TagStack.prototype.get_parser_token = function () {
      return this._current_frame ? this._current_frame.parser_token : null;
    };
    TagStack.prototype.record_tag = function (parser_token) {
      var new_frame = new TagFrame(
        this._current_frame,
        parser_token,
        this._printer.indent_level
      );
      this._current_frame = new_frame;
    };
    TagStack.prototype._try_pop_frame = function (frame) {
      var parser_token = null;
      if (frame) {
        parser_token = frame.parser_token;
        this._printer.indent_level = frame.indent_level;
        this._current_frame = frame.parent;
      }
      return parser_token;
    };
    TagStack.prototype._get_frame = function (tag_list, stop_list) {
      var frame = this._current_frame;
      while (frame) {
        if (tag_list.indexOf(frame.tag) !== -1) {
          break;
        } else if (stop_list && stop_list.indexOf(frame.tag) !== -1) {
          frame = null;
          break;
        }
        frame = frame.parent;
      }
      return frame;
    };
    TagStack.prototype.try_pop = function (tag, stop_list) {
      var frame = this._get_frame([tag], stop_list);
      return this._try_pop_frame(frame);
    };
    TagStack.prototype.indent_to_tag = function (tag_list) {
      var frame = this._get_frame(tag_list);
      if (frame) {
        this._printer.indent_level = frame.indent_level;
      }
    };
    function Beautifier(source_text, options, js_beautify, css_beautify) {
      this._source_text = source_text || '';
      options = options || {};
      this._js_beautify = js_beautify;
      this._css_beautify = css_beautify;
      this._tag_stack = null;
      var optionHtml = new Options(options, 'html');
      this._options = optionHtml;
      this._is_wrap_attributes_force =
        this._options.wrap_attributes.substr(0, 'force'.length) === 'force';
      this._is_wrap_attributes_force_expand_multiline =
        this._options.wrap_attributes === 'force-expand-multiline';
      this._is_wrap_attributes_force_aligned =
        this._options.wrap_attributes === 'force-aligned';
      this._is_wrap_attributes_aligned_multiple =
        this._options.wrap_attributes === 'aligned-multiple';
      this._is_wrap_attributes_preserve =
        this._options.wrap_attributes.substr(0, 'preserve'.length) ===
        'preserve';
      this._is_wrap_attributes_preserve_aligned =
        this._options.wrap_attributes === 'preserve-aligned';
    }
    Beautifier.prototype.beautify = function () {
      if (this._options.disabled) {
        return this._source_text;
      }
      var source_text = this._source_text;
      var eol = this._options.eol;
      if (this._options.eol === 'auto') {
        eol = '\n';
        if (source_text && lineBreak.test(source_text)) {
          eol = source_text.match(lineBreak)[0];
        }
      }
      source_text = source_text.replace(allLineBreaks, '\n');
      var baseIndentString = source_text.match(/^[\t ]*/)[0];
      var last_token = {
        text: '',
        type: '',
      };
      var last_tag_token = new TagOpenParserToken();
      var printer = new Printer(this._options, baseIndentString);
      var tokens = new Tokenizer2(source_text, this._options).tokenize();
      this._tag_stack = new TagStack(printer);
      var parser_token = null;
      var raw_token = tokens.next();
      while (raw_token.type !== TOKEN.EOF) {
        if (
          raw_token.type === TOKEN.TAG_OPEN ||
          raw_token.type === TOKEN.COMMENT
        ) {
          parser_token = this._handle_tag_open(
            printer,
            raw_token,
            last_tag_token,
            last_token,
            tokens
          );
          last_tag_token = parser_token;
        } else if (
          raw_token.type === TOKEN.ATTRIBUTE ||
          raw_token.type === TOKEN.EQUALS ||
          raw_token.type === TOKEN.VALUE ||
          (raw_token.type === TOKEN.TEXT && !last_tag_token.tag_complete)
        ) {
          parser_token = this._handle_inside_tag(
            printer,
            raw_token,
            last_tag_token,
            last_token
          );
        } else if (raw_token.type === TOKEN.TAG_CLOSE) {
          parser_token = this._handle_tag_close(
            printer,
            raw_token,
            last_tag_token
          );
        } else if (raw_token.type === TOKEN.TEXT) {
          parser_token = this._handle_text(printer, raw_token, last_tag_token);
        } else {
          printer.add_raw_token(raw_token);
        }
        last_token = parser_token;
        raw_token = tokens.next();
      }
      var sweet_code = printer._output.get_code(eol);
      return sweet_code;
    };
    Beautifier.prototype._handle_tag_close = function (
      printer,
      raw_token,
      last_tag_token
    ) {
      var parser_token = {
        text: raw_token.text,
        type: raw_token.type,
      };
      printer.alignment_size = 0;
      last_tag_token.tag_complete = true;
      printer.set_space_before_token(
        raw_token.newlines || raw_token.whitespace_before !== '',
        true
      );
      if (last_tag_token.is_unformatted) {
        printer.add_raw_token(raw_token);
      } else {
        if (last_tag_token.tag_start_char === '<') {
          printer.set_space_before_token(raw_token.text[0] === '/', true);
          if (
            this._is_wrap_attributes_force_expand_multiline &&
            last_tag_token.has_wrapped_attrs
          ) {
            printer.print_newline(false);
          }
        }
        printer.print_token(raw_token);
      }
      if (
        last_tag_token.indent_content &&
        !(
          last_tag_token.is_unformatted || last_tag_token.is_content_unformatted
        )
      ) {
        printer.indent();
        last_tag_token.indent_content = false;
      }
      if (
        !last_tag_token.is_inline_element &&
        !(
          last_tag_token.is_unformatted || last_tag_token.is_content_unformatted
        )
      ) {
        printer.set_wrap_point();
      }
      return parser_token;
    };
    Beautifier.prototype._handle_inside_tag = function (
      printer,
      raw_token,
      last_tag_token,
      last_token
    ) {
      var wrapped = last_tag_token.has_wrapped_attrs;
      var parser_token = {
        text: raw_token.text,
        type: raw_token.type,
      };
      printer.set_space_before_token(
        raw_token.newlines || raw_token.whitespace_before !== '',
        true
      );
      if (last_tag_token.is_unformatted) {
        printer.add_raw_token(raw_token);
      } else if (
        last_tag_token.tag_start_char === '{' &&
        raw_token.type === TOKEN.TEXT
      ) {
        if (printer.print_preserved_newlines(raw_token)) {
          raw_token.newlines = 0;
          printer.add_raw_token(raw_token);
        } else {
          printer.print_token(raw_token);
        }
      } else {
        if (raw_token.type === TOKEN.ATTRIBUTE) {
          printer.set_space_before_token(true);
        } else if (raw_token.type === TOKEN.EQUALS) {
          printer.set_space_before_token(false);
        } else if (
          raw_token.type === TOKEN.VALUE &&
          raw_token.previous.type === TOKEN.EQUALS
        ) {
          printer.set_space_before_token(false);
        }
        if (
          raw_token.type === TOKEN.ATTRIBUTE &&
          last_tag_token.tag_start_char === '<'
        ) {
          if (
            this._is_wrap_attributes_preserve ||
            this._is_wrap_attributes_preserve_aligned
          ) {
            printer.traverse_whitespace(raw_token);
            wrapped = wrapped || raw_token.newlines !== 0;
          }
          if (
            this._is_wrap_attributes_force &&
            last_tag_token.attr_count >=
              this._options.wrap_attributes_min_attrs &&
            (last_token.type !== TOKEN.TAG_OPEN || // ie. second attribute and beyond
              this._is_wrap_attributes_force_expand_multiline)
          ) {
            printer.print_newline(false);
            wrapped = true;
          }
        }
        printer.print_token(raw_token);
        wrapped = wrapped || printer.previous_token_wrapped();
        last_tag_token.has_wrapped_attrs = wrapped;
      }
      return parser_token;
    };
    Beautifier.prototype._handle_text = function (
      printer,
      raw_token,
      last_tag_token
    ) {
      var parser_token = {
        text: raw_token.text,
        type: 'TK_CONTENT',
      };
      if (last_tag_token.custom_beautifier_name) {
        this._print_custom_beatifier_text(printer, raw_token, last_tag_token);
      } else if (
        last_tag_token.is_unformatted ||
        last_tag_token.is_content_unformatted
      ) {
        printer.add_raw_token(raw_token);
      } else {
        printer.traverse_whitespace(raw_token);
        printer.print_token(raw_token);
      }
      return parser_token;
    };
    Beautifier.prototype._print_custom_beatifier_text = function (
      printer,
      raw_token,
      last_tag_token
    ) {
      var local = this;
      if (raw_token.text !== '') {
        var text = raw_token.text,
          _beautifier,
          script_indent_level = 1,
          pre = '',
          post = '';
        if (
          last_tag_token.custom_beautifier_name === 'javascript' &&
          typeof this._js_beautify === 'function'
        ) {
          _beautifier = this._js_beautify;
        } else if (
          last_tag_token.custom_beautifier_name === 'css' &&
          typeof this._css_beautify === 'function'
        ) {
          _beautifier = this._css_beautify;
        } else if (last_tag_token.custom_beautifier_name === 'html') {
          _beautifier = function (html_source, options) {
            var beautifier = new Beautifier(
              html_source,
              options,
              local._js_beautify,
              local._css_beautify
            );
            return beautifier.beautify();
          };
        }
        if (this._options.indent_scripts === 'keep') {
          script_indent_level = 0;
        } else if (this._options.indent_scripts === 'separate') {
          script_indent_level = -printer.indent_level;
        }
        var indentation = printer.get_full_indent(script_indent_level);
        text = text.replace(/\n[ \t]*$/, '');
        if (
          last_tag_token.custom_beautifier_name !== 'html' &&
          text[0] === '<' &&
          text.match(/^(<!--|<!\[CDATA\[)/)
        ) {
          var matched =
            /^(<!--[^\n]*|<!\[CDATA\[)(\n?)([ \t\n]*)([\s\S]*)(-->|]]>)$/.exec(
              text
            );
          if (!matched) {
            printer.add_raw_token(raw_token);
            return;
          }
          pre = indentation + matched[1] + '\n';
          text = matched[4];
          if (matched[5]) {
            post = indentation + matched[5];
          }
          text = text.replace(/\n[ \t]*$/, '');
          if (matched[2] || matched[3].indexOf('\n') !== -1) {
            matched = matched[3].match(/[ \t]+$/);
            if (matched) {
              raw_token.whitespace_before = matched[0];
            }
          }
        }
        if (text) {
          if (_beautifier) {
            var Child_options = function () {
              this.eol = '\n';
            };
            Child_options.prototype = this._options.raw_options;
            var child_options = new Child_options();
            text = _beautifier(indentation + text, child_options);
          } else {
            var white = raw_token.whitespace_before;
            if (white) {
              text = text.replace(new RegExp('\n(' + white + ')?', 'g'), '\n');
            }
            text = indentation + text.replace(/\n/g, '\n' + indentation);
          }
        }
        if (pre) {
          if (!text) {
            text = pre + post;
          } else {
            text = pre + text + '\n' + post;
          }
        }
        printer.print_newline(false);
        if (text) {
          raw_token.text = text;
          raw_token.whitespace_before = '';
          raw_token.newlines = 0;
          printer.add_raw_token(raw_token);
          printer.print_newline(true);
        }
      }
    };
    Beautifier.prototype._handle_tag_open = function (
      printer,
      raw_token,
      last_tag_token,
      last_token,
      tokens
    ) {
      var parser_token = this._get_tag_open_token(raw_token);
      if (
        (last_tag_token.is_unformatted ||
          last_tag_token.is_content_unformatted) &&
        !last_tag_token.is_empty_element &&
        raw_token.type === TOKEN.TAG_OPEN &&
        !parser_token.is_start_tag
      ) {
        printer.add_raw_token(raw_token);
        parser_token.start_tag_token = this._tag_stack.try_pop(
          parser_token.tag_name
        );
      } else {
        printer.traverse_whitespace(raw_token);
        this._set_tag_position(
          printer,
          raw_token,
          parser_token,
          last_tag_token,
          last_token
        );
        if (!parser_token.is_inline_element) {
          printer.set_wrap_point();
        }
        printer.print_token(raw_token);
      }
      if (parser_token.is_start_tag && this._is_wrap_attributes_force) {
        var peek_index = 0;
        var peek_token;
        do {
          peek_token = tokens.peek(peek_index);
          if (peek_token.type === TOKEN.ATTRIBUTE) {
            parser_token.attr_count += 1;
          }
          peek_index += 1;
        } while (
          peek_token.type !== TOKEN.EOF &&
          peek_token.type !== TOKEN.TAG_CLOSE
        );
      }
      if (
        this._is_wrap_attributes_force_aligned ||
        this._is_wrap_attributes_aligned_multiple ||
        this._is_wrap_attributes_preserve_aligned
      ) {
        parser_token.alignment_size = raw_token.text.length + 1;
      }
      if (!parser_token.tag_complete && !parser_token.is_unformatted) {
        printer.alignment_size = parser_token.alignment_size;
      }
      return parser_token;
    };
    var TagOpenParserToken = function (parent, raw_token) {
      this.parent = parent || null;
      this.text = '';
      this.type = 'TK_TAG_OPEN';
      this.tag_name = '';
      this.is_inline_element = false;
      this.is_unformatted = false;
      this.is_content_unformatted = false;
      this.is_empty_element = false;
      this.is_start_tag = false;
      this.is_end_tag = false;
      this.indent_content = false;
      this.multiline_content = false;
      this.custom_beautifier_name = null;
      this.start_tag_token = null;
      this.attr_count = 0;
      this.has_wrapped_attrs = false;
      this.alignment_size = 0;
      this.tag_complete = false;
      this.tag_start_char = '';
      this.tag_check = '';
      if (!raw_token) {
        this.tag_complete = true;
      } else {
        var tag_check_match;
        this.tag_start_char = raw_token.text[0];
        this.text = raw_token.text;
        if (this.tag_start_char === '<') {
          tag_check_match = raw_token.text.match(/^<([^\s>]*)/);
          this.tag_check = tag_check_match ? tag_check_match[1] : '';
        } else {
          tag_check_match = raw_token.text.match(
            /^{{~?(?:[\^]|#\*?)?([^\s}]+)/
          );
          this.tag_check = tag_check_match ? tag_check_match[1] : '';
          if (
            (raw_token.text.startsWith('{{#>') ||
              raw_token.text.startsWith('{{~#>')) &&
            this.tag_check[0] === '>'
          ) {
            if (this.tag_check === '>' && raw_token.next !== null) {
              this.tag_check = raw_token.next.text.split(' ')[0];
            } else {
              this.tag_check = raw_token.text.split('>')[1];
            }
          }
        }
        this.tag_check = this.tag_check.toLowerCase();
        if (raw_token.type === TOKEN.COMMENT) {
          this.tag_complete = true;
        }
        this.is_start_tag = this.tag_check.charAt(0) !== '/';
        this.tag_name = !this.is_start_tag
          ? this.tag_check.substr(1)
          : this.tag_check;
        this.is_end_tag =
          !this.is_start_tag ||
          (raw_token.closed && raw_token.closed.text === '/>');
        var handlebar_starts = 2;
        if (this.tag_start_char === '{' && this.text.length >= 3) {
          if (this.text.charAt(2) === '~') {
            handlebar_starts = 3;
          }
        }
        this.is_end_tag =
          this.is_end_tag ||
          (this.tag_start_char === '{' &&
            (this.text.length < 3 ||
              /[^#\^]/.test(this.text.charAt(handlebar_starts))));
      }
    };
    Beautifier.prototype._get_tag_open_token = function (raw_token) {
      var parser_token = new TagOpenParserToken(
        this._tag_stack.get_parser_token(),
        raw_token
      );
      parser_token.alignment_size = this._options.wrap_attributes_indent_size;
      parser_token.is_end_tag =
        parser_token.is_end_tag ||
        in_array(parser_token.tag_check, this._options.void_elements);
      parser_token.is_empty_element =
        parser_token.tag_complete ||
        (parser_token.is_start_tag && parser_token.is_end_tag);
      parser_token.is_unformatted =
        !parser_token.tag_complete &&
        in_array(parser_token.tag_check, this._options.unformatted);
      parser_token.is_content_unformatted =
        !parser_token.is_empty_element &&
        in_array(parser_token.tag_check, this._options.content_unformatted);
      parser_token.is_inline_element =
        in_array(parser_token.tag_name, this._options.inline) ||
        (this._options.inline_custom_elements &&
          parser_token.tag_name.includes('-')) ||
        parser_token.tag_start_char === '{';
      return parser_token;
    };
    Beautifier.prototype._set_tag_position = function (
      printer,
      raw_token,
      parser_token,
      last_tag_token,
      last_token
    ) {
      if (!parser_token.is_empty_element) {
        if (parser_token.is_end_tag) {
          parser_token.start_tag_token = this._tag_stack.try_pop(
            parser_token.tag_name
          );
        } else {
          if (this._do_optional_end_element(parser_token)) {
            if (!parser_token.is_inline_element) {
              printer.print_newline(false);
            }
          }
          this._tag_stack.record_tag(parser_token);
          if (
            (parser_token.tag_name === 'script' ||
              parser_token.tag_name === 'style') &&
            !(
              parser_token.is_unformatted || parser_token.is_content_unformatted
            )
          ) {
            parser_token.custom_beautifier_name = get_custom_beautifier_name(
              parser_token.tag_check,
              raw_token
            );
          }
        }
      }
      if (in_array(parser_token.tag_check, this._options.extra_liners)) {
        printer.print_newline(false);
        if (!printer._output.just_added_blankline()) {
          printer.print_newline(true);
        }
      }
      if (parser_token.is_empty_element) {
        if (
          parser_token.tag_start_char === '{' &&
          parser_token.tag_check === 'else'
        ) {
          this._tag_stack.indent_to_tag(['if', 'unless', 'each']);
          parser_token.indent_content = true;
          var foundIfOnCurrentLine = printer.current_line_has_match(/{{#if/);
          if (!foundIfOnCurrentLine) {
            printer.print_newline(false);
          }
        }
        if (
          parser_token.tag_name === '!--' &&
          last_token.type === TOKEN.TAG_CLOSE &&
          last_tag_token.is_end_tag &&
          parser_token.text.indexOf('\n') === -1
        ) {
        } else {
          if (
            !(parser_token.is_inline_element || parser_token.is_unformatted)
          ) {
            printer.print_newline(false);
          }
          this._calcluate_parent_multiline(printer, parser_token);
        }
      } else if (parser_token.is_end_tag) {
        var do_end_expand = false;
        do_end_expand =
          parser_token.start_tag_token &&
          parser_token.start_tag_token.multiline_content;
        do_end_expand =
          do_end_expand ||
          (!parser_token.is_inline_element &&
            !(
              last_tag_token.is_inline_element || last_tag_token.is_unformatted
            ) &&
            !(
              last_token.type === TOKEN.TAG_CLOSE &&
              parser_token.start_tag_token === last_tag_token
            ) &&
            last_token.type !== 'TK_CONTENT');
        if (
          parser_token.is_content_unformatted ||
          parser_token.is_unformatted
        ) {
          do_end_expand = false;
        }
        if (do_end_expand) {
          printer.print_newline(false);
        }
      } else {
        parser_token.indent_content = !parser_token.custom_beautifier_name;
        if (parser_token.tag_start_char === '<') {
          if (parser_token.tag_name === 'html') {
            parser_token.indent_content = this._options.indent_inner_html;
          } else if (parser_token.tag_name === 'head') {
            parser_token.indent_content = this._options.indent_head_inner_html;
          } else if (parser_token.tag_name === 'body') {
            parser_token.indent_content = this._options.indent_body_inner_html;
          }
        }
        if (
          !(parser_token.is_inline_element || parser_token.is_unformatted) &&
          (last_token.type !== 'TK_CONTENT' ||
            parser_token.is_content_unformatted)
        ) {
          printer.print_newline(false);
        }
        this._calcluate_parent_multiline(printer, parser_token);
      }
    };
    Beautifier.prototype._calcluate_parent_multiline = function (
      printer,
      parser_token
    ) {
      if (
        parser_token.parent &&
        printer._output.just_added_newline() &&
        !(
          (parser_token.is_inline_element || parser_token.is_unformatted) &&
          parser_token.parent.is_inline_element
        )
      ) {
        parser_token.parent.multiline_content = true;
      }
    };
    var p_closers = [
      'address',
      'article',
      'aside',
      'blockquote',
      'details',
      'div',
      'dl',
      'fieldset',
      'figcaption',
      'figure',
      'footer',
      'form',
      'h1',
      'h2',
      'h3',
      'h4',
      'h5',
      'h6',
      'header',
      'hr',
      'main',
      'menu',
      'nav',
      'ol',
      'p',
      'pre',
      'section',
      'table',
      'ul',
    ];
    var p_parent_excludes = [
      'a',
      'audio',
      'del',
      'ins',
      'map',
      'noscript',
      'video',
    ];
    Beautifier.prototype._do_optional_end_element = function (parser_token) {
      var result = null;
      if (
        parser_token.is_empty_element ||
        !parser_token.is_start_tag ||
        !parser_token.parent
      ) {
        return;
      }
      if (parser_token.tag_name === 'body') {
        result = result || this._tag_stack.try_pop('head');
      } else if (parser_token.tag_name === 'li') {
        result = result || this._tag_stack.try_pop('li', ['ol', 'ul', 'menu']);
      } else if (
        parser_token.tag_name === 'dd' ||
        parser_token.tag_name === 'dt'
      ) {
        result = result || this._tag_stack.try_pop('dt', ['dl']);
        result = result || this._tag_stack.try_pop('dd', ['dl']);
      } else if (
        parser_token.parent.tag_name === 'p' &&
        p_closers.indexOf(parser_token.tag_name) !== -1
      ) {
        var p_parent = parser_token.parent.parent;
        if (!p_parent || p_parent_excludes.indexOf(p_parent.tag_name) === -1) {
          result = result || this._tag_stack.try_pop('p');
        }
      } else if (
        parser_token.tag_name === 'rp' ||
        parser_token.tag_name === 'rt'
      ) {
        result = result || this._tag_stack.try_pop('rt', ['ruby', 'rtc']);
        result = result || this._tag_stack.try_pop('rp', ['ruby', 'rtc']);
      } else if (parser_token.tag_name === 'optgroup') {
        result = result || this._tag_stack.try_pop('optgroup', ['select']);
      } else if (parser_token.tag_name === 'option') {
        result =
          result ||
          this._tag_stack.try_pop('option', ['select', 'datalist', 'optgroup']);
      } else if (parser_token.tag_name === 'colgroup') {
        result = result || this._tag_stack.try_pop('caption', ['table']);
      } else if (parser_token.tag_name === 'thead') {
        result = result || this._tag_stack.try_pop('caption', ['table']);
        result = result || this._tag_stack.try_pop('colgroup', ['table']);
      } else if (
        parser_token.tag_name === 'tbody' ||
        parser_token.tag_name === 'tfoot'
      ) {
        result = result || this._tag_stack.try_pop('caption', ['table']);
        result = result || this._tag_stack.try_pop('colgroup', ['table']);
        result = result || this._tag_stack.try_pop('thead', ['table']);
        result = result || this._tag_stack.try_pop('tbody', ['table']);
      } else if (parser_token.tag_name === 'tr') {
        result = result || this._tag_stack.try_pop('caption', ['table']);
        result = result || this._tag_stack.try_pop('colgroup', ['table']);
        result =
          result ||
          this._tag_stack.try_pop('tr', ['table', 'thead', 'tbody', 'tfoot']);
      } else if (
        parser_token.tag_name === 'th' ||
        parser_token.tag_name === 'td'
      ) {
        result =
          result ||
          this._tag_stack.try_pop('td', [
            'table',
            'thead',
            'tbody',
            'tfoot',
            'tr',
          ]);
        result =
          result ||
          this._tag_stack.try_pop('th', [
            'table',
            'thead',
            'tbody',
            'tfoot',
            'tr',
          ]);
      }
      parser_token.parent = this._tag_stack.get_parser_token();
      return result;
    };
    module2.exports.Beautifier = Beautifier;
  },
});

// ../../node_modules/js-beautify/js/src/html/index.js
var require_html = __commonJS({
  '../../node_modules/js-beautify/js/src/html/index.js'(exports2, module2) {
    'use strict';
    var Beautifier = require_beautifier3().Beautifier;
    var Options = require_options4().Options;
    function style_html(html_source, options, js_beautify, css_beautify) {
      var beautifier = new Beautifier(
        html_source,
        options,
        js_beautify,
        css_beautify
      );
      return beautifier.beautify();
    }
    module2.exports = style_html;
    module2.exports.defaultOptions = function () {
      return new Options();
    };
  },
});

// ../../node_modules/js-beautify/js/src/index.js
var require_src7 = __commonJS({
  '../../node_modules/js-beautify/js/src/index.js'(exports2, module2) {
    'use strict';
    var js_beautify = require_javascript();
    var css_beautify = require_css();
    var html_beautify = require_html();
    function style_html(html_source, options, js2, css) {
      js2 = js2 || js_beautify;
      css = css || css_beautify;
      return html_beautify(html_source, options, js2, css);
    }
    style_html.defaultOptions = html_beautify.defaultOptions;
    module2.exports.js = js_beautify;
    module2.exports.css = css_beautify;
    module2.exports.html = style_html;
  },
});

// ../../node_modules/js-beautify/js/index.js
var require_js = __commonJS({
  '../../node_modules/js-beautify/js/index.js'(exports2, module2) {
    'use strict';
    function get_beautify(js_beautify, css_beautify, html_beautify) {
      var beautify = function (src, config2) {
        return js_beautify.js_beautify(src, config2);
      };
      beautify.js = js_beautify.js_beautify;
      beautify.css = css_beautify.css_beautify;
      beautify.html = html_beautify.html_beautify;
      beautify.js_beautify = js_beautify.js_beautify;
      beautify.css_beautify = css_beautify.css_beautify;
      beautify.html_beautify = html_beautify.html_beautify;
      return beautify;
    }
    if (typeof define === 'function' && define.amd) {
      define([
        './lib/beautify',
        './lib/beautify-css',
        './lib/beautify-html',
      ], function (js_beautify, css_beautify, html_beautify) {
        return get_beautify(js_beautify, css_beautify, html_beautify);
      });
    } else {
      (function (mod) {
        var beautifier = require_src7();
        beautifier.js_beautify = beautifier.js;
        beautifier.css_beautify = beautifier.css;
        beautifier.html_beautify = beautifier.html;
        mod.exports = get_beautify(beautifier, beautifier, beautifier);
      })(module2);
    }
  },
});

// ../../node_modules/is-whitespace/index.js
var require_is_whitespace = __commonJS({
  '../../node_modules/is-whitespace/index.js'(exports2, module2) {
    'use strict';
    var cache;
    module2.exports = function isWhitespace2(str) {
      return typeof str === 'string' && regex().test(str);
    };
    function regex() {
      return (
        cache ||
        (cache = new RegExp(
          '^[\\s	\n\v\f\r \xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF"]+$'
        ))
      );
    }
  },
});

// ../../node_modules/is-extendable/index.js
var require_is_extendable = __commonJS({
  '../../node_modules/is-extendable/index.js'(exports2, module2) {
    'use strict';
    module2.exports = function isExtendable(val) {
      return (
        typeof val !== 'undefined' &&
        val !== null &&
        (typeof val === 'object' || typeof val === 'function')
      );
    };
  },
});

// ../../node_modules/extend-shallow/index.js
var require_extend_shallow = __commonJS({
  '../../node_modules/extend-shallow/index.js'(exports2, module2) {
    'use strict';
    var isObject2 = require_is_extendable();
    module2.exports = function extend(o2) {
      if (!isObject2(o2)) {
        o2 = {};
      }
      var len = arguments.length;
      for (var i = 1; i < len; i++) {
        var obj = arguments[i];
        if (isObject2(obj)) {
          assign(o2, obj);
        }
      }
      return o2;
    };
    function assign(a, b) {
      for (var key in b) {
        if (hasOwn(b, key)) {
          a[key] = b[key];
        }
      }
    }
    function hasOwn(obj, key) {
      return Object.prototype.hasOwnProperty.call(obj, key);
    }
  },
});

// ../../node_modules/is-buffer/index.js
var require_is_buffer = __commonJS({
  '../../node_modules/is-buffer/index.js'(exports2, module2) {
    'use strict';
    module2.exports = function (obj) {
      return (
        obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)
      );
    };
    function isBuffer(obj) {
      return (
        !!obj.constructor &&
        typeof obj.constructor.isBuffer === 'function' &&
        obj.constructor.isBuffer(obj)
      );
    }
    function isSlowBuffer(obj) {
      return (
        typeof obj.readFloatLE === 'function' &&
        typeof obj.slice === 'function' &&
        isBuffer(obj.slice(0, 0))
      );
    }
  },
});

// ../../node_modules/kind-of/index.js
var require_kind_of = __commonJS({
  '../../node_modules/kind-of/index.js'(exports2, module2) {
    'use strict';
    var isBuffer = require_is_buffer();
    var toString = Object.prototype.toString;
    module2.exports = function kindOf(val) {
      if (typeof val === 'undefined') {
        return 'undefined';
      }
      if (val === null) {
        return 'null';
      }
      if (val === true || val === false || val instanceof Boolean) {
        return 'boolean';
      }
      if (typeof val === 'string' || val instanceof String) {
        return 'string';
      }
      if (typeof val === 'number' || val instanceof Number) {
        return 'number';
      }
      if (typeof val === 'function' || val instanceof Function) {
        return 'function';
      }
      if (typeof Array.isArray !== 'undefined' && Array.isArray(val)) {
        return 'array';
      }
      if (val instanceof RegExp) {
        return 'regexp';
      }
      if (val instanceof Date) {
        return 'date';
      }
      var type = toString.call(val);
      if (type === '[object RegExp]') {
        return 'regexp';
      }
      if (type === '[object Date]') {
        return 'date';
      }
      if (type === '[object Arguments]') {
        return 'arguments';
      }
      if (type === '[object Error]') {
        return 'error';
      }
      if (isBuffer(val)) {
        return 'buffer';
      }
      if (type === '[object Set]') {
        return 'set';
      }
      if (type === '[object WeakSet]') {
        return 'weakset';
      }
      if (type === '[object Map]') {
        return 'map';
      }
      if (type === '[object WeakMap]') {
        return 'weakmap';
      }
      if (type === '[object Symbol]') {
        return 'symbol';
      }
      if (type === '[object Int8Array]') {
        return 'int8array';
      }
      if (type === '[object Uint8Array]') {
        return 'uint8array';
      }
      if (type === '[object Uint8ClampedArray]') {
        return 'uint8clampedarray';
      }
      if (type === '[object Int16Array]') {
        return 'int16array';
      }
      if (type === '[object Uint16Array]') {
        return 'uint16array';
      }
      if (type === '[object Int32Array]') {
        return 'int32array';
      }
      if (type === '[object Uint32Array]') {
        return 'uint32array';
      }
      if (type === '[object Float32Array]') {
        return 'float32array';
      }
      if (type === '[object Float64Array]') {
        return 'float64array';
      }
      return 'object';
    };
  },
});

// ../../node_modules/condense-newlines/index.js
var require_condense_newlines = __commonJS({
  '../../node_modules/condense-newlines/index.js'(exports2, module2) {
    'use strict';
    var isWhitespace2 = require_is_whitespace();
    var extend = require_extend_shallow();
    var typeOf = require_kind_of();
    module2.exports = function (str, options) {
      var opts = extend({}, options);
      var sep = opts.sep || '\n\n';
      var min = opts.min;
      var re2;
      if (typeof min === 'number' && min !== 2) {
        re2 = new RegExp('(\\r\\n|\\n|\\u2424) {' + min + ',}');
      }
      if (typeof re2 === 'undefined') {
        re2 = opts.regex || /(\r\n|\n|\u2424){2,}/g;
      }
      if (opts.keepWhitespace !== true) {
        str = str
          .split('\n')
          .map(function (line) {
            return isWhitespace2(line) ? line.trim() : line;
          })
          .join('\n');
      }
      str = trailingNewline(str, opts);
      return str.replace(re2, sep);
    };
    function trailingNewline(str, options) {
      var val = options.trailingNewline;
      if (val === false) {
        return str;
      }
      switch (typeOf(val)) {
        case 'string':
          str = str.replace(/\s+$/, options.trailingNewline);
          break;
        case 'function':
          str = options.trailingNewline(str);
          break;
        case 'undefined':
        case 'boolean':
        default: {
          str = str.replace(/\s+$/, '\n');
          break;
        }
      }
      return str;
    }
  },
});

// ../../node_modules/pretty/index.js
var require_pretty = __commonJS({
  '../../node_modules/pretty/index.js'(exports2, module2) {
    'use strict';
    var beautify = require_js();
    var condense = require_condense_newlines();
    var extend = require_extend_shallow();
    var defaults = {
      unformatted: ['code', 'pre', 'em', 'strong', 'span'],
      indent_inner_html: true,
      indent_char: ' ',
      indent_size: 2,
      sep: '\n',
    };
    module2.exports = function pretty3(str, options) {
      var opts = extend({}, defaults, options);
      str = beautify.html(str, opts);
      if (opts.ocd === true) {
        if (opts.newlines) opts.sep = opts.newlines;
        return ocd(str, opts);
      }
      return str;
    };
    function ocd(str, options) {
      return condense(str, options)
        .replace(/^\s+/g, '')
        .replace(/\s+$/g, '\n')
        .replace(/(\s*<!--)/g, '\n$1')
        .replace(/>(\s*)(?=<!--\s*\/)/g, '> ');
    }
  },
});

// ../../node_modules/@react-email/render/dist/index.mjs
var dist_exports = {};
__export(dist_exports, {
  render: () => render2,
  renderAsync: () => renderAsync,
});
async function renderToString(children) {
  const stream = await (0, import_server.renderToReadableStream)(children);
  const html = await readableStreamToString(stream);
  return html.replace(/^<!DOCTYPE html>/, '').replace(/<!-- -->/g, '');
}
async function readableStreamToString(readableStream) {
  let result = '';
  const decoder = new TextDecoder();
  for await (const chunk of readableStream) {
    result += decoder.decode(chunk);
  }
  return result;
}
var ReactDomServer,
  import_pretty,
  import_pretty2,
  import_server,
  render2,
  renderAsPlainText,
  renderAsync;
var init_dist = __esm({
  '../../node_modules/@react-email/render/dist/index.mjs'() {
    'use strict';
    ReactDomServer = __toESM(require_server_node(), 1);
    init_html_to_text();
    import_pretty = __toESM(require_pretty(), 1);
    init_html_to_text();
    import_pretty2 = __toESM(require_pretty(), 1);
    import_server = __toESM(require_server_node(), 1);
    render2 = (component, options) => {
      if (options == null ? void 0 : options.plainText) {
        return renderAsPlainText(component, options);
      }
      const doctype =
        '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">';
      const markup = ReactDomServer.renderToStaticMarkup(component);
      const document2 = `${doctype}${markup}`;
      if (options && options.pretty) {
        return (0, import_pretty.default)(document2);
      }
      return document2;
    };
    renderAsPlainText = (component, _options) => {
      return convert(ReactDomServer.renderToStaticMarkup(component), {
        selectors: [
          { selector: 'img', format: 'skip' },
          { selector: '#__react-email-preview', format: 'skip' },
        ],
      });
    };
    renderAsync = async (component, options) => {
      const markup =
        typeof import_server.renderToStaticMarkup === 'undefined'
          ? await renderToString(component)
          : (0, import_server.renderToStaticMarkup)(component);
      if (options == null ? void 0 : options.plainText) {
        return convert(markup, {
          selectors: [
            { selector: 'img', format: 'skip' },
            { selector: '#__react-email-preview', format: 'skip' },
          ],
        });
      }
      const doctype =
        '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">';
      const document2 = `${doctype}${markup}`;
      if (options == null ? void 0 : options.pretty) {
        return (0, import_pretty2.default)(document2);
      }
      return document2;
    };
  },
});

// ../../node_modules/resend/build/package.json
var require_package = __commonJS({
  '../../node_modules/resend/build/package.json'(exports2, module2) {
    module2.exports = {
      name: 'resend',
      version: '0.17.2',
      description: 'Node.js library for the Resend API',
      main: 'build/src/index.js',
      typings: 'build/src/index.d.ts',
      files: ['build/'],
      scripts: {
        build: 'tsc -p .',
        lint: 'tslint -p tsconfig.json -c tslint.json',
        test: 'jest',
        'test:watch': 'jest --watch',
        prettier: 'prettier "src/**/*.{js,ts,tsx}" --check',
        format: 'prettier "src/**/*.{js,ts,tsx}" --write',
        prepublishOnly: 'yarn run build',
      },
      repository: {
        type: 'git',
        url: 'git+https://github.com/resend-inc/resend-node.git',
      },
      author: '',
      license: 'MIT',
      bugs: {
        url: 'https://github.com/resend-inc/resend-node/issues',
      },
      homepage: 'https://github.com/resend-inc/resend-node#readme',
      dependencies: {
        '@react-email/render': '0.0.7',
        axios: '1.4.0',
        'type-fest': '3.13.0',
      },
      devDependencies: {
        '@types/jest': '29.5.3',
        '@types/node': '18.16.2',
        '@types/react': '18.2.0',
        'axios-mock-adapter': '1.21.5',
        jest: '29.6.1',
        prettier: '3.0.0',
        supertest: '6.3.3',
        'ts-jest': '29.1.1',
        tslint: '6.1.3',
        typescript: '5.1.6',
      },
    };
  },
});

// ../../node_modules/resend/build/src/api-keys/api-keys.js
var require_api_keys = __commonJS({
  '../../node_modules/resend/build/src/api-keys/api-keys.js'(exports2) {
    'use strict';
    var __awaiter =
      (exports2 && exports2.__awaiter) ||
      function (thisArg, _arguments, P2, generator) {
        function adopt(value) {
          return value instanceof P2
            ? value
            : new P2(function (resolve) {
                resolve(value);
              });
        }
        return new (P2 || (P2 = Promise))(function (resolve, reject) {
          function fulfilled(value) {
            try {
              step(generator.next(value));
            } catch (e2) {
              reject(e2);
            }
          }
          function rejected(value) {
            try {
              step(generator['throw'](value));
            } catch (e2) {
              reject(e2);
            }
          }
          function step(result) {
            result.done
              ? resolve(result.value)
              : adopt(result.value).then(fulfilled, rejected);
          }
          step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      };
    Object.defineProperty(exports2, '__esModule', { value: true });
    exports2.ApiKeys = void 0;
    var ApiKeys = class {
      constructor(resend) {
        this.resend = resend;
      }
      create(payload, options = {}) {
        return __awaiter(this, void 0, void 0, function* () {
          const data = yield this.resend.post('/api-keys', payload, options);
          return data;
        });
      }
      list() {
        return __awaiter(this, void 0, void 0, function* () {
          const { data } = yield this.resend.get('/api-keys');
          return data;
        });
      }
      remove(id) {
        return __awaiter(this, void 0, void 0, function* () {
          yield this.resend.delete(`/api-keys/${id}`);
        });
      }
    };
    exports2.ApiKeys = ApiKeys;
  },
});

// ../../node_modules/resend/build/src/domains/domains.js
var require_domains = __commonJS({
  '../../node_modules/resend/build/src/domains/domains.js'(exports2) {
    'use strict';
    var __awaiter =
      (exports2 && exports2.__awaiter) ||
      function (thisArg, _arguments, P2, generator) {
        function adopt(value) {
          return value instanceof P2
            ? value
            : new P2(function (resolve) {
                resolve(value);
              });
        }
        return new (P2 || (P2 = Promise))(function (resolve, reject) {
          function fulfilled(value) {
            try {
              step(generator.next(value));
            } catch (e2) {
              reject(e2);
            }
          }
          function rejected(value) {
            try {
              step(generator['throw'](value));
            } catch (e2) {
              reject(e2);
            }
          }
          function step(result) {
            result.done
              ? resolve(result.value)
              : adopt(result.value).then(fulfilled, rejected);
          }
          step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      };
    Object.defineProperty(exports2, '__esModule', { value: true });
    exports2.Domains = void 0;
    var Domains = class {
      constructor(resend) {
        this.resend = resend;
      }
      create(payload, options = {}) {
        return __awaiter(this, void 0, void 0, function* () {
          const data = yield this.resend.post('/domains', payload, options);
          return data;
        });
      }
      list() {
        return __awaiter(this, void 0, void 0, function* () {
          const { data } = yield this.resend.get('/domains');
          return data;
        });
      }
      get(id) {
        return __awaiter(this, void 0, void 0, function* () {
          const data = yield this.resend.get(`/domains/${id}`);
          return data;
        });
      }
      remove(id) {
        return __awaiter(this, void 0, void 0, function* () {
          yield this.resend.delete(`/domains/${id}`);
        });
      }
      verify(id) {
        return __awaiter(this, void 0, void 0, function* () {
          yield this.resend.post(`/domains/${id}/verify`);
        });
      }
    };
    exports2.Domains = Domains;
  },
});

// ../../node_modules/resend/build/src/emails/emails.js
var require_emails = __commonJS({
  '../../node_modules/resend/build/src/emails/emails.js'(exports2) {
    'use strict';
    var __awaiter =
      (exports2 && exports2.__awaiter) ||
      function (thisArg, _arguments, P2, generator) {
        function adopt(value) {
          return value instanceof P2
            ? value
            : new P2(function (resolve) {
                resolve(value);
              });
        }
        return new (P2 || (P2 = Promise))(function (resolve, reject) {
          function fulfilled(value) {
            try {
              step(generator.next(value));
            } catch (e2) {
              reject(e2);
            }
          }
          function rejected(value) {
            try {
              step(generator['throw'](value));
            } catch (e2) {
              reject(e2);
            }
          }
          function step(result) {
            result.done
              ? resolve(result.value)
              : adopt(result.value).then(fulfilled, rejected);
          }
          step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      };
    Object.defineProperty(exports2, '__esModule', { value: true });
    exports2.Emails = void 0;
    var render_1 = (init_dist(), __toCommonJS(dist_exports));
    var Emails = class {
      constructor(resend) {
        this.resend = resend;
      }
      send(payload, options = {}) {
        return __awaiter(this, void 0, void 0, function* () {
          return this.create(payload, options);
        });
      }
      create(payload, options = {}) {
        return __awaiter(this, void 0, void 0, function* () {
          if (payload.react) {
            payload.html = (0, render_1.render)(payload.react);
            delete payload.react;
          }
          const data = yield this.resend.post('/emails', payload, options);
          return data;
        });
      }
      get(id) {
        return __awaiter(this, void 0, void 0, function* () {
          const data = yield this.resend.get(`/emails/${id}`);
          return data;
        });
      }
    };
    exports2.Emails = Emails;
  },
});

// ../../node_modules/resend/build/src/resend.js
var require_resend = __commonJS({
  '../../node_modules/resend/build/src/resend.js'(exports2) {
    'use strict';
    var __awaiter =
      (exports2 && exports2.__awaiter) ||
      function (thisArg, _arguments, P2, generator) {
        function adopt(value) {
          return value instanceof P2
            ? value
            : new P2(function (resolve) {
                resolve(value);
              });
        }
        return new (P2 || (P2 = Promise))(function (resolve, reject) {
          function fulfilled(value) {
            try {
              step(generator.next(value));
            } catch (e2) {
              reject(e2);
            }
          }
          function rejected(value) {
            try {
              step(generator['throw'](value));
            } catch (e2) {
              reject(e2);
            }
          }
          function step(result) {
            result.done
              ? resolve(result.value)
              : adopt(result.value).then(fulfilled, rejected);
          }
          step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      };
    var __importDefault =
      (exports2 && exports2.__importDefault) ||
      function (mod) {
        return mod && mod.__esModule ? mod : { default: mod };
      };
    Object.defineProperty(exports2, '__esModule', { value: true });
    exports2.Resend = void 0;
    var axios_1 = __importDefault(require_axios());
    var render_1 = (init_dist(), __toCommonJS(dist_exports));
    var package_json_1 = require_package();
    var api_keys_1 = require_api_keys();
    var domains_1 = require_domains();
    var emails_1 = require_emails();
    var baseUrl = process.env.RESEND_BASE_URL || 'https://api.resend.com';
    var userAgent =
      process.env.RESEND_USER_AGENT || `resend-node:${package_json_1.version}`;
    var Resend2 = class {
      constructor(key) {
        this.key = key;
        this.apiKeys = new api_keys_1.ApiKeys(this);
        this.domains = new domains_1.Domains(this);
        this.emails = new emails_1.Emails(this);
        if (!key) {
          this.key = process.env.RESEND_API_KEY;
          if (!this.key) {
            throw new Error(
              'Missing API key. Pass it to the constructor `new Resend("re_123")`'
            );
          }
        }
        this.headers = {
          Authorization: `Bearer ${this.key}`,
          'User-Agent': userAgent,
          'Content-Type': 'application/json',
        };
        this.request = axios_1.default.create({
          baseURL: baseUrl,
          headers: this.headers,
          maxContentLength: Infinity,
          maxBodyLength: Infinity,
        });
        this.request.interceptors.response.use(
          (response) => {
            if (response.data) {
              return response.data;
            }
            return response;
          },
          (error) => {
            var _a4, _b, _c2;
            if (
              (_b =
                (_a4 =
                  error === null || error === void 0
                    ? void 0
                    : error.response) === null || _a4 === void 0
                  ? void 0
                  : _a4.data) === null || _b === void 0
                ? void 0
                : _b.error
            ) {
              return Promise.reject(error.response.data.error);
            }
            if (
              (_c2 =
                error === null || error === void 0
                  ? void 0
                  : error.response) === null || _c2 === void 0
                ? void 0
                : _c2.data
            ) {
              return Promise.reject(error.response.data);
            }
            return Promise.reject(error);
          }
        );
      }
      post(path, entity, options) {
        return __awaiter(this, void 0, void 0, function* () {
          const requestHeaders = {};
          try {
            return yield this.request.post(path, entity, {
              params:
                options === null || options === void 0 ? void 0 : options.query,
              headers: requestHeaders,
            });
          } catch (error) {
            throw error;
          }
        });
      }
      get(path, options = {}) {
        return __awaiter(this, void 0, void 0, function* () {
          try {
            return yield this.request.get(path, {
              params: options.query,
            });
          } catch (error) {
            throw error;
          }
        });
      }
      put(path, entity, options = {}) {
        return __awaiter(this, void 0, void 0, function* () {
          const requestHeaders = {};
          try {
            return yield this.request.put(path, entity, {
              params: options.query,
              headers: requestHeaders,
            });
          } catch (error) {
            throw error;
          }
        });
      }
      delete(path, query) {
        return __awaiter(this, void 0, void 0, function* () {
          try {
            return yield this.request.delete(path, {
              params: query,
            });
          } catch (error) {
            throw error;
          }
        });
      }
      sendEmail(data) {
        return __awaiter(this, void 0, void 0, function* () {
          try {
            const path = `${baseUrl}/email`;
            if (data.react) {
              data.html = (0, render_1.render)(data.react);
              delete data.react;
            }
            const response = yield this.post(path, {
              from: data.from,
              to: data.to,
              bcc: data.bcc,
              cc: data.cc,
              reply_to: data.reply_to,
              subject: data.subject,
              text: data.text,
              html: data.html,
              attachments: data.attachments,
              tags: data.tags,
            });
            return response;
          } catch (error) {
            throw error;
          }
        });
      }
    };
    exports2.Resend = Resend2;
  },
});

// ../../node_modules/resend/build/src/index.js
var require_src8 = __commonJS({
  '../../node_modules/resend/build/src/index.js'(exports2) {
    'use strict';
    Object.defineProperty(exports2, '__esModule', { value: true });
    exports2.Resend = void 0;
    var resend_1 = require_resend();
    Object.defineProperty(exports2, 'Resend', {
      enumerable: true,
      get: function () {
        return resend_1.Resend;
      },
    });
  },
});

// node_modules/methods/index.js
var require_methods2 = __commonJS({
  'node_modules/methods/index.js'(exports2, module2) {
    'use strict';
    var http = require('http');
    module2.exports = getCurrentNodeMethods() || getBasicNodeMethods();
    function getCurrentNodeMethods() {
      return (
        http.METHODS &&
        http.METHODS.map(function lowerCaseMethod(method) {
          return method.toLowerCase();
        })
      );
    }
    function getBasicNodeMethods() {
      return [
        'get',
        'post',
        'put',
        'head',
        'delete',
        'options',
        'trace',
        'copy',
        'lock',
        'mkcol',
        'move',
        'purge',
        'propfind',
        'proppatch',
        'unlock',
        'report',
        'mkactivity',
        'checkout',
        'merge',
        'm-search',
        'notify',
        'subscribe',
        'unsubscribe',
        'patch',
        'search',
        'connect',
      ];
    }
  },
});

// node_modules/has-symbols/shams.js
var require_shams2 = __commonJS({
  'node_modules/has-symbols/shams.js'(exports2, module2) {
    'use strict';
    module2.exports = function hasSymbols() {
      if (
        typeof Symbol !== 'function' ||
        typeof Object.getOwnPropertySymbols !== 'function'
      ) {
        return false;
      }
      if (typeof Symbol.iterator === 'symbol') {
        return true;
      }
      var obj = {};
      var sym = Symbol('test');
      var symObj = Object(sym);
      if (typeof sym === 'string') {
        return false;
      }
      if (Object.prototype.toString.call(sym) !== '[object Symbol]') {
        return false;
      }
      if (Object.prototype.toString.call(symObj) !== '[object Symbol]') {
        return false;
      }
      var symVal = 42;
      obj[sym] = symVal;
      for (sym in obj) {
        return false;
      }
      if (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) {
        return false;
      }
      if (
        typeof Object.getOwnPropertyNames === 'function' &&
        Object.getOwnPropertyNames(obj).length !== 0
      ) {
        return false;
      }
      var syms = Object.getOwnPropertySymbols(obj);
      if (syms.length !== 1 || syms[0] !== sym) {
        return false;
      }
      if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) {
        return false;
      }
      if (typeof Object.getOwnPropertyDescriptor === 'function') {
        var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
        if (descriptor.value !== symVal || descriptor.enumerable !== true) {
          return false;
        }
      }
      return true;
    };
  },
});

// node_modules/has-symbols/index.js
var require_has_symbols2 = __commonJS({
  'node_modules/has-symbols/index.js'(exports2, module2) {
    'use strict';
    var origSymbol = typeof Symbol !== 'undefined' && Symbol;
    var hasSymbolSham = require_shams2();
    module2.exports = function hasNativeSymbols() {
      if (typeof origSymbol !== 'function') {
        return false;
      }
      if (typeof Symbol !== 'function') {
        return false;
      }
      if (typeof origSymbol('foo') !== 'symbol') {
        return false;
      }
      if (typeof Symbol('bar') !== 'symbol') {
        return false;
      }
      return hasSymbolSham();
    };
  },
});

// node_modules/has-proto/index.js
var require_has_proto = __commonJS({
  'node_modules/has-proto/index.js'(exports2, module2) {
    'use strict';
    var test2 = {
      foo: {},
    };
    var $Object = Object;
    module2.exports = function hasProto() {
      return (
        { __proto__: test2 }.foo === test2.foo &&
        !({ __proto__: null } instanceof $Object)
      );
    };
  },
});

// node_modules/function-bind/implementation.js
var require_implementation2 = __commonJS({
  'node_modules/function-bind/implementation.js'(exports2, module2) {
    'use strict';
    var ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';
    var slice = Array.prototype.slice;
    var toStr = Object.prototype.toString;
    var funcType = '[object Function]';
    module2.exports = function bind(that) {
      var target = this;
      if (typeof target !== 'function' || toStr.call(target) !== funcType) {
        throw new TypeError(ERROR_MESSAGE + target);
      }
      var args = slice.call(arguments, 1);
      var bound;
      var binder = function () {
        if (this instanceof bound) {
          var result = target.apply(this, args.concat(slice.call(arguments)));
          if (Object(result) === result) {
            return result;
          }
          return this;
        } else {
          return target.apply(that, args.concat(slice.call(arguments)));
        }
      };
      var boundLength = Math.max(0, target.length - args.length);
      var boundArgs = [];
      for (var i = 0; i < boundLength; i++) {
        boundArgs.push('$' + i);
      }
      bound = Function(
        'binder',
        'return function (' +
          boundArgs.join(',') +
          '){ return binder.apply(this,arguments); }'
      )(binder);
      if (target.prototype) {
        var Empty = function Empty2() {};
        Empty.prototype = target.prototype;
        bound.prototype = new Empty();
        Empty.prototype = null;
      }
      return bound;
    };
  },
});

// node_modules/function-bind/index.js
var require_function_bind2 = __commonJS({
  'node_modules/function-bind/index.js'(exports2, module2) {
    'use strict';
    var implementation = require_implementation2();
    module2.exports = Function.prototype.bind || implementation;
  },
});

// node_modules/has/src/index.js
var require_src9 = __commonJS({
  'node_modules/has/src/index.js'(exports2, module2) {
    'use strict';
    var bind = require_function_bind2();
    module2.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);
  },
});

// node_modules/get-intrinsic/index.js
var require_get_intrinsic2 = __commonJS({
  'node_modules/get-intrinsic/index.js'(exports2, module2) {
    'use strict';
    var undefined2;
    var $SyntaxError = SyntaxError;
    var $Function = Function;
    var $TypeError = TypeError;
    var getEvalledConstructor = function (expressionSyntax) {
      try {
        return $Function(
          '"use strict"; return (' + expressionSyntax + ').constructor;'
        )();
      } catch (e2) {}
    };
    var $gOPD = Object.getOwnPropertyDescriptor;
    if ($gOPD) {
      try {
        $gOPD({}, '');
      } catch (e2) {
        $gOPD = null;
      }
    }
    var throwTypeError = function () {
      throw new $TypeError();
    };
    var ThrowTypeError = $gOPD
      ? (function () {
          try {
            arguments.callee;
            return throwTypeError;
          } catch (calleeThrows) {
            try {
              return $gOPD(arguments, 'callee').get;
            } catch (gOPDthrows) {
              return throwTypeError;
            }
          }
        })()
      : throwTypeError;
    var hasSymbols = require_has_symbols2()();
    var hasProto = require_has_proto()();
    var getProto =
      Object.getPrototypeOf ||
      (hasProto
        ? function (x) {
            return x.__proto__;
          }
        : null);
    var needsEval = {};
    var TypedArray =
      typeof Uint8Array === 'undefined' || !getProto
        ? undefined2
        : getProto(Uint8Array);
    var INTRINSICS = {
      '%AggregateError%':
        typeof AggregateError === 'undefined' ? undefined2 : AggregateError,
      '%Array%': Array,
      '%ArrayBuffer%':
        typeof ArrayBuffer === 'undefined' ? undefined2 : ArrayBuffer,
      '%ArrayIteratorPrototype%':
        hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined2,
      '%AsyncFromSyncIteratorPrototype%': undefined2,
      '%AsyncFunction%': needsEval,
      '%AsyncGenerator%': needsEval,
      '%AsyncGeneratorFunction%': needsEval,
      '%AsyncIteratorPrototype%': needsEval,
      '%Atomics%': typeof Atomics === 'undefined' ? undefined2 : Atomics,
      '%BigInt%': typeof BigInt === 'undefined' ? undefined2 : BigInt,
      '%BigInt64Array%':
        typeof BigInt64Array === 'undefined' ? undefined2 : BigInt64Array,
      '%BigUint64Array%':
        typeof BigUint64Array === 'undefined' ? undefined2 : BigUint64Array,
      '%Boolean%': Boolean,
      '%DataView%': typeof DataView === 'undefined' ? undefined2 : DataView,
      '%Date%': Date,
      '%decodeURI%': decodeURI,
      '%decodeURIComponent%': decodeURIComponent,
      '%encodeURI%': encodeURI,
      '%encodeURIComponent%': encodeURIComponent,
      '%Error%': Error,
      '%eval%': eval,
      // eslint-disable-line no-eval
      '%EvalError%': EvalError,
      '%Float32Array%':
        typeof Float32Array === 'undefined' ? undefined2 : Float32Array,
      '%Float64Array%':
        typeof Float64Array === 'undefined' ? undefined2 : Float64Array,
      '%FinalizationRegistry%':
        typeof FinalizationRegistry === 'undefined'
          ? undefined2
          : FinalizationRegistry,
      '%Function%': $Function,
      '%GeneratorFunction%': needsEval,
      '%Int8Array%': typeof Int8Array === 'undefined' ? undefined2 : Int8Array,
      '%Int16Array%':
        typeof Int16Array === 'undefined' ? undefined2 : Int16Array,
      '%Int32Array%':
        typeof Int32Array === 'undefined' ? undefined2 : Int32Array,
      '%isFinite%': isFinite,
      '%isNaN%': isNaN,
      '%IteratorPrototype%':
        hasSymbols && getProto
          ? getProto(getProto([][Symbol.iterator]()))
          : undefined2,
      '%JSON%': typeof JSON === 'object' ? JSON : undefined2,
      '%Map%': typeof Map === 'undefined' ? undefined2 : Map,
      '%MapIteratorPrototype%':
        typeof Map === 'undefined' || !hasSymbols || !getProto
          ? undefined2
          : getProto(/* @__PURE__ */ new Map()[Symbol.iterator]()),
      '%Math%': Math,
      '%Number%': Number,
      '%Object%': Object,
      '%parseFloat%': parseFloat,
      '%parseInt%': parseInt,
      '%Promise%': typeof Promise === 'undefined' ? undefined2 : Promise,
      '%Proxy%': typeof Proxy === 'undefined' ? undefined2 : Proxy,
      '%RangeError%': RangeError,
      '%ReferenceError%': ReferenceError,
      '%Reflect%': typeof Reflect === 'undefined' ? undefined2 : Reflect,
      '%RegExp%': RegExp,
      '%Set%': typeof Set === 'undefined' ? undefined2 : Set,
      '%SetIteratorPrototype%':
        typeof Set === 'undefined' || !hasSymbols || !getProto
          ? undefined2
          : getProto(/* @__PURE__ */ new Set()[Symbol.iterator]()),
      '%SharedArrayBuffer%':
        typeof SharedArrayBuffer === 'undefined'
          ? undefined2
          : SharedArrayBuffer,
      '%String%': String,
      '%StringIteratorPrototype%':
        hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined2,
      '%Symbol%': hasSymbols ? Symbol : undefined2,
      '%SyntaxError%': $SyntaxError,
      '%ThrowTypeError%': ThrowTypeError,
      '%TypedArray%': TypedArray,
      '%TypeError%': $TypeError,
      '%Uint8Array%':
        typeof Uint8Array === 'undefined' ? undefined2 : Uint8Array,
      '%Uint8ClampedArray%':
        typeof Uint8ClampedArray === 'undefined'
          ? undefined2
          : Uint8ClampedArray,
      '%Uint16Array%':
        typeof Uint16Array === 'undefined' ? undefined2 : Uint16Array,
      '%Uint32Array%':
        typeof Uint32Array === 'undefined' ? undefined2 : Uint32Array,
      '%URIError%': URIError,
      '%WeakMap%': typeof WeakMap === 'undefined' ? undefined2 : WeakMap,
      '%WeakRef%': typeof WeakRef === 'undefined' ? undefined2 : WeakRef,
      '%WeakSet%': typeof WeakSet === 'undefined' ? undefined2 : WeakSet,
    };
    if (getProto) {
      try {
        null.error;
      } catch (e2) {
        errorProto = getProto(getProto(e2));
        INTRINSICS['%Error.prototype%'] = errorProto;
      }
    }
    var errorProto;
    var doEval = function doEval2(name) {
      var value;
      if (name === '%AsyncFunction%') {
        value = getEvalledConstructor('async function () {}');
      } else if (name === '%GeneratorFunction%') {
        value = getEvalledConstructor('function* () {}');
      } else if (name === '%AsyncGeneratorFunction%') {
        value = getEvalledConstructor('async function* () {}');
      } else if (name === '%AsyncGenerator%') {
        var fn = doEval2('%AsyncGeneratorFunction%');
        if (fn) {
          value = fn.prototype;
        }
      } else if (name === '%AsyncIteratorPrototype%') {
        var gen = doEval2('%AsyncGenerator%');
        if (gen && getProto) {
          value = getProto(gen.prototype);
        }
      }
      INTRINSICS[name] = value;
      return value;
    };
    var LEGACY_ALIASES = {
      '%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],
      '%ArrayPrototype%': ['Array', 'prototype'],
      '%ArrayProto_entries%': ['Array', 'prototype', 'entries'],
      '%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],
      '%ArrayProto_keys%': ['Array', 'prototype', 'keys'],
      '%ArrayProto_values%': ['Array', 'prototype', 'values'],
      '%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],
      '%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],
      '%AsyncGeneratorPrototype%': [
        'AsyncGeneratorFunction',
        'prototype',
        'prototype',
      ],
      '%BooleanPrototype%': ['Boolean', 'prototype'],
      '%DataViewPrototype%': ['DataView', 'prototype'],
      '%DatePrototype%': ['Date', 'prototype'],
      '%ErrorPrototype%': ['Error', 'prototype'],
      '%EvalErrorPrototype%': ['EvalError', 'prototype'],
      '%Float32ArrayPrototype%': ['Float32Array', 'prototype'],
      '%Float64ArrayPrototype%': ['Float64Array', 'prototype'],
      '%FunctionPrototype%': ['Function', 'prototype'],
      '%Generator%': ['GeneratorFunction', 'prototype'],
      '%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],
      '%Int8ArrayPrototype%': ['Int8Array', 'prototype'],
      '%Int16ArrayPrototype%': ['Int16Array', 'prototype'],
      '%Int32ArrayPrototype%': ['Int32Array', 'prototype'],
      '%JSONParse%': ['JSON', 'parse'],
      '%JSONStringify%': ['JSON', 'stringify'],
      '%MapPrototype%': ['Map', 'prototype'],
      '%NumberPrototype%': ['Number', 'prototype'],
      '%ObjectPrototype%': ['Object', 'prototype'],
      '%ObjProto_toString%': ['Object', 'prototype', 'toString'],
      '%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],
      '%PromisePrototype%': ['Promise', 'prototype'],
      '%PromiseProto_then%': ['Promise', 'prototype', 'then'],
      '%Promise_all%': ['Promise', 'all'],
      '%Promise_reject%': ['Promise', 'reject'],
      '%Promise_resolve%': ['Promise', 'resolve'],
      '%RangeErrorPrototype%': ['RangeError', 'prototype'],
      '%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],
      '%RegExpPrototype%': ['RegExp', 'prototype'],
      '%SetPrototype%': ['Set', 'prototype'],
      '%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],
      '%StringPrototype%': ['String', 'prototype'],
      '%SymbolPrototype%': ['Symbol', 'prototype'],
      '%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],
      '%TypedArrayPrototype%': ['TypedArray', 'prototype'],
      '%TypeErrorPrototype%': ['TypeError', 'prototype'],
      '%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],
      '%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],
      '%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],
      '%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],
      '%URIErrorPrototype%': ['URIError', 'prototype'],
      '%WeakMapPrototype%': ['WeakMap', 'prototype'],
      '%WeakSetPrototype%': ['WeakSet', 'prototype'],
    };
    var bind = require_function_bind2();
    var hasOwn = require_src9();
    var $concat = bind.call(Function.call, Array.prototype.concat);
    var $spliceApply = bind.call(Function.apply, Array.prototype.splice);
    var $replace = bind.call(Function.call, String.prototype.replace);
    var $strSlice = bind.call(Function.call, String.prototype.slice);
    var $exec = bind.call(Function.call, RegExp.prototype.exec);
    var rePropName =
      /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
    var reEscapeChar = /\\(\\)?/g;
    var stringToPath = function stringToPath2(string) {
      var first = $strSlice(string, 0, 1);
      var last = $strSlice(string, -1);
      if (first === '%' && last !== '%') {
        throw new $SyntaxError(
          'invalid intrinsic syntax, expected closing `%`'
        );
      } else if (last === '%' && first !== '%') {
        throw new $SyntaxError(
          'invalid intrinsic syntax, expected opening `%`'
        );
      }
      var result = [];
      $replace(string, rePropName, function (match, number, quote, subString) {
        result[result.length] = quote
          ? $replace(subString, reEscapeChar, '$1')
          : number || match;
      });
      return result;
    };
    var getBaseIntrinsic = function getBaseIntrinsic2(name, allowMissing) {
      var intrinsicName = name;
      var alias;
      if (hasOwn(LEGACY_ALIASES, intrinsicName)) {
        alias = LEGACY_ALIASES[intrinsicName];
        intrinsicName = '%' + alias[0] + '%';
      }
      if (hasOwn(INTRINSICS, intrinsicName)) {
        var value = INTRINSICS[intrinsicName];
        if (value === needsEval) {
          value = doEval(intrinsicName);
        }
        if (typeof value === 'undefined' && !allowMissing) {
          throw new $TypeError(
            'intrinsic ' +
              name +
              ' exists, but is not available. Please file an issue!'
          );
        }
        return {
          alias,
          name: intrinsicName,
          value,
        };
      }
      throw new $SyntaxError('intrinsic ' + name + ' does not exist!');
    };
    module2.exports = function GetIntrinsic(name, allowMissing) {
      if (typeof name !== 'string' || name.length === 0) {
        throw new $TypeError('intrinsic name must be a non-empty string');
      }
      if (arguments.length > 1 && typeof allowMissing !== 'boolean') {
        throw new $TypeError('"allowMissing" argument must be a boolean');
      }
      if ($exec(/^%?[^%]*%?$/, name) === null) {
        throw new $SyntaxError(
          '`%` may not be present anywhere but at the beginning and end of the intrinsic name'
        );
      }
      var parts = stringToPath(name);
      var intrinsicBaseName = parts.length > 0 ? parts[0] : '';
      var intrinsic = getBaseIntrinsic(
        '%' + intrinsicBaseName + '%',
        allowMissing
      );
      var intrinsicRealName = intrinsic.name;
      var value = intrinsic.value;
      var skipFurtherCaching = false;
      var alias = intrinsic.alias;
      if (alias) {
        intrinsicBaseName = alias[0];
        $spliceApply(parts, $concat([0, 1], alias));
      }
      for (var i = 1, isOwn = true; i < parts.length; i += 1) {
        var part = parts[i];
        var first = $strSlice(part, 0, 1);
        var last = $strSlice(part, -1);
        if (
          (first === '"' ||
            first === "'" ||
            first === '`' ||
            last === '"' ||
            last === "'" ||
            last === '`') &&
          first !== last
        ) {
          throw new $SyntaxError(
            'property names with quotes must have matching quotes'
          );
        }
        if (part === 'constructor' || !isOwn) {
          skipFurtherCaching = true;
        }
        intrinsicBaseName += '.' + part;
        intrinsicRealName = '%' + intrinsicBaseName + '%';
        if (hasOwn(INTRINSICS, intrinsicRealName)) {
          value = INTRINSICS[intrinsicRealName];
        } else if (value != null) {
          if (!(part in value)) {
            if (!allowMissing) {
              throw new $TypeError(
                'base intrinsic for ' +
                  name +
                  ' exists, but the property is not available.'
              );
            }
            return void 0;
          }
          if ($gOPD && i + 1 >= parts.length) {
            var desc = $gOPD(value, part);
            isOwn = !!desc;
            if (isOwn && 'get' in desc && !('originalValue' in desc.get)) {
              value = desc.get;
            } else {
              value = value[part];
            }
          } else {
            isOwn = hasOwn(value, part);
            value = value[part];
          }
          if (isOwn && !skipFurtherCaching) {
            INTRINSICS[intrinsicRealName] = value;
          }
        }
      }
      return value;
    };
  },
});

// node_modules/call-bind/index.js
var require_call_bind2 = __commonJS({
  'node_modules/call-bind/index.js'(exports2, module2) {
    'use strict';
    var bind = require_function_bind2();
    var GetIntrinsic = require_get_intrinsic2();
    var $apply = GetIntrinsic('%Function.prototype.apply%');
    var $call = GetIntrinsic('%Function.prototype.call%');
    var $reflectApply =
      GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);
    var $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);
    var $defineProperty = GetIntrinsic('%Object.defineProperty%', true);
    var $max = GetIntrinsic('%Math.max%');
    if ($defineProperty) {
      try {
        $defineProperty({}, 'a', { value: 1 });
      } catch (e2) {
        $defineProperty = null;
      }
    }
    module2.exports = function callBind(originalFunction) {
      var func = $reflectApply(bind, $call, arguments);
      if ($gOPD && $defineProperty) {
        var desc = $gOPD(func, 'length');
        if (desc.configurable) {
          $defineProperty(func, 'length', {
            value:
              1 + $max(0, originalFunction.length - (arguments.length - 1)),
          });
        }
      }
      return func;
    };
    var applyBind = function applyBind2() {
      return $reflectApply(bind, $apply, arguments);
    };
    if ($defineProperty) {
      $defineProperty(module2.exports, 'apply', { value: applyBind });
    } else {
      module2.exports.apply = applyBind;
    }
  },
});

// node_modules/call-bind/callBound.js
var require_callBound2 = __commonJS({
  'node_modules/call-bind/callBound.js'(exports2, module2) {
    'use strict';
    var GetIntrinsic = require_get_intrinsic2();
    var callBind = require_call_bind2();
    var $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));
    module2.exports = function callBoundIntrinsic(name, allowMissing) {
      var intrinsic = GetIntrinsic(name, !!allowMissing);
      if (
        typeof intrinsic === 'function' &&
        $indexOf(name, '.prototype.') > -1
      ) {
        return callBind(intrinsic);
      }
      return intrinsic;
    };
  },
});

// node_modules/object-inspect/util.inspect.js
var require_util_inspect2 = __commonJS({
  'node_modules/object-inspect/util.inspect.js'(exports2, module2) {
    'use strict';
    module2.exports = require('util').inspect;
  },
});

// node_modules/object-inspect/index.js
var require_object_inspect2 = __commonJS({
  'node_modules/object-inspect/index.js'(exports2, module2) {
    'use strict';
    var hasMap = typeof Map === 'function' && Map.prototype;
    var mapSizeDescriptor =
      Object.getOwnPropertyDescriptor && hasMap
        ? Object.getOwnPropertyDescriptor(Map.prototype, 'size')
        : null;
    var mapSize =
      hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function'
        ? mapSizeDescriptor.get
        : null;
    var mapForEach = hasMap && Map.prototype.forEach;
    var hasSet = typeof Set === 'function' && Set.prototype;
    var setSizeDescriptor =
      Object.getOwnPropertyDescriptor && hasSet
        ? Object.getOwnPropertyDescriptor(Set.prototype, 'size')
        : null;
    var setSize =
      hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function'
        ? setSizeDescriptor.get
        : null;
    var setForEach = hasSet && Set.prototype.forEach;
    var hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;
    var weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;
    var hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;
    var weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;
    var hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;
    var weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;
    var booleanValueOf = Boolean.prototype.valueOf;
    var objectToString = Object.prototype.toString;
    var functionToString = Function.prototype.toString;
    var $match = String.prototype.match;
    var $slice = String.prototype.slice;
    var $replace = String.prototype.replace;
    var $toUpperCase = String.prototype.toUpperCase;
    var $toLowerCase = String.prototype.toLowerCase;
    var $test = RegExp.prototype.test;
    var $concat = Array.prototype.concat;
    var $join = Array.prototype.join;
    var $arrSlice = Array.prototype.slice;
    var $floor = Math.floor;
    var bigIntValueOf =
      typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;
    var gOPS = Object.getOwnPropertySymbols;
    var symToString =
      typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
        ? Symbol.prototype.toString
        : null;
    var hasShammedSymbols =
      typeof Symbol === 'function' && typeof Symbol.iterator === 'object';
    var toStringTag =
      typeof Symbol === 'function' &&
      Symbol.toStringTag &&
      (typeof Symbol.toStringTag === hasShammedSymbols ? 'object' : 'symbol')
        ? Symbol.toStringTag
        : null;
    var isEnumerable = Object.prototype.propertyIsEnumerable;
    var gPO =
      (typeof Reflect === 'function'
        ? Reflect.getPrototypeOf
        : Object.getPrototypeOf) ||
      ([].__proto__ === Array.prototype
        ? function (O2) {
            return O2.__proto__;
          }
        : null);
    function addNumericSeparator(num, str) {
      if (
        num === Infinity ||
        num === -Infinity ||
        num !== num ||
        (num && num > -1e3 && num < 1e3) ||
        $test.call(/e/, str)
      ) {
        return str;
      }
      var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;
      if (typeof num === 'number') {
        var int = num < 0 ? -$floor(-num) : $floor(num);
        if (int !== num) {
          var intStr = String(int);
          var dec = $slice.call(str, intStr.length + 1);
          return (
            $replace.call(intStr, sepRegex, '$&_') +
            '.' +
            $replace.call($replace.call(dec, /([0-9]{3})/g, '$&_'), /_$/, '')
          );
        }
      }
      return $replace.call(str, sepRegex, '$&_');
    }
    var utilInspect = require_util_inspect2();
    var inspectCustom = utilInspect.custom;
    var inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;
    module2.exports = function inspect_(obj, options, depth, seen) {
      var opts = options || {};
      if (
        has(opts, 'quoteStyle') &&
        opts.quoteStyle !== 'single' &&
        opts.quoteStyle !== 'double'
      ) {
        throw new TypeError('option "quoteStyle" must be "single" or "double"');
      }
      if (
        has(opts, 'maxStringLength') &&
        (typeof opts.maxStringLength === 'number'
          ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity
          : opts.maxStringLength !== null)
      ) {
        throw new TypeError(
          'option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`'
        );
      }
      var customInspect = has(opts, 'customInspect')
        ? opts.customInspect
        : true;
      if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {
        throw new TypeError(
          'option "customInspect", if provided, must be `true`, `false`, or `\'symbol\'`'
        );
      }
      if (
        has(opts, 'indent') &&
        opts.indent !== null &&
        opts.indent !== '	' &&
        !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)
      ) {
        throw new TypeError(
          'option "indent" must be "\\t", an integer > 0, or `null`'
        );
      }
      if (
        has(opts, 'numericSeparator') &&
        typeof opts.numericSeparator !== 'boolean'
      ) {
        throw new TypeError(
          'option "numericSeparator", if provided, must be `true` or `false`'
        );
      }
      var numericSeparator = opts.numericSeparator;
      if (typeof obj === 'undefined') {
        return 'undefined';
      }
      if (obj === null) {
        return 'null';
      }
      if (typeof obj === 'boolean') {
        return obj ? 'true' : 'false';
      }
      if (typeof obj === 'string') {
        return inspectString(obj, opts);
      }
      if (typeof obj === 'number') {
        if (obj === 0) {
          return Infinity / obj > 0 ? '0' : '-0';
        }
        var str = String(obj);
        return numericSeparator ? addNumericSeparator(obj, str) : str;
      }
      if (typeof obj === 'bigint') {
        var bigIntStr = String(obj) + 'n';
        return numericSeparator
          ? addNumericSeparator(obj, bigIntStr)
          : bigIntStr;
      }
      var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;
      if (typeof depth === 'undefined') {
        depth = 0;
      }
      if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {
        return isArray(obj) ? '[Array]' : '[Object]';
      }
      var indent = getIndent(opts, depth);
      if (typeof seen === 'undefined') {
        seen = [];
      } else if (indexOf(seen, obj) >= 0) {
        return '[Circular]';
      }
      function inspect(value, from, noIndent) {
        if (from) {
          seen = $arrSlice.call(seen);
          seen.push(from);
        }
        if (noIndent) {
          var newOpts = {
            depth: opts.depth,
          };
          if (has(opts, 'quoteStyle')) {
            newOpts.quoteStyle = opts.quoteStyle;
          }
          return inspect_(value, newOpts, depth + 1, seen);
        }
        return inspect_(value, opts, depth + 1, seen);
      }
      if (typeof obj === 'function' && !isRegExp(obj)) {
        var name = nameOf(obj);
        var keys = arrObjKeys(obj, inspect);
        return (
          '[Function' +
          (name ? ': ' + name : ' (anonymous)') +
          ']' +
          (keys.length > 0 ? ' { ' + $join.call(keys, ', ') + ' }' : '')
        );
      }
      if (isSymbol(obj)) {
        var symString = hasShammedSymbols
          ? $replace.call(String(obj), /^(Symbol\(.*\))_[^)]*$/, '$1')
          : symToString.call(obj);
        return typeof obj === 'object' && !hasShammedSymbols
          ? markBoxed(symString)
          : symString;
      }
      if (isElement(obj)) {
        var s2 = '<' + $toLowerCase.call(String(obj.nodeName));
        var attrs = obj.attributes || [];
        for (var i = 0; i < attrs.length; i++) {
          s2 +=
            ' ' +
            attrs[i].name +
            '=' +
            wrapQuotes(quote(attrs[i].value), 'double', opts);
        }
        s2 += '>';
        if (obj.childNodes && obj.childNodes.length) {
          s2 += '...';
        }
        s2 += '</' + $toLowerCase.call(String(obj.nodeName)) + '>';
        return s2;
      }
      if (isArray(obj)) {
        if (obj.length === 0) {
          return '[]';
        }
        var xs2 = arrObjKeys(obj, inspect);
        if (indent && !singleLineValues(xs2)) {
          return '[' + indentedJoin(xs2, indent) + ']';
        }
        return '[ ' + $join.call(xs2, ', ') + ' ]';
      }
      if (isError(obj)) {
        var parts = arrObjKeys(obj, inspect);
        if (
          !('cause' in Error.prototype) &&
          'cause' in obj &&
          !isEnumerable.call(obj, 'cause')
        ) {
          return (
            '{ [' +
            String(obj) +
            '] ' +
            $join.call(
              $concat.call('[cause]: ' + inspect(obj.cause), parts),
              ', '
            ) +
            ' }'
          );
        }
        if (parts.length === 0) {
          return '[' + String(obj) + ']';
        }
        return '{ [' + String(obj) + '] ' + $join.call(parts, ', ') + ' }';
      }
      if (typeof obj === 'object' && customInspect) {
        if (
          inspectSymbol &&
          typeof obj[inspectSymbol] === 'function' &&
          utilInspect
        ) {
          return utilInspect(obj, { depth: maxDepth - depth });
        } else if (
          customInspect !== 'symbol' &&
          typeof obj.inspect === 'function'
        ) {
          return obj.inspect();
        }
      }
      if (isMap(obj)) {
        var mapParts = [];
        if (mapForEach) {
          mapForEach.call(obj, function (value, key) {
            mapParts.push(
              inspect(key, obj, true) + ' => ' + inspect(value, obj)
            );
          });
        }
        return collectionOf('Map', mapSize.call(obj), mapParts, indent);
      }
      if (isSet(obj)) {
        var setParts = [];
        if (setForEach) {
          setForEach.call(obj, function (value) {
            setParts.push(inspect(value, obj));
          });
        }
        return collectionOf('Set', setSize.call(obj), setParts, indent);
      }
      if (isWeakMap(obj)) {
        return weakCollectionOf('WeakMap');
      }
      if (isWeakSet(obj)) {
        return weakCollectionOf('WeakSet');
      }
      if (isWeakRef(obj)) {
        return weakCollectionOf('WeakRef');
      }
      if (isNumber3(obj)) {
        return markBoxed(inspect(Number(obj)));
      }
      if (isBigInt(obj)) {
        return markBoxed(inspect(bigIntValueOf.call(obj)));
      }
      if (isBoolean(obj)) {
        return markBoxed(booleanValueOf.call(obj));
      }
      if (isString(obj)) {
        return markBoxed(inspect(String(obj)));
      }
      if (!isDate(obj) && !isRegExp(obj)) {
        var ys2 = arrObjKeys(obj, inspect);
        var isPlainObject = gPO
          ? gPO(obj) === Object.prototype
          : obj instanceof Object || obj.constructor === Object;
        var protoTag = obj instanceof Object ? '' : 'null prototype';
        var stringTag =
          !isPlainObject &&
          toStringTag &&
          Object(obj) === obj &&
          toStringTag in obj
            ? $slice.call(toStr(obj), 8, -1)
            : protoTag
            ? 'Object'
            : '';
        var constructorTag =
          isPlainObject || typeof obj.constructor !== 'function'
            ? ''
            : obj.constructor.name
            ? obj.constructor.name + ' '
            : '';
        var tag =
          constructorTag +
          (stringTag || protoTag
            ? '[' +
              $join.call(
                $concat.call([], stringTag || [], protoTag || []),
                ': '
              ) +
              '] '
            : '');
        if (ys2.length === 0) {
          return tag + '{}';
        }
        if (indent) {
          return tag + '{' + indentedJoin(ys2, indent) + '}';
        }
        return tag + '{ ' + $join.call(ys2, ', ') + ' }';
      }
      return String(obj);
    };
    function wrapQuotes(s2, defaultStyle, opts) {
      var quoteChar =
        (opts.quoteStyle || defaultStyle) === 'double' ? '"' : "'";
      return quoteChar + s2 + quoteChar;
    }
    function quote(s2) {
      return $replace.call(String(s2), /"/g, '&quot;');
    }
    function isArray(obj) {
      return (
        toStr(obj) === '[object Array]' &&
        (!toStringTag || !(typeof obj === 'object' && toStringTag in obj))
      );
    }
    function isDate(obj) {
      return (
        toStr(obj) === '[object Date]' &&
        (!toStringTag || !(typeof obj === 'object' && toStringTag in obj))
      );
    }
    function isRegExp(obj) {
      return (
        toStr(obj) === '[object RegExp]' &&
        (!toStringTag || !(typeof obj === 'object' && toStringTag in obj))
      );
    }
    function isError(obj) {
      return (
        toStr(obj) === '[object Error]' &&
        (!toStringTag || !(typeof obj === 'object' && toStringTag in obj))
      );
    }
    function isString(obj) {
      return (
        toStr(obj) === '[object String]' &&
        (!toStringTag || !(typeof obj === 'object' && toStringTag in obj))
      );
    }
    function isNumber3(obj) {
      return (
        toStr(obj) === '[object Number]' &&
        (!toStringTag || !(typeof obj === 'object' && toStringTag in obj))
      );
    }
    function isBoolean(obj) {
      return (
        toStr(obj) === '[object Boolean]' &&
        (!toStringTag || !(typeof obj === 'object' && toStringTag in obj))
      );
    }
    function isSymbol(obj) {
      if (hasShammedSymbols) {
        return obj && typeof obj === 'object' && obj instanceof Symbol;
      }
      if (typeof obj === 'symbol') {
        return true;
      }
      if (!obj || typeof obj !== 'object' || !symToString) {
        return false;
      }
      try {
        symToString.call(obj);
        return true;
      } catch (e2) {}
      return false;
    }
    function isBigInt(obj) {
      if (!obj || typeof obj !== 'object' || !bigIntValueOf) {
        return false;
      }
      try {
        bigIntValueOf.call(obj);
        return true;
      } catch (e2) {}
      return false;
    }
    var hasOwn =
      Object.prototype.hasOwnProperty ||
      function (key) {
        return key in this;
      };
    function has(obj, key) {
      return hasOwn.call(obj, key);
    }
    function toStr(obj) {
      return objectToString.call(obj);
    }
    function nameOf(f) {
      if (f.name) {
        return f.name;
      }
      var m2 = $match.call(functionToString.call(f), /^function\s*([\w$]+)/);
      if (m2) {
        return m2[1];
      }
      return null;
    }
    function indexOf(xs2, x) {
      if (xs2.indexOf) {
        return xs2.indexOf(x);
      }
      for (var i = 0, l2 = xs2.length; i < l2; i++) {
        if (xs2[i] === x) {
          return i;
        }
      }
      return -1;
    }
    function isMap(x) {
      if (!mapSize || !x || typeof x !== 'object') {
        return false;
      }
      try {
        mapSize.call(x);
        try {
          setSize.call(x);
        } catch (s2) {
          return true;
        }
        return x instanceof Map;
      } catch (e2) {}
      return false;
    }
    function isWeakMap(x) {
      if (!weakMapHas || !x || typeof x !== 'object') {
        return false;
      }
      try {
        weakMapHas.call(x, weakMapHas);
        try {
          weakSetHas.call(x, weakSetHas);
        } catch (s2) {
          return true;
        }
        return x instanceof WeakMap;
      } catch (e2) {}
      return false;
    }
    function isWeakRef(x) {
      if (!weakRefDeref || !x || typeof x !== 'object') {
        return false;
      }
      try {
        weakRefDeref.call(x);
        return true;
      } catch (e2) {}
      return false;
    }
    function isSet(x) {
      if (!setSize || !x || typeof x !== 'object') {
        return false;
      }
      try {
        setSize.call(x);
        try {
          mapSize.call(x);
        } catch (m2) {
          return true;
        }
        return x instanceof Set;
      } catch (e2) {}
      return false;
    }
    function isWeakSet(x) {
      if (!weakSetHas || !x || typeof x !== 'object') {
        return false;
      }
      try {
        weakSetHas.call(x, weakSetHas);
        try {
          weakMapHas.call(x, weakMapHas);
        } catch (s2) {
          return true;
        }
        return x instanceof WeakSet;
      } catch (e2) {}
      return false;
    }
    function isElement(x) {
      if (!x || typeof x !== 'object') {
        return false;
      }
      if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {
        return true;
      }
      return (
        typeof x.nodeName === 'string' && typeof x.getAttribute === 'function'
      );
    }
    function inspectString(str, opts) {
      if (str.length > opts.maxStringLength) {
        var remaining = str.length - opts.maxStringLength;
        var trailer =
          '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');
        return (
          inspectString($slice.call(str, 0, opts.maxStringLength), opts) +
          trailer
        );
      }
      var s2 = $replace.call(
        $replace.call(str, /(['\\])/g, '\\$1'),
        /[\x00-\x1f]/g,
        lowbyte
      );
      return wrapQuotes(s2, 'single', opts);
    }
    function lowbyte(c2) {
      var n2 = c2.charCodeAt(0);
      var x = {
        8: 'b',
        9: 't',
        10: 'n',
        12: 'f',
        13: 'r',
      }[n2];
      if (x) {
        return '\\' + x;
      }
      return '\\x' + (n2 < 16 ? '0' : '') + $toUpperCase.call(n2.toString(16));
    }
    function markBoxed(str) {
      return 'Object(' + str + ')';
    }
    function weakCollectionOf(type) {
      return type + ' { ? }';
    }
    function collectionOf(type, size, entries, indent) {
      var joinedEntries = indent
        ? indentedJoin(entries, indent)
        : $join.call(entries, ', ');
      return type + ' (' + size + ') {' + joinedEntries + '}';
    }
    function singleLineValues(xs2) {
      for (var i = 0; i < xs2.length; i++) {
        if (indexOf(xs2[i], '\n') >= 0) {
          return false;
        }
      }
      return true;
    }
    function getIndent(opts, depth) {
      var baseIndent;
      if (opts.indent === '	') {
        baseIndent = '	';
      } else if (typeof opts.indent === 'number' && opts.indent > 0) {
        baseIndent = $join.call(Array(opts.indent + 1), ' ');
      } else {
        return null;
      }
      return {
        base: baseIndent,
        prev: $join.call(Array(depth + 1), baseIndent),
      };
    }
    function indentedJoin(xs2, indent) {
      if (xs2.length === 0) {
        return '';
      }
      var lineJoiner = '\n' + indent.prev + indent.base;
      return (
        lineJoiner + $join.call(xs2, ',' + lineJoiner) + '\n' + indent.prev
      );
    }
    function arrObjKeys(obj, inspect) {
      var isArr = isArray(obj);
      var xs2 = [];
      if (isArr) {
        xs2.length = obj.length;
        for (var i = 0; i < obj.length; i++) {
          xs2[i] = has(obj, i) ? inspect(obj[i], obj) : '';
        }
      }
      var syms = typeof gOPS === 'function' ? gOPS(obj) : [];
      var symMap;
      if (hasShammedSymbols) {
        symMap = {};
        for (var k2 = 0; k2 < syms.length; k2++) {
          symMap['$' + syms[k2]] = syms[k2];
        }
      }
      for (var key in obj) {
        if (!has(obj, key)) {
          continue;
        }
        if (isArr && String(Number(key)) === key && key < obj.length) {
          continue;
        }
        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {
          continue;
        } else if ($test.call(/[^\w$]/, key)) {
          xs2.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));
        } else {
          xs2.push(key + ': ' + inspect(obj[key], obj));
        }
      }
      if (typeof gOPS === 'function') {
        for (var j2 = 0; j2 < syms.length; j2++) {
          if (isEnumerable.call(obj, syms[j2])) {
            xs2.push(
              '[' + inspect(syms[j2]) + ']: ' + inspect(obj[syms[j2]], obj)
            );
          }
        }
      }
      return xs2;
    }
  },
});

// node_modules/side-channel/index.js
var require_side_channel2 = __commonJS({
  'node_modules/side-channel/index.js'(exports2, module2) {
    'use strict';
    var GetIntrinsic = require_get_intrinsic2();
    var callBound = require_callBound2();
    var inspect = require_object_inspect2();
    var $TypeError = GetIntrinsic('%TypeError%');
    var $WeakMap = GetIntrinsic('%WeakMap%', true);
    var $Map = GetIntrinsic('%Map%', true);
    var $weakMapGet = callBound('WeakMap.prototype.get', true);
    var $weakMapSet = callBound('WeakMap.prototype.set', true);
    var $weakMapHas = callBound('WeakMap.prototype.has', true);
    var $mapGet = callBound('Map.prototype.get', true);
    var $mapSet = callBound('Map.prototype.set', true);
    var $mapHas = callBound('Map.prototype.has', true);
    var listGetNode = function (list, key) {
      for (var prev = list, curr; (curr = prev.next) !== null; prev = curr) {
        if (curr.key === key) {
          prev.next = curr.next;
          curr.next = list.next;
          list.next = curr;
          return curr;
        }
      }
    };
    var listGet = function (objects, key) {
      var node = listGetNode(objects, key);
      return node && node.value;
    };
    var listSet = function (objects, key, value) {
      var node = listGetNode(objects, key);
      if (node) {
        node.value = value;
      } else {
        objects.next = {
          // eslint-disable-line no-param-reassign
          key,
          next: objects.next,
          value,
        };
      }
    };
    var listHas = function (objects, key) {
      return !!listGetNode(objects, key);
    };
    module2.exports = function getSideChannel() {
      var $wm;
      var $m;
      var $o2;
      var channel = {
        assert: function (key) {
          if (!channel.has(key)) {
            throw new $TypeError(
              'Side channel does not contain ' + inspect(key)
            );
          }
        },
        get: function (key) {
          if (
            $WeakMap &&
            key &&
            (typeof key === 'object' || typeof key === 'function')
          ) {
            if ($wm) {
              return $weakMapGet($wm, key);
            }
          } else if ($Map) {
            if ($m) {
              return $mapGet($m, key);
            }
          } else {
            if ($o2) {
              return listGet($o2, key);
            }
          }
        },
        has: function (key) {
          if (
            $WeakMap &&
            key &&
            (typeof key === 'object' || typeof key === 'function')
          ) {
            if ($wm) {
              return $weakMapHas($wm, key);
            }
          } else if ($Map) {
            if ($m) {
              return $mapHas($m, key);
            }
          } else {
            if ($o2) {
              return listHas($o2, key);
            }
          }
          return false;
        },
        set: function (key, value) {
          if (
            $WeakMap &&
            key &&
            (typeof key === 'object' || typeof key === 'function')
          ) {
            if (!$wm) {
              $wm = new $WeakMap();
            }
            $weakMapSet($wm, key, value);
          } else if ($Map) {
            if (!$m) {
              $m = new $Map();
            }
            $mapSet($m, key, value);
          } else {
            if (!$o2) {
              $o2 = { key: {}, next: null };
            }
            listSet($o2, key, value);
          }
        },
      };
      return channel;
    };
  },
});

// node_modules/qs/lib/formats.js
var require_formats2 = __commonJS({
  'node_modules/qs/lib/formats.js'(exports2, module2) {
    'use strict';
    var replace = String.prototype.replace;
    var percentTwenties = /%20/g;
    var Format = {
      RFC1738: 'RFC1738',
      RFC3986: 'RFC3986',
    };
    module2.exports = {
      default: Format.RFC3986,
      formatters: {
        RFC1738: function (value) {
          return replace.call(value, percentTwenties, '+');
        },
        RFC3986: function (value) {
          return String(value);
        },
      },
      RFC1738: Format.RFC1738,
      RFC3986: Format.RFC3986,
    };
  },
});

// node_modules/qs/lib/utils.js
var require_utils3 = __commonJS({
  'node_modules/qs/lib/utils.js'(exports2, module2) {
    'use strict';
    var formats = require_formats2();
    var has = Object.prototype.hasOwnProperty;
    var isArray = Array.isArray;
    var hexTable = (function () {
      var array = [];
      for (var i = 0; i < 256; ++i) {
        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());
      }
      return array;
    })();
    var compactQueue = function compactQueue2(queue) {
      while (queue.length > 1) {
        var item = queue.pop();
        var obj = item.obj[item.prop];
        if (isArray(obj)) {
          var compacted = [];
          for (var j2 = 0; j2 < obj.length; ++j2) {
            if (typeof obj[j2] !== 'undefined') {
              compacted.push(obj[j2]);
            }
          }
          item.obj[item.prop] = compacted;
        }
      }
    };
    var arrayToObject = function arrayToObject2(source, options) {
      var obj =
        options && options.plainObjects
          ? /* @__PURE__ */ Object.create(null)
          : {};
      for (var i = 0; i < source.length; ++i) {
        if (typeof source[i] !== 'undefined') {
          obj[i] = source[i];
        }
      }
      return obj;
    };
    var merge2 = function merge3(target, source, options) {
      if (!source) {
        return target;
      }
      if (typeof source !== 'object') {
        if (isArray(target)) {
          target.push(source);
        } else if (target && typeof target === 'object') {
          if (
            (options && (options.plainObjects || options.allowPrototypes)) ||
            !has.call(Object.prototype, source)
          ) {
            target[source] = true;
          }
        } else {
          return [target, source];
        }
        return target;
      }
      if (!target || typeof target !== 'object') {
        return [target].concat(source);
      }
      var mergeTarget = target;
      if (isArray(target) && !isArray(source)) {
        mergeTarget = arrayToObject(target, options);
      }
      if (isArray(target) && isArray(source)) {
        source.forEach(function (item, i) {
          if (has.call(target, i)) {
            var targetItem = target[i];
            if (
              targetItem &&
              typeof targetItem === 'object' &&
              item &&
              typeof item === 'object'
            ) {
              target[i] = merge3(targetItem, item, options);
            } else {
              target.push(item);
            }
          } else {
            target[i] = item;
          }
        });
        return target;
      }
      return Object.keys(source).reduce(function (acc, key) {
        var value = source[key];
        if (has.call(acc, key)) {
          acc[key] = merge3(acc[key], value, options);
        } else {
          acc[key] = value;
        }
        return acc;
      }, mergeTarget);
    };
    var assign = function assignSingleSource(target, source) {
      return Object.keys(source).reduce(function (acc, key) {
        acc[key] = source[key];
        return acc;
      }, target);
    };
    var decode = function (str, decoder, charset) {
      var strWithoutPlus = str.replace(/\+/g, ' ');
      if (charset === 'iso-8859-1') {
        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);
      }
      try {
        return decodeURIComponent(strWithoutPlus);
      } catch (e2) {
        return strWithoutPlus;
      }
    };
    var encode = function encode2(str, defaultEncoder, charset, kind, format2) {
      if (str.length === 0) {
        return str;
      }
      var string = str;
      if (typeof str === 'symbol') {
        string = Symbol.prototype.toString.call(str);
      } else if (typeof str !== 'string') {
        string = String(str);
      }
      if (charset === 'iso-8859-1') {
        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {
          return '%26%23' + parseInt($0.slice(2), 16) + '%3B';
        });
      }
      var out = '';
      for (var i = 0; i < string.length; ++i) {
        var c2 = string.charCodeAt(i);
        if (
          c2 === 45 ||
          c2 === 46 ||
          c2 === 95 ||
          c2 === 126 ||
          (c2 >= 48 && c2 <= 57) ||
          (c2 >= 65 && c2 <= 90) ||
          (c2 >= 97 && c2 <= 122) ||
          (format2 === formats.RFC1738 && (c2 === 40 || c2 === 41))
        ) {
          out += string.charAt(i);
          continue;
        }
        if (c2 < 128) {
          out = out + hexTable[c2];
          continue;
        }
        if (c2 < 2048) {
          out = out + (hexTable[192 | (c2 >> 6)] + hexTable[128 | (c2 & 63)]);
          continue;
        }
        if (c2 < 55296 || c2 >= 57344) {
          out =
            out +
            (hexTable[224 | (c2 >> 12)] +
              hexTable[128 | ((c2 >> 6) & 63)] +
              hexTable[128 | (c2 & 63)]);
          continue;
        }
        i += 1;
        c2 = 65536 + (((c2 & 1023) << 10) | (string.charCodeAt(i) & 1023));
        out +=
          hexTable[240 | (c2 >> 18)] +
          hexTable[128 | ((c2 >> 12) & 63)] +
          hexTable[128 | ((c2 >> 6) & 63)] +
          hexTable[128 | (c2 & 63)];
      }
      return out;
    };
    var compact = function compact2(value) {
      var queue = [{ obj: { o: value }, prop: 'o' }];
      var refs = [];
      for (var i = 0; i < queue.length; ++i) {
        var item = queue[i];
        var obj = item.obj[item.prop];
        var keys = Object.keys(obj);
        for (var j2 = 0; j2 < keys.length; ++j2) {
          var key = keys[j2];
          var val = obj[key];
          if (
            typeof val === 'object' &&
            val !== null &&
            refs.indexOf(val) === -1
          ) {
            queue.push({ obj, prop: key });
            refs.push(val);
          }
        }
      }
      compactQueue(queue);
      return value;
    };
    var isRegExp = function isRegExp2(obj) {
      return Object.prototype.toString.call(obj) === '[object RegExp]';
    };
    var isBuffer = function isBuffer2(obj) {
      if (!obj || typeof obj !== 'object') {
        return false;
      }
      return !!(
        obj.constructor &&
        obj.constructor.isBuffer &&
        obj.constructor.isBuffer(obj)
      );
    };
    var combine = function combine2(a, b) {
      return [].concat(a, b);
    };
    var maybeMap = function maybeMap2(val, fn) {
      if (isArray(val)) {
        var mapped = [];
        for (var i = 0; i < val.length; i += 1) {
          mapped.push(fn(val[i]));
        }
        return mapped;
      }
      return fn(val);
    };
    module2.exports = {
      arrayToObject,
      assign,
      combine,
      compact,
      decode,
      encode,
      isBuffer,
      isRegExp,
      maybeMap,
      merge: merge2,
    };
  },
});

// node_modules/qs/lib/stringify.js
var require_stringify2 = __commonJS({
  'node_modules/qs/lib/stringify.js'(exports2, module2) {
    'use strict';
    var getSideChannel = require_side_channel2();
    var utils = require_utils3();
    var formats = require_formats2();
    var has = Object.prototype.hasOwnProperty;
    var arrayPrefixGenerators = {
      brackets: function brackets(prefix) {
        return prefix + '[]';
      },
      comma: 'comma',
      indices: function indices(prefix, key) {
        return prefix + '[' + key + ']';
      },
      repeat: function repeat(prefix) {
        return prefix;
      },
    };
    var isArray = Array.isArray;
    var push = Array.prototype.push;
    var pushToArray = function (arr, valueOrArray) {
      push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);
    };
    var toISO = Date.prototype.toISOString;
    var defaultFormat = formats['default'];
    var defaults = {
      addQueryPrefix: false,
      allowDots: false,
      charset: 'utf-8',
      charsetSentinel: false,
      delimiter: '&',
      encode: true,
      encoder: utils.encode,
      encodeValuesOnly: false,
      format: defaultFormat,
      formatter: formats.formatters[defaultFormat],
      // deprecated
      indices: false,
      serializeDate: function serializeDate(date) {
        return toISO.call(date);
      },
      skipNulls: false,
      strictNullHandling: false,
    };
    var isNonNullishPrimitive = function isNonNullishPrimitive2(v) {
      return (
        typeof v === 'string' ||
        typeof v === 'number' ||
        typeof v === 'boolean' ||
        typeof v === 'symbol' ||
        typeof v === 'bigint'
      );
    };
    var sentinel = {};
    var stringify = function stringify2(
      object,
      prefix,
      generateArrayPrefix,
      commaRoundTrip,
      strictNullHandling,
      skipNulls,
      encoder,
      filter2,
      sort,
      allowDots,
      serializeDate,
      format2,
      formatter,
      encodeValuesOnly,
      charset,
      sideChannel
    ) {
      var obj = object;
      var tmpSc = sideChannel;
      var step = 0;
      var findFlag = false;
      while ((tmpSc = tmpSc.get(sentinel)) !== void 0 && !findFlag) {
        var pos = tmpSc.get(object);
        step += 1;
        if (typeof pos !== 'undefined') {
          if (pos === step) {
            throw new RangeError('Cyclic object value');
          } else {
            findFlag = true;
          }
        }
        if (typeof tmpSc.get(sentinel) === 'undefined') {
          step = 0;
        }
      }
      if (typeof filter2 === 'function') {
        obj = filter2(prefix, obj);
      } else if (obj instanceof Date) {
        obj = serializeDate(obj);
      } else if (generateArrayPrefix === 'comma' && isArray(obj)) {
        obj = utils.maybeMap(obj, function (value2) {
          if (value2 instanceof Date) {
            return serializeDate(value2);
          }
          return value2;
        });
      }
      if (obj === null) {
        if (strictNullHandling) {
          return encoder && !encodeValuesOnly
            ? encoder(prefix, defaults.encoder, charset, 'key', format2)
            : prefix;
        }
        obj = '';
      }
      if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {
        if (encoder) {
          var keyValue = encodeValuesOnly
            ? prefix
            : encoder(prefix, defaults.encoder, charset, 'key', format2);
          return [
            formatter(keyValue) +
              '=' +
              formatter(
                encoder(obj, defaults.encoder, charset, 'value', format2)
              ),
          ];
        }
        return [formatter(prefix) + '=' + formatter(String(obj))];
      }
      var values = [];
      if (typeof obj === 'undefined') {
        return values;
      }
      var objKeys;
      if (generateArrayPrefix === 'comma' && isArray(obj)) {
        if (encodeValuesOnly && encoder) {
          obj = utils.maybeMap(obj, encoder);
        }
        objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : void 0 }];
      } else if (isArray(filter2)) {
        objKeys = filter2;
      } else {
        var keys = Object.keys(obj);
        objKeys = sort ? keys.sort(sort) : keys;
      }
      var adjustedPrefix =
        commaRoundTrip && isArray(obj) && obj.length === 1
          ? prefix + '[]'
          : prefix;
      for (var j2 = 0; j2 < objKeys.length; ++j2) {
        var key = objKeys[j2];
        var value =
          typeof key === 'object' && typeof key.value !== 'undefined'
            ? key.value
            : obj[key];
        if (skipNulls && value === null) {
          continue;
        }
        var keyPrefix = isArray(obj)
          ? typeof generateArrayPrefix === 'function'
            ? generateArrayPrefix(adjustedPrefix, key)
            : adjustedPrefix
          : adjustedPrefix + (allowDots ? '.' + key : '[' + key + ']');
        sideChannel.set(object, step);
        var valueSideChannel = getSideChannel();
        valueSideChannel.set(sentinel, sideChannel);
        pushToArray(
          values,
          stringify2(
            value,
            keyPrefix,
            generateArrayPrefix,
            commaRoundTrip,
            strictNullHandling,
            skipNulls,
            generateArrayPrefix === 'comma' && encodeValuesOnly && isArray(obj)
              ? null
              : encoder,
            filter2,
            sort,
            allowDots,
            serializeDate,
            format2,
            formatter,
            encodeValuesOnly,
            charset,
            valueSideChannel
          )
        );
      }
      return values;
    };
    var normalizeStringifyOptions = function normalizeStringifyOptions2(opts) {
      if (!opts) {
        return defaults;
      }
      if (
        opts.encoder !== null &&
        typeof opts.encoder !== 'undefined' &&
        typeof opts.encoder !== 'function'
      ) {
        throw new TypeError('Encoder has to be a function.');
      }
      var charset = opts.charset || defaults.charset;
      if (
        typeof opts.charset !== 'undefined' &&
        opts.charset !== 'utf-8' &&
        opts.charset !== 'iso-8859-1'
      ) {
        throw new TypeError(
          'The charset option must be either utf-8, iso-8859-1, or undefined'
        );
      }
      var format2 = formats['default'];
      if (typeof opts.format !== 'undefined') {
        if (!has.call(formats.formatters, opts.format)) {
          throw new TypeError('Unknown format option provided.');
        }
        format2 = opts.format;
      }
      var formatter = formats.formatters[format2];
      var filter2 = defaults.filter;
      if (typeof opts.filter === 'function' || isArray(opts.filter)) {
        filter2 = opts.filter;
      }
      return {
        addQueryPrefix:
          typeof opts.addQueryPrefix === 'boolean'
            ? opts.addQueryPrefix
            : defaults.addQueryPrefix,
        allowDots:
          typeof opts.allowDots === 'undefined'
            ? defaults.allowDots
            : !!opts.allowDots,
        charset,
        charsetSentinel:
          typeof opts.charsetSentinel === 'boolean'
            ? opts.charsetSentinel
            : defaults.charsetSentinel,
        delimiter:
          typeof opts.delimiter === 'undefined'
            ? defaults.delimiter
            : opts.delimiter,
        encode:
          typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,
        encoder:
          typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,
        encodeValuesOnly:
          typeof opts.encodeValuesOnly === 'boolean'
            ? opts.encodeValuesOnly
            : defaults.encodeValuesOnly,
        filter: filter2,
        format: format2,
        formatter,
        serializeDate:
          typeof opts.serializeDate === 'function'
            ? opts.serializeDate
            : defaults.serializeDate,
        skipNulls:
          typeof opts.skipNulls === 'boolean'
            ? opts.skipNulls
            : defaults.skipNulls,
        sort: typeof opts.sort === 'function' ? opts.sort : null,
        strictNullHandling:
          typeof opts.strictNullHandling === 'boolean'
            ? opts.strictNullHandling
            : defaults.strictNullHandling,
      };
    };
    module2.exports = function (object, opts) {
      var obj = object;
      var options = normalizeStringifyOptions(opts);
      var objKeys;
      var filter2;
      if (typeof options.filter === 'function') {
        filter2 = options.filter;
        obj = filter2('', obj);
      } else if (isArray(options.filter)) {
        filter2 = options.filter;
        objKeys = filter2;
      }
      var keys = [];
      if (typeof obj !== 'object' || obj === null) {
        return '';
      }
      var arrayFormat;
      if (opts && opts.arrayFormat in arrayPrefixGenerators) {
        arrayFormat = opts.arrayFormat;
      } else if (opts && 'indices' in opts) {
        arrayFormat = opts.indices ? 'indices' : 'repeat';
      } else {
        arrayFormat = 'indices';
      }
      var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];
      if (
        opts &&
        'commaRoundTrip' in opts &&
        typeof opts.commaRoundTrip !== 'boolean'
      ) {
        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');
      }
      var commaRoundTrip =
        generateArrayPrefix === 'comma' && opts && opts.commaRoundTrip;
      if (!objKeys) {
        objKeys = Object.keys(obj);
      }
      if (options.sort) {
        objKeys.sort(options.sort);
      }
      var sideChannel = getSideChannel();
      for (var i = 0; i < objKeys.length; ++i) {
        var key = objKeys[i];
        if (options.skipNulls && obj[key] === null) {
          continue;
        }
        pushToArray(
          keys,
          stringify(
            obj[key],
            key,
            generateArrayPrefix,
            commaRoundTrip,
            options.strictNullHandling,
            options.skipNulls,
            options.encode ? options.encoder : null,
            options.filter,
            options.sort,
            options.allowDots,
            options.serializeDate,
            options.format,
            options.formatter,
            options.encodeValuesOnly,
            options.charset,
            sideChannel
          )
        );
      }
      var joined = keys.join(options.delimiter);
      var prefix = options.addQueryPrefix === true ? '?' : '';
      if (options.charsetSentinel) {
        if (options.charset === 'iso-8859-1') {
          prefix += 'utf8=%26%2310003%3B&';
        } else {
          prefix += 'utf8=%E2%9C%93&';
        }
      }
      return joined.length > 0 ? prefix + joined : '';
    };
  },
});

// node_modules/qs/lib/parse.js
var require_parse2 = __commonJS({
  'node_modules/qs/lib/parse.js'(exports2, module2) {
    'use strict';
    var utils = require_utils3();
    var has = Object.prototype.hasOwnProperty;
    var isArray = Array.isArray;
    var defaults = {
      allowDots: false,
      allowPrototypes: false,
      allowSparse: false,
      arrayLimit: 20,
      charset: 'utf-8',
      charsetSentinel: false,
      comma: false,
      decoder: utils.decode,
      delimiter: '&',
      depth: 5,
      ignoreQueryPrefix: false,
      interpretNumericEntities: false,
      parameterLimit: 1e3,
      parseArrays: true,
      plainObjects: false,
      strictNullHandling: false,
    };
    var interpretNumericEntities = function (str) {
      return str.replace(/&#(\d+);/g, function ($0, numberStr) {
        return String.fromCharCode(parseInt(numberStr, 10));
      });
    };
    var parseArrayValue = function (val, options) {
      if (
        val &&
        typeof val === 'string' &&
        options.comma &&
        val.indexOf(',') > -1
      ) {
        return val.split(',');
      }
      return val;
    };
    var isoSentinel = 'utf8=%26%2310003%3B';
    var charsetSentinel = 'utf8=%E2%9C%93';
    var parseValues = function parseQueryStringValues(str, options) {
      var obj = { __proto__: null };
      var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\?/, '') : str;
      var limit =
        options.parameterLimit === Infinity ? void 0 : options.parameterLimit;
      var parts = cleanStr.split(options.delimiter, limit);
      var skipIndex = -1;
      var i;
      var charset = options.charset;
      if (options.charsetSentinel) {
        for (i = 0; i < parts.length; ++i) {
          if (parts[i].indexOf('utf8=') === 0) {
            if (parts[i] === charsetSentinel) {
              charset = 'utf-8';
            } else if (parts[i] === isoSentinel) {
              charset = 'iso-8859-1';
            }
            skipIndex = i;
            i = parts.length;
          }
        }
      }
      for (i = 0; i < parts.length; ++i) {
        if (i === skipIndex) {
          continue;
        }
        var part = parts[i];
        var bracketEqualsPos = part.indexOf(']=');
        var pos =
          bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;
        var key, val;
        if (pos === -1) {
          key = options.decoder(part, defaults.decoder, charset, 'key');
          val = options.strictNullHandling ? null : '';
        } else {
          key = options.decoder(
            part.slice(0, pos),
            defaults.decoder,
            charset,
            'key'
          );
          val = utils.maybeMap(
            parseArrayValue(part.slice(pos + 1), options),
            function (encodedVal) {
              return options.decoder(
                encodedVal,
                defaults.decoder,
                charset,
                'value'
              );
            }
          );
        }
        if (
          val &&
          options.interpretNumericEntities &&
          charset === 'iso-8859-1'
        ) {
          val = interpretNumericEntities(val);
        }
        if (part.indexOf('[]=') > -1) {
          val = isArray(val) ? [val] : val;
        }
        if (has.call(obj, key)) {
          obj[key] = utils.combine(obj[key], val);
        } else {
          obj[key] = val;
        }
      }
      return obj;
    };
    var parseObject = function (chain2, val, options, valuesParsed) {
      var leaf = valuesParsed ? val : parseArrayValue(val, options);
      for (var i = chain2.length - 1; i >= 0; --i) {
        var obj;
        var root = chain2[i];
        if (root === '[]' && options.parseArrays) {
          obj = [].concat(leaf);
        } else {
          obj = options.plainObjects ? /* @__PURE__ */ Object.create(null) : {};
          var cleanRoot =
            root.charAt(0) === '[' && root.charAt(root.length - 1) === ']'
              ? root.slice(1, -1)
              : root;
          var index = parseInt(cleanRoot, 10);
          if (!options.parseArrays && cleanRoot === '') {
            obj = { 0: leaf };
          } else if (
            !isNaN(index) &&
            root !== cleanRoot &&
            String(index) === cleanRoot &&
            index >= 0 &&
            options.parseArrays &&
            index <= options.arrayLimit
          ) {
            obj = [];
            obj[index] = leaf;
          } else if (cleanRoot !== '__proto__') {
            obj[cleanRoot] = leaf;
          }
        }
        leaf = obj;
      }
      return leaf;
    };
    var parseKeys = function parseQueryStringKeys(
      givenKey,
      val,
      options,
      valuesParsed
    ) {
      if (!givenKey) {
        return;
      }
      var key = options.allowDots
        ? givenKey.replace(/\.([^.[]+)/g, '[$1]')
        : givenKey;
      var brackets = /(\[[^[\]]*])/;
      var child = /(\[[^[\]]*])/g;
      var segment = options.depth > 0 && brackets.exec(key);
      var parent = segment ? key.slice(0, segment.index) : key;
      var keys = [];
      if (parent) {
        if (!options.plainObjects && has.call(Object.prototype, parent)) {
          if (!options.allowPrototypes) {
            return;
          }
        }
        keys.push(parent);
      }
      var i = 0;
      while (
        options.depth > 0 &&
        (segment = child.exec(key)) !== null &&
        i < options.depth
      ) {
        i += 1;
        if (
          !options.plainObjects &&
          has.call(Object.prototype, segment[1].slice(1, -1))
        ) {
          if (!options.allowPrototypes) {
            return;
          }
        }
        keys.push(segment[1]);
      }
      if (segment) {
        keys.push('[' + key.slice(segment.index) + ']');
      }
      return parseObject(keys, val, options, valuesParsed);
    };
    var normalizeParseOptions = function normalizeParseOptions2(opts) {
      if (!opts) {
        return defaults;
      }
      if (
        opts.decoder !== null &&
        opts.decoder !== void 0 &&
        typeof opts.decoder !== 'function'
      ) {
        throw new TypeError('Decoder has to be a function.');
      }
      if (
        typeof opts.charset !== 'undefined' &&
        opts.charset !== 'utf-8' &&
        opts.charset !== 'iso-8859-1'
      ) {
        throw new TypeError(
          'The charset option must be either utf-8, iso-8859-1, or undefined'
        );
      }
      var charset =
        typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;
      return {
        allowDots:
          typeof opts.allowDots === 'undefined'
            ? defaults.allowDots
            : !!opts.allowDots,
        allowPrototypes:
          typeof opts.allowPrototypes === 'boolean'
            ? opts.allowPrototypes
            : defaults.allowPrototypes,
        allowSparse:
          typeof opts.allowSparse === 'boolean'
            ? opts.allowSparse
            : defaults.allowSparse,
        arrayLimit:
          typeof opts.arrayLimit === 'number'
            ? opts.arrayLimit
            : defaults.arrayLimit,
        charset,
        charsetSentinel:
          typeof opts.charsetSentinel === 'boolean'
            ? opts.charsetSentinel
            : defaults.charsetSentinel,
        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,
        decoder:
          typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,
        delimiter:
          typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter)
            ? opts.delimiter
            : defaults.delimiter,
        // eslint-disable-next-line no-implicit-coercion, no-extra-parens
        depth:
          typeof opts.depth === 'number' || opts.depth === false
            ? +opts.depth
            : defaults.depth,
        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,
        interpretNumericEntities:
          typeof opts.interpretNumericEntities === 'boolean'
            ? opts.interpretNumericEntities
            : defaults.interpretNumericEntities,
        parameterLimit:
          typeof opts.parameterLimit === 'number'
            ? opts.parameterLimit
            : defaults.parameterLimit,
        parseArrays: opts.parseArrays !== false,
        plainObjects:
          typeof opts.plainObjects === 'boolean'
            ? opts.plainObjects
            : defaults.plainObjects,
        strictNullHandling:
          typeof opts.strictNullHandling === 'boolean'
            ? opts.strictNullHandling
            : defaults.strictNullHandling,
      };
    };
    module2.exports = function (str, opts) {
      var options = normalizeParseOptions(opts);
      if (str === '' || str === null || typeof str === 'undefined') {
        return options.plainObjects ? /* @__PURE__ */ Object.create(null) : {};
      }
      var tempObj = typeof str === 'string' ? parseValues(str, options) : str;
      var obj = options.plainObjects ? /* @__PURE__ */ Object.create(null) : {};
      var keys = Object.keys(tempObj);
      for (var i = 0; i < keys.length; ++i) {
        var key = keys[i];
        var newObj = parseKeys(
          key,
          tempObj[key],
          options,
          typeof str === 'string'
        );
        obj = utils.merge(obj, newObj, options);
      }
      if (options.allowSparse === true) {
        return obj;
      }
      return utils.compact(obj);
    };
  },
});

// node_modules/qs/lib/index.js
var require_lib3 = __commonJS({
  'node_modules/qs/lib/index.js'(exports2, module2) {
    'use strict';
    var stringify = require_stringify2();
    var parse = require_parse2();
    var formats = require_formats2();
    module2.exports = {
      formats,
      parse,
      stringify,
    };
  },
});

// node_modules/mime/Mime.js
var require_Mime = __commonJS({
  'node_modules/mime/Mime.js'(exports2, module2) {
    'use strict';
    function Mime() {
      this._types = /* @__PURE__ */ Object.create(null);
      this._extensions = /* @__PURE__ */ Object.create(null);
      for (let i = 0; i < arguments.length; i++) {
        this.define(arguments[i]);
      }
      this.define = this.define.bind(this);
      this.getType = this.getType.bind(this);
      this.getExtension = this.getExtension.bind(this);
    }
    Mime.prototype.define = function (typeMap, force) {
      for (let type in typeMap) {
        let extensions = typeMap[type].map(function (t2) {
          return t2.toLowerCase();
        });
        type = type.toLowerCase();
        for (let i = 0; i < extensions.length; i++) {
          const ext = extensions[i];
          if (ext[0] === '*') {
            continue;
          }
          if (!force && ext in this._types) {
            throw new Error(
              'Attempt to change mapping for "' +
                ext +
                '" extension from "' +
                this._types[ext] +
                '" to "' +
                type +
                '". Pass `force=true` to allow this, otherwise remove "' +
                ext +
                '" from the list of extensions for "' +
                type +
                '".'
            );
          }
          this._types[ext] = type;
        }
        if (force || !this._extensions[type]) {
          const ext = extensions[0];
          this._extensions[type] = ext[0] !== '*' ? ext : ext.substr(1);
        }
      }
    };
    Mime.prototype.getType = function (path) {
      path = String(path);
      let last = path.replace(/^.*[/\\]/, '').toLowerCase();
      let ext = last.replace(/^.*\./, '').toLowerCase();
      let hasPath = last.length < path.length;
      let hasDot = ext.length < last.length - 1;
      return ((hasDot || !hasPath) && this._types[ext]) || null;
    };
    Mime.prototype.getExtension = function (type) {
      type = /^\s*([^;\s]*)/.test(type) && RegExp.$1;
      return (type && this._extensions[type.toLowerCase()]) || null;
    };
    module2.exports = Mime;
  },
});

// node_modules/mime/types/standard.js
var require_standard = __commonJS({
  'node_modules/mime/types/standard.js'(exports2, module2) {
    'use strict';
    module2.exports = {
      'application/andrew-inset': ['ez'],
      'application/applixware': ['aw'],
      'application/atom+xml': ['atom'],
      'application/atomcat+xml': ['atomcat'],
      'application/atomdeleted+xml': ['atomdeleted'],
      'application/atomsvc+xml': ['atomsvc'],
      'application/atsc-dwd+xml': ['dwd'],
      'application/atsc-held+xml': ['held'],
      'application/atsc-rsat+xml': ['rsat'],
      'application/bdoc': ['bdoc'],
      'application/calendar+xml': ['xcs'],
      'application/ccxml+xml': ['ccxml'],
      'application/cdfx+xml': ['cdfx'],
      'application/cdmi-capability': ['cdmia'],
      'application/cdmi-container': ['cdmic'],
      'application/cdmi-domain': ['cdmid'],
      'application/cdmi-object': ['cdmio'],
      'application/cdmi-queue': ['cdmiq'],
      'application/cu-seeme': ['cu'],
      'application/dash+xml': ['mpd'],
      'application/davmount+xml': ['davmount'],
      'application/docbook+xml': ['dbk'],
      'application/dssc+der': ['dssc'],
      'application/dssc+xml': ['xdssc'],
      'application/ecmascript': ['es', 'ecma'],
      'application/emma+xml': ['emma'],
      'application/emotionml+xml': ['emotionml'],
      'application/epub+zip': ['epub'],
      'application/exi': ['exi'],
      'application/express': ['exp'],
      'application/fdt+xml': ['fdt'],
      'application/font-tdpfr': ['pfr'],
      'application/geo+json': ['geojson'],
      'application/gml+xml': ['gml'],
      'application/gpx+xml': ['gpx'],
      'application/gxf': ['gxf'],
      'application/gzip': ['gz'],
      'application/hjson': ['hjson'],
      'application/hyperstudio': ['stk'],
      'application/inkml+xml': ['ink', 'inkml'],
      'application/ipfix': ['ipfix'],
      'application/its+xml': ['its'],
      'application/java-archive': ['jar', 'war', 'ear'],
      'application/java-serialized-object': ['ser'],
      'application/java-vm': ['class'],
      'application/javascript': ['js', 'mjs'],
      'application/json': ['json', 'map'],
      'application/json5': ['json5'],
      'application/jsonml+json': ['jsonml'],
      'application/ld+json': ['jsonld'],
      'application/lgr+xml': ['lgr'],
      'application/lost+xml': ['lostxml'],
      'application/mac-binhex40': ['hqx'],
      'application/mac-compactpro': ['cpt'],
      'application/mads+xml': ['mads'],
      'application/manifest+json': ['webmanifest'],
      'application/marc': ['mrc'],
      'application/marcxml+xml': ['mrcx'],
      'application/mathematica': ['ma', 'nb', 'mb'],
      'application/mathml+xml': ['mathml'],
      'application/mbox': ['mbox'],
      'application/mediaservercontrol+xml': ['mscml'],
      'application/metalink+xml': ['metalink'],
      'application/metalink4+xml': ['meta4'],
      'application/mets+xml': ['mets'],
      'application/mmt-aei+xml': ['maei'],
      'application/mmt-usd+xml': ['musd'],
      'application/mods+xml': ['mods'],
      'application/mp21': ['m21', 'mp21'],
      'application/mp4': ['mp4s', 'm4p'],
      'application/msword': ['doc', 'dot'],
      'application/mxf': ['mxf'],
      'application/n-quads': ['nq'],
      'application/n-triples': ['nt'],
      'application/node': ['cjs'],
      'application/octet-stream': [
        'bin',
        'dms',
        'lrf',
        'mar',
        'so',
        'dist',
        'distz',
        'pkg',
        'bpk',
        'dump',
        'elc',
        'deploy',
        'exe',
        'dll',
        'deb',
        'dmg',
        'iso',
        'img',
        'msi',
        'msp',
        'msm',
        'buffer',
      ],
      'application/oda': ['oda'],
      'application/oebps-package+xml': ['opf'],
      'application/ogg': ['ogx'],
      'application/omdoc+xml': ['omdoc'],
      'application/onenote': ['onetoc', 'onetoc2', 'onetmp', 'onepkg'],
      'application/oxps': ['oxps'],
      'application/p2p-overlay+xml': ['relo'],
      'application/patch-ops-error+xml': ['xer'],
      'application/pdf': ['pdf'],
      'application/pgp-encrypted': ['pgp'],
      'application/pgp-signature': ['asc', 'sig'],
      'application/pics-rules': ['prf'],
      'application/pkcs10': ['p10'],
      'application/pkcs7-mime': ['p7m', 'p7c'],
      'application/pkcs7-signature': ['p7s'],
      'application/pkcs8': ['p8'],
      'application/pkix-attr-cert': ['ac'],
      'application/pkix-cert': ['cer'],
      'application/pkix-crl': ['crl'],
      'application/pkix-pkipath': ['pkipath'],
      'application/pkixcmp': ['pki'],
      'application/pls+xml': ['pls'],
      'application/postscript': ['ai', 'eps', 'ps'],
      'application/provenance+xml': ['provx'],
      'application/pskc+xml': ['pskcxml'],
      'application/raml+yaml': ['raml'],
      'application/rdf+xml': ['rdf', 'owl'],
      'application/reginfo+xml': ['rif'],
      'application/relax-ng-compact-syntax': ['rnc'],
      'application/resource-lists+xml': ['rl'],
      'application/resource-lists-diff+xml': ['rld'],
      'application/rls-services+xml': ['rs'],
      'application/route-apd+xml': ['rapd'],
      'application/route-s-tsid+xml': ['sls'],
      'application/route-usd+xml': ['rusd'],
      'application/rpki-ghostbusters': ['gbr'],
      'application/rpki-manifest': ['mft'],
      'application/rpki-roa': ['roa'],
      'application/rsd+xml': ['rsd'],
      'application/rss+xml': ['rss'],
      'application/rtf': ['rtf'],
      'application/sbml+xml': ['sbml'],
      'application/scvp-cv-request': ['scq'],
      'application/scvp-cv-response': ['scs'],
      'application/scvp-vp-request': ['spq'],
      'application/scvp-vp-response': ['spp'],
      'application/sdp': ['sdp'],
      'application/senml+xml': ['senmlx'],
      'application/sensml+xml': ['sensmlx'],
      'application/set-payment-initiation': ['setpay'],
      'application/set-registration-initiation': ['setreg'],
      'application/shf+xml': ['shf'],
      'application/sieve': ['siv', 'sieve'],
      'application/smil+xml': ['smi', 'smil'],
      'application/sparql-query': ['rq'],
      'application/sparql-results+xml': ['srx'],
      'application/srgs': ['gram'],
      'application/srgs+xml': ['grxml'],
      'application/sru+xml': ['sru'],
      'application/ssdl+xml': ['ssdl'],
      'application/ssml+xml': ['ssml'],
      'application/swid+xml': ['swidtag'],
      'application/tei+xml': ['tei', 'teicorpus'],
      'application/thraud+xml': ['tfi'],
      'application/timestamped-data': ['tsd'],
      'application/toml': ['toml'],
      'application/trig': ['trig'],
      'application/ttml+xml': ['ttml'],
      'application/ubjson': ['ubj'],
      'application/urc-ressheet+xml': ['rsheet'],
      'application/urc-targetdesc+xml': ['td'],
      'application/voicexml+xml': ['vxml'],
      'application/wasm': ['wasm'],
      'application/widget': ['wgt'],
      'application/winhlp': ['hlp'],
      'application/wsdl+xml': ['wsdl'],
      'application/wspolicy+xml': ['wspolicy'],
      'application/xaml+xml': ['xaml'],
      'application/xcap-att+xml': ['xav'],
      'application/xcap-caps+xml': ['xca'],
      'application/xcap-diff+xml': ['xdf'],
      'application/xcap-el+xml': ['xel'],
      'application/xcap-ns+xml': ['xns'],
      'application/xenc+xml': ['xenc'],
      'application/xhtml+xml': ['xhtml', 'xht'],
      'application/xliff+xml': ['xlf'],
      'application/xml': ['xml', 'xsl', 'xsd', 'rng'],
      'application/xml-dtd': ['dtd'],
      'application/xop+xml': ['xop'],
      'application/xproc+xml': ['xpl'],
      'application/xslt+xml': ['*xsl', 'xslt'],
      'application/xspf+xml': ['xspf'],
      'application/xv+xml': ['mxml', 'xhvml', 'xvml', 'xvm'],
      'application/yang': ['yang'],
      'application/yin+xml': ['yin'],
      'application/zip': ['zip'],
      'audio/3gpp': ['*3gpp'],
      'audio/adpcm': ['adp'],
      'audio/amr': ['amr'],
      'audio/basic': ['au', 'snd'],
      'audio/midi': ['mid', 'midi', 'kar', 'rmi'],
      'audio/mobile-xmf': ['mxmf'],
      'audio/mp3': ['*mp3'],
      'audio/mp4': ['m4a', 'mp4a'],
      'audio/mpeg': ['mpga', 'mp2', 'mp2a', 'mp3', 'm2a', 'm3a'],
      'audio/ogg': ['oga', 'ogg', 'spx', 'opus'],
      'audio/s3m': ['s3m'],
      'audio/silk': ['sil'],
      'audio/wav': ['wav'],
      'audio/wave': ['*wav'],
      'audio/webm': ['weba'],
      'audio/xm': ['xm'],
      'font/collection': ['ttc'],
      'font/otf': ['otf'],
      'font/ttf': ['ttf'],
      'font/woff': ['woff'],
      'font/woff2': ['woff2'],
      'image/aces': ['exr'],
      'image/apng': ['apng'],
      'image/avif': ['avif'],
      'image/bmp': ['bmp'],
      'image/cgm': ['cgm'],
      'image/dicom-rle': ['drle'],
      'image/emf': ['emf'],
      'image/fits': ['fits'],
      'image/g3fax': ['g3'],
      'image/gif': ['gif'],
      'image/heic': ['heic'],
      'image/heic-sequence': ['heics'],
      'image/heif': ['heif'],
      'image/heif-sequence': ['heifs'],
      'image/hej2k': ['hej2'],
      'image/hsj2': ['hsj2'],
      'image/ief': ['ief'],
      'image/jls': ['jls'],
      'image/jp2': ['jp2', 'jpg2'],
      'image/jpeg': ['jpeg', 'jpg', 'jpe'],
      'image/jph': ['jph'],
      'image/jphc': ['jhc'],
      'image/jpm': ['jpm'],
      'image/jpx': ['jpx', 'jpf'],
      'image/jxr': ['jxr'],
      'image/jxra': ['jxra'],
      'image/jxrs': ['jxrs'],
      'image/jxs': ['jxs'],
      'image/jxsc': ['jxsc'],
      'image/jxsi': ['jxsi'],
      'image/jxss': ['jxss'],
      'image/ktx': ['ktx'],
      'image/ktx2': ['ktx2'],
      'image/png': ['png'],
      'image/sgi': ['sgi'],
      'image/svg+xml': ['svg', 'svgz'],
      'image/t38': ['t38'],
      'image/tiff': ['tif', 'tiff'],
      'image/tiff-fx': ['tfx'],
      'image/webp': ['webp'],
      'image/wmf': ['wmf'],
      'message/disposition-notification': ['disposition-notification'],
      'message/global': ['u8msg'],
      'message/global-delivery-status': ['u8dsn'],
      'message/global-disposition-notification': ['u8mdn'],
      'message/global-headers': ['u8hdr'],
      'message/rfc822': ['eml', 'mime'],
      'model/3mf': ['3mf'],
      'model/gltf+json': ['gltf'],
      'model/gltf-binary': ['glb'],
      'model/iges': ['igs', 'iges'],
      'model/mesh': ['msh', 'mesh', 'silo'],
      'model/mtl': ['mtl'],
      'model/obj': ['obj'],
      'model/step+xml': ['stpx'],
      'model/step+zip': ['stpz'],
      'model/step-xml+zip': ['stpxz'],
      'model/stl': ['stl'],
      'model/vrml': ['wrl', 'vrml'],
      'model/x3d+binary': ['*x3db', 'x3dbz'],
      'model/x3d+fastinfoset': ['x3db'],
      'model/x3d+vrml': ['*x3dv', 'x3dvz'],
      'model/x3d+xml': ['x3d', 'x3dz'],
      'model/x3d-vrml': ['x3dv'],
      'text/cache-manifest': ['appcache', 'manifest'],
      'text/calendar': ['ics', 'ifb'],
      'text/coffeescript': ['coffee', 'litcoffee'],
      'text/css': ['css'],
      'text/csv': ['csv'],
      'text/html': ['html', 'htm', 'shtml'],
      'text/jade': ['jade'],
      'text/jsx': ['jsx'],
      'text/less': ['less'],
      'text/markdown': ['markdown', 'md'],
      'text/mathml': ['mml'],
      'text/mdx': ['mdx'],
      'text/n3': ['n3'],
      'text/plain': ['txt', 'text', 'conf', 'def', 'list', 'log', 'in', 'ini'],
      'text/richtext': ['rtx'],
      'text/rtf': ['*rtf'],
      'text/sgml': ['sgml', 'sgm'],
      'text/shex': ['shex'],
      'text/slim': ['slim', 'slm'],
      'text/spdx': ['spdx'],
      'text/stylus': ['stylus', 'styl'],
      'text/tab-separated-values': ['tsv'],
      'text/troff': ['t', 'tr', 'roff', 'man', 'me', 'ms'],
      'text/turtle': ['ttl'],
      'text/uri-list': ['uri', 'uris', 'urls'],
      'text/vcard': ['vcard'],
      'text/vtt': ['vtt'],
      'text/xml': ['*xml'],
      'text/yaml': ['yaml', 'yml'],
      'video/3gpp': ['3gp', '3gpp'],
      'video/3gpp2': ['3g2'],
      'video/h261': ['h261'],
      'video/h263': ['h263'],
      'video/h264': ['h264'],
      'video/iso.segment': ['m4s'],
      'video/jpeg': ['jpgv'],
      'video/jpm': ['*jpm', 'jpgm'],
      'video/mj2': ['mj2', 'mjp2'],
      'video/mp2t': ['ts'],
      'video/mp4': ['mp4', 'mp4v', 'mpg4'],
      'video/mpeg': ['mpeg', 'mpg', 'mpe', 'm1v', 'm2v'],
      'video/ogg': ['ogv'],
      'video/quicktime': ['qt', 'mov'],
      'video/webm': ['webm'],
    };
  },
});

// node_modules/mime/types/other.js
var require_other = __commonJS({
  'node_modules/mime/types/other.js'(exports2, module2) {
    'use strict';
    module2.exports = {
      'application/prs.cww': ['cww'],
      'application/vnd.1000minds.decision-model+xml': ['1km'],
      'application/vnd.3gpp.pic-bw-large': ['plb'],
      'application/vnd.3gpp.pic-bw-small': ['psb'],
      'application/vnd.3gpp.pic-bw-var': ['pvb'],
      'application/vnd.3gpp2.tcap': ['tcap'],
      'application/vnd.3m.post-it-notes': ['pwn'],
      'application/vnd.accpac.simply.aso': ['aso'],
      'application/vnd.accpac.simply.imp': ['imp'],
      'application/vnd.acucobol': ['acu'],
      'application/vnd.acucorp': ['atc', 'acutc'],
      'application/vnd.adobe.air-application-installer-package+zip': ['air'],
      'application/vnd.adobe.formscentral.fcdt': ['fcdt'],
      'application/vnd.adobe.fxp': ['fxp', 'fxpl'],
      'application/vnd.adobe.xdp+xml': ['xdp'],
      'application/vnd.adobe.xfdf': ['xfdf'],
      'application/vnd.ahead.space': ['ahead'],
      'application/vnd.airzip.filesecure.azf': ['azf'],
      'application/vnd.airzip.filesecure.azs': ['azs'],
      'application/vnd.amazon.ebook': ['azw'],
      'application/vnd.americandynamics.acc': ['acc'],
      'application/vnd.amiga.ami': ['ami'],
      'application/vnd.android.package-archive': ['apk'],
      'application/vnd.anser-web-certificate-issue-initiation': ['cii'],
      'application/vnd.anser-web-funds-transfer-initiation': ['fti'],
      'application/vnd.antix.game-component': ['atx'],
      'application/vnd.apple.installer+xml': ['mpkg'],
      'application/vnd.apple.keynote': ['key'],
      'application/vnd.apple.mpegurl': ['m3u8'],
      'application/vnd.apple.numbers': ['numbers'],
      'application/vnd.apple.pages': ['pages'],
      'application/vnd.apple.pkpass': ['pkpass'],
      'application/vnd.aristanetworks.swi': ['swi'],
      'application/vnd.astraea-software.iota': ['iota'],
      'application/vnd.audiograph': ['aep'],
      'application/vnd.balsamiq.bmml+xml': ['bmml'],
      'application/vnd.blueice.multipass': ['mpm'],
      'application/vnd.bmi': ['bmi'],
      'application/vnd.businessobjects': ['rep'],
      'application/vnd.chemdraw+xml': ['cdxml'],
      'application/vnd.chipnuts.karaoke-mmd': ['mmd'],
      'application/vnd.cinderella': ['cdy'],
      'application/vnd.citationstyles.style+xml': ['csl'],
      'application/vnd.claymore': ['cla'],
      'application/vnd.cloanto.rp9': ['rp9'],
      'application/vnd.clonk.c4group': ['c4g', 'c4d', 'c4f', 'c4p', 'c4u'],
      'application/vnd.cluetrust.cartomobile-config': ['c11amc'],
      'application/vnd.cluetrust.cartomobile-config-pkg': ['c11amz'],
      'application/vnd.commonspace': ['csp'],
      'application/vnd.contact.cmsg': ['cdbcmsg'],
      'application/vnd.cosmocaller': ['cmc'],
      'application/vnd.crick.clicker': ['clkx'],
      'application/vnd.crick.clicker.keyboard': ['clkk'],
      'application/vnd.crick.clicker.palette': ['clkp'],
      'application/vnd.crick.clicker.template': ['clkt'],
      'application/vnd.crick.clicker.wordbank': ['clkw'],
      'application/vnd.criticaltools.wbs+xml': ['wbs'],
      'application/vnd.ctc-posml': ['pml'],
      'application/vnd.cups-ppd': ['ppd'],
      'application/vnd.curl.car': ['car'],
      'application/vnd.curl.pcurl': ['pcurl'],
      'application/vnd.dart': ['dart'],
      'application/vnd.data-vision.rdz': ['rdz'],
      'application/vnd.dbf': ['dbf'],
      'application/vnd.dece.data': ['uvf', 'uvvf', 'uvd', 'uvvd'],
      'application/vnd.dece.ttml+xml': ['uvt', 'uvvt'],
      'application/vnd.dece.unspecified': ['uvx', 'uvvx'],
      'application/vnd.dece.zip': ['uvz', 'uvvz'],
      'application/vnd.denovo.fcselayout-link': ['fe_launch'],
      'application/vnd.dna': ['dna'],
      'application/vnd.dolby.mlp': ['mlp'],
      'application/vnd.dpgraph': ['dpg'],
      'application/vnd.dreamfactory': ['dfac'],
      'application/vnd.ds-keypoint': ['kpxx'],
      'application/vnd.dvb.ait': ['ait'],
      'application/vnd.dvb.service': ['svc'],
      'application/vnd.dynageo': ['geo'],
      'application/vnd.ecowin.chart': ['mag'],
      'application/vnd.enliven': ['nml'],
      'application/vnd.epson.esf': ['esf'],
      'application/vnd.epson.msf': ['msf'],
      'application/vnd.epson.quickanime': ['qam'],
      'application/vnd.epson.salt': ['slt'],
      'application/vnd.epson.ssf': ['ssf'],
      'application/vnd.eszigno3+xml': ['es3', 'et3'],
      'application/vnd.ezpix-album': ['ez2'],
      'application/vnd.ezpix-package': ['ez3'],
      'application/vnd.fdf': ['fdf'],
      'application/vnd.fdsn.mseed': ['mseed'],
      'application/vnd.fdsn.seed': ['seed', 'dataless'],
      'application/vnd.flographit': ['gph'],
      'application/vnd.fluxtime.clip': ['ftc'],
      'application/vnd.framemaker': ['fm', 'frame', 'maker', 'book'],
      'application/vnd.frogans.fnc': ['fnc'],
      'application/vnd.frogans.ltf': ['ltf'],
      'application/vnd.fsc.weblaunch': ['fsc'],
      'application/vnd.fujitsu.oasys': ['oas'],
      'application/vnd.fujitsu.oasys2': ['oa2'],
      'application/vnd.fujitsu.oasys3': ['oa3'],
      'application/vnd.fujitsu.oasysgp': ['fg5'],
      'application/vnd.fujitsu.oasysprs': ['bh2'],
      'application/vnd.fujixerox.ddd': ['ddd'],
      'application/vnd.fujixerox.docuworks': ['xdw'],
      'application/vnd.fujixerox.docuworks.binder': ['xbd'],
      'application/vnd.fuzzysheet': ['fzs'],
      'application/vnd.genomatix.tuxedo': ['txd'],
      'application/vnd.geogebra.file': ['ggb'],
      'application/vnd.geogebra.tool': ['ggt'],
      'application/vnd.geometry-explorer': ['gex', 'gre'],
      'application/vnd.geonext': ['gxt'],
      'application/vnd.geoplan': ['g2w'],
      'application/vnd.geospace': ['g3w'],
      'application/vnd.gmx': ['gmx'],
      'application/vnd.google-apps.document': ['gdoc'],
      'application/vnd.google-apps.presentation': ['gslides'],
      'application/vnd.google-apps.spreadsheet': ['gsheet'],
      'application/vnd.google-earth.kml+xml': ['kml'],
      'application/vnd.google-earth.kmz': ['kmz'],
      'application/vnd.grafeq': ['gqf', 'gqs'],
      'application/vnd.groove-account': ['gac'],
      'application/vnd.groove-help': ['ghf'],
      'application/vnd.groove-identity-message': ['gim'],
      'application/vnd.groove-injector': ['grv'],
      'application/vnd.groove-tool-message': ['gtm'],
      'application/vnd.groove-tool-template': ['tpl'],
      'application/vnd.groove-vcard': ['vcg'],
      'application/vnd.hal+xml': ['hal'],
      'application/vnd.handheld-entertainment+xml': ['zmm'],
      'application/vnd.hbci': ['hbci'],
      'application/vnd.hhe.lesson-player': ['les'],
      'application/vnd.hp-hpgl': ['hpgl'],
      'application/vnd.hp-hpid': ['hpid'],
      'application/vnd.hp-hps': ['hps'],
      'application/vnd.hp-jlyt': ['jlt'],
      'application/vnd.hp-pcl': ['pcl'],
      'application/vnd.hp-pclxl': ['pclxl'],
      'application/vnd.hydrostatix.sof-data': ['sfd-hdstx'],
      'application/vnd.ibm.minipay': ['mpy'],
      'application/vnd.ibm.modcap': ['afp', 'listafp', 'list3820'],
      'application/vnd.ibm.rights-management': ['irm'],
      'application/vnd.ibm.secure-container': ['sc'],
      'application/vnd.iccprofile': ['icc', 'icm'],
      'application/vnd.igloader': ['igl'],
      'application/vnd.immervision-ivp': ['ivp'],
      'application/vnd.immervision-ivu': ['ivu'],
      'application/vnd.insors.igm': ['igm'],
      'application/vnd.intercon.formnet': ['xpw', 'xpx'],
      'application/vnd.intergeo': ['i2g'],
      'application/vnd.intu.qbo': ['qbo'],
      'application/vnd.intu.qfx': ['qfx'],
      'application/vnd.ipunplugged.rcprofile': ['rcprofile'],
      'application/vnd.irepository.package+xml': ['irp'],
      'application/vnd.is-xpr': ['xpr'],
      'application/vnd.isac.fcs': ['fcs'],
      'application/vnd.jam': ['jam'],
      'application/vnd.jcp.javame.midlet-rms': ['rms'],
      'application/vnd.jisp': ['jisp'],
      'application/vnd.joost.joda-archive': ['joda'],
      'application/vnd.kahootz': ['ktz', 'ktr'],
      'application/vnd.kde.karbon': ['karbon'],
      'application/vnd.kde.kchart': ['chrt'],
      'application/vnd.kde.kformula': ['kfo'],
      'application/vnd.kde.kivio': ['flw'],
      'application/vnd.kde.kontour': ['kon'],
      'application/vnd.kde.kpresenter': ['kpr', 'kpt'],
      'application/vnd.kde.kspread': ['ksp'],
      'application/vnd.kde.kword': ['kwd', 'kwt'],
      'application/vnd.kenameaapp': ['htke'],
      'application/vnd.kidspiration': ['kia'],
      'application/vnd.kinar': ['kne', 'knp'],
      'application/vnd.koan': ['skp', 'skd', 'skt', 'skm'],
      'application/vnd.kodak-descriptor': ['sse'],
      'application/vnd.las.las+xml': ['lasxml'],
      'application/vnd.llamagraphics.life-balance.desktop': ['lbd'],
      'application/vnd.llamagraphics.life-balance.exchange+xml': ['lbe'],
      'application/vnd.lotus-1-2-3': ['123'],
      'application/vnd.lotus-approach': ['apr'],
      'application/vnd.lotus-freelance': ['pre'],
      'application/vnd.lotus-notes': ['nsf'],
      'application/vnd.lotus-organizer': ['org'],
      'application/vnd.lotus-screencam': ['scm'],
      'application/vnd.lotus-wordpro': ['lwp'],
      'application/vnd.macports.portpkg': ['portpkg'],
      'application/vnd.mapbox-vector-tile': ['mvt'],
      'application/vnd.mcd': ['mcd'],
      'application/vnd.medcalcdata': ['mc1'],
      'application/vnd.mediastation.cdkey': ['cdkey'],
      'application/vnd.mfer': ['mwf'],
      'application/vnd.mfmp': ['mfm'],
      'application/vnd.micrografx.flo': ['flo'],
      'application/vnd.micrografx.igx': ['igx'],
      'application/vnd.mif': ['mif'],
      'application/vnd.mobius.daf': ['daf'],
      'application/vnd.mobius.dis': ['dis'],
      'application/vnd.mobius.mbk': ['mbk'],
      'application/vnd.mobius.mqy': ['mqy'],
      'application/vnd.mobius.msl': ['msl'],
      'application/vnd.mobius.plc': ['plc'],
      'application/vnd.mobius.txf': ['txf'],
      'application/vnd.mophun.application': ['mpn'],
      'application/vnd.mophun.certificate': ['mpc'],
      'application/vnd.mozilla.xul+xml': ['xul'],
      'application/vnd.ms-artgalry': ['cil'],
      'application/vnd.ms-cab-compressed': ['cab'],
      'application/vnd.ms-excel': ['xls', 'xlm', 'xla', 'xlc', 'xlt', 'xlw'],
      'application/vnd.ms-excel.addin.macroenabled.12': ['xlam'],
      'application/vnd.ms-excel.sheet.binary.macroenabled.12': ['xlsb'],
      'application/vnd.ms-excel.sheet.macroenabled.12': ['xlsm'],
      'application/vnd.ms-excel.template.macroenabled.12': ['xltm'],
      'application/vnd.ms-fontobject': ['eot'],
      'application/vnd.ms-htmlhelp': ['chm'],
      'application/vnd.ms-ims': ['ims'],
      'application/vnd.ms-lrm': ['lrm'],
      'application/vnd.ms-officetheme': ['thmx'],
      'application/vnd.ms-outlook': ['msg'],
      'application/vnd.ms-pki.seccat': ['cat'],
      'application/vnd.ms-pki.stl': ['*stl'],
      'application/vnd.ms-powerpoint': ['ppt', 'pps', 'pot'],
      'application/vnd.ms-powerpoint.addin.macroenabled.12': ['ppam'],
      'application/vnd.ms-powerpoint.presentation.macroenabled.12': ['pptm'],
      'application/vnd.ms-powerpoint.slide.macroenabled.12': ['sldm'],
      'application/vnd.ms-powerpoint.slideshow.macroenabled.12': ['ppsm'],
      'application/vnd.ms-powerpoint.template.macroenabled.12': ['potm'],
      'application/vnd.ms-project': ['mpp', 'mpt'],
      'application/vnd.ms-word.document.macroenabled.12': ['docm'],
      'application/vnd.ms-word.template.macroenabled.12': ['dotm'],
      'application/vnd.ms-works': ['wps', 'wks', 'wcm', 'wdb'],
      'application/vnd.ms-wpl': ['wpl'],
      'application/vnd.ms-xpsdocument': ['xps'],
      'application/vnd.mseq': ['mseq'],
      'application/vnd.musician': ['mus'],
      'application/vnd.muvee.style': ['msty'],
      'application/vnd.mynfc': ['taglet'],
      'application/vnd.neurolanguage.nlu': ['nlu'],
      'application/vnd.nitf': ['ntf', 'nitf'],
      'application/vnd.noblenet-directory': ['nnd'],
      'application/vnd.noblenet-sealer': ['nns'],
      'application/vnd.noblenet-web': ['nnw'],
      'application/vnd.nokia.n-gage.ac+xml': ['*ac'],
      'application/vnd.nokia.n-gage.data': ['ngdat'],
      'application/vnd.nokia.n-gage.symbian.install': ['n-gage'],
      'application/vnd.nokia.radio-preset': ['rpst'],
      'application/vnd.nokia.radio-presets': ['rpss'],
      'application/vnd.novadigm.edm': ['edm'],
      'application/vnd.novadigm.edx': ['edx'],
      'application/vnd.novadigm.ext': ['ext'],
      'application/vnd.oasis.opendocument.chart': ['odc'],
      'application/vnd.oasis.opendocument.chart-template': ['otc'],
      'application/vnd.oasis.opendocument.database': ['odb'],
      'application/vnd.oasis.opendocument.formula': ['odf'],
      'application/vnd.oasis.opendocument.formula-template': ['odft'],
      'application/vnd.oasis.opendocument.graphics': ['odg'],
      'application/vnd.oasis.opendocument.graphics-template': ['otg'],
      'application/vnd.oasis.opendocument.image': ['odi'],
      'application/vnd.oasis.opendocument.image-template': ['oti'],
      'application/vnd.oasis.opendocument.presentation': ['odp'],
      'application/vnd.oasis.opendocument.presentation-template': ['otp'],
      'application/vnd.oasis.opendocument.spreadsheet': ['ods'],
      'application/vnd.oasis.opendocument.spreadsheet-template': ['ots'],
      'application/vnd.oasis.opendocument.text': ['odt'],
      'application/vnd.oasis.opendocument.text-master': ['odm'],
      'application/vnd.oasis.opendocument.text-template': ['ott'],
      'application/vnd.oasis.opendocument.text-web': ['oth'],
      'application/vnd.olpc-sugar': ['xo'],
      'application/vnd.oma.dd2+xml': ['dd2'],
      'application/vnd.openblox.game+xml': ['obgx'],
      'application/vnd.openofficeorg.extension': ['oxt'],
      'application/vnd.openstreetmap.data+xml': ['osm'],
      'application/vnd.openxmlformats-officedocument.presentationml.presentation':
        ['pptx'],
      'application/vnd.openxmlformats-officedocument.presentationml.slide': [
        'sldx',
      ],
      'application/vnd.openxmlformats-officedocument.presentationml.slideshow':
        ['ppsx'],
      'application/vnd.openxmlformats-officedocument.presentationml.template': [
        'potx',
      ],
      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': [
        'xlsx',
      ],
      'application/vnd.openxmlformats-officedocument.spreadsheetml.template': [
        'xltx',
      ],
      'application/vnd.openxmlformats-officedocument.wordprocessingml.document':
        ['docx'],
      'application/vnd.openxmlformats-officedocument.wordprocessingml.template':
        ['dotx'],
      'application/vnd.osgeo.mapguide.package': ['mgp'],
      'application/vnd.osgi.dp': ['dp'],
      'application/vnd.osgi.subsystem': ['esa'],
      'application/vnd.palm': ['pdb', 'pqa', 'oprc'],
      'application/vnd.pawaafile': ['paw'],
      'application/vnd.pg.format': ['str'],
      'application/vnd.pg.osasli': ['ei6'],
      'application/vnd.picsel': ['efif'],
      'application/vnd.pmi.widget': ['wg'],
      'application/vnd.pocketlearn': ['plf'],
      'application/vnd.powerbuilder6': ['pbd'],
      'application/vnd.previewsystems.box': ['box'],
      'application/vnd.proteus.magazine': ['mgz'],
      'application/vnd.publishare-delta-tree': ['qps'],
      'application/vnd.pvi.ptid1': ['ptid'],
      'application/vnd.quark.quarkxpress': [
        'qxd',
        'qxt',
        'qwd',
        'qwt',
        'qxl',
        'qxb',
      ],
      'application/vnd.rar': ['rar'],
      'application/vnd.realvnc.bed': ['bed'],
      'application/vnd.recordare.musicxml': ['mxl'],
      'application/vnd.recordare.musicxml+xml': ['musicxml'],
      'application/vnd.rig.cryptonote': ['cryptonote'],
      'application/vnd.rim.cod': ['cod'],
      'application/vnd.rn-realmedia': ['rm'],
      'application/vnd.rn-realmedia-vbr': ['rmvb'],
      'application/vnd.route66.link66+xml': ['link66'],
      'application/vnd.sailingtracker.track': ['st'],
      'application/vnd.seemail': ['see'],
      'application/vnd.sema': ['sema'],
      'application/vnd.semd': ['semd'],
      'application/vnd.semf': ['semf'],
      'application/vnd.shana.informed.formdata': ['ifm'],
      'application/vnd.shana.informed.formtemplate': ['itp'],
      'application/vnd.shana.informed.interchange': ['iif'],
      'application/vnd.shana.informed.package': ['ipk'],
      'application/vnd.simtech-mindmapper': ['twd', 'twds'],
      'application/vnd.smaf': ['mmf'],
      'application/vnd.smart.teacher': ['teacher'],
      'application/vnd.software602.filler.form+xml': ['fo'],
      'application/vnd.solent.sdkm+xml': ['sdkm', 'sdkd'],
      'application/vnd.spotfire.dxp': ['dxp'],
      'application/vnd.spotfire.sfs': ['sfs'],
      'application/vnd.stardivision.calc': ['sdc'],
      'application/vnd.stardivision.draw': ['sda'],
      'application/vnd.stardivision.impress': ['sdd'],
      'application/vnd.stardivision.math': ['smf'],
      'application/vnd.stardivision.writer': ['sdw', 'vor'],
      'application/vnd.stardivision.writer-global': ['sgl'],
      'application/vnd.stepmania.package': ['smzip'],
      'application/vnd.stepmania.stepchart': ['sm'],
      'application/vnd.sun.wadl+xml': ['wadl'],
      'application/vnd.sun.xml.calc': ['sxc'],
      'application/vnd.sun.xml.calc.template': ['stc'],
      'application/vnd.sun.xml.draw': ['sxd'],
      'application/vnd.sun.xml.draw.template': ['std'],
      'application/vnd.sun.xml.impress': ['sxi'],
      'application/vnd.sun.xml.impress.template': ['sti'],
      'application/vnd.sun.xml.math': ['sxm'],
      'application/vnd.sun.xml.writer': ['sxw'],
      'application/vnd.sun.xml.writer.global': ['sxg'],
      'application/vnd.sun.xml.writer.template': ['stw'],
      'application/vnd.sus-calendar': ['sus', 'susp'],
      'application/vnd.svd': ['svd'],
      'application/vnd.symbian.install': ['sis', 'sisx'],
      'application/vnd.syncml+xml': ['xsm'],
      'application/vnd.syncml.dm+wbxml': ['bdm'],
      'application/vnd.syncml.dm+xml': ['xdm'],
      'application/vnd.syncml.dmddf+xml': ['ddf'],
      'application/vnd.tao.intent-module-archive': ['tao'],
      'application/vnd.tcpdump.pcap': ['pcap', 'cap', 'dmp'],
      'application/vnd.tmobile-livetv': ['tmo'],
      'application/vnd.trid.tpt': ['tpt'],
      'application/vnd.triscape.mxs': ['mxs'],
      'application/vnd.trueapp': ['tra'],
      'application/vnd.ufdl': ['ufd', 'ufdl'],
      'application/vnd.uiq.theme': ['utz'],
      'application/vnd.umajin': ['umj'],
      'application/vnd.unity': ['unityweb'],
      'application/vnd.uoml+xml': ['uoml'],
      'application/vnd.vcx': ['vcx'],
      'application/vnd.visio': ['vsd', 'vst', 'vss', 'vsw'],
      'application/vnd.visionary': ['vis'],
      'application/vnd.vsf': ['vsf'],
      'application/vnd.wap.wbxml': ['wbxml'],
      'application/vnd.wap.wmlc': ['wmlc'],
      'application/vnd.wap.wmlscriptc': ['wmlsc'],
      'application/vnd.webturbo': ['wtb'],
      'application/vnd.wolfram.player': ['nbp'],
      'application/vnd.wordperfect': ['wpd'],
      'application/vnd.wqd': ['wqd'],
      'application/vnd.wt.stf': ['stf'],
      'application/vnd.xara': ['xar'],
      'application/vnd.xfdl': ['xfdl'],
      'application/vnd.yamaha.hv-dic': ['hvd'],
      'application/vnd.yamaha.hv-script': ['hvs'],
      'application/vnd.yamaha.hv-voice': ['hvp'],
      'application/vnd.yamaha.openscoreformat': ['osf'],
      'application/vnd.yamaha.openscoreformat.osfpvg+xml': ['osfpvg'],
      'application/vnd.yamaha.smaf-audio': ['saf'],
      'application/vnd.yamaha.smaf-phrase': ['spf'],
      'application/vnd.yellowriver-custom-menu': ['cmp'],
      'application/vnd.zul': ['zir', 'zirz'],
      'application/vnd.zzazz.deck+xml': ['zaz'],
      'application/x-7z-compressed': ['7z'],
      'application/x-abiword': ['abw'],
      'application/x-ace-compressed': ['ace'],
      'application/x-apple-diskimage': ['*dmg'],
      'application/x-arj': ['arj'],
      'application/x-authorware-bin': ['aab', 'x32', 'u32', 'vox'],
      'application/x-authorware-map': ['aam'],
      'application/x-authorware-seg': ['aas'],
      'application/x-bcpio': ['bcpio'],
      'application/x-bdoc': ['*bdoc'],
      'application/x-bittorrent': ['torrent'],
      'application/x-blorb': ['blb', 'blorb'],
      'application/x-bzip': ['bz'],
      'application/x-bzip2': ['bz2', 'boz'],
      'application/x-cbr': ['cbr', 'cba', 'cbt', 'cbz', 'cb7'],
      'application/x-cdlink': ['vcd'],
      'application/x-cfs-compressed': ['cfs'],
      'application/x-chat': ['chat'],
      'application/x-chess-pgn': ['pgn'],
      'application/x-chrome-extension': ['crx'],
      'application/x-cocoa': ['cco'],
      'application/x-conference': ['nsc'],
      'application/x-cpio': ['cpio'],
      'application/x-csh': ['csh'],
      'application/x-debian-package': ['*deb', 'udeb'],
      'application/x-dgc-compressed': ['dgc'],
      'application/x-director': [
        'dir',
        'dcr',
        'dxr',
        'cst',
        'cct',
        'cxt',
        'w3d',
        'fgd',
        'swa',
      ],
      'application/x-doom': ['wad'],
      'application/x-dtbncx+xml': ['ncx'],
      'application/x-dtbook+xml': ['dtb'],
      'application/x-dtbresource+xml': ['res'],
      'application/x-dvi': ['dvi'],
      'application/x-envoy': ['evy'],
      'application/x-eva': ['eva'],
      'application/x-font-bdf': ['bdf'],
      'application/x-font-ghostscript': ['gsf'],
      'application/x-font-linux-psf': ['psf'],
      'application/x-font-pcf': ['pcf'],
      'application/x-font-snf': ['snf'],
      'application/x-font-type1': ['pfa', 'pfb', 'pfm', 'afm'],
      'application/x-freearc': ['arc'],
      'application/x-futuresplash': ['spl'],
      'application/x-gca-compressed': ['gca'],
      'application/x-glulx': ['ulx'],
      'application/x-gnumeric': ['gnumeric'],
      'application/x-gramps-xml': ['gramps'],
      'application/x-gtar': ['gtar'],
      'application/x-hdf': ['hdf'],
      'application/x-httpd-php': ['php'],
      'application/x-install-instructions': ['install'],
      'application/x-iso9660-image': ['*iso'],
      'application/x-iwork-keynote-sffkey': ['*key'],
      'application/x-iwork-numbers-sffnumbers': ['*numbers'],
      'application/x-iwork-pages-sffpages': ['*pages'],
      'application/x-java-archive-diff': ['jardiff'],
      'application/x-java-jnlp-file': ['jnlp'],
      'application/x-keepass2': ['kdbx'],
      'application/x-latex': ['latex'],
      'application/x-lua-bytecode': ['luac'],
      'application/x-lzh-compressed': ['lzh', 'lha'],
      'application/x-makeself': ['run'],
      'application/x-mie': ['mie'],
      'application/x-mobipocket-ebook': ['prc', 'mobi'],
      'application/x-ms-application': ['application'],
      'application/x-ms-shortcut': ['lnk'],
      'application/x-ms-wmd': ['wmd'],
      'application/x-ms-wmz': ['wmz'],
      'application/x-ms-xbap': ['xbap'],
      'application/x-msaccess': ['mdb'],
      'application/x-msbinder': ['obd'],
      'application/x-mscardfile': ['crd'],
      'application/x-msclip': ['clp'],
      'application/x-msdos-program': ['*exe'],
      'application/x-msdownload': ['*exe', '*dll', 'com', 'bat', '*msi'],
      'application/x-msmediaview': ['mvb', 'm13', 'm14'],
      'application/x-msmetafile': ['*wmf', '*wmz', '*emf', 'emz'],
      'application/x-msmoney': ['mny'],
      'application/x-mspublisher': ['pub'],
      'application/x-msschedule': ['scd'],
      'application/x-msterminal': ['trm'],
      'application/x-mswrite': ['wri'],
      'application/x-netcdf': ['nc', 'cdf'],
      'application/x-ns-proxy-autoconfig': ['pac'],
      'application/x-nzb': ['nzb'],
      'application/x-perl': ['pl', 'pm'],
      'application/x-pilot': ['*prc', '*pdb'],
      'application/x-pkcs12': ['p12', 'pfx'],
      'application/x-pkcs7-certificates': ['p7b', 'spc'],
      'application/x-pkcs7-certreqresp': ['p7r'],
      'application/x-rar-compressed': ['*rar'],
      'application/x-redhat-package-manager': ['rpm'],
      'application/x-research-info-systems': ['ris'],
      'application/x-sea': ['sea'],
      'application/x-sh': ['sh'],
      'application/x-shar': ['shar'],
      'application/x-shockwave-flash': ['swf'],
      'application/x-silverlight-app': ['xap'],
      'application/x-sql': ['sql'],
      'application/x-stuffit': ['sit'],
      'application/x-stuffitx': ['sitx'],
      'application/x-subrip': ['srt'],
      'application/x-sv4cpio': ['sv4cpio'],
      'application/x-sv4crc': ['sv4crc'],
      'application/x-t3vm-image': ['t3'],
      'application/x-tads': ['gam'],
      'application/x-tar': ['tar'],
      'application/x-tcl': ['tcl', 'tk'],
      'application/x-tex': ['tex'],
      'application/x-tex-tfm': ['tfm'],
      'application/x-texinfo': ['texinfo', 'texi'],
      'application/x-tgif': ['*obj'],
      'application/x-ustar': ['ustar'],
      'application/x-virtualbox-hdd': ['hdd'],
      'application/x-virtualbox-ova': ['ova'],
      'application/x-virtualbox-ovf': ['ovf'],
      'application/x-virtualbox-vbox': ['vbox'],
      'application/x-virtualbox-vbox-extpack': ['vbox-extpack'],
      'application/x-virtualbox-vdi': ['vdi'],
      'application/x-virtualbox-vhd': ['vhd'],
      'application/x-virtualbox-vmdk': ['vmdk'],
      'application/x-wais-source': ['src'],
      'application/x-web-app-manifest+json': ['webapp'],
      'application/x-x509-ca-cert': ['der', 'crt', 'pem'],
      'application/x-xfig': ['fig'],
      'application/x-xliff+xml': ['*xlf'],
      'application/x-xpinstall': ['xpi'],
      'application/x-xz': ['xz'],
      'application/x-zmachine': [
        'z1',
        'z2',
        'z3',
        'z4',
        'z5',
        'z6',
        'z7',
        'z8',
      ],
      'audio/vnd.dece.audio': ['uva', 'uvva'],
      'audio/vnd.digital-winds': ['eol'],
      'audio/vnd.dra': ['dra'],
      'audio/vnd.dts': ['dts'],
      'audio/vnd.dts.hd': ['dtshd'],
      'audio/vnd.lucent.voice': ['lvp'],
      'audio/vnd.ms-playready.media.pya': ['pya'],
      'audio/vnd.nuera.ecelp4800': ['ecelp4800'],
      'audio/vnd.nuera.ecelp7470': ['ecelp7470'],
      'audio/vnd.nuera.ecelp9600': ['ecelp9600'],
      'audio/vnd.rip': ['rip'],
      'audio/x-aac': ['aac'],
      'audio/x-aiff': ['aif', 'aiff', 'aifc'],
      'audio/x-caf': ['caf'],
      'audio/x-flac': ['flac'],
      'audio/x-m4a': ['*m4a'],
      'audio/x-matroska': ['mka'],
      'audio/x-mpegurl': ['m3u'],
      'audio/x-ms-wax': ['wax'],
      'audio/x-ms-wma': ['wma'],
      'audio/x-pn-realaudio': ['ram', 'ra'],
      'audio/x-pn-realaudio-plugin': ['rmp'],
      'audio/x-realaudio': ['*ra'],
      'audio/x-wav': ['*wav'],
      'chemical/x-cdx': ['cdx'],
      'chemical/x-cif': ['cif'],
      'chemical/x-cmdf': ['cmdf'],
      'chemical/x-cml': ['cml'],
      'chemical/x-csml': ['csml'],
      'chemical/x-xyz': ['xyz'],
      'image/prs.btif': ['btif'],
      'image/prs.pti': ['pti'],
      'image/vnd.adobe.photoshop': ['psd'],
      'image/vnd.airzip.accelerator.azv': ['azv'],
      'image/vnd.dece.graphic': ['uvi', 'uvvi', 'uvg', 'uvvg'],
      'image/vnd.djvu': ['djvu', 'djv'],
      'image/vnd.dvb.subtitle': ['*sub'],
      'image/vnd.dwg': ['dwg'],
      'image/vnd.dxf': ['dxf'],
      'image/vnd.fastbidsheet': ['fbs'],
      'image/vnd.fpx': ['fpx'],
      'image/vnd.fst': ['fst'],
      'image/vnd.fujixerox.edmics-mmr': ['mmr'],
      'image/vnd.fujixerox.edmics-rlc': ['rlc'],
      'image/vnd.microsoft.icon': ['ico'],
      'image/vnd.ms-dds': ['dds'],
      'image/vnd.ms-modi': ['mdi'],
      'image/vnd.ms-photo': ['wdp'],
      'image/vnd.net-fpx': ['npx'],
      'image/vnd.pco.b16': ['b16'],
      'image/vnd.tencent.tap': ['tap'],
      'image/vnd.valve.source.texture': ['vtf'],
      'image/vnd.wap.wbmp': ['wbmp'],
      'image/vnd.xiff': ['xif'],
      'image/vnd.zbrush.pcx': ['pcx'],
      'image/x-3ds': ['3ds'],
      'image/x-cmu-raster': ['ras'],
      'image/x-cmx': ['cmx'],
      'image/x-freehand': ['fh', 'fhc', 'fh4', 'fh5', 'fh7'],
      'image/x-icon': ['*ico'],
      'image/x-jng': ['jng'],
      'image/x-mrsid-image': ['sid'],
      'image/x-ms-bmp': ['*bmp'],
      'image/x-pcx': ['*pcx'],
      'image/x-pict': ['pic', 'pct'],
      'image/x-portable-anymap': ['pnm'],
      'image/x-portable-bitmap': ['pbm'],
      'image/x-portable-graymap': ['pgm'],
      'image/x-portable-pixmap': ['ppm'],
      'image/x-rgb': ['rgb'],
      'image/x-tga': ['tga'],
      'image/x-xbitmap': ['xbm'],
      'image/x-xpixmap': ['xpm'],
      'image/x-xwindowdump': ['xwd'],
      'message/vnd.wfa.wsc': ['wsc'],
      'model/vnd.collada+xml': ['dae'],
      'model/vnd.dwf': ['dwf'],
      'model/vnd.gdl': ['gdl'],
      'model/vnd.gtw': ['gtw'],
      'model/vnd.mts': ['mts'],
      'model/vnd.opengex': ['ogex'],
      'model/vnd.parasolid.transmit.binary': ['x_b'],
      'model/vnd.parasolid.transmit.text': ['x_t'],
      'model/vnd.sap.vds': ['vds'],
      'model/vnd.usdz+zip': ['usdz'],
      'model/vnd.valve.source.compiled-map': ['bsp'],
      'model/vnd.vtu': ['vtu'],
      'text/prs.lines.tag': ['dsc'],
      'text/vnd.curl': ['curl'],
      'text/vnd.curl.dcurl': ['dcurl'],
      'text/vnd.curl.mcurl': ['mcurl'],
      'text/vnd.curl.scurl': ['scurl'],
      'text/vnd.dvb.subtitle': ['sub'],
      'text/vnd.fly': ['fly'],
      'text/vnd.fmi.flexstor': ['flx'],
      'text/vnd.graphviz': ['gv'],
      'text/vnd.in3d.3dml': ['3dml'],
      'text/vnd.in3d.spot': ['spot'],
      'text/vnd.sun.j2me.app-descriptor': ['jad'],
      'text/vnd.wap.wml': ['wml'],
      'text/vnd.wap.wmlscript': ['wmls'],
      'text/x-asm': ['s', 'asm'],
      'text/x-c': ['c', 'cc', 'cxx', 'cpp', 'h', 'hh', 'dic'],
      'text/x-component': ['htc'],
      'text/x-fortran': ['f', 'for', 'f77', 'f90'],
      'text/x-handlebars-template': ['hbs'],
      'text/x-java-source': ['java'],
      'text/x-lua': ['lua'],
      'text/x-markdown': ['mkd'],
      'text/x-nfo': ['nfo'],
      'text/x-opml': ['opml'],
      'text/x-org': ['*org'],
      'text/x-pascal': ['p', 'pas'],
      'text/x-processing': ['pde'],
      'text/x-sass': ['sass'],
      'text/x-scss': ['scss'],
      'text/x-setext': ['etx'],
      'text/x-sfv': ['sfv'],
      'text/x-suse-ymp': ['ymp'],
      'text/x-uuencode': ['uu'],
      'text/x-vcalendar': ['vcs'],
      'text/x-vcard': ['vcf'],
      'video/vnd.dece.hd': ['uvh', 'uvvh'],
      'video/vnd.dece.mobile': ['uvm', 'uvvm'],
      'video/vnd.dece.pd': ['uvp', 'uvvp'],
      'video/vnd.dece.sd': ['uvs', 'uvvs'],
      'video/vnd.dece.video': ['uvv', 'uvvv'],
      'video/vnd.dvb.file': ['dvb'],
      'video/vnd.fvt': ['fvt'],
      'video/vnd.mpegurl': ['mxu', 'm4u'],
      'video/vnd.ms-playready.media.pyv': ['pyv'],
      'video/vnd.uvvu.mp4': ['uvu', 'uvvu'],
      'video/vnd.vivo': ['viv'],
      'video/x-f4v': ['f4v'],
      'video/x-fli': ['fli'],
      'video/x-flv': ['flv'],
      'video/x-m4v': ['m4v'],
      'video/x-matroska': ['mkv', 'mk3d', 'mks'],
      'video/x-mng': ['mng'],
      'video/x-ms-asf': ['asf', 'asx'],
      'video/x-ms-vob': ['vob'],
      'video/x-ms-wm': ['wm'],
      'video/x-ms-wmv': ['wmv'],
      'video/x-ms-wmx': ['wmx'],
      'video/x-ms-wvx': ['wvx'],
      'video/x-msvideo': ['avi'],
      'video/x-sgi-movie': ['movie'],
      'video/x-smv': ['smv'],
      'x-conference/x-cooltalk': ['ice'],
    };
  },
});

// node_modules/mime/index.js
var require_mime2 = __commonJS({
  'node_modules/mime/index.js'(exports2, module2) {
    'use strict';
    var Mime = require_Mime();
    module2.exports = new Mime(require_standard(), require_other());
  },
});

// node_modules/delayed-stream/lib/delayed_stream.js
var require_delayed_stream2 = __commonJS({
  'node_modules/delayed-stream/lib/delayed_stream.js'(exports2, module2) {
    'use strict';
    var Stream = require('stream').Stream;
    var util = require('util');
    module2.exports = DelayedStream;
    function DelayedStream() {
      this.source = null;
      this.dataSize = 0;
      this.maxDataSize = 1024 * 1024;
      this.pauseStream = true;
      this._maxDataSizeExceeded = false;
      this._released = false;
      this._bufferedEvents = [];
    }
    util.inherits(DelayedStream, Stream);
    DelayedStream.create = function (source, options) {
      var delayedStream = new this();
      options = options || {};
      for (var option2 in options) {
        delayedStream[option2] = options[option2];
      }
      delayedStream.source = source;
      var realEmit = source.emit;
      source.emit = function () {
        delayedStream._handleEmit(arguments);
        return realEmit.apply(source, arguments);
      };
      source.on('error', function () {});
      if (delayedStream.pauseStream) {
        source.pause();
      }
      return delayedStream;
    };
    Object.defineProperty(DelayedStream.prototype, 'readable', {
      configurable: true,
      enumerable: true,
      get: function () {
        return this.source.readable;
      },
    });
    DelayedStream.prototype.setEncoding = function () {
      return this.source.setEncoding.apply(this.source, arguments);
    };
    DelayedStream.prototype.resume = function () {
      if (!this._released) {
        this.release();
      }
      this.source.resume();
    };
    DelayedStream.prototype.pause = function () {
      this.source.pause();
    };
    DelayedStream.prototype.release = function () {
      this._released = true;
      this._bufferedEvents.forEach(
        function (args) {
          this.emit.apply(this, args);
        }.bind(this)
      );
      this._bufferedEvents = [];
    };
    DelayedStream.prototype.pipe = function () {
      var r2 = Stream.prototype.pipe.apply(this, arguments);
      this.resume();
      return r2;
    };
    DelayedStream.prototype._handleEmit = function (args) {
      if (this._released) {
        this.emit.apply(this, args);
        return;
      }
      if (args[0] === 'data') {
        this.dataSize += args[1].length;
        this._checkIfMaxDataSizeExceeded();
      }
      this._bufferedEvents.push(args);
    };
    DelayedStream.prototype._checkIfMaxDataSizeExceeded = function () {
      if (this._maxDataSizeExceeded) {
        return;
      }
      if (this.dataSize <= this.maxDataSize) {
        return;
      }
      this._maxDataSizeExceeded = true;
      var message =
        'DelayedStream#maxDataSize of ' + this.maxDataSize + ' bytes exceeded.';
      this.emit('error', new Error(message));
    };
  },
});

// node_modules/combined-stream/lib/combined_stream.js
var require_combined_stream2 = __commonJS({
  'node_modules/combined-stream/lib/combined_stream.js'(exports2, module2) {
    'use strict';
    var util = require('util');
    var Stream = require('stream').Stream;
    var DelayedStream = require_delayed_stream2();
    module2.exports = CombinedStream;
    function CombinedStream() {
      this.writable = false;
      this.readable = true;
      this.dataSize = 0;
      this.maxDataSize = 2 * 1024 * 1024;
      this.pauseStreams = true;
      this._released = false;
      this._streams = [];
      this._currentStream = null;
      this._insideLoop = false;
      this._pendingNext = false;
    }
    util.inherits(CombinedStream, Stream);
    CombinedStream.create = function (options) {
      var combinedStream = new this();
      options = options || {};
      for (var option2 in options) {
        combinedStream[option2] = options[option2];
      }
      return combinedStream;
    };
    CombinedStream.isStreamLike = function (stream) {
      return (
        typeof stream !== 'function' &&
        typeof stream !== 'string' &&
        typeof stream !== 'boolean' &&
        typeof stream !== 'number' &&
        !Buffer.isBuffer(stream)
      );
    };
    CombinedStream.prototype.append = function (stream) {
      var isStreamLike = CombinedStream.isStreamLike(stream);
      if (isStreamLike) {
        if (!(stream instanceof DelayedStream)) {
          var newStream = DelayedStream.create(stream, {
            maxDataSize: Infinity,
            pauseStream: this.pauseStreams,
          });
          stream.on('data', this._checkDataSize.bind(this));
          stream = newStream;
        }
        this._handleErrors(stream);
        if (this.pauseStreams) {
          stream.pause();
        }
      }
      this._streams.push(stream);
      return this;
    };
    CombinedStream.prototype.pipe = function (dest, options) {
      Stream.prototype.pipe.call(this, dest, options);
      this.resume();
      return dest;
    };
    CombinedStream.prototype._getNext = function () {
      this._currentStream = null;
      if (this._insideLoop) {
        this._pendingNext = true;
        return;
      }
      this._insideLoop = true;
      try {
        do {
          this._pendingNext = false;
          this._realGetNext();
        } while (this._pendingNext);
      } finally {
        this._insideLoop = false;
      }
    };
    CombinedStream.prototype._realGetNext = function () {
      var stream = this._streams.shift();
      if (typeof stream == 'undefined') {
        this.end();
        return;
      }
      if (typeof stream !== 'function') {
        this._pipeNext(stream);
        return;
      }
      var getStream = stream;
      getStream(
        function (stream2) {
          var isStreamLike = CombinedStream.isStreamLike(stream2);
          if (isStreamLike) {
            stream2.on('data', this._checkDataSize.bind(this));
            this._handleErrors(stream2);
          }
          this._pipeNext(stream2);
        }.bind(this)
      );
    };
    CombinedStream.prototype._pipeNext = function (stream) {
      this._currentStream = stream;
      var isStreamLike = CombinedStream.isStreamLike(stream);
      if (isStreamLike) {
        stream.on('end', this._getNext.bind(this));
        stream.pipe(this, { end: false });
        return;
      }
      var value = stream;
      this.write(value);
      this._getNext();
    };
    CombinedStream.prototype._handleErrors = function (stream) {
      var self2 = this;
      stream.on('error', function (err) {
        self2._emitError(err);
      });
    };
    CombinedStream.prototype.write = function (data) {
      this.emit('data', data);
    };
    CombinedStream.prototype.pause = function () {
      if (!this.pauseStreams) {
        return;
      }
      if (
        this.pauseStreams &&
        this._currentStream &&
        typeof this._currentStream.pause == 'function'
      )
        this._currentStream.pause();
      this.emit('pause');
    };
    CombinedStream.prototype.resume = function () {
      if (!this._released) {
        this._released = true;
        this.writable = true;
        this._getNext();
      }
      if (
        this.pauseStreams &&
        this._currentStream &&
        typeof this._currentStream.resume == 'function'
      )
        this._currentStream.resume();
      this.emit('resume');
    };
    CombinedStream.prototype.end = function () {
      this._reset();
      this.emit('end');
    };
    CombinedStream.prototype.destroy = function () {
      this._reset();
      this.emit('close');
    };
    CombinedStream.prototype._reset = function () {
      this.writable = false;
      this._streams = [];
      this._currentStream = null;
    };
    CombinedStream.prototype._checkDataSize = function () {
      this._updateDataSize();
      if (this.dataSize <= this.maxDataSize) {
        return;
      }
      var message =
        'DelayedStream#maxDataSize of ' + this.maxDataSize + ' bytes exceeded.';
      this._emitError(new Error(message));
    };
    CombinedStream.prototype._updateDataSize = function () {
      this.dataSize = 0;
      var self2 = this;
      this._streams.forEach(function (stream) {
        if (!stream.dataSize) {
          return;
        }
        self2.dataSize += stream.dataSize;
      });
      if (this._currentStream && this._currentStream.dataSize) {
        this.dataSize += this._currentStream.dataSize;
      }
    };
    CombinedStream.prototype._emitError = function (err) {
      this._reset();
      this.emit('error', err);
    };
  },
});

// node_modules/mime-db/db.json
var require_db2 = __commonJS({
  'node_modules/mime-db/db.json'(exports2, module2) {
    module2.exports = {
      'application/1d-interleaved-parityfec': {
        source: 'iana',
      },
      'application/3gpdash-qoe-report+xml': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
      },
      'application/3gpp-ims+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/3gpphal+json': {
        source: 'iana',
        compressible: true,
      },
      'application/3gpphalforms+json': {
        source: 'iana',
        compressible: true,
      },
      'application/a2l': {
        source: 'iana',
      },
      'application/ace+cbor': {
        source: 'iana',
      },
      'application/activemessage': {
        source: 'iana',
      },
      'application/activity+json': {
        source: 'iana',
        compressible: true,
      },
      'application/alto-costmap+json': {
        source: 'iana',
        compressible: true,
      },
      'application/alto-costmapfilter+json': {
        source: 'iana',
        compressible: true,
      },
      'application/alto-directory+json': {
        source: 'iana',
        compressible: true,
      },
      'application/alto-endpointcost+json': {
        source: 'iana',
        compressible: true,
      },
      'application/alto-endpointcostparams+json': {
        source: 'iana',
        compressible: true,
      },
      'application/alto-endpointprop+json': {
        source: 'iana',
        compressible: true,
      },
      'application/alto-endpointpropparams+json': {
        source: 'iana',
        compressible: true,
      },
      'application/alto-error+json': {
        source: 'iana',
        compressible: true,
      },
      'application/alto-networkmap+json': {
        source: 'iana',
        compressible: true,
      },
      'application/alto-networkmapfilter+json': {
        source: 'iana',
        compressible: true,
      },
      'application/alto-updatestreamcontrol+json': {
        source: 'iana',
        compressible: true,
      },
      'application/alto-updatestreamparams+json': {
        source: 'iana',
        compressible: true,
      },
      'application/aml': {
        source: 'iana',
      },
      'application/andrew-inset': {
        source: 'iana',
        extensions: ['ez'],
      },
      'application/applefile': {
        source: 'iana',
      },
      'application/applixware': {
        source: 'apache',
        extensions: ['aw'],
      },
      'application/at+jwt': {
        source: 'iana',
      },
      'application/atf': {
        source: 'iana',
      },
      'application/atfx': {
        source: 'iana',
      },
      'application/atom+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['atom'],
      },
      'application/atomcat+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['atomcat'],
      },
      'application/atomdeleted+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['atomdeleted'],
      },
      'application/atomicmail': {
        source: 'iana',
      },
      'application/atomsvc+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['atomsvc'],
      },
      'application/atsc-dwd+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['dwd'],
      },
      'application/atsc-dynamic-event-message': {
        source: 'iana',
      },
      'application/atsc-held+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['held'],
      },
      'application/atsc-rdt+json': {
        source: 'iana',
        compressible: true,
      },
      'application/atsc-rsat+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['rsat'],
      },
      'application/atxml': {
        source: 'iana',
      },
      'application/auth-policy+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/bacnet-xdd+zip': {
        source: 'iana',
        compressible: false,
      },
      'application/batch-smtp': {
        source: 'iana',
      },
      'application/bdoc': {
        compressible: false,
        extensions: ['bdoc'],
      },
      'application/beep+xml': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
      },
      'application/calendar+json': {
        source: 'iana',
        compressible: true,
      },
      'application/calendar+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['xcs'],
      },
      'application/call-completion': {
        source: 'iana',
      },
      'application/cals-1840': {
        source: 'iana',
      },
      'application/captive+json': {
        source: 'iana',
        compressible: true,
      },
      'application/cbor': {
        source: 'iana',
      },
      'application/cbor-seq': {
        source: 'iana',
      },
      'application/cccex': {
        source: 'iana',
      },
      'application/ccmp+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/ccxml+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['ccxml'],
      },
      'application/cdfx+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['cdfx'],
      },
      'application/cdmi-capability': {
        source: 'iana',
        extensions: ['cdmia'],
      },
      'application/cdmi-container': {
        source: 'iana',
        extensions: ['cdmic'],
      },
      'application/cdmi-domain': {
        source: 'iana',
        extensions: ['cdmid'],
      },
      'application/cdmi-object': {
        source: 'iana',
        extensions: ['cdmio'],
      },
      'application/cdmi-queue': {
        source: 'iana',
        extensions: ['cdmiq'],
      },
      'application/cdni': {
        source: 'iana',
      },
      'application/cea': {
        source: 'iana',
      },
      'application/cea-2018+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/cellml+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/cfw': {
        source: 'iana',
      },
      'application/city+json': {
        source: 'iana',
        compressible: true,
      },
      'application/clr': {
        source: 'iana',
      },
      'application/clue+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/clue_info+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/cms': {
        source: 'iana',
      },
      'application/cnrp+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/coap-group+json': {
        source: 'iana',
        compressible: true,
      },
      'application/coap-payload': {
        source: 'iana',
      },
      'application/commonground': {
        source: 'iana',
      },
      'application/conference-info+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/cose': {
        source: 'iana',
      },
      'application/cose-key': {
        source: 'iana',
      },
      'application/cose-key-set': {
        source: 'iana',
      },
      'application/cpl+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['cpl'],
      },
      'application/csrattrs': {
        source: 'iana',
      },
      'application/csta+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/cstadata+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/csvm+json': {
        source: 'iana',
        compressible: true,
      },
      'application/cu-seeme': {
        source: 'apache',
        extensions: ['cu'],
      },
      'application/cwt': {
        source: 'iana',
      },
      'application/cybercash': {
        source: 'iana',
      },
      'application/dart': {
        compressible: true,
      },
      'application/dash+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['mpd'],
      },
      'application/dash-patch+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['mpp'],
      },
      'application/dashdelta': {
        source: 'iana',
      },
      'application/davmount+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['davmount'],
      },
      'application/dca-rft': {
        source: 'iana',
      },
      'application/dcd': {
        source: 'iana',
      },
      'application/dec-dx': {
        source: 'iana',
      },
      'application/dialog-info+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/dicom': {
        source: 'iana',
      },
      'application/dicom+json': {
        source: 'iana',
        compressible: true,
      },
      'application/dicom+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/dii': {
        source: 'iana',
      },
      'application/dit': {
        source: 'iana',
      },
      'application/dns': {
        source: 'iana',
      },
      'application/dns+json': {
        source: 'iana',
        compressible: true,
      },
      'application/dns-message': {
        source: 'iana',
      },
      'application/docbook+xml': {
        source: 'apache',
        compressible: true,
        extensions: ['dbk'],
      },
      'application/dots+cbor': {
        source: 'iana',
      },
      'application/dskpp+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/dssc+der': {
        source: 'iana',
        extensions: ['dssc'],
      },
      'application/dssc+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['xdssc'],
      },
      'application/dvcs': {
        source: 'iana',
      },
      'application/ecmascript': {
        source: 'iana',
        compressible: true,
        extensions: ['es', 'ecma'],
      },
      'application/edi-consent': {
        source: 'iana',
      },
      'application/edi-x12': {
        source: 'iana',
        compressible: false,
      },
      'application/edifact': {
        source: 'iana',
        compressible: false,
      },
      'application/efi': {
        source: 'iana',
      },
      'application/elm+json': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
      },
      'application/elm+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/emergencycalldata.cap+xml': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
      },
      'application/emergencycalldata.comment+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/emergencycalldata.control+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/emergencycalldata.deviceinfo+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/emergencycalldata.ecall.msd': {
        source: 'iana',
      },
      'application/emergencycalldata.providerinfo+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/emergencycalldata.serviceinfo+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/emergencycalldata.subscriberinfo+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/emergencycalldata.veds+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/emma+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['emma'],
      },
      'application/emotionml+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['emotionml'],
      },
      'application/encaprtp': {
        source: 'iana',
      },
      'application/epp+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/epub+zip': {
        source: 'iana',
        compressible: false,
        extensions: ['epub'],
      },
      'application/eshop': {
        source: 'iana',
      },
      'application/exi': {
        source: 'iana',
        extensions: ['exi'],
      },
      'application/expect-ct-report+json': {
        source: 'iana',
        compressible: true,
      },
      'application/express': {
        source: 'iana',
        extensions: ['exp'],
      },
      'application/fastinfoset': {
        source: 'iana',
      },
      'application/fastsoap': {
        source: 'iana',
      },
      'application/fdt+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['fdt'],
      },
      'application/fhir+json': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
      },
      'application/fhir+xml': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
      },
      'application/fido.trusted-apps+json': {
        compressible: true,
      },
      'application/fits': {
        source: 'iana',
      },
      'application/flexfec': {
        source: 'iana',
      },
      'application/font-sfnt': {
        source: 'iana',
      },
      'application/font-tdpfr': {
        source: 'iana',
        extensions: ['pfr'],
      },
      'application/font-woff': {
        source: 'iana',
        compressible: false,
      },
      'application/framework-attributes+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/geo+json': {
        source: 'iana',
        compressible: true,
        extensions: ['geojson'],
      },
      'application/geo+json-seq': {
        source: 'iana',
      },
      'application/geopackage+sqlite3': {
        source: 'iana',
      },
      'application/geoxacml+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/gltf-buffer': {
        source: 'iana',
      },
      'application/gml+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['gml'],
      },
      'application/gpx+xml': {
        source: 'apache',
        compressible: true,
        extensions: ['gpx'],
      },
      'application/gxf': {
        source: 'apache',
        extensions: ['gxf'],
      },
      'application/gzip': {
        source: 'iana',
        compressible: false,
        extensions: ['gz'],
      },
      'application/h224': {
        source: 'iana',
      },
      'application/held+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/hjson': {
        extensions: ['hjson'],
      },
      'application/http': {
        source: 'iana',
      },
      'application/hyperstudio': {
        source: 'iana',
        extensions: ['stk'],
      },
      'application/ibe-key-request+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/ibe-pkg-reply+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/ibe-pp-data': {
        source: 'iana',
      },
      'application/iges': {
        source: 'iana',
      },
      'application/im-iscomposing+xml': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
      },
      'application/index': {
        source: 'iana',
      },
      'application/index.cmd': {
        source: 'iana',
      },
      'application/index.obj': {
        source: 'iana',
      },
      'application/index.response': {
        source: 'iana',
      },
      'application/index.vnd': {
        source: 'iana',
      },
      'application/inkml+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['ink', 'inkml'],
      },
      'application/iotp': {
        source: 'iana',
      },
      'application/ipfix': {
        source: 'iana',
        extensions: ['ipfix'],
      },
      'application/ipp': {
        source: 'iana',
      },
      'application/isup': {
        source: 'iana',
      },
      'application/its+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['its'],
      },
      'application/java-archive': {
        source: 'apache',
        compressible: false,
        extensions: ['jar', 'war', 'ear'],
      },
      'application/java-serialized-object': {
        source: 'apache',
        compressible: false,
        extensions: ['ser'],
      },
      'application/java-vm': {
        source: 'apache',
        compressible: false,
        extensions: ['class'],
      },
      'application/javascript': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
        extensions: ['js', 'mjs'],
      },
      'application/jf2feed+json': {
        source: 'iana',
        compressible: true,
      },
      'application/jose': {
        source: 'iana',
      },
      'application/jose+json': {
        source: 'iana',
        compressible: true,
      },
      'application/jrd+json': {
        source: 'iana',
        compressible: true,
      },
      'application/jscalendar+json': {
        source: 'iana',
        compressible: true,
      },
      'application/json': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
        extensions: ['json', 'map'],
      },
      'application/json-patch+json': {
        source: 'iana',
        compressible: true,
      },
      'application/json-seq': {
        source: 'iana',
      },
      'application/json5': {
        extensions: ['json5'],
      },
      'application/jsonml+json': {
        source: 'apache',
        compressible: true,
        extensions: ['jsonml'],
      },
      'application/jwk+json': {
        source: 'iana',
        compressible: true,
      },
      'application/jwk-set+json': {
        source: 'iana',
        compressible: true,
      },
      'application/jwt': {
        source: 'iana',
      },
      'application/kpml-request+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/kpml-response+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/ld+json': {
        source: 'iana',
        compressible: true,
        extensions: ['jsonld'],
      },
      'application/lgr+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['lgr'],
      },
      'application/link-format': {
        source: 'iana',
      },
      'application/load-control+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/lost+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['lostxml'],
      },
      'application/lostsync+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/lpf+zip': {
        source: 'iana',
        compressible: false,
      },
      'application/lxf': {
        source: 'iana',
      },
      'application/mac-binhex40': {
        source: 'iana',
        extensions: ['hqx'],
      },
      'application/mac-compactpro': {
        source: 'apache',
        extensions: ['cpt'],
      },
      'application/macwriteii': {
        source: 'iana',
      },
      'application/mads+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['mads'],
      },
      'application/manifest+json': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
        extensions: ['webmanifest'],
      },
      'application/marc': {
        source: 'iana',
        extensions: ['mrc'],
      },
      'application/marcxml+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['mrcx'],
      },
      'application/mathematica': {
        source: 'iana',
        extensions: ['ma', 'nb', 'mb'],
      },
      'application/mathml+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['mathml'],
      },
      'application/mathml-content+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/mathml-presentation+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/mbms-associated-procedure-description+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/mbms-deregister+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/mbms-envelope+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/mbms-msk+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/mbms-msk-response+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/mbms-protection-description+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/mbms-reception-report+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/mbms-register+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/mbms-register-response+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/mbms-schedule+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/mbms-user-service-description+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/mbox': {
        source: 'iana',
        extensions: ['mbox'],
      },
      'application/media-policy-dataset+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['mpf'],
      },
      'application/media_control+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/mediaservercontrol+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['mscml'],
      },
      'application/merge-patch+json': {
        source: 'iana',
        compressible: true,
      },
      'application/metalink+xml': {
        source: 'apache',
        compressible: true,
        extensions: ['metalink'],
      },
      'application/metalink4+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['meta4'],
      },
      'application/mets+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['mets'],
      },
      'application/mf4': {
        source: 'iana',
      },
      'application/mikey': {
        source: 'iana',
      },
      'application/mipc': {
        source: 'iana',
      },
      'application/missing-blocks+cbor-seq': {
        source: 'iana',
      },
      'application/mmt-aei+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['maei'],
      },
      'application/mmt-usd+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['musd'],
      },
      'application/mods+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['mods'],
      },
      'application/moss-keys': {
        source: 'iana',
      },
      'application/moss-signature': {
        source: 'iana',
      },
      'application/mosskey-data': {
        source: 'iana',
      },
      'application/mosskey-request': {
        source: 'iana',
      },
      'application/mp21': {
        source: 'iana',
        extensions: ['m21', 'mp21'],
      },
      'application/mp4': {
        source: 'iana',
        extensions: ['mp4s', 'm4p'],
      },
      'application/mpeg4-generic': {
        source: 'iana',
      },
      'application/mpeg4-iod': {
        source: 'iana',
      },
      'application/mpeg4-iod-xmt': {
        source: 'iana',
      },
      'application/mrb-consumer+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/mrb-publish+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/msc-ivr+xml': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
      },
      'application/msc-mixer+xml': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
      },
      'application/msword': {
        source: 'iana',
        compressible: false,
        extensions: ['doc', 'dot'],
      },
      'application/mud+json': {
        source: 'iana',
        compressible: true,
      },
      'application/multipart-core': {
        source: 'iana',
      },
      'application/mxf': {
        source: 'iana',
        extensions: ['mxf'],
      },
      'application/n-quads': {
        source: 'iana',
        extensions: ['nq'],
      },
      'application/n-triples': {
        source: 'iana',
        extensions: ['nt'],
      },
      'application/nasdata': {
        source: 'iana',
      },
      'application/news-checkgroups': {
        source: 'iana',
        charset: 'US-ASCII',
      },
      'application/news-groupinfo': {
        source: 'iana',
        charset: 'US-ASCII',
      },
      'application/news-transmission': {
        source: 'iana',
      },
      'application/nlsml+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/node': {
        source: 'iana',
        extensions: ['cjs'],
      },
      'application/nss': {
        source: 'iana',
      },
      'application/oauth-authz-req+jwt': {
        source: 'iana',
      },
      'application/oblivious-dns-message': {
        source: 'iana',
      },
      'application/ocsp-request': {
        source: 'iana',
      },
      'application/ocsp-response': {
        source: 'iana',
      },
      'application/octet-stream': {
        source: 'iana',
        compressible: false,
        extensions: [
          'bin',
          'dms',
          'lrf',
          'mar',
          'so',
          'dist',
          'distz',
          'pkg',
          'bpk',
          'dump',
          'elc',
          'deploy',
          'exe',
          'dll',
          'deb',
          'dmg',
          'iso',
          'img',
          'msi',
          'msp',
          'msm',
          'buffer',
        ],
      },
      'application/oda': {
        source: 'iana',
        extensions: ['oda'],
      },
      'application/odm+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/odx': {
        source: 'iana',
      },
      'application/oebps-package+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['opf'],
      },
      'application/ogg': {
        source: 'iana',
        compressible: false,
        extensions: ['ogx'],
      },
      'application/omdoc+xml': {
        source: 'apache',
        compressible: true,
        extensions: ['omdoc'],
      },
      'application/onenote': {
        source: 'apache',
        extensions: ['onetoc', 'onetoc2', 'onetmp', 'onepkg'],
      },
      'application/opc-nodeset+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/oscore': {
        source: 'iana',
      },
      'application/oxps': {
        source: 'iana',
        extensions: ['oxps'],
      },
      'application/p21': {
        source: 'iana',
      },
      'application/p21+zip': {
        source: 'iana',
        compressible: false,
      },
      'application/p2p-overlay+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['relo'],
      },
      'application/parityfec': {
        source: 'iana',
      },
      'application/passport': {
        source: 'iana',
      },
      'application/patch-ops-error+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['xer'],
      },
      'application/pdf': {
        source: 'iana',
        compressible: false,
        extensions: ['pdf'],
      },
      'application/pdx': {
        source: 'iana',
      },
      'application/pem-certificate-chain': {
        source: 'iana',
      },
      'application/pgp-encrypted': {
        source: 'iana',
        compressible: false,
        extensions: ['pgp'],
      },
      'application/pgp-keys': {
        source: 'iana',
        extensions: ['asc'],
      },
      'application/pgp-signature': {
        source: 'iana',
        extensions: ['asc', 'sig'],
      },
      'application/pics-rules': {
        source: 'apache',
        extensions: ['prf'],
      },
      'application/pidf+xml': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
      },
      'application/pidf-diff+xml': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
      },
      'application/pkcs10': {
        source: 'iana',
        extensions: ['p10'],
      },
      'application/pkcs12': {
        source: 'iana',
      },
      'application/pkcs7-mime': {
        source: 'iana',
        extensions: ['p7m', 'p7c'],
      },
      'application/pkcs7-signature': {
        source: 'iana',
        extensions: ['p7s'],
      },
      'application/pkcs8': {
        source: 'iana',
        extensions: ['p8'],
      },
      'application/pkcs8-encrypted': {
        source: 'iana',
      },
      'application/pkix-attr-cert': {
        source: 'iana',
        extensions: ['ac'],
      },
      'application/pkix-cert': {
        source: 'iana',
        extensions: ['cer'],
      },
      'application/pkix-crl': {
        source: 'iana',
        extensions: ['crl'],
      },
      'application/pkix-pkipath': {
        source: 'iana',
        extensions: ['pkipath'],
      },
      'application/pkixcmp': {
        source: 'iana',
        extensions: ['pki'],
      },
      'application/pls+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['pls'],
      },
      'application/poc-settings+xml': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
      },
      'application/postscript': {
        source: 'iana',
        compressible: true,
        extensions: ['ai', 'eps', 'ps'],
      },
      'application/ppsp-tracker+json': {
        source: 'iana',
        compressible: true,
      },
      'application/problem+json': {
        source: 'iana',
        compressible: true,
      },
      'application/problem+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/provenance+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['provx'],
      },
      'application/prs.alvestrand.titrax-sheet': {
        source: 'iana',
      },
      'application/prs.cww': {
        source: 'iana',
        extensions: ['cww'],
      },
      'application/prs.cyn': {
        source: 'iana',
        charset: '7-BIT',
      },
      'application/prs.hpub+zip': {
        source: 'iana',
        compressible: false,
      },
      'application/prs.nprend': {
        source: 'iana',
      },
      'application/prs.plucker': {
        source: 'iana',
      },
      'application/prs.rdf-xml-crypt': {
        source: 'iana',
      },
      'application/prs.xsf+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/pskc+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['pskcxml'],
      },
      'application/pvd+json': {
        source: 'iana',
        compressible: true,
      },
      'application/qsig': {
        source: 'iana',
      },
      'application/raml+yaml': {
        compressible: true,
        extensions: ['raml'],
      },
      'application/raptorfec': {
        source: 'iana',
      },
      'application/rdap+json': {
        source: 'iana',
        compressible: true,
      },
      'application/rdf+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['rdf', 'owl'],
      },
      'application/reginfo+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['rif'],
      },
      'application/relax-ng-compact-syntax': {
        source: 'iana',
        extensions: ['rnc'],
      },
      'application/remote-printing': {
        source: 'iana',
      },
      'application/reputon+json': {
        source: 'iana',
        compressible: true,
      },
      'application/resource-lists+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['rl'],
      },
      'application/resource-lists-diff+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['rld'],
      },
      'application/rfc+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/riscos': {
        source: 'iana',
      },
      'application/rlmi+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/rls-services+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['rs'],
      },
      'application/route-apd+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['rapd'],
      },
      'application/route-s-tsid+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['sls'],
      },
      'application/route-usd+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['rusd'],
      },
      'application/rpki-ghostbusters': {
        source: 'iana',
        extensions: ['gbr'],
      },
      'application/rpki-manifest': {
        source: 'iana',
        extensions: ['mft'],
      },
      'application/rpki-publication': {
        source: 'iana',
      },
      'application/rpki-roa': {
        source: 'iana',
        extensions: ['roa'],
      },
      'application/rpki-updown': {
        source: 'iana',
      },
      'application/rsd+xml': {
        source: 'apache',
        compressible: true,
        extensions: ['rsd'],
      },
      'application/rss+xml': {
        source: 'apache',
        compressible: true,
        extensions: ['rss'],
      },
      'application/rtf': {
        source: 'iana',
        compressible: true,
        extensions: ['rtf'],
      },
      'application/rtploopback': {
        source: 'iana',
      },
      'application/rtx': {
        source: 'iana',
      },
      'application/samlassertion+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/samlmetadata+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/sarif+json': {
        source: 'iana',
        compressible: true,
      },
      'application/sarif-external-properties+json': {
        source: 'iana',
        compressible: true,
      },
      'application/sbe': {
        source: 'iana',
      },
      'application/sbml+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['sbml'],
      },
      'application/scaip+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/scim+json': {
        source: 'iana',
        compressible: true,
      },
      'application/scvp-cv-request': {
        source: 'iana',
        extensions: ['scq'],
      },
      'application/scvp-cv-response': {
        source: 'iana',
        extensions: ['scs'],
      },
      'application/scvp-vp-request': {
        source: 'iana',
        extensions: ['spq'],
      },
      'application/scvp-vp-response': {
        source: 'iana',
        extensions: ['spp'],
      },
      'application/sdp': {
        source: 'iana',
        extensions: ['sdp'],
      },
      'application/secevent+jwt': {
        source: 'iana',
      },
      'application/senml+cbor': {
        source: 'iana',
      },
      'application/senml+json': {
        source: 'iana',
        compressible: true,
      },
      'application/senml+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['senmlx'],
      },
      'application/senml-etch+cbor': {
        source: 'iana',
      },
      'application/senml-etch+json': {
        source: 'iana',
        compressible: true,
      },
      'application/senml-exi': {
        source: 'iana',
      },
      'application/sensml+cbor': {
        source: 'iana',
      },
      'application/sensml+json': {
        source: 'iana',
        compressible: true,
      },
      'application/sensml+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['sensmlx'],
      },
      'application/sensml-exi': {
        source: 'iana',
      },
      'application/sep+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/sep-exi': {
        source: 'iana',
      },
      'application/session-info': {
        source: 'iana',
      },
      'application/set-payment': {
        source: 'iana',
      },
      'application/set-payment-initiation': {
        source: 'iana',
        extensions: ['setpay'],
      },
      'application/set-registration': {
        source: 'iana',
      },
      'application/set-registration-initiation': {
        source: 'iana',
        extensions: ['setreg'],
      },
      'application/sgml': {
        source: 'iana',
      },
      'application/sgml-open-catalog': {
        source: 'iana',
      },
      'application/shf+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['shf'],
      },
      'application/sieve': {
        source: 'iana',
        extensions: ['siv', 'sieve'],
      },
      'application/simple-filter+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/simple-message-summary': {
        source: 'iana',
      },
      'application/simplesymbolcontainer': {
        source: 'iana',
      },
      'application/sipc': {
        source: 'iana',
      },
      'application/slate': {
        source: 'iana',
      },
      'application/smil': {
        source: 'iana',
      },
      'application/smil+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['smi', 'smil'],
      },
      'application/smpte336m': {
        source: 'iana',
      },
      'application/soap+fastinfoset': {
        source: 'iana',
      },
      'application/soap+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/sparql-query': {
        source: 'iana',
        extensions: ['rq'],
      },
      'application/sparql-results+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['srx'],
      },
      'application/spdx+json': {
        source: 'iana',
        compressible: true,
      },
      'application/spirits-event+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/sql': {
        source: 'iana',
      },
      'application/srgs': {
        source: 'iana',
        extensions: ['gram'],
      },
      'application/srgs+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['grxml'],
      },
      'application/sru+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['sru'],
      },
      'application/ssdl+xml': {
        source: 'apache',
        compressible: true,
        extensions: ['ssdl'],
      },
      'application/ssml+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['ssml'],
      },
      'application/stix+json': {
        source: 'iana',
        compressible: true,
      },
      'application/swid+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['swidtag'],
      },
      'application/tamp-apex-update': {
        source: 'iana',
      },
      'application/tamp-apex-update-confirm': {
        source: 'iana',
      },
      'application/tamp-community-update': {
        source: 'iana',
      },
      'application/tamp-community-update-confirm': {
        source: 'iana',
      },
      'application/tamp-error': {
        source: 'iana',
      },
      'application/tamp-sequence-adjust': {
        source: 'iana',
      },
      'application/tamp-sequence-adjust-confirm': {
        source: 'iana',
      },
      'application/tamp-status-query': {
        source: 'iana',
      },
      'application/tamp-status-response': {
        source: 'iana',
      },
      'application/tamp-update': {
        source: 'iana',
      },
      'application/tamp-update-confirm': {
        source: 'iana',
      },
      'application/tar': {
        compressible: true,
      },
      'application/taxii+json': {
        source: 'iana',
        compressible: true,
      },
      'application/td+json': {
        source: 'iana',
        compressible: true,
      },
      'application/tei+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['tei', 'teicorpus'],
      },
      'application/tetra_isi': {
        source: 'iana',
      },
      'application/thraud+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['tfi'],
      },
      'application/timestamp-query': {
        source: 'iana',
      },
      'application/timestamp-reply': {
        source: 'iana',
      },
      'application/timestamped-data': {
        source: 'iana',
        extensions: ['tsd'],
      },
      'application/tlsrpt+gzip': {
        source: 'iana',
      },
      'application/tlsrpt+json': {
        source: 'iana',
        compressible: true,
      },
      'application/tnauthlist': {
        source: 'iana',
      },
      'application/token-introspection+jwt': {
        source: 'iana',
      },
      'application/toml': {
        compressible: true,
        extensions: ['toml'],
      },
      'application/trickle-ice-sdpfrag': {
        source: 'iana',
      },
      'application/trig': {
        source: 'iana',
        extensions: ['trig'],
      },
      'application/ttml+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['ttml'],
      },
      'application/tve-trigger': {
        source: 'iana',
      },
      'application/tzif': {
        source: 'iana',
      },
      'application/tzif-leap': {
        source: 'iana',
      },
      'application/ubjson': {
        compressible: false,
        extensions: ['ubj'],
      },
      'application/ulpfec': {
        source: 'iana',
      },
      'application/urc-grpsheet+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/urc-ressheet+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['rsheet'],
      },
      'application/urc-targetdesc+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['td'],
      },
      'application/urc-uisocketdesc+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vcard+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vcard+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vemmi': {
        source: 'iana',
      },
      'application/vividence.scriptfile': {
        source: 'apache',
      },
      'application/vnd.1000minds.decision-model+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['1km'],
      },
      'application/vnd.3gpp-prose+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp-prose-pc3ch+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp-v2x-local-service-information': {
        source: 'iana',
      },
      'application/vnd.3gpp.5gnas': {
        source: 'iana',
      },
      'application/vnd.3gpp.access-transfer-events+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.bsf+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.gmop+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.gtpc': {
        source: 'iana',
      },
      'application/vnd.3gpp.interworking-data': {
        source: 'iana',
      },
      'application/vnd.3gpp.lpp': {
        source: 'iana',
      },
      'application/vnd.3gpp.mc-signalling-ear': {
        source: 'iana',
      },
      'application/vnd.3gpp.mcdata-affiliation-command+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mcdata-info+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mcdata-payload': {
        source: 'iana',
      },
      'application/vnd.3gpp.mcdata-service-config+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mcdata-signalling': {
        source: 'iana',
      },
      'application/vnd.3gpp.mcdata-ue-config+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mcdata-user-profile+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mcptt-affiliation-command+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mcptt-floor-request+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mcptt-info+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mcptt-location-info+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mcptt-mbms-usage-info+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mcptt-service-config+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mcptt-signed+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mcptt-ue-config+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mcptt-ue-init-config+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mcptt-user-profile+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mcvideo-affiliation-command+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mcvideo-affiliation-info+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mcvideo-info+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mcvideo-location-info+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mcvideo-mbms-usage-info+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mcvideo-service-config+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mcvideo-transmission-request+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mcvideo-ue-config+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mcvideo-user-profile+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.mid-call+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.ngap': {
        source: 'iana',
      },
      'application/vnd.3gpp.pfcp': {
        source: 'iana',
      },
      'application/vnd.3gpp.pic-bw-large': {
        source: 'iana',
        extensions: ['plb'],
      },
      'application/vnd.3gpp.pic-bw-small': {
        source: 'iana',
        extensions: ['psb'],
      },
      'application/vnd.3gpp.pic-bw-var': {
        source: 'iana',
        extensions: ['pvb'],
      },
      'application/vnd.3gpp.s1ap': {
        source: 'iana',
      },
      'application/vnd.3gpp.sms': {
        source: 'iana',
      },
      'application/vnd.3gpp.sms+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.srvcc-ext+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.srvcc-info+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.state-and-event-info+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp.ussd+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp2.bcmcsinfo+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.3gpp2.sms': {
        source: 'iana',
      },
      'application/vnd.3gpp2.tcap': {
        source: 'iana',
        extensions: ['tcap'],
      },
      'application/vnd.3lightssoftware.imagescal': {
        source: 'iana',
      },
      'application/vnd.3m.post-it-notes': {
        source: 'iana',
        extensions: ['pwn'],
      },
      'application/vnd.accpac.simply.aso': {
        source: 'iana',
        extensions: ['aso'],
      },
      'application/vnd.accpac.simply.imp': {
        source: 'iana',
        extensions: ['imp'],
      },
      'application/vnd.acucobol': {
        source: 'iana',
        extensions: ['acu'],
      },
      'application/vnd.acucorp': {
        source: 'iana',
        extensions: ['atc', 'acutc'],
      },
      'application/vnd.adobe.air-application-installer-package+zip': {
        source: 'apache',
        compressible: false,
        extensions: ['air'],
      },
      'application/vnd.adobe.flash.movie': {
        source: 'iana',
      },
      'application/vnd.adobe.formscentral.fcdt': {
        source: 'iana',
        extensions: ['fcdt'],
      },
      'application/vnd.adobe.fxp': {
        source: 'iana',
        extensions: ['fxp', 'fxpl'],
      },
      'application/vnd.adobe.partial-upload': {
        source: 'iana',
      },
      'application/vnd.adobe.xdp+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['xdp'],
      },
      'application/vnd.adobe.xfdf': {
        source: 'iana',
        extensions: ['xfdf'],
      },
      'application/vnd.aether.imp': {
        source: 'iana',
      },
      'application/vnd.afpc.afplinedata': {
        source: 'iana',
      },
      'application/vnd.afpc.afplinedata-pagedef': {
        source: 'iana',
      },
      'application/vnd.afpc.cmoca-cmresource': {
        source: 'iana',
      },
      'application/vnd.afpc.foca-charset': {
        source: 'iana',
      },
      'application/vnd.afpc.foca-codedfont': {
        source: 'iana',
      },
      'application/vnd.afpc.foca-codepage': {
        source: 'iana',
      },
      'application/vnd.afpc.modca': {
        source: 'iana',
      },
      'application/vnd.afpc.modca-cmtable': {
        source: 'iana',
      },
      'application/vnd.afpc.modca-formdef': {
        source: 'iana',
      },
      'application/vnd.afpc.modca-mediummap': {
        source: 'iana',
      },
      'application/vnd.afpc.modca-objectcontainer': {
        source: 'iana',
      },
      'application/vnd.afpc.modca-overlay': {
        source: 'iana',
      },
      'application/vnd.afpc.modca-pagesegment': {
        source: 'iana',
      },
      'application/vnd.age': {
        source: 'iana',
        extensions: ['age'],
      },
      'application/vnd.ah-barcode': {
        source: 'iana',
      },
      'application/vnd.ahead.space': {
        source: 'iana',
        extensions: ['ahead'],
      },
      'application/vnd.airzip.filesecure.azf': {
        source: 'iana',
        extensions: ['azf'],
      },
      'application/vnd.airzip.filesecure.azs': {
        source: 'iana',
        extensions: ['azs'],
      },
      'application/vnd.amadeus+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.amazon.ebook': {
        source: 'apache',
        extensions: ['azw'],
      },
      'application/vnd.amazon.mobi8-ebook': {
        source: 'iana',
      },
      'application/vnd.americandynamics.acc': {
        source: 'iana',
        extensions: ['acc'],
      },
      'application/vnd.amiga.ami': {
        source: 'iana',
        extensions: ['ami'],
      },
      'application/vnd.amundsen.maze+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.android.ota': {
        source: 'iana',
      },
      'application/vnd.android.package-archive': {
        source: 'apache',
        compressible: false,
        extensions: ['apk'],
      },
      'application/vnd.anki': {
        source: 'iana',
      },
      'application/vnd.anser-web-certificate-issue-initiation': {
        source: 'iana',
        extensions: ['cii'],
      },
      'application/vnd.anser-web-funds-transfer-initiation': {
        source: 'apache',
        extensions: ['fti'],
      },
      'application/vnd.antix.game-component': {
        source: 'iana',
        extensions: ['atx'],
      },
      'application/vnd.apache.arrow.file': {
        source: 'iana',
      },
      'application/vnd.apache.arrow.stream': {
        source: 'iana',
      },
      'application/vnd.apache.thrift.binary': {
        source: 'iana',
      },
      'application/vnd.apache.thrift.compact': {
        source: 'iana',
      },
      'application/vnd.apache.thrift.json': {
        source: 'iana',
      },
      'application/vnd.api+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.aplextor.warrp+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.apothekende.reservation+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.apple.installer+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['mpkg'],
      },
      'application/vnd.apple.keynote': {
        source: 'iana',
        extensions: ['key'],
      },
      'application/vnd.apple.mpegurl': {
        source: 'iana',
        extensions: ['m3u8'],
      },
      'application/vnd.apple.numbers': {
        source: 'iana',
        extensions: ['numbers'],
      },
      'application/vnd.apple.pages': {
        source: 'iana',
        extensions: ['pages'],
      },
      'application/vnd.apple.pkpass': {
        compressible: false,
        extensions: ['pkpass'],
      },
      'application/vnd.arastra.swi': {
        source: 'iana',
      },
      'application/vnd.aristanetworks.swi': {
        source: 'iana',
        extensions: ['swi'],
      },
      'application/vnd.artisan+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.artsquare': {
        source: 'iana',
      },
      'application/vnd.astraea-software.iota': {
        source: 'iana',
        extensions: ['iota'],
      },
      'application/vnd.audiograph': {
        source: 'iana',
        extensions: ['aep'],
      },
      'application/vnd.autopackage': {
        source: 'iana',
      },
      'application/vnd.avalon+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.avistar+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.balsamiq.bmml+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['bmml'],
      },
      'application/vnd.balsamiq.bmpr': {
        source: 'iana',
      },
      'application/vnd.banana-accounting': {
        source: 'iana',
      },
      'application/vnd.bbf.usp.error': {
        source: 'iana',
      },
      'application/vnd.bbf.usp.msg': {
        source: 'iana',
      },
      'application/vnd.bbf.usp.msg+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.bekitzur-stech+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.bint.med-content': {
        source: 'iana',
      },
      'application/vnd.biopax.rdf+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.blink-idb-value-wrapper': {
        source: 'iana',
      },
      'application/vnd.blueice.multipass': {
        source: 'iana',
        extensions: ['mpm'],
      },
      'application/vnd.bluetooth.ep.oob': {
        source: 'iana',
      },
      'application/vnd.bluetooth.le.oob': {
        source: 'iana',
      },
      'application/vnd.bmi': {
        source: 'iana',
        extensions: ['bmi'],
      },
      'application/vnd.bpf': {
        source: 'iana',
      },
      'application/vnd.bpf3': {
        source: 'iana',
      },
      'application/vnd.businessobjects': {
        source: 'iana',
        extensions: ['rep'],
      },
      'application/vnd.byu.uapi+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.cab-jscript': {
        source: 'iana',
      },
      'application/vnd.canon-cpdl': {
        source: 'iana',
      },
      'application/vnd.canon-lips': {
        source: 'iana',
      },
      'application/vnd.capasystems-pg+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.cendio.thinlinc.clientconf': {
        source: 'iana',
      },
      'application/vnd.century-systems.tcp_stream': {
        source: 'iana',
      },
      'application/vnd.chemdraw+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['cdxml'],
      },
      'application/vnd.chess-pgn': {
        source: 'iana',
      },
      'application/vnd.chipnuts.karaoke-mmd': {
        source: 'iana',
        extensions: ['mmd'],
      },
      'application/vnd.ciedi': {
        source: 'iana',
      },
      'application/vnd.cinderella': {
        source: 'iana',
        extensions: ['cdy'],
      },
      'application/vnd.cirpack.isdn-ext': {
        source: 'iana',
      },
      'application/vnd.citationstyles.style+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['csl'],
      },
      'application/vnd.claymore': {
        source: 'iana',
        extensions: ['cla'],
      },
      'application/vnd.cloanto.rp9': {
        source: 'iana',
        extensions: ['rp9'],
      },
      'application/vnd.clonk.c4group': {
        source: 'iana',
        extensions: ['c4g', 'c4d', 'c4f', 'c4p', 'c4u'],
      },
      'application/vnd.cluetrust.cartomobile-config': {
        source: 'iana',
        extensions: ['c11amc'],
      },
      'application/vnd.cluetrust.cartomobile-config-pkg': {
        source: 'iana',
        extensions: ['c11amz'],
      },
      'application/vnd.coffeescript': {
        source: 'iana',
      },
      'application/vnd.collabio.xodocuments.document': {
        source: 'iana',
      },
      'application/vnd.collabio.xodocuments.document-template': {
        source: 'iana',
      },
      'application/vnd.collabio.xodocuments.presentation': {
        source: 'iana',
      },
      'application/vnd.collabio.xodocuments.presentation-template': {
        source: 'iana',
      },
      'application/vnd.collabio.xodocuments.spreadsheet': {
        source: 'iana',
      },
      'application/vnd.collabio.xodocuments.spreadsheet-template': {
        source: 'iana',
      },
      'application/vnd.collection+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.collection.doc+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.collection.next+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.comicbook+zip': {
        source: 'iana',
        compressible: false,
      },
      'application/vnd.comicbook-rar': {
        source: 'iana',
      },
      'application/vnd.commerce-battelle': {
        source: 'iana',
      },
      'application/vnd.commonspace': {
        source: 'iana',
        extensions: ['csp'],
      },
      'application/vnd.contact.cmsg': {
        source: 'iana',
        extensions: ['cdbcmsg'],
      },
      'application/vnd.coreos.ignition+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.cosmocaller': {
        source: 'iana',
        extensions: ['cmc'],
      },
      'application/vnd.crick.clicker': {
        source: 'iana',
        extensions: ['clkx'],
      },
      'application/vnd.crick.clicker.keyboard': {
        source: 'iana',
        extensions: ['clkk'],
      },
      'application/vnd.crick.clicker.palette': {
        source: 'iana',
        extensions: ['clkp'],
      },
      'application/vnd.crick.clicker.template': {
        source: 'iana',
        extensions: ['clkt'],
      },
      'application/vnd.crick.clicker.wordbank': {
        source: 'iana',
        extensions: ['clkw'],
      },
      'application/vnd.criticaltools.wbs+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['wbs'],
      },
      'application/vnd.cryptii.pipe+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.crypto-shade-file': {
        source: 'iana',
      },
      'application/vnd.cryptomator.encrypted': {
        source: 'iana',
      },
      'application/vnd.cryptomator.vault': {
        source: 'iana',
      },
      'application/vnd.ctc-posml': {
        source: 'iana',
        extensions: ['pml'],
      },
      'application/vnd.ctct.ws+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.cups-pdf': {
        source: 'iana',
      },
      'application/vnd.cups-postscript': {
        source: 'iana',
      },
      'application/vnd.cups-ppd': {
        source: 'iana',
        extensions: ['ppd'],
      },
      'application/vnd.cups-raster': {
        source: 'iana',
      },
      'application/vnd.cups-raw': {
        source: 'iana',
      },
      'application/vnd.curl': {
        source: 'iana',
      },
      'application/vnd.curl.car': {
        source: 'apache',
        extensions: ['car'],
      },
      'application/vnd.curl.pcurl': {
        source: 'apache',
        extensions: ['pcurl'],
      },
      'application/vnd.cyan.dean.root+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.cybank': {
        source: 'iana',
      },
      'application/vnd.cyclonedx+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.cyclonedx+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.d2l.coursepackage1p0+zip': {
        source: 'iana',
        compressible: false,
      },
      'application/vnd.d3m-dataset': {
        source: 'iana',
      },
      'application/vnd.d3m-problem': {
        source: 'iana',
      },
      'application/vnd.dart': {
        source: 'iana',
        compressible: true,
        extensions: ['dart'],
      },
      'application/vnd.data-vision.rdz': {
        source: 'iana',
        extensions: ['rdz'],
      },
      'application/vnd.datapackage+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.dataresource+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.dbf': {
        source: 'iana',
        extensions: ['dbf'],
      },
      'application/vnd.debian.binary-package': {
        source: 'iana',
      },
      'application/vnd.dece.data': {
        source: 'iana',
        extensions: ['uvf', 'uvvf', 'uvd', 'uvvd'],
      },
      'application/vnd.dece.ttml+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['uvt', 'uvvt'],
      },
      'application/vnd.dece.unspecified': {
        source: 'iana',
        extensions: ['uvx', 'uvvx'],
      },
      'application/vnd.dece.zip': {
        source: 'iana',
        extensions: ['uvz', 'uvvz'],
      },
      'application/vnd.denovo.fcselayout-link': {
        source: 'iana',
        extensions: ['fe_launch'],
      },
      'application/vnd.desmume.movie': {
        source: 'iana',
      },
      'application/vnd.dir-bi.plate-dl-nosuffix': {
        source: 'iana',
      },
      'application/vnd.dm.delegation+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.dna': {
        source: 'iana',
        extensions: ['dna'],
      },
      'application/vnd.document+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.dolby.mlp': {
        source: 'apache',
        extensions: ['mlp'],
      },
      'application/vnd.dolby.mobile.1': {
        source: 'iana',
      },
      'application/vnd.dolby.mobile.2': {
        source: 'iana',
      },
      'application/vnd.doremir.scorecloud-binary-document': {
        source: 'iana',
      },
      'application/vnd.dpgraph': {
        source: 'iana',
        extensions: ['dpg'],
      },
      'application/vnd.dreamfactory': {
        source: 'iana',
        extensions: ['dfac'],
      },
      'application/vnd.drive+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.ds-keypoint': {
        source: 'apache',
        extensions: ['kpxx'],
      },
      'application/vnd.dtg.local': {
        source: 'iana',
      },
      'application/vnd.dtg.local.flash': {
        source: 'iana',
      },
      'application/vnd.dtg.local.html': {
        source: 'iana',
      },
      'application/vnd.dvb.ait': {
        source: 'iana',
        extensions: ['ait'],
      },
      'application/vnd.dvb.dvbisl+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.dvb.dvbj': {
        source: 'iana',
      },
      'application/vnd.dvb.esgcontainer': {
        source: 'iana',
      },
      'application/vnd.dvb.ipdcdftnotifaccess': {
        source: 'iana',
      },
      'application/vnd.dvb.ipdcesgaccess': {
        source: 'iana',
      },
      'application/vnd.dvb.ipdcesgaccess2': {
        source: 'iana',
      },
      'application/vnd.dvb.ipdcesgpdd': {
        source: 'iana',
      },
      'application/vnd.dvb.ipdcroaming': {
        source: 'iana',
      },
      'application/vnd.dvb.iptv.alfec-base': {
        source: 'iana',
      },
      'application/vnd.dvb.iptv.alfec-enhancement': {
        source: 'iana',
      },
      'application/vnd.dvb.notif-aggregate-root+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.dvb.notif-container+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.dvb.notif-generic+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.dvb.notif-ia-msglist+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.dvb.notif-ia-registration-request+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.dvb.notif-ia-registration-response+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.dvb.notif-init+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.dvb.pfr': {
        source: 'iana',
      },
      'application/vnd.dvb.service': {
        source: 'iana',
        extensions: ['svc'],
      },
      'application/vnd.dxr': {
        source: 'iana',
      },
      'application/vnd.dynageo': {
        source: 'iana',
        extensions: ['geo'],
      },
      'application/vnd.dzr': {
        source: 'iana',
      },
      'application/vnd.easykaraoke.cdgdownload': {
        source: 'iana',
      },
      'application/vnd.ecdis-update': {
        source: 'iana',
      },
      'application/vnd.ecip.rlp': {
        source: 'iana',
      },
      'application/vnd.eclipse.ditto+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.ecowin.chart': {
        source: 'iana',
        extensions: ['mag'],
      },
      'application/vnd.ecowin.filerequest': {
        source: 'iana',
      },
      'application/vnd.ecowin.fileupdate': {
        source: 'iana',
      },
      'application/vnd.ecowin.series': {
        source: 'iana',
      },
      'application/vnd.ecowin.seriesrequest': {
        source: 'iana',
      },
      'application/vnd.ecowin.seriesupdate': {
        source: 'iana',
      },
      'application/vnd.efi.img': {
        source: 'iana',
      },
      'application/vnd.efi.iso': {
        source: 'iana',
      },
      'application/vnd.emclient.accessrequest+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.enliven': {
        source: 'iana',
        extensions: ['nml'],
      },
      'application/vnd.enphase.envoy': {
        source: 'iana',
      },
      'application/vnd.eprints.data+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.epson.esf': {
        source: 'iana',
        extensions: ['esf'],
      },
      'application/vnd.epson.msf': {
        source: 'iana',
        extensions: ['msf'],
      },
      'application/vnd.epson.quickanime': {
        source: 'iana',
        extensions: ['qam'],
      },
      'application/vnd.epson.salt': {
        source: 'iana',
        extensions: ['slt'],
      },
      'application/vnd.epson.ssf': {
        source: 'iana',
        extensions: ['ssf'],
      },
      'application/vnd.ericsson.quickcall': {
        source: 'iana',
      },
      'application/vnd.espass-espass+zip': {
        source: 'iana',
        compressible: false,
      },
      'application/vnd.eszigno3+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['es3', 'et3'],
      },
      'application/vnd.etsi.aoc+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.etsi.asic-e+zip': {
        source: 'iana',
        compressible: false,
      },
      'application/vnd.etsi.asic-s+zip': {
        source: 'iana',
        compressible: false,
      },
      'application/vnd.etsi.cug+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.etsi.iptvcommand+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.etsi.iptvdiscovery+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.etsi.iptvprofile+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.etsi.iptvsad-bc+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.etsi.iptvsad-cod+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.etsi.iptvsad-npvr+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.etsi.iptvservice+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.etsi.iptvsync+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.etsi.iptvueprofile+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.etsi.mcid+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.etsi.mheg5': {
        source: 'iana',
      },
      'application/vnd.etsi.overload-control-policy-dataset+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.etsi.pstn+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.etsi.sci+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.etsi.simservs+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.etsi.timestamp-token': {
        source: 'iana',
      },
      'application/vnd.etsi.tsl+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.etsi.tsl.der': {
        source: 'iana',
      },
      'application/vnd.eu.kasparian.car+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.eudora.data': {
        source: 'iana',
      },
      'application/vnd.evolv.ecig.profile': {
        source: 'iana',
      },
      'application/vnd.evolv.ecig.settings': {
        source: 'iana',
      },
      'application/vnd.evolv.ecig.theme': {
        source: 'iana',
      },
      'application/vnd.exstream-empower+zip': {
        source: 'iana',
        compressible: false,
      },
      'application/vnd.exstream-package': {
        source: 'iana',
      },
      'application/vnd.ezpix-album': {
        source: 'iana',
        extensions: ['ez2'],
      },
      'application/vnd.ezpix-package': {
        source: 'iana',
        extensions: ['ez3'],
      },
      'application/vnd.f-secure.mobile': {
        source: 'iana',
      },
      'application/vnd.familysearch.gedcom+zip': {
        source: 'iana',
        compressible: false,
      },
      'application/vnd.fastcopy-disk-image': {
        source: 'iana',
      },
      'application/vnd.fdf': {
        source: 'iana',
        extensions: ['fdf'],
      },
      'application/vnd.fdsn.mseed': {
        source: 'iana',
        extensions: ['mseed'],
      },
      'application/vnd.fdsn.seed': {
        source: 'iana',
        extensions: ['seed', 'dataless'],
      },
      'application/vnd.ffsns': {
        source: 'iana',
      },
      'application/vnd.ficlab.flb+zip': {
        source: 'iana',
        compressible: false,
      },
      'application/vnd.filmit.zfc': {
        source: 'iana',
      },
      'application/vnd.fints': {
        source: 'iana',
      },
      'application/vnd.firemonkeys.cloudcell': {
        source: 'iana',
      },
      'application/vnd.flographit': {
        source: 'iana',
        extensions: ['gph'],
      },
      'application/vnd.fluxtime.clip': {
        source: 'iana',
        extensions: ['ftc'],
      },
      'application/vnd.font-fontforge-sfd': {
        source: 'iana',
      },
      'application/vnd.framemaker': {
        source: 'iana',
        extensions: ['fm', 'frame', 'maker', 'book'],
      },
      'application/vnd.frogans.fnc': {
        source: 'iana',
        extensions: ['fnc'],
      },
      'application/vnd.frogans.ltf': {
        source: 'iana',
        extensions: ['ltf'],
      },
      'application/vnd.fsc.weblaunch': {
        source: 'iana',
        extensions: ['fsc'],
      },
      'application/vnd.fujifilm.fb.docuworks': {
        source: 'iana',
      },
      'application/vnd.fujifilm.fb.docuworks.binder': {
        source: 'iana',
      },
      'application/vnd.fujifilm.fb.docuworks.container': {
        source: 'iana',
      },
      'application/vnd.fujifilm.fb.jfi+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.fujitsu.oasys': {
        source: 'iana',
        extensions: ['oas'],
      },
      'application/vnd.fujitsu.oasys2': {
        source: 'iana',
        extensions: ['oa2'],
      },
      'application/vnd.fujitsu.oasys3': {
        source: 'iana',
        extensions: ['oa3'],
      },
      'application/vnd.fujitsu.oasysgp': {
        source: 'iana',
        extensions: ['fg5'],
      },
      'application/vnd.fujitsu.oasysprs': {
        source: 'iana',
        extensions: ['bh2'],
      },
      'application/vnd.fujixerox.art-ex': {
        source: 'iana',
      },
      'application/vnd.fujixerox.art4': {
        source: 'iana',
      },
      'application/vnd.fujixerox.ddd': {
        source: 'iana',
        extensions: ['ddd'],
      },
      'application/vnd.fujixerox.docuworks': {
        source: 'iana',
        extensions: ['xdw'],
      },
      'application/vnd.fujixerox.docuworks.binder': {
        source: 'iana',
        extensions: ['xbd'],
      },
      'application/vnd.fujixerox.docuworks.container': {
        source: 'iana',
      },
      'application/vnd.fujixerox.hbpl': {
        source: 'iana',
      },
      'application/vnd.fut-misnet': {
        source: 'iana',
      },
      'application/vnd.futoin+cbor': {
        source: 'iana',
      },
      'application/vnd.futoin+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.fuzzysheet': {
        source: 'iana',
        extensions: ['fzs'],
      },
      'application/vnd.genomatix.tuxedo': {
        source: 'iana',
        extensions: ['txd'],
      },
      'application/vnd.gentics.grd+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.geo+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.geocube+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.geogebra.file': {
        source: 'iana',
        extensions: ['ggb'],
      },
      'application/vnd.geogebra.slides': {
        source: 'iana',
      },
      'application/vnd.geogebra.tool': {
        source: 'iana',
        extensions: ['ggt'],
      },
      'application/vnd.geometry-explorer': {
        source: 'iana',
        extensions: ['gex', 'gre'],
      },
      'application/vnd.geonext': {
        source: 'iana',
        extensions: ['gxt'],
      },
      'application/vnd.geoplan': {
        source: 'iana',
        extensions: ['g2w'],
      },
      'application/vnd.geospace': {
        source: 'iana',
        extensions: ['g3w'],
      },
      'application/vnd.gerber': {
        source: 'iana',
      },
      'application/vnd.globalplatform.card-content-mgt': {
        source: 'iana',
      },
      'application/vnd.globalplatform.card-content-mgt-response': {
        source: 'iana',
      },
      'application/vnd.gmx': {
        source: 'iana',
        extensions: ['gmx'],
      },
      'application/vnd.google-apps.document': {
        compressible: false,
        extensions: ['gdoc'],
      },
      'application/vnd.google-apps.presentation': {
        compressible: false,
        extensions: ['gslides'],
      },
      'application/vnd.google-apps.spreadsheet': {
        compressible: false,
        extensions: ['gsheet'],
      },
      'application/vnd.google-earth.kml+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['kml'],
      },
      'application/vnd.google-earth.kmz': {
        source: 'iana',
        compressible: false,
        extensions: ['kmz'],
      },
      'application/vnd.gov.sk.e-form+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.gov.sk.e-form+zip': {
        source: 'iana',
        compressible: false,
      },
      'application/vnd.gov.sk.xmldatacontainer+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.grafeq': {
        source: 'iana',
        extensions: ['gqf', 'gqs'],
      },
      'application/vnd.gridmp': {
        source: 'iana',
      },
      'application/vnd.groove-account': {
        source: 'iana',
        extensions: ['gac'],
      },
      'application/vnd.groove-help': {
        source: 'iana',
        extensions: ['ghf'],
      },
      'application/vnd.groove-identity-message': {
        source: 'iana',
        extensions: ['gim'],
      },
      'application/vnd.groove-injector': {
        source: 'iana',
        extensions: ['grv'],
      },
      'application/vnd.groove-tool-message': {
        source: 'iana',
        extensions: ['gtm'],
      },
      'application/vnd.groove-tool-template': {
        source: 'iana',
        extensions: ['tpl'],
      },
      'application/vnd.groove-vcard': {
        source: 'iana',
        extensions: ['vcg'],
      },
      'application/vnd.hal+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.hal+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['hal'],
      },
      'application/vnd.handheld-entertainment+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['zmm'],
      },
      'application/vnd.hbci': {
        source: 'iana',
        extensions: ['hbci'],
      },
      'application/vnd.hc+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.hcl-bireports': {
        source: 'iana',
      },
      'application/vnd.hdt': {
        source: 'iana',
      },
      'application/vnd.heroku+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.hhe.lesson-player': {
        source: 'iana',
        extensions: ['les'],
      },
      'application/vnd.hl7cda+xml': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
      },
      'application/vnd.hl7v2+xml': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
      },
      'application/vnd.hp-hpgl': {
        source: 'iana',
        extensions: ['hpgl'],
      },
      'application/vnd.hp-hpid': {
        source: 'iana',
        extensions: ['hpid'],
      },
      'application/vnd.hp-hps': {
        source: 'iana',
        extensions: ['hps'],
      },
      'application/vnd.hp-jlyt': {
        source: 'iana',
        extensions: ['jlt'],
      },
      'application/vnd.hp-pcl': {
        source: 'iana',
        extensions: ['pcl'],
      },
      'application/vnd.hp-pclxl': {
        source: 'iana',
        extensions: ['pclxl'],
      },
      'application/vnd.httphone': {
        source: 'iana',
      },
      'application/vnd.hydrostatix.sof-data': {
        source: 'iana',
        extensions: ['sfd-hdstx'],
      },
      'application/vnd.hyper+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.hyper-item+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.hyperdrive+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.hzn-3d-crossword': {
        source: 'iana',
      },
      'application/vnd.ibm.afplinedata': {
        source: 'iana',
      },
      'application/vnd.ibm.electronic-media': {
        source: 'iana',
      },
      'application/vnd.ibm.minipay': {
        source: 'iana',
        extensions: ['mpy'],
      },
      'application/vnd.ibm.modcap': {
        source: 'iana',
        extensions: ['afp', 'listafp', 'list3820'],
      },
      'application/vnd.ibm.rights-management': {
        source: 'iana',
        extensions: ['irm'],
      },
      'application/vnd.ibm.secure-container': {
        source: 'iana',
        extensions: ['sc'],
      },
      'application/vnd.iccprofile': {
        source: 'iana',
        extensions: ['icc', 'icm'],
      },
      'application/vnd.ieee.1905': {
        source: 'iana',
      },
      'application/vnd.igloader': {
        source: 'iana',
        extensions: ['igl'],
      },
      'application/vnd.imagemeter.folder+zip': {
        source: 'iana',
        compressible: false,
      },
      'application/vnd.imagemeter.image+zip': {
        source: 'iana',
        compressible: false,
      },
      'application/vnd.immervision-ivp': {
        source: 'iana',
        extensions: ['ivp'],
      },
      'application/vnd.immervision-ivu': {
        source: 'iana',
        extensions: ['ivu'],
      },
      'application/vnd.ims.imsccv1p1': {
        source: 'iana',
      },
      'application/vnd.ims.imsccv1p2': {
        source: 'iana',
      },
      'application/vnd.ims.imsccv1p3': {
        source: 'iana',
      },
      'application/vnd.ims.lis.v2.result+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.ims.lti.v2.toolconsumerprofile+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.ims.lti.v2.toolproxy+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.ims.lti.v2.toolproxy.id+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.ims.lti.v2.toolsettings+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.ims.lti.v2.toolsettings.simple+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.informedcontrol.rms+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.informix-visionary': {
        source: 'iana',
      },
      'application/vnd.infotech.project': {
        source: 'iana',
      },
      'application/vnd.infotech.project+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.innopath.wamp.notification': {
        source: 'iana',
      },
      'application/vnd.insors.igm': {
        source: 'iana',
        extensions: ['igm'],
      },
      'application/vnd.intercon.formnet': {
        source: 'iana',
        extensions: ['xpw', 'xpx'],
      },
      'application/vnd.intergeo': {
        source: 'iana',
        extensions: ['i2g'],
      },
      'application/vnd.intertrust.digibox': {
        source: 'iana',
      },
      'application/vnd.intertrust.nncp': {
        source: 'iana',
      },
      'application/vnd.intu.qbo': {
        source: 'iana',
        extensions: ['qbo'],
      },
      'application/vnd.intu.qfx': {
        source: 'iana',
        extensions: ['qfx'],
      },
      'application/vnd.iptc.g2.catalogitem+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.iptc.g2.conceptitem+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.iptc.g2.knowledgeitem+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.iptc.g2.newsitem+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.iptc.g2.newsmessage+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.iptc.g2.packageitem+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.iptc.g2.planningitem+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.ipunplugged.rcprofile': {
        source: 'iana',
        extensions: ['rcprofile'],
      },
      'application/vnd.irepository.package+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['irp'],
      },
      'application/vnd.is-xpr': {
        source: 'iana',
        extensions: ['xpr'],
      },
      'application/vnd.isac.fcs': {
        source: 'iana',
        extensions: ['fcs'],
      },
      'application/vnd.iso11783-10+zip': {
        source: 'iana',
        compressible: false,
      },
      'application/vnd.jam': {
        source: 'iana',
        extensions: ['jam'],
      },
      'application/vnd.japannet-directory-service': {
        source: 'iana',
      },
      'application/vnd.japannet-jpnstore-wakeup': {
        source: 'iana',
      },
      'application/vnd.japannet-payment-wakeup': {
        source: 'iana',
      },
      'application/vnd.japannet-registration': {
        source: 'iana',
      },
      'application/vnd.japannet-registration-wakeup': {
        source: 'iana',
      },
      'application/vnd.japannet-setstore-wakeup': {
        source: 'iana',
      },
      'application/vnd.japannet-verification': {
        source: 'iana',
      },
      'application/vnd.japannet-verification-wakeup': {
        source: 'iana',
      },
      'application/vnd.jcp.javame.midlet-rms': {
        source: 'iana',
        extensions: ['rms'],
      },
      'application/vnd.jisp': {
        source: 'iana',
        extensions: ['jisp'],
      },
      'application/vnd.joost.joda-archive': {
        source: 'iana',
        extensions: ['joda'],
      },
      'application/vnd.jsk.isdn-ngn': {
        source: 'iana',
      },
      'application/vnd.kahootz': {
        source: 'iana',
        extensions: ['ktz', 'ktr'],
      },
      'application/vnd.kde.karbon': {
        source: 'iana',
        extensions: ['karbon'],
      },
      'application/vnd.kde.kchart': {
        source: 'iana',
        extensions: ['chrt'],
      },
      'application/vnd.kde.kformula': {
        source: 'iana',
        extensions: ['kfo'],
      },
      'application/vnd.kde.kivio': {
        source: 'iana',
        extensions: ['flw'],
      },
      'application/vnd.kde.kontour': {
        source: 'iana',
        extensions: ['kon'],
      },
      'application/vnd.kde.kpresenter': {
        source: 'iana',
        extensions: ['kpr', 'kpt'],
      },
      'application/vnd.kde.kspread': {
        source: 'iana',
        extensions: ['ksp'],
      },
      'application/vnd.kde.kword': {
        source: 'iana',
        extensions: ['kwd', 'kwt'],
      },
      'application/vnd.kenameaapp': {
        source: 'iana',
        extensions: ['htke'],
      },
      'application/vnd.kidspiration': {
        source: 'iana',
        extensions: ['kia'],
      },
      'application/vnd.kinar': {
        source: 'iana',
        extensions: ['kne', 'knp'],
      },
      'application/vnd.koan': {
        source: 'iana',
        extensions: ['skp', 'skd', 'skt', 'skm'],
      },
      'application/vnd.kodak-descriptor': {
        source: 'iana',
        extensions: ['sse'],
      },
      'application/vnd.las': {
        source: 'iana',
      },
      'application/vnd.las.las+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.las.las+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['lasxml'],
      },
      'application/vnd.laszip': {
        source: 'iana',
      },
      'application/vnd.leap+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.liberty-request+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.llamagraphics.life-balance.desktop': {
        source: 'iana',
        extensions: ['lbd'],
      },
      'application/vnd.llamagraphics.life-balance.exchange+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['lbe'],
      },
      'application/vnd.logipipe.circuit+zip': {
        source: 'iana',
        compressible: false,
      },
      'application/vnd.loom': {
        source: 'iana',
      },
      'application/vnd.lotus-1-2-3': {
        source: 'iana',
        extensions: ['123'],
      },
      'application/vnd.lotus-approach': {
        source: 'iana',
        extensions: ['apr'],
      },
      'application/vnd.lotus-freelance': {
        source: 'iana',
        extensions: ['pre'],
      },
      'application/vnd.lotus-notes': {
        source: 'iana',
        extensions: ['nsf'],
      },
      'application/vnd.lotus-organizer': {
        source: 'iana',
        extensions: ['org'],
      },
      'application/vnd.lotus-screencam': {
        source: 'iana',
        extensions: ['scm'],
      },
      'application/vnd.lotus-wordpro': {
        source: 'iana',
        extensions: ['lwp'],
      },
      'application/vnd.macports.portpkg': {
        source: 'iana',
        extensions: ['portpkg'],
      },
      'application/vnd.mapbox-vector-tile': {
        source: 'iana',
        extensions: ['mvt'],
      },
      'application/vnd.marlin.drm.actiontoken+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.marlin.drm.conftoken+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.marlin.drm.license+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.marlin.drm.mdcf': {
        source: 'iana',
      },
      'application/vnd.mason+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.maxar.archive.3tz+zip': {
        source: 'iana',
        compressible: false,
      },
      'application/vnd.maxmind.maxmind-db': {
        source: 'iana',
      },
      'application/vnd.mcd': {
        source: 'iana',
        extensions: ['mcd'],
      },
      'application/vnd.medcalcdata': {
        source: 'iana',
        extensions: ['mc1'],
      },
      'application/vnd.mediastation.cdkey': {
        source: 'iana',
        extensions: ['cdkey'],
      },
      'application/vnd.meridian-slingshot': {
        source: 'iana',
      },
      'application/vnd.mfer': {
        source: 'iana',
        extensions: ['mwf'],
      },
      'application/vnd.mfmp': {
        source: 'iana',
        extensions: ['mfm'],
      },
      'application/vnd.micro+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.micrografx.flo': {
        source: 'iana',
        extensions: ['flo'],
      },
      'application/vnd.micrografx.igx': {
        source: 'iana',
        extensions: ['igx'],
      },
      'application/vnd.microsoft.portable-executable': {
        source: 'iana',
      },
      'application/vnd.microsoft.windows.thumbnail-cache': {
        source: 'iana',
      },
      'application/vnd.miele+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.mif': {
        source: 'iana',
        extensions: ['mif'],
      },
      'application/vnd.minisoft-hp3000-save': {
        source: 'iana',
      },
      'application/vnd.mitsubishi.misty-guard.trustweb': {
        source: 'iana',
      },
      'application/vnd.mobius.daf': {
        source: 'iana',
        extensions: ['daf'],
      },
      'application/vnd.mobius.dis': {
        source: 'iana',
        extensions: ['dis'],
      },
      'application/vnd.mobius.mbk': {
        source: 'iana',
        extensions: ['mbk'],
      },
      'application/vnd.mobius.mqy': {
        source: 'iana',
        extensions: ['mqy'],
      },
      'application/vnd.mobius.msl': {
        source: 'iana',
        extensions: ['msl'],
      },
      'application/vnd.mobius.plc': {
        source: 'iana',
        extensions: ['plc'],
      },
      'application/vnd.mobius.txf': {
        source: 'iana',
        extensions: ['txf'],
      },
      'application/vnd.mophun.application': {
        source: 'iana',
        extensions: ['mpn'],
      },
      'application/vnd.mophun.certificate': {
        source: 'iana',
        extensions: ['mpc'],
      },
      'application/vnd.motorola.flexsuite': {
        source: 'iana',
      },
      'application/vnd.motorola.flexsuite.adsi': {
        source: 'iana',
      },
      'application/vnd.motorola.flexsuite.fis': {
        source: 'iana',
      },
      'application/vnd.motorola.flexsuite.gotap': {
        source: 'iana',
      },
      'application/vnd.motorola.flexsuite.kmr': {
        source: 'iana',
      },
      'application/vnd.motorola.flexsuite.ttc': {
        source: 'iana',
      },
      'application/vnd.motorola.flexsuite.wem': {
        source: 'iana',
      },
      'application/vnd.motorola.iprm': {
        source: 'iana',
      },
      'application/vnd.mozilla.xul+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['xul'],
      },
      'application/vnd.ms-3mfdocument': {
        source: 'iana',
      },
      'application/vnd.ms-artgalry': {
        source: 'iana',
        extensions: ['cil'],
      },
      'application/vnd.ms-asf': {
        source: 'iana',
      },
      'application/vnd.ms-cab-compressed': {
        source: 'iana',
        extensions: ['cab'],
      },
      'application/vnd.ms-color.iccprofile': {
        source: 'apache',
      },
      'application/vnd.ms-excel': {
        source: 'iana',
        compressible: false,
        extensions: ['xls', 'xlm', 'xla', 'xlc', 'xlt', 'xlw'],
      },
      'application/vnd.ms-excel.addin.macroenabled.12': {
        source: 'iana',
        extensions: ['xlam'],
      },
      'application/vnd.ms-excel.sheet.binary.macroenabled.12': {
        source: 'iana',
        extensions: ['xlsb'],
      },
      'application/vnd.ms-excel.sheet.macroenabled.12': {
        source: 'iana',
        extensions: ['xlsm'],
      },
      'application/vnd.ms-excel.template.macroenabled.12': {
        source: 'iana',
        extensions: ['xltm'],
      },
      'application/vnd.ms-fontobject': {
        source: 'iana',
        compressible: true,
        extensions: ['eot'],
      },
      'application/vnd.ms-htmlhelp': {
        source: 'iana',
        extensions: ['chm'],
      },
      'application/vnd.ms-ims': {
        source: 'iana',
        extensions: ['ims'],
      },
      'application/vnd.ms-lrm': {
        source: 'iana',
        extensions: ['lrm'],
      },
      'application/vnd.ms-office.activex+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.ms-officetheme': {
        source: 'iana',
        extensions: ['thmx'],
      },
      'application/vnd.ms-opentype': {
        source: 'apache',
        compressible: true,
      },
      'application/vnd.ms-outlook': {
        compressible: false,
        extensions: ['msg'],
      },
      'application/vnd.ms-package.obfuscated-opentype': {
        source: 'apache',
      },
      'application/vnd.ms-pki.seccat': {
        source: 'apache',
        extensions: ['cat'],
      },
      'application/vnd.ms-pki.stl': {
        source: 'apache',
        extensions: ['stl'],
      },
      'application/vnd.ms-playready.initiator+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.ms-powerpoint': {
        source: 'iana',
        compressible: false,
        extensions: ['ppt', 'pps', 'pot'],
      },
      'application/vnd.ms-powerpoint.addin.macroenabled.12': {
        source: 'iana',
        extensions: ['ppam'],
      },
      'application/vnd.ms-powerpoint.presentation.macroenabled.12': {
        source: 'iana',
        extensions: ['pptm'],
      },
      'application/vnd.ms-powerpoint.slide.macroenabled.12': {
        source: 'iana',
        extensions: ['sldm'],
      },
      'application/vnd.ms-powerpoint.slideshow.macroenabled.12': {
        source: 'iana',
        extensions: ['ppsm'],
      },
      'application/vnd.ms-powerpoint.template.macroenabled.12': {
        source: 'iana',
        extensions: ['potm'],
      },
      'application/vnd.ms-printdevicecapabilities+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.ms-printing.printticket+xml': {
        source: 'apache',
        compressible: true,
      },
      'application/vnd.ms-printschematicket+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.ms-project': {
        source: 'iana',
        extensions: ['mpp', 'mpt'],
      },
      'application/vnd.ms-tnef': {
        source: 'iana',
      },
      'application/vnd.ms-windows.devicepairing': {
        source: 'iana',
      },
      'application/vnd.ms-windows.nwprinting.oob': {
        source: 'iana',
      },
      'application/vnd.ms-windows.printerpairing': {
        source: 'iana',
      },
      'application/vnd.ms-windows.wsd.oob': {
        source: 'iana',
      },
      'application/vnd.ms-wmdrm.lic-chlg-req': {
        source: 'iana',
      },
      'application/vnd.ms-wmdrm.lic-resp': {
        source: 'iana',
      },
      'application/vnd.ms-wmdrm.meter-chlg-req': {
        source: 'iana',
      },
      'application/vnd.ms-wmdrm.meter-resp': {
        source: 'iana',
      },
      'application/vnd.ms-word.document.macroenabled.12': {
        source: 'iana',
        extensions: ['docm'],
      },
      'application/vnd.ms-word.template.macroenabled.12': {
        source: 'iana',
        extensions: ['dotm'],
      },
      'application/vnd.ms-works': {
        source: 'iana',
        extensions: ['wps', 'wks', 'wcm', 'wdb'],
      },
      'application/vnd.ms-wpl': {
        source: 'iana',
        extensions: ['wpl'],
      },
      'application/vnd.ms-xpsdocument': {
        source: 'iana',
        compressible: false,
        extensions: ['xps'],
      },
      'application/vnd.msa-disk-image': {
        source: 'iana',
      },
      'application/vnd.mseq': {
        source: 'iana',
        extensions: ['mseq'],
      },
      'application/vnd.msign': {
        source: 'iana',
      },
      'application/vnd.multiad.creator': {
        source: 'iana',
      },
      'application/vnd.multiad.creator.cif': {
        source: 'iana',
      },
      'application/vnd.music-niff': {
        source: 'iana',
      },
      'application/vnd.musician': {
        source: 'iana',
        extensions: ['mus'],
      },
      'application/vnd.muvee.style': {
        source: 'iana',
        extensions: ['msty'],
      },
      'application/vnd.mynfc': {
        source: 'iana',
        extensions: ['taglet'],
      },
      'application/vnd.nacamar.ybrid+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.ncd.control': {
        source: 'iana',
      },
      'application/vnd.ncd.reference': {
        source: 'iana',
      },
      'application/vnd.nearst.inv+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.nebumind.line': {
        source: 'iana',
      },
      'application/vnd.nervana': {
        source: 'iana',
      },
      'application/vnd.netfpx': {
        source: 'iana',
      },
      'application/vnd.neurolanguage.nlu': {
        source: 'iana',
        extensions: ['nlu'],
      },
      'application/vnd.nimn': {
        source: 'iana',
      },
      'application/vnd.nintendo.nitro.rom': {
        source: 'iana',
      },
      'application/vnd.nintendo.snes.rom': {
        source: 'iana',
      },
      'application/vnd.nitf': {
        source: 'iana',
        extensions: ['ntf', 'nitf'],
      },
      'application/vnd.noblenet-directory': {
        source: 'iana',
        extensions: ['nnd'],
      },
      'application/vnd.noblenet-sealer': {
        source: 'iana',
        extensions: ['nns'],
      },
      'application/vnd.noblenet-web': {
        source: 'iana',
        extensions: ['nnw'],
      },
      'application/vnd.nokia.catalogs': {
        source: 'iana',
      },
      'application/vnd.nokia.conml+wbxml': {
        source: 'iana',
      },
      'application/vnd.nokia.conml+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.nokia.iptv.config+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.nokia.isds-radio-presets': {
        source: 'iana',
      },
      'application/vnd.nokia.landmark+wbxml': {
        source: 'iana',
      },
      'application/vnd.nokia.landmark+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.nokia.landmarkcollection+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.nokia.n-gage.ac+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['ac'],
      },
      'application/vnd.nokia.n-gage.data': {
        source: 'iana',
        extensions: ['ngdat'],
      },
      'application/vnd.nokia.n-gage.symbian.install': {
        source: 'iana',
        extensions: ['n-gage'],
      },
      'application/vnd.nokia.ncd': {
        source: 'iana',
      },
      'application/vnd.nokia.pcd+wbxml': {
        source: 'iana',
      },
      'application/vnd.nokia.pcd+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.nokia.radio-preset': {
        source: 'iana',
        extensions: ['rpst'],
      },
      'application/vnd.nokia.radio-presets': {
        source: 'iana',
        extensions: ['rpss'],
      },
      'application/vnd.novadigm.edm': {
        source: 'iana',
        extensions: ['edm'],
      },
      'application/vnd.novadigm.edx': {
        source: 'iana',
        extensions: ['edx'],
      },
      'application/vnd.novadigm.ext': {
        source: 'iana',
        extensions: ['ext'],
      },
      'application/vnd.ntt-local.content-share': {
        source: 'iana',
      },
      'application/vnd.ntt-local.file-transfer': {
        source: 'iana',
      },
      'application/vnd.ntt-local.ogw_remote-access': {
        source: 'iana',
      },
      'application/vnd.ntt-local.sip-ta_remote': {
        source: 'iana',
      },
      'application/vnd.ntt-local.sip-ta_tcp_stream': {
        source: 'iana',
      },
      'application/vnd.oasis.opendocument.chart': {
        source: 'iana',
        extensions: ['odc'],
      },
      'application/vnd.oasis.opendocument.chart-template': {
        source: 'iana',
        extensions: ['otc'],
      },
      'application/vnd.oasis.opendocument.database': {
        source: 'iana',
        extensions: ['odb'],
      },
      'application/vnd.oasis.opendocument.formula': {
        source: 'iana',
        extensions: ['odf'],
      },
      'application/vnd.oasis.opendocument.formula-template': {
        source: 'iana',
        extensions: ['odft'],
      },
      'application/vnd.oasis.opendocument.graphics': {
        source: 'iana',
        compressible: false,
        extensions: ['odg'],
      },
      'application/vnd.oasis.opendocument.graphics-template': {
        source: 'iana',
        extensions: ['otg'],
      },
      'application/vnd.oasis.opendocument.image': {
        source: 'iana',
        extensions: ['odi'],
      },
      'application/vnd.oasis.opendocument.image-template': {
        source: 'iana',
        extensions: ['oti'],
      },
      'application/vnd.oasis.opendocument.presentation': {
        source: 'iana',
        compressible: false,
        extensions: ['odp'],
      },
      'application/vnd.oasis.opendocument.presentation-template': {
        source: 'iana',
        extensions: ['otp'],
      },
      'application/vnd.oasis.opendocument.spreadsheet': {
        source: 'iana',
        compressible: false,
        extensions: ['ods'],
      },
      'application/vnd.oasis.opendocument.spreadsheet-template': {
        source: 'iana',
        extensions: ['ots'],
      },
      'application/vnd.oasis.opendocument.text': {
        source: 'iana',
        compressible: false,
        extensions: ['odt'],
      },
      'application/vnd.oasis.opendocument.text-master': {
        source: 'iana',
        extensions: ['odm'],
      },
      'application/vnd.oasis.opendocument.text-template': {
        source: 'iana',
        extensions: ['ott'],
      },
      'application/vnd.oasis.opendocument.text-web': {
        source: 'iana',
        extensions: ['oth'],
      },
      'application/vnd.obn': {
        source: 'iana',
      },
      'application/vnd.ocf+cbor': {
        source: 'iana',
      },
      'application/vnd.oci.image.manifest.v1+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oftn.l10n+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oipf.contentaccessdownload+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oipf.contentaccessstreaming+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oipf.cspg-hexbinary': {
        source: 'iana',
      },
      'application/vnd.oipf.dae.svg+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oipf.dae.xhtml+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oipf.mippvcontrolmessage+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oipf.pae.gem': {
        source: 'iana',
      },
      'application/vnd.oipf.spdiscovery+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oipf.spdlist+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oipf.ueprofile+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oipf.userprofile+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.olpc-sugar': {
        source: 'iana',
        extensions: ['xo'],
      },
      'application/vnd.oma-scws-config': {
        source: 'iana',
      },
      'application/vnd.oma-scws-http-request': {
        source: 'iana',
      },
      'application/vnd.oma-scws-http-response': {
        source: 'iana',
      },
      'application/vnd.oma.bcast.associated-procedure-parameter+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oma.bcast.drm-trigger+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oma.bcast.imd+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oma.bcast.ltkm': {
        source: 'iana',
      },
      'application/vnd.oma.bcast.notification+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oma.bcast.provisioningtrigger': {
        source: 'iana',
      },
      'application/vnd.oma.bcast.sgboot': {
        source: 'iana',
      },
      'application/vnd.oma.bcast.sgdd+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oma.bcast.sgdu': {
        source: 'iana',
      },
      'application/vnd.oma.bcast.simple-symbol-container': {
        source: 'iana',
      },
      'application/vnd.oma.bcast.smartcard-trigger+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oma.bcast.sprov+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oma.bcast.stkm': {
        source: 'iana',
      },
      'application/vnd.oma.cab-address-book+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oma.cab-feature-handler+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oma.cab-pcc+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oma.cab-subs-invite+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oma.cab-user-prefs+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oma.dcd': {
        source: 'iana',
      },
      'application/vnd.oma.dcdc': {
        source: 'iana',
      },
      'application/vnd.oma.dd2+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['dd2'],
      },
      'application/vnd.oma.drm.risd+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oma.group-usage-list+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oma.lwm2m+cbor': {
        source: 'iana',
      },
      'application/vnd.oma.lwm2m+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oma.lwm2m+tlv': {
        source: 'iana',
      },
      'application/vnd.oma.pal+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oma.poc.detailed-progress-report+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oma.poc.final-report+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oma.poc.groups+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oma.poc.invocation-descriptor+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oma.poc.optimized-progress-report+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oma.push': {
        source: 'iana',
      },
      'application/vnd.oma.scidm.messages+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oma.xcap-directory+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.omads-email+xml': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
      },
      'application/vnd.omads-file+xml': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
      },
      'application/vnd.omads-folder+xml': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
      },
      'application/vnd.omaloc-supl-init': {
        source: 'iana',
      },
      'application/vnd.onepager': {
        source: 'iana',
      },
      'application/vnd.onepagertamp': {
        source: 'iana',
      },
      'application/vnd.onepagertamx': {
        source: 'iana',
      },
      'application/vnd.onepagertat': {
        source: 'iana',
      },
      'application/vnd.onepagertatp': {
        source: 'iana',
      },
      'application/vnd.onepagertatx': {
        source: 'iana',
      },
      'application/vnd.openblox.game+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['obgx'],
      },
      'application/vnd.openblox.game-binary': {
        source: 'iana',
      },
      'application/vnd.openeye.oeb': {
        source: 'iana',
      },
      'application/vnd.openofficeorg.extension': {
        source: 'apache',
        extensions: ['oxt'],
      },
      'application/vnd.openstreetmap.data+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['osm'],
      },
      'application/vnd.opentimestamps.ots': {
        source: 'iana',
      },
      'application/vnd.openxmlformats-officedocument.custom-properties+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.openxmlformats-officedocument.customxmlproperties+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.openxmlformats-officedocument.drawing+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.openxmlformats-officedocument.drawingml.chart+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.extended-properties+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.presentationml.comments+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.presentationml.presentation':
        {
          source: 'iana',
          compressible: false,
          extensions: ['pptx'],
        },
      'application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.presentationml.presprops+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.presentationml.slide': {
        source: 'iana',
        extensions: ['sldx'],
      },
      'application/vnd.openxmlformats-officedocument.presentationml.slide+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.presentationml.slideshow':
        {
          source: 'iana',
          extensions: ['ppsx'],
        },
      'application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.presentationml.tags+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.openxmlformats-officedocument.presentationml.template': {
        source: 'iana',
        extensions: ['potx'],
      },
      'application/vnd.openxmlformats-officedocument.presentationml.template.main+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': {
        source: 'iana',
        compressible: false,
        extensions: ['xlsx'],
      },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.template': {
        source: 'iana',
        extensions: ['xltx'],
      },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.theme+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.openxmlformats-officedocument.themeoverride+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.openxmlformats-officedocument.vmldrawing': {
        source: 'iana',
      },
      'application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.wordprocessingml.document':
        {
          source: 'iana',
          compressible: false,
          extensions: ['docx'],
        },
      'application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.wordprocessingml.template':
        {
          source: 'iana',
          extensions: ['dotx'],
        },
      'application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-package.core-properties+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml':
        {
          source: 'iana',
          compressible: true,
        },
      'application/vnd.openxmlformats-package.relationships+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oracle.resource+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.orange.indata': {
        source: 'iana',
      },
      'application/vnd.osa.netdeploy': {
        source: 'iana',
      },
      'application/vnd.osgeo.mapguide.package': {
        source: 'iana',
        extensions: ['mgp'],
      },
      'application/vnd.osgi.bundle': {
        source: 'iana',
      },
      'application/vnd.osgi.dp': {
        source: 'iana',
        extensions: ['dp'],
      },
      'application/vnd.osgi.subsystem': {
        source: 'iana',
        extensions: ['esa'],
      },
      'application/vnd.otps.ct-kip+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.oxli.countgraph': {
        source: 'iana',
      },
      'application/vnd.pagerduty+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.palm': {
        source: 'iana',
        extensions: ['pdb', 'pqa', 'oprc'],
      },
      'application/vnd.panoply': {
        source: 'iana',
      },
      'application/vnd.paos.xml': {
        source: 'iana',
      },
      'application/vnd.patentdive': {
        source: 'iana',
      },
      'application/vnd.patientecommsdoc': {
        source: 'iana',
      },
      'application/vnd.pawaafile': {
        source: 'iana',
        extensions: ['paw'],
      },
      'application/vnd.pcos': {
        source: 'iana',
      },
      'application/vnd.pg.format': {
        source: 'iana',
        extensions: ['str'],
      },
      'application/vnd.pg.osasli': {
        source: 'iana',
        extensions: ['ei6'],
      },
      'application/vnd.piaccess.application-licence': {
        source: 'iana',
      },
      'application/vnd.picsel': {
        source: 'iana',
        extensions: ['efif'],
      },
      'application/vnd.pmi.widget': {
        source: 'iana',
        extensions: ['wg'],
      },
      'application/vnd.poc.group-advertisement+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.pocketlearn': {
        source: 'iana',
        extensions: ['plf'],
      },
      'application/vnd.powerbuilder6': {
        source: 'iana',
        extensions: ['pbd'],
      },
      'application/vnd.powerbuilder6-s': {
        source: 'iana',
      },
      'application/vnd.powerbuilder7': {
        source: 'iana',
      },
      'application/vnd.powerbuilder7-s': {
        source: 'iana',
      },
      'application/vnd.powerbuilder75': {
        source: 'iana',
      },
      'application/vnd.powerbuilder75-s': {
        source: 'iana',
      },
      'application/vnd.preminet': {
        source: 'iana',
      },
      'application/vnd.previewsystems.box': {
        source: 'iana',
        extensions: ['box'],
      },
      'application/vnd.proteus.magazine': {
        source: 'iana',
        extensions: ['mgz'],
      },
      'application/vnd.psfs': {
        source: 'iana',
      },
      'application/vnd.publishare-delta-tree': {
        source: 'iana',
        extensions: ['qps'],
      },
      'application/vnd.pvi.ptid1': {
        source: 'iana',
        extensions: ['ptid'],
      },
      'application/vnd.pwg-multiplexed': {
        source: 'iana',
      },
      'application/vnd.pwg-xhtml-print+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.qualcomm.brew-app-res': {
        source: 'iana',
      },
      'application/vnd.quarantainenet': {
        source: 'iana',
      },
      'application/vnd.quark.quarkxpress': {
        source: 'iana',
        extensions: ['qxd', 'qxt', 'qwd', 'qwt', 'qxl', 'qxb'],
      },
      'application/vnd.quobject-quoxdocument': {
        source: 'iana',
      },
      'application/vnd.radisys.moml+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.radisys.msml+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.radisys.msml-audit+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.radisys.msml-audit-conf+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.radisys.msml-audit-conn+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.radisys.msml-audit-dialog+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.radisys.msml-audit-stream+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.radisys.msml-conf+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.radisys.msml-dialog+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.radisys.msml-dialog-base+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.radisys.msml-dialog-fax-detect+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.radisys.msml-dialog-fax-sendrecv+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.radisys.msml-dialog-group+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.radisys.msml-dialog-speech+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.radisys.msml-dialog-transform+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.rainstor.data': {
        source: 'iana',
      },
      'application/vnd.rapid': {
        source: 'iana',
      },
      'application/vnd.rar': {
        source: 'iana',
        extensions: ['rar'],
      },
      'application/vnd.realvnc.bed': {
        source: 'iana',
        extensions: ['bed'],
      },
      'application/vnd.recordare.musicxml': {
        source: 'iana',
        extensions: ['mxl'],
      },
      'application/vnd.recordare.musicxml+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['musicxml'],
      },
      'application/vnd.renlearn.rlprint': {
        source: 'iana',
      },
      'application/vnd.resilient.logic': {
        source: 'iana',
      },
      'application/vnd.restful+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.rig.cryptonote': {
        source: 'iana',
        extensions: ['cryptonote'],
      },
      'application/vnd.rim.cod': {
        source: 'apache',
        extensions: ['cod'],
      },
      'application/vnd.rn-realmedia': {
        source: 'apache',
        extensions: ['rm'],
      },
      'application/vnd.rn-realmedia-vbr': {
        source: 'apache',
        extensions: ['rmvb'],
      },
      'application/vnd.route66.link66+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['link66'],
      },
      'application/vnd.rs-274x': {
        source: 'iana',
      },
      'application/vnd.ruckus.download': {
        source: 'iana',
      },
      'application/vnd.s3sms': {
        source: 'iana',
      },
      'application/vnd.sailingtracker.track': {
        source: 'iana',
        extensions: ['st'],
      },
      'application/vnd.sar': {
        source: 'iana',
      },
      'application/vnd.sbm.cid': {
        source: 'iana',
      },
      'application/vnd.sbm.mid2': {
        source: 'iana',
      },
      'application/vnd.scribus': {
        source: 'iana',
      },
      'application/vnd.sealed.3df': {
        source: 'iana',
      },
      'application/vnd.sealed.csf': {
        source: 'iana',
      },
      'application/vnd.sealed.doc': {
        source: 'iana',
      },
      'application/vnd.sealed.eml': {
        source: 'iana',
      },
      'application/vnd.sealed.mht': {
        source: 'iana',
      },
      'application/vnd.sealed.net': {
        source: 'iana',
      },
      'application/vnd.sealed.ppt': {
        source: 'iana',
      },
      'application/vnd.sealed.tiff': {
        source: 'iana',
      },
      'application/vnd.sealed.xls': {
        source: 'iana',
      },
      'application/vnd.sealedmedia.softseal.html': {
        source: 'iana',
      },
      'application/vnd.sealedmedia.softseal.pdf': {
        source: 'iana',
      },
      'application/vnd.seemail': {
        source: 'iana',
        extensions: ['see'],
      },
      'application/vnd.seis+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.sema': {
        source: 'iana',
        extensions: ['sema'],
      },
      'application/vnd.semd': {
        source: 'iana',
        extensions: ['semd'],
      },
      'application/vnd.semf': {
        source: 'iana',
        extensions: ['semf'],
      },
      'application/vnd.shade-save-file': {
        source: 'iana',
      },
      'application/vnd.shana.informed.formdata': {
        source: 'iana',
        extensions: ['ifm'],
      },
      'application/vnd.shana.informed.formtemplate': {
        source: 'iana',
        extensions: ['itp'],
      },
      'application/vnd.shana.informed.interchange': {
        source: 'iana',
        extensions: ['iif'],
      },
      'application/vnd.shana.informed.package': {
        source: 'iana',
        extensions: ['ipk'],
      },
      'application/vnd.shootproof+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.shopkick+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.shp': {
        source: 'iana',
      },
      'application/vnd.shx': {
        source: 'iana',
      },
      'application/vnd.sigrok.session': {
        source: 'iana',
      },
      'application/vnd.simtech-mindmapper': {
        source: 'iana',
        extensions: ['twd', 'twds'],
      },
      'application/vnd.siren+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.smaf': {
        source: 'iana',
        extensions: ['mmf'],
      },
      'application/vnd.smart.notebook': {
        source: 'iana',
      },
      'application/vnd.smart.teacher': {
        source: 'iana',
        extensions: ['teacher'],
      },
      'application/vnd.snesdev-page-table': {
        source: 'iana',
      },
      'application/vnd.software602.filler.form+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['fo'],
      },
      'application/vnd.software602.filler.form-xml-zip': {
        source: 'iana',
      },
      'application/vnd.solent.sdkm+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['sdkm', 'sdkd'],
      },
      'application/vnd.spotfire.dxp': {
        source: 'iana',
        extensions: ['dxp'],
      },
      'application/vnd.spotfire.sfs': {
        source: 'iana',
        extensions: ['sfs'],
      },
      'application/vnd.sqlite3': {
        source: 'iana',
      },
      'application/vnd.sss-cod': {
        source: 'iana',
      },
      'application/vnd.sss-dtf': {
        source: 'iana',
      },
      'application/vnd.sss-ntf': {
        source: 'iana',
      },
      'application/vnd.stardivision.calc': {
        source: 'apache',
        extensions: ['sdc'],
      },
      'application/vnd.stardivision.draw': {
        source: 'apache',
        extensions: ['sda'],
      },
      'application/vnd.stardivision.impress': {
        source: 'apache',
        extensions: ['sdd'],
      },
      'application/vnd.stardivision.math': {
        source: 'apache',
        extensions: ['smf'],
      },
      'application/vnd.stardivision.writer': {
        source: 'apache',
        extensions: ['sdw', 'vor'],
      },
      'application/vnd.stardivision.writer-global': {
        source: 'apache',
        extensions: ['sgl'],
      },
      'application/vnd.stepmania.package': {
        source: 'iana',
        extensions: ['smzip'],
      },
      'application/vnd.stepmania.stepchart': {
        source: 'iana',
        extensions: ['sm'],
      },
      'application/vnd.street-stream': {
        source: 'iana',
      },
      'application/vnd.sun.wadl+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['wadl'],
      },
      'application/vnd.sun.xml.calc': {
        source: 'apache',
        extensions: ['sxc'],
      },
      'application/vnd.sun.xml.calc.template': {
        source: 'apache',
        extensions: ['stc'],
      },
      'application/vnd.sun.xml.draw': {
        source: 'apache',
        extensions: ['sxd'],
      },
      'application/vnd.sun.xml.draw.template': {
        source: 'apache',
        extensions: ['std'],
      },
      'application/vnd.sun.xml.impress': {
        source: 'apache',
        extensions: ['sxi'],
      },
      'application/vnd.sun.xml.impress.template': {
        source: 'apache',
        extensions: ['sti'],
      },
      'application/vnd.sun.xml.math': {
        source: 'apache',
        extensions: ['sxm'],
      },
      'application/vnd.sun.xml.writer': {
        source: 'apache',
        extensions: ['sxw'],
      },
      'application/vnd.sun.xml.writer.global': {
        source: 'apache',
        extensions: ['sxg'],
      },
      'application/vnd.sun.xml.writer.template': {
        source: 'apache',
        extensions: ['stw'],
      },
      'application/vnd.sus-calendar': {
        source: 'iana',
        extensions: ['sus', 'susp'],
      },
      'application/vnd.svd': {
        source: 'iana',
        extensions: ['svd'],
      },
      'application/vnd.swiftview-ics': {
        source: 'iana',
      },
      'application/vnd.sycle+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.syft+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.symbian.install': {
        source: 'apache',
        extensions: ['sis', 'sisx'],
      },
      'application/vnd.syncml+xml': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
        extensions: ['xsm'],
      },
      'application/vnd.syncml.dm+wbxml': {
        source: 'iana',
        charset: 'UTF-8',
        extensions: ['bdm'],
      },
      'application/vnd.syncml.dm+xml': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
        extensions: ['xdm'],
      },
      'application/vnd.syncml.dm.notification': {
        source: 'iana',
      },
      'application/vnd.syncml.dmddf+wbxml': {
        source: 'iana',
      },
      'application/vnd.syncml.dmddf+xml': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
        extensions: ['ddf'],
      },
      'application/vnd.syncml.dmtnds+wbxml': {
        source: 'iana',
      },
      'application/vnd.syncml.dmtnds+xml': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
      },
      'application/vnd.syncml.ds.notification': {
        source: 'iana',
      },
      'application/vnd.tableschema+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.tao.intent-module-archive': {
        source: 'iana',
        extensions: ['tao'],
      },
      'application/vnd.tcpdump.pcap': {
        source: 'iana',
        extensions: ['pcap', 'cap', 'dmp'],
      },
      'application/vnd.think-cell.ppttc+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.tmd.mediaflex.api+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.tml': {
        source: 'iana',
      },
      'application/vnd.tmobile-livetv': {
        source: 'iana',
        extensions: ['tmo'],
      },
      'application/vnd.tri.onesource': {
        source: 'iana',
      },
      'application/vnd.trid.tpt': {
        source: 'iana',
        extensions: ['tpt'],
      },
      'application/vnd.triscape.mxs': {
        source: 'iana',
        extensions: ['mxs'],
      },
      'application/vnd.trueapp': {
        source: 'iana',
        extensions: ['tra'],
      },
      'application/vnd.truedoc': {
        source: 'iana',
      },
      'application/vnd.ubisoft.webplayer': {
        source: 'iana',
      },
      'application/vnd.ufdl': {
        source: 'iana',
        extensions: ['ufd', 'ufdl'],
      },
      'application/vnd.uiq.theme': {
        source: 'iana',
        extensions: ['utz'],
      },
      'application/vnd.umajin': {
        source: 'iana',
        extensions: ['umj'],
      },
      'application/vnd.unity': {
        source: 'iana',
        extensions: ['unityweb'],
      },
      'application/vnd.uoml+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['uoml'],
      },
      'application/vnd.uplanet.alert': {
        source: 'iana',
      },
      'application/vnd.uplanet.alert-wbxml': {
        source: 'iana',
      },
      'application/vnd.uplanet.bearer-choice': {
        source: 'iana',
      },
      'application/vnd.uplanet.bearer-choice-wbxml': {
        source: 'iana',
      },
      'application/vnd.uplanet.cacheop': {
        source: 'iana',
      },
      'application/vnd.uplanet.cacheop-wbxml': {
        source: 'iana',
      },
      'application/vnd.uplanet.channel': {
        source: 'iana',
      },
      'application/vnd.uplanet.channel-wbxml': {
        source: 'iana',
      },
      'application/vnd.uplanet.list': {
        source: 'iana',
      },
      'application/vnd.uplanet.list-wbxml': {
        source: 'iana',
      },
      'application/vnd.uplanet.listcmd': {
        source: 'iana',
      },
      'application/vnd.uplanet.listcmd-wbxml': {
        source: 'iana',
      },
      'application/vnd.uplanet.signal': {
        source: 'iana',
      },
      'application/vnd.uri-map': {
        source: 'iana',
      },
      'application/vnd.valve.source.material': {
        source: 'iana',
      },
      'application/vnd.vcx': {
        source: 'iana',
        extensions: ['vcx'],
      },
      'application/vnd.vd-study': {
        source: 'iana',
      },
      'application/vnd.vectorworks': {
        source: 'iana',
      },
      'application/vnd.vel+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.verimatrix.vcas': {
        source: 'iana',
      },
      'application/vnd.veritone.aion+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.veryant.thin': {
        source: 'iana',
      },
      'application/vnd.ves.encrypted': {
        source: 'iana',
      },
      'application/vnd.vidsoft.vidconference': {
        source: 'iana',
      },
      'application/vnd.visio': {
        source: 'iana',
        extensions: ['vsd', 'vst', 'vss', 'vsw'],
      },
      'application/vnd.visionary': {
        source: 'iana',
        extensions: ['vis'],
      },
      'application/vnd.vividence.scriptfile': {
        source: 'iana',
      },
      'application/vnd.vsf': {
        source: 'iana',
        extensions: ['vsf'],
      },
      'application/vnd.wap.sic': {
        source: 'iana',
      },
      'application/vnd.wap.slc': {
        source: 'iana',
      },
      'application/vnd.wap.wbxml': {
        source: 'iana',
        charset: 'UTF-8',
        extensions: ['wbxml'],
      },
      'application/vnd.wap.wmlc': {
        source: 'iana',
        extensions: ['wmlc'],
      },
      'application/vnd.wap.wmlscriptc': {
        source: 'iana',
        extensions: ['wmlsc'],
      },
      'application/vnd.webturbo': {
        source: 'iana',
        extensions: ['wtb'],
      },
      'application/vnd.wfa.dpp': {
        source: 'iana',
      },
      'application/vnd.wfa.p2p': {
        source: 'iana',
      },
      'application/vnd.wfa.wsc': {
        source: 'iana',
      },
      'application/vnd.windows.devicepairing': {
        source: 'iana',
      },
      'application/vnd.wmc': {
        source: 'iana',
      },
      'application/vnd.wmf.bootstrap': {
        source: 'iana',
      },
      'application/vnd.wolfram.mathematica': {
        source: 'iana',
      },
      'application/vnd.wolfram.mathematica.package': {
        source: 'iana',
      },
      'application/vnd.wolfram.player': {
        source: 'iana',
        extensions: ['nbp'],
      },
      'application/vnd.wordperfect': {
        source: 'iana',
        extensions: ['wpd'],
      },
      'application/vnd.wqd': {
        source: 'iana',
        extensions: ['wqd'],
      },
      'application/vnd.wrq-hp3000-labelled': {
        source: 'iana',
      },
      'application/vnd.wt.stf': {
        source: 'iana',
        extensions: ['stf'],
      },
      'application/vnd.wv.csp+wbxml': {
        source: 'iana',
      },
      'application/vnd.wv.csp+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.wv.ssp+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.xacml+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.xara': {
        source: 'iana',
        extensions: ['xar'],
      },
      'application/vnd.xfdl': {
        source: 'iana',
        extensions: ['xfdl'],
      },
      'application/vnd.xfdl.webform': {
        source: 'iana',
      },
      'application/vnd.xmi+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/vnd.xmpie.cpkg': {
        source: 'iana',
      },
      'application/vnd.xmpie.dpkg': {
        source: 'iana',
      },
      'application/vnd.xmpie.plan': {
        source: 'iana',
      },
      'application/vnd.xmpie.ppkg': {
        source: 'iana',
      },
      'application/vnd.xmpie.xlim': {
        source: 'iana',
      },
      'application/vnd.yamaha.hv-dic': {
        source: 'iana',
        extensions: ['hvd'],
      },
      'application/vnd.yamaha.hv-script': {
        source: 'iana',
        extensions: ['hvs'],
      },
      'application/vnd.yamaha.hv-voice': {
        source: 'iana',
        extensions: ['hvp'],
      },
      'application/vnd.yamaha.openscoreformat': {
        source: 'iana',
        extensions: ['osf'],
      },
      'application/vnd.yamaha.openscoreformat.osfpvg+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['osfpvg'],
      },
      'application/vnd.yamaha.remote-setup': {
        source: 'iana',
      },
      'application/vnd.yamaha.smaf-audio': {
        source: 'iana',
        extensions: ['saf'],
      },
      'application/vnd.yamaha.smaf-phrase': {
        source: 'iana',
        extensions: ['spf'],
      },
      'application/vnd.yamaha.through-ngn': {
        source: 'iana',
      },
      'application/vnd.yamaha.tunnel-udpencap': {
        source: 'iana',
      },
      'application/vnd.yaoweme': {
        source: 'iana',
      },
      'application/vnd.yellowriver-custom-menu': {
        source: 'iana',
        extensions: ['cmp'],
      },
      'application/vnd.youtube.yt': {
        source: 'iana',
      },
      'application/vnd.zul': {
        source: 'iana',
        extensions: ['zir', 'zirz'],
      },
      'application/vnd.zzazz.deck+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['zaz'],
      },
      'application/voicexml+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['vxml'],
      },
      'application/voucher-cms+json': {
        source: 'iana',
        compressible: true,
      },
      'application/vq-rtcpxr': {
        source: 'iana',
      },
      'application/wasm': {
        source: 'iana',
        compressible: true,
        extensions: ['wasm'],
      },
      'application/watcherinfo+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['wif'],
      },
      'application/webpush-options+json': {
        source: 'iana',
        compressible: true,
      },
      'application/whoispp-query': {
        source: 'iana',
      },
      'application/whoispp-response': {
        source: 'iana',
      },
      'application/widget': {
        source: 'iana',
        extensions: ['wgt'],
      },
      'application/winhlp': {
        source: 'apache',
        extensions: ['hlp'],
      },
      'application/wita': {
        source: 'iana',
      },
      'application/wordperfect5.1': {
        source: 'iana',
      },
      'application/wsdl+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['wsdl'],
      },
      'application/wspolicy+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['wspolicy'],
      },
      'application/x-7z-compressed': {
        source: 'apache',
        compressible: false,
        extensions: ['7z'],
      },
      'application/x-abiword': {
        source: 'apache',
        extensions: ['abw'],
      },
      'application/x-ace-compressed': {
        source: 'apache',
        extensions: ['ace'],
      },
      'application/x-amf': {
        source: 'apache',
      },
      'application/x-apple-diskimage': {
        source: 'apache',
        extensions: ['dmg'],
      },
      'application/x-arj': {
        compressible: false,
        extensions: ['arj'],
      },
      'application/x-authorware-bin': {
        source: 'apache',
        extensions: ['aab', 'x32', 'u32', 'vox'],
      },
      'application/x-authorware-map': {
        source: 'apache',
        extensions: ['aam'],
      },
      'application/x-authorware-seg': {
        source: 'apache',
        extensions: ['aas'],
      },
      'application/x-bcpio': {
        source: 'apache',
        extensions: ['bcpio'],
      },
      'application/x-bdoc': {
        compressible: false,
        extensions: ['bdoc'],
      },
      'application/x-bittorrent': {
        source: 'apache',
        extensions: ['torrent'],
      },
      'application/x-blorb': {
        source: 'apache',
        extensions: ['blb', 'blorb'],
      },
      'application/x-bzip': {
        source: 'apache',
        compressible: false,
        extensions: ['bz'],
      },
      'application/x-bzip2': {
        source: 'apache',
        compressible: false,
        extensions: ['bz2', 'boz'],
      },
      'application/x-cbr': {
        source: 'apache',
        extensions: ['cbr', 'cba', 'cbt', 'cbz', 'cb7'],
      },
      'application/x-cdlink': {
        source: 'apache',
        extensions: ['vcd'],
      },
      'application/x-cfs-compressed': {
        source: 'apache',
        extensions: ['cfs'],
      },
      'application/x-chat': {
        source: 'apache',
        extensions: ['chat'],
      },
      'application/x-chess-pgn': {
        source: 'apache',
        extensions: ['pgn'],
      },
      'application/x-chrome-extension': {
        extensions: ['crx'],
      },
      'application/x-cocoa': {
        source: 'nginx',
        extensions: ['cco'],
      },
      'application/x-compress': {
        source: 'apache',
      },
      'application/x-conference': {
        source: 'apache',
        extensions: ['nsc'],
      },
      'application/x-cpio': {
        source: 'apache',
        extensions: ['cpio'],
      },
      'application/x-csh': {
        source: 'apache',
        extensions: ['csh'],
      },
      'application/x-deb': {
        compressible: false,
      },
      'application/x-debian-package': {
        source: 'apache',
        extensions: ['deb', 'udeb'],
      },
      'application/x-dgc-compressed': {
        source: 'apache',
        extensions: ['dgc'],
      },
      'application/x-director': {
        source: 'apache',
        extensions: [
          'dir',
          'dcr',
          'dxr',
          'cst',
          'cct',
          'cxt',
          'w3d',
          'fgd',
          'swa',
        ],
      },
      'application/x-doom': {
        source: 'apache',
        extensions: ['wad'],
      },
      'application/x-dtbncx+xml': {
        source: 'apache',
        compressible: true,
        extensions: ['ncx'],
      },
      'application/x-dtbook+xml': {
        source: 'apache',
        compressible: true,
        extensions: ['dtb'],
      },
      'application/x-dtbresource+xml': {
        source: 'apache',
        compressible: true,
        extensions: ['res'],
      },
      'application/x-dvi': {
        source: 'apache',
        compressible: false,
        extensions: ['dvi'],
      },
      'application/x-envoy': {
        source: 'apache',
        extensions: ['evy'],
      },
      'application/x-eva': {
        source: 'apache',
        extensions: ['eva'],
      },
      'application/x-font-bdf': {
        source: 'apache',
        extensions: ['bdf'],
      },
      'application/x-font-dos': {
        source: 'apache',
      },
      'application/x-font-framemaker': {
        source: 'apache',
      },
      'application/x-font-ghostscript': {
        source: 'apache',
        extensions: ['gsf'],
      },
      'application/x-font-libgrx': {
        source: 'apache',
      },
      'application/x-font-linux-psf': {
        source: 'apache',
        extensions: ['psf'],
      },
      'application/x-font-pcf': {
        source: 'apache',
        extensions: ['pcf'],
      },
      'application/x-font-snf': {
        source: 'apache',
        extensions: ['snf'],
      },
      'application/x-font-speedo': {
        source: 'apache',
      },
      'application/x-font-sunos-news': {
        source: 'apache',
      },
      'application/x-font-type1': {
        source: 'apache',
        extensions: ['pfa', 'pfb', 'pfm', 'afm'],
      },
      'application/x-font-vfont': {
        source: 'apache',
      },
      'application/x-freearc': {
        source: 'apache',
        extensions: ['arc'],
      },
      'application/x-futuresplash': {
        source: 'apache',
        extensions: ['spl'],
      },
      'application/x-gca-compressed': {
        source: 'apache',
        extensions: ['gca'],
      },
      'application/x-glulx': {
        source: 'apache',
        extensions: ['ulx'],
      },
      'application/x-gnumeric': {
        source: 'apache',
        extensions: ['gnumeric'],
      },
      'application/x-gramps-xml': {
        source: 'apache',
        extensions: ['gramps'],
      },
      'application/x-gtar': {
        source: 'apache',
        extensions: ['gtar'],
      },
      'application/x-gzip': {
        source: 'apache',
      },
      'application/x-hdf': {
        source: 'apache',
        extensions: ['hdf'],
      },
      'application/x-httpd-php': {
        compressible: true,
        extensions: ['php'],
      },
      'application/x-install-instructions': {
        source: 'apache',
        extensions: ['install'],
      },
      'application/x-iso9660-image': {
        source: 'apache',
        extensions: ['iso'],
      },
      'application/x-iwork-keynote-sffkey': {
        extensions: ['key'],
      },
      'application/x-iwork-numbers-sffnumbers': {
        extensions: ['numbers'],
      },
      'application/x-iwork-pages-sffpages': {
        extensions: ['pages'],
      },
      'application/x-java-archive-diff': {
        source: 'nginx',
        extensions: ['jardiff'],
      },
      'application/x-java-jnlp-file': {
        source: 'apache',
        compressible: false,
        extensions: ['jnlp'],
      },
      'application/x-javascript': {
        compressible: true,
      },
      'application/x-keepass2': {
        extensions: ['kdbx'],
      },
      'application/x-latex': {
        source: 'apache',
        compressible: false,
        extensions: ['latex'],
      },
      'application/x-lua-bytecode': {
        extensions: ['luac'],
      },
      'application/x-lzh-compressed': {
        source: 'apache',
        extensions: ['lzh', 'lha'],
      },
      'application/x-makeself': {
        source: 'nginx',
        extensions: ['run'],
      },
      'application/x-mie': {
        source: 'apache',
        extensions: ['mie'],
      },
      'application/x-mobipocket-ebook': {
        source: 'apache',
        extensions: ['prc', 'mobi'],
      },
      'application/x-mpegurl': {
        compressible: false,
      },
      'application/x-ms-application': {
        source: 'apache',
        extensions: ['application'],
      },
      'application/x-ms-shortcut': {
        source: 'apache',
        extensions: ['lnk'],
      },
      'application/x-ms-wmd': {
        source: 'apache',
        extensions: ['wmd'],
      },
      'application/x-ms-wmz': {
        source: 'apache',
        extensions: ['wmz'],
      },
      'application/x-ms-xbap': {
        source: 'apache',
        extensions: ['xbap'],
      },
      'application/x-msaccess': {
        source: 'apache',
        extensions: ['mdb'],
      },
      'application/x-msbinder': {
        source: 'apache',
        extensions: ['obd'],
      },
      'application/x-mscardfile': {
        source: 'apache',
        extensions: ['crd'],
      },
      'application/x-msclip': {
        source: 'apache',
        extensions: ['clp'],
      },
      'application/x-msdos-program': {
        extensions: ['exe'],
      },
      'application/x-msdownload': {
        source: 'apache',
        extensions: ['exe', 'dll', 'com', 'bat', 'msi'],
      },
      'application/x-msmediaview': {
        source: 'apache',
        extensions: ['mvb', 'm13', 'm14'],
      },
      'application/x-msmetafile': {
        source: 'apache',
        extensions: ['wmf', 'wmz', 'emf', 'emz'],
      },
      'application/x-msmoney': {
        source: 'apache',
        extensions: ['mny'],
      },
      'application/x-mspublisher': {
        source: 'apache',
        extensions: ['pub'],
      },
      'application/x-msschedule': {
        source: 'apache',
        extensions: ['scd'],
      },
      'application/x-msterminal': {
        source: 'apache',
        extensions: ['trm'],
      },
      'application/x-mswrite': {
        source: 'apache',
        extensions: ['wri'],
      },
      'application/x-netcdf': {
        source: 'apache',
        extensions: ['nc', 'cdf'],
      },
      'application/x-ns-proxy-autoconfig': {
        compressible: true,
        extensions: ['pac'],
      },
      'application/x-nzb': {
        source: 'apache',
        extensions: ['nzb'],
      },
      'application/x-perl': {
        source: 'nginx',
        extensions: ['pl', 'pm'],
      },
      'application/x-pilot': {
        source: 'nginx',
        extensions: ['prc', 'pdb'],
      },
      'application/x-pkcs12': {
        source: 'apache',
        compressible: false,
        extensions: ['p12', 'pfx'],
      },
      'application/x-pkcs7-certificates': {
        source: 'apache',
        extensions: ['p7b', 'spc'],
      },
      'application/x-pkcs7-certreqresp': {
        source: 'apache',
        extensions: ['p7r'],
      },
      'application/x-pki-message': {
        source: 'iana',
      },
      'application/x-rar-compressed': {
        source: 'apache',
        compressible: false,
        extensions: ['rar'],
      },
      'application/x-redhat-package-manager': {
        source: 'nginx',
        extensions: ['rpm'],
      },
      'application/x-research-info-systems': {
        source: 'apache',
        extensions: ['ris'],
      },
      'application/x-sea': {
        source: 'nginx',
        extensions: ['sea'],
      },
      'application/x-sh': {
        source: 'apache',
        compressible: true,
        extensions: ['sh'],
      },
      'application/x-shar': {
        source: 'apache',
        extensions: ['shar'],
      },
      'application/x-shockwave-flash': {
        source: 'apache',
        compressible: false,
        extensions: ['swf'],
      },
      'application/x-silverlight-app': {
        source: 'apache',
        extensions: ['xap'],
      },
      'application/x-sql': {
        source: 'apache',
        extensions: ['sql'],
      },
      'application/x-stuffit': {
        source: 'apache',
        compressible: false,
        extensions: ['sit'],
      },
      'application/x-stuffitx': {
        source: 'apache',
        extensions: ['sitx'],
      },
      'application/x-subrip': {
        source: 'apache',
        extensions: ['srt'],
      },
      'application/x-sv4cpio': {
        source: 'apache',
        extensions: ['sv4cpio'],
      },
      'application/x-sv4crc': {
        source: 'apache',
        extensions: ['sv4crc'],
      },
      'application/x-t3vm-image': {
        source: 'apache',
        extensions: ['t3'],
      },
      'application/x-tads': {
        source: 'apache',
        extensions: ['gam'],
      },
      'application/x-tar': {
        source: 'apache',
        compressible: true,
        extensions: ['tar'],
      },
      'application/x-tcl': {
        source: 'apache',
        extensions: ['tcl', 'tk'],
      },
      'application/x-tex': {
        source: 'apache',
        extensions: ['tex'],
      },
      'application/x-tex-tfm': {
        source: 'apache',
        extensions: ['tfm'],
      },
      'application/x-texinfo': {
        source: 'apache',
        extensions: ['texinfo', 'texi'],
      },
      'application/x-tgif': {
        source: 'apache',
        extensions: ['obj'],
      },
      'application/x-ustar': {
        source: 'apache',
        extensions: ['ustar'],
      },
      'application/x-virtualbox-hdd': {
        compressible: true,
        extensions: ['hdd'],
      },
      'application/x-virtualbox-ova': {
        compressible: true,
        extensions: ['ova'],
      },
      'application/x-virtualbox-ovf': {
        compressible: true,
        extensions: ['ovf'],
      },
      'application/x-virtualbox-vbox': {
        compressible: true,
        extensions: ['vbox'],
      },
      'application/x-virtualbox-vbox-extpack': {
        compressible: false,
        extensions: ['vbox-extpack'],
      },
      'application/x-virtualbox-vdi': {
        compressible: true,
        extensions: ['vdi'],
      },
      'application/x-virtualbox-vhd': {
        compressible: true,
        extensions: ['vhd'],
      },
      'application/x-virtualbox-vmdk': {
        compressible: true,
        extensions: ['vmdk'],
      },
      'application/x-wais-source': {
        source: 'apache',
        extensions: ['src'],
      },
      'application/x-web-app-manifest+json': {
        compressible: true,
        extensions: ['webapp'],
      },
      'application/x-www-form-urlencoded': {
        source: 'iana',
        compressible: true,
      },
      'application/x-x509-ca-cert': {
        source: 'iana',
        extensions: ['der', 'crt', 'pem'],
      },
      'application/x-x509-ca-ra-cert': {
        source: 'iana',
      },
      'application/x-x509-next-ca-cert': {
        source: 'iana',
      },
      'application/x-xfig': {
        source: 'apache',
        extensions: ['fig'],
      },
      'application/x-xliff+xml': {
        source: 'apache',
        compressible: true,
        extensions: ['xlf'],
      },
      'application/x-xpinstall': {
        source: 'apache',
        compressible: false,
        extensions: ['xpi'],
      },
      'application/x-xz': {
        source: 'apache',
        extensions: ['xz'],
      },
      'application/x-zmachine': {
        source: 'apache',
        extensions: ['z1', 'z2', 'z3', 'z4', 'z5', 'z6', 'z7', 'z8'],
      },
      'application/x400-bp': {
        source: 'iana',
      },
      'application/xacml+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/xaml+xml': {
        source: 'apache',
        compressible: true,
        extensions: ['xaml'],
      },
      'application/xcap-att+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['xav'],
      },
      'application/xcap-caps+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['xca'],
      },
      'application/xcap-diff+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['xdf'],
      },
      'application/xcap-el+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['xel'],
      },
      'application/xcap-error+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/xcap-ns+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['xns'],
      },
      'application/xcon-conference-info+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/xcon-conference-info-diff+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/xenc+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['xenc'],
      },
      'application/xhtml+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['xhtml', 'xht'],
      },
      'application/xhtml-voice+xml': {
        source: 'apache',
        compressible: true,
      },
      'application/xliff+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['xlf'],
      },
      'application/xml': {
        source: 'iana',
        compressible: true,
        extensions: ['xml', 'xsl', 'xsd', 'rng'],
      },
      'application/xml-dtd': {
        source: 'iana',
        compressible: true,
        extensions: ['dtd'],
      },
      'application/xml-external-parsed-entity': {
        source: 'iana',
      },
      'application/xml-patch+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/xmpp+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/xop+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['xop'],
      },
      'application/xproc+xml': {
        source: 'apache',
        compressible: true,
        extensions: ['xpl'],
      },
      'application/xslt+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['xsl', 'xslt'],
      },
      'application/xspf+xml': {
        source: 'apache',
        compressible: true,
        extensions: ['xspf'],
      },
      'application/xv+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['mxml', 'xhvml', 'xvml', 'xvm'],
      },
      'application/yang': {
        source: 'iana',
        extensions: ['yang'],
      },
      'application/yang-data+json': {
        source: 'iana',
        compressible: true,
      },
      'application/yang-data+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/yang-patch+json': {
        source: 'iana',
        compressible: true,
      },
      'application/yang-patch+xml': {
        source: 'iana',
        compressible: true,
      },
      'application/yin+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['yin'],
      },
      'application/zip': {
        source: 'iana',
        compressible: false,
        extensions: ['zip'],
      },
      'application/zlib': {
        source: 'iana',
      },
      'application/zstd': {
        source: 'iana',
      },
      'audio/1d-interleaved-parityfec': {
        source: 'iana',
      },
      'audio/32kadpcm': {
        source: 'iana',
      },
      'audio/3gpp': {
        source: 'iana',
        compressible: false,
        extensions: ['3gpp'],
      },
      'audio/3gpp2': {
        source: 'iana',
      },
      'audio/aac': {
        source: 'iana',
      },
      'audio/ac3': {
        source: 'iana',
      },
      'audio/adpcm': {
        source: 'apache',
        extensions: ['adp'],
      },
      'audio/amr': {
        source: 'iana',
        extensions: ['amr'],
      },
      'audio/amr-wb': {
        source: 'iana',
      },
      'audio/amr-wb+': {
        source: 'iana',
      },
      'audio/aptx': {
        source: 'iana',
      },
      'audio/asc': {
        source: 'iana',
      },
      'audio/atrac-advanced-lossless': {
        source: 'iana',
      },
      'audio/atrac-x': {
        source: 'iana',
      },
      'audio/atrac3': {
        source: 'iana',
      },
      'audio/basic': {
        source: 'iana',
        compressible: false,
        extensions: ['au', 'snd'],
      },
      'audio/bv16': {
        source: 'iana',
      },
      'audio/bv32': {
        source: 'iana',
      },
      'audio/clearmode': {
        source: 'iana',
      },
      'audio/cn': {
        source: 'iana',
      },
      'audio/dat12': {
        source: 'iana',
      },
      'audio/dls': {
        source: 'iana',
      },
      'audio/dsr-es201108': {
        source: 'iana',
      },
      'audio/dsr-es202050': {
        source: 'iana',
      },
      'audio/dsr-es202211': {
        source: 'iana',
      },
      'audio/dsr-es202212': {
        source: 'iana',
      },
      'audio/dv': {
        source: 'iana',
      },
      'audio/dvi4': {
        source: 'iana',
      },
      'audio/eac3': {
        source: 'iana',
      },
      'audio/encaprtp': {
        source: 'iana',
      },
      'audio/evrc': {
        source: 'iana',
      },
      'audio/evrc-qcp': {
        source: 'iana',
      },
      'audio/evrc0': {
        source: 'iana',
      },
      'audio/evrc1': {
        source: 'iana',
      },
      'audio/evrcb': {
        source: 'iana',
      },
      'audio/evrcb0': {
        source: 'iana',
      },
      'audio/evrcb1': {
        source: 'iana',
      },
      'audio/evrcnw': {
        source: 'iana',
      },
      'audio/evrcnw0': {
        source: 'iana',
      },
      'audio/evrcnw1': {
        source: 'iana',
      },
      'audio/evrcwb': {
        source: 'iana',
      },
      'audio/evrcwb0': {
        source: 'iana',
      },
      'audio/evrcwb1': {
        source: 'iana',
      },
      'audio/evs': {
        source: 'iana',
      },
      'audio/flexfec': {
        source: 'iana',
      },
      'audio/fwdred': {
        source: 'iana',
      },
      'audio/g711-0': {
        source: 'iana',
      },
      'audio/g719': {
        source: 'iana',
      },
      'audio/g722': {
        source: 'iana',
      },
      'audio/g7221': {
        source: 'iana',
      },
      'audio/g723': {
        source: 'iana',
      },
      'audio/g726-16': {
        source: 'iana',
      },
      'audio/g726-24': {
        source: 'iana',
      },
      'audio/g726-32': {
        source: 'iana',
      },
      'audio/g726-40': {
        source: 'iana',
      },
      'audio/g728': {
        source: 'iana',
      },
      'audio/g729': {
        source: 'iana',
      },
      'audio/g7291': {
        source: 'iana',
      },
      'audio/g729d': {
        source: 'iana',
      },
      'audio/g729e': {
        source: 'iana',
      },
      'audio/gsm': {
        source: 'iana',
      },
      'audio/gsm-efr': {
        source: 'iana',
      },
      'audio/gsm-hr-08': {
        source: 'iana',
      },
      'audio/ilbc': {
        source: 'iana',
      },
      'audio/ip-mr_v2.5': {
        source: 'iana',
      },
      'audio/isac': {
        source: 'apache',
      },
      'audio/l16': {
        source: 'iana',
      },
      'audio/l20': {
        source: 'iana',
      },
      'audio/l24': {
        source: 'iana',
        compressible: false,
      },
      'audio/l8': {
        source: 'iana',
      },
      'audio/lpc': {
        source: 'iana',
      },
      'audio/melp': {
        source: 'iana',
      },
      'audio/melp1200': {
        source: 'iana',
      },
      'audio/melp2400': {
        source: 'iana',
      },
      'audio/melp600': {
        source: 'iana',
      },
      'audio/mhas': {
        source: 'iana',
      },
      'audio/midi': {
        source: 'apache',
        extensions: ['mid', 'midi', 'kar', 'rmi'],
      },
      'audio/mobile-xmf': {
        source: 'iana',
        extensions: ['mxmf'],
      },
      'audio/mp3': {
        compressible: false,
        extensions: ['mp3'],
      },
      'audio/mp4': {
        source: 'iana',
        compressible: false,
        extensions: ['m4a', 'mp4a'],
      },
      'audio/mp4a-latm': {
        source: 'iana',
      },
      'audio/mpa': {
        source: 'iana',
      },
      'audio/mpa-robust': {
        source: 'iana',
      },
      'audio/mpeg': {
        source: 'iana',
        compressible: false,
        extensions: ['mpga', 'mp2', 'mp2a', 'mp3', 'm2a', 'm3a'],
      },
      'audio/mpeg4-generic': {
        source: 'iana',
      },
      'audio/musepack': {
        source: 'apache',
      },
      'audio/ogg': {
        source: 'iana',
        compressible: false,
        extensions: ['oga', 'ogg', 'spx', 'opus'],
      },
      'audio/opus': {
        source: 'iana',
      },
      'audio/parityfec': {
        source: 'iana',
      },
      'audio/pcma': {
        source: 'iana',
      },
      'audio/pcma-wb': {
        source: 'iana',
      },
      'audio/pcmu': {
        source: 'iana',
      },
      'audio/pcmu-wb': {
        source: 'iana',
      },
      'audio/prs.sid': {
        source: 'iana',
      },
      'audio/qcelp': {
        source: 'iana',
      },
      'audio/raptorfec': {
        source: 'iana',
      },
      'audio/red': {
        source: 'iana',
      },
      'audio/rtp-enc-aescm128': {
        source: 'iana',
      },
      'audio/rtp-midi': {
        source: 'iana',
      },
      'audio/rtploopback': {
        source: 'iana',
      },
      'audio/rtx': {
        source: 'iana',
      },
      'audio/s3m': {
        source: 'apache',
        extensions: ['s3m'],
      },
      'audio/scip': {
        source: 'iana',
      },
      'audio/silk': {
        source: 'apache',
        extensions: ['sil'],
      },
      'audio/smv': {
        source: 'iana',
      },
      'audio/smv-qcp': {
        source: 'iana',
      },
      'audio/smv0': {
        source: 'iana',
      },
      'audio/sofa': {
        source: 'iana',
      },
      'audio/sp-midi': {
        source: 'iana',
      },
      'audio/speex': {
        source: 'iana',
      },
      'audio/t140c': {
        source: 'iana',
      },
      'audio/t38': {
        source: 'iana',
      },
      'audio/telephone-event': {
        source: 'iana',
      },
      'audio/tetra_acelp': {
        source: 'iana',
      },
      'audio/tetra_acelp_bb': {
        source: 'iana',
      },
      'audio/tone': {
        source: 'iana',
      },
      'audio/tsvcis': {
        source: 'iana',
      },
      'audio/uemclip': {
        source: 'iana',
      },
      'audio/ulpfec': {
        source: 'iana',
      },
      'audio/usac': {
        source: 'iana',
      },
      'audio/vdvi': {
        source: 'iana',
      },
      'audio/vmr-wb': {
        source: 'iana',
      },
      'audio/vnd.3gpp.iufp': {
        source: 'iana',
      },
      'audio/vnd.4sb': {
        source: 'iana',
      },
      'audio/vnd.audiokoz': {
        source: 'iana',
      },
      'audio/vnd.celp': {
        source: 'iana',
      },
      'audio/vnd.cisco.nse': {
        source: 'iana',
      },
      'audio/vnd.cmles.radio-events': {
        source: 'iana',
      },
      'audio/vnd.cns.anp1': {
        source: 'iana',
      },
      'audio/vnd.cns.inf1': {
        source: 'iana',
      },
      'audio/vnd.dece.audio': {
        source: 'iana',
        extensions: ['uva', 'uvva'],
      },
      'audio/vnd.digital-winds': {
        source: 'iana',
        extensions: ['eol'],
      },
      'audio/vnd.dlna.adts': {
        source: 'iana',
      },
      'audio/vnd.dolby.heaac.1': {
        source: 'iana',
      },
      'audio/vnd.dolby.heaac.2': {
        source: 'iana',
      },
      'audio/vnd.dolby.mlp': {
        source: 'iana',
      },
      'audio/vnd.dolby.mps': {
        source: 'iana',
      },
      'audio/vnd.dolby.pl2': {
        source: 'iana',
      },
      'audio/vnd.dolby.pl2x': {
        source: 'iana',
      },
      'audio/vnd.dolby.pl2z': {
        source: 'iana',
      },
      'audio/vnd.dolby.pulse.1': {
        source: 'iana',
      },
      'audio/vnd.dra': {
        source: 'iana',
        extensions: ['dra'],
      },
      'audio/vnd.dts': {
        source: 'iana',
        extensions: ['dts'],
      },
      'audio/vnd.dts.hd': {
        source: 'iana',
        extensions: ['dtshd'],
      },
      'audio/vnd.dts.uhd': {
        source: 'iana',
      },
      'audio/vnd.dvb.file': {
        source: 'iana',
      },
      'audio/vnd.everad.plj': {
        source: 'iana',
      },
      'audio/vnd.hns.audio': {
        source: 'iana',
      },
      'audio/vnd.lucent.voice': {
        source: 'iana',
        extensions: ['lvp'],
      },
      'audio/vnd.ms-playready.media.pya': {
        source: 'iana',
        extensions: ['pya'],
      },
      'audio/vnd.nokia.mobile-xmf': {
        source: 'iana',
      },
      'audio/vnd.nortel.vbk': {
        source: 'iana',
      },
      'audio/vnd.nuera.ecelp4800': {
        source: 'iana',
        extensions: ['ecelp4800'],
      },
      'audio/vnd.nuera.ecelp7470': {
        source: 'iana',
        extensions: ['ecelp7470'],
      },
      'audio/vnd.nuera.ecelp9600': {
        source: 'iana',
        extensions: ['ecelp9600'],
      },
      'audio/vnd.octel.sbc': {
        source: 'iana',
      },
      'audio/vnd.presonus.multitrack': {
        source: 'iana',
      },
      'audio/vnd.qcelp': {
        source: 'iana',
      },
      'audio/vnd.rhetorex.32kadpcm': {
        source: 'iana',
      },
      'audio/vnd.rip': {
        source: 'iana',
        extensions: ['rip'],
      },
      'audio/vnd.rn-realaudio': {
        compressible: false,
      },
      'audio/vnd.sealedmedia.softseal.mpeg': {
        source: 'iana',
      },
      'audio/vnd.vmx.cvsd': {
        source: 'iana',
      },
      'audio/vnd.wave': {
        compressible: false,
      },
      'audio/vorbis': {
        source: 'iana',
        compressible: false,
      },
      'audio/vorbis-config': {
        source: 'iana',
      },
      'audio/wav': {
        compressible: false,
        extensions: ['wav'],
      },
      'audio/wave': {
        compressible: false,
        extensions: ['wav'],
      },
      'audio/webm': {
        source: 'apache',
        compressible: false,
        extensions: ['weba'],
      },
      'audio/x-aac': {
        source: 'apache',
        compressible: false,
        extensions: ['aac'],
      },
      'audio/x-aiff': {
        source: 'apache',
        extensions: ['aif', 'aiff', 'aifc'],
      },
      'audio/x-caf': {
        source: 'apache',
        compressible: false,
        extensions: ['caf'],
      },
      'audio/x-flac': {
        source: 'apache',
        extensions: ['flac'],
      },
      'audio/x-m4a': {
        source: 'nginx',
        extensions: ['m4a'],
      },
      'audio/x-matroska': {
        source: 'apache',
        extensions: ['mka'],
      },
      'audio/x-mpegurl': {
        source: 'apache',
        extensions: ['m3u'],
      },
      'audio/x-ms-wax': {
        source: 'apache',
        extensions: ['wax'],
      },
      'audio/x-ms-wma': {
        source: 'apache',
        extensions: ['wma'],
      },
      'audio/x-pn-realaudio': {
        source: 'apache',
        extensions: ['ram', 'ra'],
      },
      'audio/x-pn-realaudio-plugin': {
        source: 'apache',
        extensions: ['rmp'],
      },
      'audio/x-realaudio': {
        source: 'nginx',
        extensions: ['ra'],
      },
      'audio/x-tta': {
        source: 'apache',
      },
      'audio/x-wav': {
        source: 'apache',
        extensions: ['wav'],
      },
      'audio/xm': {
        source: 'apache',
        extensions: ['xm'],
      },
      'chemical/x-cdx': {
        source: 'apache',
        extensions: ['cdx'],
      },
      'chemical/x-cif': {
        source: 'apache',
        extensions: ['cif'],
      },
      'chemical/x-cmdf': {
        source: 'apache',
        extensions: ['cmdf'],
      },
      'chemical/x-cml': {
        source: 'apache',
        extensions: ['cml'],
      },
      'chemical/x-csml': {
        source: 'apache',
        extensions: ['csml'],
      },
      'chemical/x-pdb': {
        source: 'apache',
      },
      'chemical/x-xyz': {
        source: 'apache',
        extensions: ['xyz'],
      },
      'font/collection': {
        source: 'iana',
        extensions: ['ttc'],
      },
      'font/otf': {
        source: 'iana',
        compressible: true,
        extensions: ['otf'],
      },
      'font/sfnt': {
        source: 'iana',
      },
      'font/ttf': {
        source: 'iana',
        compressible: true,
        extensions: ['ttf'],
      },
      'font/woff': {
        source: 'iana',
        extensions: ['woff'],
      },
      'font/woff2': {
        source: 'iana',
        extensions: ['woff2'],
      },
      'image/aces': {
        source: 'iana',
        extensions: ['exr'],
      },
      'image/apng': {
        compressible: false,
        extensions: ['apng'],
      },
      'image/avci': {
        source: 'iana',
        extensions: ['avci'],
      },
      'image/avcs': {
        source: 'iana',
        extensions: ['avcs'],
      },
      'image/avif': {
        source: 'iana',
        compressible: false,
        extensions: ['avif'],
      },
      'image/bmp': {
        source: 'iana',
        compressible: true,
        extensions: ['bmp'],
      },
      'image/cgm': {
        source: 'iana',
        extensions: ['cgm'],
      },
      'image/dicom-rle': {
        source: 'iana',
        extensions: ['drle'],
      },
      'image/emf': {
        source: 'iana',
        extensions: ['emf'],
      },
      'image/fits': {
        source: 'iana',
        extensions: ['fits'],
      },
      'image/g3fax': {
        source: 'iana',
        extensions: ['g3'],
      },
      'image/gif': {
        source: 'iana',
        compressible: false,
        extensions: ['gif'],
      },
      'image/heic': {
        source: 'iana',
        extensions: ['heic'],
      },
      'image/heic-sequence': {
        source: 'iana',
        extensions: ['heics'],
      },
      'image/heif': {
        source: 'iana',
        extensions: ['heif'],
      },
      'image/heif-sequence': {
        source: 'iana',
        extensions: ['heifs'],
      },
      'image/hej2k': {
        source: 'iana',
        extensions: ['hej2'],
      },
      'image/hsj2': {
        source: 'iana',
        extensions: ['hsj2'],
      },
      'image/ief': {
        source: 'iana',
        extensions: ['ief'],
      },
      'image/jls': {
        source: 'iana',
        extensions: ['jls'],
      },
      'image/jp2': {
        source: 'iana',
        compressible: false,
        extensions: ['jp2', 'jpg2'],
      },
      'image/jpeg': {
        source: 'iana',
        compressible: false,
        extensions: ['jpeg', 'jpg', 'jpe'],
      },
      'image/jph': {
        source: 'iana',
        extensions: ['jph'],
      },
      'image/jphc': {
        source: 'iana',
        extensions: ['jhc'],
      },
      'image/jpm': {
        source: 'iana',
        compressible: false,
        extensions: ['jpm'],
      },
      'image/jpx': {
        source: 'iana',
        compressible: false,
        extensions: ['jpx', 'jpf'],
      },
      'image/jxr': {
        source: 'iana',
        extensions: ['jxr'],
      },
      'image/jxra': {
        source: 'iana',
        extensions: ['jxra'],
      },
      'image/jxrs': {
        source: 'iana',
        extensions: ['jxrs'],
      },
      'image/jxs': {
        source: 'iana',
        extensions: ['jxs'],
      },
      'image/jxsc': {
        source: 'iana',
        extensions: ['jxsc'],
      },
      'image/jxsi': {
        source: 'iana',
        extensions: ['jxsi'],
      },
      'image/jxss': {
        source: 'iana',
        extensions: ['jxss'],
      },
      'image/ktx': {
        source: 'iana',
        extensions: ['ktx'],
      },
      'image/ktx2': {
        source: 'iana',
        extensions: ['ktx2'],
      },
      'image/naplps': {
        source: 'iana',
      },
      'image/pjpeg': {
        compressible: false,
      },
      'image/png': {
        source: 'iana',
        compressible: false,
        extensions: ['png'],
      },
      'image/prs.btif': {
        source: 'iana',
        extensions: ['btif'],
      },
      'image/prs.pti': {
        source: 'iana',
        extensions: ['pti'],
      },
      'image/pwg-raster': {
        source: 'iana',
      },
      'image/sgi': {
        source: 'apache',
        extensions: ['sgi'],
      },
      'image/svg+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['svg', 'svgz'],
      },
      'image/t38': {
        source: 'iana',
        extensions: ['t38'],
      },
      'image/tiff': {
        source: 'iana',
        compressible: false,
        extensions: ['tif', 'tiff'],
      },
      'image/tiff-fx': {
        source: 'iana',
        extensions: ['tfx'],
      },
      'image/vnd.adobe.photoshop': {
        source: 'iana',
        compressible: true,
        extensions: ['psd'],
      },
      'image/vnd.airzip.accelerator.azv': {
        source: 'iana',
        extensions: ['azv'],
      },
      'image/vnd.cns.inf2': {
        source: 'iana',
      },
      'image/vnd.dece.graphic': {
        source: 'iana',
        extensions: ['uvi', 'uvvi', 'uvg', 'uvvg'],
      },
      'image/vnd.djvu': {
        source: 'iana',
        extensions: ['djvu', 'djv'],
      },
      'image/vnd.dvb.subtitle': {
        source: 'iana',
        extensions: ['sub'],
      },
      'image/vnd.dwg': {
        source: 'iana',
        extensions: ['dwg'],
      },
      'image/vnd.dxf': {
        source: 'iana',
        extensions: ['dxf'],
      },
      'image/vnd.fastbidsheet': {
        source: 'iana',
        extensions: ['fbs'],
      },
      'image/vnd.fpx': {
        source: 'iana',
        extensions: ['fpx'],
      },
      'image/vnd.fst': {
        source: 'iana',
        extensions: ['fst'],
      },
      'image/vnd.fujixerox.edmics-mmr': {
        source: 'iana',
        extensions: ['mmr'],
      },
      'image/vnd.fujixerox.edmics-rlc': {
        source: 'iana',
        extensions: ['rlc'],
      },
      'image/vnd.globalgraphics.pgb': {
        source: 'iana',
      },
      'image/vnd.microsoft.icon': {
        source: 'iana',
        compressible: true,
        extensions: ['ico'],
      },
      'image/vnd.mix': {
        source: 'iana',
      },
      'image/vnd.mozilla.apng': {
        source: 'iana',
      },
      'image/vnd.ms-dds': {
        compressible: true,
        extensions: ['dds'],
      },
      'image/vnd.ms-modi': {
        source: 'iana',
        extensions: ['mdi'],
      },
      'image/vnd.ms-photo': {
        source: 'apache',
        extensions: ['wdp'],
      },
      'image/vnd.net-fpx': {
        source: 'iana',
        extensions: ['npx'],
      },
      'image/vnd.pco.b16': {
        source: 'iana',
        extensions: ['b16'],
      },
      'image/vnd.radiance': {
        source: 'iana',
      },
      'image/vnd.sealed.png': {
        source: 'iana',
      },
      'image/vnd.sealedmedia.softseal.gif': {
        source: 'iana',
      },
      'image/vnd.sealedmedia.softseal.jpg': {
        source: 'iana',
      },
      'image/vnd.svf': {
        source: 'iana',
      },
      'image/vnd.tencent.tap': {
        source: 'iana',
        extensions: ['tap'],
      },
      'image/vnd.valve.source.texture': {
        source: 'iana',
        extensions: ['vtf'],
      },
      'image/vnd.wap.wbmp': {
        source: 'iana',
        extensions: ['wbmp'],
      },
      'image/vnd.xiff': {
        source: 'iana',
        extensions: ['xif'],
      },
      'image/vnd.zbrush.pcx': {
        source: 'iana',
        extensions: ['pcx'],
      },
      'image/webp': {
        source: 'apache',
        extensions: ['webp'],
      },
      'image/wmf': {
        source: 'iana',
        extensions: ['wmf'],
      },
      'image/x-3ds': {
        source: 'apache',
        extensions: ['3ds'],
      },
      'image/x-cmu-raster': {
        source: 'apache',
        extensions: ['ras'],
      },
      'image/x-cmx': {
        source: 'apache',
        extensions: ['cmx'],
      },
      'image/x-freehand': {
        source: 'apache',
        extensions: ['fh', 'fhc', 'fh4', 'fh5', 'fh7'],
      },
      'image/x-icon': {
        source: 'apache',
        compressible: true,
        extensions: ['ico'],
      },
      'image/x-jng': {
        source: 'nginx',
        extensions: ['jng'],
      },
      'image/x-mrsid-image': {
        source: 'apache',
        extensions: ['sid'],
      },
      'image/x-ms-bmp': {
        source: 'nginx',
        compressible: true,
        extensions: ['bmp'],
      },
      'image/x-pcx': {
        source: 'apache',
        extensions: ['pcx'],
      },
      'image/x-pict': {
        source: 'apache',
        extensions: ['pic', 'pct'],
      },
      'image/x-portable-anymap': {
        source: 'apache',
        extensions: ['pnm'],
      },
      'image/x-portable-bitmap': {
        source: 'apache',
        extensions: ['pbm'],
      },
      'image/x-portable-graymap': {
        source: 'apache',
        extensions: ['pgm'],
      },
      'image/x-portable-pixmap': {
        source: 'apache',
        extensions: ['ppm'],
      },
      'image/x-rgb': {
        source: 'apache',
        extensions: ['rgb'],
      },
      'image/x-tga': {
        source: 'apache',
        extensions: ['tga'],
      },
      'image/x-xbitmap': {
        source: 'apache',
        extensions: ['xbm'],
      },
      'image/x-xcf': {
        compressible: false,
      },
      'image/x-xpixmap': {
        source: 'apache',
        extensions: ['xpm'],
      },
      'image/x-xwindowdump': {
        source: 'apache',
        extensions: ['xwd'],
      },
      'message/cpim': {
        source: 'iana',
      },
      'message/delivery-status': {
        source: 'iana',
      },
      'message/disposition-notification': {
        source: 'iana',
        extensions: ['disposition-notification'],
      },
      'message/external-body': {
        source: 'iana',
      },
      'message/feedback-report': {
        source: 'iana',
      },
      'message/global': {
        source: 'iana',
        extensions: ['u8msg'],
      },
      'message/global-delivery-status': {
        source: 'iana',
        extensions: ['u8dsn'],
      },
      'message/global-disposition-notification': {
        source: 'iana',
        extensions: ['u8mdn'],
      },
      'message/global-headers': {
        source: 'iana',
        extensions: ['u8hdr'],
      },
      'message/http': {
        source: 'iana',
        compressible: false,
      },
      'message/imdn+xml': {
        source: 'iana',
        compressible: true,
      },
      'message/news': {
        source: 'iana',
      },
      'message/partial': {
        source: 'iana',
        compressible: false,
      },
      'message/rfc822': {
        source: 'iana',
        compressible: true,
        extensions: ['eml', 'mime'],
      },
      'message/s-http': {
        source: 'iana',
      },
      'message/sip': {
        source: 'iana',
      },
      'message/sipfrag': {
        source: 'iana',
      },
      'message/tracking-status': {
        source: 'iana',
      },
      'message/vnd.si.simp': {
        source: 'iana',
      },
      'message/vnd.wfa.wsc': {
        source: 'iana',
        extensions: ['wsc'],
      },
      'model/3mf': {
        source: 'iana',
        extensions: ['3mf'],
      },
      'model/e57': {
        source: 'iana',
      },
      'model/gltf+json': {
        source: 'iana',
        compressible: true,
        extensions: ['gltf'],
      },
      'model/gltf-binary': {
        source: 'iana',
        compressible: true,
        extensions: ['glb'],
      },
      'model/iges': {
        source: 'iana',
        compressible: false,
        extensions: ['igs', 'iges'],
      },
      'model/mesh': {
        source: 'iana',
        compressible: false,
        extensions: ['msh', 'mesh', 'silo'],
      },
      'model/mtl': {
        source: 'iana',
        extensions: ['mtl'],
      },
      'model/obj': {
        source: 'iana',
        extensions: ['obj'],
      },
      'model/step': {
        source: 'iana',
      },
      'model/step+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['stpx'],
      },
      'model/step+zip': {
        source: 'iana',
        compressible: false,
        extensions: ['stpz'],
      },
      'model/step-xml+zip': {
        source: 'iana',
        compressible: false,
        extensions: ['stpxz'],
      },
      'model/stl': {
        source: 'iana',
        extensions: ['stl'],
      },
      'model/vnd.collada+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['dae'],
      },
      'model/vnd.dwf': {
        source: 'iana',
        extensions: ['dwf'],
      },
      'model/vnd.flatland.3dml': {
        source: 'iana',
      },
      'model/vnd.gdl': {
        source: 'iana',
        extensions: ['gdl'],
      },
      'model/vnd.gs-gdl': {
        source: 'apache',
      },
      'model/vnd.gs.gdl': {
        source: 'iana',
      },
      'model/vnd.gtw': {
        source: 'iana',
        extensions: ['gtw'],
      },
      'model/vnd.moml+xml': {
        source: 'iana',
        compressible: true,
      },
      'model/vnd.mts': {
        source: 'iana',
        extensions: ['mts'],
      },
      'model/vnd.opengex': {
        source: 'iana',
        extensions: ['ogex'],
      },
      'model/vnd.parasolid.transmit.binary': {
        source: 'iana',
        extensions: ['x_b'],
      },
      'model/vnd.parasolid.transmit.text': {
        source: 'iana',
        extensions: ['x_t'],
      },
      'model/vnd.pytha.pyox': {
        source: 'iana',
      },
      'model/vnd.rosette.annotated-data-model': {
        source: 'iana',
      },
      'model/vnd.sap.vds': {
        source: 'iana',
        extensions: ['vds'],
      },
      'model/vnd.usdz+zip': {
        source: 'iana',
        compressible: false,
        extensions: ['usdz'],
      },
      'model/vnd.valve.source.compiled-map': {
        source: 'iana',
        extensions: ['bsp'],
      },
      'model/vnd.vtu': {
        source: 'iana',
        extensions: ['vtu'],
      },
      'model/vrml': {
        source: 'iana',
        compressible: false,
        extensions: ['wrl', 'vrml'],
      },
      'model/x3d+binary': {
        source: 'apache',
        compressible: false,
        extensions: ['x3db', 'x3dbz'],
      },
      'model/x3d+fastinfoset': {
        source: 'iana',
        extensions: ['x3db'],
      },
      'model/x3d+vrml': {
        source: 'apache',
        compressible: false,
        extensions: ['x3dv', 'x3dvz'],
      },
      'model/x3d+xml': {
        source: 'iana',
        compressible: true,
        extensions: ['x3d', 'x3dz'],
      },
      'model/x3d-vrml': {
        source: 'iana',
        extensions: ['x3dv'],
      },
      'multipart/alternative': {
        source: 'iana',
        compressible: false,
      },
      'multipart/appledouble': {
        source: 'iana',
      },
      'multipart/byteranges': {
        source: 'iana',
      },
      'multipart/digest': {
        source: 'iana',
      },
      'multipart/encrypted': {
        source: 'iana',
        compressible: false,
      },
      'multipart/form-data': {
        source: 'iana',
        compressible: false,
      },
      'multipart/header-set': {
        source: 'iana',
      },
      'multipart/mixed': {
        source: 'iana',
      },
      'multipart/multilingual': {
        source: 'iana',
      },
      'multipart/parallel': {
        source: 'iana',
      },
      'multipart/related': {
        source: 'iana',
        compressible: false,
      },
      'multipart/report': {
        source: 'iana',
      },
      'multipart/signed': {
        source: 'iana',
        compressible: false,
      },
      'multipart/vnd.bint.med-plus': {
        source: 'iana',
      },
      'multipart/voice-message': {
        source: 'iana',
      },
      'multipart/x-mixed-replace': {
        source: 'iana',
      },
      'text/1d-interleaved-parityfec': {
        source: 'iana',
      },
      'text/cache-manifest': {
        source: 'iana',
        compressible: true,
        extensions: ['appcache', 'manifest'],
      },
      'text/calendar': {
        source: 'iana',
        extensions: ['ics', 'ifb'],
      },
      'text/calender': {
        compressible: true,
      },
      'text/cmd': {
        compressible: true,
      },
      'text/coffeescript': {
        extensions: ['coffee', 'litcoffee'],
      },
      'text/cql': {
        source: 'iana',
      },
      'text/cql-expression': {
        source: 'iana',
      },
      'text/cql-identifier': {
        source: 'iana',
      },
      'text/css': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
        extensions: ['css'],
      },
      'text/csv': {
        source: 'iana',
        compressible: true,
        extensions: ['csv'],
      },
      'text/csv-schema': {
        source: 'iana',
      },
      'text/directory': {
        source: 'iana',
      },
      'text/dns': {
        source: 'iana',
      },
      'text/ecmascript': {
        source: 'iana',
      },
      'text/encaprtp': {
        source: 'iana',
      },
      'text/enriched': {
        source: 'iana',
      },
      'text/fhirpath': {
        source: 'iana',
      },
      'text/flexfec': {
        source: 'iana',
      },
      'text/fwdred': {
        source: 'iana',
      },
      'text/gff3': {
        source: 'iana',
      },
      'text/grammar-ref-list': {
        source: 'iana',
      },
      'text/html': {
        source: 'iana',
        compressible: true,
        extensions: ['html', 'htm', 'shtml'],
      },
      'text/jade': {
        extensions: ['jade'],
      },
      'text/javascript': {
        source: 'iana',
        compressible: true,
      },
      'text/jcr-cnd': {
        source: 'iana',
      },
      'text/jsx': {
        compressible: true,
        extensions: ['jsx'],
      },
      'text/less': {
        compressible: true,
        extensions: ['less'],
      },
      'text/markdown': {
        source: 'iana',
        compressible: true,
        extensions: ['markdown', 'md'],
      },
      'text/mathml': {
        source: 'nginx',
        extensions: ['mml'],
      },
      'text/mdx': {
        compressible: true,
        extensions: ['mdx'],
      },
      'text/mizar': {
        source: 'iana',
      },
      'text/n3': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
        extensions: ['n3'],
      },
      'text/parameters': {
        source: 'iana',
        charset: 'UTF-8',
      },
      'text/parityfec': {
        source: 'iana',
      },
      'text/plain': {
        source: 'iana',
        compressible: true,
        extensions: ['txt', 'text', 'conf', 'def', 'list', 'log', 'in', 'ini'],
      },
      'text/provenance-notation': {
        source: 'iana',
        charset: 'UTF-8',
      },
      'text/prs.fallenstein.rst': {
        source: 'iana',
      },
      'text/prs.lines.tag': {
        source: 'iana',
        extensions: ['dsc'],
      },
      'text/prs.prop.logic': {
        source: 'iana',
      },
      'text/raptorfec': {
        source: 'iana',
      },
      'text/red': {
        source: 'iana',
      },
      'text/rfc822-headers': {
        source: 'iana',
      },
      'text/richtext': {
        source: 'iana',
        compressible: true,
        extensions: ['rtx'],
      },
      'text/rtf': {
        source: 'iana',
        compressible: true,
        extensions: ['rtf'],
      },
      'text/rtp-enc-aescm128': {
        source: 'iana',
      },
      'text/rtploopback': {
        source: 'iana',
      },
      'text/rtx': {
        source: 'iana',
      },
      'text/sgml': {
        source: 'iana',
        extensions: ['sgml', 'sgm'],
      },
      'text/shaclc': {
        source: 'iana',
      },
      'text/shex': {
        source: 'iana',
        extensions: ['shex'],
      },
      'text/slim': {
        extensions: ['slim', 'slm'],
      },
      'text/spdx': {
        source: 'iana',
        extensions: ['spdx'],
      },
      'text/strings': {
        source: 'iana',
      },
      'text/stylus': {
        extensions: ['stylus', 'styl'],
      },
      'text/t140': {
        source: 'iana',
      },
      'text/tab-separated-values': {
        source: 'iana',
        compressible: true,
        extensions: ['tsv'],
      },
      'text/troff': {
        source: 'iana',
        extensions: ['t', 'tr', 'roff', 'man', 'me', 'ms'],
      },
      'text/turtle': {
        source: 'iana',
        charset: 'UTF-8',
        extensions: ['ttl'],
      },
      'text/ulpfec': {
        source: 'iana',
      },
      'text/uri-list': {
        source: 'iana',
        compressible: true,
        extensions: ['uri', 'uris', 'urls'],
      },
      'text/vcard': {
        source: 'iana',
        compressible: true,
        extensions: ['vcard'],
      },
      'text/vnd.a': {
        source: 'iana',
      },
      'text/vnd.abc': {
        source: 'iana',
      },
      'text/vnd.ascii-art': {
        source: 'iana',
      },
      'text/vnd.curl': {
        source: 'iana',
        extensions: ['curl'],
      },
      'text/vnd.curl.dcurl': {
        source: 'apache',
        extensions: ['dcurl'],
      },
      'text/vnd.curl.mcurl': {
        source: 'apache',
        extensions: ['mcurl'],
      },
      'text/vnd.curl.scurl': {
        source: 'apache',
        extensions: ['scurl'],
      },
      'text/vnd.debian.copyright': {
        source: 'iana',
        charset: 'UTF-8',
      },
      'text/vnd.dmclientscript': {
        source: 'iana',
      },
      'text/vnd.dvb.subtitle': {
        source: 'iana',
        extensions: ['sub'],
      },
      'text/vnd.esmertec.theme-descriptor': {
        source: 'iana',
        charset: 'UTF-8',
      },
      'text/vnd.familysearch.gedcom': {
        source: 'iana',
        extensions: ['ged'],
      },
      'text/vnd.ficlab.flt': {
        source: 'iana',
      },
      'text/vnd.fly': {
        source: 'iana',
        extensions: ['fly'],
      },
      'text/vnd.fmi.flexstor': {
        source: 'iana',
        extensions: ['flx'],
      },
      'text/vnd.gml': {
        source: 'iana',
      },
      'text/vnd.graphviz': {
        source: 'iana',
        extensions: ['gv'],
      },
      'text/vnd.hans': {
        source: 'iana',
      },
      'text/vnd.hgl': {
        source: 'iana',
      },
      'text/vnd.in3d.3dml': {
        source: 'iana',
        extensions: ['3dml'],
      },
      'text/vnd.in3d.spot': {
        source: 'iana',
        extensions: ['spot'],
      },
      'text/vnd.iptc.newsml': {
        source: 'iana',
      },
      'text/vnd.iptc.nitf': {
        source: 'iana',
      },
      'text/vnd.latex-z': {
        source: 'iana',
      },
      'text/vnd.motorola.reflex': {
        source: 'iana',
      },
      'text/vnd.ms-mediapackage': {
        source: 'iana',
      },
      'text/vnd.net2phone.commcenter.command': {
        source: 'iana',
      },
      'text/vnd.radisys.msml-basic-layout': {
        source: 'iana',
      },
      'text/vnd.senx.warpscript': {
        source: 'iana',
      },
      'text/vnd.si.uricatalogue': {
        source: 'iana',
      },
      'text/vnd.sosi': {
        source: 'iana',
      },
      'text/vnd.sun.j2me.app-descriptor': {
        source: 'iana',
        charset: 'UTF-8',
        extensions: ['jad'],
      },
      'text/vnd.trolltech.linguist': {
        source: 'iana',
        charset: 'UTF-8',
      },
      'text/vnd.wap.si': {
        source: 'iana',
      },
      'text/vnd.wap.sl': {
        source: 'iana',
      },
      'text/vnd.wap.wml': {
        source: 'iana',
        extensions: ['wml'],
      },
      'text/vnd.wap.wmlscript': {
        source: 'iana',
        extensions: ['wmls'],
      },
      'text/vtt': {
        source: 'iana',
        charset: 'UTF-8',
        compressible: true,
        extensions: ['vtt'],
      },
      'text/x-asm': {
        source: 'apache',
        extensions: ['s', 'asm'],
      },
      'text/x-c': {
        source: 'apache',
        extensions: ['c', 'cc', 'cxx', 'cpp', 'h', 'hh', 'dic'],
      },
      'text/x-component': {
        source: 'nginx',
        extensions: ['htc'],
      },
      'text/x-fortran': {
        source: 'apache',
        extensions: ['f', 'for', 'f77', 'f90'],
      },
      'text/x-gwt-rpc': {
        compressible: true,
      },
      'text/x-handlebars-template': {
        extensions: ['hbs'],
      },
      'text/x-java-source': {
        source: 'apache',
        extensions: ['java'],
      },
      'text/x-jquery-tmpl': {
        compressible: true,
      },
      'text/x-lua': {
        extensions: ['lua'],
      },
      'text/x-markdown': {
        compressible: true,
        extensions: ['mkd'],
      },
      'text/x-nfo': {
        source: 'apache',
        extensions: ['nfo'],
      },
      'text/x-opml': {
        source: 'apache',
        extensions: ['opml'],
      },
      'text/x-org': {
        compressible: true,
        extensions: ['org'],
      },
      'text/x-pascal': {
        source: 'apache',
        extensions: ['p', 'pas'],
      },
      'text/x-processing': {
        compressible: true,
        extensions: ['pde'],
      },
      'text/x-sass': {
        extensions: ['sass'],
      },
      'text/x-scss': {
        extensions: ['scss'],
      },
      'text/x-setext': {
        source: 'apache',
        extensions: ['etx'],
      },
      'text/x-sfv': {
        source: 'apache',
        extensions: ['sfv'],
      },
      'text/x-suse-ymp': {
        compressible: true,
        extensions: ['ymp'],
      },
      'text/x-uuencode': {
        source: 'apache',
        extensions: ['uu'],
      },
      'text/x-vcalendar': {
        source: 'apache',
        extensions: ['vcs'],
      },
      'text/x-vcard': {
        source: 'apache',
        extensions: ['vcf'],
      },
      'text/xml': {
        source: 'iana',
        compressible: true,
        extensions: ['xml'],
      },
      'text/xml-external-parsed-entity': {
        source: 'iana',
      },
      'text/yaml': {
        compressible: true,
        extensions: ['yaml', 'yml'],
      },
      'video/1d-interleaved-parityfec': {
        source: 'iana',
      },
      'video/3gpp': {
        source: 'iana',
        extensions: ['3gp', '3gpp'],
      },
      'video/3gpp-tt': {
        source: 'iana',
      },
      'video/3gpp2': {
        source: 'iana',
        extensions: ['3g2'],
      },
      'video/av1': {
        source: 'iana',
      },
      'video/bmpeg': {
        source: 'iana',
      },
      'video/bt656': {
        source: 'iana',
      },
      'video/celb': {
        source: 'iana',
      },
      'video/dv': {
        source: 'iana',
      },
      'video/encaprtp': {
        source: 'iana',
      },
      'video/ffv1': {
        source: 'iana',
      },
      'video/flexfec': {
        source: 'iana',
      },
      'video/h261': {
        source: 'iana',
        extensions: ['h261'],
      },
      'video/h263': {
        source: 'iana',
        extensions: ['h263'],
      },
      'video/h263-1998': {
        source: 'iana',
      },
      'video/h263-2000': {
        source: 'iana',
      },
      'video/h264': {
        source: 'iana',
        extensions: ['h264'],
      },
      'video/h264-rcdo': {
        source: 'iana',
      },
      'video/h264-svc': {
        source: 'iana',
      },
      'video/h265': {
        source: 'iana',
      },
      'video/iso.segment': {
        source: 'iana',
        extensions: ['m4s'],
      },
      'video/jpeg': {
        source: 'iana',
        extensions: ['jpgv'],
      },
      'video/jpeg2000': {
        source: 'iana',
      },
      'video/jpm': {
        source: 'apache',
        extensions: ['jpm', 'jpgm'],
      },
      'video/jxsv': {
        source: 'iana',
      },
      'video/mj2': {
        source: 'iana',
        extensions: ['mj2', 'mjp2'],
      },
      'video/mp1s': {
        source: 'iana',
      },
      'video/mp2p': {
        source: 'iana',
      },
      'video/mp2t': {
        source: 'iana',
        extensions: ['ts'],
      },
      'video/mp4': {
        source: 'iana',
        compressible: false,
        extensions: ['mp4', 'mp4v', 'mpg4'],
      },
      'video/mp4v-es': {
        source: 'iana',
      },
      'video/mpeg': {
        source: 'iana',
        compressible: false,
        extensions: ['mpeg', 'mpg', 'mpe', 'm1v', 'm2v'],
      },
      'video/mpeg4-generic': {
        source: 'iana',
      },
      'video/mpv': {
        source: 'iana',
      },
      'video/nv': {
        source: 'iana',
      },
      'video/ogg': {
        source: 'iana',
        compressible: false,
        extensions: ['ogv'],
      },
      'video/parityfec': {
        source: 'iana',
      },
      'video/pointer': {
        source: 'iana',
      },
      'video/quicktime': {
        source: 'iana',
        compressible: false,
        extensions: ['qt', 'mov'],
      },
      'video/raptorfec': {
        source: 'iana',
      },
      'video/raw': {
        source: 'iana',
      },
      'video/rtp-enc-aescm128': {
        source: 'iana',
      },
      'video/rtploopback': {
        source: 'iana',
      },
      'video/rtx': {
        source: 'iana',
      },
      'video/scip': {
        source: 'iana',
      },
      'video/smpte291': {
        source: 'iana',
      },
      'video/smpte292m': {
        source: 'iana',
      },
      'video/ulpfec': {
        source: 'iana',
      },
      'video/vc1': {
        source: 'iana',
      },
      'video/vc2': {
        source: 'iana',
      },
      'video/vnd.cctv': {
        source: 'iana',
      },
      'video/vnd.dece.hd': {
        source: 'iana',
        extensions: ['uvh', 'uvvh'],
      },
      'video/vnd.dece.mobile': {
        source: 'iana',
        extensions: ['uvm', 'uvvm'],
      },
      'video/vnd.dece.mp4': {
        source: 'iana',
      },
      'video/vnd.dece.pd': {
        source: 'iana',
        extensions: ['uvp', 'uvvp'],
      },
      'video/vnd.dece.sd': {
        source: 'iana',
        extensions: ['uvs', 'uvvs'],
      },
      'video/vnd.dece.video': {
        source: 'iana',
        extensions: ['uvv', 'uvvv'],
      },
      'video/vnd.directv.mpeg': {
        source: 'iana',
      },
      'video/vnd.directv.mpeg-tts': {
        source: 'iana',
      },
      'video/vnd.dlna.mpeg-tts': {
        source: 'iana',
      },
      'video/vnd.dvb.file': {
        source: 'iana',
        extensions: ['dvb'],
      },
      'video/vnd.fvt': {
        source: 'iana',
        extensions: ['fvt'],
      },
      'video/vnd.hns.video': {
        source: 'iana',
      },
      'video/vnd.iptvforum.1dparityfec-1010': {
        source: 'iana',
      },
      'video/vnd.iptvforum.1dparityfec-2005': {
        source: 'iana',
      },
      'video/vnd.iptvforum.2dparityfec-1010': {
        source: 'iana',
      },
      'video/vnd.iptvforum.2dparityfec-2005': {
        source: 'iana',
      },
      'video/vnd.iptvforum.ttsavc': {
        source: 'iana',
      },
      'video/vnd.iptvforum.ttsmpeg2': {
        source: 'iana',
      },
      'video/vnd.motorola.video': {
        source: 'iana',
      },
      'video/vnd.motorola.videop': {
        source: 'iana',
      },
      'video/vnd.mpegurl': {
        source: 'iana',
        extensions: ['mxu', 'm4u'],
      },
      'video/vnd.ms-playready.media.pyv': {
        source: 'iana',
        extensions: ['pyv'],
      },
      'video/vnd.nokia.interleaved-multimedia': {
        source: 'iana',
      },
      'video/vnd.nokia.mp4vr': {
        source: 'iana',
      },
      'video/vnd.nokia.videovoip': {
        source: 'iana',
      },
      'video/vnd.objectvideo': {
        source: 'iana',
      },
      'video/vnd.radgamettools.bink': {
        source: 'iana',
      },
      'video/vnd.radgamettools.smacker': {
        source: 'iana',
      },
      'video/vnd.sealed.mpeg1': {
        source: 'iana',
      },
      'video/vnd.sealed.mpeg4': {
        source: 'iana',
      },
      'video/vnd.sealed.swf': {
        source: 'iana',
      },
      'video/vnd.sealedmedia.softseal.mov': {
        source: 'iana',
      },
      'video/vnd.uvvu.mp4': {
        source: 'iana',
        extensions: ['uvu', 'uvvu'],
      },
      'video/vnd.vivo': {
        source: 'iana',
        extensions: ['viv'],
      },
      'video/vnd.youtube.yt': {
        source: 'iana',
      },
      'video/vp8': {
        source: 'iana',
      },
      'video/vp9': {
        source: 'iana',
      },
      'video/webm': {
        source: 'apache',
        compressible: false,
        extensions: ['webm'],
      },
      'video/x-f4v': {
        source: 'apache',
        extensions: ['f4v'],
      },
      'video/x-fli': {
        source: 'apache',
        extensions: ['fli'],
      },
      'video/x-flv': {
        source: 'apache',
        compressible: false,
        extensions: ['flv'],
      },
      'video/x-m4v': {
        source: 'apache',
        extensions: ['m4v'],
      },
      'video/x-matroska': {
        source: 'apache',
        compressible: false,
        extensions: ['mkv', 'mk3d', 'mks'],
      },
      'video/x-mng': {
        source: 'apache',
        extensions: ['mng'],
      },
      'video/x-ms-asf': {
        source: 'apache',
        extensions: ['asf', 'asx'],
      },
      'video/x-ms-vob': {
        source: 'apache',
        extensions: ['vob'],
      },
      'video/x-ms-wm': {
        source: 'apache',
        extensions: ['wm'],
      },
      'video/x-ms-wmv': {
        source: 'apache',
        compressible: false,
        extensions: ['wmv'],
      },
      'video/x-ms-wmx': {
        source: 'apache',
        extensions: ['wmx'],
      },
      'video/x-ms-wvx': {
        source: 'apache',
        extensions: ['wvx'],
      },
      'video/x-msvideo': {
        source: 'apache',
        extensions: ['avi'],
      },
      'video/x-sgi-movie': {
        source: 'apache',
        extensions: ['movie'],
      },
      'video/x-smv': {
        source: 'apache',
        extensions: ['smv'],
      },
      'x-conference/x-cooltalk': {
        source: 'apache',
        extensions: ['ice'],
      },
      'x-shader/x-fragment': {
        compressible: true,
      },
      'x-shader/x-vertex': {
        compressible: true,
      },
    };
  },
});

// node_modules/mime-db/index.js
var require_mime_db2 = __commonJS({
  'node_modules/mime-db/index.js'(exports2, module2) {
    'use strict';
    module2.exports = require_db2();
  },
});

// node_modules/mime-types/index.js
var require_mime_types2 = __commonJS({
  'node_modules/mime-types/index.js'(exports2) {
    'use strict';
    var db = require_mime_db2();
    var extname = require('path').extname;
    var EXTRACT_TYPE_REGEXP = /^\s*([^;\s]*)(?:;|\s|$)/;
    var TEXT_TYPE_REGEXP = /^text\//i;
    exports2.charset = charset;
    exports2.charsets = { lookup: charset };
    exports2.contentType = contentType;
    exports2.extension = extension;
    exports2.extensions = /* @__PURE__ */ Object.create(null);
    exports2.lookup = lookup;
    exports2.types = /* @__PURE__ */ Object.create(null);
    populateMaps(exports2.extensions, exports2.types);
    function charset(type) {
      if (!type || typeof type !== 'string') {
        return false;
      }
      var match = EXTRACT_TYPE_REGEXP.exec(type);
      var mime = match && db[match[1].toLowerCase()];
      if (mime && mime.charset) {
        return mime.charset;
      }
      if (match && TEXT_TYPE_REGEXP.test(match[1])) {
        return 'UTF-8';
      }
      return false;
    }
    function contentType(str) {
      if (!str || typeof str !== 'string') {
        return false;
      }
      var mime = str.indexOf('/') === -1 ? exports2.lookup(str) : str;
      if (!mime) {
        return false;
      }
      if (mime.indexOf('charset') === -1) {
        var charset2 = exports2.charset(mime);
        if (charset2) mime += '; charset=' + charset2.toLowerCase();
      }
      return mime;
    }
    function extension(type) {
      if (!type || typeof type !== 'string') {
        return false;
      }
      var match = EXTRACT_TYPE_REGEXP.exec(type);
      var exts = match && exports2.extensions[match[1].toLowerCase()];
      if (!exts || !exts.length) {
        return false;
      }
      return exts[0];
    }
    function lookup(path) {
      if (!path || typeof path !== 'string') {
        return false;
      }
      var extension2 = extname('x.' + path)
        .toLowerCase()
        .substr(1);
      if (!extension2) {
        return false;
      }
      return exports2.types[extension2] || false;
    }
    function populateMaps(extensions, types) {
      var preference = ['nginx', 'apache', void 0, 'iana'];
      Object.keys(db).forEach(function forEachMimeType(type) {
        var mime = db[type];
        var exts = mime.extensions;
        if (!exts || !exts.length) {
          return;
        }
        extensions[type] = exts;
        for (var i = 0; i < exts.length; i++) {
          var extension2 = exts[i];
          if (types[extension2]) {
            var from = preference.indexOf(db[types[extension2]].source);
            var to2 = preference.indexOf(mime.source);
            if (
              types[extension2] !== 'application/octet-stream' &&
              (from > to2 ||
                (from === to2 &&
                  types[extension2].substr(0, 12) === 'application/'))
            ) {
              continue;
            }
          }
          types[extension2] = type;
        }
      });
    }
  },
});

// node_modules/asynckit/lib/defer.js
var require_defer2 = __commonJS({
  'node_modules/asynckit/lib/defer.js'(exports2, module2) {
    'use strict';
    module2.exports = defer;
    function defer(fn) {
      var nextTick2 =
        typeof setImmediate == 'function'
          ? setImmediate
          : typeof process == 'object' && typeof process.nextTick == 'function'
          ? process.nextTick
          : null;
      if (nextTick2) {
        nextTick2(fn);
      } else {
        setTimeout(fn, 0);
      }
    }
  },
});

// node_modules/asynckit/lib/async.js
var require_async2 = __commonJS({
  'node_modules/asynckit/lib/async.js'(exports2, module2) {
    'use strict';
    var defer = require_defer2();
    module2.exports = async;
    function async(callback) {
      var isAsync = false;
      defer(function () {
        isAsync = true;
      });
      return function async_callback(err, result) {
        if (isAsync) {
          callback(err, result);
        } else {
          defer(function nextTick_callback() {
            callback(err, result);
          });
        }
      };
    }
  },
});

// node_modules/asynckit/lib/abort.js
var require_abort2 = __commonJS({
  'node_modules/asynckit/lib/abort.js'(exports2, module2) {
    'use strict';
    module2.exports = abort;
    function abort(state) {
      Object.keys(state.jobs).forEach(clean.bind(state));
      state.jobs = {};
    }
    function clean(key) {
      if (typeof this.jobs[key] == 'function') {
        this.jobs[key]();
      }
    }
  },
});

// node_modules/asynckit/lib/iterate.js
var require_iterate2 = __commonJS({
  'node_modules/asynckit/lib/iterate.js'(exports2, module2) {
    'use strict';
    var async = require_async2();
    var abort = require_abort2();
    module2.exports = iterate;
    function iterate(list, iterator, state, callback) {
      var key = state['keyedList']
        ? state['keyedList'][state.index]
        : state.index;
      state.jobs[key] = runJob(
        iterator,
        key,
        list[key],
        function (error, output) {
          if (!(key in state.jobs)) {
            return;
          }
          delete state.jobs[key];
          if (error) {
            abort(state);
          } else {
            state.results[key] = output;
          }
          callback(error, state.results);
        }
      );
    }
    function runJob(iterator, key, item, callback) {
      var aborter;
      if (iterator.length == 2) {
        aborter = iterator(item, async(callback));
      } else {
        aborter = iterator(item, key, async(callback));
      }
      return aborter;
    }
  },
});

// node_modules/asynckit/lib/state.js
var require_state2 = __commonJS({
  'node_modules/asynckit/lib/state.js'(exports2, module2) {
    'use strict';
    module2.exports = state;
    function state(list, sortMethod) {
      var isNamedList = !Array.isArray(list),
        initState = {
          index: 0,
          keyedList: isNamedList || sortMethod ? Object.keys(list) : null,
          jobs: {},
          results: isNamedList ? {} : [],
          size: isNamedList ? Object.keys(list).length : list.length,
        };
      if (sortMethod) {
        initState.keyedList.sort(
          isNamedList
            ? sortMethod
            : function (a, b) {
                return sortMethod(list[a], list[b]);
              }
        );
      }
      return initState;
    }
  },
});

// node_modules/asynckit/lib/terminator.js
var require_terminator2 = __commonJS({
  'node_modules/asynckit/lib/terminator.js'(exports2, module2) {
    'use strict';
    var abort = require_abort2();
    var async = require_async2();
    module2.exports = terminator;
    function terminator(callback) {
      if (!Object.keys(this.jobs).length) {
        return;
      }
      this.index = this.size;
      abort(this);
      async(callback)(null, this.results);
    }
  },
});

// node_modules/asynckit/parallel.js
var require_parallel2 = __commonJS({
  'node_modules/asynckit/parallel.js'(exports2, module2) {
    'use strict';
    var iterate = require_iterate2();
    var initState = require_state2();
    var terminator = require_terminator2();
    module2.exports = parallel;
    function parallel(list, iterator, callback) {
      var state = initState(list);
      while (state.index < (state['keyedList'] || list).length) {
        iterate(list, iterator, state, function (error, result) {
          if (error) {
            callback(error, result);
            return;
          }
          if (Object.keys(state.jobs).length === 0) {
            callback(null, state.results);
            return;
          }
        });
        state.index++;
      }
      return terminator.bind(state, callback);
    }
  },
});

// node_modules/asynckit/serialOrdered.js
var require_serialOrdered2 = __commonJS({
  'node_modules/asynckit/serialOrdered.js'(exports2, module2) {
    'use strict';
    var iterate = require_iterate2();
    var initState = require_state2();
    var terminator = require_terminator2();
    module2.exports = serialOrdered;
    module2.exports.ascending = ascending;
    module2.exports.descending = descending;
    function serialOrdered(list, iterator, sortMethod, callback) {
      var state = initState(list, sortMethod);
      iterate(list, iterator, state, function iteratorHandler(error, result) {
        if (error) {
          callback(error, result);
          return;
        }
        state.index++;
        if (state.index < (state['keyedList'] || list).length) {
          iterate(list, iterator, state, iteratorHandler);
          return;
        }
        callback(null, state.results);
      });
      return terminator.bind(state, callback);
    }
    function ascending(a, b) {
      return a < b ? -1 : a > b ? 1 : 0;
    }
    function descending(a, b) {
      return -1 * ascending(a, b);
    }
  },
});

// node_modules/asynckit/serial.js
var require_serial2 = __commonJS({
  'node_modules/asynckit/serial.js'(exports2, module2) {
    'use strict';
    var serialOrdered = require_serialOrdered2();
    module2.exports = serial;
    function serial(list, iterator, callback) {
      return serialOrdered(list, iterator, null, callback);
    }
  },
});

// node_modules/asynckit/index.js
var require_asynckit2 = __commonJS({
  'node_modules/asynckit/index.js'(exports2, module2) {
    'use strict';
    module2.exports = {
      parallel: require_parallel2(),
      serial: require_serial2(),
      serialOrdered: require_serialOrdered2(),
    };
  },
});

// node_modules/form-data/lib/populate.js
var require_populate2 = __commonJS({
  'node_modules/form-data/lib/populate.js'(exports2, module2) {
    'use strict';
    module2.exports = function (dst, src) {
      Object.keys(src).forEach(function (prop) {
        dst[prop] = dst[prop] || src[prop];
      });
      return dst;
    };
  },
});

// node_modules/form-data/lib/form_data.js
var require_form_data2 = __commonJS({
  'node_modules/form-data/lib/form_data.js'(exports2, module2) {
    'use strict';
    var CombinedStream = require_combined_stream2();
    var util = require('util');
    var path = require('path');
    var http = require('http');
    var https = require('https');
    var parseUrl = require('url').parse;
    var fs2 = require('fs');
    var mime = require_mime_types2();
    var asynckit = require_asynckit2();
    var populate = require_populate2();
    module2.exports = FormData2;
    util.inherits(FormData2, CombinedStream);
    function FormData2(options) {
      if (!(this instanceof FormData2)) {
        return new FormData2(options);
      }
      this._overheadLength = 0;
      this._valueLength = 0;
      this._valuesToMeasure = [];
      CombinedStream.call(this);
      options = options || {};
      for (var option2 in options) {
        this[option2] = options[option2];
      }
    }
    FormData2.LINE_BREAK = '\r\n';
    FormData2.DEFAULT_CONTENT_TYPE = 'application/octet-stream';
    FormData2.prototype.append = function (field, value, options) {
      options = options || {};
      if (typeof options == 'string') {
        options = { filename: options };
      }
      var append = CombinedStream.prototype.append.bind(this);
      if (typeof value == 'number') {
        value = '' + value;
      }
      if (util.isArray(value)) {
        this._error(new Error('Arrays are not supported.'));
        return;
      }
      var header = this._multiPartHeader(field, value, options);
      var footer = this._multiPartFooter();
      append(header);
      append(value);
      append(footer);
      this._trackLength(header, value, options);
    };
    FormData2.prototype._trackLength = function (header, value, options) {
      var valueLength = 0;
      if (options.knownLength != null) {
        valueLength += +options.knownLength;
      } else if (Buffer.isBuffer(value)) {
        valueLength = value.length;
      } else if (typeof value === 'string') {
        valueLength = Buffer.byteLength(value);
      }
      this._valueLength += valueLength;
      this._overheadLength +=
        Buffer.byteLength(header) + FormData2.LINE_BREAK.length;
      if (
        !value ||
        (!value.path &&
          !(value.readable && value.hasOwnProperty('httpVersion')))
      ) {
        return;
      }
      if (!options.knownLength) {
        this._valuesToMeasure.push(value);
      }
    };
    FormData2.prototype._lengthRetriever = function (value, callback) {
      if (value.hasOwnProperty('fd')) {
        if (
          value.end != void 0 &&
          value.end != Infinity &&
          value.start != void 0
        ) {
          callback(null, value.end + 1 - (value.start ? value.start : 0));
        } else {
          fs2.stat(value.path, function (err, stat) {
            var fileSize;
            if (err) {
              callback(err);
              return;
            }
            fileSize = stat.size - (value.start ? value.start : 0);
            callback(null, fileSize);
          });
        }
      } else if (value.hasOwnProperty('httpVersion')) {
        callback(null, +value.headers['content-length']);
      } else if (value.hasOwnProperty('httpModule')) {
        value.on('response', function (response) {
          value.pause();
          callback(null, +response.headers['content-length']);
        });
        value.resume();
      } else {
        callback('Unknown stream');
      }
    };
    FormData2.prototype._multiPartHeader = function (field, value, options) {
      if (typeof options.header == 'string') {
        return options.header;
      }
      var contentDisposition = this._getContentDisposition(value, options);
      var contentType = this._getContentType(value, options);
      var contents = '';
      var headers = {
        // add custom disposition as third element or keep it two elements if not
        'Content-Disposition': ['form-data', 'name="' + field + '"'].concat(
          contentDisposition || []
        ),
        // if no content type. allow it to be empty array
        'Content-Type': [].concat(contentType || []),
      };
      if (typeof options.header == 'object') {
        populate(headers, options.header);
      }
      var header;
      for (var prop in headers) {
        if (!headers.hasOwnProperty(prop)) continue;
        header = headers[prop];
        if (header == null) {
          continue;
        }
        if (!Array.isArray(header)) {
          header = [header];
        }
        if (header.length) {
          contents += prop + ': ' + header.join('; ') + FormData2.LINE_BREAK;
        }
      }
      return (
        '--' +
        this.getBoundary() +
        FormData2.LINE_BREAK +
        contents +
        FormData2.LINE_BREAK
      );
    };
    FormData2.prototype._getContentDisposition = function (value, options) {
      var filename, contentDisposition;
      if (typeof options.filepath === 'string') {
        filename = path.normalize(options.filepath).replace(/\\/g, '/');
      } else if (options.filename || value.name || value.path) {
        filename = path.basename(options.filename || value.name || value.path);
      } else if (value.readable && value.hasOwnProperty('httpVersion')) {
        filename = path.basename(value.client._httpMessage.path || '');
      }
      if (filename) {
        contentDisposition = 'filename="' + filename + '"';
      }
      return contentDisposition;
    };
    FormData2.prototype._getContentType = function (value, options) {
      var contentType = options.contentType;
      if (!contentType && value.name) {
        contentType = mime.lookup(value.name);
      }
      if (!contentType && value.path) {
        contentType = mime.lookup(value.path);
      }
      if (
        !contentType &&
        value.readable &&
        value.hasOwnProperty('httpVersion')
      ) {
        contentType = value.headers['content-type'];
      }
      if (!contentType && (options.filepath || options.filename)) {
        contentType = mime.lookup(options.filepath || options.filename);
      }
      if (!contentType && typeof value == 'object') {
        contentType = FormData2.DEFAULT_CONTENT_TYPE;
      }
      return contentType;
    };
    FormData2.prototype._multiPartFooter = function () {
      return function (next) {
        var footer = FormData2.LINE_BREAK;
        var lastPart = this._streams.length === 0;
        if (lastPart) {
          footer += this._lastBoundary();
        }
        next(footer);
      }.bind(this);
    };
    FormData2.prototype._lastBoundary = function () {
      return '--' + this.getBoundary() + '--' + FormData2.LINE_BREAK;
    };
    FormData2.prototype.getHeaders = function (userHeaders) {
      var header;
      var formHeaders = {
        'content-type': 'multipart/form-data; boundary=' + this.getBoundary(),
      };
      for (header in userHeaders) {
        if (userHeaders.hasOwnProperty(header)) {
          formHeaders[header.toLowerCase()] = userHeaders[header];
        }
      }
      return formHeaders;
    };
    FormData2.prototype.setBoundary = function (boundary) {
      this._boundary = boundary;
    };
    FormData2.prototype.getBoundary = function () {
      if (!this._boundary) {
        this._generateBoundary();
      }
      return this._boundary;
    };
    FormData2.prototype.getBuffer = function () {
      var dataBuffer = new Buffer.alloc(0);
      var boundary = this.getBoundary();
      for (var i = 0, len = this._streams.length; i < len; i++) {
        if (typeof this._streams[i] !== 'function') {
          if (Buffer.isBuffer(this._streams[i])) {
            dataBuffer = Buffer.concat([dataBuffer, this._streams[i]]);
          } else {
            dataBuffer = Buffer.concat([
              dataBuffer,
              Buffer.from(this._streams[i]),
            ]);
          }
          if (
            typeof this._streams[i] !== 'string' ||
            this._streams[i].substring(2, boundary.length + 2) !== boundary
          ) {
            dataBuffer = Buffer.concat([
              dataBuffer,
              Buffer.from(FormData2.LINE_BREAK),
            ]);
          }
        }
      }
      return Buffer.concat([dataBuffer, Buffer.from(this._lastBoundary())]);
    };
    FormData2.prototype._generateBoundary = function () {
      var boundary = '--------------------------';
      for (var i = 0; i < 24; i++) {
        boundary += Math.floor(Math.random() * 10).toString(16);
      }
      this._boundary = boundary;
    };
    FormData2.prototype.getLengthSync = function () {
      var knownLength = this._overheadLength + this._valueLength;
      if (this._streams.length) {
        knownLength += this._lastBoundary().length;
      }
      if (!this.hasKnownLength()) {
        this._error(
          new Error('Cannot calculate proper length in synchronous way.')
        );
      }
      return knownLength;
    };
    FormData2.prototype.hasKnownLength = function () {
      var hasKnownLength = true;
      if (this._valuesToMeasure.length) {
        hasKnownLength = false;
      }
      return hasKnownLength;
    };
    FormData2.prototype.getLength = function (cb) {
      var knownLength = this._overheadLength + this._valueLength;
      if (this._streams.length) {
        knownLength += this._lastBoundary().length;
      }
      if (!this._valuesToMeasure.length) {
        process.nextTick(cb.bind(this, null, knownLength));
        return;
      }
      asynckit.parallel(
        this._valuesToMeasure,
        this._lengthRetriever,
        function (err, values) {
          if (err) {
            cb(err);
            return;
          }
          values.forEach(function (length) {
            knownLength += length;
          });
          cb(null, knownLength);
        }
      );
    };
    FormData2.prototype.submit = function (params, cb) {
      var request2,
        options,
        defaults = { method: 'post' };
      if (typeof params == 'string') {
        params = parseUrl(params);
        options = populate(
          {
            port: params.port,
            path: params.pathname,
            host: params.hostname,
            protocol: params.protocol,
          },
          defaults
        );
      } else {
        options = populate(params, defaults);
        if (!options.port) {
          options.port = options.protocol == 'https:' ? 443 : 80;
        }
      }
      options.headers = this.getHeaders(params.headers);
      if (options.protocol == 'https:') {
        request2 = https.request(options);
      } else {
        request2 = http.request(options);
      }
      this.getLength(
        function (err, length) {
          if (err) {
            this._error(err);
            return;
          }
          request2.setHeader('Content-Length', length);
          this.pipe(request2);
          if (cb) {
            var onResponse;
            var callback = function (error, responce) {
              request2.removeListener('error', callback);
              request2.removeListener('response', onResponse);
              return cb.call(this, error, responce);
            };
            onResponse = callback.bind(this, null);
            request2.on('error', callback);
            request2.on('response', onResponse);
          }
        }.bind(this)
      );
      return request2;
    };
    FormData2.prototype._error = function (err) {
      if (!this.error) {
        this.error = err;
        this.pause();
        this.emit('error', err);
      }
    };
    FormData2.prototype.toString = function () {
      return '[object FormData]';
    };
  },
});

// node_modules/formidable/lib/file.js
var require_file = __commonJS({
  'node_modules/formidable/lib/file.js'(exports2, module2) {
    'use strict';
    if (global.GENTLY) require = GENTLY.hijack(require);
    var util = require('util');
    var fs2 = require('fs');
    var EventEmitter = require('events').EventEmitter;
    var crypto2 = require('crypto');
    function File(properties) {
      EventEmitter.call(this);
      this.size = 0;
      this.path = null;
      this.name = null;
      this.type = null;
      this.hash = null;
      this.lastModifiedDate = null;
      this._writeStream = null;
      for (var key in properties) {
        this[key] = properties[key];
      }
      if (typeof this.hash === 'string') {
        this.hash = crypto2.createHash(properties.hash);
      } else {
        this.hash = null;
      }
    }
    module2.exports = File;
    util.inherits(File, EventEmitter);
    File.prototype.open = function () {
      this._writeStream = new fs2.WriteStream(this.path);
    };
    File.prototype.toJSON = function () {
      var json = {
        size: this.size,
        path: this.path,
        name: this.name,
        type: this.type,
        mtime: this.lastModifiedDate,
        length: this.length,
        filename: this.filename,
        mime: this.mime,
      };
      if (this.hash && this.hash != '') {
        json.hash = this.hash;
      }
      return json;
    };
    File.prototype.write = function (buffer, cb) {
      var self2 = this;
      if (self2.hash) {
        self2.hash.update(buffer);
      }
      if (this._writeStream.closed) {
        return cb();
      }
      this._writeStream.write(buffer, function () {
        self2.lastModifiedDate = /* @__PURE__ */ new Date();
        self2.size += buffer.length;
        self2.emit('progress', self2.size);
        cb();
      });
    };
    File.prototype.end = function (cb) {
      var self2 = this;
      if (self2.hash) {
        self2.hash = self2.hash.digest('hex');
      }
      this._writeStream.end(function () {
        self2.emit('end');
        cb();
      });
    };
  },
});

// node_modules/formidable/lib/multipart_parser.js
var require_multipart_parser = __commonJS({
  'node_modules/formidable/lib/multipart_parser.js'(exports2) {
    'use strict';
    var Buffer2 = require('buffer').Buffer;
    var s2 = 0;
    var S = {
      PARSER_UNINITIALIZED: s2++,
      START: s2++,
      START_BOUNDARY: s2++,
      HEADER_FIELD_START: s2++,
      HEADER_FIELD: s2++,
      HEADER_VALUE_START: s2++,
      HEADER_VALUE: s2++,
      HEADER_VALUE_ALMOST_DONE: s2++,
      HEADERS_ALMOST_DONE: s2++,
      PART_DATA_START: s2++,
      PART_DATA: s2++,
      PART_END: s2++,
      END: s2++,
    };
    var f = 1;
    var F2 = {
      PART_BOUNDARY: f,
      LAST_BOUNDARY: (f *= 2),
    };
    var LF = 10;
    var CR = 13;
    var SPACE = 32;
    var HYPHEN = 45;
    var COLON = 58;
    var A2 = 97;
    var Z2 = 122;
    var lower = function (c2) {
      return c2 | 32;
    };
    for (s2 in S) {
      exports2[s2] = S[s2];
    }
    function MultipartParser() {
      this.boundary = null;
      this.boundaryChars = null;
      this.lookbehind = null;
      this.state = S.PARSER_UNINITIALIZED;
      this.index = null;
      this.flags = 0;
    }
    exports2.MultipartParser = MultipartParser;
    MultipartParser.stateToString = function (stateNumber) {
      for (var state in S) {
        var number = S[state];
        if (number === stateNumber) return state;
      }
    };
    MultipartParser.prototype.initWithBoundary = function (str) {
      this.boundary = new Buffer2(str.length + 4);
      this.boundary.write('\r\n--', 0);
      this.boundary.write(str, 4);
      this.lookbehind = new Buffer2(this.boundary.length + 8);
      this.state = S.START;
      this.boundaryChars = {};
      for (var i = 0; i < this.boundary.length; i++) {
        this.boundaryChars[this.boundary[i]] = true;
      }
    };
    MultipartParser.prototype.write = function (buffer) {
      var self2 = this,
        i = 0,
        len = buffer.length,
        prevIndex = this.index,
        index = this.index,
        state = this.state,
        flags = this.flags,
        lookbehind = this.lookbehind,
        boundary = this.boundary,
        boundaryChars = this.boundaryChars,
        boundaryLength = this.boundary.length,
        boundaryEnd = boundaryLength - 1,
        bufferLength = buffer.length,
        c2,
        cl,
        mark = function (name) {
          self2[name + 'Mark'] = i;
        },
        clear = function (name) {
          delete self2[name + 'Mark'];
        },
        callback = function (name, buffer2, start, end) {
          if (start !== void 0 && start === end) {
            return;
          }
          var callbackSymbol =
            'on' + name.substr(0, 1).toUpperCase() + name.substr(1);
          if (callbackSymbol in self2) {
            self2[callbackSymbol](buffer2, start, end);
          }
        },
        dataCallback = function (name, clear2) {
          var markSymbol = name + 'Mark';
          if (!(markSymbol in self2)) {
            return;
          }
          if (!clear2) {
            callback(name, buffer, self2[markSymbol], buffer.length);
            self2[markSymbol] = 0;
          } else {
            callback(name, buffer, self2[markSymbol], i);
            delete self2[markSymbol];
          }
        };
      for (i = 0; i < len; i++) {
        c2 = buffer[i];
        switch (state) {
          case S.PARSER_UNINITIALIZED:
            return i;
          case S.START:
            index = 0;
            state = S.START_BOUNDARY;
          case S.START_BOUNDARY:
            if (index == boundary.length - 2) {
              if (c2 == HYPHEN) {
                flags |= F2.LAST_BOUNDARY;
              } else if (c2 != CR) {
                return i;
              }
              index++;
              break;
            } else if (index - 1 == boundary.length - 2) {
              if (flags & F2.LAST_BOUNDARY && c2 == HYPHEN) {
                callback('end');
                state = S.END;
                flags = 0;
              } else if (!(flags & F2.LAST_BOUNDARY) && c2 == LF) {
                index = 0;
                callback('partBegin');
                state = S.HEADER_FIELD_START;
              } else {
                return i;
              }
              break;
            }
            if (c2 != boundary[index + 2]) {
              index = -2;
            }
            if (c2 == boundary[index + 2]) {
              index++;
            }
            break;
          case S.HEADER_FIELD_START:
            state = S.HEADER_FIELD;
            mark('headerField');
            index = 0;
          case S.HEADER_FIELD:
            if (c2 == CR) {
              clear('headerField');
              state = S.HEADERS_ALMOST_DONE;
              break;
            }
            index++;
            if (c2 == HYPHEN) {
              break;
            }
            if (c2 == COLON) {
              if (index == 1) {
                return i;
              }
              dataCallback('headerField', true);
              state = S.HEADER_VALUE_START;
              break;
            }
            cl = lower(c2);
            if (cl < A2 || cl > Z2) {
              return i;
            }
            break;
          case S.HEADER_VALUE_START:
            if (c2 == SPACE) {
              break;
            }
            mark('headerValue');
            state = S.HEADER_VALUE;
          case S.HEADER_VALUE:
            if (c2 == CR) {
              dataCallback('headerValue', true);
              callback('headerEnd');
              state = S.HEADER_VALUE_ALMOST_DONE;
            }
            break;
          case S.HEADER_VALUE_ALMOST_DONE:
            if (c2 != LF) {
              return i;
            }
            state = S.HEADER_FIELD_START;
            break;
          case S.HEADERS_ALMOST_DONE:
            if (c2 != LF) {
              return i;
            }
            callback('headersEnd');
            state = S.PART_DATA_START;
            break;
          case S.PART_DATA_START:
            state = S.PART_DATA;
            mark('partData');
          case S.PART_DATA:
            prevIndex = index;
            if (index === 0) {
              i += boundaryEnd;
              while (i < bufferLength && !(buffer[i] in boundaryChars)) {
                i += boundaryLength;
              }
              i -= boundaryEnd;
              c2 = buffer[i];
            }
            if (index < boundary.length) {
              if (boundary[index] == c2) {
                if (index === 0) {
                  dataCallback('partData', true);
                }
                index++;
              } else {
                index = 0;
              }
            } else if (index == boundary.length) {
              index++;
              if (c2 == CR) {
                flags |= F2.PART_BOUNDARY;
              } else if (c2 == HYPHEN) {
                flags |= F2.LAST_BOUNDARY;
              } else {
                index = 0;
              }
            } else if (index - 1 == boundary.length) {
              if (flags & F2.PART_BOUNDARY) {
                index = 0;
                if (c2 == LF) {
                  flags &= ~F2.PART_BOUNDARY;
                  callback('partEnd');
                  callback('partBegin');
                  state = S.HEADER_FIELD_START;
                  break;
                }
              } else if (flags & F2.LAST_BOUNDARY) {
                if (c2 == HYPHEN) {
                  callback('partEnd');
                  callback('end');
                  state = S.END;
                  flags = 0;
                } else {
                  index = 0;
                }
              } else {
                index = 0;
              }
            }
            if (index > 0) {
              lookbehind[index - 1] = c2;
            } else if (prevIndex > 0) {
              callback('partData', lookbehind, 0, prevIndex);
              prevIndex = 0;
              mark('partData');
              i--;
            }
            break;
          case S.END:
            break;
          default:
            return i;
        }
      }
      dataCallback('headerField');
      dataCallback('headerValue');
      dataCallback('partData');
      this.index = index;
      this.state = state;
      this.flags = flags;
      return len;
    };
    MultipartParser.prototype.end = function () {
      var callback = function (self2, name) {
        var callbackSymbol =
          'on' + name.substr(0, 1).toUpperCase() + name.substr(1);
        if (callbackSymbol in self2) {
          self2[callbackSymbol]();
        }
      };
      if (
        (this.state == S.HEADER_FIELD_START && this.index === 0) ||
        (this.state == S.PART_DATA && this.index == this.boundary.length)
      ) {
        callback(this, 'partEnd');
        callback(this, 'end');
      } else if (this.state != S.END) {
        return new Error(
          'MultipartParser.end(): stream ended unexpectedly: ' + this.explain()
        );
      }
    };
    MultipartParser.prototype.explain = function () {
      return 'state = ' + MultipartParser.stateToString(this.state);
    };
  },
});

// node_modules/formidable/lib/querystring_parser.js
var require_querystring_parser = __commonJS({
  'node_modules/formidable/lib/querystring_parser.js'(exports2) {
    'use strict';
    if (global.GENTLY) require = GENTLY.hijack(require);
    var querystring = require('querystring');
    function QuerystringParser(maxKeys) {
      this.maxKeys = maxKeys;
      this.buffer = '';
    }
    exports2.QuerystringParser = QuerystringParser;
    QuerystringParser.prototype.write = function (buffer) {
      this.buffer += buffer.toString('ascii');
      return buffer.length;
    };
    QuerystringParser.prototype.end = function () {
      var fields = querystring.parse(this.buffer, '&', '=', {
        maxKeys: this.maxKeys,
      });
      for (var field in fields) {
        this.onField(field, fields[field]);
      }
      this.buffer = '';
      this.onEnd();
    };
  },
});

// node_modules/formidable/lib/octet_parser.js
var require_octet_parser = __commonJS({
  'node_modules/formidable/lib/octet_parser.js'(exports2) {
    'use strict';
    var EventEmitter = require('events').EventEmitter;
    var util = require('util');
    function OctetParser(options) {
      if (!(this instanceof OctetParser)) return new OctetParser(options);
      EventEmitter.call(this);
    }
    util.inherits(OctetParser, EventEmitter);
    exports2.OctetParser = OctetParser;
    OctetParser.prototype.write = function (buffer) {
      this.emit('data', buffer);
      return buffer.length;
    };
    OctetParser.prototype.end = function () {
      this.emit('end');
    };
  },
});

// node_modules/formidable/lib/json_parser.js
var require_json_parser = __commonJS({
  'node_modules/formidable/lib/json_parser.js'(exports2) {
    'use strict';
    if (global.GENTLY) require = GENTLY.hijack(require);
    var Buffer2 = require('buffer').Buffer;
    function JSONParser(parent) {
      this.parent = parent;
      this.chunks = [];
      this.bytesWritten = 0;
    }
    exports2.JSONParser = JSONParser;
    JSONParser.prototype.write = function (buffer) {
      this.bytesWritten += buffer.length;
      this.chunks.push(buffer);
      return buffer.length;
    };
    JSONParser.prototype.end = function () {
      try {
        var fields = JSON.parse(Buffer2.concat(this.chunks));
        for (var field in fields) {
          this.onField(field, fields[field]);
        }
      } catch (e2) {
        this.parent.emit('error', e2);
      }
      this.data = null;
      this.onEnd();
    };
  },
});

// node_modules/formidable/lib/incoming_form.js
var require_incoming_form = __commonJS({
  'node_modules/formidable/lib/incoming_form.js'(exports2) {
    'use strict';
    if (global.GENTLY) require = GENTLY.hijack(require);
    var crypto2 = require('crypto');
    var fs2 = require('fs');
    var util = require('util');
    var path = require('path');
    var File = require_file();
    var MultipartParser = require_multipart_parser().MultipartParser;
    var QuerystringParser = require_querystring_parser().QuerystringParser;
    var OctetParser = require_octet_parser().OctetParser;
    var JSONParser = require_json_parser().JSONParser;
    var StringDecoder = require('string_decoder').StringDecoder;
    var EventEmitter = require('events').EventEmitter;
    var Stream = require('stream').Stream;
    var os2 = require('os');
    function IncomingForm(opts) {
      if (!(this instanceof IncomingForm)) return new IncomingForm(opts);
      EventEmitter.call(this);
      opts = opts || {};
      this.error = null;
      this.ended = false;
      this.maxFields = opts.maxFields || 1e3;
      this.maxFieldsSize = opts.maxFieldsSize || 20 * 1024 * 1024;
      this.maxFileSize = opts.maxFileSize || 200 * 1024 * 1024;
      this.keepExtensions = opts.keepExtensions || false;
      this.uploadDir =
        opts.uploadDir || (os2.tmpdir && os2.tmpdir()) || os2.tmpDir();
      this.encoding = opts.encoding || 'utf-8';
      this.headers = null;
      this.type = null;
      this.hash = opts.hash || false;
      this.multiples = opts.multiples || false;
      this.bytesReceived = null;
      this.bytesExpected = null;
      this._parser = null;
      this._flushing = 0;
      this._fieldsSize = 0;
      this._fileSize = 0;
      this.openedFiles = [];
      return this;
    }
    util.inherits(IncomingForm, EventEmitter);
    exports2.IncomingForm = IncomingForm;
    IncomingForm.prototype.parse = function (req, cb) {
      this.pause = function () {
        try {
          req.pause();
        } catch (err) {
          if (!this.ended) {
            this._error(err);
          }
          return false;
        }
        return true;
      };
      this.resume = function () {
        try {
          req.resume();
        } catch (err) {
          if (!this.ended) {
            this._error(err);
          }
          return false;
        }
        return true;
      };
      if (cb) {
        var fields = {},
          files = {};
        this.on('field', function (name, value) {
          fields[name] = value;
        })
          .on('file', function (name, file) {
            if (this.multiples) {
              if (files[name]) {
                if (!Array.isArray(files[name])) {
                  files[name] = [files[name]];
                }
                files[name].push(file);
              } else {
                files[name] = file;
              }
            } else {
              files[name] = file;
            }
          })
          .on('error', function (err) {
            cb(err, fields, files);
          })
          .on('end', function () {
            cb(null, fields, files);
          });
      }
      this.writeHeaders(req.headers);
      var self2 = this;
      req
        .on('error', function (err) {
          self2._error(err);
        })
        .on('aborted', function () {
          self2.emit('aborted');
          self2._error(new Error('Request aborted'));
        })
        .on('data', function (buffer) {
          self2.write(buffer);
        })
        .on('end', function () {
          if (self2.error) {
            return;
          }
          var err = self2._parser.end();
          if (err) {
            self2._error(err);
          }
        });
      return this;
    };
    IncomingForm.prototype.writeHeaders = function (headers) {
      this.headers = headers;
      this._parseContentLength();
      this._parseContentType();
    };
    IncomingForm.prototype.write = function (buffer) {
      if (this.error) {
        return;
      }
      if (!this._parser) {
        this._error(new Error('uninitialized parser'));
        return;
      }
      if (typeof this._parser.write !== 'function') {
        this._error(new Error('did not expect data'));
        return;
      }
      this.bytesReceived += buffer.length;
      this.emit('progress', this.bytesReceived, this.bytesExpected);
      var bytesParsed = this._parser.write(buffer);
      if (bytesParsed !== buffer.length) {
        this._error(
          new Error(
            'parser error, ' +
              bytesParsed +
              ' of ' +
              buffer.length +
              ' bytes parsed'
          )
        );
      }
      return bytesParsed;
    };
    IncomingForm.prototype.pause = function () {
      return false;
    };
    IncomingForm.prototype.resume = function () {
      return false;
    };
    IncomingForm.prototype.onPart = function (part) {
      this.handlePart(part);
    };
    IncomingForm.prototype.handlePart = function (part) {
      var self2 = this;
      if (part.filename === void 0) {
        var value = '',
          decoder = new StringDecoder(this.encoding);
        part.on('data', function (buffer) {
          self2._fieldsSize += buffer.length;
          if (self2._fieldsSize > self2.maxFieldsSize) {
            self2._error(
              new Error(
                'maxFieldsSize exceeded, received ' +
                  self2._fieldsSize +
                  ' bytes of field data'
              )
            );
            return;
          }
          value += decoder.write(buffer);
        });
        part.on('end', function () {
          self2.emit('field', part.name, value);
        });
        return;
      }
      this._flushing++;
      var file = new File({
        path: this._uploadPath(part.filename),
        name: part.filename,
        type: part.mime,
        hash: self2.hash,
      });
      this.emit('fileBegin', part.name, file);
      file.open();
      this.openedFiles.push(file);
      part.on('data', function (buffer) {
        self2._fileSize += buffer.length;
        if (self2._fileSize > self2.maxFileSize) {
          self2._error(
            new Error(
              'maxFileSize exceeded, received ' +
                self2._fileSize +
                ' bytes of file data'
            )
          );
          return;
        }
        if (buffer.length == 0) {
          return;
        }
        self2.pause();
        file.write(buffer, function () {
          self2.resume();
        });
      });
      part.on('end', function () {
        file.end(function () {
          self2._flushing--;
          self2.emit('file', part.name, file);
          self2._maybeEnd();
        });
      });
    };
    function dummyParser(self2) {
      return {
        end: function () {
          self2.ended = true;
          self2._maybeEnd();
          return null;
        },
      };
    }
    IncomingForm.prototype._parseContentType = function () {
      if (this.bytesExpected === 0) {
        this._parser = dummyParser(this);
        return;
      }
      if (!this.headers['content-type']) {
        this._error(new Error('bad content-type header, no content-type'));
        return;
      }
      if (this.headers['content-type'].match(/octet-stream/i)) {
        this._initOctetStream();
        return;
      }
      if (this.headers['content-type'].match(/urlencoded/i)) {
        this._initUrlencoded();
        return;
      }
      if (this.headers['content-type'].match(/multipart/i)) {
        var m2 = this.headers['content-type'].match(
          /boundary=(?:"([^"]+)"|([^;]+))/i
        );
        if (m2) {
          this._initMultipart(m2[1] || m2[2]);
        } else {
          this._error(
            new Error('bad content-type header, no multipart boundary')
          );
        }
        return;
      }
      if (this.headers['content-type'].match(/json/i)) {
        this._initJSONencoded();
        return;
      }
      this._error(
        new Error(
          'bad content-type header, unknown content-type: ' +
            this.headers['content-type']
        )
      );
    };
    IncomingForm.prototype._error = function (err) {
      if (this.error || this.ended) {
        return;
      }
      this.error = err;
      this.emit('error', err);
      if (Array.isArray(this.openedFiles)) {
        this.openedFiles.forEach(function (file) {
          file._writeStream.on('error', function () {}).destroy();
          setTimeout(fs2.unlink, 0, file.path, function (error) {});
        });
      }
    };
    IncomingForm.prototype._parseContentLength = function () {
      this.bytesReceived = 0;
      if (this.headers['content-length']) {
        this.bytesExpected = parseInt(this.headers['content-length'], 10);
      } else if (this.headers['transfer-encoding'] === void 0) {
        this.bytesExpected = 0;
      }
      if (this.bytesExpected !== null) {
        this.emit('progress', this.bytesReceived, this.bytesExpected);
      }
    };
    IncomingForm.prototype._newParser = function () {
      return new MultipartParser();
    };
    IncomingForm.prototype._initMultipart = function (boundary) {
      this.type = 'multipart';
      var parser = new MultipartParser(),
        self2 = this,
        headerField,
        headerValue,
        part;
      parser.initWithBoundary(boundary);
      parser.onPartBegin = function () {
        part = new Stream();
        part.readable = true;
        part.headers = {};
        part.name = null;
        part.filename = null;
        part.mime = null;
        part.transferEncoding = 'binary';
        part.transferBuffer = '';
        headerField = '';
        headerValue = '';
      };
      parser.onHeaderField = function (b, start, end) {
        headerField += b.toString(self2.encoding, start, end);
      };
      parser.onHeaderValue = function (b, start, end) {
        headerValue += b.toString(self2.encoding, start, end);
      };
      parser.onHeaderEnd = function () {
        headerField = headerField.toLowerCase();
        part.headers[headerField] = headerValue;
        var m2 = headerValue.match(
          /\bname=("([^"]*)"|([^\(\)<>@,;:\\"\/\[\]\?=\{\}\s\t/]+))/i
        );
        if (headerField == 'content-disposition') {
          if (m2) {
            part.name = m2[2] || m2[3] || '';
          }
          part.filename = self2._fileName(headerValue);
        } else if (headerField == 'content-type') {
          part.mime = headerValue;
        } else if (headerField == 'content-transfer-encoding') {
          part.transferEncoding = headerValue.toLowerCase();
        }
        headerField = '';
        headerValue = '';
      };
      parser.onHeadersEnd = function () {
        switch (part.transferEncoding) {
          case 'binary':
          case '7bit':
          case '8bit':
            parser.onPartData = function (b, start, end) {
              part.emit('data', b.slice(start, end));
            };
            parser.onPartEnd = function () {
              part.emit('end');
            };
            break;
          case 'base64':
            parser.onPartData = function (b, start, end) {
              part.transferBuffer += b.slice(start, end).toString('ascii');
              var offset = parseInt(part.transferBuffer.length / 4, 10) * 4;
              part.emit(
                'data',
                new Buffer(part.transferBuffer.substring(0, offset), 'base64')
              );
              part.transferBuffer = part.transferBuffer.substring(offset);
            };
            parser.onPartEnd = function () {
              part.emit('data', new Buffer(part.transferBuffer, 'base64'));
              part.emit('end');
            };
            break;
          default:
            return self2._error(new Error('unknown transfer-encoding'));
        }
        self2.onPart(part);
      };
      parser.onEnd = function () {
        self2.ended = true;
        self2._maybeEnd();
      };
      this._parser = parser;
    };
    IncomingForm.prototype._fileName = function (headerValue) {
      var m2 = headerValue.match(
        /\bfilename=("(.*?)"|([^\(\)<>@,;:\\"\/\[\]\?=\{\}\s\t/]+))($|;\s)/i
      );
      if (!m2) return;
      var match = m2[2] || m2[3] || '';
      var filename = match.substr(match.lastIndexOf('\\') + 1);
      filename = filename.replace(/%22/g, '"');
      filename = filename.replace(/&#([\d]{4});/g, function (m3, code) {
        return String.fromCharCode(code);
      });
      return filename;
    };
    IncomingForm.prototype._initUrlencoded = function () {
      this.type = 'urlencoded';
      var parser = new QuerystringParser(this.maxFields),
        self2 = this;
      parser.onField = function (key, val) {
        self2.emit('field', key, val);
      };
      parser.onEnd = function () {
        self2.ended = true;
        self2._maybeEnd();
      };
      this._parser = parser;
    };
    IncomingForm.prototype._initOctetStream = function () {
      this.type = 'octet-stream';
      var filename = this.headers['x-file-name'];
      var mime = this.headers['content-type'];
      var file = new File({
        path: this._uploadPath(filename),
        name: filename,
        type: mime,
      });
      this.emit('fileBegin', filename, file);
      file.open();
      this.openedFiles.push(file);
      this._flushing++;
      var self2 = this;
      self2._parser = new OctetParser();
      var outstandingWrites = 0;
      self2._parser.on('data', function (buffer) {
        self2.pause();
        outstandingWrites++;
        file.write(buffer, function () {
          outstandingWrites--;
          self2.resume();
          if (self2.ended) {
            self2._parser.emit('doneWritingFile');
          }
        });
      });
      self2._parser.on('end', function () {
        self2._flushing--;
        self2.ended = true;
        var done = function () {
          file.end(function () {
            self2.emit('file', 'file', file);
            self2._maybeEnd();
          });
        };
        if (outstandingWrites === 0) {
          done();
        } else {
          self2._parser.once('doneWritingFile', done);
        }
      });
    };
    IncomingForm.prototype._initJSONencoded = function () {
      this.type = 'json';
      var parser = new JSONParser(this),
        self2 = this;
      parser.onField = function (key, val) {
        self2.emit('field', key, val);
      };
      parser.onEnd = function () {
        self2.ended = true;
        self2._maybeEnd();
      };
      this._parser = parser;
    };
    IncomingForm.prototype._uploadPath = function (filename) {
      var buf = crypto2.randomBytes(16);
      var name = 'upload_' + buf.toString('hex');
      if (this.keepExtensions) {
        var ext = path.extname(filename);
        ext = ext.replace(/(\.[a-z0-9]+).*/i, '$1');
        name += ext;
      }
      return path.join(this.uploadDir, name);
    };
    IncomingForm.prototype._maybeEnd = function () {
      if (!this.ended || this._flushing || this.error) {
        return;
      }
      this.emit('end');
    };
  },
});

// node_modules/formidable/lib/index.js
var require_lib4 = __commonJS({
  'node_modules/formidable/lib/index.js'(exports2, module2) {
    'use strict';
    var IncomingForm = require_incoming_form().IncomingForm;
    IncomingForm.IncomingForm = IncomingForm;
    module2.exports = IncomingForm;
  },
});

// node_modules/ms/index.js
var require_ms7 = __commonJS({
  'node_modules/ms/index.js'(exports2, module2) {
    'use strict';
    var s2 = 1e3;
    var m2 = s2 * 60;
    var h2 = m2 * 60;
    var d = h2 * 24;
    var w2 = d * 7;
    var y = d * 365.25;
    module2.exports = function (val, options) {
      options = options || {};
      var type = typeof val;
      if (type === 'string' && val.length > 0) {
        return parse(val);
      } else if (type === 'number' && isFinite(val)) {
        return options.long ? fmtLong(val) : fmtShort(val);
      }
      throw new Error(
        'val is not a non-empty string or a valid number. val=' +
          JSON.stringify(val)
      );
    };
    function parse(str) {
      str = String(str);
      if (str.length > 100) {
        return;
      }
      var match =
        /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(
          str
        );
      if (!match) {
        return;
      }
      var n2 = parseFloat(match[1]);
      var type = (match[2] || 'ms').toLowerCase();
      switch (type) {
        case 'years':
        case 'year':
        case 'yrs':
        case 'yr':
        case 'y':
          return n2 * y;
        case 'weeks':
        case 'week':
        case 'w':
          return n2 * w2;
        case 'days':
        case 'day':
        case 'd':
          return n2 * d;
        case 'hours':
        case 'hour':
        case 'hrs':
        case 'hr':
        case 'h':
          return n2 * h2;
        case 'minutes':
        case 'minute':
        case 'mins':
        case 'min':
        case 'm':
          return n2 * m2;
        case 'seconds':
        case 'second':
        case 'secs':
        case 'sec':
        case 's':
          return n2 * s2;
        case 'milliseconds':
        case 'millisecond':
        case 'msecs':
        case 'msec':
        case 'ms':
          return n2;
        default:
          return void 0;
      }
    }
    function fmtShort(ms2) {
      var msAbs = Math.abs(ms2);
      if (msAbs >= d) {
        return Math.round(ms2 / d) + 'd';
      }
      if (msAbs >= h2) {
        return Math.round(ms2 / h2) + 'h';
      }
      if (msAbs >= m2) {
        return Math.round(ms2 / m2) + 'm';
      }
      if (msAbs >= s2) {
        return Math.round(ms2 / s2) + 's';
      }
      return ms2 + 'ms';
    }
    function fmtLong(ms2) {
      var msAbs = Math.abs(ms2);
      if (msAbs >= d) {
        return plural(ms2, msAbs, d, 'day');
      }
      if (msAbs >= h2) {
        return plural(ms2, msAbs, h2, 'hour');
      }
      if (msAbs >= m2) {
        return plural(ms2, msAbs, m2, 'minute');
      }
      if (msAbs >= s2) {
        return plural(ms2, msAbs, s2, 'second');
      }
      return ms2 + ' ms';
    }
    function plural(ms2, msAbs, n2, name) {
      var isPlural = msAbs >= n2 * 1.5;
      return Math.round(ms2 / n2) + ' ' + name + (isPlural ? 's' : '');
    }
  },
});

// node_modules/debug/src/common.js
var require_common2 = __commonJS({
  'node_modules/debug/src/common.js'(exports2, module2) {
    'use strict';
    function setup(env2) {
      createDebug.debug = createDebug;
      createDebug.default = createDebug;
      createDebug.coerce = coerce;
      createDebug.disable = disable;
      createDebug.enable = enable;
      createDebug.enabled = enabled;
      createDebug.humanize = require_ms7();
      createDebug.destroy = destroy;
      Object.keys(env2).forEach((key) => {
        createDebug[key] = env2[key];
      });
      createDebug.names = [];
      createDebug.skips = [];
      createDebug.formatters = {};
      function selectColor(namespace) {
        let hash = 0;
        for (let i = 0; i < namespace.length; i++) {
          hash = (hash << 5) - hash + namespace.charCodeAt(i);
          hash |= 0;
        }
        return createDebug.colors[Math.abs(hash) % createDebug.colors.length];
      }
      createDebug.selectColor = selectColor;
      function createDebug(namespace) {
        let prevTime;
        let enableOverride = null;
        let namespacesCache;
        let enabledCache;
        function debug2(...args) {
          if (!debug2.enabled) {
            return;
          }
          const self2 = debug2;
          const curr = Number(/* @__PURE__ */ new Date());
          const ms2 = curr - (prevTime || curr);
          self2.diff = ms2;
          self2.prev = prevTime;
          self2.curr = curr;
          prevTime = curr;
          args[0] = createDebug.coerce(args[0]);
          if (typeof args[0] !== 'string') {
            args.unshift('%O');
          }
          let index = 0;
          args[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format2) => {
            if (match === '%%') {
              return '%';
            }
            index++;
            const formatter = createDebug.formatters[format2];
            if (typeof formatter === 'function') {
              const val = args[index];
              match = formatter.call(self2, val);
              args.splice(index, 1);
              index--;
            }
            return match;
          });
          createDebug.formatArgs.call(self2, args);
          const logFn = self2.log || createDebug.log;
          logFn.apply(self2, args);
        }
        debug2.namespace = namespace;
        debug2.useColors = createDebug.useColors();
        debug2.color = createDebug.selectColor(namespace);
        debug2.extend = extend;
        debug2.destroy = createDebug.destroy;
        Object.defineProperty(debug2, 'enabled', {
          enumerable: true,
          configurable: false,
          get: () => {
            if (enableOverride !== null) {
              return enableOverride;
            }
            if (namespacesCache !== createDebug.namespaces) {
              namespacesCache = createDebug.namespaces;
              enabledCache = createDebug.enabled(namespace);
            }
            return enabledCache;
          },
          set: (v) => {
            enableOverride = v;
          },
        });
        if (typeof createDebug.init === 'function') {
          createDebug.init(debug2);
        }
        return debug2;
      }
      function extend(namespace, delimiter) {
        const newDebug = createDebug(
          this.namespace +
            (typeof delimiter === 'undefined' ? ':' : delimiter) +
            namespace
        );
        newDebug.log = this.log;
        return newDebug;
      }
      function enable(namespaces) {
        createDebug.save(namespaces);
        createDebug.namespaces = namespaces;
        createDebug.names = [];
        createDebug.skips = [];
        let i;
        const split = (typeof namespaces === 'string' ? namespaces : '').split(
          /[\s,]+/
        );
        const len = split.length;
        for (i = 0; i < len; i++) {
          if (!split[i]) {
            continue;
          }
          namespaces = split[i].replace(/\*/g, '.*?');
          if (namespaces[0] === '-') {
            createDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));
          } else {
            createDebug.names.push(new RegExp('^' + namespaces + '$'));
          }
        }
      }
      function disable() {
        const namespaces = [
          ...createDebug.names.map(toNamespace),
          ...createDebug.skips
            .map(toNamespace)
            .map((namespace) => '-' + namespace),
        ].join(',');
        createDebug.enable('');
        return namespaces;
      }
      function enabled(name) {
        if (name[name.length - 1] === '*') {
          return true;
        }
        let i;
        let len;
        for (i = 0, len = createDebug.skips.length; i < len; i++) {
          if (createDebug.skips[i].test(name)) {
            return false;
          }
        }
        for (i = 0, len = createDebug.names.length; i < len; i++) {
          if (createDebug.names[i].test(name)) {
            return true;
          }
        }
        return false;
      }
      function toNamespace(regexp) {
        return regexp
          .toString()
          .substring(2, regexp.toString().length - 2)
          .replace(/\.\*\?$/, '*');
      }
      function coerce(val) {
        if (val instanceof Error) {
          return val.stack || val.message;
        }
        return val;
      }
      function destroy() {
        console.warn(
          'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'
        );
      }
      createDebug.enable(createDebug.load());
      return createDebug;
    }
    module2.exports = setup;
  },
});

// node_modules/debug/src/browser.js
var require_browser6 = __commonJS({
  'node_modules/debug/src/browser.js'(exports2, module2) {
    'use strict';
    exports2.formatArgs = formatArgs;
    exports2.save = save;
    exports2.load = load;
    exports2.useColors = useColors;
    exports2.storage = localstorage();
    exports2.destroy = (() => {
      let warned = false;
      return () => {
        if (!warned) {
          warned = true;
          console.warn(
            'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'
          );
        }
      };
    })();
    exports2.colors = [
      '#0000CC',
      '#0000FF',
      '#0033CC',
      '#0033FF',
      '#0066CC',
      '#0066FF',
      '#0099CC',
      '#0099FF',
      '#00CC00',
      '#00CC33',
      '#00CC66',
      '#00CC99',
      '#00CCCC',
      '#00CCFF',
      '#3300CC',
      '#3300FF',
      '#3333CC',
      '#3333FF',
      '#3366CC',
      '#3366FF',
      '#3399CC',
      '#3399FF',
      '#33CC00',
      '#33CC33',
      '#33CC66',
      '#33CC99',
      '#33CCCC',
      '#33CCFF',
      '#6600CC',
      '#6600FF',
      '#6633CC',
      '#6633FF',
      '#66CC00',
      '#66CC33',
      '#9900CC',
      '#9900FF',
      '#9933CC',
      '#9933FF',
      '#99CC00',
      '#99CC33',
      '#CC0000',
      '#CC0033',
      '#CC0066',
      '#CC0099',
      '#CC00CC',
      '#CC00FF',
      '#CC3300',
      '#CC3333',
      '#CC3366',
      '#CC3399',
      '#CC33CC',
      '#CC33FF',
      '#CC6600',
      '#CC6633',
      '#CC9900',
      '#CC9933',
      '#CCCC00',
      '#CCCC33',
      '#FF0000',
      '#FF0033',
      '#FF0066',
      '#FF0099',
      '#FF00CC',
      '#FF00FF',
      '#FF3300',
      '#FF3333',
      '#FF3366',
      '#FF3399',
      '#FF33CC',
      '#FF33FF',
      '#FF6600',
      '#FF6633',
      '#FF9900',
      '#FF9933',
      '#FFCC00',
      '#FFCC33',
    ];
    function useColors() {
      if (
        typeof window !== 'undefined' &&
        window.process &&
        (window.process.type === 'renderer' || window.process.__nwjs)
      ) {
        return true;
      }
      if (
        typeof navigator !== 'undefined' &&
        navigator.userAgent &&
        navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)
      ) {
        return false;
      }
      return (
        (typeof document !== 'undefined' &&
          document.documentElement &&
          document.documentElement.style &&
          document.documentElement.style.WebkitAppearance) || // Is firebug? http://stackoverflow.com/a/398120/376773
        (typeof window !== 'undefined' &&
          window.console &&
          (window.console.firebug ||
            (window.console.exception && window.console.table))) || // Is firefox >= v31?
        // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
        (typeof navigator !== 'undefined' &&
          navigator.userAgent &&
          navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) &&
          parseInt(RegExp.$1, 10) >= 31) || // Double check webkit in userAgent just in case we are in a worker
        (typeof navigator !== 'undefined' &&
          navigator.userAgent &&
          navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/))
      );
    }
    function formatArgs(args) {
      args[0] =
        (this.useColors ? '%c' : '') +
        this.namespace +
        (this.useColors ? ' %c' : ' ') +
        args[0] +
        (this.useColors ? '%c ' : ' ') +
        '+' +
        module2.exports.humanize(this.diff);
      if (!this.useColors) {
        return;
      }
      const c2 = 'color: ' + this.color;
      args.splice(1, 0, c2, 'color: inherit');
      let index = 0;
      let lastC = 0;
      args[0].replace(/%[a-zA-Z%]/g, (match) => {
        if (match === '%%') {
          return;
        }
        index++;
        if (match === '%c') {
          lastC = index;
        }
      });
      args.splice(lastC, 0, c2);
    }
    exports2.log = console.debug || console.log || (() => {});
    function save(namespaces) {
      try {
        if (namespaces) {
          exports2.storage.setItem('debug', namespaces);
        } else {
          exports2.storage.removeItem('debug');
        }
      } catch (error) {}
    }
    function load() {
      let r2;
      try {
        r2 = exports2.storage.getItem('debug');
      } catch (error) {}
      if (!r2 && typeof process !== 'undefined' && 'env' in process) {
        r2 = process.env.DEBUG;
      }
      return r2;
    }
    function localstorage() {
      try {
        return localStorage;
      } catch (error) {}
    }
    module2.exports = require_common2()(exports2);
    var { formatters } = module2.exports;
    formatters.j = function (v) {
      try {
        return JSON.stringify(v);
      } catch (error) {
        return '[UnexpectedJSONParseError]: ' + error.message;
      }
    };
  },
});

// node_modules/has-flag/index.js
var require_has_flag2 = __commonJS({
  'node_modules/has-flag/index.js'(exports2, module2) {
    'use strict';
    module2.exports = (flag, argv = process.argv) => {
      const prefix = flag.startsWith('-') ? '' : flag.length === 1 ? '-' : '--';
      const position = argv.indexOf(prefix + flag);
      const terminatorPosition = argv.indexOf('--');
      return (
        position !== -1 &&
        (terminatorPosition === -1 || position < terminatorPosition)
      );
    };
  },
});

// node_modules/supports-color/index.js
var require_supports_color2 = __commonJS({
  'node_modules/supports-color/index.js'(exports2, module2) {
    'use strict';
    var os2 = require('os');
    var tty = require('tty');
    var hasFlag = require_has_flag2();
    var { env: env2 } = process;
    var forceColor;
    if (
      hasFlag('no-color') ||
      hasFlag('no-colors') ||
      hasFlag('color=false') ||
      hasFlag('color=never')
    ) {
      forceColor = 0;
    } else if (
      hasFlag('color') ||
      hasFlag('colors') ||
      hasFlag('color=true') ||
      hasFlag('color=always')
    ) {
      forceColor = 1;
    }
    if ('FORCE_COLOR' in env2) {
      if (env2.FORCE_COLOR === 'true') {
        forceColor = 1;
      } else if (env2.FORCE_COLOR === 'false') {
        forceColor = 0;
      } else {
        forceColor =
          env2.FORCE_COLOR.length === 0
            ? 1
            : Math.min(parseInt(env2.FORCE_COLOR, 10), 3);
      }
    }
    function translateLevel(level) {
      if (level === 0) {
        return false;
      }
      return {
        level,
        hasBasic: true,
        has256: level >= 2,
        has16m: level >= 3,
      };
    }
    function supportsColor(haveStream, streamIsTTY) {
      if (forceColor === 0) {
        return 0;
      }
      if (
        hasFlag('color=16m') ||
        hasFlag('color=full') ||
        hasFlag('color=truecolor')
      ) {
        return 3;
      }
      if (hasFlag('color=256')) {
        return 2;
      }
      if (haveStream && !streamIsTTY && forceColor === void 0) {
        return 0;
      }
      const min = forceColor || 0;
      if (env2.TERM === 'dumb') {
        return min;
      }
      if (process.platform === 'win32') {
        const osRelease = os2.release().split('.');
        if (Number(osRelease[0]) >= 10 && Number(osRelease[2]) >= 10586) {
          return Number(osRelease[2]) >= 14931 ? 3 : 2;
        }
        return 1;
      }
      if ('CI' in env2) {
        if (
          [
            'TRAVIS',
            'CIRCLECI',
            'APPVEYOR',
            'GITLAB_CI',
            'GITHUB_ACTIONS',
            'BUILDKITE',
          ].some((sign) => sign in env2) ||
          env2.CI_NAME === 'codeship'
        ) {
          return 1;
        }
        return min;
      }
      if ('TEAMCITY_VERSION' in env2) {
        return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(env2.TEAMCITY_VERSION)
          ? 1
          : 0;
      }
      if (env2.COLORTERM === 'truecolor') {
        return 3;
      }
      if ('TERM_PROGRAM' in env2) {
        const version = parseInt(
          (env2.TERM_PROGRAM_VERSION || '').split('.')[0],
          10
        );
        switch (env2.TERM_PROGRAM) {
          case 'iTerm.app':
            return version >= 3 ? 3 : 2;
          case 'Apple_Terminal':
            return 2;
        }
      }
      if (/-256(color)?$/i.test(env2.TERM)) {
        return 2;
      }
      if (
        /^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(
          env2.TERM
        )
      ) {
        return 1;
      }
      if ('COLORTERM' in env2) {
        return 1;
      }
      return min;
    }
    function getSupportLevel(stream) {
      const level = supportsColor(stream, stream && stream.isTTY);
      return translateLevel(level);
    }
    module2.exports = {
      supportsColor: getSupportLevel,
      stdout: translateLevel(supportsColor(true, tty.isatty(1))),
      stderr: translateLevel(supportsColor(true, tty.isatty(2))),
    };
  },
});

// node_modules/debug/src/node.js
var require_node6 = __commonJS({
  'node_modules/debug/src/node.js'(exports2, module2) {
    'use strict';
    var tty = require('tty');
    var util = require('util');
    exports2.init = init;
    exports2.log = log2;
    exports2.formatArgs = formatArgs;
    exports2.save = save;
    exports2.load = load;
    exports2.useColors = useColors;
    exports2.destroy = util.deprecate(() => {},
    'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');
    exports2.colors = [6, 2, 3, 4, 5, 1];
    try {
      const supportsColor = require_supports_color2();
      if (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {
        exports2.colors = [
          20, 21, 26, 27, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 56, 57, 62,
          63, 68, 69, 74, 75, 76, 77, 78, 79, 80, 81, 92, 93, 98, 99, 112, 113,
          128, 129, 134, 135, 148, 149, 160, 161, 162, 163, 164, 165, 166, 167,
          168, 169, 170, 171, 172, 173, 178, 179, 184, 185, 196, 197, 198, 199,
          200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 215, 220, 221,
        ];
      }
    } catch (error) {}
    exports2.inspectOpts = Object.keys(process.env)
      .filter((key) => {
        return /^debug_/i.test(key);
      })
      .reduce((obj, key) => {
        const prop = key
          .substring(6)
          .toLowerCase()
          .replace(/_([a-z])/g, (_2, k2) => {
            return k2.toUpperCase();
          });
        let val = process.env[key];
        if (/^(yes|on|true|enabled)$/i.test(val)) {
          val = true;
        } else if (/^(no|off|false|disabled)$/i.test(val)) {
          val = false;
        } else if (val === 'null') {
          val = null;
        } else {
          val = Number(val);
        }
        obj[prop] = val;
        return obj;
      }, {});
    function useColors() {
      return 'colors' in exports2.inspectOpts
        ? Boolean(exports2.inspectOpts.colors)
        : tty.isatty(process.stderr.fd);
    }
    function formatArgs(args) {
      const { namespace: name, useColors: useColors2 } = this;
      if (useColors2) {
        const c2 = this.color;
        const colorCode = '\x1B[3' + (c2 < 8 ? c2 : '8;5;' + c2);
        const prefix = `  ${colorCode};1m${name} \x1B[0m`;
        args[0] = prefix + args[0].split('\n').join('\n' + prefix);
        args.push(
          colorCode + 'm+' + module2.exports.humanize(this.diff) + '\x1B[0m'
        );
      } else {
        args[0] = getDate() + name + ' ' + args[0];
      }
    }
    function getDate() {
      if (exports2.inspectOpts.hideDate) {
        return '';
      }
      return /* @__PURE__ */ new Date().toISOString() + ' ';
    }
    function log2(...args) {
      return process.stderr.write(util.format(...args) + '\n');
    }
    function save(namespaces) {
      if (namespaces) {
        process.env.DEBUG = namespaces;
      } else {
        delete process.env.DEBUG;
      }
    }
    function load() {
      return process.env.DEBUG;
    }
    function init(debug2) {
      debug2.inspectOpts = {};
      const keys = Object.keys(exports2.inspectOpts);
      for (let i = 0; i < keys.length; i++) {
        debug2.inspectOpts[keys[i]] = exports2.inspectOpts[keys[i]];
      }
    }
    module2.exports = require_common2()(exports2);
    var { formatters } = module2.exports;
    formatters.o = function (v) {
      this.inspectOpts.colors = this.useColors;
      return util
        .inspect(v, this.inspectOpts)
        .split('\n')
        .map((str) => str.trim())
        .join(' ');
    };
    formatters.O = function (v) {
      this.inspectOpts.colors = this.useColors;
      return util.inspect(v, this.inspectOpts);
    };
  },
});

// node_modules/debug/src/index.js
var require_src10 = __commonJS({
  'node_modules/debug/src/index.js'(exports2, module2) {
    'use strict';
    if (
      typeof process === 'undefined' ||
      process.type === 'renderer' ||
      process.browser === true ||
      process.__nwjs
    ) {
      module2.exports = require_browser6();
    } else {
      module2.exports = require_node6();
    }
  },
});

// node_modules/cookiejar/cookiejar.js
var require_cookiejar = __commonJS({
  'node_modules/cookiejar/cookiejar.js'(exports2) {
    'use strict';
    (function () {
      'use strict';
      function CookieAccessInfo(domain, path, secure, script) {
        if (this instanceof CookieAccessInfo) {
          this.domain = domain || void 0;
          this.path = path || '/';
          this.secure = !!secure;
          this.script = !!script;
          return this;
        }
        return new CookieAccessInfo(domain, path, secure, script);
      }
      CookieAccessInfo.All = Object.freeze(/* @__PURE__ */ Object.create(null));
      exports2.CookieAccessInfo = CookieAccessInfo;
      function Cookie2(cookiestr, request_domain, request_path) {
        if (cookiestr instanceof Cookie2) {
          return cookiestr;
        }
        if (this instanceof Cookie2) {
          this.name = null;
          this.value = null;
          this.expiration_date = Infinity;
          this.path = String(request_path || '/');
          this.explicit_path = false;
          this.domain = request_domain || null;
          this.explicit_domain = false;
          this.secure = false;
          this.noscript = false;
          if (cookiestr) {
            this.parse(cookiestr, request_domain, request_path);
          }
          return this;
        }
        return new Cookie2(cookiestr, request_domain, request_path);
      }
      exports2.Cookie = Cookie2;
      Cookie2.prototype.toString = function toString() {
        var str = [this.name + '=' + this.value];
        if (this.expiration_date !== Infinity) {
          str.push('expires=' + new Date(this.expiration_date).toGMTString());
        }
        if (this.domain) {
          str.push('domain=' + this.domain);
        }
        if (this.path) {
          str.push('path=' + this.path);
        }
        if (this.secure) {
          str.push('secure');
        }
        if (this.noscript) {
          str.push('httponly');
        }
        return str.join('; ');
      };
      Cookie2.prototype.toValueString = function toValueString() {
        return this.name + '=' + this.value;
      };
      var cookie_str_splitter = /[:](?=\s*[a-zA-Z0-9_\-]+\s*[=])/g;
      Cookie2.prototype.parse = function parse(
        str,
        request_domain,
        request_path
      ) {
        if (this instanceof Cookie2) {
          if (str.length > 32768) {
            console.warn('Cookie too long for parsing (>32768 characters)');
            return;
          }
          var parts = str.split(';').filter(function (value2) {
            return !!value2;
          });
          var i;
          var pair = parts[0].match(/([^=]+)=([\s\S]*)/);
          if (!pair) {
            console.warn(
              "Invalid cookie header encountered. Header: '" + str + "'"
            );
            return;
          }
          var key = pair[1];
          var value = pair[2];
          if (
            typeof key !== 'string' ||
            key.length === 0 ||
            typeof value !== 'string'
          ) {
            console.warn(
              "Unable to extract values from cookie header. Cookie: '" +
                str +
                "'"
            );
            return;
          }
          this.name = key;
          this.value = value;
          for (i = 1; i < parts.length; i += 1) {
            pair = parts[i].match(/([^=]+)(?:=([\s\S]*))?/);
            key = pair[1].trim().toLowerCase();
            value = pair[2];
            switch (key) {
              case 'httponly':
                this.noscript = true;
                break;
              case 'expires':
                this.expiration_date = value
                  ? Number(Date.parse(value))
                  : Infinity;
                break;
              case 'path':
                this.path = value ? value.trim() : '';
                this.explicit_path = true;
                break;
              case 'domain':
                this.domain = value ? value.trim() : '';
                this.explicit_domain = !!this.domain;
                break;
              case 'secure':
                this.secure = true;
                break;
            }
          }
          if (!this.explicit_path) {
            this.path = request_path || '/';
          }
          if (!this.explicit_domain) {
            this.domain = request_domain;
          }
          return this;
        }
        return new Cookie2().parse(str, request_domain, request_path);
      };
      Cookie2.prototype.matches = function matches(access_info) {
        if (access_info === CookieAccessInfo.All) {
          return true;
        }
        if (
          (this.noscript && access_info.script) ||
          (this.secure && !access_info.secure) ||
          !this.collidesWith(access_info)
        ) {
          return false;
        }
        return true;
      };
      Cookie2.prototype.collidesWith = function collidesWith(access_info) {
        if (
          (this.path && !access_info.path) ||
          (this.domain && !access_info.domain)
        ) {
          return false;
        }
        if (this.path && access_info.path.indexOf(this.path) !== 0) {
          return false;
        }
        if (this.explicit_path && access_info.path.indexOf(this.path) !== 0) {
          return false;
        }
        var access_domain =
          access_info.domain && access_info.domain.replace(/^[\.]/, '');
        var cookie_domain = this.domain && this.domain.replace(/^[\.]/, '');
        if (cookie_domain === access_domain) {
          return true;
        }
        if (cookie_domain) {
          if (!this.explicit_domain) {
            return false;
          }
          var wildcard = access_domain.indexOf(cookie_domain);
          if (
            wildcard === -1 ||
            wildcard !== access_domain.length - cookie_domain.length
          ) {
            return false;
          }
          return true;
        }
        return true;
      };
      function CookieJar() {
        var cookies, cookies_list, collidable_cookie;
        if (this instanceof CookieJar) {
          cookies = /* @__PURE__ */ Object.create(null);
          this.setCookie = function setCookie(
            cookie,
            request_domain,
            request_path
          ) {
            var remove, i;
            cookie = new Cookie2(cookie, request_domain, request_path);
            remove = cookie.expiration_date <= Date.now();
            if (cookies[cookie.name] !== void 0) {
              cookies_list = cookies[cookie.name];
              for (i = 0; i < cookies_list.length; i += 1) {
                collidable_cookie = cookies_list[i];
                if (collidable_cookie.collidesWith(cookie)) {
                  if (remove) {
                    cookies_list.splice(i, 1);
                    if (cookies_list.length === 0) {
                      delete cookies[cookie.name];
                    }
                    return false;
                  }
                  cookies_list[i] = cookie;
                  return cookie;
                }
              }
              if (remove) {
                return false;
              }
              cookies_list.push(cookie);
              return cookie;
            }
            if (remove) {
              return false;
            }
            cookies[cookie.name] = [cookie];
            return cookies[cookie.name];
          };
          this.getCookie = function getCookie(cookie_name, access_info) {
            var cookie, i;
            cookies_list = cookies[cookie_name];
            if (!cookies_list) {
              return;
            }
            for (i = 0; i < cookies_list.length; i += 1) {
              cookie = cookies_list[i];
              if (cookie.expiration_date <= Date.now()) {
                if (cookies_list.length === 0) {
                  delete cookies[cookie.name];
                }
                continue;
              }
              if (cookie.matches(access_info)) {
                return cookie;
              }
            }
          };
          this.getCookies = function getCookies(access_info) {
            var matches = [],
              cookie_name,
              cookie;
            for (cookie_name in cookies) {
              cookie = this.getCookie(cookie_name, access_info);
              if (cookie) {
                matches.push(cookie);
              }
            }
            matches.toString = function toString() {
              return matches.join(':');
            };
            matches.toValueString = function toValueString() {
              return matches
                .map(function (c2) {
                  return c2.toValueString();
                })
                .join('; ');
            };
            return matches;
          };
          return this;
        }
        return new CookieJar();
      }
      exports2.CookieJar = CookieJar;
      CookieJar.prototype.setCookies = function setCookies(
        cookies,
        request_domain,
        request_path
      ) {
        cookies = Array.isArray(cookies)
          ? cookies
          : cookies.split(cookie_str_splitter);
        var successful = [],
          i,
          cookie;
        cookies = cookies.map(function (item) {
          return new Cookie2(item, request_domain, request_path);
        });
        for (i = 0; i < cookies.length; i += 1) {
          cookie = cookies[i];
          if (this.setCookie(cookie, request_domain, request_path)) {
            successful.push(cookie);
          }
        }
        return successful;
      };
    })();
  },
});

// node_modules/superagent/node_modules/semver/internal/constants.js
var require_constants = __commonJS({
  'node_modules/superagent/node_modules/semver/internal/constants.js'(
    exports2,
    module2
  ) {
    'use strict';
    var SEMVER_SPEC_VERSION = '2.0.0';
    var MAX_LENGTH = 256;
    var MAX_SAFE_INTEGER =
      Number.MAX_SAFE_INTEGER /* istanbul ignore next */ || 9007199254740991;
    var MAX_SAFE_COMPONENT_LENGTH = 16;
    var MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6;
    var RELEASE_TYPES = [
      'major',
      'premajor',
      'minor',
      'preminor',
      'patch',
      'prepatch',
      'prerelease',
    ];
    module2.exports = {
      MAX_LENGTH,
      MAX_SAFE_COMPONENT_LENGTH,
      MAX_SAFE_BUILD_LENGTH,
      MAX_SAFE_INTEGER,
      RELEASE_TYPES,
      SEMVER_SPEC_VERSION,
      FLAG_INCLUDE_PRERELEASE: 1,
      FLAG_LOOSE: 2,
    };
  },
});

// node_modules/superagent/node_modules/semver/internal/debug.js
var require_debug6 = __commonJS({
  'node_modules/superagent/node_modules/semver/internal/debug.js'(
    exports2,
    module2
  ) {
    'use strict';
    var debug2 =
      typeof process === 'object' &&
      process.env &&
      process.env.NODE_DEBUG &&
      /\bsemver\b/i.test(process.env.NODE_DEBUG)
        ? (...args) => console.error('SEMVER', ...args)
        : () => {};
    module2.exports = debug2;
  },
});

// node_modules/superagent/node_modules/semver/internal/re.js
var require_re = __commonJS({
  'node_modules/superagent/node_modules/semver/internal/re.js'(
    exports2,
    module2
  ) {
    'use strict';
    var { MAX_SAFE_COMPONENT_LENGTH, MAX_SAFE_BUILD_LENGTH, MAX_LENGTH } =
      require_constants();
    var debug2 = require_debug6();
    exports2 = module2.exports = {};
    var re2 = (exports2.re = []);
    var safeRe = (exports2.safeRe = []);
    var src = (exports2.src = []);
    var t2 = (exports2.t = {});
    var R = 0;
    var LETTERDASHNUMBER = '[a-zA-Z0-9-]';
    var safeRegexReplacements = [
      ['\\s', 1],
      ['\\d', MAX_LENGTH],
      [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH],
    ];
    var makeSafeRegex = (value) => {
      for (const [token2, max] of safeRegexReplacements) {
        value = value
          .split(`${token2}*`)
          .join(`${token2}{0,${max}}`)
          .split(`${token2}+`)
          .join(`${token2}{1,${max}}`);
      }
      return value;
    };
    var createToken = (name, value, isGlobal) => {
      const safe = makeSafeRegex(value);
      const index = R++;
      debug2(name, index, value);
      t2[name] = index;
      src[index] = value;
      re2[index] = new RegExp(value, isGlobal ? 'g' : void 0);
      safeRe[index] = new RegExp(safe, isGlobal ? 'g' : void 0);
    };
    createToken('NUMERICIDENTIFIER', '0|[1-9]\\d*');
    createToken('NUMERICIDENTIFIERLOOSE', '\\d+');
    createToken('NONNUMERICIDENTIFIER', `\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`);
    createToken(
      'MAINVERSION',
      `(${src[t2.NUMERICIDENTIFIER]})\\.(${src[t2.NUMERICIDENTIFIER]})\\.(${
        src[t2.NUMERICIDENTIFIER]
      })`
    );
    createToken(
      'MAINVERSIONLOOSE',
      `(${src[t2.NUMERICIDENTIFIERLOOSE]})\\.(${
        src[t2.NUMERICIDENTIFIERLOOSE]
      })\\.(${src[t2.NUMERICIDENTIFIERLOOSE]})`
    );
    createToken(
      'PRERELEASEIDENTIFIER',
      `(?:${src[t2.NUMERICIDENTIFIER]}|${src[t2.NONNUMERICIDENTIFIER]})`
    );
    createToken(
      'PRERELEASEIDENTIFIERLOOSE',
      `(?:${src[t2.NUMERICIDENTIFIERLOOSE]}|${src[t2.NONNUMERICIDENTIFIER]})`
    );
    createToken(
      'PRERELEASE',
      `(?:-(${src[t2.PRERELEASEIDENTIFIER]}(?:\\.${
        src[t2.PRERELEASEIDENTIFIER]
      })*))`
    );
    createToken(
      'PRERELEASELOOSE',
      `(?:-?(${src[t2.PRERELEASEIDENTIFIERLOOSE]}(?:\\.${
        src[t2.PRERELEASEIDENTIFIERLOOSE]
      })*))`
    );
    createToken('BUILDIDENTIFIER', `${LETTERDASHNUMBER}+`);
    createToken(
      'BUILD',
      `(?:\\+(${src[t2.BUILDIDENTIFIER]}(?:\\.${src[t2.BUILDIDENTIFIER]})*))`
    );
    createToken(
      'FULLPLAIN',
      `v?${src[t2.MAINVERSION]}${src[t2.PRERELEASE]}?${src[t2.BUILD]}?`
    );
    createToken('FULL', `^${src[t2.FULLPLAIN]}$`);
    createToken(
      'LOOSEPLAIN',
      `[v=\\s]*${src[t2.MAINVERSIONLOOSE]}${src[t2.PRERELEASELOOSE]}?${
        src[t2.BUILD]
      }?`
    );
    createToken('LOOSE', `^${src[t2.LOOSEPLAIN]}$`);
    createToken('GTLT', '((?:<|>)?=?)');
    createToken(
      'XRANGEIDENTIFIERLOOSE',
      `${src[t2.NUMERICIDENTIFIERLOOSE]}|x|X|\\*`
    );
    createToken('XRANGEIDENTIFIER', `${src[t2.NUMERICIDENTIFIER]}|x|X|\\*`);
    createToken(
      'XRANGEPLAIN',
      `[v=\\s]*(${src[t2.XRANGEIDENTIFIER]})(?:\\.(${
        src[t2.XRANGEIDENTIFIER]
      })(?:\\.(${src[t2.XRANGEIDENTIFIER]})(?:${src[t2.PRERELEASE]})?${
        src[t2.BUILD]
      }?)?)?`
    );
    createToken(
      'XRANGEPLAINLOOSE',
      `[v=\\s]*(${src[t2.XRANGEIDENTIFIERLOOSE]})(?:\\.(${
        src[t2.XRANGEIDENTIFIERLOOSE]
      })(?:\\.(${src[t2.XRANGEIDENTIFIERLOOSE]})(?:${
        src[t2.PRERELEASELOOSE]
      })?${src[t2.BUILD]}?)?)?`
    );
    createToken('XRANGE', `^${src[t2.GTLT]}\\s*${src[t2.XRANGEPLAIN]}$`);
    createToken(
      'XRANGELOOSE',
      `^${src[t2.GTLT]}\\s*${src[t2.XRANGEPLAINLOOSE]}$`
    );
    createToken(
      'COERCE',
      `${'(^|[^\\d])(\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})(?:\\.(\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?(?:\\.(\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?(?:$|[^\\d])`
    );
    createToken('COERCERTL', src[t2.COERCE], true);
    createToken('LONETILDE', '(?:~>?)');
    createToken('TILDETRIM', `(\\s*)${src[t2.LONETILDE]}\\s+`, true);
    exports2.tildeTrimReplace = '$1~';
    createToken('TILDE', `^${src[t2.LONETILDE]}${src[t2.XRANGEPLAIN]}$`);
    createToken(
      'TILDELOOSE',
      `^${src[t2.LONETILDE]}${src[t2.XRANGEPLAINLOOSE]}$`
    );
    createToken('LONECARET', '(?:\\^)');
    createToken('CARETTRIM', `(\\s*)${src[t2.LONECARET]}\\s+`, true);
    exports2.caretTrimReplace = '$1^';
    createToken('CARET', `^${src[t2.LONECARET]}${src[t2.XRANGEPLAIN]}$`);
    createToken(
      'CARETLOOSE',
      `^${src[t2.LONECARET]}${src[t2.XRANGEPLAINLOOSE]}$`
    );
    createToken(
      'COMPARATORLOOSE',
      `^${src[t2.GTLT]}\\s*(${src[t2.LOOSEPLAIN]})$|^$`
    );
    createToken('COMPARATOR', `^${src[t2.GTLT]}\\s*(${src[t2.FULLPLAIN]})$|^$`);
    createToken(
      'COMPARATORTRIM',
      `(\\s*)${src[t2.GTLT]}\\s*(${src[t2.LOOSEPLAIN]}|${src[t2.XRANGEPLAIN]})`,
      true
    );
    exports2.comparatorTrimReplace = '$1$2$3';
    createToken(
      'HYPHENRANGE',
      `^\\s*(${src[t2.XRANGEPLAIN]})\\s+-\\s+(${src[t2.XRANGEPLAIN]})\\s*$`
    );
    createToken(
      'HYPHENRANGELOOSE',
      `^\\s*(${src[t2.XRANGEPLAINLOOSE]})\\s+-\\s+(${
        src[t2.XRANGEPLAINLOOSE]
      })\\s*$`
    );
    createToken('STAR', '(<|>)?=?\\s*\\*');
    createToken('GTE0', '^\\s*>=\\s*0\\.0\\.0\\s*$');
    createToken('GTE0PRE', '^\\s*>=\\s*0\\.0\\.0-0\\s*$');
  },
});

// node_modules/superagent/node_modules/semver/internal/parse-options.js
var require_parse_options = __commonJS({
  'node_modules/superagent/node_modules/semver/internal/parse-options.js'(
    exports2,
    module2
  ) {
    'use strict';
    var looseOption = Object.freeze({ loose: true });
    var emptyOpts = Object.freeze({});
    var parseOptions = (options) => {
      if (!options) {
        return emptyOpts;
      }
      if (typeof options !== 'object') {
        return looseOption;
      }
      return options;
    };
    module2.exports = parseOptions;
  },
});

// node_modules/superagent/node_modules/semver/internal/identifiers.js
var require_identifiers = __commonJS({
  'node_modules/superagent/node_modules/semver/internal/identifiers.js'(
    exports2,
    module2
  ) {
    'use strict';
    var numeric = /^[0-9]+$/;
    var compareIdentifiers = (a, b) => {
      const anum = numeric.test(a);
      const bnum = numeric.test(b);
      if (anum && bnum) {
        a = +a;
        b = +b;
      }
      return a === b
        ? 0
        : anum && !bnum
        ? -1
        : bnum && !anum
        ? 1
        : a < b
        ? -1
        : 1;
    };
    var rcompareIdentifiers = (a, b) => compareIdentifiers(b, a);
    module2.exports = {
      compareIdentifiers,
      rcompareIdentifiers,
    };
  },
});

// node_modules/superagent/node_modules/semver/classes/semver.js
var require_semver = __commonJS({
  'node_modules/superagent/node_modules/semver/classes/semver.js'(
    exports2,
    module2
  ) {
    'use strict';
    var debug2 = require_debug6();
    var { MAX_LENGTH, MAX_SAFE_INTEGER } = require_constants();
    var { safeRe: re2, t: t2 } = require_re();
    var parseOptions = require_parse_options();
    var { compareIdentifiers } = require_identifiers();
    var SemVer = class _SemVer {
      constructor(version, options) {
        options = parseOptions(options);
        if (version instanceof _SemVer) {
          if (
            version.loose === !!options.loose &&
            version.includePrerelease === !!options.includePrerelease
          ) {
            return version;
          } else {
            version = version.version;
          }
        } else if (typeof version !== 'string') {
          throw new TypeError(
            `Invalid version. Must be a string. Got type "${typeof version}".`
          );
        }
        if (version.length > MAX_LENGTH) {
          throw new TypeError(
            `version is longer than ${MAX_LENGTH} characters`
          );
        }
        debug2('SemVer', version, options);
        this.options = options;
        this.loose = !!options.loose;
        this.includePrerelease = !!options.includePrerelease;
        const m2 = version
          .trim()
          .match(options.loose ? re2[t2.LOOSE] : re2[t2.FULL]);
        if (!m2) {
          throw new TypeError(`Invalid Version: ${version}`);
        }
        this.raw = version;
        this.major = +m2[1];
        this.minor = +m2[2];
        this.patch = +m2[3];
        if (this.major > MAX_SAFE_INTEGER || this.major < 0) {
          throw new TypeError('Invalid major version');
        }
        if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {
          throw new TypeError('Invalid minor version');
        }
        if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {
          throw new TypeError('Invalid patch version');
        }
        if (!m2[4]) {
          this.prerelease = [];
        } else {
          this.prerelease = m2[4].split('.').map((id) => {
            if (/^[0-9]+$/.test(id)) {
              const num = +id;
              if (num >= 0 && num < MAX_SAFE_INTEGER) {
                return num;
              }
            }
            return id;
          });
        }
        this.build = m2[5] ? m2[5].split('.') : [];
        this.format();
      }
      format() {
        this.version = `${this.major}.${this.minor}.${this.patch}`;
        if (this.prerelease.length) {
          this.version += `-${this.prerelease.join('.')}`;
        }
        return this.version;
      }
      toString() {
        return this.version;
      }
      compare(other) {
        debug2('SemVer.compare', this.version, this.options, other);
        if (!(other instanceof _SemVer)) {
          if (typeof other === 'string' && other === this.version) {
            return 0;
          }
          other = new _SemVer(other, this.options);
        }
        if (other.version === this.version) {
          return 0;
        }
        return this.compareMain(other) || this.comparePre(other);
      }
      compareMain(other) {
        if (!(other instanceof _SemVer)) {
          other = new _SemVer(other, this.options);
        }
        return (
          compareIdentifiers(this.major, other.major) ||
          compareIdentifiers(this.minor, other.minor) ||
          compareIdentifiers(this.patch, other.patch)
        );
      }
      comparePre(other) {
        if (!(other instanceof _SemVer)) {
          other = new _SemVer(other, this.options);
        }
        if (this.prerelease.length && !other.prerelease.length) {
          return -1;
        } else if (!this.prerelease.length && other.prerelease.length) {
          return 1;
        } else if (!this.prerelease.length && !other.prerelease.length) {
          return 0;
        }
        let i = 0;
        do {
          const a = this.prerelease[i];
          const b = other.prerelease[i];
          debug2('prerelease compare', i, a, b);
          if (a === void 0 && b === void 0) {
            return 0;
          } else if (b === void 0) {
            return 1;
          } else if (a === void 0) {
            return -1;
          } else if (a === b) {
            continue;
          } else {
            return compareIdentifiers(a, b);
          }
        } while (++i);
      }
      compareBuild(other) {
        if (!(other instanceof _SemVer)) {
          other = new _SemVer(other, this.options);
        }
        let i = 0;
        do {
          const a = this.build[i];
          const b = other.build[i];
          debug2('prerelease compare', i, a, b);
          if (a === void 0 && b === void 0) {
            return 0;
          } else if (b === void 0) {
            return 1;
          } else if (a === void 0) {
            return -1;
          } else if (a === b) {
            continue;
          } else {
            return compareIdentifiers(a, b);
          }
        } while (++i);
      }
      // preminor will bump the version up to the next minor release, and immediately
      // down to pre-release. premajor and prepatch work the same way.
      inc(release, identifier, identifierBase) {
        switch (release) {
          case 'premajor':
            this.prerelease.length = 0;
            this.patch = 0;
            this.minor = 0;
            this.major++;
            this.inc('pre', identifier, identifierBase);
            break;
          case 'preminor':
            this.prerelease.length = 0;
            this.patch = 0;
            this.minor++;
            this.inc('pre', identifier, identifierBase);
            break;
          case 'prepatch':
            this.prerelease.length = 0;
            this.inc('patch', identifier, identifierBase);
            this.inc('pre', identifier, identifierBase);
            break;
          case 'prerelease':
            if (this.prerelease.length === 0) {
              this.inc('patch', identifier, identifierBase);
            }
            this.inc('pre', identifier, identifierBase);
            break;
          case 'major':
            if (
              this.minor !== 0 ||
              this.patch !== 0 ||
              this.prerelease.length === 0
            ) {
              this.major++;
            }
            this.minor = 0;
            this.patch = 0;
            this.prerelease = [];
            break;
          case 'minor':
            if (this.patch !== 0 || this.prerelease.length === 0) {
              this.minor++;
            }
            this.patch = 0;
            this.prerelease = [];
            break;
          case 'patch':
            if (this.prerelease.length === 0) {
              this.patch++;
            }
            this.prerelease = [];
            break;
          case 'pre': {
            const base = Number(identifierBase) ? 1 : 0;
            if (!identifier && identifierBase === false) {
              throw new Error(
                'invalid increment argument: identifier is empty'
              );
            }
            if (this.prerelease.length === 0) {
              this.prerelease = [base];
            } else {
              let i = this.prerelease.length;
              while (--i >= 0) {
                if (typeof this.prerelease[i] === 'number') {
                  this.prerelease[i]++;
                  i = -2;
                }
              }
              if (i === -1) {
                if (
                  identifier === this.prerelease.join('.') &&
                  identifierBase === false
                ) {
                  throw new Error(
                    'invalid increment argument: identifier already exists'
                  );
                }
                this.prerelease.push(base);
              }
            }
            if (identifier) {
              let prerelease = [identifier, base];
              if (identifierBase === false) {
                prerelease = [identifier];
              }
              if (compareIdentifiers(this.prerelease[0], identifier) === 0) {
                if (isNaN(this.prerelease[1])) {
                  this.prerelease = prerelease;
                }
              } else {
                this.prerelease = prerelease;
              }
            }
            break;
          }
          default:
            throw new Error(`invalid increment argument: ${release}`);
        }
        this.raw = this.format();
        if (this.build.length) {
          this.raw += `+${this.build.join('.')}`;
        }
        return this;
      }
    };
    module2.exports = SemVer;
  },
});

// node_modules/superagent/node_modules/semver/functions/parse.js
var require_parse3 = __commonJS({
  'node_modules/superagent/node_modules/semver/functions/parse.js'(
    exports2,
    module2
  ) {
    'use strict';
    var SemVer = require_semver();
    var parse = (version, options, throwErrors = false) => {
      if (version instanceof SemVer) {
        return version;
      }
      try {
        return new SemVer(version, options);
      } catch (er) {
        if (!throwErrors) {
          return null;
        }
        throw er;
      }
    };
    module2.exports = parse;
  },
});

// node_modules/superagent/node_modules/semver/functions/valid.js
var require_valid = __commonJS({
  'node_modules/superagent/node_modules/semver/functions/valid.js'(
    exports2,
    module2
  ) {
    'use strict';
    var parse = require_parse3();
    var valid = (version, options) => {
      const v = parse(version, options);
      return v ? v.version : null;
    };
    module2.exports = valid;
  },
});

// node_modules/superagent/node_modules/semver/functions/clean.js
var require_clean = __commonJS({
  'node_modules/superagent/node_modules/semver/functions/clean.js'(
    exports2,
    module2
  ) {
    'use strict';
    var parse = require_parse3();
    var clean = (version, options) => {
      const s2 = parse(version.trim().replace(/^[=v]+/, ''), options);
      return s2 ? s2.version : null;
    };
    module2.exports = clean;
  },
});

// node_modules/superagent/node_modules/semver/functions/inc.js
var require_inc = __commonJS({
  'node_modules/superagent/node_modules/semver/functions/inc.js'(
    exports2,
    module2
  ) {
    'use strict';
    var SemVer = require_semver();
    var inc = (version, release, options, identifier, identifierBase) => {
      if (typeof options === 'string') {
        identifierBase = identifier;
        identifier = options;
        options = void 0;
      }
      try {
        return new SemVer(
          version instanceof SemVer ? version.version : version,
          options
        ).inc(release, identifier, identifierBase).version;
      } catch (er) {
        return null;
      }
    };
    module2.exports = inc;
  },
});

// node_modules/superagent/node_modules/semver/functions/diff.js
var require_diff = __commonJS({
  'node_modules/superagent/node_modules/semver/functions/diff.js'(
    exports2,
    module2
  ) {
    'use strict';
    var parse = require_parse3();
    var diff = (version1, version2) => {
      const v1 = parse(version1, null, true);
      const v2 = parse(version2, null, true);
      const comparison = v1.compare(v2);
      if (comparison === 0) {
        return null;
      }
      const v1Higher = comparison > 0;
      const highVersion = v1Higher ? v1 : v2;
      const lowVersion = v1Higher ? v2 : v1;
      const highHasPre = !!highVersion.prerelease.length;
      const lowHasPre = !!lowVersion.prerelease.length;
      if (lowHasPre && !highHasPre) {
        if (!lowVersion.patch && !lowVersion.minor) {
          return 'major';
        }
        if (highVersion.patch) {
          return 'patch';
        }
        if (highVersion.minor) {
          return 'minor';
        }
        return 'major';
      }
      const prefix = highHasPre ? 'pre' : '';
      if (v1.major !== v2.major) {
        return prefix + 'major';
      }
      if (v1.minor !== v2.minor) {
        return prefix + 'minor';
      }
      if (v1.patch !== v2.patch) {
        return prefix + 'patch';
      }
      return 'prerelease';
    };
    module2.exports = diff;
  },
});

// node_modules/superagent/node_modules/semver/functions/major.js
var require_major = __commonJS({
  'node_modules/superagent/node_modules/semver/functions/major.js'(
    exports2,
    module2
  ) {
    'use strict';
    var SemVer = require_semver();
    var major = (a, loose) => new SemVer(a, loose).major;
    module2.exports = major;
  },
});

// node_modules/superagent/node_modules/semver/functions/minor.js
var require_minor = __commonJS({
  'node_modules/superagent/node_modules/semver/functions/minor.js'(
    exports2,
    module2
  ) {
    'use strict';
    var SemVer = require_semver();
    var minor = (a, loose) => new SemVer(a, loose).minor;
    module2.exports = minor;
  },
});

// node_modules/superagent/node_modules/semver/functions/patch.js
var require_patch = __commonJS({
  'node_modules/superagent/node_modules/semver/functions/patch.js'(
    exports2,
    module2
  ) {
    'use strict';
    var SemVer = require_semver();
    var patch = (a, loose) => new SemVer(a, loose).patch;
    module2.exports = patch;
  },
});

// node_modules/superagent/node_modules/semver/functions/prerelease.js
var require_prerelease = __commonJS({
  'node_modules/superagent/node_modules/semver/functions/prerelease.js'(
    exports2,
    module2
  ) {
    'use strict';
    var parse = require_parse3();
    var prerelease = (version, options) => {
      const parsed = parse(version, options);
      return parsed && parsed.prerelease.length ? parsed.prerelease : null;
    };
    module2.exports = prerelease;
  },
});

// node_modules/superagent/node_modules/semver/functions/compare.js
var require_compare = __commonJS({
  'node_modules/superagent/node_modules/semver/functions/compare.js'(
    exports2,
    module2
  ) {
    'use strict';
    var SemVer = require_semver();
    var compare = (a, b, loose) =>
      new SemVer(a, loose).compare(new SemVer(b, loose));
    module2.exports = compare;
  },
});

// node_modules/superagent/node_modules/semver/functions/rcompare.js
var require_rcompare = __commonJS({
  'node_modules/superagent/node_modules/semver/functions/rcompare.js'(
    exports2,
    module2
  ) {
    'use strict';
    var compare = require_compare();
    var rcompare = (a, b, loose) => compare(b, a, loose);
    module2.exports = rcompare;
  },
});

// node_modules/superagent/node_modules/semver/functions/compare-loose.js
var require_compare_loose = __commonJS({
  'node_modules/superagent/node_modules/semver/functions/compare-loose.js'(
    exports2,
    module2
  ) {
    'use strict';
    var compare = require_compare();
    var compareLoose = (a, b) => compare(a, b, true);
    module2.exports = compareLoose;
  },
});

// node_modules/superagent/node_modules/semver/functions/compare-build.js
var require_compare_build = __commonJS({
  'node_modules/superagent/node_modules/semver/functions/compare-build.js'(
    exports2,
    module2
  ) {
    'use strict';
    var SemVer = require_semver();
    var compareBuild = (a, b, loose) => {
      const versionA = new SemVer(a, loose);
      const versionB = new SemVer(b, loose);
      return versionA.compare(versionB) || versionA.compareBuild(versionB);
    };
    module2.exports = compareBuild;
  },
});

// node_modules/superagent/node_modules/semver/functions/sort.js
var require_sort = __commonJS({
  'node_modules/superagent/node_modules/semver/functions/sort.js'(
    exports2,
    module2
  ) {
    'use strict';
    var compareBuild = require_compare_build();
    var sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose));
    module2.exports = sort;
  },
});

// node_modules/superagent/node_modules/semver/functions/rsort.js
var require_rsort = __commonJS({
  'node_modules/superagent/node_modules/semver/functions/rsort.js'(
    exports2,
    module2
  ) {
    'use strict';
    var compareBuild = require_compare_build();
    var rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose));
    module2.exports = rsort;
  },
});

// node_modules/superagent/node_modules/semver/functions/gt.js
var require_gt = __commonJS({
  'node_modules/superagent/node_modules/semver/functions/gt.js'(
    exports2,
    module2
  ) {
    'use strict';
    var compare = require_compare();
    var gt2 = (a, b, loose) => compare(a, b, loose) > 0;
    module2.exports = gt2;
  },
});

// node_modules/superagent/node_modules/semver/functions/lt.js
var require_lt = __commonJS({
  'node_modules/superagent/node_modules/semver/functions/lt.js'(
    exports2,
    module2
  ) {
    'use strict';
    var compare = require_compare();
    var lt2 = (a, b, loose) => compare(a, b, loose) < 0;
    module2.exports = lt2;
  },
});

// node_modules/superagent/node_modules/semver/functions/eq.js
var require_eq = __commonJS({
  'node_modules/superagent/node_modules/semver/functions/eq.js'(
    exports2,
    module2
  ) {
    'use strict';
    var compare = require_compare();
    var eq = (a, b, loose) => compare(a, b, loose) === 0;
    module2.exports = eq;
  },
});

// node_modules/superagent/node_modules/semver/functions/neq.js
var require_neq = __commonJS({
  'node_modules/superagent/node_modules/semver/functions/neq.js'(
    exports2,
    module2
  ) {
    'use strict';
    var compare = require_compare();
    var neq = (a, b, loose) => compare(a, b, loose) !== 0;
    module2.exports = neq;
  },
});

// node_modules/superagent/node_modules/semver/functions/gte.js
var require_gte = __commonJS({
  'node_modules/superagent/node_modules/semver/functions/gte.js'(
    exports2,
    module2
  ) {
    'use strict';
    var compare = require_compare();
    var gte = (a, b, loose) => compare(a, b, loose) >= 0;
    module2.exports = gte;
  },
});

// node_modules/superagent/node_modules/semver/functions/lte.js
var require_lte = __commonJS({
  'node_modules/superagent/node_modules/semver/functions/lte.js'(
    exports2,
    module2
  ) {
    'use strict';
    var compare = require_compare();
    var lte = (a, b, loose) => compare(a, b, loose) <= 0;
    module2.exports = lte;
  },
});

// node_modules/superagent/node_modules/semver/functions/cmp.js
var require_cmp = __commonJS({
  'node_modules/superagent/node_modules/semver/functions/cmp.js'(
    exports2,
    module2
  ) {
    'use strict';
    var eq = require_eq();
    var neq = require_neq();
    var gt2 = require_gt();
    var gte = require_gte();
    var lt2 = require_lt();
    var lte = require_lte();
    var cmp = (a, op2, b, loose) => {
      switch (op2) {
        case '===':
          if (typeof a === 'object') {
            a = a.version;
          }
          if (typeof b === 'object') {
            b = b.version;
          }
          return a === b;
        case '!==':
          if (typeof a === 'object') {
            a = a.version;
          }
          if (typeof b === 'object') {
            b = b.version;
          }
          return a !== b;
        case '':
        case '=':
        case '==':
          return eq(a, b, loose);
        case '!=':
          return neq(a, b, loose);
        case '>':
          return gt2(a, b, loose);
        case '>=':
          return gte(a, b, loose);
        case '<':
          return lt2(a, b, loose);
        case '<=':
          return lte(a, b, loose);
        default:
          throw new TypeError(`Invalid operator: ${op2}`);
      }
    };
    module2.exports = cmp;
  },
});

// node_modules/superagent/node_modules/semver/functions/coerce.js
var require_coerce = __commonJS({
  'node_modules/superagent/node_modules/semver/functions/coerce.js'(
    exports2,
    module2
  ) {
    'use strict';
    var SemVer = require_semver();
    var parse = require_parse3();
    var { safeRe: re2, t: t2 } = require_re();
    var coerce = (version, options) => {
      if (version instanceof SemVer) {
        return version;
      }
      if (typeof version === 'number') {
        version = String(version);
      }
      if (typeof version !== 'string') {
        return null;
      }
      options = options || {};
      let match = null;
      if (!options.rtl) {
        match = version.match(re2[t2.COERCE]);
      } else {
        let next;
        while (
          (next = re2[t2.COERCERTL].exec(version)) &&
          (!match || match.index + match[0].length !== version.length)
        ) {
          if (
            !match ||
            next.index + next[0].length !== match.index + match[0].length
          ) {
            match = next;
          }
          re2[t2.COERCERTL].lastIndex =
            next.index + next[1].length + next[2].length;
        }
        re2[t2.COERCERTL].lastIndex = -1;
      }
      if (match === null) {
        return null;
      }
      return parse(
        `${match[2]}.${match[3] || '0'}.${match[4] || '0'}`,
        options
      );
    };
    module2.exports = coerce;
  },
});

// node_modules/superagent/node_modules/yallist/iterator.js
var require_iterator = __commonJS({
  'node_modules/superagent/node_modules/yallist/iterator.js'(
    exports2,
    module2
  ) {
    'use strict';
    module2.exports = function (Yallist) {
      Yallist.prototype[Symbol.iterator] = function* () {
        for (let walker = this.head; walker; walker = walker.next) {
          yield walker.value;
        }
      };
    };
  },
});

// node_modules/superagent/node_modules/yallist/yallist.js
var require_yallist = __commonJS({
  'node_modules/superagent/node_modules/yallist/yallist.js'(exports2, module2) {
    'use strict';
    module2.exports = Yallist;
    Yallist.Node = Node2;
    Yallist.create = Yallist;
    function Yallist(list) {
      var self2 = this;
      if (!(self2 instanceof Yallist)) {
        self2 = new Yallist();
      }
      self2.tail = null;
      self2.head = null;
      self2.length = 0;
      if (list && typeof list.forEach === 'function') {
        list.forEach(function (item) {
          self2.push(item);
        });
      } else if (arguments.length > 0) {
        for (var i = 0, l2 = arguments.length; i < l2; i++) {
          self2.push(arguments[i]);
        }
      }
      return self2;
    }
    Yallist.prototype.removeNode = function (node) {
      if (node.list !== this) {
        throw new Error('removing node which does not belong to this list');
      }
      var next = node.next;
      var prev = node.prev;
      if (next) {
        next.prev = prev;
      }
      if (prev) {
        prev.next = next;
      }
      if (node === this.head) {
        this.head = next;
      }
      if (node === this.tail) {
        this.tail = prev;
      }
      node.list.length--;
      node.next = null;
      node.prev = null;
      node.list = null;
      return next;
    };
    Yallist.prototype.unshiftNode = function (node) {
      if (node === this.head) {
        return;
      }
      if (node.list) {
        node.list.removeNode(node);
      }
      var head = this.head;
      node.list = this;
      node.next = head;
      if (head) {
        head.prev = node;
      }
      this.head = node;
      if (!this.tail) {
        this.tail = node;
      }
      this.length++;
    };
    Yallist.prototype.pushNode = function (node) {
      if (node === this.tail) {
        return;
      }
      if (node.list) {
        node.list.removeNode(node);
      }
      var tail = this.tail;
      node.list = this;
      node.prev = tail;
      if (tail) {
        tail.next = node;
      }
      this.tail = node;
      if (!this.head) {
        this.head = node;
      }
      this.length++;
    };
    Yallist.prototype.push = function () {
      for (var i = 0, l2 = arguments.length; i < l2; i++) {
        push(this, arguments[i]);
      }
      return this.length;
    };
    Yallist.prototype.unshift = function () {
      for (var i = 0, l2 = arguments.length; i < l2; i++) {
        unshift(this, arguments[i]);
      }
      return this.length;
    };
    Yallist.prototype.pop = function () {
      if (!this.tail) {
        return void 0;
      }
      var res = this.tail.value;
      this.tail = this.tail.prev;
      if (this.tail) {
        this.tail.next = null;
      } else {
        this.head = null;
      }
      this.length--;
      return res;
    };
    Yallist.prototype.shift = function () {
      if (!this.head) {
        return void 0;
      }
      var res = this.head.value;
      this.head = this.head.next;
      if (this.head) {
        this.head.prev = null;
      } else {
        this.tail = null;
      }
      this.length--;
      return res;
    };
    Yallist.prototype.forEach = function (fn, thisp) {
      thisp = thisp || this;
      for (var walker = this.head, i = 0; walker !== null; i++) {
        fn.call(thisp, walker.value, i, this);
        walker = walker.next;
      }
    };
    Yallist.prototype.forEachReverse = function (fn, thisp) {
      thisp = thisp || this;
      for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {
        fn.call(thisp, walker.value, i, this);
        walker = walker.prev;
      }
    };
    Yallist.prototype.get = function (n2) {
      for (var i = 0, walker = this.head; walker !== null && i < n2; i++) {
        walker = walker.next;
      }
      if (i === n2 && walker !== null) {
        return walker.value;
      }
    };
    Yallist.prototype.getReverse = function (n2) {
      for (var i = 0, walker = this.tail; walker !== null && i < n2; i++) {
        walker = walker.prev;
      }
      if (i === n2 && walker !== null) {
        return walker.value;
      }
    };
    Yallist.prototype.map = function (fn, thisp) {
      thisp = thisp || this;
      var res = new Yallist();
      for (var walker = this.head; walker !== null; ) {
        res.push(fn.call(thisp, walker.value, this));
        walker = walker.next;
      }
      return res;
    };
    Yallist.prototype.mapReverse = function (fn, thisp) {
      thisp = thisp || this;
      var res = new Yallist();
      for (var walker = this.tail; walker !== null; ) {
        res.push(fn.call(thisp, walker.value, this));
        walker = walker.prev;
      }
      return res;
    };
    Yallist.prototype.reduce = function (fn, initial) {
      var acc;
      var walker = this.head;
      if (arguments.length > 1) {
        acc = initial;
      } else if (this.head) {
        walker = this.head.next;
        acc = this.head.value;
      } else {
        throw new TypeError('Reduce of empty list with no initial value');
      }
      for (var i = 0; walker !== null; i++) {
        acc = fn(acc, walker.value, i);
        walker = walker.next;
      }
      return acc;
    };
    Yallist.prototype.reduceReverse = function (fn, initial) {
      var acc;
      var walker = this.tail;
      if (arguments.length > 1) {
        acc = initial;
      } else if (this.tail) {
        walker = this.tail.prev;
        acc = this.tail.value;
      } else {
        throw new TypeError('Reduce of empty list with no initial value');
      }
      for (var i = this.length - 1; walker !== null; i--) {
        acc = fn(acc, walker.value, i);
        walker = walker.prev;
      }
      return acc;
    };
    Yallist.prototype.toArray = function () {
      var arr = new Array(this.length);
      for (var i = 0, walker = this.head; walker !== null; i++) {
        arr[i] = walker.value;
        walker = walker.next;
      }
      return arr;
    };
    Yallist.prototype.toArrayReverse = function () {
      var arr = new Array(this.length);
      for (var i = 0, walker = this.tail; walker !== null; i++) {
        arr[i] = walker.value;
        walker = walker.prev;
      }
      return arr;
    };
    Yallist.prototype.slice = function (from, to2) {
      to2 = to2 || this.length;
      if (to2 < 0) {
        to2 += this.length;
      }
      from = from || 0;
      if (from < 0) {
        from += this.length;
      }
      var ret = new Yallist();
      if (to2 < from || to2 < 0) {
        return ret;
      }
      if (from < 0) {
        from = 0;
      }
      if (to2 > this.length) {
        to2 = this.length;
      }
      for (var i = 0, walker = this.head; walker !== null && i < from; i++) {
        walker = walker.next;
      }
      for (; walker !== null && i < to2; i++, walker = walker.next) {
        ret.push(walker.value);
      }
      return ret;
    };
    Yallist.prototype.sliceReverse = function (from, to2) {
      to2 = to2 || this.length;
      if (to2 < 0) {
        to2 += this.length;
      }
      from = from || 0;
      if (from < 0) {
        from += this.length;
      }
      var ret = new Yallist();
      if (to2 < from || to2 < 0) {
        return ret;
      }
      if (from < 0) {
        from = 0;
      }
      if (to2 > this.length) {
        to2 = this.length;
      }
      for (
        var i = this.length, walker = this.tail;
        walker !== null && i > to2;
        i--
      ) {
        walker = walker.prev;
      }
      for (; walker !== null && i > from; i--, walker = walker.prev) {
        ret.push(walker.value);
      }
      return ret;
    };
    Yallist.prototype.splice = function (start, deleteCount, ...nodes) {
      if (start > this.length) {
        start = this.length - 1;
      }
      if (start < 0) {
        start = this.length + start;
      }
      for (var i = 0, walker = this.head; walker !== null && i < start; i++) {
        walker = walker.next;
      }
      var ret = [];
      for (var i = 0; walker && i < deleteCount; i++) {
        ret.push(walker.value);
        walker = this.removeNode(walker);
      }
      if (walker === null) {
        walker = this.tail;
      }
      if (walker !== this.head && walker !== this.tail) {
        walker = walker.prev;
      }
      for (var i = 0; i < nodes.length; i++) {
        walker = insert(this, walker, nodes[i]);
      }
      return ret;
    };
    Yallist.prototype.reverse = function () {
      var head = this.head;
      var tail = this.tail;
      for (var walker = head; walker !== null; walker = walker.prev) {
        var p = walker.prev;
        walker.prev = walker.next;
        walker.next = p;
      }
      this.head = tail;
      this.tail = head;
      return this;
    };
    function insert(self2, node, value) {
      var inserted =
        node === self2.head
          ? new Node2(value, null, node, self2)
          : new Node2(value, node, node.next, self2);
      if (inserted.next === null) {
        self2.tail = inserted;
      }
      if (inserted.prev === null) {
        self2.head = inserted;
      }
      self2.length++;
      return inserted;
    }
    function push(self2, item) {
      self2.tail = new Node2(item, self2.tail, null, self2);
      if (!self2.head) {
        self2.head = self2.tail;
      }
      self2.length++;
    }
    function unshift(self2, item) {
      self2.head = new Node2(item, null, self2.head, self2);
      if (!self2.tail) {
        self2.tail = self2.head;
      }
      self2.length++;
    }
    function Node2(value, prev, next, list) {
      if (!(this instanceof Node2)) {
        return new Node2(value, prev, next, list);
      }
      this.list = list;
      this.value = value;
      if (prev) {
        prev.next = this;
        this.prev = prev;
      } else {
        this.prev = null;
      }
      if (next) {
        next.prev = this;
        this.next = next;
      } else {
        this.next = null;
      }
    }
    try {
      require_iterator()(Yallist);
    } catch (er) {}
  },
});

// node_modules/superagent/node_modules/lru-cache/index.js
var require_lru_cache = __commonJS({
  'node_modules/superagent/node_modules/lru-cache/index.js'(exports2, module2) {
    'use strict';
    var Yallist = require_yallist();
    var MAX = Symbol('max');
    var LENGTH = Symbol('length');
    var LENGTH_CALCULATOR = Symbol('lengthCalculator');
    var ALLOW_STALE = Symbol('allowStale');
    var MAX_AGE = Symbol('maxAge');
    var DISPOSE = Symbol('dispose');
    var NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet');
    var LRU_LIST = Symbol('lruList');
    var CACHE = Symbol('cache');
    var UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet');
    var naiveLength = () => 1;
    var LRUCache = class {
      constructor(options) {
        if (typeof options === 'number') options = { max: options };
        if (!options) options = {};
        if (options.max && (typeof options.max !== 'number' || options.max < 0))
          throw new TypeError('max must be a non-negative number');
        const max = (this[MAX] = options.max || Infinity);
        const lc2 = options.length || naiveLength;
        this[LENGTH_CALCULATOR] = typeof lc2 !== 'function' ? naiveLength : lc2;
        this[ALLOW_STALE] = options.stale || false;
        if (options.maxAge && typeof options.maxAge !== 'number')
          throw new TypeError('maxAge must be a number');
        this[MAX_AGE] = options.maxAge || 0;
        this[DISPOSE] = options.dispose;
        this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false;
        this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false;
        this.reset();
      }
      // resize the cache when the max changes.
      set max(mL) {
        if (typeof mL !== 'number' || mL < 0)
          throw new TypeError('max must be a non-negative number');
        this[MAX] = mL || Infinity;
        trim(this);
      }
      get max() {
        return this[MAX];
      }
      set allowStale(allowStale) {
        this[ALLOW_STALE] = !!allowStale;
      }
      get allowStale() {
        return this[ALLOW_STALE];
      }
      set maxAge(mA) {
        if (typeof mA !== 'number')
          throw new TypeError('maxAge must be a non-negative number');
        this[MAX_AGE] = mA;
        trim(this);
      }
      get maxAge() {
        return this[MAX_AGE];
      }
      // resize the cache when the lengthCalculator changes.
      set lengthCalculator(lC) {
        if (typeof lC !== 'function') lC = naiveLength;
        if (lC !== this[LENGTH_CALCULATOR]) {
          this[LENGTH_CALCULATOR] = lC;
          this[LENGTH] = 0;
          this[LRU_LIST].forEach((hit) => {
            hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key);
            this[LENGTH] += hit.length;
          });
        }
        trim(this);
      }
      get lengthCalculator() {
        return this[LENGTH_CALCULATOR];
      }
      get length() {
        return this[LENGTH];
      }
      get itemCount() {
        return this[LRU_LIST].length;
      }
      rforEach(fn, thisp) {
        thisp = thisp || this;
        for (let walker = this[LRU_LIST].tail; walker !== null; ) {
          const prev = walker.prev;
          forEachStep(this, fn, walker, thisp);
          walker = prev;
        }
      }
      forEach(fn, thisp) {
        thisp = thisp || this;
        for (let walker = this[LRU_LIST].head; walker !== null; ) {
          const next = walker.next;
          forEachStep(this, fn, walker, thisp);
          walker = next;
        }
      }
      keys() {
        return this[LRU_LIST].toArray().map((k2) => k2.key);
      }
      values() {
        return this[LRU_LIST].toArray().map((k2) => k2.value);
      }
      reset() {
        if (this[DISPOSE] && this[LRU_LIST] && this[LRU_LIST].length) {
          this[LRU_LIST].forEach((hit) => this[DISPOSE](hit.key, hit.value));
        }
        this[CACHE] = /* @__PURE__ */ new Map();
        this[LRU_LIST] = new Yallist();
        this[LENGTH] = 0;
      }
      dump() {
        return this[LRU_LIST].map((hit) =>
          isStale(this, hit)
            ? false
            : {
                k: hit.key,
                v: hit.value,
                e: hit.now + (hit.maxAge || 0),
              }
        )
          .toArray()
          .filter((h2) => h2);
      }
      dumpLru() {
        return this[LRU_LIST];
      }
      set(key, value, maxAge) {
        maxAge = maxAge || this[MAX_AGE];
        if (maxAge && typeof maxAge !== 'number')
          throw new TypeError('maxAge must be a number');
        const now = maxAge ? Date.now() : 0;
        const len = this[LENGTH_CALCULATOR](value, key);
        if (this[CACHE].has(key)) {
          if (len > this[MAX]) {
            del(this, this[CACHE].get(key));
            return false;
          }
          const node = this[CACHE].get(key);
          const item = node.value;
          if (this[DISPOSE]) {
            if (!this[NO_DISPOSE_ON_SET]) this[DISPOSE](key, item.value);
          }
          item.now = now;
          item.maxAge = maxAge;
          item.value = value;
          this[LENGTH] += len - item.length;
          item.length = len;
          this.get(key);
          trim(this);
          return true;
        }
        const hit = new Entry(key, value, len, now, maxAge);
        if (hit.length > this[MAX]) {
          if (this[DISPOSE]) this[DISPOSE](key, value);
          return false;
        }
        this[LENGTH] += hit.length;
        this[LRU_LIST].unshift(hit);
        this[CACHE].set(key, this[LRU_LIST].head);
        trim(this);
        return true;
      }
      has(key) {
        if (!this[CACHE].has(key)) return false;
        const hit = this[CACHE].get(key).value;
        return !isStale(this, hit);
      }
      get(key) {
        return get2(this, key, true);
      }
      peek(key) {
        return get2(this, key, false);
      }
      pop() {
        const node = this[LRU_LIST].tail;
        if (!node) return null;
        del(this, node);
        return node.value;
      }
      del(key) {
        del(this, this[CACHE].get(key));
      }
      load(arr) {
        this.reset();
        const now = Date.now();
        for (let l2 = arr.length - 1; l2 >= 0; l2--) {
          const hit = arr[l2];
          const expiresAt = hit.e || 0;
          if (expiresAt === 0) this.set(hit.k, hit.v);
          else {
            const maxAge = expiresAt - now;
            if (maxAge > 0) {
              this.set(hit.k, hit.v, maxAge);
            }
          }
        }
      }
      prune() {
        this[CACHE].forEach((value, key) => get2(this, key, false));
      }
    };
    var get2 = (self2, key, doUse) => {
      const node = self2[CACHE].get(key);
      if (node) {
        const hit = node.value;
        if (isStale(self2, hit)) {
          del(self2, node);
          if (!self2[ALLOW_STALE]) return void 0;
        } else {
          if (doUse) {
            if (self2[UPDATE_AGE_ON_GET]) node.value.now = Date.now();
            self2[LRU_LIST].unshiftNode(node);
          }
        }
        return hit.value;
      }
    };
    var isStale = (self2, hit) => {
      if (!hit || (!hit.maxAge && !self2[MAX_AGE])) return false;
      const diff = Date.now() - hit.now;
      return hit.maxAge
        ? diff > hit.maxAge
        : self2[MAX_AGE] && diff > self2[MAX_AGE];
    };
    var trim = (self2) => {
      if (self2[LENGTH] > self2[MAX]) {
        for (
          let walker = self2[LRU_LIST].tail;
          self2[LENGTH] > self2[MAX] && walker !== null;

        ) {
          const prev = walker.prev;
          del(self2, walker);
          walker = prev;
        }
      }
    };
    var del = (self2, node) => {
      if (node) {
        const hit = node.value;
        if (self2[DISPOSE]) self2[DISPOSE](hit.key, hit.value);
        self2[LENGTH] -= hit.length;
        self2[CACHE].delete(hit.key);
        self2[LRU_LIST].removeNode(node);
      }
    };
    var Entry = class {
      constructor(key, value, length, now, maxAge) {
        this.key = key;
        this.value = value;
        this.length = length;
        this.now = now;
        this.maxAge = maxAge || 0;
      }
    };
    var forEachStep = (self2, fn, node, thisp) => {
      let hit = node.value;
      if (isStale(self2, hit)) {
        del(self2, node);
        if (!self2[ALLOW_STALE]) hit = void 0;
      }
      if (hit) fn.call(thisp, hit.value, hit.key, self2);
    };
    module2.exports = LRUCache;
  },
});

// node_modules/superagent/node_modules/semver/classes/range.js
var require_range = __commonJS({
  'node_modules/superagent/node_modules/semver/classes/range.js'(
    exports2,
    module2
  ) {
    'use strict';
    var Range = class _Range {
      constructor(range, options) {
        options = parseOptions(options);
        if (range instanceof _Range) {
          if (
            range.loose === !!options.loose &&
            range.includePrerelease === !!options.includePrerelease
          ) {
            return range;
          } else {
            return new _Range(range.raw, options);
          }
        }
        if (range instanceof Comparator) {
          this.raw = range.value;
          this.set = [[range]];
          this.format();
          return this;
        }
        this.options = options;
        this.loose = !!options.loose;
        this.includePrerelease = !!options.includePrerelease;
        this.raw = range.trim().split(/\s+/).join(' ');
        this.set = this.raw
          .split('||')
          .map((r2) => this.parseRange(r2.trim()))
          .filter((c2) => c2.length);
        if (!this.set.length) {
          throw new TypeError(`Invalid SemVer Range: ${this.raw}`);
        }
        if (this.set.length > 1) {
          const first = this.set[0];
          this.set = this.set.filter((c2) => !isNullSet(c2[0]));
          if (this.set.length === 0) {
            this.set = [first];
          } else if (this.set.length > 1) {
            for (const c2 of this.set) {
              if (c2.length === 1 && isAny(c2[0])) {
                this.set = [c2];
                break;
              }
            }
          }
        }
        this.format();
      }
      format() {
        this.range = this.set
          .map((comps) => comps.join(' ').trim())
          .join('||')
          .trim();
        return this.range;
      }
      toString() {
        return this.range;
      }
      parseRange(range) {
        const memoOpts =
          (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) |
          (this.options.loose && FLAG_LOOSE);
        const memoKey = memoOpts + ':' + range;
        const cached = cache.get(memoKey);
        if (cached) {
          return cached;
        }
        const loose = this.options.loose;
        const hr2 = loose ? re2[t2.HYPHENRANGELOOSE] : re2[t2.HYPHENRANGE];
        range = range.replace(
          hr2,
          hyphenReplace(this.options.includePrerelease)
        );
        debug2('hyphen replace', range);
        range = range.replace(re2[t2.COMPARATORTRIM], comparatorTrimReplace);
        debug2('comparator trim', range);
        range = range.replace(re2[t2.TILDETRIM], tildeTrimReplace);
        debug2('tilde trim', range);
        range = range.replace(re2[t2.CARETTRIM], caretTrimReplace);
        debug2('caret trim', range);
        let rangeList = range
          .split(' ')
          .map((comp) => parseComparator(comp, this.options))
          .join(' ')
          .split(/\s+/)
          .map((comp) => replaceGTE0(comp, this.options));
        if (loose) {
          rangeList = rangeList.filter((comp) => {
            debug2('loose invalid filter', comp, this.options);
            return !!comp.match(re2[t2.COMPARATORLOOSE]);
          });
        }
        debug2('range list', rangeList);
        const rangeMap = /* @__PURE__ */ new Map();
        const comparators = rangeList.map(
          (comp) => new Comparator(comp, this.options)
        );
        for (const comp of comparators) {
          if (isNullSet(comp)) {
            return [comp];
          }
          rangeMap.set(comp.value, comp);
        }
        if (rangeMap.size > 1 && rangeMap.has('')) {
          rangeMap.delete('');
        }
        const result = [...rangeMap.values()];
        cache.set(memoKey, result);
        return result;
      }
      intersects(range, options) {
        if (!(range instanceof _Range)) {
          throw new TypeError('a Range is required');
        }
        return this.set.some((thisComparators) => {
          return (
            isSatisfiable(thisComparators, options) &&
            range.set.some((rangeComparators) => {
              return (
                isSatisfiable(rangeComparators, options) &&
                thisComparators.every((thisComparator) => {
                  return rangeComparators.every((rangeComparator) => {
                    return thisComparator.intersects(rangeComparator, options);
                  });
                })
              );
            })
          );
        });
      }
      // if ANY of the sets match ALL of its comparators, then pass
      test(version) {
        if (!version) {
          return false;
        }
        if (typeof version === 'string') {
          try {
            version = new SemVer(version, this.options);
          } catch (er) {
            return false;
          }
        }
        for (let i = 0; i < this.set.length; i++) {
          if (testSet(this.set[i], version, this.options)) {
            return true;
          }
        }
        return false;
      }
    };
    module2.exports = Range;
    var LRU = require_lru_cache();
    var cache = new LRU({ max: 1e3 });
    var parseOptions = require_parse_options();
    var Comparator = require_comparator();
    var debug2 = require_debug6();
    var SemVer = require_semver();
    var {
      safeRe: re2,
      t: t2,
      comparatorTrimReplace,
      tildeTrimReplace,
      caretTrimReplace,
    } = require_re();
    var { FLAG_INCLUDE_PRERELEASE, FLAG_LOOSE } = require_constants();
    var isNullSet = (c2) => c2.value === '<0.0.0-0';
    var isAny = (c2) => c2.value === '';
    var isSatisfiable = (comparators, options) => {
      let result = true;
      const remainingComparators = comparators.slice();
      let testComparator = remainingComparators.pop();
      while (result && remainingComparators.length) {
        result = remainingComparators.every((otherComparator) => {
          return testComparator.intersects(otherComparator, options);
        });
        testComparator = remainingComparators.pop();
      }
      return result;
    };
    var parseComparator = (comp, options) => {
      debug2('comp', comp, options);
      comp = replaceCarets(comp, options);
      debug2('caret', comp);
      comp = replaceTildes(comp, options);
      debug2('tildes', comp);
      comp = replaceXRanges(comp, options);
      debug2('xrange', comp);
      comp = replaceStars(comp, options);
      debug2('stars', comp);
      return comp;
    };
    var isX = (id) => !id || id.toLowerCase() === 'x' || id === '*';
    var replaceTildes = (comp, options) => {
      return comp
        .trim()
        .split(/\s+/)
        .map((c2) => replaceTilde(c2, options))
        .join(' ');
    };
    var replaceTilde = (comp, options) => {
      const r2 = options.loose ? re2[t2.TILDELOOSE] : re2[t2.TILDE];
      return comp.replace(r2, (_2, M, m2, p, pr2) => {
        debug2('tilde', comp, _2, M, m2, p, pr2);
        let ret;
        if (isX(M)) {
          ret = '';
        } else if (isX(m2)) {
          ret = `>=${M}.0.0 <${+M + 1}.0.0-0`;
        } else if (isX(p)) {
          ret = `>=${M}.${m2}.0 <${M}.${+m2 + 1}.0-0`;
        } else if (pr2) {
          debug2('replaceTilde pr', pr2);
          ret = `>=${M}.${m2}.${p}-${pr2} <${M}.${+m2 + 1}.0-0`;
        } else {
          ret = `>=${M}.${m2}.${p} <${M}.${+m2 + 1}.0-0`;
        }
        debug2('tilde return', ret);
        return ret;
      });
    };
    var replaceCarets = (comp, options) => {
      return comp
        .trim()
        .split(/\s+/)
        .map((c2) => replaceCaret(c2, options))
        .join(' ');
    };
    var replaceCaret = (comp, options) => {
      debug2('caret', comp, options);
      const r2 = options.loose ? re2[t2.CARETLOOSE] : re2[t2.CARET];
      const z2 = options.includePrerelease ? '-0' : '';
      return comp.replace(r2, (_2, M, m2, p, pr2) => {
        debug2('caret', comp, _2, M, m2, p, pr2);
        let ret;
        if (isX(M)) {
          ret = '';
        } else if (isX(m2)) {
          ret = `>=${M}.0.0${z2} <${+M + 1}.0.0-0`;
        } else if (isX(p)) {
          if (M === '0') {
            ret = `>=${M}.${m2}.0${z2} <${M}.${+m2 + 1}.0-0`;
          } else {
            ret = `>=${M}.${m2}.0${z2} <${+M + 1}.0.0-0`;
          }
        } else if (pr2) {
          debug2('replaceCaret pr', pr2);
          if (M === '0') {
            if (m2 === '0') {
              ret = `>=${M}.${m2}.${p}-${pr2} <${M}.${m2}.${+p + 1}-0`;
            } else {
              ret = `>=${M}.${m2}.${p}-${pr2} <${M}.${+m2 + 1}.0-0`;
            }
          } else {
            ret = `>=${M}.${m2}.${p}-${pr2} <${+M + 1}.0.0-0`;
          }
        } else {
          debug2('no pr');
          if (M === '0') {
            if (m2 === '0') {
              ret = `>=${M}.${m2}.${p}${z2} <${M}.${m2}.${+p + 1}-0`;
            } else {
              ret = `>=${M}.${m2}.${p}${z2} <${M}.${+m2 + 1}.0-0`;
            }
          } else {
            ret = `>=${M}.${m2}.${p} <${+M + 1}.0.0-0`;
          }
        }
        debug2('caret return', ret);
        return ret;
      });
    };
    var replaceXRanges = (comp, options) => {
      debug2('replaceXRanges', comp, options);
      return comp
        .split(/\s+/)
        .map((c2) => replaceXRange(c2, options))
        .join(' ');
    };
    var replaceXRange = (comp, options) => {
      comp = comp.trim();
      const r2 = options.loose ? re2[t2.XRANGELOOSE] : re2[t2.XRANGE];
      return comp.replace(r2, (ret, gtlt, M, m2, p, pr2) => {
        debug2('xRange', comp, ret, gtlt, M, m2, p, pr2);
        const xM = isX(M);
        const xm = xM || isX(m2);
        const xp2 = xm || isX(p);
        const anyX = xp2;
        if (gtlt === '=' && anyX) {
          gtlt = '';
        }
        pr2 = options.includePrerelease ? '-0' : '';
        if (xM) {
          if (gtlt === '>' || gtlt === '<') {
            ret = '<0.0.0-0';
          } else {
            ret = '*';
          }
        } else if (gtlt && anyX) {
          if (xm) {
            m2 = 0;
          }
          p = 0;
          if (gtlt === '>') {
            gtlt = '>=';
            if (xm) {
              M = +M + 1;
              m2 = 0;
              p = 0;
            } else {
              m2 = +m2 + 1;
              p = 0;
            }
          } else if (gtlt === '<=') {
            gtlt = '<';
            if (xm) {
              M = +M + 1;
            } else {
              m2 = +m2 + 1;
            }
          }
          if (gtlt === '<') {
            pr2 = '-0';
          }
          ret = `${gtlt + M}.${m2}.${p}${pr2}`;
        } else if (xm) {
          ret = `>=${M}.0.0${pr2} <${+M + 1}.0.0-0`;
        } else if (xp2) {
          ret = `>=${M}.${m2}.0${pr2} <${M}.${+m2 + 1}.0-0`;
        }
        debug2('xRange return', ret);
        return ret;
      });
    };
    var replaceStars = (comp, options) => {
      debug2('replaceStars', comp, options);
      return comp.trim().replace(re2[t2.STAR], '');
    };
    var replaceGTE0 = (comp, options) => {
      debug2('replaceGTE0', comp, options);
      return comp
        .trim()
        .replace(re2[options.includePrerelease ? t2.GTE0PRE : t2.GTE0], '');
    };
    var hyphenReplace =
      (incPr) =>
      ($0, from, fM, fm, fp2, fpr, fb, to2, tM, tm, tp2, tpr, tb) => {
        if (isX(fM)) {
          from = '';
        } else if (isX(fm)) {
          from = `>=${fM}.0.0${incPr ? '-0' : ''}`;
        } else if (isX(fp2)) {
          from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`;
        } else if (fpr) {
          from = `>=${from}`;
        } else {
          from = `>=${from}${incPr ? '-0' : ''}`;
        }
        if (isX(tM)) {
          to2 = '';
        } else if (isX(tm)) {
          to2 = `<${+tM + 1}.0.0-0`;
        } else if (isX(tp2)) {
          to2 = `<${tM}.${+tm + 1}.0-0`;
        } else if (tpr) {
          to2 = `<=${tM}.${tm}.${tp2}-${tpr}`;
        } else if (incPr) {
          to2 = `<${tM}.${tm}.${+tp2 + 1}-0`;
        } else {
          to2 = `<=${to2}`;
        }
        return `${from} ${to2}`.trim();
      };
    var testSet = (set, version, options) => {
      for (let i = 0; i < set.length; i++) {
        if (!set[i].test(version)) {
          return false;
        }
      }
      if (version.prerelease.length && !options.includePrerelease) {
        for (let i = 0; i < set.length; i++) {
          debug2(set[i].semver);
          if (set[i].semver === Comparator.ANY) {
            continue;
          }
          if (set[i].semver.prerelease.length > 0) {
            const allowed = set[i].semver;
            if (
              allowed.major === version.major &&
              allowed.minor === version.minor &&
              allowed.patch === version.patch
            ) {
              return true;
            }
          }
        }
        return false;
      }
      return true;
    };
  },
});

// node_modules/superagent/node_modules/semver/classes/comparator.js
var require_comparator = __commonJS({
  'node_modules/superagent/node_modules/semver/classes/comparator.js'(
    exports2,
    module2
  ) {
    'use strict';
    var ANY = Symbol('SemVer ANY');
    var Comparator = class _Comparator {
      static get ANY() {
        return ANY;
      }
      constructor(comp, options) {
        options = parseOptions(options);
        if (comp instanceof _Comparator) {
          if (comp.loose === !!options.loose) {
            return comp;
          } else {
            comp = comp.value;
          }
        }
        comp = comp.trim().split(/\s+/).join(' ');
        debug2('comparator', comp, options);
        this.options = options;
        this.loose = !!options.loose;
        this.parse(comp);
        if (this.semver === ANY) {
          this.value = '';
        } else {
          this.value = this.operator + this.semver.version;
        }
        debug2('comp', this);
      }
      parse(comp) {
        const r2 = this.options.loose
          ? re2[t2.COMPARATORLOOSE]
          : re2[t2.COMPARATOR];
        const m2 = comp.match(r2);
        if (!m2) {
          throw new TypeError(`Invalid comparator: ${comp}`);
        }
        this.operator = m2[1] !== void 0 ? m2[1] : '';
        if (this.operator === '=') {
          this.operator = '';
        }
        if (!m2[2]) {
          this.semver = ANY;
        } else {
          this.semver = new SemVer(m2[2], this.options.loose);
        }
      }
      toString() {
        return this.value;
      }
      test(version) {
        debug2('Comparator.test', version, this.options.loose);
        if (this.semver === ANY || version === ANY) {
          return true;
        }
        if (typeof version === 'string') {
          try {
            version = new SemVer(version, this.options);
          } catch (er) {
            return false;
          }
        }
        return cmp(version, this.operator, this.semver, this.options);
      }
      intersects(comp, options) {
        if (!(comp instanceof _Comparator)) {
          throw new TypeError('a Comparator is required');
        }
        if (this.operator === '') {
          if (this.value === '') {
            return true;
          }
          return new Range(comp.value, options).test(this.value);
        } else if (comp.operator === '') {
          if (comp.value === '') {
            return true;
          }
          return new Range(this.value, options).test(comp.semver);
        }
        options = parseOptions(options);
        if (
          options.includePrerelease &&
          (this.value === '<0.0.0-0' || comp.value === '<0.0.0-0')
        ) {
          return false;
        }
        if (
          !options.includePrerelease &&
          (this.value.startsWith('<0.0.0') || comp.value.startsWith('<0.0.0'))
        ) {
          return false;
        }
        if (this.operator.startsWith('>') && comp.operator.startsWith('>')) {
          return true;
        }
        if (this.operator.startsWith('<') && comp.operator.startsWith('<')) {
          return true;
        }
        if (
          this.semver.version === comp.semver.version &&
          this.operator.includes('=') &&
          comp.operator.includes('=')
        ) {
          return true;
        }
        if (
          cmp(this.semver, '<', comp.semver, options) &&
          this.operator.startsWith('>') &&
          comp.operator.startsWith('<')
        ) {
          return true;
        }
        if (
          cmp(this.semver, '>', comp.semver, options) &&
          this.operator.startsWith('<') &&
          comp.operator.startsWith('>')
        ) {
          return true;
        }
        return false;
      }
    };
    module2.exports = Comparator;
    var parseOptions = require_parse_options();
    var { safeRe: re2, t: t2 } = require_re();
    var cmp = require_cmp();
    var debug2 = require_debug6();
    var SemVer = require_semver();
    var Range = require_range();
  },
});

// node_modules/superagent/node_modules/semver/functions/satisfies.js
var require_satisfies = __commonJS({
  'node_modules/superagent/node_modules/semver/functions/satisfies.js'(
    exports2,
    module2
  ) {
    'use strict';
    var Range = require_range();
    var satisfies = (version, range, options) => {
      try {
        range = new Range(range, options);
      } catch (er) {
        return false;
      }
      return range.test(version);
    };
    module2.exports = satisfies;
  },
});

// node_modules/superagent/node_modules/semver/ranges/to-comparators.js
var require_to_comparators = __commonJS({
  'node_modules/superagent/node_modules/semver/ranges/to-comparators.js'(
    exports2,
    module2
  ) {
    'use strict';
    var Range = require_range();
    var toComparators = (range, options) =>
      new Range(range, options).set.map((comp) =>
        comp
          .map((c2) => c2.value)
          .join(' ')
          .trim()
          .split(' ')
      );
    module2.exports = toComparators;
  },
});

// node_modules/superagent/node_modules/semver/ranges/max-satisfying.js
var require_max_satisfying = __commonJS({
  'node_modules/superagent/node_modules/semver/ranges/max-satisfying.js'(
    exports2,
    module2
  ) {
    'use strict';
    var SemVer = require_semver();
    var Range = require_range();
    var maxSatisfying = (versions, range, options) => {
      let max = null;
      let maxSV = null;
      let rangeObj = null;
      try {
        rangeObj = new Range(range, options);
      } catch (er) {
        return null;
      }
      versions.forEach((v) => {
        if (rangeObj.test(v)) {
          if (!max || maxSV.compare(v) === -1) {
            max = v;
            maxSV = new SemVer(max, options);
          }
        }
      });
      return max;
    };
    module2.exports = maxSatisfying;
  },
});

// node_modules/superagent/node_modules/semver/ranges/min-satisfying.js
var require_min_satisfying = __commonJS({
  'node_modules/superagent/node_modules/semver/ranges/min-satisfying.js'(
    exports2,
    module2
  ) {
    'use strict';
    var SemVer = require_semver();
    var Range = require_range();
    var minSatisfying = (versions, range, options) => {
      let min = null;
      let minSV = null;
      let rangeObj = null;
      try {
        rangeObj = new Range(range, options);
      } catch (er) {
        return null;
      }
      versions.forEach((v) => {
        if (rangeObj.test(v)) {
          if (!min || minSV.compare(v) === 1) {
            min = v;
            minSV = new SemVer(min, options);
          }
        }
      });
      return min;
    };
    module2.exports = minSatisfying;
  },
});

// node_modules/superagent/node_modules/semver/ranges/min-version.js
var require_min_version = __commonJS({
  'node_modules/superagent/node_modules/semver/ranges/min-version.js'(
    exports2,
    module2
  ) {
    'use strict';
    var SemVer = require_semver();
    var Range = require_range();
    var gt2 = require_gt();
    var minVersion = (range, loose) => {
      range = new Range(range, loose);
      let minver = new SemVer('0.0.0');
      if (range.test(minver)) {
        return minver;
      }
      minver = new SemVer('0.0.0-0');
      if (range.test(minver)) {
        return minver;
      }
      minver = null;
      for (let i = 0; i < range.set.length; ++i) {
        const comparators = range.set[i];
        let setMin = null;
        comparators.forEach((comparator) => {
          const compver = new SemVer(comparator.semver.version);
          switch (comparator.operator) {
            case '>':
              if (compver.prerelease.length === 0) {
                compver.patch++;
              } else {
                compver.prerelease.push(0);
              }
              compver.raw = compver.format();
            case '':
            case '>=':
              if (!setMin || gt2(compver, setMin)) {
                setMin = compver;
              }
              break;
            case '<':
            case '<=':
              break;
            default:
              throw new Error(`Unexpected operation: ${comparator.operator}`);
          }
        });
        if (setMin && (!minver || gt2(minver, setMin))) {
          minver = setMin;
        }
      }
      if (minver && range.test(minver)) {
        return minver;
      }
      return null;
    };
    module2.exports = minVersion;
  },
});

// node_modules/superagent/node_modules/semver/ranges/valid.js
var require_valid2 = __commonJS({
  'node_modules/superagent/node_modules/semver/ranges/valid.js'(
    exports2,
    module2
  ) {
    'use strict';
    var Range = require_range();
    var validRange = (range, options) => {
      try {
        return new Range(range, options).range || '*';
      } catch (er) {
        return null;
      }
    };
    module2.exports = validRange;
  },
});

// node_modules/superagent/node_modules/semver/ranges/outside.js
var require_outside = __commonJS({
  'node_modules/superagent/node_modules/semver/ranges/outside.js'(
    exports2,
    module2
  ) {
    'use strict';
    var SemVer = require_semver();
    var Comparator = require_comparator();
    var { ANY } = Comparator;
    var Range = require_range();
    var satisfies = require_satisfies();
    var gt2 = require_gt();
    var lt2 = require_lt();
    var lte = require_lte();
    var gte = require_gte();
    var outside = (version, range, hilo, options) => {
      version = new SemVer(version, options);
      range = new Range(range, options);
      let gtfn, ltefn, ltfn, comp, ecomp;
      switch (hilo) {
        case '>':
          gtfn = gt2;
          ltefn = lte;
          ltfn = lt2;
          comp = '>';
          ecomp = '>=';
          break;
        case '<':
          gtfn = lt2;
          ltefn = gte;
          ltfn = gt2;
          comp = '<';
          ecomp = '<=';
          break;
        default:
          throw new TypeError('Must provide a hilo val of "<" or ">"');
      }
      if (satisfies(version, range, options)) {
        return false;
      }
      for (let i = 0; i < range.set.length; ++i) {
        const comparators = range.set[i];
        let high = null;
        let low = null;
        comparators.forEach((comparator) => {
          if (comparator.semver === ANY) {
            comparator = new Comparator('>=0.0.0');
          }
          high = high || comparator;
          low = low || comparator;
          if (gtfn(comparator.semver, high.semver, options)) {
            high = comparator;
          } else if (ltfn(comparator.semver, low.semver, options)) {
            low = comparator;
          }
        });
        if (high.operator === comp || high.operator === ecomp) {
          return false;
        }
        if (
          (!low.operator || low.operator === comp) &&
          ltefn(version, low.semver)
        ) {
          return false;
        } else if (low.operator === ecomp && ltfn(version, low.semver)) {
          return false;
        }
      }
      return true;
    };
    module2.exports = outside;
  },
});

// node_modules/superagent/node_modules/semver/ranges/gtr.js
var require_gtr = __commonJS({
  'node_modules/superagent/node_modules/semver/ranges/gtr.js'(
    exports2,
    module2
  ) {
    'use strict';
    var outside = require_outside();
    var gtr = (version, range, options) =>
      outside(version, range, '>', options);
    module2.exports = gtr;
  },
});

// node_modules/superagent/node_modules/semver/ranges/ltr.js
var require_ltr = __commonJS({
  'node_modules/superagent/node_modules/semver/ranges/ltr.js'(
    exports2,
    module2
  ) {
    'use strict';
    var outside = require_outside();
    var ltr = (version, range, options) =>
      outside(version, range, '<', options);
    module2.exports = ltr;
  },
});

// node_modules/superagent/node_modules/semver/ranges/intersects.js
var require_intersects = __commonJS({
  'node_modules/superagent/node_modules/semver/ranges/intersects.js'(
    exports2,
    module2
  ) {
    'use strict';
    var Range = require_range();
    var intersects = (r1, r2, options) => {
      r1 = new Range(r1, options);
      r2 = new Range(r2, options);
      return r1.intersects(r2, options);
    };
    module2.exports = intersects;
  },
});

// node_modules/superagent/node_modules/semver/ranges/simplify.js
var require_simplify = __commonJS({
  'node_modules/superagent/node_modules/semver/ranges/simplify.js'(
    exports2,
    module2
  ) {
    'use strict';
    var satisfies = require_satisfies();
    var compare = require_compare();
    module2.exports = (versions, range, options) => {
      const set = [];
      let first = null;
      let prev = null;
      const v = versions.sort((a, b) => compare(a, b, options));
      for (const version of v) {
        const included = satisfies(version, range, options);
        if (included) {
          prev = version;
          if (!first) {
            first = version;
          }
        } else {
          if (prev) {
            set.push([first, prev]);
          }
          prev = null;
          first = null;
        }
      }
      if (first) {
        set.push([first, null]);
      }
      const ranges = [];
      for (const [min, max] of set) {
        if (min === max) {
          ranges.push(min);
        } else if (!max && min === v[0]) {
          ranges.push('*');
        } else if (!max) {
          ranges.push(`>=${min}`);
        } else if (min === v[0]) {
          ranges.push(`<=${max}`);
        } else {
          ranges.push(`${min} - ${max}`);
        }
      }
      const simplified = ranges.join(' || ');
      const original =
        typeof range.raw === 'string' ? range.raw : String(range);
      return simplified.length < original.length ? simplified : range;
    };
  },
});

// node_modules/superagent/node_modules/semver/ranges/subset.js
var require_subset = __commonJS({
  'node_modules/superagent/node_modules/semver/ranges/subset.js'(
    exports2,
    module2
  ) {
    'use strict';
    var Range = require_range();
    var Comparator = require_comparator();
    var { ANY } = Comparator;
    var satisfies = require_satisfies();
    var compare = require_compare();
    var subset = (sub, dom, options = {}) => {
      if (sub === dom) {
        return true;
      }
      sub = new Range(sub, options);
      dom = new Range(dom, options);
      let sawNonNull = false;
      OUTER: for (const simpleSub of sub.set) {
        for (const simpleDom of dom.set) {
          const isSub = simpleSubset(simpleSub, simpleDom, options);
          sawNonNull = sawNonNull || isSub !== null;
          if (isSub) {
            continue OUTER;
          }
        }
        if (sawNonNull) {
          return false;
        }
      }
      return true;
    };
    var minimumVersionWithPreRelease = [new Comparator('>=0.0.0-0')];
    var minimumVersion = [new Comparator('>=0.0.0')];
    var simpleSubset = (sub, dom, options) => {
      if (sub === dom) {
        return true;
      }
      if (sub.length === 1 && sub[0].semver === ANY) {
        if (dom.length === 1 && dom[0].semver === ANY) {
          return true;
        } else if (options.includePrerelease) {
          sub = minimumVersionWithPreRelease;
        } else {
          sub = minimumVersion;
        }
      }
      if (dom.length === 1 && dom[0].semver === ANY) {
        if (options.includePrerelease) {
          return true;
        } else {
          dom = minimumVersion;
        }
      }
      const eqSet = /* @__PURE__ */ new Set();
      let gt2, lt2;
      for (const c2 of sub) {
        if (c2.operator === '>' || c2.operator === '>=') {
          gt2 = higherGT(gt2, c2, options);
        } else if (c2.operator === '<' || c2.operator === '<=') {
          lt2 = lowerLT(lt2, c2, options);
        } else {
          eqSet.add(c2.semver);
        }
      }
      if (eqSet.size > 1) {
        return null;
      }
      let gtltComp;
      if (gt2 && lt2) {
        gtltComp = compare(gt2.semver, lt2.semver, options);
        if (gtltComp > 0) {
          return null;
        } else if (
          gtltComp === 0 &&
          (gt2.operator !== '>=' || lt2.operator !== '<=')
        ) {
          return null;
        }
      }
      for (const eq of eqSet) {
        if (gt2 && !satisfies(eq, String(gt2), options)) {
          return null;
        }
        if (lt2 && !satisfies(eq, String(lt2), options)) {
          return null;
        }
        for (const c2 of dom) {
          if (!satisfies(eq, String(c2), options)) {
            return false;
          }
        }
        return true;
      }
      let higher, lower;
      let hasDomLT, hasDomGT;
      let needDomLTPre =
        lt2 && !options.includePrerelease && lt2.semver.prerelease.length
          ? lt2.semver
          : false;
      let needDomGTPre =
        gt2 && !options.includePrerelease && gt2.semver.prerelease.length
          ? gt2.semver
          : false;
      if (
        needDomLTPre &&
        needDomLTPre.prerelease.length === 1 &&
        lt2.operator === '<' &&
        needDomLTPre.prerelease[0] === 0
      ) {
        needDomLTPre = false;
      }
      for (const c2 of dom) {
        hasDomGT = hasDomGT || c2.operator === '>' || c2.operator === '>=';
        hasDomLT = hasDomLT || c2.operator === '<' || c2.operator === '<=';
        if (gt2) {
          if (needDomGTPre) {
            if (
              c2.semver.prerelease &&
              c2.semver.prerelease.length &&
              c2.semver.major === needDomGTPre.major &&
              c2.semver.minor === needDomGTPre.minor &&
              c2.semver.patch === needDomGTPre.patch
            ) {
              needDomGTPre = false;
            }
          }
          if (c2.operator === '>' || c2.operator === '>=') {
            higher = higherGT(gt2, c2, options);
            if (higher === c2 && higher !== gt2) {
              return false;
            }
          } else if (
            gt2.operator === '>=' &&
            !satisfies(gt2.semver, String(c2), options)
          ) {
            return false;
          }
        }
        if (lt2) {
          if (needDomLTPre) {
            if (
              c2.semver.prerelease &&
              c2.semver.prerelease.length &&
              c2.semver.major === needDomLTPre.major &&
              c2.semver.minor === needDomLTPre.minor &&
              c2.semver.patch === needDomLTPre.patch
            ) {
              needDomLTPre = false;
            }
          }
          if (c2.operator === '<' || c2.operator === '<=') {
            lower = lowerLT(lt2, c2, options);
            if (lower === c2 && lower !== lt2) {
              return false;
            }
          } else if (
            lt2.operator === '<=' &&
            !satisfies(lt2.semver, String(c2), options)
          ) {
            return false;
          }
        }
        if (!c2.operator && (lt2 || gt2) && gtltComp !== 0) {
          return false;
        }
      }
      if (gt2 && hasDomLT && !lt2 && gtltComp !== 0) {
        return false;
      }
      if (lt2 && hasDomGT && !gt2 && gtltComp !== 0) {
        return false;
      }
      if (needDomGTPre || needDomLTPre) {
        return false;
      }
      return true;
    };
    var higherGT = (a, b, options) => {
      if (!a) {
        return b;
      }
      const comp = compare(a.semver, b.semver, options);
      return comp > 0
        ? a
        : comp < 0
        ? b
        : b.operator === '>' && a.operator === '>='
        ? b
        : a;
    };
    var lowerLT = (a, b, options) => {
      if (!a) {
        return b;
      }
      const comp = compare(a.semver, b.semver, options);
      return comp < 0
        ? a
        : comp > 0
        ? b
        : b.operator === '<' && a.operator === '<='
        ? b
        : a;
    };
    module2.exports = subset;
  },
});

// node_modules/superagent/node_modules/semver/index.js
var require_semver2 = __commonJS({
  'node_modules/superagent/node_modules/semver/index.js'(exports2, module2) {
    'use strict';
    var internalRe = require_re();
    var constants = require_constants();
    var SemVer = require_semver();
    var identifiers = require_identifiers();
    var parse = require_parse3();
    var valid = require_valid();
    var clean = require_clean();
    var inc = require_inc();
    var diff = require_diff();
    var major = require_major();
    var minor = require_minor();
    var patch = require_patch();
    var prerelease = require_prerelease();
    var compare = require_compare();
    var rcompare = require_rcompare();
    var compareLoose = require_compare_loose();
    var compareBuild = require_compare_build();
    var sort = require_sort();
    var rsort = require_rsort();
    var gt2 = require_gt();
    var lt2 = require_lt();
    var eq = require_eq();
    var neq = require_neq();
    var gte = require_gte();
    var lte = require_lte();
    var cmp = require_cmp();
    var coerce = require_coerce();
    var Comparator = require_comparator();
    var Range = require_range();
    var satisfies = require_satisfies();
    var toComparators = require_to_comparators();
    var maxSatisfying = require_max_satisfying();
    var minSatisfying = require_min_satisfying();
    var minVersion = require_min_version();
    var validRange = require_valid2();
    var outside = require_outside();
    var gtr = require_gtr();
    var ltr = require_ltr();
    var intersects = require_intersects();
    var simplifyRange = require_simplify();
    var subset = require_subset();
    module2.exports = {
      parse,
      valid,
      clean,
      inc,
      diff,
      major,
      minor,
      patch,
      prerelease,
      compare,
      rcompare,
      compareLoose,
      compareBuild,
      sort,
      rsort,
      gt: gt2,
      lt: lt2,
      eq,
      neq,
      gte,
      lte,
      cmp,
      coerce,
      Comparator,
      Range,
      satisfies,
      toComparators,
      maxSatisfying,
      minSatisfying,
      minVersion,
      validRange,
      outside,
      gtr,
      ltr,
      intersects,
      simplifyRange,
      subset,
      SemVer,
      re: internalRe.re,
      src: internalRe.src,
      tokens: internalRe.t,
      SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,
      RELEASE_TYPES: constants.RELEASE_TYPES,
      compareIdentifiers: identifiers.compareIdentifiers,
      rcompareIdentifiers: identifiers.rcompareIdentifiers,
    };
  },
});

// node_modules/fast-safe-stringify/index.js
var require_fast_safe_stringify = __commonJS({
  'node_modules/fast-safe-stringify/index.js'(exports2, module2) {
    'use strict';
    module2.exports = stringify;
    stringify.default = stringify;
    stringify.stable = deterministicStringify;
    stringify.stableStringify = deterministicStringify;
    var LIMIT_REPLACE_NODE = '[...]';
    var CIRCULAR_REPLACE_NODE = '[Circular]';
    var arr = [];
    var replacerStack = [];
    function defaultOptions() {
      return {
        depthLimit: Number.MAX_SAFE_INTEGER,
        edgesLimit: Number.MAX_SAFE_INTEGER,
      };
    }
    function stringify(obj, replacer, spacer, options) {
      if (typeof options === 'undefined') {
        options = defaultOptions();
      }
      decirc(obj, '', 0, [], void 0, 0, options);
      var res;
      try {
        if (replacerStack.length === 0) {
          res = JSON.stringify(obj, replacer, spacer);
        } else {
          res = JSON.stringify(obj, replaceGetterValues(replacer), spacer);
        }
      } catch (_2) {
        return JSON.stringify(
          '[unable to serialize, circular reference is too complex to analyze]'
        );
      } finally {
        while (arr.length !== 0) {
          var part = arr.pop();
          if (part.length === 4) {
            Object.defineProperty(part[0], part[1], part[3]);
          } else {
            part[0][part[1]] = part[2];
          }
        }
      }
      return res;
    }
    function setReplace(replace, val, k2, parent) {
      var propertyDescriptor = Object.getOwnPropertyDescriptor(parent, k2);
      if (propertyDescriptor.get !== void 0) {
        if (propertyDescriptor.configurable) {
          Object.defineProperty(parent, k2, { value: replace });
          arr.push([parent, k2, val, propertyDescriptor]);
        } else {
          replacerStack.push([val, k2, replace]);
        }
      } else {
        parent[k2] = replace;
        arr.push([parent, k2, val]);
      }
    }
    function decirc(val, k2, edgeIndex, stack, parent, depth, options) {
      depth += 1;
      var i;
      if (typeof val === 'object' && val !== null) {
        for (i = 0; i < stack.length; i++) {
          if (stack[i] === val) {
            setReplace(CIRCULAR_REPLACE_NODE, val, k2, parent);
            return;
          }
        }
        if (
          typeof options.depthLimit !== 'undefined' &&
          depth > options.depthLimit
        ) {
          setReplace(LIMIT_REPLACE_NODE, val, k2, parent);
          return;
        }
        if (
          typeof options.edgesLimit !== 'undefined' &&
          edgeIndex + 1 > options.edgesLimit
        ) {
          setReplace(LIMIT_REPLACE_NODE, val, k2, parent);
          return;
        }
        stack.push(val);
        if (Array.isArray(val)) {
          for (i = 0; i < val.length; i++) {
            decirc(val[i], i, i, stack, val, depth, options);
          }
        } else {
          var keys = Object.keys(val);
          for (i = 0; i < keys.length; i++) {
            var key = keys[i];
            decirc(val[key], key, i, stack, val, depth, options);
          }
        }
        stack.pop();
      }
    }
    function compareFunction(a, b) {
      if (a < b) {
        return -1;
      }
      if (a > b) {
        return 1;
      }
      return 0;
    }
    function deterministicStringify(obj, replacer, spacer, options) {
      if (typeof options === 'undefined') {
        options = defaultOptions();
      }
      var tmp = deterministicDecirc(obj, '', 0, [], void 0, 0, options) || obj;
      var res;
      try {
        if (replacerStack.length === 0) {
          res = JSON.stringify(tmp, replacer, spacer);
        } else {
          res = JSON.stringify(tmp, replaceGetterValues(replacer), spacer);
        }
      } catch (_2) {
        return JSON.stringify(
          '[unable to serialize, circular reference is too complex to analyze]'
        );
      } finally {
        while (arr.length !== 0) {
          var part = arr.pop();
          if (part.length === 4) {
            Object.defineProperty(part[0], part[1], part[3]);
          } else {
            part[0][part[1]] = part[2];
          }
        }
      }
      return res;
    }
    function deterministicDecirc(
      val,
      k2,
      edgeIndex,
      stack,
      parent,
      depth,
      options
    ) {
      depth += 1;
      var i;
      if (typeof val === 'object' && val !== null) {
        for (i = 0; i < stack.length; i++) {
          if (stack[i] === val) {
            setReplace(CIRCULAR_REPLACE_NODE, val, k2, parent);
            return;
          }
        }
        try {
          if (typeof val.toJSON === 'function') {
            return;
          }
        } catch (_2) {
          return;
        }
        if (
          typeof options.depthLimit !== 'undefined' &&
          depth > options.depthLimit
        ) {
          setReplace(LIMIT_REPLACE_NODE, val, k2, parent);
          return;
        }
        if (
          typeof options.edgesLimit !== 'undefined' &&
          edgeIndex + 1 > options.edgesLimit
        ) {
          setReplace(LIMIT_REPLACE_NODE, val, k2, parent);
          return;
        }
        stack.push(val);
        if (Array.isArray(val)) {
          for (i = 0; i < val.length; i++) {
            deterministicDecirc(val[i], i, i, stack, val, depth, options);
          }
        } else {
          var tmp = {};
          var keys = Object.keys(val).sort(compareFunction);
          for (i = 0; i < keys.length; i++) {
            var key = keys[i];
            deterministicDecirc(val[key], key, i, stack, val, depth, options);
            tmp[key] = val[key];
          }
          if (typeof parent !== 'undefined') {
            arr.push([parent, k2, val]);
            parent[k2] = tmp;
          } else {
            return tmp;
          }
        }
        stack.pop();
      }
    }
    function replaceGetterValues(replacer) {
      replacer =
        typeof replacer !== 'undefined'
          ? replacer
          : function (k2, v) {
              return v;
            };
      return function (key, val) {
        if (replacerStack.length > 0) {
          for (var i = 0; i < replacerStack.length; i++) {
            var part = replacerStack[i];
            if (part[1] === key && part[0] === val) {
              val = part[2];
              replacerStack.splice(i, 1);
              break;
            }
          }
        }
        return replacer.call(this, key, val);
      };
    }
  },
});

// node_modules/superagent/lib/utils.js
var require_utils4 = __commonJS({
  'node_modules/superagent/lib/utils.js'(exports2) {
    'use strict';
    function _createForOfIteratorHelper(o2, allowArrayLike) {
      var it2;
      if (typeof Symbol === 'undefined' || o2[Symbol.iterator] == null) {
        if (
          Array.isArray(o2) ||
          (it2 = _unsupportedIterableToArray(o2)) ||
          (allowArrayLike && o2 && typeof o2.length === 'number')
        ) {
          if (it2) o2 = it2;
          var i = 0;
          var F2 = function F3() {};
          return {
            s: F2,
            n: function n2() {
              if (i >= o2.length) return { done: true };
              return { done: false, value: o2[i++] };
            },
            e: function e2(_e2) {
              throw _e2;
            },
            f: F2,
          };
        }
        throw new TypeError(
          'Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
        );
      }
      var normalCompletion = true,
        didErr = false,
        err;
      return {
        s: function s2() {
          it2 = o2[Symbol.iterator]();
        },
        n: function n2() {
          var step = it2.next();
          normalCompletion = step.done;
          return step;
        },
        e: function e2(_e2) {
          didErr = true;
          err = _e2;
        },
        f: function f() {
          try {
            if (!normalCompletion && it2.return != null) it2.return();
          } finally {
            if (didErr) throw err;
          }
        },
      };
    }
    function _unsupportedIterableToArray(o2, minLen) {
      if (!o2) return;
      if (typeof o2 === 'string') return _arrayLikeToArray(o2, minLen);
      var n2 = Object.prototype.toString.call(o2).slice(8, -1);
      if (n2 === 'Object' && o2.constructor) n2 = o2.constructor.name;
      if (n2 === 'Map' || n2 === 'Set') return Array.from(o2);
      if (
        n2 === 'Arguments' ||
        /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2)
      )
        return _arrayLikeToArray(o2, minLen);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length) len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) {
        arr2[i] = arr[i];
      }
      return arr2;
    }
    exports2.type = function (str) {
      return str.split(/ *; */).shift();
    };
    exports2.params = function (val) {
      var obj = {};
      var _iterator = _createForOfIteratorHelper(val.split(/ *; */)),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done; ) {
          var str = _step.value;
          var parts = str.split(/ *= */);
          var key = parts.shift();
          var _val = parts.shift();
          if (key && _val) obj[key] = _val;
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      return obj;
    };
    exports2.parseLinks = function (val) {
      var obj = {};
      var _iterator2 = _createForOfIteratorHelper(val.split(/ *, */)),
        _step2;
      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
          var str = _step2.value;
          var parts = str.split(/ *; */);
          var url = parts[0].slice(1, -1);
          var rel = parts[1].split(/ *= */)[1].slice(1, -1);
          obj[rel] = url;
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
      return obj;
    };
    exports2.cleanHeader = function (header, changesOrigin) {
      delete header['content-type'];
      delete header['content-length'];
      delete header['transfer-encoding'];
      delete header.host;
      if (changesOrigin) {
        delete header.authorization;
        delete header.cookie;
      }
      return header;
    };
  },
});

// node_modules/superagent/lib/is-object.js
var require_is_object = __commonJS({
  'node_modules/superagent/lib/is-object.js'(exports2, module2) {
    'use strict';
    function _typeof(obj) {
      '@babel/helpers - typeof';
      if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 &&
            typeof Symbol === 'function' &&
            obj2.constructor === Symbol &&
            obj2 !== Symbol.prototype
            ? 'symbol'
            : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function isObject2(obj) {
      return obj !== null && _typeof(obj) === 'object';
    }
    module2.exports = isObject2;
  },
});

// node_modules/superagent/lib/request-base.js
var require_request_base = __commonJS({
  'node_modules/superagent/lib/request-base.js'(exports2, module2) {
    'use strict';
    function _typeof(obj) {
      '@babel/helpers - typeof';
      if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 &&
            typeof Symbol === 'function' &&
            obj2.constructor === Symbol &&
            obj2 !== Symbol.prototype
            ? 'symbol'
            : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    var isObject2 = require_is_object();
    module2.exports = RequestBase;
    function RequestBase(object) {
      if (object) return mixin(object);
    }
    function mixin(object) {
      for (var key in RequestBase.prototype) {
        if (Object.prototype.hasOwnProperty.call(RequestBase.prototype, key))
          object[key] = RequestBase.prototype[key];
      }
      return object;
    }
    RequestBase.prototype.clearTimeout = function () {
      clearTimeout(this._timer);
      clearTimeout(this._responseTimeoutTimer);
      clearTimeout(this._uploadTimeoutTimer);
      delete this._timer;
      delete this._responseTimeoutTimer;
      delete this._uploadTimeoutTimer;
      return this;
    };
    RequestBase.prototype.parse = function (fn) {
      this._parser = fn;
      return this;
    };
    RequestBase.prototype.responseType = function (value) {
      this._responseType = value;
      return this;
    };
    RequestBase.prototype.serialize = function (fn) {
      this._serializer = fn;
      return this;
    };
    RequestBase.prototype.timeout = function (options) {
      if (!options || _typeof(options) !== 'object') {
        this._timeout = options;
        this._responseTimeout = 0;
        this._uploadTimeout = 0;
        return this;
      }
      for (var option2 in options) {
        if (Object.prototype.hasOwnProperty.call(options, option2)) {
          switch (option2) {
            case 'deadline':
              this._timeout = options.deadline;
              break;
            case 'response':
              this._responseTimeout = options.response;
              break;
            case 'upload':
              this._uploadTimeout = options.upload;
              break;
            default:
              console.warn('Unknown timeout option', option2);
          }
        }
      }
      return this;
    };
    RequestBase.prototype.retry = function (count, fn) {
      if (arguments.length === 0 || count === true) count = 1;
      if (count <= 0) count = 0;
      this._maxRetries = count;
      this._retries = 0;
      this._retryCallback = fn;
      return this;
    };
    var ERROR_CODES = /* @__PURE__ */ new Set([
      'ETIMEDOUT',
      'ECONNRESET',
      'EADDRINUSE',
      'ECONNREFUSED',
      'EPIPE',
      'ENOTFOUND',
      'ENETUNREACH',
      'EAI_AGAIN',
    ]);
    var STATUS_CODES = /* @__PURE__ */ new Set([
      408, 413, 429, 500, 502, 503, 504, 521, 522, 524,
    ]);
    RequestBase.prototype._shouldRetry = function (err, res) {
      if (!this._maxRetries || this._retries++ >= this._maxRetries) {
        return false;
      }
      if (this._retryCallback) {
        try {
          var override = this._retryCallback(err, res);
          if (override === true) return true;
          if (override === false) return false;
        } catch (err_) {
          console.error(err_);
        }
      }
      if (res && res.status && STATUS_CODES.has(res.status)) return true;
      if (err) {
        if (err.code && ERROR_CODES.has(err.code)) return true;
        if (err.timeout && err.code === 'ECONNABORTED') return true;
        if (err.crossDomain) return true;
      }
      return false;
    };
    RequestBase.prototype._retry = function () {
      this.clearTimeout();
      if (this.req) {
        this.req = null;
        this.req = this.request();
      }
      this._aborted = false;
      this.timedout = false;
      this.timedoutError = null;
      return this._end();
    };
    RequestBase.prototype.then = function (resolve, reject) {
      var _this = this;
      if (!this._fullfilledPromise) {
        var self2 = this;
        if (this._endCalled) {
          console.warn(
            'Warning: superagent request was sent twice, because both .end() and .then() were called. Never call .end() if you use promises'
          );
        }
        this._fullfilledPromise = new Promise(function (resolve2, reject2) {
          self2.on('abort', function () {
            if (_this._maxRetries && _this._maxRetries > _this._retries) {
              return;
            }
            if (_this.timedout && _this.timedoutError) {
              reject2(_this.timedoutError);
              return;
            }
            var err = new Error('Aborted');
            err.code = 'ABORTED';
            err.status = _this.status;
            err.method = _this.method;
            err.url = _this.url;
            reject2(err);
          });
          self2.end(function (err, res) {
            if (err) reject2(err);
            else resolve2(res);
          });
        });
      }
      return this._fullfilledPromise.then(resolve, reject);
    };
    RequestBase.prototype.catch = function (cb) {
      return this.then(void 0, cb);
    };
    RequestBase.prototype.use = function (fn) {
      fn(this);
      return this;
    };
    RequestBase.prototype.ok = function (cb) {
      if (typeof cb !== 'function') throw new Error('Callback required');
      this._okCallback = cb;
      return this;
    };
    RequestBase.prototype._isResponseOK = function (res) {
      if (!res) {
        return false;
      }
      if (this._okCallback) {
        return this._okCallback(res);
      }
      return res.status >= 200 && res.status < 300;
    };
    RequestBase.prototype.get = function (field) {
      return this._header[field.toLowerCase()];
    };
    RequestBase.prototype.getHeader = RequestBase.prototype.get;
    RequestBase.prototype.set = function (field, value) {
      if (isObject2(field)) {
        for (var key in field) {
          if (Object.prototype.hasOwnProperty.call(field, key))
            this.set(key, field[key]);
        }
        return this;
      }
      this._header[field.toLowerCase()] = value;
      this.header[field] = value;
      return this;
    };
    RequestBase.prototype.unset = function (field) {
      delete this._header[field.toLowerCase()];
      delete this.header[field];
      return this;
    };
    RequestBase.prototype.field = function (name, value) {
      if (name === null || void 0 === name) {
        throw new Error('.field(name, val) name can not be empty');
      }
      if (this._data) {
        throw new Error(
          ".field() can't be used if .send() is used. Please use only .send() or only .field() & .attach()"
        );
      }
      if (isObject2(name)) {
        for (var key in name) {
          if (Object.prototype.hasOwnProperty.call(name, key))
            this.field(key, name[key]);
        }
        return this;
      }
      if (Array.isArray(value)) {
        for (var i in value) {
          if (Object.prototype.hasOwnProperty.call(value, i))
            this.field(name, value[i]);
        }
        return this;
      }
      if (value === null || void 0 === value) {
        throw new Error('.field(name, val) val can not be empty');
      }
      if (typeof value === 'boolean') {
        value = String(value);
      }
      this._getFormData().append(name, value);
      return this;
    };
    RequestBase.prototype.abort = function () {
      if (this._aborted) {
        return this;
      }
      this._aborted = true;
      if (this.xhr) this.xhr.abort();
      if (this.req) this.req.abort();
      this.clearTimeout();
      this.emit('abort');
      return this;
    };
    RequestBase.prototype._auth = function (
      user,
      pass,
      options,
      base64Encoder
    ) {
      switch (options.type) {
        case 'basic':
          this.set(
            'Authorization',
            'Basic '.concat(base64Encoder(''.concat(user, ':').concat(pass)))
          );
          break;
        case 'auto':
          this.username = user;
          this.password = pass;
          break;
        case 'bearer':
          this.set('Authorization', 'Bearer '.concat(user));
          break;
        default:
          break;
      }
      return this;
    };
    RequestBase.prototype.withCredentials = function (on2) {
      if (on2 === void 0) on2 = true;
      this._withCredentials = on2;
      return this;
    };
    RequestBase.prototype.redirects = function (n2) {
      this._maxRedirects = n2;
      return this;
    };
    RequestBase.prototype.maxResponseSize = function (n2) {
      if (typeof n2 !== 'number') {
        throw new TypeError('Invalid argument');
      }
      this._maxResponseSize = n2;
      return this;
    };
    RequestBase.prototype.toJSON = function () {
      return {
        method: this.method,
        url: this.url,
        data: this._data,
        headers: this._header,
      };
    };
    RequestBase.prototype.send = function (data) {
      var isObject_ = isObject2(data);
      var type = this._header['content-type'];
      if (this._formData) {
        throw new Error(
          ".send() can't be used if .attach() or .field() is used. Please use only .send() or only .field() & .attach()"
        );
      }
      if (isObject_ && !this._data) {
        if (Array.isArray(data)) {
          this._data = [];
        } else if (!this._isHost(data)) {
          this._data = {};
        }
      } else if (data && this._data && this._isHost(this._data)) {
        throw new Error("Can't merge these send calls");
      }
      if (isObject_ && isObject2(this._data)) {
        for (var key in data) {
          if (Object.prototype.hasOwnProperty.call(data, key))
            this._data[key] = data[key];
        }
      } else if (typeof data === 'string') {
        if (!type) this.type('form');
        type = this._header['content-type'];
        if (type) type = type.toLowerCase().trim();
        if (type === 'application/x-www-form-urlencoded') {
          this._data = this._data
            ? ''.concat(this._data, '&').concat(data)
            : data;
        } else {
          this._data = (this._data || '') + data;
        }
      } else {
        this._data = data;
      }
      if (!isObject_ || this._isHost(data)) {
        return this;
      }
      if (!type) this.type('json');
      return this;
    };
    RequestBase.prototype.sortQuery = function (sort) {
      this._sort = typeof sort === 'undefined' ? true : sort;
      return this;
    };
    RequestBase.prototype._finalizeQueryString = function () {
      var query = this._query.join('&');
      if (query) {
        this.url += (this.url.includes('?') ? '&' : '?') + query;
      }
      this._query.length = 0;
      if (this._sort) {
        var index = this.url.indexOf('?');
        if (index >= 0) {
          var queryArray = this.url.slice(index + 1).split('&');
          if (typeof this._sort === 'function') {
            queryArray.sort(this._sort);
          } else {
            queryArray.sort();
          }
          this.url = this.url.slice(0, index) + '?' + queryArray.join('&');
        }
      }
    };
    RequestBase.prototype._appendQueryString = function () {
      console.warn('Unsupported');
    };
    RequestBase.prototype._timeoutError = function (reason, timeout, errno) {
      if (this._aborted) {
        return;
      }
      var err = new Error(''.concat(reason + timeout, 'ms exceeded'));
      err.timeout = timeout;
      err.code = 'ECONNABORTED';
      err.errno = errno;
      this.timedout = true;
      this.timedoutError = err;
      this.abort();
      this.callback(err);
    };
    RequestBase.prototype._setTimeouts = function () {
      var self2 = this;
      if (this._timeout && !this._timer) {
        this._timer = setTimeout(function () {
          self2._timeoutError('Timeout of ', self2._timeout, 'ETIME');
        }, this._timeout);
      }
      if (this._responseTimeout && !this._responseTimeoutTimer) {
        this._responseTimeoutTimer = setTimeout(function () {
          self2._timeoutError(
            'Response timeout of ',
            self2._responseTimeout,
            'ETIMEDOUT'
          );
        }, this._responseTimeout);
      }
    };
  },
});

// node_modules/superagent/lib/node/unzip.js
var require_unzip = __commonJS({
  'node_modules/superagent/lib/node/unzip.js'(exports2) {
    'use strict';
    var _require = require('string_decoder');
    var StringDecoder = _require.StringDecoder;
    var Stream = require('stream');
    var zlib = require('zlib');
    exports2.unzip = function (req, res) {
      var unzip = zlib.createUnzip();
      var stream = new Stream();
      var decoder;
      stream.req = req;
      unzip.on('error', function (err) {
        if (err && err.code === 'Z_BUF_ERROR') {
          stream.emit('end');
          return;
        }
        stream.emit('error', err);
      });
      res.pipe(unzip);
      res.setEncoding = function (type) {
        decoder = new StringDecoder(type);
      };
      unzip.on('data', function (buf) {
        if (decoder) {
          var str = decoder.write(buf);
          if (str.length > 0) stream.emit('data', str);
        } else {
          stream.emit('data', buf);
        }
      });
      unzip.on('end', function () {
        stream.emit('end');
      });
      var _on = res.on;
      res.on = function (type, fn) {
        if (type === 'data' || type === 'end') {
          stream.on(type, fn.bind(res));
        } else if (type === 'error') {
          stream.on(type, fn.bind(res));
          _on.call(res, type, fn);
        } else {
          _on.call(res, type, fn);
        }
        return this;
      };
    };
  },
});

// node_modules/superagent/lib/response-base.js
var require_response_base = __commonJS({
  'node_modules/superagent/lib/response-base.js'(exports2, module2) {
    'use strict';
    var utils = require_utils4();
    module2.exports = ResponseBase;
    function ResponseBase(obj) {
      if (obj) return mixin(obj);
    }
    function mixin(obj) {
      for (var key in ResponseBase.prototype) {
        if (Object.prototype.hasOwnProperty.call(ResponseBase.prototype, key))
          obj[key] = ResponseBase.prototype[key];
      }
      return obj;
    }
    ResponseBase.prototype.get = function (field) {
      return this.header[field.toLowerCase()];
    };
    ResponseBase.prototype._setHeaderProperties = function (header) {
      var ct2 = header['content-type'] || '';
      this.type = utils.type(ct2);
      var params = utils.params(ct2);
      for (var key in params) {
        if (Object.prototype.hasOwnProperty.call(params, key))
          this[key] = params[key];
      }
      this.links = {};
      try {
        if (header.link) {
          this.links = utils.parseLinks(header.link);
        }
      } catch (_unused) {}
    };
    ResponseBase.prototype._setStatusProperties = function (status) {
      var type = (status / 100) | 0;
      this.statusCode = status;
      this.status = this.statusCode;
      this.statusType = type;
      this.info = type === 1;
      this.ok = type === 2;
      this.redirect = type === 3;
      this.clientError = type === 4;
      this.serverError = type === 5;
      this.error = type === 4 || type === 5 ? this.toError() : false;
      this.created = status === 201;
      this.accepted = status === 202;
      this.noContent = status === 204;
      this.badRequest = status === 400;
      this.unauthorized = status === 401;
      this.notAcceptable = status === 406;
      this.forbidden = status === 403;
      this.notFound = status === 404;
      this.unprocessableEntity = status === 422;
    };
  },
});

// node_modules/superagent/lib/node/response.js
var require_response2 = __commonJS({
  'node_modules/superagent/lib/node/response.js'(exports2, module2) {
    'use strict';
    var util = require('util');
    var Stream = require('stream');
    var ResponseBase = require_response_base();
    module2.exports = Response2;
    function Response2(req) {
      Stream.call(this);
      this.res = req.res;
      var res = this.res;
      this.request = req;
      this.req = req.req;
      this.text = res.text;
      this.body = res.body === void 0 ? {} : res.body;
      this.files = res.files || {};
      this.buffered = req._resBuffered;
      this.headers = res.headers;
      this.header = this.headers;
      this._setStatusProperties(res.statusCode);
      this._setHeaderProperties(this.header);
      this.setEncoding = res.setEncoding.bind(res);
      res.on('data', this.emit.bind(this, 'data'));
      res.on('end', this.emit.bind(this, 'end'));
      res.on('close', this.emit.bind(this, 'close'));
      res.on('error', this.emit.bind(this, 'error'));
    }
    util.inherits(Response2, Stream);
    ResponseBase(Response2.prototype);
    Response2.prototype.destroy = function (err) {
      this.res.destroy(err);
    };
    Response2.prototype.pause = function () {
      this.res.pause();
    };
    Response2.prototype.resume = function () {
      this.res.resume();
    };
    Response2.prototype.toError = function () {
      var req = this.req;
      var method = req.method;
      var path = req.path;
      var msg = 'cannot '
        .concat(method, ' ')
        .concat(path, ' (')
        .concat(this.status, ')');
      var err = new Error(msg);
      err.status = this.status;
      err.text = this.text;
      err.method = method;
      err.path = path;
      return err;
    };
    Response2.prototype.setStatusProperties = function (status) {
      console.warn('In superagent 2.x setStatusProperties is a private method');
      return this._setStatusProperties(status);
    };
    Response2.prototype.toJSON = function () {
      return {
        req: this.request.toJSON(),
        header: this.header,
        status: this.status,
        text: this.text,
      };
    };
  },
});

// node_modules/superagent/lib/node/http2wrapper.js
var require_http2wrapper = __commonJS({
  'node_modules/superagent/lib/node/http2wrapper.js'(exports2) {
    'use strict';
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly)
          symbols = symbols.filter(function (sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
          });
        keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};
        if (i % 2) {
          ownKeys(Object(source), true).forEach(function (key) {
            _defineProperty(target, key, source[key]);
          });
        } else if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(
            target,
            Object.getOwnPropertyDescriptors(source)
          );
        } else {
          ownKeys(Object(source)).forEach(function (key) {
            Object.defineProperty(
              target,
              key,
              Object.getOwnPropertyDescriptor(source, key)
            );
          });
        }
      }
      return target;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true,
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var Stream = require('stream');
    var util = require('util');
    var net = require('net');
    var tls = require('tls');
    var _require = require('url');
    var parse = _require.parse;
    var semver = require_semver2();
    var http2;
    if (semver.gte(process.version, 'v10.10.0')) http2 = require('http2');
    else
      throw new Error(
        'superagent: this version of Node.js does not support http2'
      );
    var _http2$constants = http2.constants;
    var HTTP2_HEADER_PATH = _http2$constants.HTTP2_HEADER_PATH;
    var HTTP2_HEADER_STATUS = _http2$constants.HTTP2_HEADER_STATUS;
    var HTTP2_HEADER_METHOD = _http2$constants.HTTP2_HEADER_METHOD;
    var HTTP2_HEADER_AUTHORITY = _http2$constants.HTTP2_HEADER_AUTHORITY;
    var HTTP2_HEADER_HOST = _http2$constants.HTTP2_HEADER_HOST;
    var HTTP2_HEADER_SET_COOKIE = _http2$constants.HTTP2_HEADER_SET_COOKIE;
    var NGHTTP2_CANCEL = _http2$constants.NGHTTP2_CANCEL;
    function setProtocol(protocol) {
      return {
        request: function request2(options) {
          return new Request2(protocol, options);
        },
      };
    }
    function Request2(protocol, options) {
      var _this = this;
      Stream.call(this);
      var defaultPort = protocol === 'https:' ? 443 : 80;
      var defaultHost = 'localhost';
      var port = options.port || defaultPort;
      var host = options.host || defaultHost;
      delete options.port;
      delete options.host;
      this.method = options.method;
      this.path = options.path;
      this.protocol = protocol;
      this.host = host;
      delete options.method;
      delete options.path;
      var sessionOptions = _objectSpread({}, options);
      if (options.socketPath) {
        sessionOptions.socketPath = options.socketPath;
        sessionOptions.createConnection = this.createUnixConnection.bind(this);
      }
      this._headers = {};
      var session = http2.connect(
        ''.concat(protocol, '//').concat(host, ':').concat(port),
        sessionOptions
      );
      this.setHeader('host', ''.concat(host, ':').concat(port));
      session.on('error', function (err) {
        return _this.emit('error', err);
      });
      this.session = session;
    }
    util.inherits(Request2, Stream);
    Request2.prototype.createUnixConnection = function (authority, options) {
      switch (this.protocol) {
        case 'http:':
          return net.connect(options.socketPath);
        case 'https:':
          options.ALPNProtocols = ['h2'];
          options.servername = this.host;
          options.allowHalfOpen = true;
          return tls.connect(options.socketPath, options);
        default:
          throw new Error('Unsupported protocol', this.protocol);
      }
    };
    Request2.prototype.setNoDelay = function (bool) {};
    Request2.prototype.getFrame = function () {
      var _method,
        _this2 = this;
      if (this.frame) {
        return this.frame;
      }
      var method =
        ((_method = {}),
        _defineProperty(_method, HTTP2_HEADER_PATH, this.path),
        _defineProperty(_method, HTTP2_HEADER_METHOD, this.method),
        _method);
      var headers = this.mapToHttp2Header(this._headers);
      headers = Object.assign(headers, method);
      var frame = this.session.request(headers);
      frame.once('response', function (headers2, flags) {
        headers2 = _this2.mapToHttpHeader(headers2);
        frame.headers = headers2;
        frame.statusCode = headers2[HTTP2_HEADER_STATUS];
        frame.status = frame.statusCode;
        _this2.emit('response', frame);
      });
      this._headerSent = true;
      frame.once('drain', function () {
        return _this2.emit('drain');
      });
      frame.on('error', function (err) {
        return _this2.emit('error', err);
      });
      frame.on('close', function () {
        return _this2.session.close();
      });
      this.frame = frame;
      return frame;
    };
    Request2.prototype.mapToHttpHeader = function (headers) {
      var keys = Object.keys(headers);
      var http2Headers = {};
      for (var _i2 = 0, _keys = keys; _i2 < _keys.length; _i2++) {
        var key = _keys[_i2];
        var value = headers[key];
        key = key.toLowerCase();
        switch (key) {
          case HTTP2_HEADER_SET_COOKIE:
            value = Array.isArray(value) ? value : [value];
            break;
          default:
            break;
        }
        http2Headers[key] = value;
      }
      return http2Headers;
    };
    Request2.prototype.mapToHttp2Header = function (headers) {
      var keys = Object.keys(headers);
      var http2Headers = {};
      for (var _i2 = 0, _keys2 = keys; _i2 < _keys2.length; _i2++) {
        var key = _keys2[_i2];
        var value = headers[key];
        key = key.toLowerCase();
        switch (key) {
          case HTTP2_HEADER_HOST:
            key = HTTP2_HEADER_AUTHORITY;
            value = /^http:\/\/|^https:\/\//.test(value)
              ? parse(value).host
              : value;
            break;
          default:
            break;
        }
        http2Headers[key] = value;
      }
      return http2Headers;
    };
    Request2.prototype.setHeader = function (name, value) {
      this._headers[name.toLowerCase()] = value;
    };
    Request2.prototype.getHeader = function (name) {
      return this._headers[name.toLowerCase()];
    };
    Request2.prototype.write = function (data, encoding) {
      var frame = this.getFrame();
      return frame.write(data, encoding);
    };
    Request2.prototype.pipe = function (stream, options) {
      var frame = this.getFrame();
      return frame.pipe(stream, options);
    };
    Request2.prototype.end = function (data) {
      var frame = this.getFrame();
      frame.end(data);
    };
    Request2.prototype.abort = function (data) {
      var frame = this.getFrame();
      frame.close(NGHTTP2_CANCEL);
      this.session.destroy();
    };
    exports2.setProtocol = setProtocol;
  },
});

// node_modules/superagent/lib/agent-base.js
var require_agent_base = __commonJS({
  'node_modules/superagent/lib/agent-base.js'(exports2, module2) {
    'use strict';
    function _toConsumableArray(arr) {
      return (
        _arrayWithoutHoles(arr) ||
        _iterableToArray(arr) ||
        _unsupportedIterableToArray(arr) ||
        _nonIterableSpread()
      );
    }
    function _nonIterableSpread() {
      throw new TypeError(
        'Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
      );
    }
    function _unsupportedIterableToArray(o2, minLen) {
      if (!o2) return;
      if (typeof o2 === 'string') return _arrayLikeToArray(o2, minLen);
      var n2 = Object.prototype.toString.call(o2).slice(8, -1);
      if (n2 === 'Object' && o2.constructor) n2 = o2.constructor.name;
      if (n2 === 'Map' || n2 === 'Set') return Array.from(o2);
      if (
        n2 === 'Arguments' ||
        /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2)
      )
        return _arrayLikeToArray(o2, minLen);
    }
    function _iterableToArray(iter) {
      if (typeof Symbol !== 'undefined' && Symbol.iterator in Object(iter))
        return Array.from(iter);
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr)) return _arrayLikeToArray(arr);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length) len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) {
        arr2[i] = arr[i];
      }
      return arr2;
    }
    function Agent() {
      this._defaults = [];
    }
    [
      'use',
      'on',
      'once',
      'set',
      'query',
      'type',
      'accept',
      'auth',
      'withCredentials',
      'sortQuery',
      'retry',
      'ok',
      'redirects',
      'timeout',
      'buffer',
      'serialize',
      'parse',
      'ca',
      'key',
      'pfx',
      'cert',
      'disableTLSCerts',
    ].forEach(function (fn) {
      Agent.prototype[fn] = function () {
        for (
          var _len = arguments.length, args = new Array(_len), _key = 0;
          _key < _len;
          _key++
        ) {
          args[_key] = arguments[_key];
        }
        this._defaults.push({
          fn,
          args,
        });
        return this;
      };
    });
    Agent.prototype._setDefaults = function (req) {
      this._defaults.forEach(function (def) {
        req[def.fn].apply(req, _toConsumableArray(def.args));
      });
    };
    module2.exports = Agent;
  },
});

// node_modules/superagent/lib/node/agent.js
var require_agent = __commonJS({
  'node_modules/superagent/lib/node/agent.js'(exports2, module2) {
    'use strict';
    var _require = require('url');
    var parse = _require.parse;
    var _require2 = require_cookiejar();
    var CookieJar = _require2.CookieJar;
    var _require3 = require_cookiejar();
    var CookieAccessInfo = _require3.CookieAccessInfo;
    var methods = require_methods2();
    var request2 = require_node7();
    var AgentBase = require_agent_base();
    module2.exports = Agent;
    function Agent(options) {
      if (!(this instanceof Agent)) {
        return new Agent(options);
      }
      AgentBase.call(this);
      this.jar = new CookieJar();
      if (options) {
        if (options.ca) {
          this.ca(options.ca);
        }
        if (options.key) {
          this.key(options.key);
        }
        if (options.pfx) {
          this.pfx(options.pfx);
        }
        if (options.cert) {
          this.cert(options.cert);
        }
        if (options.rejectUnauthorized === false) {
          this.disableTLSCerts();
        }
      }
    }
    Agent.prototype = Object.create(AgentBase.prototype);
    Agent.prototype._saveCookies = function (res) {
      var cookies = res.headers['set-cookie'];
      if (cookies) this.jar.setCookies(cookies);
    };
    Agent.prototype._attachCookies = function (req) {
      var url = parse(req.url);
      var access = new CookieAccessInfo(
        url.hostname,
        url.pathname,
        url.protocol === 'https:'
      );
      var cookies = this.jar.getCookies(access).toValueString();
      req.cookies = cookies;
    };
    methods.forEach(function (name) {
      var method = name.toUpperCase();
      Agent.prototype[name] = function (url, fn) {
        var req = new request2.Request(method, url);
        req.on('response', this._saveCookies.bind(this));
        req.on('redirect', this._saveCookies.bind(this));
        req.on('redirect', this._attachCookies.bind(this, req));
        this._setDefaults(req);
        this._attachCookies(req);
        if (fn) {
          req.end(fn);
        }
        return req;
      };
    });
    Agent.prototype.del = Agent.prototype.delete;
  },
});

// node_modules/superagent/lib/node/parsers/urlencoded.js
var require_urlencoded2 = __commonJS({
  'node_modules/superagent/lib/node/parsers/urlencoded.js'(exports2, module2) {
    'use strict';
    var qs2 = require_lib3();
    module2.exports = function (res, fn) {
      res.text = '';
      res.setEncoding('ascii');
      res.on('data', function (chunk) {
        res.text += chunk;
      });
      res.on('end', function () {
        try {
          fn(null, qs2.parse(res.text));
        } catch (err) {
          fn(err);
        }
      });
    };
  },
});

// node_modules/superagent/lib/node/parsers/json.js
var require_json2 = __commonJS({
  'node_modules/superagent/lib/node/parsers/json.js'(exports2, module2) {
    'use strict';
    module2.exports = function (res, fn) {
      res.text = '';
      res.setEncoding('utf8');
      res.on('data', function (chunk) {
        res.text += chunk;
      });
      res.on('end', function () {
        var body;
        var err;
        try {
          body = res.text && JSON.parse(res.text);
        } catch (err_) {
          err = err_;
          err.rawResponse = res.text || null;
          err.statusCode = res.statusCode;
        } finally {
          fn(err, body);
        }
      });
    };
  },
});

// node_modules/superagent/lib/node/parsers/text.js
var require_text2 = __commonJS({
  'node_modules/superagent/lib/node/parsers/text.js'(exports2, module2) {
    'use strict';
    module2.exports = function (res, fn) {
      res.text = '';
      res.setEncoding('utf8');
      res.on('data', function (chunk) {
        res.text += chunk;
      });
      res.on('end', fn);
    };
  },
});

// node_modules/superagent/lib/node/parsers/image.js
var require_image = __commonJS({
  'node_modules/superagent/lib/node/parsers/image.js'(exports2, module2) {
    'use strict';
    module2.exports = function (res, fn) {
      var data = [];
      res.on('data', function (chunk) {
        data.push(chunk);
      });
      res.on('end', function () {
        fn(null, Buffer.concat(data));
      });
    };
  },
});

// node_modules/superagent/lib/node/parsers/index.js
var require_parsers = __commonJS({
  'node_modules/superagent/lib/node/parsers/index.js'(exports2) {
    'use strict';
    exports2['application/x-www-form-urlencoded'] = require_urlencoded2();
    exports2['application/json'] = require_json2();
    exports2.text = require_text2();
    var binary = require_image();
    exports2['application/octet-stream'] = binary;
    exports2['application/pdf'] = binary;
    exports2.image = binary;
  },
});

// node_modules/superagent/lib/node/index.js
var require_node7 = __commonJS({
  'node_modules/superagent/lib/node/index.js'(exports2, module2) {
    'use strict';
    function _typeof(obj) {
      '@babel/helpers - typeof';
      if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 &&
            typeof Symbol === 'function' &&
            obj2.constructor === Symbol &&
            obj2 !== Symbol.prototype
            ? 'symbol'
            : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    var _require = require('url');
    var parse = _require.parse;
    var format2 = _require.format;
    var resolve = _require.resolve;
    var Stream = require('stream');
    var https = require('https');
    var http = require('http');
    var fs2 = require('fs');
    var zlib = require('zlib');
    var util = require('util');
    var qs2 = require_lib3();
    var mime = require_mime2();
    var methods = require_methods2();
    var FormData2 = require_form_data2();
    var formidable = require_lib4();
    var debug2 = require_src10()('superagent');
    var CookieJar = require_cookiejar();
    var semver = require_semver2();
    var safeStringify = require_fast_safe_stringify();
    var utils = require_utils4();
    var RequestBase = require_request_base();
    var _require2 = require_unzip();
    var unzip = _require2.unzip;
    var Response2 = require_response2();
    var http2;
    if (semver.gte(process.version, 'v10.10.0')) http2 = require_http2wrapper();
    function request2(method, url) {
      if (typeof url === 'function') {
        return new exports2.Request('GET', method).end(url);
      }
      if (arguments.length === 1) {
        return new exports2.Request('GET', method);
      }
      return new exports2.Request(method, url);
    }
    module2.exports = request2;
    exports2 = module2.exports;
    exports2.Request = Request2;
    exports2.agent = require_agent();
    function noop() {}
    exports2.Response = Response2;
    mime.define(
      {
        'application/x-www-form-urlencoded': [
          'form',
          'urlencoded',
          'form-data',
        ],
      },
      true
    );
    exports2.protocols = {
      'http:': http,
      'https:': https,
      'http2:': http2,
    };
    exports2.serialize = {
      'application/x-www-form-urlencoded': qs2.stringify,
      'application/json': safeStringify,
    };
    exports2.parse = require_parsers();
    exports2.buffer = {};
    function _initHeaders(req) {
      req._header = {
        // coerces header names to lowercase
      };
      req.header = {
        // preserves header name case
      };
    }
    function Request2(method, url) {
      Stream.call(this);
      if (typeof url !== 'string') url = format2(url);
      this._enableHttp2 = Boolean(process.env.HTTP2_TEST);
      this._agent = false;
      this._formData = null;
      this.method = method;
      this.url = url;
      _initHeaders(this);
      this.writable = true;
      this._redirects = 0;
      this.redirects(method === 'HEAD' ? 0 : 5);
      this.cookies = '';
      this.qs = {};
      this._query = [];
      this.qsRaw = this._query;
      this._redirectList = [];
      this._streamRequest = false;
      this.once('end', this.clearTimeout.bind(this));
    }
    util.inherits(Request2, Stream);
    RequestBase(Request2.prototype);
    Request2.prototype.http2 = function (bool) {
      if (exports2.protocols['http2:'] === void 0) {
        throw new Error(
          'superagent: this version of Node.js does not support http2'
        );
      }
      this._enableHttp2 = bool === void 0 ? true : bool;
      return this;
    };
    Request2.prototype.attach = function (field, file, options) {
      if (file) {
        if (this._data) {
          throw new Error("superagent can't mix .send() and .attach()");
        }
        var o2 = options || {};
        if (typeof options === 'string') {
          o2 = {
            filename: options,
          };
        }
        if (typeof file === 'string') {
          if (!o2.filename) o2.filename = file;
          debug2('creating `fs.ReadStream` instance for file: %s', file);
          file = fs2.createReadStream(file);
        } else if (!o2.filename && file.path) {
          o2.filename = file.path;
        }
        this._getFormData().append(field, file, o2);
      }
      return this;
    };
    Request2.prototype._getFormData = function () {
      var _this = this;
      if (!this._formData) {
        this._formData = new FormData2();
        this._formData.on('error', function (err) {
          debug2('FormData error', err);
          if (_this.called) {
            return;
          }
          _this.callback(err);
          _this.abort();
        });
      }
      return this._formData;
    };
    Request2.prototype.agent = function (agent) {
      if (arguments.length === 0) return this._agent;
      this._agent = agent;
      return this;
    };
    Request2.prototype.type = function (type) {
      return this.set(
        'Content-Type',
        type.includes('/') ? type : mime.getType(type)
      );
    };
    Request2.prototype.accept = function (type) {
      return this.set('Accept', type.includes('/') ? type : mime.getType(type));
    };
    Request2.prototype.query = function (val) {
      if (typeof val === 'string') {
        this._query.push(val);
      } else {
        Object.assign(this.qs, val);
      }
      return this;
    };
    Request2.prototype.write = function (data, encoding) {
      var req = this.request();
      if (!this._streamRequest) {
        this._streamRequest = true;
      }
      return req.write(data, encoding);
    };
    Request2.prototype.pipe = function (stream, options) {
      this.piped = true;
      this.buffer(false);
      this.end();
      return this._pipeContinue(stream, options);
    };
    Request2.prototype._pipeContinue = function (stream, options) {
      var _this2 = this;
      this.req.once('response', function (res) {
        if (
          isRedirect(res.statusCode) &&
          _this2._redirects++ !== _this2._maxRedirects
        ) {
          return _this2._redirect(res) === _this2
            ? _this2._pipeContinue(stream, options)
            : void 0;
        }
        _this2.res = res;
        _this2._emitResponse();
        if (_this2._aborted) return;
        if (_this2._shouldUnzip(res)) {
          var unzipObj = zlib.createUnzip();
          unzipObj.on('error', function (err) {
            if (err && err.code === 'Z_BUF_ERROR') {
              stream.emit('end');
              return;
            }
            stream.emit('error', err);
          });
          res.pipe(unzipObj).pipe(stream, options);
        } else {
          res.pipe(stream, options);
        }
        res.once('end', function () {
          _this2.emit('end');
        });
      });
      return stream;
    };
    Request2.prototype.buffer = function (val) {
      this._buffer = val !== false;
      return this;
    };
    Request2.prototype._redirect = function (res) {
      var url = res.headers.location;
      if (!url) {
        return this.callback(new Error('No location header for redirect'), res);
      }
      debug2('redirect %s -> %s', this.url, url);
      url = resolve(this.url, url);
      res.resume();
      var headers = this.req.getHeaders
        ? this.req.getHeaders()
        : this.req._headers;
      var changesOrigin = parse(url).host !== parse(this.url).host;
      if (res.statusCode === 301 || res.statusCode === 302) {
        headers = utils.cleanHeader(headers, changesOrigin);
        this.method = this.method === 'HEAD' ? 'HEAD' : 'GET';
        this._data = null;
      }
      if (res.statusCode === 303) {
        headers = utils.cleanHeader(headers, changesOrigin);
        this.method = 'GET';
        this._data = null;
      }
      delete headers.host;
      delete this.req;
      delete this._formData;
      _initHeaders(this);
      this._endCalled = false;
      this.url = url;
      this.qs = {};
      this._query.length = 0;
      this.set(headers);
      this.emit('redirect', res);
      this._redirectList.push(this.url);
      this.end(this._callback);
      return this;
    };
    Request2.prototype.auth = function (user, pass, options) {
      if (arguments.length === 1) pass = '';
      if (_typeof(pass) === 'object' && pass !== null) {
        options = pass;
        pass = '';
      }
      if (!options) {
        options = {
          type: 'basic',
        };
      }
      var encoder = function encoder2(string) {
        return Buffer.from(string).toString('base64');
      };
      return this._auth(user, pass, options, encoder);
    };
    Request2.prototype.ca = function (cert) {
      this._ca = cert;
      return this;
    };
    Request2.prototype.key = function (cert) {
      this._key = cert;
      return this;
    };
    Request2.prototype.pfx = function (cert) {
      if (_typeof(cert) === 'object' && !Buffer.isBuffer(cert)) {
        this._pfx = cert.pfx;
        this._passphrase = cert.passphrase;
      } else {
        this._pfx = cert;
      }
      return this;
    };
    Request2.prototype.cert = function (cert) {
      this._cert = cert;
      return this;
    };
    Request2.prototype.disableTLSCerts = function () {
      this._disableTLSCerts = true;
      return this;
    };
    Request2.prototype.request = function () {
      var _this3 = this;
      if (this.req) return this.req;
      var options = {};
      try {
        var query = qs2.stringify(this.qs, {
          indices: false,
          strictNullHandling: true,
        });
        if (query) {
          this.qs = {};
          this._query.push(query);
        }
        this._finalizeQueryString();
      } catch (err) {
        return this.emit('error', err);
      }
      var url = this.url;
      var retries = this._retries;
      var queryStringBackticks;
      if (url.includes('`')) {
        var queryStartIndex = url.indexOf('?');
        if (queryStartIndex !== -1) {
          var queryString = url.slice(queryStartIndex + 1);
          queryStringBackticks = queryString.match(/`|%60/g);
        }
      }
      if (url.indexOf('http') !== 0) url = 'http://'.concat(url);
      url = parse(url);
      if (queryStringBackticks) {
        var i = 0;
        url.query = url.query.replace(/%60/g, function () {
          return queryStringBackticks[i++];
        });
        url.search = '?'.concat(url.query);
        url.path = url.pathname + url.search;
      }
      if (/^https?\+unix:/.test(url.protocol) === true) {
        url.protocol = ''.concat(url.protocol.split('+')[0], ':');
        var unixParts = url.path.match(/^([^/]+)(.+)$/);
        options.socketPath = unixParts[1].replace(/%2F/g, '/');
        url.path = unixParts[2];
      }
      if (this._connectOverride) {
        var _url = url,
          hostname = _url.hostname;
        var match =
          hostname in this._connectOverride
            ? this._connectOverride[hostname]
            : this._connectOverride['*'];
        if (match) {
          if (!this._header.host) {
            this.set('host', url.host);
          }
          var newHost;
          var newPort;
          if (_typeof(match) === 'object') {
            newHost = match.host;
            newPort = match.port;
          } else {
            newHost = match;
            newPort = url.port;
          }
          url.host = /:/.test(newHost) ? '['.concat(newHost, ']') : newHost;
          if (newPort) {
            url.host += ':'.concat(newPort);
            url.port = newPort;
          }
          url.hostname = newHost;
        }
      }
      options.method = this.method;
      options.port = url.port;
      options.path = url.path;
      options.host = url.hostname;
      options.ca = this._ca;
      options.key = this._key;
      options.pfx = this._pfx;
      options.cert = this._cert;
      options.passphrase = this._passphrase;
      options.agent = this._agent;
      options.rejectUnauthorized =
        typeof this._disableTLSCerts === 'boolean'
          ? !this._disableTLSCerts
          : process.env.NODE_TLS_REJECT_UNAUTHORIZED !== '0';
      if (this._header.host) {
        options.servername = this._header.host.replace(/:\d+$/, '');
      }
      if (
        this._trustLocalhost &&
        /^(?:localhost|127\.0\.0\.\d+|(0*:)+:0*1)$/.test(url.hostname)
      ) {
        options.rejectUnauthorized = false;
      }
      var mod = this._enableHttp2
        ? exports2.protocols['http2:'].setProtocol(url.protocol)
        : exports2.protocols[url.protocol];
      this.req = mod.request(options);
      var req = this.req;
      req.setNoDelay(true);
      if (options.method !== 'HEAD') {
        req.setHeader('Accept-Encoding', 'gzip, deflate');
      }
      this.protocol = url.protocol;
      this.host = url.host;
      req.once('drain', function () {
        _this3.emit('drain');
      });
      req.on('error', function (err) {
        if (_this3._aborted) return;
        if (_this3._retries !== retries) return;
        if (_this3.response) return;
        _this3.callback(err);
      });
      if (url.auth) {
        var auth2 = url.auth.split(':');
        this.auth(auth2[0], auth2[1]);
      }
      if (this.username && this.password) {
        this.auth(this.username, this.password);
      }
      for (var key in this.header) {
        if (Object.prototype.hasOwnProperty.call(this.header, key))
          req.setHeader(key, this.header[key]);
      }
      if (this.cookies) {
        if (Object.prototype.hasOwnProperty.call(this._header, 'cookie')) {
          var tmpJar = new CookieJar.CookieJar();
          tmpJar.setCookies(this._header.cookie.split(';'));
          tmpJar.setCookies(this.cookies.split(';'));
          req.setHeader(
            'Cookie',
            tmpJar.getCookies(CookieJar.CookieAccessInfo.All).toValueString()
          );
        } else {
          req.setHeader('Cookie', this.cookies);
        }
      }
      return req;
    };
    Request2.prototype.callback = function (err, res) {
      if (this._shouldRetry(err, res)) {
        return this._retry();
      }
      var fn = this._callback || noop;
      this.clearTimeout();
      if (this.called) return console.warn('superagent: double callback bug');
      this.called = true;
      if (!err) {
        try {
          if (!this._isResponseOK(res)) {
            var msg = 'Unsuccessful HTTP response';
            if (res) {
              msg = http.STATUS_CODES[res.status] || msg;
            }
            err = new Error(msg);
            err.status = res ? res.status : void 0;
          }
        } catch (err_) {
          err = err_;
        }
      }
      if (!err) {
        return fn(null, res);
      }
      err.response = res;
      if (this._maxRetries) err.retries = this._retries - 1;
      if (err && this.listeners('error').length > 0) {
        this.emit('error', err);
      }
      fn(err, res);
    };
    Request2.prototype._isHost = function (obj) {
      return (
        Buffer.isBuffer(obj) ||
        obj instanceof Stream ||
        obj instanceof FormData2
      );
    };
    Request2.prototype._emitResponse = function (body, files) {
      var response = new Response2(this);
      this.response = response;
      response.redirects = this._redirectList;
      if (void 0 !== body) {
        response.body = body;
      }
      response.files = files;
      if (this._endCalled) {
        response.pipe = function () {
          throw new Error(
            "end() has already been called, so it's too late to start piping"
          );
        };
      }
      this.emit('response', response);
      return response;
    };
    Request2.prototype.end = function (fn) {
      this.request();
      debug2('%s %s', this.method, this.url);
      if (this._endCalled) {
        throw new Error(
          '.end() was called twice. This is not supported in superagent'
        );
      }
      this._endCalled = true;
      this._callback = fn || noop;
      this._end();
    };
    Request2.prototype._end = function () {
      var _this4 = this;
      if (this._aborted)
        return this.callback(
          new Error(
            'The request has been aborted even before .end() was called'
          )
        );
      var data = this._data;
      var req = this.req;
      var method = this.method;
      this._setTimeouts();
      if (method !== 'HEAD' && !req._headerSent) {
        if (typeof data !== 'string') {
          var contentType = req.getHeader('Content-Type');
          if (contentType) contentType = contentType.split(';')[0];
          var serialize2 = this._serializer || exports2.serialize[contentType];
          if (!serialize2 && isJSON(contentType)) {
            serialize2 = exports2.serialize['application/json'];
          }
          if (serialize2) data = serialize2(data);
        }
        if (data && !req.getHeader('Content-Length')) {
          req.setHeader(
            'Content-Length',
            Buffer.isBuffer(data) ? data.length : Buffer.byteLength(data)
          );
        }
      }
      req.once('response', function (res) {
        debug2('%s %s -> %s', _this4.method, _this4.url, res.statusCode);
        if (_this4._responseTimeoutTimer) {
          clearTimeout(_this4._responseTimeoutTimer);
        }
        if (_this4.piped) {
          return;
        }
        var max = _this4._maxRedirects;
        var mime2 =
          utils.type(res.headers['content-type'] || '') || 'text/plain';
        var type = mime2.split('/')[0];
        if (type) type = type.toLowerCase().trim();
        var multipart = type === 'multipart';
        var redirect = isRedirect(res.statusCode);
        var responseType = _this4._responseType;
        _this4.res = res;
        if (redirect && _this4._redirects++ !== max) {
          return _this4._redirect(res);
        }
        if (_this4.method === 'HEAD') {
          _this4.emit('end');
          _this4.callback(null, _this4._emitResponse());
          return;
        }
        if (_this4._shouldUnzip(res)) {
          unzip(req, res);
        }
        var buffer = _this4._buffer;
        if (buffer === void 0 && mime2 in exports2.buffer) {
          buffer = Boolean(exports2.buffer[mime2]);
        }
        var parser = _this4._parser;
        if (void 0 === buffer) {
          if (parser) {
            console.warn(
              "A custom superagent parser has been set, but buffering strategy for the parser hasn't been configured. Call `req.buffer(true or false)` or set `superagent.buffer[mime] = true or false`"
            );
            buffer = true;
          }
        }
        if (!parser) {
          if (responseType) {
            parser = exports2.parse.image;
            buffer = true;
          } else if (multipart) {
            var form = new formidable.IncomingForm();
            parser = form.parse.bind(form);
            buffer = true;
          } else if (isImageOrVideo(mime2)) {
            parser = exports2.parse.image;
            buffer = true;
          } else if (exports2.parse[mime2]) {
            parser = exports2.parse[mime2];
          } else if (type === 'text') {
            parser = exports2.parse.text;
            buffer = buffer !== false;
          } else if (isJSON(mime2)) {
            parser = exports2.parse['application/json'];
            buffer = buffer !== false;
          } else if (buffer) {
            parser = exports2.parse.text;
          } else if (void 0 === buffer) {
            parser = exports2.parse.image;
            buffer = true;
          }
        }
        if ((void 0 === buffer && isText2(mime2)) || isJSON(mime2)) {
          buffer = true;
        }
        _this4._resBuffered = buffer;
        var parserHandlesEnd = false;
        if (buffer) {
          var responseBytesLeft = _this4._maxResponseSize || 2e8;
          res.on('data', function (buf) {
            responseBytesLeft -= buf.byteLength || buf.length;
            if (responseBytesLeft < 0) {
              var err = new Error('Maximum response size reached');
              err.code = 'ETOOLARGE';
              parserHandlesEnd = false;
              res.destroy(err);
            }
          });
        }
        if (parser) {
          try {
            parserHandlesEnd = buffer;
            parser(res, function (err, obj, files) {
              if (_this4.timedout) {
                return;
              }
              if (err && !_this4._aborted) {
                return _this4.callback(err);
              }
              if (parserHandlesEnd) {
                _this4.emit('end');
                _this4.callback(null, _this4._emitResponse(obj, files));
              }
            });
          } catch (err) {
            _this4.callback(err);
            return;
          }
        }
        _this4.res = res;
        if (!buffer) {
          debug2('unbuffered %s %s', _this4.method, _this4.url);
          _this4.callback(null, _this4._emitResponse());
          if (multipart) return;
          res.once('end', function () {
            debug2('end %s %s', _this4.method, _this4.url);
            _this4.emit('end');
          });
          return;
        }
        res.once('error', function (err) {
          parserHandlesEnd = false;
          _this4.callback(err, null);
        });
        if (!parserHandlesEnd)
          res.once('end', function () {
            debug2('end %s %s', _this4.method, _this4.url);
            _this4.emit('end');
            _this4.callback(null, _this4._emitResponse());
          });
      });
      this.emit('request', this);
      var getProgressMonitor = function getProgressMonitor2() {
        var lengthComputable = true;
        var total = req.getHeader('Content-Length');
        var loaded = 0;
        var progress = new Stream.Transform();
        progress._transform = function (chunk, encoding, cb) {
          loaded += chunk.length;
          _this4.emit('progress', {
            direction: 'upload',
            lengthComputable,
            loaded,
            total,
          });
          cb(null, chunk);
        };
        return progress;
      };
      var bufferToChunks = function bufferToChunks2(buffer) {
        var chunkSize = 16 * 1024;
        var chunking = new Stream.Readable();
        var totalLength = buffer.length;
        var remainder = totalLength % chunkSize;
        var cutoff = totalLength - remainder;
        for (var i2 = 0; i2 < cutoff; i2 += chunkSize) {
          var chunk = buffer.slice(i2, i2 + chunkSize);
          chunking.push(chunk);
        }
        if (remainder > 0) {
          var remainderBuffer = buffer.slice(-remainder);
          chunking.push(remainderBuffer);
        }
        chunking.push(null);
        return chunking;
      };
      var formData = this._formData;
      if (formData) {
        var headers = formData.getHeaders();
        for (var i in headers) {
          if (Object.prototype.hasOwnProperty.call(headers, i)) {
            debug2('setting FormData header: "%s: %s"', i, headers[i]);
            req.setHeader(i, headers[i]);
          }
        }
        formData.getLength(function (err, length) {
          if (err) debug2('formData.getLength had error', err, length);
          debug2('got FormData Content-Length: %s', length);
          if (typeof length === 'number') {
            req.setHeader('Content-Length', length);
          }
          formData.pipe(getProgressMonitor()).pipe(req);
        });
      } else if (Buffer.isBuffer(data)) {
        bufferToChunks(data).pipe(getProgressMonitor()).pipe(req);
      } else {
        req.end(data);
      }
    };
    Request2.prototype._shouldUnzip = function (res) {
      if (res.statusCode === 204 || res.statusCode === 304) {
        return false;
      }
      if (res.headers['content-length'] === '0') {
        return false;
      }
      return /^\s*(?:deflate|gzip)\s*$/.test(res.headers['content-encoding']);
    };
    Request2.prototype.connect = function (connectOverride) {
      if (typeof connectOverride === 'string') {
        this._connectOverride = {
          '*': connectOverride,
        };
      } else if (_typeof(connectOverride) === 'object') {
        this._connectOverride = connectOverride;
      } else {
        this._connectOverride = void 0;
      }
      return this;
    };
    Request2.prototype.trustLocalhost = function (toggle) {
      this._trustLocalhost = toggle === void 0 ? true : toggle;
      return this;
    };
    if (!methods.includes('del')) {
      methods = methods.slice(0);
      methods.push('del');
    }
    methods.forEach(function (method) {
      var name = method;
      method = method === 'del' ? 'delete' : method;
      method = method.toUpperCase();
      request2[name] = function (url, data, fn) {
        var req = request2(method, url);
        if (typeof data === 'function') {
          fn = data;
          data = null;
        }
        if (data) {
          if (method === 'GET' || method === 'HEAD') {
            req.query(data);
          } else {
            req.send(data);
          }
        }
        if (fn) req.end(fn);
        return req;
      };
    });
    function isText2(mime2) {
      var parts = mime2.split('/');
      var type = parts[0];
      if (type) type = type.toLowerCase().trim();
      var subtype = parts[1];
      if (subtype) subtype = subtype.toLowerCase().trim();
      return type === 'text' || subtype === 'x-www-form-urlencoded';
    }
    function isImageOrVideo(mime2) {
      var type = mime2.split('/')[0];
      if (type) type = type.toLowerCase().trim();
      return type === 'image' || type === 'video';
    }
    function isJSON(mime2) {
      return /[/+]json($|[^-\w])/i.test(mime2);
    }
    function isRedirect(code) {
      return [301, 302, 303, 305, 307, 308].includes(code);
    }
  },
});

// node_modules/supertest/lib/test.js
var require_test = __commonJS({
  'node_modules/supertest/lib/test.js'(exports2, module2) {
    'use strict';
    var request2 = require_node7();
    var util = require('util');
    var http = require('http');
    var https = require('https');
    var assert = require('assert');
    var Request2 = request2.Request;
    module2.exports = Test;
    function Test(app2, method, path) {
      Request2.call(this, method.toUpperCase(), path);
      this.redirects(0);
      this.buffer();
      this.app = app2;
      this._asserts = [];
      this.url =
        typeof app2 === 'string' ? app2 + path : this.serverAddress(app2, path);
    }
    Object.setPrototypeOf(Test.prototype, Request2.prototype);
    Test.prototype.serverAddress = function (app2, path) {
      var addr = app2.address();
      var port;
      var protocol;
      if (!addr) this._server = app2.listen(0);
      port = app2.address().port;
      protocol = app2 instanceof https.Server ? 'https' : 'http';
      return protocol + '://127.0.0.1:' + port + path;
    };
    function wrapAssertFn(assertFn) {
      var savedStack = new Error().stack.split('\n').slice(3);
      return function (res) {
        var badStack;
        var err = assertFn(res);
        if (err instanceof Error && err.stack) {
          badStack = err.stack.replace(err.message, '').split('\n').slice(1);
          err.stack = [err.toString()]
            .concat(savedStack)
            .concat('----')
            .concat(badStack)
            .join('\n');
        }
        return err;
      };
    }
    Test.prototype.expect = function (a, b, c2) {
      if (typeof a === 'function') {
        this._asserts.push(wrapAssertFn(a));
        return this;
      }
      if (typeof b === 'function') this.end(b);
      if (typeof c2 === 'function') this.end(c2);
      if (typeof a === 'number') {
        this._asserts.push(wrapAssertFn(this._assertStatus.bind(this, a)));
        if (typeof b !== 'function' && arguments.length > 1) {
          this._asserts.push(wrapAssertFn(this._assertBody.bind(this, b)));
        }
        return this;
      }
      if (
        Array.isArray(a) &&
        a.length > 0 &&
        a.every((val) => typeof val === 'number')
      ) {
        this._asserts.push(wrapAssertFn(this._assertStatusArray.bind(this, a)));
        return this;
      }
      if (
        typeof b === 'string' ||
        typeof b === 'number' ||
        b instanceof RegExp
      ) {
        this._asserts.push(
          wrapAssertFn(
            this._assertHeader.bind(this, { name: '' + a, value: b })
          )
        );
        return this;
      }
      this._asserts.push(wrapAssertFn(this._assertBody.bind(this, a)));
      return this;
    };
    Test.prototype.end = function (fn) {
      var self2 = this;
      var server = this._server;
      var end = Request2.prototype.end;
      end.call(this, function (err, res) {
        if (server && server._handle) return server.close(localAssert);
        localAssert();
        function localAssert() {
          self2.assert(err, res, fn);
        }
      });
      return this;
    };
    Test.prototype.assert = function (resError, res, fn) {
      var errorObj;
      var i;
      var sysErrors = {
        ECONNREFUSED: 'Connection refused',
        ECONNRESET: 'Connection reset by peer',
        EPIPE: 'Broken pipe',
        ETIMEDOUT: 'Operation timed out',
      };
      if (!res && resError) {
        if (
          resError instanceof Error &&
          resError.syscall === 'connect' &&
          Object.getOwnPropertyNames(sysErrors).indexOf(resError.code) >= 0
        ) {
          errorObj = new Error(resError.code + ': ' + sysErrors[resError.code]);
        } else {
          errorObj = resError;
        }
      }
      for (i = 0; i < this._asserts.length && !errorObj; i += 1) {
        errorObj = this._assertFunction(this._asserts[i], res);
      }
      if (
        !errorObj &&
        resError instanceof Error &&
        (!res || resError.status !== res.status)
      ) {
        errorObj = resError;
      }
      fn.call(this, errorObj || null, res);
    };
    Test.prototype._assertBody = function (body, res) {
      var isregexp = body instanceof RegExp;
      var a;
      var b;
      if (typeof body === 'object' && !isregexp) {
        try {
          assert.deepStrictEqual(body, res.body);
        } catch (err) {
          a = util.inspect(body);
          b = util.inspect(res.body);
          return error(
            'expected ' + a + ' response body, got ' + b,
            body,
            res.body
          );
        }
      } else if (body !== res.text) {
        a = util.inspect(body);
        b = util.inspect(res.text);
        if (isregexp) {
          if (!body.test(res.text)) {
            return error(
              'expected body ' + b + ' to match ' + body,
              body,
              res.body
            );
          }
        } else {
          return error(
            'expected ' + a + ' response body, got ' + b,
            body,
            res.body
          );
        }
      }
    };
    Test.prototype._assertHeader = function (header, res) {
      var field = header.name;
      var actual = res.header[field.toLowerCase()];
      var fieldExpected = header.value;
      if (typeof actual === 'undefined')
        return new Error('expected "' + field + '" header field');
      if (
        (Array.isArray(actual) && actual.toString() === fieldExpected) ||
        fieldExpected === actual
      ) {
        return;
      }
      if (fieldExpected instanceof RegExp) {
        if (!fieldExpected.test(actual)) {
          return new Error(
            'expected "' +
              field +
              '" matching ' +
              fieldExpected +
              ', got "' +
              actual +
              '"'
          );
        }
      } else {
        return new Error(
          'expected "' +
            field +
            '" of "' +
            fieldExpected +
            '", got "' +
            actual +
            '"'
        );
      }
    };
    Test.prototype._assertStatus = function (status, res) {
      var a;
      var b;
      if (res.status !== status) {
        a = http.STATUS_CODES[status];
        b = http.STATUS_CODES[res.status];
        return new Error(
          'expected ' +
            status +
            ' "' +
            a +
            '", got ' +
            res.status +
            ' "' +
            b +
            '"'
        );
      }
    };
    Test.prototype._assertStatusArray = function (statusArray, res) {
      var b;
      var expectedList;
      if (!statusArray.includes(res.status)) {
        b = http.STATUS_CODES[res.status];
        expectedList = statusArray.join(', ');
        return new Error(
          'expected one of "' +
            expectedList +
            '", got ' +
            res.status +
            ' "' +
            b +
            '"'
        );
      }
    };
    Test.prototype._assertFunction = function (fn, res) {
      var err;
      try {
        err = fn(res);
      } catch (e2) {
        err = e2;
      }
      if (err instanceof Error) return err;
    };
    function error(msg, expected, actual) {
      var err = new Error(msg);
      err.expected = expected;
      err.actual = actual;
      err.showDiff = true;
      return err;
    }
  },
});

// node_modules/supertest/lib/agent.js
var require_agent2 = __commonJS({
  'node_modules/supertest/lib/agent.js'(exports2, module2) {
    'use strict';
    var Agent = require_node7().agent;
    var methods = require_methods2();
    var http = require('http');
    var Test = require_test();
    module2.exports = TestAgent;
    function TestAgent(app2, options) {
      if (!(this instanceof TestAgent)) return new TestAgent(app2, options);
      if (typeof app2 === 'function') app2 = http.createServer(app2);
      if (options) {
        this._ca = options.ca;
        this._key = options.key;
        this._cert = options.cert;
      }
      Agent.call(this);
      this.app = app2;
    }
    Object.setPrototypeOf(TestAgent.prototype, Agent.prototype);
    TestAgent.prototype.host = function (host) {
      this._host = host;
      return this;
    };
    methods.forEach(function (method) {
      TestAgent.prototype[method] = function (url, fn) {
        var req = new Test(this.app, method.toUpperCase(), url, this._host);
        req.ca(this._ca);
        req.cert(this._cert);
        req.key(this._key);
        if (this._host) {
          req.set('host', this._host);
        }
        req.on('response', this._saveCookies.bind(this));
        req.on('redirect', this._saveCookies.bind(this));
        req.on('redirect', this._attachCookies.bind(this, req));
        this._attachCookies(req);
        this._setDefaults(req);
        return req;
      };
    });
    TestAgent.prototype.del = TestAgent.prototype.delete;
  },
});

// node_modules/supertest/index.js
var require_supertest = __commonJS({
  'node_modules/supertest/index.js'(exports2, module2) {
    'use strict';
    var methods = require_methods2();
    var Test = require_test();
    var http = require('http');
    module2.exports = function (app2) {
      var obj = {};
      if (typeof app2 === 'function') {
        app2 = http.createServer(app2);
      }
      methods.forEach(function (method) {
        obj[method] = function (url) {
          return new Test(app2, method, url);
        };
      });
      obj.del = obj.delete;
      return obj;
    };
    module2.exports.Test = Test;
    module2.exports.agent = require_agent2();
  },
});

// src/app.ts
var import_express = __toESM(require_express2());

// src/types/errors.ts
var RoleError = class extends Error {
  constructor(httpCode, message) {
    super(message);
    this.httpCode = httpCode;
  }
};
var UnauthorizedError = class extends Error {
  cause;
  constructor(cause, message, options) {
    super(message, options);
    this.cause = cause;
  }
};
var OTPGenerationError = class extends Error {
  constructor() {
    super('Failed to generate a unique OTP');
  }
};
var InvalidEmailError = class extends Error {
  constructor() {
    super('Email provided is invalid');
  }
};
var DuplicateEmailError = class extends Error {
  constructor() {
    super('This email is already registered with another user');
  }
};
var LoginError = class extends Error {
  constructor() {
    super('Incorrect email or password');
  }
};
var MissingEnvError = class extends Error {
  constructor(missingEnv) {
    super(`Environment variable not defined: ${missingEnv}`);
  }
};
var ResendError = class extends Error {};
var DatabaseSchemaError = class extends Error {};
var MissingParameterError = class extends Error {
  constructor(missingParam) {
    super(`Missing parameter in request body: ${missingParam}`);
  }
};

// src/app/utils.ts
var validRole = (role) => {
  return [
    'ADMIN' /* ADMIN */,
    'HACKER' /* HACKER */,
    'SPONSOR' /* SPONSOR */,
    'VOLUNTEER' /* VOLUNTEER */,
    'JUDGE' /* JUDGE */,
  ].includes(role);
};
var createResponseBody = (body) => {
  const defaultResponseBody = {
    meta: { message: 'Success', statusCode: 200 },
  };
  if (body === void 0) return defaultResponseBody;
  return { ...defaultResponseBody, ...body };
};

// ../../node_modules/lucia/dist/utils/cookie.js
var parseCookie = (str) => {
  const obj = {};
  let index = 0;
  while (index < str.length) {
    const eqIdx = str.indexOf('=', index);
    if (eqIdx === -1) {
      break;
    }
    let endIdx = str.indexOf(';', index);
    if (endIdx === -1) {
      endIdx = str.length;
    } else if (endIdx < eqIdx) {
      index = str.lastIndexOf(';', eqIdx - 1) + 1;
      continue;
    }
    const key = str.slice(index, eqIdx).trim();
    if (!(key in obj)) {
      let val = str.slice(eqIdx + 1, endIdx).trim();
      if (val.charCodeAt(0) === 34) {
        val = val.slice(1, -1);
      }
      obj[key] = tryDecode(val);
    }
    index = endIdx + 1;
  }
  return obj;
};
var serializeCookie = (name, val, options) => {
  const opt = options ?? {};
  const enc = opt.encode ?? encodeURIComponent;
  const value = enc(val);
  let str = name + '=' + value;
  if (null != opt.maxAge) {
    const maxAge = opt.maxAge - 0;
    if (isNaN(maxAge) || !isFinite(maxAge)) {
      throw new TypeError('option maxAge is invalid');
    }
    str += '; Max-Age=' + Math.floor(maxAge);
  }
  if (opt.domain) {
    str += '; Domain=' + opt.domain;
  }
  if (opt.path) {
    str += '; Path=' + opt.path;
  }
  if (opt.expires) {
    const expires = opt.expires;
    str += '; Expires=' + expires.toUTCString();
  }
  if (opt.httpOnly) {
    str += '; HttpOnly';
  }
  if (opt.secure) {
    str += '; Secure';
  }
  if (opt.priority) {
    const priority =
      typeof opt.priority === 'string'
        ? opt.priority.toLowerCase()
        : opt.priority;
    switch (priority) {
      case 'low':
        str += '; Priority=Low';
        break;
      case 'medium':
        str += '; Priority=Medium';
        break;
      case 'high':
        str += '; Priority=High';
        break;
      default:
        throw new TypeError('option priority is invalid');
    }
  }
  if (opt.sameSite) {
    const sameSite =
      typeof opt.sameSite === 'string'
        ? opt.sameSite.toLowerCase()
        : opt.sameSite;
    switch (sameSite) {
      case true:
        str += '; SameSite=Strict';
        break;
      case 'lax':
        str += '; SameSite=Lax';
        break;
      case 'strict':
        str += '; SameSite=Strict';
        break;
      case 'none':
        str += '; SameSite=None';
        break;
      default:
        throw new TypeError('option sameSite is invalid');
    }
  }
  return str;
};
var tryDecode = (str) => {
  try {
    return decodeURIComponent(str);
  } catch (e2) {
    return str;
  }
};

// ../../node_modules/lucia/dist/auth/cookie.js
var DEFAULT_SESSION_COOKIE_NAME = 'auth_session';
var createSessionCookie = (session, options) => {
  const getExpiration = () => {
    if (session === null) return 0;
    if (options.expires) {
      return session.idlePeriodExpiresAt;
    }
    return /* @__PURE__ */ new Date().getTime() + 1e3 * 60 * 60 * 24 * 365;
  };
  return new Cookie(
    options.name ?? DEFAULT_SESSION_COOKIE_NAME,
    session?.sessionId ?? '',
    {
      ...options.attributes,
      httpOnly: true,
      expires: new Date(getExpiration()),
      secure: options.env === 'PROD',
    }
  );
};
var Cookie = class {
  constructor(name, value, options) {
    this.name = name;
    this.value = value;
    this.attributes = options;
  }
  name;
  value;
  attributes;
  serialize = () => {
    return serializeCookie(this.name, this.value, this.attributes);
  };
};

// ../../node_modules/lucia/dist/utils/log.js
var logError = (message) => {
  console.log('\x1B[31m%s\x1B[31m', `[LUCIA_ERROR] ${message}`);
};

// ../../node_modules/lucia/dist/scrypt/pbkdf.js
var pbkdf2 = async (password, salt, options) => {
  const pwKey = await crypto.subtle.importKey(
    'raw',
    password,
    'PBKDF2',
    false,
    ['deriveBits']
  );
  const keyBuffer = await crypto.subtle.deriveBits(
    {
      name: 'PBKDF2',
      hash: 'SHA-256',
      salt,
      iterations: options.c,
    },
    pwKey,
    options.dkLen * 8
  );
  return new Uint8Array(keyBuffer);
};

// ../../node_modules/lucia/dist/scrypt/utils.js
var u32 = (arr) =>
  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));
var nextTick = async () => {};
function checkOpts(defaults, opts) {
  const merged = Object.assign(defaults, opts);
  return merged;
}
var asyncLoop = async (iters, tick, cb) => {
  let ts2 = Date.now();
  for (let i = 0; i < iters; i++) {
    cb(i);
    const diff = Date.now() - ts2;
    if (diff >= 0 && diff < tick) continue;
    await nextTick();
    ts2 += diff;
  }
};

// ../../node_modules/lucia/dist/scrypt/index.js
var rotl = (a, b) => (a << b) | (a >>> (32 - b));
var XorAndSalsa = (prev, pi2, input, ii2, out, oi2) => {
  const y00 = prev[pi2++] ^ input[ii2++],
    y01 = prev[pi2++] ^ input[ii2++];
  const y02 = prev[pi2++] ^ input[ii2++],
    y03 = prev[pi2++] ^ input[ii2++];
  const y04 = prev[pi2++] ^ input[ii2++],
    y05 = prev[pi2++] ^ input[ii2++];
  const y06 = prev[pi2++] ^ input[ii2++],
    y07 = prev[pi2++] ^ input[ii2++];
  const y08 = prev[pi2++] ^ input[ii2++],
    y09 = prev[pi2++] ^ input[ii2++];
  const y10 = prev[pi2++] ^ input[ii2++],
    y11 = prev[pi2++] ^ input[ii2++];
  const y12 = prev[pi2++] ^ input[ii2++],
    y13 = prev[pi2++] ^ input[ii2++];
  const y14 = prev[pi2++] ^ input[ii2++],
    y15 = prev[pi2++] ^ input[ii2++];
  let x00 = y00,
    x01 = y01,
    x02 = y02,
    x03 = y03,
    x04 = y04,
    x05 = y05,
    x06 = y06,
    x07 = y07,
    x08 = y08,
    x09 = y09,
    x10 = y10,
    x11 = y11,
    x12 = y12,
    x13 = y13,
    x14 = y14,
    x15 = y15;
  for (let i = 0; i < 8; i += 2) {
    x04 ^= rotl((x00 + x12) | 0, 7);
    x08 ^= rotl((x04 + x00) | 0, 9);
    x12 ^= rotl((x08 + x04) | 0, 13);
    x00 ^= rotl((x12 + x08) | 0, 18);
    x09 ^= rotl((x05 + x01) | 0, 7);
    x13 ^= rotl((x09 + x05) | 0, 9);
    x01 ^= rotl((x13 + x09) | 0, 13);
    x05 ^= rotl((x01 + x13) | 0, 18);
    x14 ^= rotl((x10 + x06) | 0, 7);
    x02 ^= rotl((x14 + x10) | 0, 9);
    x06 ^= rotl((x02 + x14) | 0, 13);
    x10 ^= rotl((x06 + x02) | 0, 18);
    x03 ^= rotl((x15 + x11) | 0, 7);
    x07 ^= rotl((x03 + x15) | 0, 9);
    x11 ^= rotl((x07 + x03) | 0, 13);
    x15 ^= rotl((x11 + x07) | 0, 18);
    x01 ^= rotl((x00 + x03) | 0, 7);
    x02 ^= rotl((x01 + x00) | 0, 9);
    x03 ^= rotl((x02 + x01) | 0, 13);
    x00 ^= rotl((x03 + x02) | 0, 18);
    x06 ^= rotl((x05 + x04) | 0, 7);
    x07 ^= rotl((x06 + x05) | 0, 9);
    x04 ^= rotl((x07 + x06) | 0, 13);
    x05 ^= rotl((x04 + x07) | 0, 18);
    x11 ^= rotl((x10 + x09) | 0, 7);
    x08 ^= rotl((x11 + x10) | 0, 9);
    x09 ^= rotl((x08 + x11) | 0, 13);
    x10 ^= rotl((x09 + x08) | 0, 18);
    x12 ^= rotl((x15 + x14) | 0, 7);
    x13 ^= rotl((x12 + x15) | 0, 9);
    x14 ^= rotl((x13 + x12) | 0, 13);
    x15 ^= rotl((x14 + x13) | 0, 18);
  }
  out[oi2++] = (y00 + x00) | 0;
  out[oi2++] = (y01 + x01) | 0;
  out[oi2++] = (y02 + x02) | 0;
  out[oi2++] = (y03 + x03) | 0;
  out[oi2++] = (y04 + x04) | 0;
  out[oi2++] = (y05 + x05) | 0;
  out[oi2++] = (y06 + x06) | 0;
  out[oi2++] = (y07 + x07) | 0;
  out[oi2++] = (y08 + x08) | 0;
  out[oi2++] = (y09 + x09) | 0;
  out[oi2++] = (y10 + x10) | 0;
  out[oi2++] = (y11 + x11) | 0;
  out[oi2++] = (y12 + x12) | 0;
  out[oi2++] = (y13 + x13) | 0;
  out[oi2++] = (y14 + x14) | 0;
  out[oi2++] = (y15 + x15) | 0;
};
var BlockMix = (input, ii2, out, oi2, r2) => {
  let head = oi2 + 0;
  let tail = oi2 + 16 * r2;
  for (let i = 0; i < 16; i++)
    out[tail + i] = input[ii2 + (2 * r2 - 1) * 16 + i];
  for (let i = 0; i < r2; i++, head += 16, ii2 += 16) {
    XorAndSalsa(out, tail, input, ii2, out, head);
    if (i > 0) tail += 16;
    XorAndSalsa(out, head, input, (ii2 += 16), out, tail);
  }
};
var scryptInit = async (password, salt, _opts) => {
  const opts = checkOpts(
    {
      dkLen: 32,
      asyncTick: 10,
      maxmem: 1024 ** 3 + 1024,
    },
    _opts
  );
  const { N: N2, r: r2, p, dkLen, asyncTick, maxmem, onProgress } = opts;
  if (onProgress !== void 0 && typeof onProgress !== 'function')
    throw new Error('progressCb should be function');
  const blockSize = 128 * r2;
  const blockSize32 = blockSize / 4;
  if (
    N2 <= 1 ||
    (N2 & (N2 - 1)) !== 0 ||
    N2 >= 2 ** (blockSize / 8) ||
    N2 > 2 ** 32
  ) {
    throw new Error(
      'Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32'
    );
  }
  if (p < 0 || p > ((2 ** 32 - 1) * 32) / blockSize) {
    throw new Error(
      'Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)'
    );
  }
  if (dkLen < 0 || dkLen > (2 ** 32 - 1) * 32) {
    throw new Error(
      'Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32'
    );
  }
  const memUsed = blockSize * (N2 + p);
  if (memUsed > maxmem) {
    throw new Error(
      `Scrypt: parameters too large, ${memUsed} (128 * r * (N + p)) > ${maxmem} (maxmem)`
    );
  }
  const B2 = await pbkdf2(password, salt, { c: 1, dkLen: blockSize * p });
  const B32 = u32(B2);
  const V2 = u32(new Uint8Array(blockSize * N2));
  const tmp = u32(new Uint8Array(blockSize));
  let blockMixCb = () => {};
  if (onProgress) {
    const totalBlockMix = 2 * N2 * p;
    const callbackPer = Math.max(Math.floor(totalBlockMix / 1e4), 1);
    let blockMixCnt = 0;
    blockMixCb = () => {
      blockMixCnt++;
      if (
        onProgress &&
        (!(blockMixCnt % callbackPer) || blockMixCnt === totalBlockMix)
      )
        onProgress(blockMixCnt / totalBlockMix);
    };
  }
  return {
    N: N2,
    r: r2,
    p,
    dkLen,
    blockSize32,
    V: V2,
    B32,
    B: B2,
    tmp,
    blockMixCb,
    asyncTick,
  };
};
var scrypt_default = async (password, salt, opts) => {
  const {
    N: N2,
    r: r2,
    p,
    dkLen,
    blockSize32,
    V: V2,
    B32,
    B: B2,
    tmp,
    blockMixCb,
    asyncTick,
  } = await scryptInit(password, salt, opts);
  for (let pi2 = 0; pi2 < p; pi2++) {
    const Pi = blockSize32 * pi2;
    for (let i = 0; i < blockSize32; i++) V2[i] = B32[Pi + i];
    let pos = 0;
    await asyncLoop(N2 - 1, asyncTick, (i) => {
      BlockMix(V2, pos, V2, (pos += blockSize32), r2);
      blockMixCb();
    });
    BlockMix(V2, (N2 - 1) * blockSize32, B32, Pi, r2);
    blockMixCb();
    await asyncLoop(N2, asyncTick, (i) => {
      const j2 = B32[Pi + blockSize32 - 16] % N2;
      for (let k2 = 0; k2 < blockSize32; k2++)
        tmp[k2] = B32[Pi + k2] ^ V2[j2 * blockSize32 + k2];
      BlockMix(tmp, 0, B32, Pi, r2);
      blockMixCb();
    });
  }
  const res = await pbkdf2(password, B2, { c: 1, dkLen });
  B2.fill(0);
  V2.fill(0);
  tmp.fill(0);
  return res;
};

// ../../node_modules/lucia/dist/utils/nanoid.js
var getRandomValues = (bytes) => {
  return crypto.getRandomValues(new Uint8Array(bytes));
};
var DEFAULT_ALPHABET = 'abcdefghijklmnopqrstuvwxyz1234567890';
var generateRandomString = (size, alphabet = DEFAULT_ALPHABET) => {
  const mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1;
  const step = -~((1.6 * mask * size) / alphabet.length);
  let bytes = getRandomValues(step);
  let id = '';
  let index = 0;
  while (id.length !== size) {
    id += alphabet[bytes[index] & mask] ?? '';
    index += 1;
    if (index > bytes.length) {
      bytes = getRandomValues(step);
      index = 0;
    }
  }
  return id;
};

// ../../node_modules/lucia/dist/utils/crypto.js
var generateScryptHash = async (s2) => {
  const salt = generateRandomString(16);
  const key = await hashWithScrypt(s2.normalize('NFKC'), salt);
  return `s2:${salt}:${key}`;
};
var hashWithScrypt = async (s2, salt, blockSize = 16) => {
  const keyUint8Array = await scrypt_default(
    new TextEncoder().encode(s2),
    new TextEncoder().encode(salt),
    {
      N: 16384,
      r: blockSize,
      p: 1,
      dkLen: 64,
    }
  );
  return convertUint8ArrayToHex(keyUint8Array);
};
var validateScryptHash = async (s2, hash) => {
  const arr = hash.split(':');
  if (arr.length === 2) {
    const [salt2, key2] = arr;
    const targetKey = await hashWithScrypt(s2.normalize('NFKC'), salt2, 8);
    const result = constantTimeEqual(targetKey, key2);
    return result;
  }
  if (arr.length !== 3) return false;
  const [version, salt, key] = arr;
  if (version === 's2') {
    const targetKey = await hashWithScrypt(s2.normalize('NFKC'), salt);
    const result = constantTimeEqual(targetKey, key);
    return result;
  }
  return false;
};
var constantTimeEqual = (a, b) => {
  if (a.length !== b.length) {
    return false;
  }
  const aUint8Array = new TextEncoder().encode(a);
  const bUint8Array = new TextEncoder().encode(b);
  let c2 = 0;
  for (let i = 0; i < a.length; i++) {
    c2 |= aUint8Array[i] ^ bUint8Array[i];
  }
  return c2 === 0;
};
var convertUint8ArrayToHex = (arr) => {
  return [...arr].map((x) => x.toString(16).padStart(2, '0')).join('');
};

// ../../node_modules/lucia/dist/auth/error.js
var LuciaError = class extends Error {
  constructor(errorMsg, detail) {
    super(errorMsg);
    this.message = errorMsg;
    this.detail = detail ?? '';
  }
  detail;
  message;
};

// ../../node_modules/lucia/dist/utils/date.js
var isWithinExpiration = (expiresInMs) => {
  const currentTime = Date.now();
  if (currentTime > expiresInMs) return false;
  return true;
};

// ../../node_modules/lucia/dist/auth/session.js
var isValidDatabaseSession = (databaseSession) => {
  return isWithinExpiration(databaseSession.idle_expires);
};

// ../../node_modules/lucia/dist/utils/debug.js
var DEBUG_GLOBAL = '__lucia_debug_mode';
var ESCAPE = '\x1B';
var DEFAULT_TEXT_FORMAT = '\x1B[0m';
var DEFAULT_FG_BG = `${ESCAPE}[0m`;
var RED_CODE = 9;
var LUCIA_COLOR_CODE = 63;
var WHITE_CODE = 231;
var GREEN_CODE = 34;
var CYAN_CODE = 6;
var YELLOW_CODE = 3;
var PURPLE_CODE = 5;
var BLUE_CODE = 4;
var globalContext = globalThis;
globalContext[DEBUG_GLOBAL] = false;
var format = (text, format2, removeFormat) => {
  return `${format2}${text}${
    removeFormat ? removeFormat : DEFAULT_TEXT_FORMAT
  }`;
};
var bgFormat = (text, colorCode) => {
  return format(text, `${ESCAPE}[48;5;${colorCode}m`, DEFAULT_FG_BG);
};
var fgFormat = (text, colorCode) => {
  return format(text, `${ESCAPE}[38;5;${colorCode}m`, DEFAULT_FG_BG);
};
var bg = {
  lucia: (text) => bgFormat(text, LUCIA_COLOR_CODE),
  red: (text) => bgFormat(text, RED_CODE),
  white: (text) => bgFormat(text, WHITE_CODE),
  green: (text) => bgFormat(text, GREEN_CODE),
  cyan: (text) => bgFormat(text, CYAN_CODE),
  yellow: (text) => bgFormat(text, YELLOW_CODE),
  purple: (text) => bgFormat(text, PURPLE_CODE),
  blue: (text) => bgFormat(text, BLUE_CODE),
};
var fg = {
  lucia: (text) => fgFormat(text, LUCIA_COLOR_CODE),
  red: (text) => fgFormat(text, RED_CODE),
  white: (text) => fgFormat(text, WHITE_CODE),
  green: (text) => fgFormat(text, GREEN_CODE),
  cyan: (text) => fgFormat(text, CYAN_CODE),
  yellow: (text) => fgFormat(text, YELLOW_CODE),
  purple: (text) => fgFormat(text, PURPLE_CODE),
  blue: (text) => fgFormat(text, BLUE_CODE),
  default: (text) => format(text, DEFAULT_TEXT_FORMAT),
};
var bold = (text) => {
  return format(text, `${ESCAPE}[1m`, `${ESCAPE}[22m`);
};
var dim = (text) => {
  return format(text, `${ESCAPE}[2m`, `${ESCAPE}[22m`);
};
var isDebugModeEnabled = () => {
  return Boolean(globalContext[DEBUG_GLOBAL]);
};
var linebreak = () => console.log('');
var createCategory = (name, themeTextColor) => {
  const createLogger = (textColor = fg.default) => {
    return (text, subtext) => {
      if (!isDebugModeEnabled()) return;
      if (subtext) {
        return log(themeTextColor(`[${name}]`), `${textColor(text)}`, subtext);
      }
      log(themeTextColor(`[${name}]`), `${textColor(text)}`);
    };
  };
  return {
    info: createLogger(),
    notice: createLogger(fg.yellow),
    fail: createLogger(fg.red),
    success: createLogger(fg.green),
  };
};
var enableDebugMode = () => {
  globalContext[DEBUG_GLOBAL] = true;
};
var disableDebugMode = () => {
  globalContext[DEBUG_GLOBAL] = false;
};
var debug = {
  init: (debugEnabled) => {
    if (debugEnabled) {
      enableDebugMode();
      linebreak();
      console.log(
        ` ${bg.lucia(bold(fg.white(' lucia ')))}  ${fg.lucia(
          bold('Debug mode enabled')
        )}`
      );
    } else {
      disableDebugMode();
    }
  },
  request: {
    init: (method, href) => {
      if (!isDebugModeEnabled()) return;
      linebreak();
      const getUrl = () => {
        try {
          const url = new URL(href);
          return url.origin + url.pathname;
        } catch {
          return href;
        }
      };
      log(
        bg.cyan(bold(fg.white(' request '))),
        fg.cyan(`${method.toUpperCase()} ${getUrl()}`)
      );
    },
    ...createCategory('request', fg.cyan),
  },
  session: createCategory('session', fg.purple),
  key: createCategory('key', fg.blue),
};
var log = (type, text, subtext) => {
  if (!subtext) {
    return console.log(
      `${dim(/* @__PURE__ */ new Date().toLocaleTimeString())}  ${type} ${text}`
    );
  }
  console.log(
    `${dim(
      /* @__PURE__ */ new Date().toLocaleTimeString()
    )}  ${type} ${text} ${dim(subtext)}`
  );
};

// ../../node_modules/lucia/dist/auth/request.js
var AuthRequest = class {
  auth;
  context;
  constructor(auth2, { context, csrfProtectionEnabled }) {
    debug.request.init(context.request.method, context.request.url);
    this.auth = auth2;
    this.context = context;
    try {
      if (csrfProtectionEnabled) {
        auth2.validateRequestOrigin(context.request);
      }
      this.storedSessionId =
        context.request.storedSessionCookie ??
        auth2.readSessionCookie(context.request.headers.cookie);
    } catch (e2) {
      this.storedSessionId = null;
    }
    this.bearerToken = auth2.readBearerToken(
      context.request.headers.authorization
    );
  }
  validatePromise = null;
  validateBearerTokenPromise = null;
  storedSessionId;
  bearerToken;
  setSession = (session) => {
    const sessionId = session?.sessionId ?? null;
    if (this.storedSessionId === sessionId) return;
    this.validatePromise = null;
    this.setSessionCookie(session);
  };
  setSessionCookie = (session) => {
    const sessionId = session?.sessionId ?? null;
    if (this.storedSessionId === sessionId) return;
    this.storedSessionId = sessionId;
    try {
      this.context.setCookie(this.auth.createSessionCookie(session));
      if (session) {
        debug.request.notice('Session cookie stored', session.sessionId);
      } else {
        debug.request.notice('Session cookie deleted');
      }
    } catch (e2) {}
  };
  validate = async () => {
    if (this.validatePromise) {
      debug.request.info('Using cached result for session validation');
      return this.validatePromise;
    }
    this.validatePromise = new Promise(async (resolve) => {
      if (!this.storedSessionId) return resolve(null);
      try {
        const session = await this.auth.validateSession(this.storedSessionId);
        if (session.fresh) {
          this.setSessionCookie(session);
        }
        return resolve(session);
      } catch (e2) {
        if (e2 instanceof LuciaError) {
          this.setSessionCookie(null);
          return resolve(null);
        }
        throw e2;
      }
    });
    return await this.validatePromise;
  };
  validateBearerToken = async () => {
    if (this.validateBearerTokenPromise) {
      debug.request.info('Using cached result for bearer token validation');
      return this.validatePromise;
    }
    this.validatePromise = new Promise(async (resolve) => {
      if (!this.bearerToken) return resolve(null);
      try {
        const session = await this.auth.getSession(this.bearerToken);
        if (session.state === 'idle') return resolve(null);
        return resolve(session);
      } catch (e2) {
        if (e2 instanceof LuciaError) {
          return resolve(null);
        }
        throw e2;
      }
    });
    return await this.validatePromise;
  };
};

// ../../node_modules/lucia/dist/middleware/index.js
var express = () => {
  return ({ args }) => {
    const [req, res] = args;
    const getUrl = () => {
      if (!req.headers.host) return '';
      const protocol = req.protocol;
      const host = req.headers.host;
      const pathname = req.path;
      return `${protocol}://${host}${pathname}`;
    };
    const requestContext = {
      request: {
        url: getUrl(),
        method: req.method,
        headers: {
          origin: req.headers.origin ?? null,
          cookie: req.headers.cookie ?? null,
          authorization: req.headers.authorization ?? null,
        },
      },
      setCookie: (cookie) => {
        res.cookie(cookie.name, cookie.value, cookie.attributes);
      },
    };
    return requestContext;
  };
};
var lucia = () => {
  return ({ args }) => args[0];
};

// ../../node_modules/lucia/dist/utils/url.js
var isAllowedUrl = (incomingUrl, app2) => {
  const getHostname = (urlParams) => {
    if (typeof urlParams === 'string') return new URL(urlParams).hostname;
    return urlParams.hostname;
  };
  const incomingHostname = getHostname(incomingUrl);
  const appHostname = getHostname(app2.url);
  const appBaseDomain = getBaseDomain(appHostname);
  if (incomingHostname === appHostname) return true;
  if (app2.allowedSubdomains === '*') {
    if (incomingHostname.endsWith(`.${appBaseDomain}`)) return true;
    return false;
  }
  const allowedHosts = app2.allowedSubdomains.map((subdomain) => {
    return [subdomain, appBaseDomain].join('.');
  });
  return allowedHosts.includes(incomingHostname);
};
var getBaseDomain = (hostname) => {
  if (hostname === 'localhost') return 'localhost';
  return hostname.split('.').slice(-2).join('.');
};

// ../../node_modules/lucia/dist/auth/adapter.js
var createAdapter = (adapter) => {
  if (!('user' in adapter)) return adapter(LuciaError);
  let userAdapter = adapter.user(LuciaError);
  let sessionAdapter = adapter.session(LuciaError);
  if ('getSessionAndUser' in userAdapter) {
    const { getSessionAndUser: _2, ...extractedUserAdapter } = userAdapter;
    userAdapter = extractedUserAdapter;
  }
  if ('getSessionAndUser' in sessionAdapter) {
    const { getSessionAndUser: _2, ...extractedSessionAdapter } =
      sessionAdapter;
    sessionAdapter = extractedSessionAdapter;
  }
  return {
    ...userAdapter,
    ...sessionAdapter,
  };
};

// ../../node_modules/lucia/dist/auth/database.js
var createKeyId = (providerId, providerUserId) => {
  if (providerId.includes(':')) {
    throw new TypeError('Provider id must not include any colons (:)');
  }
  return `${providerId}:${providerUserId}`;
};

// ../../node_modules/lucia/dist/auth/index.js
var lucia2 = (config2) => {
  return new Auth(config2);
};
var validateConfiguration = (config2) => {
  const adapterProvided = config2.adapter;
  if (!adapterProvided) {
    logError('Adapter is not defined in configuration ("config.adapter")');
    process.exit(1);
  }
};
var defaultSessionCookieAttributes = {
  sameSite: 'lax',
  path: '/',
};
var Auth = class {
  adapter;
  sessionCookie;
  sessionExpiresIn;
  env;
  passwordHash;
  middleware;
  csrfProtectionEnabled;
  allowedSubdomains;
  experimental;
  constructor(config2) {
    validateConfiguration(config2);
    this.adapter = createAdapter(config2.adapter);
    this.env = config2.env;
    this.csrfProtectionEnabled =
      typeof config2.csrfProtection === 'boolean'
        ? config2.csrfProtection
        : true;
    this.sessionExpiresIn = {
      activePeriod:
        config2.sessionExpiresIn?.activePeriod ?? 1e3 * 60 * 60 * 24,
      idlePeriod:
        config2.sessionExpiresIn?.idlePeriod ?? 1e3 * 60 * 60 * 24 * 14,
    };
    this.getUserAttributes = (databaseUser) => {
      const defaultTransform = () => {
        return {};
      };
      const transform = config2.getUserAttributes ?? defaultTransform;
      return transform(databaseUser);
    };
    this.getSessionAttributes = (databaseSession) => {
      const defaultTransform = () => {
        return {};
      };
      const transform = config2.getSessionAttributes ?? defaultTransform;
      return transform(databaseSession);
    };
    this.sessionCookie = {
      name: config2.sessionCookie?.name ?? DEFAULT_SESSION_COOKIE_NAME,
      attributes:
        config2.sessionCookie?.attributes ?? defaultSessionCookieAttributes,
      expires: config2.sessionCookie?.expires ?? true,
    };
    this.passwordHash = {
      generate: config2.passwordHash?.generate ?? generateScryptHash,
      validate: config2.passwordHash?.validate ?? validateScryptHash,
    };
    this.middleware = config2.middleware ?? lucia();
    this.allowedSubdomains =
      !config2.csrfProtection || typeof config2.csrfProtection === 'boolean'
        ? []
        : config2.csrfProtection.allowedSubDomains;
    this.experimental = {
      debugMode: config2.experimental?.debugMode ?? false,
    };
    debug.init(this.experimental.debugMode);
  }
  getUserAttributes;
  getSessionAttributes;
  transformDatabaseUser = (databaseUser) => {
    const attributes = this.getUserAttributes(databaseUser);
    return {
      ...attributes,
      userId: databaseUser.id,
    };
  };
  transformDatabaseKey = (databaseKey) => {
    const [providerId, ...providerUserIdSegments] = databaseKey.id.split(':');
    const providerUserId = providerUserIdSegments.join(':');
    const userId = databaseKey.user_id;
    const isPasswordDefined = !!databaseKey.hashed_password;
    return {
      providerId,
      providerUserId,
      userId,
      passwordDefined: isPasswordDefined,
    };
  };
  transformDatabaseSession = (databaseSession, context) => {
    const attributes = this.getSessionAttributes(databaseSession);
    const active = isWithinExpiration(databaseSession.active_expires);
    return {
      ...attributes,
      user: context.user,
      sessionId: databaseSession.id,
      activePeriodExpiresAt: new Date(Number(databaseSession.active_expires)),
      idlePeriodExpiresAt: new Date(Number(databaseSession.idle_expires)),
      state: active ? 'active' : 'idle',
      fresh: context.fresh,
    };
  };
  getDatabaseUser = async (userId) => {
    const databaseUser = await this.adapter.getUser(userId);
    if (!databaseUser) {
      throw new LuciaError('AUTH_INVALID_USER_ID');
    }
    return databaseUser;
  };
  getDatabaseSession = async (sessionId) => {
    const databaseSession = await this.adapter.getSession(sessionId);
    if (!databaseSession) {
      debug.session.fail('Session not found', sessionId);
      throw new LuciaError('AUTH_INVALID_SESSION_ID');
    }
    if (!isValidDatabaseSession(databaseSession)) {
      debug.session.fail(
        `Session expired at ${new Date(Number(databaseSession.idle_expires))}`,
        sessionId
      );
      throw new LuciaError('AUTH_INVALID_SESSION_ID');
    }
    return databaseSession;
  };
  getDatabaseSessionAndUser = async (sessionId) => {
    if (this.adapter.getSessionAndUser) {
      const [databaseSession2, databaseUser2] =
        await this.adapter.getSessionAndUser(sessionId);
      if (!databaseSession2) {
        debug.session.fail('Session not found', sessionId);
        throw new LuciaError('AUTH_INVALID_SESSION_ID');
      }
      if (!isValidDatabaseSession(databaseSession2)) {
        debug.session.fail(
          `Session expired at ${new Date(
            Number(databaseSession2.idle_expires)
          )}`,
          sessionId
        );
        throw new LuciaError('AUTH_INVALID_SESSION_ID');
      }
      return [databaseSession2, databaseUser2];
    }
    const databaseSession = await this.getDatabaseSession(sessionId);
    const databaseUser = await this.getDatabaseUser(databaseSession.user_id);
    return [databaseSession, databaseUser];
  };
  validateSessionIdArgument = (sessionId) => {
    if (!sessionId) {
      debug.session.fail('Empty session id');
      throw new LuciaError('AUTH_INVALID_SESSION_ID');
    }
  };
  getNewSessionExpiration = (sessionExpiresIn) => {
    const activePeriodExpiresAt = new Date(
      /* @__PURE__ */ new Date().getTime() +
        (sessionExpiresIn?.activePeriod ?? this.sessionExpiresIn.activePeriod)
    );
    const idlePeriodExpiresAt = new Date(
      activePeriodExpiresAt.getTime() +
        (sessionExpiresIn?.idlePeriod ?? this.sessionExpiresIn.idlePeriod)
    );
    return { activePeriodExpiresAt, idlePeriodExpiresAt };
  };
  getUser = async (userId) => {
    const databaseUser = await this.getDatabaseUser(userId);
    const user = this.transformDatabaseUser(databaseUser);
    return user;
  };
  createUser = async (options) => {
    const userId = options.userId ?? generateRandomString(15);
    const userAttributes = options.attributes ?? {};
    const databaseUser = {
      ...userAttributes,
      id: userId,
    };
    if (options.key === null) {
      await this.adapter.setUser(databaseUser, null);
      return this.transformDatabaseUser(databaseUser);
    }
    const keyId = createKeyId(
      options.key.providerId,
      options.key.providerUserId
    );
    const password = options.key.password;
    const hashedPassword = password
      ? await this.passwordHash.generate(password)
      : null;
    await this.adapter.setUser(databaseUser, {
      id: keyId,
      user_id: userId,
      hashed_password: hashedPassword,
    });
    return this.transformDatabaseUser(databaseUser);
  };
  updateUserAttributes = async (userId, attributes) => {
    await this.adapter.updateUser(userId, attributes);
    return await this.getUser(userId);
  };
  deleteUser = async (userId) => {
    await this.adapter.deleteSessionsByUserId(userId);
    await this.adapter.deleteKeysByUserId(userId);
    await this.adapter.deleteUser(userId);
  };
  useKey = async (providerId, providerUserId, password) => {
    const keyId = createKeyId(providerId, providerUserId);
    const databaseKey = await this.adapter.getKey(keyId);
    if (!databaseKey) {
      debug.key.fail('Key not found', keyId);
      throw new LuciaError('AUTH_INVALID_KEY_ID');
    }
    const hashedPassword = databaseKey.hashed_password;
    if (hashedPassword) {
      debug.key.info('Key includes password');
      if (!password) {
        debug.key.fail('Key password not provided', keyId);
        throw new LuciaError('AUTH_INVALID_PASSWORD');
      }
      if (hashedPassword.startsWith('$2a')) {
        throw new LuciaError('AUTH_OUTDATED_PASSWORD');
      }
      const validPassword = await this.passwordHash.validate(
        password,
        hashedPassword
      );
      if (!validPassword) {
        debug.key.fail('Incorrect key password', password);
        throw new LuciaError('AUTH_INVALID_PASSWORD');
      }
      debug.key.notice('Validated key password');
    } else {
      debug.key.info('No password included in key');
    }
    debug.key.success('Validated key', keyId);
    return this.transformDatabaseKey(databaseKey);
  };
  getSession = async (sessionId) => {
    this.validateSessionIdArgument(sessionId);
    const [databaseSession, databaseUser] =
      await this.getDatabaseSessionAndUser(sessionId);
    const user = this.transformDatabaseUser(databaseUser);
    return this.transformDatabaseSession(databaseSession, {
      user,
      fresh: false,
    });
  };
  getAllUserSessions = async (userId) => {
    const [user, databaseSessions] = await Promise.all([
      this.getUser(userId),
      await this.adapter.getSessionsByUserId(userId),
    ]);
    const validStoredUserSessions = databaseSessions
      .filter((databaseSession) => {
        return isValidDatabaseSession(databaseSession);
      })
      .map((databaseSession) => {
        return this.transformDatabaseSession(databaseSession, {
          user,
          fresh: false,
        });
      });
    return validStoredUserSessions;
  };
  validateSession = async (sessionId) => {
    this.validateSessionIdArgument(sessionId);
    const [databaseSession, databaseUser] =
      await this.getDatabaseSessionAndUser(sessionId);
    const user = this.transformDatabaseUser(databaseUser);
    const session = this.transformDatabaseSession(databaseSession, {
      user,
      fresh: false,
    });
    if (session.state === 'active') {
      debug.session.success('Validated session', session.sessionId);
      return session;
    }
    const { activePeriodExpiresAt, idlePeriodExpiresAt } =
      this.getNewSessionExpiration();
    await this.adapter.updateSession(session.sessionId, {
      active_expires: activePeriodExpiresAt.getTime(),
      idle_expires: idlePeriodExpiresAt.getTime(),
    });
    const renewedDatabaseSession = {
      ...session,
      idlePeriodExpiresAt,
      activePeriodExpiresAt,
      fresh: true,
    };
    return renewedDatabaseSession;
  };
  createSession = async (options) => {
    const { activePeriodExpiresAt, idlePeriodExpiresAt } =
      this.getNewSessionExpiration();
    const userId = options.userId;
    const sessionId = options?.sessionId ?? generateRandomString(40);
    const attributes = options.attributes;
    const databaseSession = {
      ...attributes,
      id: sessionId,
      user_id: userId,
      active_expires: activePeriodExpiresAt.getTime(),
      idle_expires: idlePeriodExpiresAt.getTime(),
    };
    const [user] = await Promise.all([
      this.getUser(userId),
      this.adapter.setSession(databaseSession),
    ]);
    return this.transformDatabaseSession(databaseSession, {
      user,
      fresh: false,
    });
  };
  updateSessionAttributes = async (sessionId, attributes) => {
    this.validateSessionIdArgument(sessionId);
    await this.adapter.updateSession(sessionId, attributes);
    return this.getSession(sessionId);
  };
  invalidateSession = async (sessionId) => {
    this.validateSessionIdArgument(sessionId);
    await this.adapter.deleteSession(sessionId);
    debug.session.notice('Invalidated session', sessionId);
  };
  invalidateAllUserSessions = async (userId) => {
    await this.adapter.deleteSessionsByUserId(userId);
  };
  deleteDeadUserSessions = async (userId) => {
    const databaseSessions = await this.adapter.getSessionsByUserId(userId);
    const deadSessionIds = databaseSessions
      .filter((databaseSession) => {
        return !isValidDatabaseSession(databaseSession);
      })
      .map((databaseSession) => databaseSession.id);
    await Promise.all(
      deadSessionIds.map((deadSessionId) => {
        this.adapter.deleteSession(deadSessionId);
      })
    );
  };
  validateRequestOrigin = (request2) => {
    if (request2.method === null) {
      debug.request.fail('Request method unavailable');
      throw new LuciaError('AUTH_INVALID_REQUEST');
    }
    if (request2.url === null) {
      debug.request.fail('Request url unavailable');
      throw new LuciaError('AUTH_INVALID_REQUEST');
    }
    if (
      request2.method.toUpperCase() !== 'GET' &&
      request2.method.toUpperCase() !== 'HEAD'
    ) {
      const requestOrigin = request2.headers.origin;
      if (!requestOrigin) {
        debug.request.fail('No request origin available');
        throw new LuciaError('AUTH_INVALID_REQUEST');
      }
      try {
        const url = new URL(request2.url);
        if (
          !isAllowedUrl(requestOrigin, {
            url,
            allowedSubdomains: this.allowedSubdomains,
          })
        ) {
          throw new LuciaError('AUTH_INVALID_REQUEST');
        }
        debug.request.info('Valid request origin', requestOrigin);
      } catch {
        debug.request.fail('Invalid origin string', requestOrigin);
        throw new LuciaError('AUTH_INVALID_REQUEST');
      }
    } else {
      debug.request.notice('Skipping CSRF check');
    }
  };
  readSessionCookie = (cookieHeader) => {
    if (!cookieHeader) {
      debug.request.info('No session cookie found');
      return null;
    }
    const cookies = parseCookie(cookieHeader);
    const sessionId = cookies[this.sessionCookie.name] ?? null;
    if (sessionId) {
      debug.request.info('Found session cookie', sessionId);
    } else {
      debug.request.info('No session cookie found');
    }
    return sessionId;
  };
  readBearerToken = (authorizationHeader) => {
    if (!authorizationHeader) {
      debug.request.info('No token found in authorization header');
      return null;
    }
    const [authScheme, token2] = authorizationHeader.split(' ');
    if (authScheme !== 'Bearer') {
      debug.request.fail(
        'Invalid authorization header auth scheme',
        authScheme
      );
      return null;
    }
    return token2 ?? null;
  };
  handleRequest = (...args) => {
    const middleware = this.middleware;
    return new AuthRequest(this, {
      context: middleware({
        args,
        env: this.env,
        sessionCookieName: this.sessionCookie.name,
      }),
      csrfProtectionEnabled: this.csrfProtectionEnabled,
    });
  };
  createSessionCookie = (session) => {
    return createSessionCookie(session, {
      env: this.env,
      ...this.sessionCookie,
    });
  };
  createKey = async (options) => {
    const keyId = createKeyId(options.providerId, options.providerUserId);
    let hashedPassword = null;
    if (options.password !== null) {
      hashedPassword = await this.passwordHash.generate(options.password);
    }
    const userId = options.userId;
    await this.adapter.setKey({
      id: keyId,
      user_id: userId,
      hashed_password: hashedPassword,
    });
    return {
      providerId: options.providerId,
      providerUserId: options.providerUserId,
      passwordDefined: !!options.password,
      userId,
    };
  };
  deleteKey = async (providerId, providerUserId) => {
    const keyId = createKeyId(providerId, providerUserId);
    await this.adapter.deleteKey(keyId);
  };
  getKey = async (providerId, providerUserId) => {
    const keyId = createKeyId(providerId, providerUserId);
    const databaseKey = await this.adapter.getKey(keyId);
    if (!databaseKey) {
      throw new LuciaError('AUTH_INVALID_KEY_ID');
    }
    const key = this.transformDatabaseKey(databaseKey);
    return key;
  };
  getAllUserKeys = async (userId) => {
    const [databaseKeys] = await Promise.all([
      await this.adapter.getKeysByUserId(userId),
      this.getUser(userId),
    ]);
    return databaseKeys.map((databaseKey) =>
      this.transformDatabaseKey(databaseKey)
    );
  };
  updateKeyPassword = async (providerId, providerUserId, password) => {
    const keyId = createKeyId(providerId, providerUserId);
    const hashedPassword =
      password === null ? null : await this.passwordHash.generate(password);
    await this.adapter.updateKey(keyId, {
      hashed_password: hashedPassword,
    });
    await this.getKey(providerId, providerUserId);
  };
};

// ../../node_modules/@lucia-auth/adapter-prisma/dist/prisma.js
var prismaAdapter = (client, modelNames) => {
  const getModels = () => {
    if (!modelNames) {
      return {
        User: client['user'],
        Session: client['session'] ?? null,
        Key: client['key'],
      };
    }
    return {
      User: client[modelNames.user],
      Session: modelNames.session ? client[modelNames.session] : null,
      Key: client[modelNames.key],
    };
  };
  const { User, Session, Key } = getModels();
  return (LuciaError2) => {
    return {
      getUser: async (userId) => {
        return await User.findUnique({
          where: {
            id: userId,
          },
        });
      },
      setUser: async (user, key) => {
        if (!key) {
          await User.create({
            data: user,
          });
          return;
        }
        try {
          await client.$transaction([
            User.create({
              data: user,
            }),
            Key.create({
              data: key,
            }),
          ]);
        } catch (e2) {
          const error = e2;
          if (error.code === 'P2002' && error.message?.includes('`id`'))
            throw new LuciaError2('AUTH_DUPLICATE_KEY_ID');
          throw error;
        }
      },
      deleteUser: async (userId) => {
        await User.deleteMany({
          where: {
            id: userId,
          },
        });
      },
      updateUser: async (userId, partialUser) => {
        await User.update({
          data: partialUser,
          where: {
            id: userId,
          },
        });
      },
      getSession: async (sessionId) => {
        if (!Session) {
          throw new Error('Session table not defined');
        }
        const result = await Session.findUnique({
          where: {
            id: sessionId,
          },
        });
        if (!result) return null;
        return transformPrismaSession(result);
      },
      getSessionsByUserId: async (userId) => {
        if (!Session) {
          throw new Error('Session table not defined');
        }
        const sessions = await Session.findMany({
          where: {
            user_id: userId,
          },
        });
        return sessions.map((session) => transformPrismaSession(session));
      },
      setSession: async (session) => {
        if (!Session) {
          throw new Error('Session table not defined');
        }
        try {
          await Session.create({
            data: session,
          });
        } catch (e2) {
          const error = e2;
          if (error.code === 'P2003') {
            throw new LuciaError2('AUTH_INVALID_USER_ID');
          }
          throw error;
        }
      },
      deleteSession: async (sessionId) => {
        if (!Session) {
          throw new Error('Session table not defined');
        }
        await Session.delete({
          where: {
            id: sessionId,
          },
        });
      },
      deleteSessionsByUserId: async (userId) => {
        if (!Session) {
          throw new Error('Session table not defined');
        }
        await Session.deleteMany({
          where: {
            user_id: userId,
          },
        });
      },
      updateSession: async (userId, partialSession) => {
        if (!Session) {
          throw new Error('Session table not defined');
        }
        await Session.update({
          data: partialSession,
          where: {
            id: userId,
          },
        });
      },
      getKey: async (keyId) => {
        return await Key.findUnique({
          where: {
            id: keyId,
          },
        });
      },
      getKeysByUserId: async (userId) => {
        return await Key.findMany({
          where: {
            user_id: userId,
          },
        });
      },
      setKey: async (key) => {
        try {
          await Key.create({
            data: key,
          });
        } catch (e2) {
          const error = e2;
          if (error.code === 'P2003') {
            throw new LuciaError2('AUTH_INVALID_USER_ID');
          }
          if (error.code === 'P2002' && error.message?.includes('`id`')) {
            throw new LuciaError2('AUTH_DUPLICATE_KEY_ID');
          }
          throw error;
        }
      },
      deleteKey: async (keyId) => {
        await Key.delete({
          where: {
            id: keyId,
          },
        });
      },
      deleteKeysByUserId: async (userId) => {
        await Key.deleteMany({
          where: {
            user_id: userId,
          },
        });
      },
      updateKey: async (userId, partialKey) => {
        await Key.update({
          data: partialKey,
          where: {
            id: userId,
          },
        });
      },
    };
  };
};
var transformPrismaSession = (sessionData) => {
  const { active_expires, idle_expires: idleExpires, ...data } = sessionData;
  return {
    ...data,
    active_expires: Number(active_expires),
    idle_expires: Number(idleExpires),
  };
};

// src/environments/environment.ts
var environment = {
  production: false,
};

// src/app/prisma.ts
var import_client = __toESM(require_client2());
var prismaClient = new import_client.PrismaClient();

// ../../node_modules/lucia/dist/polyfill/node.js
var import_crypto2 = require('crypto');
var isObject = (maybeObject) => {
  return (
    maybeObject !== null &&
    typeof maybeObject === 'object' &&
    !Array.isArray(maybeObject)
  );
};
var _global = globalThis;
var polyfillCrypto = () => {
  if (!('crypto' in _global)) {
    _global.crypto = import_crypto2.webcrypto;
    return;
  }
  if (!isObject(_global.crypto)) {
    _global.crypto = import_crypto2.webcrypto;
    return;
  }
  if (Object.isFrozen(_global.crypto)) {
    _global.crypto = import_crypto2.webcrypto;
    return;
  }
  const getRandomValuesDefined =
    'getRandomValues' in _global.crypto &&
    _global.crypto.getRandomValues !== void 0;
  const randomUUIDDefined =
    'randomUUID' in _global.crypto && _global.crypto.randomUUID !== void 0;
  const subtleDefined =
    'subtle' in _global.crypto && _global.crypto.subtle !== void 0;
  if (!getRandomValuesDefined) {
    _global.crypto.getRandomValues = import_crypto2.webcrypto.getRandomValues;
  }
  if (!randomUUIDDefined) {
    _global.crypto.randomUUID = import_crypto2.webcrypto.randomUUID;
  }
  if (!subtleDefined) {
    _global.crypto.subtle = import_crypto2.webcrypto.subtle;
  }
};
polyfillCrypto();

// src/app/lucia.ts
var env = environment.production ? 'PROD' : 'DEV';
var auth = lucia2({
  env,
  adapter: prismaAdapter(prismaClient),
  middleware: express(),
  getUserAttributes: (data) => {
    return {
      email: data.email,
      emailVerified: data.emailVerified,
      firstName: data.firstName,
      lastName: data.lastName,
      role: data.role,
    };
  },
});

// src/app/user.ts
var import_client2 = __toESM(require_client2());

// src/app/audit-logs.ts
var createAuditLog = async (details) => {
  const auditLog = await prismaClient.auditLog.create({
    data: {
      action: details.action,
      keyId: details.entityId,
      meta: details.meta,
    },
  });
  if (auditLog.meta !== null && !isRecord(auditLog.meta)) {
    const message =
      'Failed to create audit log: meta field is not a JSON object';
    throw new DatabaseSchemaError(message);
  }
  const auditLogConverted = {
    id: auditLog.id,
    action: auditLog.action,
    createdAt: auditLog.createdAt,
    entityId: auditLog.keyId ?? void 0,
    meta: auditLog.meta ?? void 0,
  };
  return auditLogConverted;
};
function isRecord(obj) {
  if (obj === null) return false;
  if (typeof obj !== 'object') return false;
  if (Array.isArray(obj)) return false;
  if (Object.getOwnPropertySymbols(obj).length > 0) return false;
  return Object.getOwnPropertyNames(obj).every(
    (prop) => typeof obj[prop] === 'string'
  );
}

// src/app/user.ts
var createUser = async (details, password, authorization) => {
  if (!isValidEmail(details.email)) {
    throw new InvalidEmailError();
  }
  if (details.role !== 'HACKER' /* HACKER */) {
    if (authorization === void 0) {
      throw new UnauthorizedError(
        'NO_ACCESS_TOKEN' /* NO_ACCESS_TOKEN */,
        'NO_ACCESS_TOKEN' /* NO_ACCESS_TOKEN */
      );
    }
    const user2 = await verifyToken(authorization?.accessToken);
    if (user2 === null) {
      throw new UnauthorizedError(
        'INVALID_ACCESS_TOKEN' /* INVALID_ACCESS_TOKEN */,
        'INVALID_ACCESS_TOKEN' /* INVALID_ACCESS_TOKEN */
      );
    }
    if (user2.role !== 'ADMIN' /* ADMIN */) {
      throw new UnauthorizedError(
        'PROTECTED_BY_POLICIES' /* PROTECTED_BY_POLICIES */,
        'PROTECTED_BY_POLICIES' /* PROTECTED_BY_POLICIES */
      );
    }
  }
  const key =
    password === void 0
      ? null
      : {
          providerId: 'email',
          providerUserId: details.email.toLowerCase(),
          password,
        };
  let user;
  try {
    user = await auth.createUser({
      key,
      attributes: {
        email: details.email.toLowerCase(),
        emailVerified: false,
        role: details.role,
        firstName: details.firstName,
        lastName: details.lastName,
      },
    });
  } catch (e2) {
    if (e2 instanceof import_client2.Prisma.PrismaClientKnownRequestError) {
      if (e2.code === 'P2002') {
        throw new DuplicateEmailError();
      }
    }
    throw e2;
  }
  await createAuditLog({
    action: 'CREATE_USER' /* CREATE_USER */,
    entity: 'HibiscusUser' /* HibiscusUser */,
    entityId: user.userId,
  });
  return toHibiscusUser(user);
};
var isValidEmail = (maybeEmail) => {
  const emailRegexp = /^.+@.+$/;
  return emailRegexp.test(maybeEmail);
};
var toHibiscusUser = (authUser) => {
  return {
    id: authUser.userId,
    email: authUser.email,
    emailVerified: authUser.emailVerified,
    firstName: authUser.firstName,
    lastName: authUser.lastName,
    role: authUser.role,
  };
};

// src/app/token.ts
var issueAccessToken = async (userId) => {
  const session = await auth.createSession({ userId, attributes: {} });
  await createAuditLog({
    action: 'CREATE_KEY' /* CREATE_KEY */,
    entity: 'Key' /* Key */,
    entityId: session.sessionId,
    meta: { userId },
  });
  return session.sessionId;
};
var verifyToken = async (accessToken2) => {
  try {
    const session = await auth.validateSession(accessToken2);
    return toHibiscusUser(session.user);
  } catch (e2) {
    if (e2 instanceof LuciaError) {
      if (e2.message === 'AUTH_INVALID_SESSION_ID') {
        throw new UnauthorizedError(
          'INVALID_ACCESS_TOKEN' /* INVALID_ACCESS_TOKEN */,
          'Invalid access token'
        );
      }
    }
    throw e2;
  }
};

// src/app/login.ts
var login = async (email, password) => {
  try {
    const key = await auth.useKey('email', email.toLowerCase(), password);
    const accessToken2 = await issueAccessToken(key.userId);
    return accessToken2;
  } catch (e2) {
    if (
      e2 instanceof LuciaError &&
      (e2.message === 'AUTH_INVALID_KEY_ID' ||
        e2.message === 'AUTH_INVALID_PASSWORD')
    ) {
      throw new LoginError();
    }
    throw e2;
  }
};

// src/app/email.ts
var import_client3 = __toESM(require_client2());
var import_resend = __toESM(require_src8());
var MAX_REPEATS_OTP = 5;
var sendEmailVerificationViaPIN = async (
  to2,
  userId,
  pinLength,
  expirationMins = 30
) => {
  const otp = await generateEmailVerificationToken(
    userId,
    pinLength,
    expirationMins,
    MAX_REPEATS_OTP
  );
  const apiKey = process.env.RESEND_API_KEY;
  const emailFrom = process.env.RESEND_EMAIL_FROM;
  if (apiKey === void 0) {
    throw new MissingEnvError('RESEND_API_KEY');
  }
  if (emailFrom === void 0) {
    throw new MissingEnvError('RESEND_EMAIL_FROM');
  }
  let resend;
  try {
    resend = new import_resend.Resend(apiKey);
  } catch (e2) {
    throw new ResendError('Failed to initialize email service');
  }
  try {
    await resend.emails.send({
      from: emailFrom,
      to: [to2],
      subject: 'HackSC OTP',
      html: `${otp}`,
    });
  } catch (e2) {
    throw new ResendError('Failed to send verification email');
  }
};
var sendEmailInvite = async (to2, userId, pinLength, expirationMins = 30) => {
  const otp = await generateEmailVerificationToken(
    userId,
    pinLength,
    expirationMins,
    MAX_REPEATS_OTP
  );
  const apiKey = process.env.RESEND_API_KEY;
  const emailFrom = process.env.RESEND_EMAIL_FROM;
  if (apiKey === void 0) {
    throw new MissingEnvError('RESEND_API_KEY');
  }
  if (emailFrom === void 0) {
    throw new MissingEnvError('RESEND_EMAIL_FROM');
  }
  let resend;
  try {
    resend = new import_resend.Resend(apiKey);
  } catch (e2) {
    throw new ResendError('Failed to initialize email service');
  }
  try {
    await resend.emails.send({
      from: emailFrom,
      to: [to2],
      subject: 'HackSC Invitation',
      html: `sso.hacksc.com/invite/${otp}`,
    });
  } catch (e2) {
    throw new ResendError('Failed to send invitation email');
  }
};
var verifyEmail = async (pin, targetUserId) => {
  const token2 = await prismaClient.emailVerificationToken.findFirst({
    where: { id: pin, user_id: targetUserId },
  });
  if (token2 === null) {
    return 'INVALID_OTP' /* INVALID_OTP */;
  }
  if (!isWithinExpiration(token2.expires)) {
    return 'EXPIRED_OTP' /* EXPIRED_OTP */;
  }
  await prismaClient.emailVerificationToken.deleteMany({
    where: { user_id: targetUserId },
  });
  const user = await auth.getUser(targetUserId);
  await auth.invalidateAllUserSessions(user.userId);
  await auth.updateUserAttributes(user.userId, { emailVerified: true });
  await createAuditLog({
    action: 'VERIFY_USER' /* VERIFY_USER */,
    entity: 'HibiscusUser' /* HibiscusUser */,
    entityId: user.userId,
  });
  return 'VALIDATION_SUCCESS' /* VALIDATION_SUCCESS */;
};
var generateEmailVerificationToken = async (
  userId,
  pinLength,
  expirationMins,
  maxRepeats
) => {
  const storedUserTokens = await prismaClient.emailVerificationToken.findMany({
    where: { user_id: userId },
  });
  if (storedUserTokens.length > 0) {
    const expiredTokens = storedUserTokens
      .filter((token2) => !isWithinExpiration(Number(token2.expires)))
      .map((token2) => token2.user_id);
    await prismaClient.emailVerificationToken.deleteMany({
      where: { id: { in: expiredTokens } },
    });
    const reusableStoredToken = storedUserTokens.find((token2) => {
      return isWithinExpiration(Number(token2.expires) - expirationMins / 2);
    });
    if (reusableStoredToken) return reusableStoredToken.id;
  }
  for (let i = 0; i <= maxRepeats; i++) {
    try {
      const token2 = generateRandomString(pinLength, '0123456789');
      const expires =
        /* @__PURE__ */ new Date().getTime() + expirationMins * 60 * 1e3;
      await prismaClient.emailVerificationToken.create({
        data: {
          id: token2,
          user_id: userId,
          expires,
        },
      });
      return token2;
    } catch (e2) {
      if (e2 instanceof import_client3.Prisma.PrismaClientKnownRequestError) {
        if (e2.code === 'P2002') {
          continue;
        }
      }
      throw e2;
    }
  }
  throw new OTPGenerationError();
};

// src/app/signup.ts
var OTP_LENGTH = 6;
var INVITE_OTP_LENGTH = 40;
var INVITE_EXPIRY_MINUTES = 7 * 24 * 60;
var signup = async (details, password) => {
  const user = await createUser(details, password);
  await sendEmailVerificationViaPIN(user.email, user.id, OTP_LENGTH);
  return user;
};
var invite = async (details, authorization) => {
  const newUser = await createUser(details, void 0, authorization);
  await sendEmailInvite(
    newUser.email,
    newUser.id,
    INVITE_OTP_LENGTH,
    INVITE_EXPIRY_MINUTES
  );
  return newUser;
};

// src/app/logout.ts
var logout = async (accessToken2) => {
  try {
    const session = await auth.getSession(accessToken2);
    await auth.invalidateSession(session.sessionId);
  } catch (e2) {
    if (e2 instanceof LuciaError && e2.message === 'AUTH_INVALID_SESSION_ID') {
      throw new UnauthorizedError(
        'INVALID_ACCESS_TOKEN' /* INVALID_ACCESS_TOKEN */,
        'INVALID_ACCESS_TOKEN' /* INVALID_ACCESS_TOKEN */
      );
    }
    throw e2;
  }
};

// src/app.ts
var app = (0, import_express.default)();
app.use(import_express.default.json());
app.post('/:role/register', async (req, res, next) => {
  const role = req.params.role.toUpperCase();
  if (!validRole(role)) {
    return next(new RoleError(400, 'Invalid role.'));
  }
  const { firstName, lastName, email, password } = req.body;
  const accessToken2 = auth.readBearerToken(req.headers.authorization);
  try {
    let user;
    if (role === 'HACKER' /* HACKER */) {
      user = await signup({ firstName, lastName, email, role }, password);
    } else {
      user = await invite(
        { firstName, lastName, email, role },
        accessToken2 ? { accessToken: accessToken2 } : void 0
      );
    }
    const userToken = await issueAccessToken(user.id);
    return res.json(
      createResponseBody({
        data: {
          id: user.id,
          accessToken: userToken,
        },
      })
    );
  } catch (error) {
    if (error instanceof UnauthorizedError) {
      return res.status(401).json(
        createResponseBody({
          meta: {
            statusCode: 401,
            message: 'User is not authorized',
            code: error.cause,
          },
        })
      );
    } else if (
      error instanceof InvalidEmailError ||
      error instanceof DuplicateEmailError
    ) {
      return res.status(400).json(
        createResponseBody({
          meta: {
            statusCode: 400,
            message: error.message,
          },
        })
      );
    } else {
      return next(error);
    }
  }
});
app.post('/login', async (req, res, next) => {
  const { email, password } = req.body;
  try {
    const accessToken2 = await login(email, password);
    return res.json(
      createResponseBody({
        data: {
          accessToken: accessToken2,
        },
      })
    );
  } catch (error) {
    if (error instanceof LoginError) {
      return res.status(401).json(
        createResponseBody({
          meta: {
            statusCode: 401,
            message: error.message,
          },
        })
      );
    } else {
      return next(error);
    }
  }
});
app.post('/logout', async (req, res, next) => {
  const accessToken2 = auth.readBearerToken(req.headers.authorization);
  if (accessToken2 === null) {
    return res.status(401).json(
      createResponseBody({
        meta: {
          statusCode: 401,
          message: 'No active session',
          code: 'NO_ACCESS_TOKEN' /* NO_ACCESS_TOKEN */,
        },
      })
    );
  }
  try {
    await logout(accessToken2);
    return res.json(createResponseBody());
  } catch (error) {
    if (error instanceof UnauthorizedError) {
      return res.status(401).json(
        createResponseBody({
          meta: {
            statusCode: 401,
            message: 'User is not authorized',
            code: error.cause,
          },
        })
      );
    } else {
      return next(error);
    }
  }
});
app.post('/verify-email', async (req, res, next) => {
  const { pin } = req.body;
  const accessToken2 = auth.readBearerToken(req.headers.authorization);
  if (accessToken2 === null) {
    return res.status(401).json(
      createResponseBody({
        meta: {
          statusCode: 401,
          message: 'No active session',
          code: 'NO_ACCESS_TOKEN' /* NO_ACCESS_TOKEN */,
        },
      })
    );
  }
  let user;
  try {
    user = await verifyToken(accessToken2);
  } catch (error) {
    if (error instanceof UnauthorizedError) {
      return res.status(401).json(
        createResponseBody({
          meta: {
            statusCode: 401,
            message: 'User is not authorized',
            code: error.cause,
          },
        })
      );
    } else {
      return next(error);
    }
  }
  if (user === null) {
    return res.status(401).json(
      createResponseBody({
        meta: {
          statusCode: 401,
          message: 'Invalid session',
          code: 'INVALID_ACCESS_TOKEN' /* INVALID_ACCESS_TOKEN */,
        },
      })
    );
  }
  try {
    const result = await verifyEmail(pin, user.id);
    if (result === 'VALIDATION_SUCCESS' /* VALIDATION_SUCCESS */) {
      const newToken = await issueAccessToken(user.id);
      return res.json(
        createResponseBody({
          data: {
            accessToken: newToken,
          },
        })
      );
    } else if (result === 'INVALID_OTP' /* INVALID_OTP */) {
      return res.status(400).json(
        createResponseBody({
          meta: {
            statusCode: 400,
            message: 'Invalid OTP',
          },
        })
      );
    } else if (result === 'EXPIRED_OTP' /* EXPIRED_OTP */) {
      return res.status(400).json(
        createResponseBody({
          meta: {
            statusCode: 400,
            message: 'Expired OTP',
          },
        })
      );
    }
  } catch (error) {
    return next(error);
  }
});
app.post('/verify-token', async (req, res, next) => {
  const { accessToken: accessToken2 } = req.body;
  try {
    if (accessToken2 === null) {
      throw new MissingParameterError('accessToken');
    }
    const user = await verifyToken(accessToken2);
    return res.json(
      createResponseBody({
        data: {
          user,
        },
      })
    );
  } catch (e2) {
    if (
      e2 instanceof MissingParameterError ||
      e2 instanceof UnauthorizedError
    ) {
      console.log(e2.message);
      return res.status(400).json(
        createResponseBody({
          meta: {
            statusCode: 400,
            message: e2.message,
          },
        })
      );
    } else {
      return next(e2);
    }
  }
});
app.use((err, _req, res, _next) => {
  if (err instanceof RoleError) {
    return res.status(err.httpCode).json(
      createResponseBody({
        meta: {
          statusCode: err.httpCode,
          message: err.message,
        },
      })
    );
  } else {
    console.error('Unknown error', err);
    return res.status(500).json(
      createResponseBody({
        meta: {
          statusCode: 500,
          message: 'Something went wrong',
        },
      })
    );
  }
});
var app_default = app;

// src/tests/app.test.ts
var import_supertest = __toESM(require_supertest());
var adminAccessToken = '';
var accessToken = '';
beforeAll(async () => {
  const tablenames =
    await prismaClient.$queryRaw`SELECT tablename FROM pg_tables WHERE schemaname='public'`;
  const tables = tablenames
    .map(({ tablename }) => tablename)
    .filter((name) => name !== '_prisma_migrations')
    .map((name) => `"public"."${name}"`)
    .join(', ');
  try {
    await prismaClient.$executeRawUnsafe(`TRUNCATE TABLE ${tables} CASCADE;`);
  } catch (error) {
    console.error({ error });
    throw error;
  }
  const admin = await auth.createUser({
    key: null,
    attributes: {
      email: 'example@hacksc.com',
      emailVerified: true,
      role: 'ADMIN' /* ADMIN */,
      firstName: 'Hack',
      lastName: 'SC',
    },
  });
  const adminSession = await auth.createSession({
    userId: admin.userId,
    attributes: {},
  });
  adminAccessToken = adminSession.sessionId;
  const hacker = await auth.createUser({
    key: {
      providerId: 'email',
      providerUserId: 'delivered@resend.dev',
      password: 'hackerabc123',
    },
    attributes: {
      email: 'delivered@resend.dev',
      emailVerified: true,
      role: 'HACKER' /* HACKER */,
      firstName: 'Hack',
      lastName: 'SC',
    },
  });
  const hackerSession = await auth.createSession({
    userId: hacker.userId,
    attributes: {},
  });
  accessToken = hackerSession.sessionId;
});
describe('/:role/register', () => {
  test('signs up a hacker', async () => {
    const res = await (0, import_supertest.default)(app_default)
      .post('/hacker/register')
      .send({
        firstName: 'Example',
        lastName: 'Hacker',
        email: 'delivered+hacker@resend.dev',
        password: 'abc123',
      })
      .set('Accept', 'application/json');
    expect(res.headers['content-type']).toMatch(/json/);
    expect(res.status).toEqual(200);
    expect(res.body).toHaveProperty('data');
    expect(res.body.data).toHaveProperty('id');
    expect(res.body.data.id).not.toBe('');
    expect(res.body.data).toHaveProperty('accessToken');
    expect(res.body.data.accessToken).not.toBe('');
  });
  test('signs up a user with a higher role', async () => {
    const res = await (0, import_supertest.default)(app_default)
      .post('/volunteer/register')
      .send({
        firstName: 'Example',
        lastName: 'Volunteer',
        email: 'delivered+volunteer@resend.dev',
        password: 'abc123',
      })
      .set('Accept', 'application/json')
      .set('Authorization', `Bearer ${adminAccessToken}`);
    expect(res.headers['content-type']).toMatch(/json/);
    expect(res.status).toEqual(200);
    expect(res.body).toHaveProperty('data');
    expect(res.body.data).toHaveProperty('id');
    expect(res.body.data.id).not.toBe('');
    expect(res.body.data).toHaveProperty('accessToken');
    expect(res.body.data.accessToken).not.toBe('');
  });
  test('does not sign up a user with a higher role if not invoked by admin', async () => {
    const res = await (0, import_supertest.default)(app_default)
      .post('/sponsor/register')
      .send({
        firstName: 'Example',
        lastName: 'Volunteer',
        email: 'delivered+sponsor@resend.dev',
        password: 'abc123',
      })
      .set('Accept', 'application/json')
      .set('Authorization', `Bearer ${accessToken}`);
    expect(res.headers['content-type']).toMatch(/json/);
    expect(res.status).toEqual(401);
  });
  test('does not sign up a user with a duplicate email', async () => {
    const res = await (0, import_supertest.default)(app_default)
      .post('/hacker/register')
      .send({
        firstName: 'Example',
        lastName: 'Hacker',
        email: 'delivered@resend.dev',
        password: 'abc123',
      })
      .set('Accept', 'application/json');
    expect(res.headers['content-type']).toMatch(/json/);
    expect(res.status).toEqual(400);
  });
});
describe('/login', () => {
  test('logs in a user', async () => {
    const res = await (0, import_supertest.default)(app_default)
      .post('/login')
      .send({
        email: 'delivered@resend.dev',
        password: 'hackerabc123',
      })
      .set('Accept', 'application/json');
    expect(res.headers['content-type']).toMatch(/json/);
    expect(res.status).toEqual(200);
    expect(res.body).toHaveProperty('data');
    expect(res.body.data).toHaveProperty('accessToken');
    expect(res.body.data.accessToken).not.toBe('');
  });
  test('does not log in a user if an incorrect password is provided', async () => {
    const res = await (0, import_supertest.default)(app_default)
      .post('/login')
      .send({
        email: 'delivered@resend.dev',
        password: 'abc123',
      })
      .set('Accept', 'application/json');
    expect(res.headers['content-type']).toMatch(/json/);
    expect(res.status).toEqual(401);
  });
});
describe('/logout', () => {
  test('invalidates access token upon logging out', async () => {
    const hacker = await auth.createUser({
      key: {
        providerId: 'email',
        providerUserId: 'delivered+hacker1@resend.dev',
        password: 'hackerabc123',
      },
      attributes: {
        email: 'delivered+hacker1@resend.dev',
        emailVerified: true,
        role: 'HACKER' /* HACKER */,
        firstName: 'Hack',
        lastName: 'SC',
      },
    });
    const hackerSession = await auth.createSession({
      userId: hacker.userId,
      attributes: {},
    });
    const accessToken2 = hackerSession.sessionId;
    const res = await (0, import_supertest.default)(app_default)
      .post('/logout')
      .set('Authorization', `Bearer ${accessToken2}`);
    expect(res.status).toEqual(200);
    await expect(auth.getSession(accessToken2)).rejects.toThrow(LuciaError);
  });
  test('returns error when invalid access token is provided', async () => {
    const res = await (0, import_supertest.default)(app_default)
      .post('/logout')
      .set('Authorization', `Bearer abcdef`);
    expect(res.headers['content-type']).toMatch(/json/);
    expect(res.status).toEqual(401);
  });
});
describe('/verify-email', () => {
  let unverifiedAccessToken = '';
  let unverifiedUserId = '';
  let i = 0;
  beforeEach(async () => {
    const hacker = await auth.createUser({
      key: null,
      attributes: {
        email: `delivered+unverified${i}@resend.dev`,
        emailVerified: true,
        role: 'HACKER' /* HACKER */,
        firstName: 'Hack',
        lastName: 'SC',
      },
    });
    const hackerSession = await auth.createSession({
      userId: hacker.userId,
      attributes: {},
    });
    unverifiedAccessToken = hackerSession.sessionId;
    unverifiedUserId = hacker.userId;
    i++;
  });
  test('verifies email when given OTP', async () => {
    const otp = await generateEmailVerificationToken(
      unverifiedUserId,
      6,
      30,
      5
    );
    const res = await (0, import_supertest.default)(app_default)
      .post('/verify-email')
      .send({
        pin: otp,
      })
      .set('Accept', 'application/json')
      .set('Authorization', `Bearer ${unverifiedAccessToken}`);
    expect(res.headers['content-type']).toMatch(/json/);
    expect(res.status).toEqual(200);
    expect(res.body).toHaveProperty('data');
    expect(res.body.data).toHaveProperty('accessToken');
    expect(res.body.data.accessToken).not.toBe('');
  });
  test('does not verify email when given incorrect OTP', async () => {
    await generateEmailVerificationToken(unverifiedUserId, 6, 30, 5);
    const res = await (0, import_supertest.default)(app_default)
      .post('/verify-email')
      .send({
        pin: 'abcdef',
      })
      .set('Accept', 'application/json')
      .set('Authorization', `Bearer ${unverifiedAccessToken}`);
    expect(res.headers['content-type']).toMatch(/json/);
    expect(res.status).toEqual(400);
  });
  test('does not verify email when given expired OTP', async () => {
    await generateEmailVerificationToken(unverifiedUserId, 6, -1, 5);
    const res = await (0, import_supertest.default)(app_default)
      .post('/verify-email')
      .send({
        pin: 'abcdef',
      })
      .set('Accept', 'application/json')
      .set('Authorization', `Bearer ${unverifiedAccessToken}`);
    expect(res.headers['content-type']).toMatch(/json/);
    expect(res.status).toEqual(400);
  });
  test('does not verify email if session is invalid', async () => {
    await generateEmailVerificationToken(unverifiedUserId, 6, 30, 5);
    const res = await (0, import_supertest.default)(app_default)
      .post('/verify-email')
      .send({
        pin: 'abcdef',
      })
      .set('Accept', 'application/json')
      .set('Authorization', `Bearer abc`);
    expect(res.headers['content-type']).toMatch(/json/);
    expect(res.status).toEqual(401);
  });
});
describe('/verify-token', () => {
  test('verifies access token and returns user', async () => {
    const res = await (0, import_supertest.default)(app_default)
      .post('/verify-token')
      .send({ accessToken })
      .set('Accept', 'application/json');
    expect(res.headers['content-type']).toMatch(/json/);
    expect(res.status).toEqual(200);
    expect(res.body).toHaveProperty('data');
    expect(res.body.data).toHaveProperty('user');
    expect(res.body.data.user).toHaveProperty('role');
    expect(res.body.data.user.role).toBe('HACKER' /* HACKER */);
  });
  test('does not verify token if token is invalid', async () => {
    const res = await (0, import_supertest.default)(app_default)
      .post('/verify-token')
      .send({ accessToken: 'abcdef' })
      .set('Accept', 'application/json');
    expect(res.headers['content-type']).toMatch(/json/);
    expect(res.status).toEqual(400);
  });
});
/*! Bundled license information:

depd/index.js:
  (*!
   * depd
   * Copyright(c) 2014-2018 Douglas Christopher Wilson
   * MIT Licensed
   *)

bytes/index.js:
  (*!
   * bytes
   * Copyright(c) 2012-2014 TJ Holowaychuk
   * Copyright(c) 2015 Jed Watson
   * MIT Licensed
   *)

content-type/index.js:
  (*!
   * content-type
   * Copyright(c) 2015 Douglas Christopher Wilson
   * MIT Licensed
   *)

statuses/index.js:
  (*!
   * statuses
   * Copyright(c) 2014 Jonathan Ong
   * Copyright(c) 2016 Douglas Christopher Wilson
   * MIT Licensed
   *)

toidentifier/index.js:
  (*!
   * toidentifier
   * Copyright(c) 2016 Douglas Christopher Wilson
   * MIT Licensed
   *)

http-errors/index.js:
  (*!
   * http-errors
   * Copyright(c) 2014 Jonathan Ong
   * Copyright(c) 2016 Douglas Christopher Wilson
   * MIT Licensed
   *)

destroy/index.js:
  (*!
   * destroy
   * Copyright(c) 2014 Jonathan Ong
   * Copyright(c) 2015-2022 Douglas Christopher Wilson
   * MIT Licensed
   *)

unpipe/index.js:
  (*!
   * unpipe
   * Copyright(c) 2015 Douglas Christopher Wilson
   * MIT Licensed
   *)

raw-body/index.js:
  (*!
   * raw-body
   * Copyright(c) 2013-2014 Jonathan Ong
   * Copyright(c) 2014-2022 Douglas Christopher Wilson
   * MIT Licensed
   *)

ee-first/index.js:
  (*!
   * ee-first
   * Copyright(c) 2014 Jonathan Ong
   * MIT Licensed
   *)

on-finished/index.js:
  (*!
   * on-finished
   * Copyright(c) 2013 Jonathan Ong
   * Copyright(c) 2014 Douglas Christopher Wilson
   * MIT Licensed
   *)

body-parser/lib/read.js:
  (*!
   * body-parser
   * Copyright(c) 2014-2015 Douglas Christopher Wilson
   * MIT Licensed
   *)

media-typer/index.js:
  (*!
   * media-typer
   * Copyright(c) 2014 Douglas Christopher Wilson
   * MIT Licensed
   *)

mime-db/index.js:
  (*!
   * mime-db
   * Copyright(c) 2014 Jonathan Ong
   * Copyright(c) 2015-2022 Douglas Christopher Wilson
   * MIT Licensed
   *)

mime-types/index.js:
  (*!
   * mime-types
   * Copyright(c) 2014 Jonathan Ong
   * Copyright(c) 2015 Douglas Christopher Wilson
   * MIT Licensed
   *)

type-is/index.js:
  (*!
   * type-is
   * Copyright(c) 2014 Jonathan Ong
   * Copyright(c) 2014-2015 Douglas Christopher Wilson
   * MIT Licensed
   *)

body-parser/lib/types/json.js:
  (*!
   * body-parser
   * Copyright(c) 2014 Jonathan Ong
   * Copyright(c) 2014-2015 Douglas Christopher Wilson
   * MIT Licensed
   *)

body-parser/lib/types/raw.js:
  (*!
   * body-parser
   * Copyright(c) 2014-2015 Douglas Christopher Wilson
   * MIT Licensed
   *)

body-parser/lib/types/text.js:
  (*!
   * body-parser
   * Copyright(c) 2014-2015 Douglas Christopher Wilson
   * MIT Licensed
   *)

body-parser/lib/types/urlencoded.js:
  (*!
   * body-parser
   * Copyright(c) 2014 Jonathan Ong
   * Copyright(c) 2014-2015 Douglas Christopher Wilson
   * MIT Licensed
   *)

body-parser/index.js:
  (*!
   * body-parser
   * Copyright(c) 2014-2015 Douglas Christopher Wilson
   * MIT Licensed
   *)

merge-descriptors/index.js:
  (*!
   * merge-descriptors
   * Copyright(c) 2014 Jonathan Ong
   * Copyright(c) 2015 Douglas Christopher Wilson
   * MIT Licensed
   *)

encodeurl/index.js:
  (*!
   * encodeurl
   * Copyright(c) 2016 Douglas Christopher Wilson
   * MIT Licensed
   *)

escape-html/index.js:
  (*!
   * escape-html
   * Copyright(c) 2012-2013 TJ Holowaychuk
   * Copyright(c) 2015 Andreas Lubbe
   * Copyright(c) 2015 Tiancheng "Timothy" Gu
   * MIT Licensed
   *)

parseurl/index.js:
  (*!
   * parseurl
   * Copyright(c) 2014 Jonathan Ong
   * Copyright(c) 2014-2017 Douglas Christopher Wilson
   * MIT Licensed
   *)

finalhandler/index.js:
  (*!
   * finalhandler
   * Copyright(c) 2014-2022 Douglas Christopher Wilson
   * MIT Licensed
   *)

express/lib/router/layer.js:
  (*!
   * express
   * Copyright(c) 2009-2013 TJ Holowaychuk
   * Copyright(c) 2013 Roman Shtylman
   * Copyright(c) 2014-2015 Douglas Christopher Wilson
   * MIT Licensed
   *)

methods/index.js:
  (*!
   * methods
   * Copyright(c) 2013-2014 TJ Holowaychuk
   * Copyright(c) 2015-2016 Douglas Christopher Wilson
   * MIT Licensed
   *)

express/lib/router/route.js:
  (*!
   * express
   * Copyright(c) 2009-2013 TJ Holowaychuk
   * Copyright(c) 2013 Roman Shtylman
   * Copyright(c) 2014-2015 Douglas Christopher Wilson
   * MIT Licensed
   *)

express/lib/router/index.js:
  (*!
   * express
   * Copyright(c) 2009-2013 TJ Holowaychuk
   * Copyright(c) 2013 Roman Shtylman
   * Copyright(c) 2014-2015 Douglas Christopher Wilson
   * MIT Licensed
   *)

express/lib/middleware/init.js:
  (*!
   * express
   * Copyright(c) 2009-2013 TJ Holowaychuk
   * Copyright(c) 2013 Roman Shtylman
   * Copyright(c) 2014-2015 Douglas Christopher Wilson
   * MIT Licensed
   *)

express/lib/middleware/query.js:
  (*!
   * express
   * Copyright(c) 2009-2013 TJ Holowaychuk
   * Copyright(c) 2013 Roman Shtylman
   * Copyright(c) 2014-2015 Douglas Christopher Wilson
   * MIT Licensed
   *)

express/lib/view.js:
  (*!
   * express
   * Copyright(c) 2009-2013 TJ Holowaychuk
   * Copyright(c) 2013 Roman Shtylman
   * Copyright(c) 2014-2015 Douglas Christopher Wilson
   * MIT Licensed
   *)

safe-buffer/index.js:
  (*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> *)

content-disposition/index.js:
  (*!
   * content-disposition
   * Copyright(c) 2014-2017 Douglas Christopher Wilson
   * MIT Licensed
   *)

etag/index.js:
  (*!
   * etag
   * Copyright(c) 2014-2016 Douglas Christopher Wilson
   * MIT Licensed
   *)

fresh/index.js:
  (*!
   * fresh
   * Copyright(c) 2012 TJ Holowaychuk
   * Copyright(c) 2016-2017 Douglas Christopher Wilson
   * MIT Licensed
   *)

range-parser/index.js:
  (*!
   * range-parser
   * Copyright(c) 2012-2014 TJ Holowaychuk
   * Copyright(c) 2015-2016 Douglas Christopher Wilson
   * MIT Licensed
   *)

send/index.js:
  (*!
   * send
   * Copyright(c) 2012 TJ Holowaychuk
   * Copyright(c) 2014-2022 Douglas Christopher Wilson
   * MIT Licensed
   *)

forwarded/index.js:
  (*!
   * forwarded
   * Copyright(c) 2014-2017 Douglas Christopher Wilson
   * MIT Licensed
   *)

proxy-addr/index.js:
  (*!
   * proxy-addr
   * Copyright(c) 2014-2016 Douglas Christopher Wilson
   * MIT Licensed
   *)

express/lib/utils.js:
  (*!
   * express
   * Copyright(c) 2009-2013 TJ Holowaychuk
   * Copyright(c) 2014-2015 Douglas Christopher Wilson
   * MIT Licensed
   *)

express/lib/application.js:
  (*!
   * express
   * Copyright(c) 2009-2013 TJ Holowaychuk
   * Copyright(c) 2013 Roman Shtylman
   * Copyright(c) 2014-2015 Douglas Christopher Wilson
   * MIT Licensed
   *)

negotiator/index.js:
  (*!
   * negotiator
   * Copyright(c) 2012 Federico Romero
   * Copyright(c) 2012-2014 Isaac Z. Schlueter
   * Copyright(c) 2015 Douglas Christopher Wilson
   * MIT Licensed
   *)

accepts/index.js:
  (*!
   * accepts
   * Copyright(c) 2014 Jonathan Ong
   * Copyright(c) 2015 Douglas Christopher Wilson
   * MIT Licensed
   *)

express/lib/request.js:
  (*!
   * express
   * Copyright(c) 2009-2013 TJ Holowaychuk
   * Copyright(c) 2013 Roman Shtylman
   * Copyright(c) 2014-2015 Douglas Christopher Wilson
   * MIT Licensed
   *)

cookie/index.js:
  (*!
   * cookie
   * Copyright(c) 2012-2014 Roman Shtylman
   * Copyright(c) 2015 Douglas Christopher Wilson
   * MIT Licensed
   *)

vary/index.js:
  (*!
   * vary
   * Copyright(c) 2014-2017 Douglas Christopher Wilson
   * MIT Licensed
   *)

express/lib/response.js:
  (*!
   * express
   * Copyright(c) 2009-2013 TJ Holowaychuk
   * Copyright(c) 2014-2015 Douglas Christopher Wilson
   * MIT Licensed
   *)

serve-static/index.js:
  (*!
   * serve-static
   * Copyright(c) 2010 Sencha Inc.
   * Copyright(c) 2011 TJ Holowaychuk
   * Copyright(c) 2014-2016 Douglas Christopher Wilson
   * MIT Licensed
   *)

express/lib/express.js:
  (*!
   * express
   * Copyright(c) 2009-2013 TJ Holowaychuk
   * Copyright(c) 2013 Roman Shtylman
   * Copyright(c) 2014-2015 Douglas Christopher Wilson
   * MIT Licensed
   *)

express/index.js:
  (*!
   * express
   * Copyright(c) 2009-2013 TJ Holowaychuk
   * Copyright(c) 2013 Roman Shtylman
   * Copyright(c) 2014-2015 Douglas Christopher Wilson
   * MIT Licensed
   *)

@prisma/client/runtime/library.js:
  (*!
   *  decimal.js v10.4.3
   *  An arbitrary-precision Decimal type for JavaScript.
   *  https://github.com/MikeMcl/decimal.js
   *  Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>
   *  MIT Licence
   *)

react/cjs/react.production.min.js:
  (**
   * @license React
   * react.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react/cjs/react.development.js:
  (**
   * @license React
   * react.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react-dom/cjs/react-dom-server-legacy.node.production.min.js:
  (**
   * @license React
   * react-dom-server-legacy.node.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react-dom/cjs/react-dom-server.node.production.min.js:
  (**
   * @license React
   * react-dom-server.node.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react-dom/cjs/react-dom-server-legacy.node.development.js:
  (**
   * @license React
   * react-dom-server-legacy.node.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react-dom/cjs/react-dom-server.node.development.js:
  (**
   * @license React
   * react-dom-server.node.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

is-whitespace/index.js:
  (*!
   * is-whitespace <https://github.com/jonschlinkert/is-whitespace>
   *
   * Copyright (c) 2014-2015, Jon Schlinkert.
   * Licensed under the MIT License.
   *)

is-extendable/index.js:
  (*!
   * is-extendable <https://github.com/jonschlinkert/is-extendable>
   *
   * Copyright (c) 2015, Jon Schlinkert.
   * Licensed under the MIT License.
   *)

is-buffer/index.js:
  (*!
   * Determine if an object is a Buffer
   *
   * @author   Feross Aboukhadijeh <https://feross.org>
   * @license  MIT
   *)

condense-newlines/index.js:
  (*!
   * condense-newlines <https://github.com/jonschlinkert/condense-newlines>
   *
   * Copyright (c) 2014 Jon Schlinkert, contributors.
   * Licensed under the MIT License
   *)

pretty/index.js:
  (*!
   * pretty <https://github.com/jonschlinkert/pretty>
   *
   * Copyright (c) 2013-2015, 2017, Jon Schlinkert.
   * Released under the MIT License.
   *)

methods/index.js:
  (*!
   * methods
   * Copyright(c) 2013-2014 TJ Holowaychuk
   * Copyright(c) 2015-2016 Douglas Christopher Wilson
   * MIT Licensed
   *)

mime-db/index.js:
  (*!
   * mime-db
   * Copyright(c) 2014 Jonathan Ong
   * Copyright(c) 2015-2022 Douglas Christopher Wilson
   * MIT Licensed
   *)

mime-types/index.js:
  (*!
   * mime-types
   * Copyright(c) 2014 Jonathan Ong
   * Copyright(c) 2015 Douglas Christopher Wilson
   * MIT Licensed
   *)
*/
