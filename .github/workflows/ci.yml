name: CI on affected monorepo apps code

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  prepare:
    name: Install project dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            '**/node_modules'
            '**/.venv'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/poetry.lock') }}
      - uses: cachix/install-nix-action@v19
        with:
          github_access_token: ${{ secrets.BOT_GITHUB_PAT }}
      - uses: cachix/cachix-action@v12
        with:
          name: hacksc
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: nix-shell --run "yarn install --frozen-lockfile"
      - run: nix-shell --run "yarn nx run-many --target=install --parallel"
  build:
    name: Build affected apps
    runs-on: ubuntu-latest
    env:
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
      SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
      SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
      SENTRY_LOG_LEVEL: info
    needs: prepare
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/cache@v3
        with:
          path: |
            '**/node_modules'
            '**/.venv'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/poetry.lock') }}
      - uses: cachix/install-nix-action@v19
        with:
          github_access_token: ${{ secrets.BOT_GITHUB_PAT }}
      - uses: cachix/cachix-action@v12
        with:
          name: hacksc
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v3
      - run: nix-shell --run "yarn install --frozen-lockfile"
      - run: nix-shell --run "yarn nx affected:build --parallel --base=${{ env.NX_BASE }} --head=${{ env.NX_HEAD }}"
  test:
    name: Test affected apps
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/cache@v3
        with:
          path: |
            '**/node_modules'
            '**/.venv'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/poetry.lock') }}
      - uses: cachix/install-nix-action@v19
        with:
          github_access_token: ${{ secrets.BOT_GITHUB_PAT }}
      - uses: cachix/cachix-action@v12
        with:
          name: hacksc
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v3
      - run: nix-shell --run "yarn install --frozen-lockfile"
      - run: nix-shell --run "yarn nx affected:test --parallel --base=${{ env.NX_BASE }} --head=${{ env.NX_HEAD }}"
  lint:
    name: Lint affected apps
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/cache@v3
        with:
          path: |
            '**/node_modules'
            '**/.venv'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/poetry.lock') }}
      - uses: cachix/install-nix-action@v19
        with:
          github_access_token: ${{ secrets.BOT_GITHUB_PAT }}
      - uses: cachix/cachix-action@v12
        with:
          name: hacksc
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v3
      - run: nix-shell --run "yarn install --frozen-lockfile"
      - run: nix-shell --run "yarn nx affected:lint --parallel --base=${{ env.NX_BASE }} --head=${{ env.NX_HEAD }}"
