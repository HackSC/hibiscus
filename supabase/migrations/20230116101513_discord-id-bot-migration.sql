create table "public"."discord_invites" (
    "id" bigint generated by default as identity not null,
    "invite_used" boolean not null,
    "time_invite_used" timestamp with time zone,
    "user_profile_id" uuid,
    "invite_code" text
);


alter table "public"."discord_invites" enable row level security;

create table "public"."discord_profiles" (
    "id" bigint generated by default as identity not null,
    "discord_profile" text,
    "user_profile_id" uuid
);


alter table "public"."discord_profiles" enable row level security;

alter table "public"."roles" add column "discord_role_id" text;

CREATE UNIQUE INDEX discord_invites_pkey ON public.discord_invites USING btree (id);

CREATE UNIQUE INDEX discord_profiles_pkey ON public.discord_profiles USING btree (id);

alter table "public"."discord_invites" add constraint "discord_invites_pkey" PRIMARY KEY using index "discord_invites_pkey";

alter table "public"."discord_profiles" add constraint "discord_profiles_pkey" PRIMARY KEY using index "discord_profiles_pkey";

alter table "public"."discord_invites" add constraint "discord_invites_user_profile_id_fkey" FOREIGN KEY (user_profile_id) REFERENCES user_profiles(user_id) not valid;

alter table "public"."discord_invites" validate constraint "discord_invites_user_profile_id_fkey";


